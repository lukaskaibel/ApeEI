Informatikunterricht und Didaktik der Informatik   Johannes Magenheim  & Ralf Romeike   Das Schulfach Informatik ist noch relativ jung, war und ist aber dennoch bereits unter verschiedensten Namen und Konzeptionen in der Schule zu finden, bspw. a ls Rechnerkunde, Informationstechnische Grundbildung, Medienbildung oder gar Digitalkunde. Im Folg enden beziehen wir uns auf Informatikunterricht, der informatische Bildung zum Ziel und somit die Methoden, Prinzipien und Arbeitsweisen der Wissenschaft ‚ Informatik ‘ zum Gegenstand hat. Hierbei stellen wir vor allem die Situation in Deutschland dar. Da zu nehmend auch in anderen Ländern Informatikunterricht in den Fächerkanon aufgenommen wird, fließt an verschiedenen Stellen auch die internationale Perspektive mit ein.     A. Geschichtlich bedeutsame Kontexte und Entwicklungen zum Fach und zur Fachdidaktik   1. Geschichte und Verständnis des Unterrichtsfachs Informatik und des Fachlichen  Die Geschichte des Unterrichtsfachs ‚ Informatik ‘ ist unmittelbar an die junge Geschichte d er Bezugswissenschaft ‚Informatik ‘ geknüpft. Informatik ist die „Wissenschaft von der systematischen Darstellung, Speicherung, Verarbeitung und Übertragung von Informationen, besonders der automatischen Verarbeitung mithilfe von Digitalrechnern“  (Claus & Schwill, 2006) .  Dabei knüpft Informatik an ‚vortechnische‘ Traditionen aus der Frühzeit der Menschheitsgeschichte an. Zur Darstellung von Information verwendete der Mensch von Anbeginn an Zeichen und Piktogramme (Höhlenmalerei), später folgte die Schrift. Für numerische Information haben das Festha lten ( Speichern ) und Verarbeiten  tausende Jahre alte Bezüge: Viele frühe Zivilisationen erschufen hierfür bereits Hilfsmittel, bspw. Rechenstäbchen  (vgl. Tedre, 2014) . Als ältester bekannter nicht -trivialer Algorithmus gilt der euklidische Algorithmus zur Berechnung des größte n gemeinsamen Teiler s zweier natürlicher Zahlen von um 300 v. Chr.. Über die Jahrtausende wurden verschiedenste (Rechen- )Maschinen entwickelt, bspw. der Mechanismus von Antikythera , einem griechischen analogen „Computer“ zur Berechnung  astronomisch- kalendarische r Zusammenhänge, der heute als erster An alogrechner gilt und im 1. Jh. v. Chr. entwickelt wurde  (Bruderer, 2015) . Der Begriff Algorithmus geht auf den Namen des arabischen Mathem atikers und As tronom en Ibn Musa Al -Chwarismi zurück, der im 9. Jh. in seinem Lehrbuch Regeln über das Rechnen mit indischen Ziffern darstellte  (Bruderer, 2015) . Weitere Meilensteine in der automatischen Verarbeitung von Information folgten: Adam Riese beschrieb 1574 die Rechengesetze des (aus Indien  stammenden) Dezimalsystems, we lches nun die Automatisierung des Rechenvorgangs ermöglichte, was von Schickard 1623 mit einer Rechenmaschine realisiert wurde. Leibniz konstruierte 1674 eine Rechenmaschine für die vier Grundrechenarten und entwickelte paral lel dazu das Dualsystem, die Grundlage heutiger Computer. Mit der  Analytical Engine  legte Babbage 1837 einen Entwurf für eine computerähnliche, d.h. programmierbare Rechenmaschine für allgemeine Anwendungen mit Eingabe - (Lochkarten) und Ausgabefunktion vor . Seine Assistentin Lovelace schrieb hierfür das erste komplexe Computerprogramm.  Neben der Darstellung ist auch der Wunsch der Übertragung von Information über weite Entfernungen uralt . Als Beispiele seien hier nur seit p rähistorischer Zeit  verwendete Rauch - und Feuer zeichen oder die optische Telegraphie des 19. Jahrhunderts genannt. Das Entwickeln von Codierungen, sodass Informationen in Daten repräsentiert, automatisiert verarbeitet und übertragen werden können, obliegt heute zumeist der I nformatik. Es wird deutlich, dass die Wurzeln bis hierhin vor allem in der Mathematik und Nachrichtentechnik zu finden sind, gefolgt von Entwicklungen der Elektrotechnik, die zusammen mit der in den 1930er  Jahren entwickelten Booleschen  Logik den Entwurf und die Realisierung digitaler Schaltkreise ermöglichten. In dieser Zeit begann sich Informatik als eigenständige Wissenschaft zu entwickeln  (Tedre, 2014, S. 3) . So wurde mit der nach dem legendären englischen Mathematiker Turing benannten sogenannten Turing- Maschine  1936 ein theoretisches Modell der Arbeitsweise, Möglichkeiten und Grenzen eines Computers eingeführt  (Was ist (nicht) berechenbar?).  Zuse hatte bereits 1934 die Idee, das duale Zahlensystem zum maschinellen Rechnen zu verwenden (Rechenberg, 2000)  und sorgte damit für einen Entwicklungssprung , der es letztlich ermöglichte,  dass die mechanischen Maschinen zu elektronischen Geräten weiterentwickelt werden  konnten.  Der Begriff ‚ Informatik ’ geht auf das  vom französi schen Ingenieur  Philippe Dreyfus aus den Wörtern „ Infor mation + Auto matique “ gebildete Kunstwort ‚ Informatique ‘ zurück, welches durch den damaligen Bundesminister  für Wissenschaft und Forschung Stoltenberg 1968 für den Aufbau der ersten Informatikstudiengänge übernommen und so im deutschen Sprachraum verbreitet wurde  (Coy, 2001) . Zu jener Zeit setzte  nicht nur die Entwicklung der damit verbundenen, sehr dynamischen Wissenschaft  Informatik ein , die bis  heute andauert und regelmäßigen Paradigmenwechseln unterliegt . Auch die Anfänge des Informatikunterrichts  reichen in diese Zeit zurück. Der e rste Informatikunterricht  fand als Wahlfach in der Sekundarstufe in den späten 1960er Jahren statt, einer Zeit, in der bereits einige spektakuläre Leistungen der Computertechnik für die Allgemeinheit spürbar wurden. Ausgangspunkt des noch als ‚ Rechnerkunde ‘ (Frank & Meyer, 1974)  bezeichneten Schulfachs war die Computertechnik mit dem Ziel, ein Verständnis der Hardware realer Datenverarbeitungsanlagen zu vermitteln, wobei ein Fokus auf die mathematisch -technischen Grundlagen der Datenverarbeitung (bspw. binäre Arithmetik, Schaltalgebra und Aussagenlogik) und deren Realisierung (bspw. mit Schaltnetzen, interner Programmsteuerung und den erforderlichen Komponenten des Rechners) gelegt wurde. Es bestand zudem  die Vorstellung, dass mit den ‚Rechnern’ mittels eines Bildungsalgorithmus Lernprogramme für unterschiedliche Schulfächer entwickelt werden könnten. Rechnerkunde sollte auf diese Weise  schulisches  Grundlagenfach für die programmierte Unter weisung im Unterricht werden.  Alsbald wurde allerdings der allgemeinbildende Beitrag dieser Fokussierung  auf mathematisch -technische Grundla gen der Datenverarbeitung  in Frage gestellt: „Die Schüler sollen vielmehr eingeführt werden in Methoden der Struktur ierung, Mathematisierung und Algorithmisierung von Problemkreisen aus verschiedenen Gebieten (d.h. Methoden der Modellbildung und Problemlösung) sowie vor allem in die Methoden des systematischen Programmierens und Möglichkeiten des Einsatzes von Datenvera rbeitungsanlagen zur Behandlung komplexer Aufgaben“  (Brauer & Brauer, 1973) . In diese m Anfang der 1970er Jahre entwickelten Ansatz wurde der Algorithmus als zentraler Begriff und allgemeinbildender Kern eines Informatikunterrichts aufgefasst, was eng verbunden war mit der Anerkennung der Informatik als neuer wissenschaftlicher Disziplin und der zunehmenden Systematisierung der Softwareentwicklung. Mit einem fachwissenschaftspropädeutischen Anspruch sollten die Schülerinnen und Schüler die Gesetze und Methoden der informatischen Problemlösung verstehen lernen und entdecken, dass viele verschiedene Probleme mit derselben Methode bearbeitet werden können. Hierzu gehörte auch das Erlernen einer Programmiersprache als Voraussetzung für die Implementierung. Kern s ollte aber die ‚neue Art des Denkens ‘ sein, in der dynamische Prozesse unter Berücksichtigung von Zeit (sequentielle und parallele Abläufe) und der Darstellung und Speicherung der benötigten (Daten -)Objekte im Vordergrund stehen, deren Resultat ein lauffähiges Programm darstellt. Eine in der Unterrichtspraxis häufig überzogene Algorithmenorientierung führte aber zu Unterricht, der als Programmierkurs wahrgenommen wurde und in dem Algorithmen vor allem als Selbstzweck aber nicht zur Lösung von Problemen hera ngezogen wurden, was den Ansprüchen eines allgemeinbildenden Schulfachs nicht gerecht wurde  (Hubwieser, 2007) . Mitte der 1980er Jahre erfolgte eine Neuausrichtung des Informatikunterrichts, in dem nun weniger der Computer als vielmehr der Benutzer im Mittelpunkt stehen sollte. Geprägt von der inzwischen  auch in Privathaushalten verbreiteten Computertechnik schien es notwendig, Unterricht an der Benutzung/Bedienung der Softwareprodukte auszurichten und somit lebenspraktische Orientierung zu bieten. Ausgangspunkt des auch als ‚ Informationstechnische Grundbildung ‘ bezeichneten Unterrichts waren somit nicht mehr informatische Prinzipien, sondern die (kommerziellen) Produkte der technologischen Entwicklung ( bspw. Textverarbeitung, Tabellenkalkulation, Datenbanksysteme und Graphikanwendungen), mit denen Probleme des Alltags systematisch gelöst werden sollten. Ein tieferes Verständnis der Informatik wurde hierdurch allerdings nicht erreicht  (Hubwieser, 2007) . Die Entwicklung des Unterrichtsfachs orientierte sich dabei bereits in seinem Ursprung an gesellschaftlichen Erfordernissen, die insbesondere durch die Entwicklungen der Computertechnik spürbar werden. So ist es ein (in fast allen Curricula allgemeinbildender Schulen weltweit nachvollziehbarer) Konsens, dass zwar auch Anwendungsfertigkeiten, insbesondere aber Konzeptwissen vermittelt werden sollen (vgl. Gander et al., 2013; The Royal  Society , 2012) . Anwendungsfertigkeiten beziehen sich auf die Nutzung vorhandener Systeme (bspw. Erstellen und Überarbeiten von Dokumenten, Suchen und Ablegen von Informationen) , stellen aber nur einen Nebeneffekt informatischer Bildung dar. Davon abgegrenzt werden Informatik und informatische Bildung mit eigenen Themen und Inhalt en, wie beispielsweise Information und Daten, Algorithmen, (formalen) Sprachen und Automaten, Informatiksystemen und den gesellschaftlichen Auswir kungen. Durch den Bezug auf die grundlegenden Prinzipien, Methoden und Arbeitsweisen der Bezugswissenschaft In formatik können Kompetenzen erworben werden, die nachhaltig wirken und sich nicht nur auf zeitlich befristete Artefakte beziehen. Als solches wird die Beherrschung der grundlegenden Methoden und Werkzeuge der Informatik auch als vierte Kulturtechnik bezeic hnet (Coy, 2008) .  Die Konstruktion von Computern macht dabei heute einen eher geringen Teil der Informatik als Fachwissenschaft  aus – mit entsprechenden Konsequenzen für das Schulfach. Vielmehr untersucht die Informatik „ elementare Strukturen und Prozesse, Prinz ipien und Architekturen von Sys temen, Interaktionen in kleinen, mittleren und w eltumspannenden Netzen, die Konzeption, Entwicklung und Implementierung von Hardware und Software bis hin zu hochkomplexen Anwendungssystemen und der Reflexion über ihren Einsatz und die  Auswirkungen“  (GI, 2006) . Informatik hat sich zu einer Grundlagenwissenschaft entwickelt, deren Werkzeuge, Methoden und Denkweisen  in alle anderen Wissenschaften eindringen und zu neuen Model len und Darstellungsweis en führen (ebd.) . Sie hat vielfältige Innovationen hervorgebracht, die die Gesellschaft maßgeblich verändert haben und weiterhin verändern (Stichwort Digitalisierung , bspw. Simulation als neue wissenschaftliche Methode, Künstliche Intelligenz, Internet, Big Data ).  Entspr echend  gilt heute für den Informatikunterricht : Er soll den Auswirkungen der durch Informatik und Computer durchdrungenen Gesellschaft Rechnung tragen. In der Auseinandersetzung mit den Methoden, Prinzipen und Arbeitsweisen der Wissenschaft Informatik können die Kompetenzen und Denkweisen erworben werden, die notwendig sind, die Grundlagen, Funktions - und Wirkprinzipien digitaler Systeme zu verstehen, sie effizient zu nutzen und deren Auswirkungen zu reflektieren.    2. Ursprünge und Entwicklungen der Didaktik der Informatik  Nachdem die Ausrichtung der Schulinformatik bis Mitte der achtziger Jahre vor allem durch eine engagierte Lehrerschaft und verschiedene, an schulischen Belangen interessierte Fachwissenschaftler geprägt  wurde, erfolgte in den 90er J ahren eine fachliche Neuausrichtung, die mit der allmählichen Etablierung der Didaktik der Informatik  (DDI)  als Teilgebiet der Informatik einhergeht und zu verschiedenen Vorschlägen für die Gestaltung des Schulfachs führte . Mit der Einrichtung der ersten P rofessuren etablierte sich die DDI langsam als Wissenschaft, die das Unterrichtsfach zunehmend auf eine wissenschaftliche Grundlage stellte und sich für eine fachlich adäquate Ausgestaltung des Unterrichts und der Lehrerbildung einsetzte . Dabei folgten die  informatikdidaktischen Ansätze zunächst primär fachwissenschaftlichen Vorgaben. So stellte Schwill (1993)  mit den ‚ Fundamentalen Ideen der Informatik ’ ein Konzept vor, das Inhalte des Unterrichtsfachs danach auswählt, ob sie langfristig und in der Breite der Wissenschaft relevant, auf verschiedenen kognitiven Niveaus vermittelbar und in der Lebenswelt wahrnehmbar sind. Baumann (1993)  stellte fest, dass sich informatisches Problemlösen vor allem in der Entwicklung von Informatiksystemen0F1 zeigt und diese deshalb  eine zentrale Rolle spielen sollten. Hubwieser und Broy (1997)  erachtete n die Fähigkeit zum Umgang mit Information als Ziel des Informatikunterric hts, wodurch die charakteristischen Eigenschaften von Informations - und Kommunikationssystemen verstanden werden sollen. Im Unterricht soll, so Hubwieser und Broy, die informatische Modellierung betont und von Problemstellungen der Praxis aus gegangen werde n. Ein solcher Unterricht durchläuft die Phasen der Problembeschreibung, formalen Modellierung,                                                            1 Als Informatiksystem wird eine spezifische Zusammenstellung von Hardware-, Software - und Netz werkkomponenten bezeichnet, sowie die dazugehörigen nichttechnischen Aspekte, die sich durch die Einbettung in gesellschaftliche Kontexte ergeben.  Realisierung/Simulation bis hin zur Bewertung. Dieser Ansatz wurde grundlegend für die Einführung eines verpflichtenden Unterrichtsfachs in Bayern.  Entsprechend stehen  heute auch in der Didaktik der Informatik Fragen der Anwendungs - und Grundlagenforschung in schulisch relevanter Form im Fokus , wie in den Kapitel 3 und 4 noch detaillierter aufgezeigt werden wird . Einfluss auf den Informatikunterricht nimmt die Informatikdidaktik dabei vor alle auch durch die regelmäßigen Positionspapiere der Gesellschaft für Informatik (GI). So wurden im Jahr 2000 mit den ‚ Empfehlungen für ein Gesamtkonzept der informatischen Bildung‘  (GI, 2000)  Informatik als Bezugswissenschaft heraus gestellt und für das Unterrichtsfach die Fokussierung auf Grundlagen, Methoden, Anwendungen, Arbeitsweisen und die gesellschaftliche Bedeutung von Informatiksystemen vorgeschlagen. Alsbald begann eine breit angelegte Arbeitsgruppe aus Lehrern und Fachdidaktikern mit der Erarbeitung von Bildungsstandards für das Fach Informatik. Im Jahre 2008 wurde dann die Empfehlung ‚ Grundsätze und Standards für die Informatik in der Schule - Bildungsstandards für die Sekundarstufe I ‘ (GI, 2008)  verabschiedet, die de m Ziel einer zeitgemäßen und fachlich substanziellen informatischen Bildung in den Schulen Nachdruck verlieh und einen spürbaren Einfluss auf die folgenden Lehrpläne nahm. Im Zuge des steigenden Einflusses der Digitalisierung auf alle Lebensbereiche wird i nformatische Bildung zunehmend als wesentlicher Baustein der Allgemeinbildung wahrgenommen. Derzeit wird Informatikunterricht in drei Bundesländern (Bayern,  Mecklenburg- Vorpommern , Sachsen ) für alle Schülerinnen und Schüler  als Pflichtfach in der Sekundars tufe I angeboten. Darüber hinaus existieren  in allen Bundesländern unterschiedlichste Angebote im Wahl (pflicht) unterricht ab der Sekundarstufe I bis hin zum Abitur (vgl. Starruß, 2010) .  Einfluss hat zunehmend auch das i m internationalen Bildungsbereich ei nflussreiche Konzept des ‚Computational Thinking ‘. In England, Neuseeland oder der Schweiz  hat dieses  bei der  Einführung eines für alle Schülerinnen und Schüler verpflichtenden Schulfachs geholfen . “Computational Thinking is the thought processes involved in formulating problems and their solutions so that the solutions are represented in a form that can be effectively carried out by an information -processing agent (eg. combinations of humans and machines)”  (Wing, 2006) . Damit rücken  Konzepte wie Logisches Denken, Abstraktion, Algorithmen, Dekomposition und Evaluation sowie Arbeitsweisen wie Experimentieren, Kreativität, Fehlerfinden und Kollaboration in den Fokus. Diese sind notwendi g, um ein Problem  oder eine Fragestellung  so zu bearbeiten , dass ein Comput er bei der Lösung helfen kann (Barefoot, 2017) . Konzeptwissen der Informatik hilft hierbei, digitale Medien nicht nur effizient und effektiv zu benutzen (vgl. Voss, 2006) , sondern sie auch zu verstehen, weshalb im Kontext der bildungsbezogenen Strategien z ur Digitalisierung  dem Stellenwert der informatischen Bildung  zunehmend Rechnung getragen wird.  Dabei ist die Informatikdidaktik  mit dem Problem  konfrontiert , dass bis  heute die mit früheren Anwendungspraxen von Lehrkräften verbundenen Erfahrungen, überlieferte Unterrichtsmaterialien und Bücher in nicht geringem Maße die Vorstellungen, Denkweisen und Erwartungen von Lehrkräften, Eltern und Bildungsverantwortlichen prägen . Es bleibt eine Herausforderung der DDI, das inzwischen recht stabi le Fachverständnis, das sich in den letzten 20 Jahren als Konsens gebildet  hat, inhaltlich und methodisch abzusichern und zugleich die  fachliche Weiterentwicklung der Informatik aufzugreifen und für den Informatikunterricht fachdidaktisch aufzuarbeiten  (bspw. Big Data  (Grillenberger & Romeike, 2017) , Agile Methoden der Softwareentwicklung  (Kastl & Romeike, 2015) ). Jüngere Ansätze, die auch durch internationale Entwicklungen bestärkt werden, fordern Informatikunterricht bereits in jüngeren Jahren , was derzeit in einer verstärkten Hinwendung zur Primarstufe und ersten Versuchen im Kindergarten resultiert (Bergner et al., 2018) .  B. Lernen im Fach Informatik und seine fachdidaktische Erforschung  3. Ziele, Inhalte und Kompetenzen des Informatikunter richts und der informatischen Bildung   Die didaktische Diskussion über Ziele, Inhalte und Methoden des  Unterrichtsfach s ‚Informatik ’ und Kompetenzen, die Schülerinnen und Schüler hier entwickeln sollen, i st seit jeher  durch einen starken Legitimationsdruck geprägt  gewesen . Dies führt e und führt  dazu, dass in Curricula zu m Informatik unterricht  oft das Ziel leitend ist, den allgemeinbildenden Charakter des Unterrichtsfaches im Kanon der etablierten Fächer nachzuweisen.  Dabei wird zumeist der eigenständige Wert informatischer Bildung in einer in vielen Bereichen durch Digitalisierung geprägten Gesellschaft  betont . Ein zentrales Argument ist in diesem Zusammenhang, dass d as Verstehen wesentlicher informatischer Prinzipien w ie das Strukturieren, Verarbeiten, Speichern und Verteilen von Daten und der kompetente Umgang mit Informatiksystemen als ‚Vierte Kulturtechnik’ anzusehen sei. Auf diese Weise wird trotz der ingenieurwissenschaftlichen Wurzeln des Faches und inhaltlicher Ü berschneidungen zur Mathematik der besondere Stellenwert des Faches hervorgehoben. Dabei wird die Entwicklung von Informatiksystemen als Ergebnis eines auf normativen Entscheidungen beruhenden Gestaltungsprozesses begr iffen. Informatische Bildung hat in di esem Sinne dazu bei zutragen , die vermeintlich alternativlose Zweckrationalität von Informatiksystemen kritisch zu hinterfragen und Schülerinnen und Schüler zur  kritischen Nutzung und ggf. Gestaltung derartiger  Systeme zu befähigen. 1F2 Als Orientierungspunkte  sind dabei  die folgenden Schlüsselfragen  verbreitet :  (1) Was:  Welches sind die zentralen Inhalte des Unterrichtsfachs Informatik?  (2) Warum:  Nach welchen Kriterien werden die Inhalte aus der Vielfalt der informatischen Themen der Fachwissenschaft ausgewählt, und welche spezifische allgemeinbildende Bedeutung kommt ihnen zu?  (3) Wozu : Welches sind die zentralen Bildungsziele des Unterrichtsfachs In formatik?  (4) Wie: Mit welchen spezifischen Unterrichtsmethoden sollen die Inhalte im Informatikunterricht vermittelt werden und in welcher Relation stehen diese zu den fachwissenschaftlichen Methoden der Informatik?  (5) Womit : Welche spezifischen Medien können im  Unterrichtsfach eingesetzt werden und  welche Bedeutung kommt dabei professionellen Entwicklungswerkzeugen der Informatik zu? (6) Für wen : Für welche Zielgruppen soll Informatik bzw. informatische Bildung in den einzelnen schulischen Organisationsform en angeboten werden?  (vgl. Magenheim, 2008; Magenheim & Schulte, 2006; Schubert & Schwill, 2011) . Neben diesen Schlüsselfragen ist  für die Begründung von Inhalten und Zielen des Unterrichtsfachs Informatik auch die  Entwicklung der zugehörigen Fachw issenschaf t von Bedeutung . Diese ist z.T. nämlich durch eine relative Kurzlebigkeit angewandte r fachwissenschaftliche r Methoden, Gegenstandsbereichen und Werkzeugen gekennzeichnet . Schwill (1993)  hat vor diesem Hintergrund in Anlehnung an entwicklungspsychologische Überlegungen von Bruner (1966)  mit seinem Konzept der ‚fundamentalen Ideen der Informatik’ Kriterien zur Identifikation stabiler fachlicher Gegenstandsbereiche geliefert, die unabhängig von fachwissenschaftlichen ‚Moden‘ auch als Kategorien zur Auswahl geeigneter Lerninhalte dienen können. Diese Kriterien sind:  • Horizontalkriterium (Fachinhalt ist in vielen Teildisziplinen des Faches Informatik relevant),  • Vertikalkriterium (Fachinhalt ist auf unterschiedlichen kog nitiven Niveaustufen erschließbar),                                                             2  Das in der Curriculumdiskussion seit jeher bekannte Problem der normativen Fundierung (vgl. Robinsohn, 1967)  wurde in der fachdidaktischen Diskussion der Informatik im Hinblick auf die allgemeinbildende Funktion des Faches vor allem mit Bezug auf Klafki (1996)  und auf Bussmann und Heymann (1987)  geführt. Verschiedene fachdidaktische Ansätze betonten und betonen den Beitrag des Unterrichtsfachs ‚Informatik’ zum Verständnis und implizit zur Bewältigung des für das 21. Jahrhundert grundlegenden Schlüsselproblems  ‚Informations - und Kommunikationstechnologien’ und der damit verbundenen Schlüsselkompetenzen.  • Zeitkriterium (Fachinhalt ist über einen längeren Zeitraum von Bedeutung für das Fach Informatik),  • Sinnkriterium (Fachinhalt lässt sich über die Erfahrung der Zielgruppe in ihrer Alltagswelt erschließen) und  • Zielkrite rium (Fachinhalt erschließt einen Bezug zu aktuellen Forschungsfragen des Faches Informatik).  Als fundamentale Ideen der Informatik, die den genannten Kriterien genügen, werden z. B.  ‚Algorithmisierung’, ‚Sprache’ und ‚strukturierte Zerlegung’ genannt . Diese abstrakten Konzepte (Masterideen) stellen zentrale Säulen der informatischen Modellbildung dar , die ihrerseits  in Unterkategorien eingeteilt werden  können. Zu nennen sind beispielsweise ‚Algorithmisierung’ in ‚Entwurfsparadigmen’, ‚Programmierkonzept e’, ‚Ablauf’ und ‚Evaluation’ . Bei allen handelt es sich um  wesentliche Aufgabengebiete der Software -Entwicklung und der informatischen Systemgestaltung. Anknüpfungspunkte für die Begründung relevanter fachwissenschaftlicher Inhalte im Informatikunterricht  liefert überdies der internationale Disku rs, etwa der Beitrag ‚Great Principles of Computing’ von Denning (2004)  oder internationale Empfehlungen zur Gestaltung von Informatikcurricula in den Bereichen ‚Higher’ und ‚Secondary Education’  (ACM, 2003, 2004; CSTA, 2011; Mulder & van Weert, 2000) . Fast alle fachdidaktische n Ansätze im deutschsprachigen Raum greifen  zumindest einige der erläuterten informatischen Leitideen auf , um Inhalte und Zielsetzungen des Schulfaches Informatik aus ihrer  jeweiligen Perspektive zu begründen. Nachfolgend sollen besonders einflussreiche Konzepte in ihren inhaltlichen Akzenten und Zielen skizziert werden.  1. In einer frühen Phase des Informatikunterrichts, in der zwar kleinere Hardwaresysteme, aber kaum verfü gbare Anwendersoftware vorhanden war, konzentrierte sich der Unterricht auf die hardwarenahe Programmierung von Computern (hardwareorientierter Ansatz ) und deren potenzielle Fähigkeit zur programmierten Unterweisung  (Frank & Meyer, 1974) . Auf diese Weise s ollte Schülerinnen und Schüler n ein fundamentales Verständnis für einfache Rechnerarchitekturen und Grundlagen hardwarenaher Programmierung vermittelt werden. Mit der weiteren fachwissenschaftlichen Entwicklung rückte die Softwarenutzung und deren Bedeutun g für die informatische Bildung immer stärker in den Mittelpunkt. Gleichzeitig wurde die Beziehung zwischen Computer und Informatik im Hinblick auf fachliches Lehren und Lernen  diskutiert. Mittermeir betont in diesem Zusammenhang  allerdings , dass Informatikunterricht nicht auf die Computernutzung reduziert werden dürfe. In der Informatik gehe es „doch eigentlich nicht um den Computer, sondern um konstruierte (also technische) Systeme, die es erlauben, Daten (im weitesten Sinne) so zu interpr etieren, dass Aktionen bewirkt werden“ (Mittermeir, 2010, S. 57) . Eine Gegenposition vertr itt Rechenberg, der argumentiert, dass „die Informatik sich nicht mit Informationsprozessen in Gesellschaft und Natur beschäftigt“. Man müsse „darauf beharren, daß Informatik heute die Wissenschaft und Technik vom Computer und seinen Anwendungen ist, also Computerwissenschaft“  (Rechenberg, 2010, S. 47) . Allerdings ist mit Brandhofer zu konstatieren, dass eine Trennung von Informatik und Computer(anwendung) in der fachdidaktischen Diskussion kaum stattfindet  (Brandhofer, 2014, S. 3) . Die Zielsetzungen der meisten informatikdidaktischen Konzepte beinhalten daher sowohl die Vermittlung fundamentaler Kompetenzen in der Programmierung eines Computers als auch von Kenntnissen über seine Anwendungen und gesellschaftlichen Auswirkungen. 2F3 2. Im algorithmenorientierten Ansatz  (z. B.  Nievergelt, 1993)  soll Schülerinnen und Schülern der zentrale Stellenwert von Algorithmen bei der Modellierung und Gestaltung von Informatiksystemen n ahegebracht werden, wobei die Entwicklung von Algorithmen auch immer mit der Perspektive der Entwicklung von Software in Verbindung steht  und zu behandeln ist . Damit sind Fragen des Speicherbedarfs, des Laufzeitverhaltens und der Verteilung der Systemkompo nenten zu bedenken. Dies u.a. unterscheidet den Informatik-  vom Mathematikunterricht im Hinblick auf den Umgang mit Algorithmen.  3. Im anwendungsorientierten Ansatz  (Arlt & Koerber, 1981; Koerber & Peters, 1993)  standen hingegen nicht die  Algorithmen und deren Implementierung mittels einer Programmiersprache im Fokus des Informatikunterricht s, sondern der Anwendungskontext  und die sozialen Implikationen des Einsatzes von Informatiksystemen. Dies geschah nicht zuletzt aus einer Kritik am algorithmenorientierten Ansatz, dem u.a. vorgehalten wurde, sich zu nah an den Zielen und Inhalten des Mathematikunterrichts zu orientieren . Am anwendungsorientierten Ansatz wiederum wurde kritisiert, dass er Schülerinnen und Schüler  mit dem breiten Spektrum  seiner z. T. divergierenden Zielsetzungen - Modellierung und Implementierung von Informatiksystemen, Bewertung des Einsatzes derartiger Systeme und deren sozialer Folgewirkungen - im Unterricht mit einer nicht zu bewältigen den Komplexität von Aufgaben konfrontiert . Überdies stehe er in der Gefahr,  so ein weiterer Kritikpunkt, sich zu weit von                                                            3 Bei der Bewertung der damit verbundenen fachdidaktischen Diskurse ist der jeweilige historische Kontext der fachwissenschaftlichen Entwicklung und die damit verbundene Verfügbarkeit von Hard - und Softwaresystemen im Unterricht zu berücksichtigen. Damit wird zugleich auch eine Besonderheit des Unterrichtsfaches Informatik deutlich: Die ‚apparative Abhängigkeit’ von verfügbarer (Informations -)technik in der Schul e, die in der Informatik wohl noch stärker ausgeprägt ist als in anderen Fächern des MINT -Bereichs.   genuin informatischen Fragestellungen zu entfernen  und zu einem verkappten Sozialkundeunterricht zu mutieren .  4. Im benutzerorientierte n Ansatz  (Forneck, 1990)  wurde  ein Ausweg aus diesem Dilemma in der Möglichkeit  gesehen , als wesentliches Ziel des Informatikunterrichts die Erziehung zum verständnisvollen reflektierten Benutzen von Informatiksystemen zu priorisieren. Damit w urde der Tatsache Rechnung getragen, dass d ie immer komplexer werdenden Softwaresysteme im Unterricht ohnehin nicht von Schülerinnen und Schülern entwickelt oder zumindest durchschaut werden könnten. Die Fokussierung auf den Nutzungsaspekt kann überdies auch einen Beitrag zur Erziehung von mündigen  Bürgerinnen leisten. Als Problem des Ansatzes stellte sich allerdings heraus, dass für die Lernenden oft nur die äußeren funktionalen Strukturen der Benutzungsoberflächen deutlich wurden und damit Wissen im Vordergrund stand, dass aufgrund der technischen  Entwicklungen schnell veraltete.  5. Dieses Problem wurde im  informationszentrierten  Ansatz  durch eine spezifische  Verbindung von Programmier - und Anwendungsbezug überwunden. Denn  mit den Begriffen ‚Daten ‘ und ‚Information‘  rückten zwei wesentliche Grundi deen der Informatik in den Mittelpunkt der Betrachtung  (Breier, 2004; Hubwieser, 2007) . Ziel des Ansatzes war und ist es, Schülerinnen und Schüler im Informatikunterricht die Fähigkeit zu vermitteln , beide Bereiche zu unterscheiden und deren Beziehung zuei nander zu erfassen . Daten  werden im Modellierungsprozess aus einer Eingangsinformation formal beschrieben und mittels geeigneter Algorithmen und Datenstrukturen auf Computern verarbeitet. Dabei werd en die Eingabe der Daten und die Darstellung der Ergebniss e auf Computern mittels Software symbolisch repräsentiert. Es bleibt dann den Nutzern überlassen, aus der Eingangsinformation und dem Ergebnis der formalen Berechnung vor dem Hintergrund eines (subjektiven) Interpretationskontext es eine neue Information zu  generieren  bzw. diese zu interpretieren. Computer und Informatik sind aus dieser Perspektive wesentliche integrale Bestandteile der Informationsgewinnung und -verbreitung. Damit zusammenhängende Fragestellungen z. B.  nach der Form  und Angemessenheit der D atenmodellierung (objektorientiert, funktional, prozessorientiert, zustandsorientiert, als ER -Modell) beschreiben  wichtige Gegenstandsbereiche, in denen Schülerinnen und Schüler Kompetenzen erwerben sollen. Die Rolle von Modellen und Modellierung en in dies em Zusammenhang  ist insbesondere von (Thomas, 2002)  thematisiert und als wichtiger Kompetenzbereich des Informatikunterrichts beschrieben  worden . 6. Der systemorientierte Ansatz (vgl. Magenheim, 2008)  geht bei der Behandlung komplexer Informatiksysteme im Unterricht einen anderen Weg. Es sollen für unterrichtliche Rahmenbedingungen relativ komplexe Informatiksysteme didaktisch so vorbereitet werden, dass für die Schülerinnen und Schüler  im Unterricht ein multipler Zugang zu deren innerer (Algorithmen, Softw aredesign) und äußerer Struktur (GUI: Grafische Benutzungsschnittstelle) ermöglicht wird. Durch  Dekonstruktion sollen wesentliche Designkonzepte der Software exploriert , d.h. gezielt erkundet, und dann ggf. auch modifiziert werden. A uf diese Weise soll das Systemverständnis der Lernenden und ihre Gestaltungskompetenzen für Informatiksysteme gefördert werden . Dieses didaktische Prinzip w eist einen hohen Grad an Übereinstimmung mit dem Reengineering im Bereich professioneller informatischer Aufgabenfelder auf. Insbesondere soll Schülerinnen und Schüler n mit diese m didaktischen Konzept  verdeutlicht werden, dass Designentscheidungen auf Soft - und Hardwareebene wesentlichen Einfluss auf den Anwendungskontext der Informatiksysteme und deren  gesellschaftlichen A uswirkungen haben. Da die mit ein em Informatiksystem assoziierten sozialen Handlungssysteme von interagierenden Personen bei der Modellierung und Implementierung mit bedacht werden müssen, wird hier  auch von sozio- technischen Informatiksystemen gesprochen. Bei Brinda (2004)  rücken in seinem Konzept des didaktischen Systems  mit der Bestimmung von wesentlichen Determinanten der unterrichtlichen Umsetzung von Informatikinhalten und der Klassifizierung von Aufgabenstellungen des Informatikunterrichts hinsichtli ch ihrer Komplexität und ihres Schwierigkeitsgrades weitere Einflussfaktoren in den Fokus.  7. Die besondere Bedeutung des Einsatzkontextes von Informatiksystemen als Unterrichtsgegenstand und dessen Beziehung zur Systemgestaltung werden auch in  dem fachdidaktischen Konzept  ‚Informatik im Kontext ‘ (INIK ) und  dem damit verbundenen fachwissenschaftlich  akzentuiert en Konzept der ‚Kontextuellen Informatik’  betont . Für das INIK -Konzept wurden auch praktische Vorschläge für die Gestaltung des Informatikunte rrichts erarbeitet  (Engbring, 2003; Keil -Slawik & Magenheim, 2001; Koubek et al., 2009; Krohn, 1992) . Schülerinnen und Schüler  sollen bei diesem Ansatz die Modellierung von Informatiksystemen als wichtiges Element eines Gestaltungsprozesses des sozio -techn ischen Einsatzkontextes dieser Systeme kennen lernen.  8. Dem systematischen Erkunden der vermuteten inneren Struktur und der von außen sichtbaren Funktion von Informatiksystemen wird auch im fachdidaktischen Ansatz zur Dualitätsrekonstruktion erhebliche Bedeutung beigemessen. Dabei soll an die Alltagserfahrungen der Lernenden mit Informatiksystemen angeknüpft und die Dualität von Struktur und Funktion digitaler Artefakte mittels systematischer Nutzung erschlossen werden  (Schulte, 2009) . Digitale Artefakte werden hierbei als kleinere und weniger komplexe Informatiksysteme angesehen. Einen ähnlichen fachdidaktischen Zugang, in dem  von dem äußerlich sichtbaren Verhalten auf die innere Struktur von Informatiksystem geschlossen wird , schlägt  Stechert (2009)  vor. Auf die an der Dualitätsrekonstruktion orientierten Ansätze hat die informatikdidaktische Kompetenzforschung später Bezug genommen und die Fähigkeit zum Erkunden und Anwenden von Informatiksystemen als eine wesentliche Voraussetzung i hres Verständnis ses identifiziert ( z. B. Magenheim et al., 2010) . 9. In fast allen genannten informatikdidaktischen Ansätzen wird betont, dass bei der Auswahl von Informatiksystemen, mit denen sich die Schülerinnen und Schüler  im Informatikunterricht auseinandersetzen, auf eine für die Zielgruppe geeignete Zugangsweise und auf den Bezug des Anwendungskontextes des Informatiksystems zur Alltagswelt der Zielgruppe geachtet werden muss. Im phänomenorientierten Ansatz wird dieses Prinzip in den Mittelpunkt gerückt. So postulieren Humbert und Puhlmann (2004)  drei Gruppen von Phänomen, die Gegenstand des Informatikunterrichts sein können. a) Mit Informatiksystemen direkt verknüpfte Phänomene, die beim Nutzen eines Informatiksystems a uftreten, b) Mit Informatiksystemen indirekt verbundene Phänomene, die nicht sofort ersichtlich, in ihrem Informatikbezug wahrgenommen werden, sondern sich erst bei genauerer Betrachtung als informatikhaltig erweisen.  c) Von Informatiksystemen unabhängige Phänomene , die sich dadurch auszeichnen, dass sie eine inhärente informatische Struktur aufweisen und/oder informatisches Denken nahelegen , ohne  bestimmte digitale  Systeme  vorauszusetze n. Ganz ähnlich hat die Forschergruppe um Diethelm (Diethelm et al., 20 11) in Anlehnung an den Ansatz von Kattmann u. a. (1997)  ein Konzept der didaktischen Reduktion zur Gestaltung des Informatikunterrichts vorgeschlagen, das als zentrales Element Phänomene der Informatik aus der Erfahrungswelt der Schülerinnen und Schüler  als Unterrichtsgegenstand vorschlägt.  10. Betrachtet man die dargestellten informatikdidaktischen Ansätze, so wird  deutlich, dass neben allgemeinbildenden Aspekten und den Bezügen zu den fachwissenschaftlichen Methoden der Informatik  vor allem auch die O rientierung an den Interessen und der Motivation der Schülerinnen und Schüler  ein wesentliches Element der Zielbestimmung und der Inhaltsauswahl für den Informatikunterricht darstellt. Romeike (2008a)  betont vor diesem Hintergrund die Bedeutung von Kreativität und Motivation für die Praxis des Informatikunterrichts. Hinzu kommt die preisgünstige Verfügbarkeit von digitalen Bausteinen, Mikrocontrollern etc. - etwa in Gestalt des Arduino und anderer unterrichtsgeeigneter didaktischer Informatiksysteme ( Lego M indstorms, Calliope , etc.) . Diese hat dazu geführt, dass technische Aspekte und Fragen der Steuerung und Regelung wieder stärker als Themen des Informatikunterrichts angesehen werden können. Besonders Modrow (2010)  und Strecker (2009)  haben diese Aspekte in die aktuelle fachdidaktische Diskussion eingebracht . Przybylla und Romeike (2014)  haben diese Ansätze aufgegriffen und durch die Integration technischer Aspekte in den Informatikunterricht in Richtung ‚Physical Computing’ vertieft.  Auf diese Weise soll bei den Schülerinnen und Schülern ein grundlegendes Verständnis für die technischen und algorithmischen Aspekte von Informatiksystemen gefördert werden. Hierzu werden oft auch spielerische, handlungsorientierte Unterrichtsmethoden ohne Computereinsatz vorgeschlagen (CS -unplugged; vgl. z. B.  Bell et al., 2009; Bergner et al., 2018, S. 86- 91).  Mit den aufgezeigten informatikdidaktischen Konzeptionen sind teils explizit, teils implizit Annahmen und Zielbestimmungen zum Kompetenzerwerb im Informatikunterricht verbunden. Diese haben den aktuellen Diskurs um fachspezifische Kompetenzen nachhaltig beeinflusst und Eingang in die GI -Bildungsstandards  gefunden, deren Zielsetzungen und Kompetenzbeschreibungen in der Informatikdidaktik bis zu einem gewissen Grad als konsensfähig angesehen werden. Dies ist vor allem auch deshalb  der Fall , weil in den jeweiligen GI-Arbeitsgruppen zahlreiche Fachdidaktiker innen und Fachdidaktiker beteiligt waren und die Dokumente vor ihrer endgültigen Verabschiedung in der Fachcommunity intensiv und breit diskutiert w orden  sind. Die GI -Bildungsstandards  (GI, 2008; GI, 2016)  dienten wiederum als wesentliche Grundlage für die Gestaltung der Informatiklehrpläne in den Bundesländern.  Allerdings kam es hier  zu sehr unterschiedlichen Formen der  Implementierung von Informatikcurricula in den verschiedenen Schultypen und Jahrgangsstufen.  Die Empfehlungen für Informatikstandards orientieren sich dabei an dem NCTM -Kompetenzstrukturmodell  (NCTM, 2000) , das auch  den Bildungsstandards der Mathematik in  Deutschland zugrunde liegt. In den NCTM - und den GI -Empfehlungen werden Kompetenzen dabei im Sinne von Weinert (2001)  als beobachtbare und von den Schülerinnen und Schüler n ausführ bare Handlung sdispositionen (Prozesse) angesehen, die sich im jeweiligen Inhaltsbereich kontextualisieren. Daher können die zu erwerbenden Kompetenzen jeweils als Ergebnis einer Kombination von Inhalts - und Prozessaspekten beschrieben werden. Die Bereiche sind dabei nicht trennsch arf voneinander abzugrenzen. Dieses Konzept liegt alle n GI-Empfehlungen und den meisten Informatiklehrplänen zugrunde und wurde jüngst auch als Empfehlung für den Bereich der frühkindlichen außerschulischen informatischen Bildung adaptiert  (Bergner et al.,  2018) . Gemäß den Empfehlungen ist es das übergeordnete Ziel des Informatikunterrichts , alle Schülerinnen und Schüler  für ein Leben in einer digital geprägten Welt vorzubereiten. Dabei werden  fünf Kompetenz bereiche unterschieden :  • Die Fähigkeit, das Verstä ndnis für den grundlegenden Aufbau von Informatiksystemen und deren Funktionsweise zu vermitteln , um damit „einerseits deren zielgerichtete Anwendung bei der Lösung von Problemen, aber auch die leichte Erschließung anderer Systeme der gleichen Anwendung zu ermöglichen “.  • Die Fähigkeit, Daten , die von Informatiksystemen produziert  sind, im Hinblick auf die darin enthaltene Information zu interpretieren . • Die Fähigkeit, Information in festgelegter Art und Weise  als Daten zu strukturieren , damit diese mittels Algorithmen bzw. in Form von Automaten unter Verwendung von Programmiersprachen von einem  Informatiksystem verarbeitet werden können . • Die Fähigkeit, Methoden der informatischen Modellierung zu kennen und sie exemplarisch für die Impleme ntierung von Informatiksystemen zu nutzen.  • Die Fähigkeit, prinzipielle  Möglichkeiten und potenziellen Gefahren und Risiken der Nutzung von Informatiksystemen in einem bestimmten Kontext zu erkennen und darauf sachgerecht zu reagieren .  • Die Fähigkeit, r elevante Zusammenhänge zwischen Informatik, Mensch und Gesellschaft  zu erkennen und auf der Basis von Sachkenntnis zu bewerten.  Als didaktisches Prinzip bei der Umsetzung dieser Ziele gilt: „Die schulische Auseinandersetzung mit dem Aufbau und der Funktionswei se von Informatiksystemen darf dabei aber nicht nur auf der Ebene der Benutzungsschnittstelle erfolgen, die sich bereits bei einer nächsten Produktversion oder bei Verwendung eines Produkts eines anderen Herstellers ändern kann.“  (vgl. GI, 2008, S. 11f) . Als relevante Inhaltsbereiche  mit allgemeinbildendem Charakter benennen die Empfehlungen: ‚Information und Daten’, ‚Algorithmen’, ‚Sprachen und Automaten’, ‚Informatiksysteme’ sowie ‚Informatik, Mensch und Gesellschaft’.  Als wesentliche Prozessbereiche mit Handlungen, die in diesen Inhaltsbereichen ausgeführt werden können, werden beschrieben: ‚Modellieren und Implementieren’, ‚Begründen und Bewerten’, ‚Strukturieren und Vernetzen’, ‚Kommunizieren und Kooperieren’, und ‚Darstellen und Interpretieren’. Als weitere Prozessdimension wurde in jüngster Zeit u.a. im Hinblick auf internationale CSE -Ansätze die Kategorie ‚Interagieren und Explorieren’ in die fachdidaktische Diskussion eingebracht  (Bergner et al., 2018; C. Schulte et al., 2017) .  Die auf diese Weise definierten themenbezogenen Handlungsfelder, in denen sich Kompetenzen verorten lassen, erfordern eine Priorisierung und Präzisierung im Hinblick auf die unterrichtliche Zielgruppe, da sie sich nicht in vollem Umfang in ein schulisches Informatikcurric ulum integrieren lassen. Hier bedarf es letztlich erneut normativer Entscheidungen für eine am exemplarischen Prinzip (Wagenschein, 1962)  orientierte Ausgestaltung der Curricula und des Offenlegens der Priorisierungskriterien (vgl. Bergner et al., 2018) .   4. Perspektiven fachdidaktischer Forschung und Entwicklung  Wie in B.3 bereits dargestellt, hat sich die fachdidaktische Forschung zunächst auf die informatikdidaktische Theoriebildung konzentriert. In diesem Zusammenhang wurden die fachdidaktischen Konzepte in einem kritischen Diskurs weiterentwickelt, vorwiegend unter Beteiligung von Fachdidaktikern und Fachwissenschaftlern der Informatik, sowie partiell auch der Lern - und Kognitionspsychologie. Das diesen fach didaktischen Ansätzen zugrundeliegende Forsch ungsformat kann als theorieorientiert und vergleichend  beschrieben werden. D iese Konzepte wurden i n Auseinandersetzung mit dem technologischen Fortschritt und damit einhergehenden Paradigmenwechseln in der Fachwissenschaft Informatik sowie  aktuellen Tenden zen in anderen Fachdidaktiken -  insbesondere im MINT -Bereich  - entwickelt. Eine wichtige Fragestellung war dabei auch, welchen Beitrag informatische Bildung für die Allgemeinbildung leisten kann. Ferner wurden auf theoretischer Ebene verschiedene Bildungskonzepte mit Bezug zur Informatik gegeneinander abgegrenzt, wie z. B. Inform atische Bildung, Medienbildung, digitale Bildung, ‚ICT in Education’, ‚Computer Literacy’ (siehe dazu auch die Ausführungen zur  Dagstuhl -Erklärung  in Abschnitt C ). Breit angelegte empirische Studien fanden in dieser Phase fachdidaktischer Forschung kaum st att. Die theorieorientierten Diskurse führten aber zur Generierung von Forschungshypothesen, z. B.  über die Wirksamkeit spezifischer Vermittlungsmethoden und Lehr -Lernarrangements. Diese wurden dann teilweise mit kleineren empirischen Studien oder Erprobungen überprüft. Die Studien waren sowohl in Bezug auf den Umfang der Stichprobe als auch auf das empirische Methodensetting begrenzt. Hier sind vor allem erste Dissertationen im Bereich der fachdidaktischen Forschung der Informatik zu nennen,  die sich mit d er Wirksamkeit bestimmter Vermittlungsmethoden (z. B. Objects First Methode; Diethelm, 2007) oder der Organisation von Lehr -Lernprozesse n im Informatik -Anfan gsunterricht  (Schulte, 2004)  auseinandergesetzt haben. Auch andere  fachdidaktische Dissertationen i n der Informatik  weisen ein empirisches Forschungsformat auf . In ihnen werden  - oft in einem eng begrenzten Setting  - spezifische Hypothesen, die sich aus den o.g. fachdidaktischen Diskursen ergeben haben , überprüft  (GI, 2018) . Hierbei kamen sowohl qualita tive als auch quantitative empirische Forschungsmethoden mit einem in Bezug auf die Forschungsfrage gut begründeten Untersuchungsdesign zum Einsatz . Zunehmend erfolgen Studien a uch im Mixed -Method- Design.  Angewandte Methoden waren hier Leitfadeninterviews, Einsatz von Frageb ögen, teilnehmende Unterrichtsbeobachtung und Analyse von Videomitschnitten des Unterrichts bzw. der Aufzeichnung von Bildschirmaktivitäten der Schülerinnen und Schüler  (Keystrike -Recor ds, Videographie).  Ein rein qualitatives Forschungsformat wandte Knobelsdorf (2011)  bei der biographischen Analyse von Lern-  und Bildungsprozesse n von Informatik- StudienanfängerInnen an. Dabei standen Qualität und Quantität  der Computernutzung im Fokus . Der in der Studie angewandte empirische Forschungsansatz orientierte sich an der erziehungswissenschaftlichen Biogra phieforschung und an Methoden der Grounded Theory  (Strauss & Corbin, 1996) . Mit graphen -analytische n Methoden wurde n in einer  weiteren Studie die Wissensstrukturen und de r Wissenserwerb von Informatikstudierenden untersucht. Dazu wurde die Veränderung von ‚Concepts -Maps’, die die Studierenden im Verlaufe der Zeit zu einem Gegenstandsbereich gezeichnet hatten, im Hinblick auf die Strukturveränder ung und den Differenzierungsgrad analysiert  (Hubwieser & Mühling, 2011; Mühling, 2014) . Eine umfangreichere quantitative Studie (N> 700), die auf einer breiteren Datenbasis mittels psychometrischer Messskalen und inferenzanalytischer Verfahren die Einschät zung von Schülern zur Praxis ihres Informatikunterrichts und ihre Einstellungen zur Informatik untersuchte, wurde von Schulte & Magenheim  (2005)  vorgelegt.  Während die meisten der vorgenannten Studien mit Fördergeldern aus Haushaltsmitteln der jeweiligen U niversität durchgeführt  wurden, gelang es im Lauf der Zeit , DFG und BMBF Fördermittel für die fachdidaktische Forschung in der Informatik einzuwerben. So wurden im Bereich der empirischen Kompetenzforschung die DFG -geförderten Forschungsprojekte MoKoM  I und II zum informatischen Systemverständnis und zum informatische n Modellieren (iSiM) von den informatikdidaktischen Forschergruppen an den Universitäten Paderborn und Siegen durchgeführt  (vgl. z. B.  Magenheim et al., 2010; Neugebauer et al., 2015) . Das Projekt verfolgte drei Zielsetzungen:  (1) Theoriegeleitete und empirisch gestützte Entwicklung eines Kompetenzstrukturmodells  (2) Entwicklung eines entsprechenden Kompetenzniveaumodells  (3) Entwicklung von Instrumenten zur Kompetenzmessung zu iSiM, Zur En twicklung des Kompetenzstrukturmodells wurde auf normative Ansätze zu Modellierungskompetenzen in der Informatik zurückgegriffen, die sich in Empfehlungen zur Informatikausbildung an Hochschulen und fachdidaktischen Konzepten zur informatischen Bildung an Schulen identifizieren ließen. Nach diesen eher mit hermeneutischen Methoden gewonnenen Zwischenergebnissen wurden im Forschungsprojekt mit Hilfe eines an anforderungsanalytischen Methoden orientierten Verfahrens (Critical Incident Technik), das auf Expert eninterviews beruhte, die zuvor aus normativen Setzungen hergeleiteten Kompetenzkategorien empirisch überprüft, ausdifferenziert, ergänzt und modifiziert. Auf diese Weise wurde ein differenzierteres Kompetenzstrukturmodell zu iSiM gewonnen. Auf der Basis d ieses Modells wurde in einem mehrstufigen quantitativen empirischen Verfahren mit einer umfangreicheren Datenerhebung (N>500), ein Messinstrument zur Kompetenzmessung (Item -Response -Konzept, Rasch -Skalierung) in diesem Bereich entwickelt, dass später auch zur Messung von Kompetenzerwerb in anderen Informatik -Projekten eingesetzt wurde  (Krämer et al., 2014) .  Bei der Testentwicklung wurden in erster Linie „szenariobasierte Testitems“ in Anlehnung an „Situational Judgement Tests“  (Weekly & Polyhart, 2006)  entwickelt, die auf komplexen handlungsorientierten sowie repräsentativen Aufgabenstellungen der Unterrichtsdomäne beruhen. Außerdem wurden Erfahrungen zur Testentwicklung bei großen Schulleistungsstudien ( z. B. TMMS oder PISA) sowie eigenen Testkonstruktione n (Schaper et al., 2008)  berücksichtigt.  Forschungsergebnisse aus diesen Projekten wurden kontinuierlich in den peer -reviewten Proceedings einschlägiger Fachkonferenzen der ACM, IEEE und IFIP publiziert. Die Teilnahme an diesen Konferenzen führte auch zu einem regen internationalen Austausch über aktuelle Fragen der Forschung und der Curriculum -Entwicklung auf dem Gebiet von Computer Science Education.  Aktuell werden BMBF -Forschungsprojekte mit Bezügen zu schulischem und außerschulischen informatischen  Lernen durchgeführt.  Zu dieser  Gruppe von Projekten gehören beispielsweise das Projekt MLS  (Mobile Learning Smart Factories ; vgl. u.a. Wilke und Magenheim (2017) ) und das Projekt  Smile (2017) , die sehr unterschiedliche Zielsetzungen verfolgen. Im Projekt  MLS geht es um  die Entwicklung einer arbeitsplatzintegrierten mobilen Lern - und Arbeitsapplikation für Tablets und Webbrowser. Dazu sollen arbeitsplatzintegrierte Lernszenarien sowie ein Workshopkonzept für Ausbilder/innen entwickelt und umgesetzt, sowie d as Gesamtprojekt formativ und summativ evaluiert werden . Im Projekt ‚Smile‘  sollen  ‚Smarte Umgebungen ’ entwickelt werden, die  besonders Mädchen und junge Frauen einen zielgruppengerechten Zugang zu Informatikthemen eröffnen.  Aber auch h ochschuldidaktisch a usgerichtete Projekte besitzen in der Informatik didaktik gegenwärtig b esondere Bedeutung . Zu nennen sind hier vor allem vier Projekte:  KETT I (Kompetenzerwerb von Tutorinnen und Tutoren in der Informatik; vgl. Danielsiek et al. , 201)) , KUI (Kompetenzen für  das Unterrichten in Informatik, vgl. u.a. Bender et al. , 2015) , MuSofT (Multimedia in der SoftwareTechnik ; Magenheim und Scheel , 2004)  sowie SIMBA  (Schlüsselkonzepte der Informatik in verteilten multimedialen Bausteinen unter besonderer Berücksichtigung spezifisch er Lerninteressen von Frauen; Schubert , 2004) . Die Projekte KETTI und KUI haben die Verbesserung der Informatiklehre an der Hochschule und Schule zum Ziel. In KETTI sollen TutorInnen in der Informatik in die Lage versetzt werden , kognitive Aktivi täten der Studierenden anzuregen und selbstständiges Lernen zu fördern. Dazu soll auf der Grundlage empirischer Untersuchungen ein spezielles Kompetenzmodell samt Messinstrument entwickelt und die Ausbildung der Tutor Innen darauf abgestimmt werden.  KUI hat  bei ähnlicher Zielsetzung als Zielgruppe die Lehramtsstudierenden im Fokus. In den Projekten MuSoFT und SIMBA wurden aus fachdidaktischer Perspektive digitale Lehrmaterialien für die universitäre Lehre in den Bereichen Softwaretechnik, Kontextuelle Inform atik, Computergrafik und Lehramtsausbildung entwickelt und evaluiert.   C. Lernen und Forschung über das Fach hinaus   5. Inhalte überfachlich verknüpfen und fachliche Kompetenzen verallgemeinern  „Informatik ist eine Basis - und Querschnittsdisziplin, die ihre Grundlagen aus der Mathematik und den Ingenieurwissenschaften bezieht und in alle Lebens - und Anwendungsbereiche wirkt“  (GI, 2006) . Als grundlegende Wissenschaft der Digitalisierung liefert sie verschiedene Konzepte, Modelle und Methoden zum Verständnis und zum effektiven sowie effizienten Umgang mit digitaler Medien, weshalb informatische Bildung zunehmend als wichtige Grundlage für die Umsetzung der Digitalisierungsstrategien im Bildungsbereich gesehen wird  (vgl. bspw. Breier, 2004; Gander et al., 2013; Romeike, 2017) . Döbeli  Honegger  (2016)  beschreibt verschiedene Argumente, wie überfachliches Lernen durch Informatikkompetenz unterstützt werden kann. So bietet Informatik zahlreiche Methoden und damit verbundene Werkzeuge, um Sachverhalte virtuell mit  Computern zu simulieren oder in der realen Welt mit Sensoren und Aktoren zu steuern, wobei viel über Mathematik, Geometrie, Physik oder Volkswirtschaft gelernt werden kann (Konstruktionsargument). Mit der Methode der Simulation hat die Informatik ein drittes Standbein in den wissenschaftlichen Erkenntnisprozess gebracht . Dabei ist Simulation  trotz ihrer enormen Bedeutung in der Wissenschaft in den allgemeinbildenden Schulen bisher kaum wahrgenommen worden. Zukünftig könnte sie aber eine ähnliche Bedeutung erlangen wie bspw. die Methode des Experiments (Wissenschaftsargument). Betrachtet man jüngere Entwicklungen  - bspw. die künstliche Intelligenz oder autonom fahrende Autos -  zeigt sich, dass die Produkte der Informatik auch Anlass bieten, über verschiedene  wichtige Konzepte unseres Lebens selbst nachzudenken (Denkobjektargument)  – im Horizont von Fragen wie:  Was ist Intelligenz? Woran erkennt man Kreativität? Was ist der eigene Wille und welche Bedeutung hat er? Vor dem Hintergrund, menschliche Verhaltensweisen simulieren und imitieren zu können, werden solche philosophischen Überlegungen und Diskussionen ang eregt. Darüber hinaus werden auch Aspekte des Rechts, der Ethik oder der Ökonomie berührt. Durch die zunehmende Durchdringung der Lebenswelt der Schülerinnen und Schüler mit digitalen Medien werden sie in wohl jedem Unterrichtsfach (und darüber hinaus) mit  Phänomenen konfrontiert, die durch Informatik oder Informatiksysteme geprägt sind. Ohne ein Verständnis der zugrundeliegenden informatischen Konzepte ist es heute nicht mehr möglich, zentrale Gegenstände der Berufs - und Lebenswelt sachgemäß zu erfassen, z u hinterfragen oder mitzugestalten. Um Schülerinnen und Schüler auf ein mündiges Leben vorzubereiten, was eine zentrale Aufgabe der allgemeinbildenden Schule darstellt, reicht es nicht aus, die digitalen Medien nur  zu nutzen, sondern es müssen auch die dahinter stehenden Mechanismen in den Blick genommen werden (Mündigkeitsargument).  Grundsätzlich leistet jedes Schulfach einen Beitrag zum fächerübergreifenden Lernen. Schubert und Schwill (2011)  verdeutlichen, dass das Schulfach Informatik dennoch eine Sonde rstellung einnimmt, die auf drei Gründe zurückzuführen ist. Der erste, oben bereits ausgeführte Grund liegt in der zunehmenden „Informatisierung“ aller Fachgebiete und aller Unterrichtsfächer. Der zweite Grund liegt in der zentralen Stellung von Anwendungs aufgaben im Informatikunterricht und deren Doppelfunktion, bei welcher im Idealfall Kompetenzen beider Fächer erworben werden  (vgl. Becker, 1986) . Insbesondere im Kontext des Programmierenlernens wurden meist Aufgaben aus dem Mathematikunterricht gewählt, die zwar wohl definiert und damit relativ einfach umsetzbar waren, aber wichtige informatische Modellierungsaspekte und fachliche Herausforderu ngen verhinderten  (vgl. Romeike, 2008b) . Da die Schülerinnen und Schüler noch nicht die fachlichen Voraussetzunge n besitzen, tatsächlich informatische Probleme lösen  zu können, werden regelmäßig Problemstellungen aus anderen Unterrichtsfächern herangezogen. Mit der Entwicklung des Informatik- im-Kontext -Ansatzes (vgl. Koubek et al., 2009)  wurde dieses Vorgehen weiter fachdidaktisch fundiert und ausgebaut. Strecker (2013)  stellt bspw. verschiedene Unterrichtssequenzen für die Sekundarstufe I vor, die unter dem Oberbegriff „Informatik hilft!“ an einem sozialen Kontext aus gerichte t sind  und anhand verschiedener Themen aus  dem Bereich der Medizin die Unterrichtsinhalte präg en. Der dritte Grund nach Schwill hat seine Wurzeln im „Scheitern der Informationstechnischen Grundbildung (ITG)“. Ziel des 1984 durch die Bund- Länder -Kommission verabschiedeten Rahmenkonzeptes war es, ausschließlich über fachübergreifendes und fächerverbindendes Lernen einen Beitrag zur informatischen Bildung zu leisten, ohne dafür ein eigenes Fach vorzusehen. ITG scheiterte, da gegenüber dem Benutzen von Computern die informatischen Lernziele nicht deutl ich wurden und den Fachlehrern letztlich die informatischen und informatikdidaktischen Kompetenzen fehlten.   6. Informatikdidaktische Forschung vernetzen  Die fachdidaktische Forschung der Informatik war und ist, oft in Kooperation mit der Fachwissenschaft Informatik , auch an einer Reihe von BMBF -Projekten beteiligt. Diese besitzen in der Regel ein stärker praxisorientiertes Forschungsformat, das im Sinne von R&D (Research and Development) die praktische Implementierung neuer Lehr -Lern -Konzepte bzw. didaktis cher Medien zum Ziel hat. Neben der praxisorientierten Entwicklung derartiger Konzepte bzw. Medien findet in diesen Projekten empirische Forschung meist in Form einer formativen Evaluation im Sinne von intervenierender Begleitforschung und weniger als summ ative Evaluation statt. Die Projekte weisen neben einem Bezug zum Informatikunterricht an allgemeinbildenden oder beruflichen Schulen,  bzw. zur außerschulischen informatischen Bildung , z. T. auch eine hochschuldidaktische Perspektive mit Bezug zum E -Learni ng auf oder sind als interdisziplinäre Kooperationsprojekte mit anderen Fachwissenschaften angelegt. Neben den bereits in Kapitel 4 genannten schulbezogenen und hochschuldidaktischen Projekten  sind hier vor allem  die folgenden  interdisziplinäre n Projekte m it Beteiligung der Informatikdidaktik  zu nennen:  Das Projekt MeCoPflege  (Mediencoaches für das Berufsfeld Pflege ; vgl. z. B. Kamin et al., 2016) hat d as Ziel , in Kooperation mit der Medienwissenschaft, der Pflegewissenschaft, der Medizin und unterschiedlichen Praxiseinrichtungen der Pflege , das Pflegepersonal fachlich und kompetenzorientiert dabei zu unterstützen, digitale Lernangebote für die kontinuierliche V erbesserung der Pflege zu nutzen und damit Professionalisierungsbestrebungen in dem Berufsfeld zu fördern. In TABULA  (Lernen begreifbar machen; vgl. TABULA , 2017)  soll das Erlernen von Informatikkonzepten in anschaulicher Weise erfolgen . Dabei wird eine Ko mbination aus zwei innovativen Hardwarekomponenten - ‚Multitouch -Tische’ und ‚Tangibles’ - als Lernmedi um verwendet . Primäre Zielgruppe ist die praxisorientierte Informatik -Hochschulausbildung, daneben auch die Informatik in der gymnasialen Oberstufe sowie  die berufliche und betriebliche Bildung.  Nicht nur im Zusammenhang mit BMBF -Projekten hat die informatikdidaktische Forschung sich stets auch interdisziplinär orientiert und auf diese Weise z. B.  Beiträge zur Entwicklung der Didaktik des E -Learning s und der Entwicklung von E -Learning Tools geleistet. Beispiele hierfür sind die Entwicklung eines Class -Room -Response Systems (Zoyke et al., 2017)  oder die Entwicklung eines Multimedia -Werkzeugs zur multiperspektivischen Analyse von Unterrichtsinteraktione n (Engbring et al., 2010) . Auch Beiträge zur Entwicklung von Medientheorien wurden aus der Didaktik der Informatik als Teilprojektpartner im Kulturwissenschaftlichen Forschungskolleg ‚Medienbrüche’ (DFG -SFB / FK 615) geleistet. Dabei sollten mediale Einsch nitte und Übergänge  im Hinblick auf ihre diskontinuierlichen, strukturellen Veränderungen innerhalb der Mediengeschichte untersucht werden (Medienbrüche, 2017) . Die Forschungsbeteiligung der Informatik didaktik an fachwissenschaftlichen  und interdisziplinär en Forschungsformaten hat mittlerweile auch dazu geführt, dass bei der Entwicklung von hochschuldidaktischen Konzepten in der Informatiklehre und bei der Konzipierung von Empfehlungen zur Gestaltung der fachwissenschaftlichen Bachelor - und Masterstudiengän ge des Faches Informatik Vertreter innen und Vertreter der Fachdidaktik beteiligt sind  (GI, 2017) . Eine besondere Rolle stellt das Verhältnis zur Medienbildung dar . Keil (2012)  charakterisiert den Computer als „besonderes“ und persönliches Medium , das als „ Denkzeug “ bezeichnet werden kann . Das spezielle  an einem Denkzeug ist, dass es als interaktives Medium Rückmeldung und somit Differenzerfahrung ermöglicht, um „Vorgestelltes und Tatsächliches in Beziehung zu setzen und damit zwischen Illusion und Wirklichkeit zu unterscheiden“ (ebd., S. 149) . Dies stellt letztlich eine Grundvoraussetzung für Lernen dar und erlaubt  es, basierend auf sinnlich vermittelten Rückmeldungen Fehler und falsche Annahmen zu korrigieren. Bereits Papert (1982)  führte  mit seiner Lernthe orie des Konstruktionismus  aus, dass mit Hilfe von Computern ein besonderes Lernen ermöglicht wird, bei welchem das Erschaffen persönlich bedeutungsvoller Artefakte und das Reflektieren über Produkt und Gestaltungsprozess zentral sind. Grundlegend hierfür sind Programmierfertigkeiten wie auch informatische Gestaltungskompetenzen. Aufbauend auf diesen Ideen hat in vielen Schulen inzwischen die Programmierumgebung ‚Scratch ‘ Verbreitung gefunden, die von seinen Entwicklern als „medium for creative expression“ gedacht ist  (Resnick, 2007) .  Aktuelle Ansätze bemühen sich darum, die Ansätze und Ziele informatischer Bildung und Medienbildung gemeinsam zu diskutieren und in Bildungsprozessen fruchtbar aufeinander zu beziehen. Auf diese Weise sollen kontextlose innert echnische Technikeinführungen ebenso vermieden werden  wie Bedien erschulungen , die sich im Wesentlichen  auf die gegebenen Nutzungsmöglichkeiten von Bedienoberflächen di gitaler Systeme beschränken . Überdies  soll die gesellschaftlich -kulturelle Perspektive deutlich gemacht werden: Die Dagstuhl -Erklärung  (Brinda et al., 2016) , eine gemeinsam e Erklärung von Vertretern der Informatikdidaktik, der Informatik, der Medienbildung, der Medienwissenschaften und der Politik, beschreibt drei gleichberechtigte und ineinandergreifende Erkenntnisperspektiven auf die „digitale Welt“, zu denen interdisziplinär alle Disziplinen beitragen können: die technologische Perspektive (Wie funktioniert das?), die Anwendungsperspektive (Wie nutze ich das?) sowie  die gesellschaftlich -kulturelle Perspektive (Wie wirkt das?). In diesem Handlungsfeld entwickeln sich nun auch kooperative Forschungsprojekte.   Ausblick  Mit der zunehmenden Etablierung des Informatikunterrichts in Deutschland – aber auch weltweit – bleibt  es eine Herausforderung informatikdidaktischer Forschung, die gesellschaftlichen Entwicklungen basierend auf soliden Forschungserkenntnissen zu begleiten und voranzutreiben. Hierzu wäre es wünschenswert und hilfreich, wenn die Debatte um die  Legitimation des Schulfachs aufgrund verbindlicher politischer Maßnahmen beendet und die Sicherstellung informatischer Bildung für alle Schülerinnen und Schüler durch die Einführung eines eigenen Faches erfolgen würde. Dann könnte die relativ junge und erst an wenigen Universitäten vertretene Wissenschaft der Didaktik der Informatik sich sowohl ihrer Grundlagenforschung als auch der empirisch abgesicherten Ausgestaltung informatischer Bildung zuwenden. Eine verstärkt e Zusammenarbeit  mit anderen Fächern ist bereits erkennbar .  Zunehmend wird die Forschung auch internati onal verschränkt. Mit seiner im internationalen Vergleich langen, immerhin einige Jahrzehnte umfassenden  Historie fachspezifischer didaktischer Forschung kommt der deutschen Informatikdidaktik eine Führungsrolle zu, wie die ehemals nationale Tagung der Fachgruppe DDI der Gesellschaft für Informatik zeigt, die sich seit 2012 zu einer der wichtigsten internationale n Tagungen  zur Informatikdidaktik entwickelt hat  (WiPSCE, 2018) . Andere Forschungsfelder  - bspw. Informatikunterricht in der Grundschule , der sich international zunehmend etabliert  - sind noch weitgehend unerschlossen und beinhalten bedeutsames Forschungspotenzial. Literatur  ACM  (2003). A Model Curriculum for K –12 Computer Science. URL:  http://c sta.acm.org/Curriculum/sub/k12final1022.pdf  ACM (2004). Curriculum Guidelines for Undergraduate Degree Programs in Computer Engineering. Arlt, W., & Koerber, B. (1981). Ziele und Inhalte des Informatikunterrichts. In W. Arlt (Ed.), Informatik als Schulfach. Didaktische Handreichungen für das Schulfach Informatik  (pp. 18-27). München: Oldenburg R. Verlag.  Barefoot  (2017). Computational Thinking. URL:  https://barefootcas.org.uk/barefoot -primary -computing -resources/concepts/computational -thinking/  Baumann, R. (1993). Ziele und Inhalte des Informatikunterrichts. Zentralblatt für Didaktik der Mathematik, 25(1).  Becker, K. -H. (1986). Informatikunterricht einmal anders gesehen. Praxis der Mathematik, 28(5), 281- 288.  Bell, T., Alexander, J., Freeman, I., & Grimley, M. (2009). Computer science unplugged: School students doing real computing without computers. The New Zealand Journal of Applied Computing and Information Technology, 13(1), 20- 29.  Bender, E., Hubwieser, P., Schaper, N., Margaritis, M., Berge s, M., Ohrndorf, L., Magenheim, J., & Schubert, S. (2015). Towards a Competency Model for Teaching Computer Science. Peabody Journal of Education, 90(4), 519- 532.  Bergner, N., Köster, H., Magenheim, J., Müller, K., Romeike, R., Schulte, C., & Schroeder, U. (2018). Frühe informatische Bildung -  Ziele und Gelingensbedingungen für den Elementar - und Primarbereich. Berlin: Haus der kleinen Forscher.  Brandhofer, G. (2014). Ein Gegenstand „Digitale Medienbildung und Informatik “ –notwendige Bedingung für digitale  Kompetenz? R&E -SOURCE (1).  Brauer, W., & Brauer, U. ( 1973). Informatik an der Schule – weshalb und wie?  In 4. Paderborner Werkstattgespr äch 1972. Forschungs - und Entwicklungszentrum für objektive Lehr - und Lernverfahren. Schöning, Paderborn, 34- 35. Breier, N. ( 2004 ). Stand und Perspektive der informatischen Bildung. 1. Fachtagung der GI -Fachgruppe Hamburger Informatiklehrerinnen und - lehrer . Brinda, T. (2004). Didaktisches System für objektorientiertes Modellieren im Informatikunterricht der Sekundar stufe II.  (PhD Thesis), Universität Siegen,  Brinda, T., Diethelm, I., Gemulla, R., Romeike, R., Schöning, J., & Schulte, C. (2016). Dagstuhl -Erklärung: Bildung in der digitalen vernetzten Welt. URL:  https://www.gi.de/aktuelles/meldungen/detailansicht/article/dagstuhl- erklaerung- bildung-in-der-digitalen -vernetzten -welt.html Bruderer, H. (2015). Meilensteine der Rechentechnik: zur Geschichte der Mathematik und der Informatik : Walter de Gruyter GmbH & Co KG.  Bruner, J. S. (1966). Toward a theory of instruction . Cambridge MA: Harvard University Press.  Bussmann, H., & Heymann, H. W. (1987). Computer und Allgemeinbildung. Neue Sammlung. Vierteljahreszeitschrift für Erziehung und Gesellschaft, 27(1), 2 -39.  Claus, V., & Schwill, A. (2006). Duden Informat ik A -  Z: Fachlexikon für Studium, Ausbildung und Beruf  (V. Claus & A. Schwill Eds. 4. Aufl., [Taschenbuchausg.] ed.). Mannheim: Dudenverl.  Coy, W. (2001). Was ist Informatik? In J. Desel (Ed.), Das ist Informatik . Berlin, Heidelberg: Springer.  Coy, W. (2008). Kulturen – nicht betreten? Anmerkungen zur "Kulturtechnik Informatik". Informatik Spektrum, 31, 30- 34.  CSTA (2011). CSTA K -12 Science Standards. URL:  http://csta.hosting.acm.org/csta/csta/Curriculum/sub/K12Standards.html  Danielsiek, H., Vahrenhold, J., Hubwieser, P., Krugel, J., Magenheim, J., Ohrndorf, L., Osschenschmidt, D., & Schaper, N. (2017). Undergraduate teaching assistants in Computer science: Teaching -related beliefs, tasks, and competences. IEEE, 718- 725.  Denning, P. J. ( 2004). Great Prin ciples in Computing Curricula. In SIGCSE 2004. Norfolk, Virginia, USA: ACM.  Diethelm, I. (2007). Strictly models and objects first, Unterrichtskonzept und - methodik für objektorientierte Modellierung im Informatikunterricht. (PhD Thesis), Kassel,  Diethelm, I., Dörge, C., Dünnebier, M., & Mesaros, A. M. ( 2011). Die Dikatische Rekonstruktion für den Informatikunterricht. In 14. GI -Fachtagung Informatik und Schule (pp. 77- 86). Bonn. Döbeli Honegger, B. (2016). Mehr als 0 und 1 Schule in einer digitalisierten Welt. Bern: hep -Verlag.  Engbring, D. (2003). Informatik im Herstellungs - und Nutzungskontext. (PhD Thesis), Universität Paderborn, Paderborn.  Engbring, D., Reinhardt, W., Magenheim, J., Moi, M., & Maicher, J. (2010). Anwendungsszenarien für ein Werkzeug z ur Video- Annotation in der universitären Lehre. In M. Kerres, N. Ojstersek, U. Schroeder, & U. Hoppe (Eds.), DeLFI 2010 -  8. Tagung der Fachgruppe E -Learning der Gesellschaft für Informatik e.V  (pp. 133- 144). Berlin/Heidelberg: Springer.  Forneck, H. J. (1990). Entwicklungstendenzen und Problemlinien der Didaktik der Informatik. In G. Cyranek & et al. (Eds.), Beiträge zur Didaktik der Informatik, Aarau (pp. 18- 53). Frankfurt a. M.: Diesterweg/Sauerländer.  Frank, H. G., & Meyer, I. (1974). Rechnerkunde: Eleme nte der digitalen Nachrichtenverarbeitung und ihrer Fachdidaktik. In H. Frank & B. S. Meder (Eds.), Kybernetische Pädagogik Schriften 1958- 1972 (Vol. Kybernetische Pädagogik). Stuttgart: Kohlhammer.  Gander, W., Petit, A., Berry, G., Demo, B., Vahrenhold, J., McGettrick, A., Boyle, R., Mendelson, A., Stephenson, C., & Ghezzi, C. (2013). Informatics education: Europe cannot afford to miss the boat. Report of the joint Informatics Europe & ACM Europe Working Group on Informatics Education. URL:  http://europe.acm.org/iereport/informatics.html GI (Gesellschaft für Informatik) (2000). Empfehlungen für ein Gesamtkonzept der informatischen Bildung an allgemein bildenden Schulen.  GI (Gesellschaft für Informat ik) (2006). Was ist Informatik? Unser Positionspapier. URL:  https://gi.de/fileadmin/GI/Hauptseite/Themen/was -ist-informatik -lang.pdf  GI (Gesellschaft für Informatik) (2008). Grundsätze und Standards für die Informatik in der Schule: Bildungsstandards Informatik für die Sekundarstufe I. URL:  http://www.informatikstandards.de  GI (Gesellschaft für Informatik) (2016). Bildungsstandards Informatik für die Sekundarstufe II, Empfehlungen der Gesellschaft für Informatik e.V. erarbeitet vom Arbeitskreis »Bildungss tandards SII«. URL:  http://www.informatikstandards.de/docs/Bildungsstandards_SII.pdf  GI (Gesellschaft für Informatik) (2017). Empfehlungen für Bachelor - und Masterprogramme im Studienfach Informatik an Hochschulen. URL:  https://www.ft-informatik.de/filea dmin/user_upload/PDF/FTI -SK/2016GI_Empfehlung_BSC_MSC.pdf  GI (Gesellschaft für Informatik) (2018). Dissertationen: Fachdidaktische Dissertationen im Fach Informatik. URL:  https://wiki.informatikdidaktik.de/index.php?title=Kategorie:Dissertationen  Grillenb erger, A., & Romeike, R. ( 2017). Empirische Ermittlung der Schlüsselkonzepte des Fachgebiets Datenmanagement. In I. Diethelm (Ed.), INFOS 2017 -  17. GI -Fachtagung Informatik und Schule, Oldenburg (Vol. Lectures Notes in Informatics Bd. P, pp. 157-166). Bonn: Köllen Druck + Verlag.  Hubwieser, P. (2007). Didaktik der Informatik: Grundlagen, Konzepte, Beispiele  (3., überarbeitete und erweiterte Auflage ed.). Berlin Heidelberg: Springer.  Hubwieser, P., & Broy, M. (1997). Grundlegende Konzepte von Informations - und Kommunikationssystemen für den Informatikunterricht. In H. U. Hoppe & W. Luther (Eds.), Informatik und Lernen in der Informationsgesellschaft. Informatik aktuell. : Springer, Berl in, Heidelberg.  Hubwieser, P., & Mühling, A. ( 2011). “What Students (Should) Know About Object Oriented Programming,”. In Seventh International Workshop on Computing Education Research (Vol. ACM, pp. 77- 84). Humbert, L., & Puhlmann, H. (2004). Essential in gredients of literacy in informatics. In Informatics and Student Assessment. Concepts of emirical research and standardisation of measurement in the area of didactics  (Vol. 1, pp. 65- 76). Kamin, A. M., Greiner, A. D., Darmann- Finck, I., & Meister, D. M. (2016). MeCoPflege im Detail – Qualifizierung. Lernplattform. Medienpoints  (A. M. Kamin, A. D. Greiner, I. Darmann -Finck, & D. M. Meister Eds.). Paderborn: IN VIA Verlag.  Kastl, P., & Romeike, R. ( 2015). Entwicklung eines agilen Frameworks für Projektunterricht mit Design -Based Research. In J. Gallenbacher (Ed.), 16. GI -Fachtagung Informatik und Schule, Darmstadt (pp. 201- 210). Bonn: Köllen Druck + Verlag.  Kattmann, U., D uit, R., Gropengießer, H. & Komorek  M. (1997). Das Modell der Didaktischen Rekonstruktion – Ein Rahmen für naturwissenschaftsdidaktische Forschung und Entwicklung. Zeitschrift für Didaktik der Naturwissenschaften (3), 3 -18.  Keil, R. (2012). Der Computer als Medium -  Medien als Denkzeug des Geistes. In A. Knaut, C. Kühne, R. Rehak, S. Ullrich, C. Kurz, & J. Pohle (Eds.), Per Anhalter durch die Turing- Galaxis  (pp. 147- 219). Münster: Verl.- Haus Monsenstein und Vannerdat.  Keil-Slawik, R., & Magenheim, J. (2001). Informatikunterricht und Medienbildung (Vol. P -8): Koellen, Bonn.  Klafki,  W. (1996). Grundzüge eines neuen Allgemeinbildungskonzepts. Im Zentrum: Epochaltypische Schlüsselprobleme. In W. Klafki (Ed.), Neue Studien zur Bildungstheorie und Didaktik  (5 ed., pp. 43- 81). Weinheim: Beltz.  Knobelsdorf, M. (2011). Biographische Lern-  und Bildungsprozesse im Handlungskontext der Computernutzung. (PhD Thesis), Freie Universität Berlin, Berlin.  Koerber, B., & Peters, I. R. (1993). Planungsstrukturen bei größeren Unterrichtsvorhaben – Theorie und Praxis der Planung informatischer Bildungsprozesse bei komplexen Problemlösungen. LOGIN, 13 (6), 19- 25.  Koubek, J., Schulte, C., Schulze, P., & Witten, H. ( 2009). Informatik im Kontext (IniK) -Ein integratives Unterrichtskonzept für den Informatikunterricht. Inpp. 268- 279). Krämer, B., Gotthardt, K., Magenheim, J., & Neugebauer, J. (2014). On Benefits of Interactive Online Learning in Higher Distance Education: Repeating a Learning Analytics Project in the Context of Programming Education. International Journal on Advances in Life Sciences, 12 (6), 3& 4.  Krohn, W. (1992). Zum historischen Verständnis der Technik. In G. Hurrle (Ed.), Technik – Kultur –Arbeit  (pp. 27- 34). Marburg: Schüren.  Magenheim, J. ( 2008). Systemorientierte Didaktik der Informatik Sozio -technische Informatiksysteme als Unterrichtsge genstand? In U. Kortenkamp, H. G. Weigand, & T. Weth (Eds.),pp. 17- 36). Hildesheim: Franzbecker. Magenheim, J., Nelles, W., Rhode, T., Schaper, N., Schubert, N., & Stechert, P. ( 2010). Competencies for informatics systems and modeling: Results of qualitative content analysis of expert interviews. Inpp. 513- 521). Madrid, Spain: IEEE.  Magenheim, J., & Scheel, W. (2004). Der MuSofT Abschlussbericht; LE 1.3 Softwareengineering in der Informatiklehrerausbildung; LE 2.4 Dekonstruktion von Softwaresystemen. Abschl ussbericht des Projektes "Mulitmedia in der Software Technik , 45-67.  Magenheim, J., & Schulte, C. (2006). Social, ethical and technical issues in informatics —an integrated approach (Vol. 11): Springer.  Medienbrüche  (2017). Schriftenreihe des DFG -SFB/FK. URL:  http://www.fk615.uni -siegen.de/de/pubschriftenreihe.php  Mittermeir, R. ( 2010). Informatikunterricht zur Vermittlung allgemeiner Bildungswerte. In 25 Jahre Schulinformatik: Zukunft mit Herkunft (Vol. 271, pp. 54- 73). Wien: Österr. Computer -Ges. Modrow , E. (2010). Informatik als technisches Fach. LOG IN (163/164), 38- 42.  Mühling, A. (2014). Investigating Knowledge Structures in Computer Science Education. (PhD), TU München, München.  Mulder, F., & van Weert, T. (2000). IFIP/UNESCO's informatics curricul um framework 2000 for higher education. ACM SIGCSE Bulletin archive, 33(4), 75 -83.  NCTM (National Council of Teachers of Mathematics)  (2000). Principles and Standards for School Mathematics. In. Neugebauer, J., Magenheim, J., Ohrndorf, L., Schaper, N., & Schubert, S. (2015). Defining Proficiency Levels of High School Students in Computer Science by an Empirical Task Analysis Results of the MoKoM Project. In A. Brodnik & J. Vahrenhold (Eds.), Informatics in Schools. Curricula, Competences, and Competitions  (Vol. 9378, pp. 45-56): Cham: Springer International Pbulishing. Nievergelt, J . (1993). Was ist Informatik- Didaktik? Informatik -Spektrum, 16, 3- 10.  Papert, S. (1982). Mindstorms: Kinder, Computer und Neues Lernen. Basel: Birkhäuser Verlag.  Przybylla, M., & Romeike, R. ( 2014). Physical computing in computer science education. In C. Schulte, M. Caspersen, & J. Gal -Ezer (Eds.), WiPSCE 2014 (pp. 136- 137). Berlin: ACM, New York, USA.  Rechenberg, P. (2000). Was ist Informatik? Eine allgemeinverständliche Einführ ung (3. überarbeitete und Auflage ed.). München: Hanser.  Rechenberg, P. (2010). Was ist Informatik? In 25 Jahre Schulinformatik - Zukunft mit Herkunft  (pp. 46- 53): Österr. Computer Ges.  Resnick, M. ( 2007). Sowing the Seeds for a More Creative Society. In). Robinsohn, S. B. (1967). Bildungsreform als Revision des Curriculum . Neuwied. Romeike, R. (2008a). Kreativität im Informatikunterricht.  (Dissertation), Universität Potsdam, Potsdam.  Romeike, R. ( 2008b). Where's my Challenge? The Forgotten Part of Problem Solving in Computer Science Education. In 3rd ISSEP Intern. Conf. on Informatics in Secondary Schools -  Evolution and perspectives. Torun, Polen. Romeike, R. (2017). Wie informatische Bildung hilft, di e digitale Gesellschaft zu verstehen und mitzugestalten. In S. Eder, C. Mikat, & A. Tillmann (Eds.), Software takes command. Herausforderungen der „Datafizierung" für die Medienpädagogik  (pp. 105- 118). München: kopaed.  Schaper, N., Ulbricht, T., & Hochholdinger, S. (2008). Zusammenhang von Anforderungsmerkmalen und Schwierigkeitsparametern der P -TEDS -Items. In S. Blömeke, G. Kaiser, & R. Lehmann (Eds.), Kompetenzmessung bei angehenden Lehrerinnen und Lehrern. Ergebnisse einer empirischen Studie zum professi onellen Wissen, zu den Überzeugungen und zu den Lerngelegenheiten von Mathematik -Studierenden und - Referendaren . Münster: Waxmann. Schubert, S. (2004). Abschlussbericht zum BMBF -Projekt Simba -  Schlüsselkonzepte der Informatik in multimedialen Bausteinen unter besonderer Berücksichtigung der spezifischen Lerninteressen von Frauen. Retrieved from  Schubert, S., & Schwill, A. (2011). Didaktik der Informatik : Spektrum Akademischer Verlag.  Schulte, C. (2004). Lehr -Lernprozesse im Informatik -Anfangsunterricht -  Theoriegeleitete Entwicklung und Evaluation eines Unterrichtskonzepts zur Objektorientierung in der Sekundarstufe II. (Dissertation), Universität Paderborn, Paderborn.  Schulte, C. (2009). Dualitätsrekonstruktion als Hilfsmittel zur Entwicklung und Planung  von Informatikunterricht. In Informatik braucht Herkunft: 25 Jahre “INFOS -  Informatik und Schule” : Koellen, Bonn.  Schulte, C., Magenheim, J., Müller, K., & Budde, L. ( 2017 ). The design and exploration cycle as research and development framework in comput ing education. In EDUCON 2017 (pp. 867-876). Athens, Greece: IEEE.  Schwill, A. (1993). Fundamentale Ideen der Informatik. Zentralblatt für Didaktik der Informatik, 93(1), 30ff.  Smile  (2017). Das Projekt "smile" -  Mädchen lernen Informatik. smile -smart -it. URL:  https://www.smile -smart -it.de/index.php/projekt/  Starruß, I. (2010). Synopse zum Informatikunterricht in Deutschland. Analyse der informatischen Bildung an allgemein bildenden Schulen auf der Basis der im Jahr 2010 gültigen Lehrpläne und Richtlinien.  Stechert, P. (2009). Fachdidaktische Diskussion von Informatiksystemen und der Kompetenzentwicklung im Informatikunterricht. (Dissertation), Universität Siegen, Fachbereich 12 -  Elektrotechnik und Informatik, Siegen.  Strauss, A., & Corbin, J. (1996). Grounded Theory: Grundlagen qualitativer Sozialforschung. Weinheim: Beltz.  Strecker, K. (2009). Informatik für Alle -  wie viel Programmierung braucht der Mensch? (Dissertation), Universität Göttingen, Göttingen. Retrieved from https://ediss.uni -goettingen. de/handle/11858/00- 1735- 0000- 0006- B3C8 -0  Strecker, K. (2013). Medizinische Informatik in der Sek 1. In INFOS 2013: Informatik erweitert Horizonte -- 15. GI -Fachtagung Informatik und Schule  (Vol. P -219, pp. 25- 34). Bonn.  TABULA (2017). TABULA. Lehr - und Forschungsgebiet Informatik 9 -  Lerntechnologien. URL:  http://learntech.rwth -aachen.de/go/id/ltmn  Tedre, M. (2014). The Science of Computing: Shaping a Discipline . Boca Raton, FL, USA: Chapman & Hall/CRC Press.  The Royal  Society  (2012). Shut down or restart ? The way forward for computing in UK schools. URL:  https://royalsociety.org/~/media/education/computing -in-schools/2012-01-12-computing- in-schools.pdf  Thomas, M. (2002). Informatische Modellbildung – Modellieren von Modellen als ein zentrales Element der  Informatik für den allgemeinbildenden Schulunterricht. (Dissertationsmanuskript), Universität Potsdam, Potsdam.  Voss, S. (2006). Modellierung von Standardsoftwaresystemen aus didaktischer Sicht. (Dissertation), TU München, München.  Wagenschein, M. (1962). Pädagogische Aufsätze zum mathematischen Unterricht. In E. Löffler (Ed.), Der Mathematikunterricht . Stuttgart: Ernst Klett Verlag.  Weekly, J. A., & Polyhart, R. E. (2006). Situational Judgment Tests: Theory, Measurement, and Application. London: Mawah ( N. J.). Weinert, F. E. (2001). Vergleichende Leistungsmessung in Schulen -  eine umstrittene Selbstverständlichkeit. In F. E. Weinert (Ed.), Leistungsmessungen in Schulen (pp. 17-31). Weinheim, Basel: Beltz Verlag.  Wilke, A ., & Magenheim, J. ( 2017). Requirements analysis for the design of workplace -integrated learning scenarios with mobile devices: Mapping the territory for learning in Industry 4.0. In EDUCON 2017 (pp. 476- 485). Athens, Greece: IEEE.  Wing, J. M. (2006). Computational thinking. Communi cations of the ACM, 49, 33- 35. WiPSCE  (2018). Workshop in Primary and Secondary Computing Education. URL:  http://wipsce.org  Zoyke, A., Beutner, M., Herrmann, P., Kundisch, D., Magenheim, J., & Neugebauer, J. (2017). Webbasierte Classroom Response Systeme in der Hochschullehre: Eine designbasierte Fallstudie zur Unterstützung von Lehr -/Lernprozessen aus Studierendensicht. Das Hochschulwesen, 65(1+2), 48 -52.   Informatikunterricht und Didaktik der Informatik     Johannes Magenheim  & Ralf Romeike     Das Schulfach Informatik ist noch relativ jung, war und ist aber dennoch bereits unter  verschiedensten Namen und Konzeptionen in der Schule zu finden, bspw. a ls Rechnerkunde,  Informationstechnische Grundbildung, Medienbildung oder gar Digitalkunde. Im Folg enden  beziehen wir uns auf Informatikunterricht, der informatische Bildung zum Ziel und somit die  Methoden, Prinzipien und Arbeitsweisen der Wissenschaft ‚ Informatik ‘ zum Gegenstand hat.  Hierbei stellen wir vor allem die Situation in Deutschland dar. Da zu nehmend auch in anderen  Ländern Informatikunterricht in den Fächerkanon aufgenommen wird, fließt an verschiedenen  Stellen auch die internationale Perspektive mit ein.        A. Geschichtlich bedeutsame Kontexte und Entwicklungen zum Fach und zur  Fachdidaktik     1. Geschichte und Verständnis des Unterrichtsfachs Informatik und des Fachlichen   Die Geschichte des Unterrichtsfachs ‚ Informatik ‘ ist unmittelbar an die junge Geschichte d er  Bezugswissenschaft ‚Informatik ‘ geknüpft. Informatik ist die „Wissenschaft von der  systematischen Darstellung, Speicherung, Verarbeitung und Übertragung von Informationen, besonders der automatischen Verarbeitung mithilfe von Digitalrechnern“  (Claus & Schwill,  2006) .   Dabei knüpft Informatik an ‚vortechnische‘ Traditionen aus der Frühzeit der  Menschheitsgeschichte an. Zur Darstellung von Information verwendete der Mensch von  Anbeginn an Zeichen und Piktogramme (Höhlenmalerei), später folgte die Schrift. Für  numerische Information haben das Festha lten ( Speichern ) und Verarbeiten  tausende Jahre alte  Bezüge: Viele frühe Zivilisationen erschufen hierfür bereits Hilfsmittel, bspw. Rechenstäbchen   (vgl. Tedre, 2014) . Als ältester bekannter nicht -trivialer Algorithmus gilt der euklidische  Algorithmus zur Berechnung des größte n gemeinsamen Teiler s zweier natürlicher Zahlen von  um 300 v. Chr.. Über die Jahrtausende wurden verschiedenste (Rechen)Maschinen entwickelt,  bspw. der Mechanismus von Antikythera , einem griechischen analogen „Computer“ zur  Berechnung  astronomischkalendarische r Zusammenhänge, der heute als erster An alogrechner  gilt und im 1. Jh. v. Chr. entwickelt wurde  (Bruderer, 2015) . Der Begriff Algorithmus geht auf  den Namen des arabischen Mathem atikers und As tronom en Ibn Musa Al -Chwarismi zurück, der im 9. Jh. in seinem Lehrbuch Regeln über das Rechnen mit indischen Ziffern darstellte   (Bruderer, 2015) . Weitere Meilensteine in der automatischen Verarbeitung von Information  folgten: Adam Riese beschrieb 1574 die Rechengesetze des (aus Indien  stammenden)  Dezimalsystems, we lches nun die Automatisierung des Rechenvorgangs ermöglichte, was von  Schickard 1623 mit einer Rechenmaschine realisiert wurde. Leibniz konstruierte 1674 eine  Rechenmaschine für die vier Grundrechenarten und entwickelte paral lel dazu das Dualsystem,  die Grundlage heutiger Computer. Mit der  Analytical Engine  legte Babbage 1837 einen Entwurf  für eine computerähnliche, d.h. programmierbare Rechenmaschine für allgemeine  Anwendungen mit Eingabe (Lochkarten) und Ausgabefunktion vor . Seine Assistentin  Lovelace schrieb hierfür das erste komplexe Computerprogramm.   Neben der Darstellung ist auch der Wunsch der Übertragung von Information über weite  Entfernungen uralt . Als Beispiele seien hier nur seit p rähistorischer Zeit  verwendete Rauch  und Feuer zeichen oder die optische Telegraphie des 19. Jahrhunderts genannt.  Das Entwickeln von Codierungen, sodass Informationen in Daten repräsentiert, automatisiert verarbeitet und übertragen werden können, obliegt heute zumeist der I nformatik. Es wird  deutlich, dass die Wurzeln bis hierhin vor allem in der Mathematik und Nachrichtentechnik zu finden sind, gefolgt von Entwicklungen der Elektrotechnik, die zusammen mit der in den  1930er  Jahren entwickelten Booleschen  Logik den Entwurf und die Realisierung digitaler  Schaltkreise ermöglichten. In dieser Zeit begann sich Informatik als eigenständige  Wissenschaft zu entwickeln  (Tedre, 2014, S. 3) . So wurde mit der nach dem legendären  englischen Mathematiker Turing benannten sogenannten TuringMaschine  1936 ein  theoretisches Modell der Arbeitsweise, Möglichkeiten und Grenzen eines Computers  eingeführt  (Was ist (nicht) berechenbar?).  Zuse hatte bereits 1934 die Idee, das duale  Zahlensystem zum maschinellen Rechnen zu verwenden (Rechenberg, 2000)  und sorgte damit  für einen Entwicklungssprung , der es letztlich ermöglichte,  dass die mechanischen Maschinen  zu elektronischen Geräten weiterentwickelt werden  konnten.   Der Begriff ‚ Informatik ’ geht auf das  vom französi schen Ingenieur  Philippe Dreyfus aus den  Wörtern „ Infor mation + Auto matique “ gebildete Kunstwort ‚ Informatique ‘ zurück, welches  durch den damaligen Bundesminister  für Wissenschaft und Forschung Stoltenberg 1968 für den  Aufbau der ersten Informatikstudiengänge übernommen und so im deutschen Sprachraum  verbreitet wurde  (Coy, 2001) . Zu jener Zeit setzte  nicht nur die Entwicklung der damit  verbundenen, sehr dynamischen Wissenschaft  Informatik ein , die bis  heute andauert und  regelmäßigen Paradigmenwechseln unterliegt . Auch die Anfänge des Informatikunterrichts   reichen in diese Zeit zurück. Der e rste Informatikunterricht  fand als Wahlfach in der Sekundarstufe in den späten 1960er Jahren statt, einer Zeit, in der bereits einige spektakuläre  Leistungen der Computertechnik für die Allgemeinheit spürbar wurden. Ausgangspunkt des  noch als ‚ Rechnerkunde ‘ (Frank & Meyer, 1974)  bezeichneten Schulfachs war die  Computertechnik mit dem Ziel, ein Verständnis der Hardware realer  Datenverarbeitungsanlagen zu vermitteln, wobei ein Fokus auf die mathematisch -technischen  Grundlagen der Datenverarbeitung (bspw. binäre Arithmetik, Schaltalgebra und  Aussagenlogik) und deren Realisierung (bspw. mit Schaltnetzen, interner Programmsteuerung  und den erforderlichen Komponenten des Rechners) gelegt wurde. Es bestand zudem  die  Vorstellung, dass mit den ‚Rechnern’ mittels eines Bildungsalgorithmus Lernprogramme für unterschiedliche Schulfächer entwickelt werden könnten. Rechnerkunde sollte auf diese Weise    schulisches  Grundlagenfach für die programmierte Unter weisung im Unterricht werden.   Alsbald wurde allerdings der allgemeinbildende Beitrag dieser Fokussierung  auf  mathematisch -technische Grundla gen der Datenverarbeitung  in Frage gestellt: „Die Schüler  sollen vielmehr eingeführt werden in Methoden der Struktur ierung, Mathematisierung und  Algorithmisierung von Problemkreisen aus verschiedenen Gebieten (d.h. Methoden der Modellbildung und Problemlösung) sowie vor allem in die Methoden des systematischen  Programmierens und Möglichkeiten des Einsatzes von Datenvera rbeitungsanlagen zur  Behandlung komplexer Aufgaben“  (Brauer & Brauer, 1973) .  In diese m Anfang der 1970er Jahre entwickelten Ansatz wurde der Algorithmus als zentraler  Begriff und allgemeinbildender Kern eines Informatikunterrichts aufgefasst, was eng verbunden war mit der Anerkennung der Informatik als neuer wissenschaftlicher Disziplin und  der zunehmenden Systematisierung der Softwareentwicklung. Mit einem  fachwissenschaftspropädeutischen Anspruch sollten die Schülerinnen und Schüler die Gesetze  und Methoden der informatischen Problemlösung verstehen lernen und entdecken, dass viele  verschiedene Probleme mit derselben Methode bearbeitet werden können. Hierzu gehörte auch  das Erlernen einer Programmiersprache als Voraussetzung für die Implementierung. Kern s ollte  aber die ‚neue Art des Denkens ‘ sein, in der dynamische Prozesse unter Berücksichtigung von  Zeit (sequentielle und parallele Abläufe) und der Darstellung und Speicherung der benötigten  (Daten -)Objekte im Vordergrund stehen, deren Resultat ein lauffähiges Programm darstellt.  Eine in der Unterrichtspraxis häufig überzogene Algorithmenorientierung führte aber zu  Unterricht, der als Programmierkurs wahrgenommen wurde und in dem Algorithmen vor allem  als Selbstzweck aber nicht zur Lösung von Problemen hera ngezogen wurden, was den  Ansprüchen eines allgemeinbildenden Schulfachs nicht gerecht wurde  (Hubwieser, 2007) . Mitte der 1980er Jahre erfolgte eine Neuausrichtung des Informatikunterrichts, in dem nun  weniger der Computer als vielmehr der Benutzer im Mittelpunkt stehen sollte. Geprägt von der  inzwischen  auch in Privathaushalten verbreiteten Computertechnik schien es notwendig,  Unterricht an der Benutzung/Bedienung der Softwareprodukte auszurichten und somit  lebenspraktische Orientierung zu bieten. Ausgangspunkt des auch als ‚ Informationstechnische  Grundbildung ‘ bezeichneten Unterrichts waren somit nicht mehr informatische Prinzipien,  sondern die (kommerziellen) Produkte der technologischen Entwicklung ( bspw.  Textverarbeitung, Tabellenkalkulation, Datenbanksysteme und Graphikanwendungen), mit  denen Probleme des Alltags systematisch gelöst werden sollten. Ein tieferes Verständnis der  Informatik wurde hierdurch allerdings nicht erreicht  (Hubwieser, 2007) .  Die Entwicklung des Unterrichtsfachs orientierte sich dabei bereits in seinem Ursprung an  gesellschaftlichen Erfordernissen, die insbesondere durch die Entwicklungen der  Computertechnik spürbar werden. So ist es ein (in fast allen Curricula allgemeinbildender  Schulen weltweit nachvollziehbarer) Konsens, dass zwar auch Anwendungsfertigkeiten,  insbesondere aber Konzeptwissen vermittelt werden sollen (vgl. Gander et al., 2013; The Royal   Society , 2012) . Anwendungsfertigkeiten beziehen sich auf die Nutzung vorhandener Systeme  (bspw. Erstellen und Überarbeiten von Dokumenten, Suchen und Ablegen von Informationen) ,  stellen aber nur einen Nebeneffekt informatischer Bildung dar. Davon abgegrenzt werden Informatik und informatische Bildung mit eigenen Themen und Inhalt en, wie beispielsweise  Information und Daten, Algorithmen, (formalen) Sprachen und Automaten, Informatiksystemen und den gesellschaftlichen Auswir kungen. Durch den Bezug auf die  grundlegenden Prinzipien, Methoden und Arbeitsweisen der Bezugswissenschaft In formatik  können Kompetenzen erworben werden, die nachhaltig wirken und sich nicht nur auf zeitlich  befristete Artefakte beziehen. Als solches wird die Beherrschung der grundlegenden Methoden  und Werkzeuge der Informatik auch als vierte Kulturtechnik bezeic hnet (Coy, 2008) .   Die Konstruktion von Computern macht dabei heute einen eher geringen Teil der Informatik  als Fachwissenschaft  aus – mit entsprechenden Konsequenzen für das Schulfach. Vielmehr  untersucht die Informatik „ elementare Strukturen und Prozesse, Prinz ipien und Architekturen  von Sys temen, Interaktionen in kleinen, mittleren und w eltumspannenden Netzen, die  Konzeption, Entwicklung und Implementierung von Hardware und Software bis hin zu  hochkomplexen Anwendungssystemen und der Reflexion über ihren Einsatz und die   Auswirkungen“  (GI, 2006) . Informatik hat sich zu einer Grundlagenwissenschaft entwickelt,  deren Werkzeuge, Methoden und Denkweisen  in alle anderen Wissenschaften eindringen und  zu neuen Model len und Darstellungsweis en führen (ebd.) . Sie hat vielfältige Innovationen hervorgebracht, die die Gesellschaft maßgeblich verändert haben und weiterhin verändern  (Stichwort Digitalisierung , bspw. Simulation als neue wissenschaftliche Methode, Künstliche  Intelligenz, Internet, Big Data ).   Entspr echend  gilt heute für den Informatikunterricht : Er soll den Auswirkungen der durch  Informatik und Computer durchdrungenen Gesellschaft Rechnung tragen. In der Auseinandersetzung mit den Methoden, Prinzipen und Arbeitsweisen der Wissenschaft  Informatik können die Kompetenzen und Denkweisen erworben werden, die notwendig sind, die Grundlagen, Funktions und Wirkprinzipien digitaler Systeme zu verstehen, sie effizient zu  nutzen und deren Auswirkungen zu reflektieren.       2. Ursprünge und Entwicklungen der Didaktik der Informatik   Nachdem die Ausrichtung der Schulinformatik bis Mitte der achtziger Jahre vor allem durch  eine engagierte Lehrerschaft und verschiedene, an schulischen Belangen interessierte  Fachwissenschaftler geprägt  wurde, erfolgte in den 90er J ahren eine fachliche Neuausrichtung,  die mit der allmählichen Etablierung der Didaktik der Informatik  (DDI)  als Teilgebiet der  Informatik einhergeht und zu verschiedenen Vorschlägen für die Gestaltung des Schulfachs  führte . Mit der Einrichtung der ersten P rofessuren etablierte sich die DDI langsam als  Wissenschaft, die das Unterrichtsfach zunehmend auf eine wissenschaftliche Grundlage stellte  und sich für eine fachlich adäquate Ausgestaltung des Unterrichts und der Lehrerbildung  einsetzte . Dabei folgten die  informatikdidaktischen Ansätze zunächst primär  fachwissenschaftlichen Vorgaben. So stellte Schwill (1993)  mit den ‚ Fundamentalen Ideen der  Informatik ’ ein Konzept vor, das Inhalte des Unterrichtsfachs danach auswählt, ob sie  langfristig und in der Breite der Wissenschaft relevant, auf verschiedenen kognitiven Niveaus  vermittelbar und in der Lebenswelt wahrnehmbar sind. Baumann (1993)  stellte fest, dass sich  informatisches Problemlösen vor allem in der Entwicklung von Informatiksystemen 0F1 zeigt und  diese deshalb  eine zentrale Rolle spielen sollten. Hubwieser und Broy (1997)  erachtete n die  Fähigkeit zum Umgang mit Information als Ziel des Informatikunterric hts, wodurch die  charakteristischen Eigenschaften von Informations und Kommunikationssystemen verstanden  werden sollen. Im Unterricht soll, so Hubwieser und Broy, die informatische Modellierung  betont und von Problemstellungen der Praxis aus gegangen werde n. Ein solcher Unterricht  durchläuft die Phasen der Problembeschreibung, formalen Modellierung,                                                              1 Als Informatiksystem wird eine spezifische Zusammenstellung von Hardware-, Software und Netz werkkomponenten  bezeichnet, sowie die dazugehörigen nichttechnischen Aspekte, die sich durch die Einbettung in gesellschaftliche  Kontexte ergeben.  Realisierung/Simulation bis hin zur Bewertung. Dieser Ansatz wurde grundlegend für die  Einführung eines verpflichtenden Unterrichtsfachs in Bayern.   Entsprechend stehen  heute auch in der Didaktik der Informatik Fragen der Anwendungs und  Grundlagenforschung in schulisch relevanter Form im Fokus , wie in den Kapitel 3 und 4 noch  detaillierter aufgezeigt werden wird . Einfluss auf den Informatikunterricht nimmt die  Informatikdidaktik dabei vor alle auch durch die regelmäßigen Positionspapiere der  Gesellschaft für Informatik (GI). So wurden im Jahr 2000 mit den ‚ Empfehlungen für ein  Gesamtkonzept der informatischen Bildung‘  (GI, 2000)  Informatik als Bezugswissenschaft  heraus gestellt und für das Unterrichtsfach die Fokussierung auf Grundlagen, Methoden,  Anwendungen, Arbeitsweisen und die gesellschaftliche Bedeutung von Informatiksystemen  vorgeschlagen. Alsbald begann eine breit angelegte Arbeitsgruppe aus Lehrern und  Fachdidaktikern mit der Erarbeitung von Bildungsstandards für das Fach Informatik. Im Jahre  2008 wurde dann die Empfehlung ‚ Grundsätze und Standards für die Informatik in der Schule  Bildungsstandards für die Sekundarstufe I ‘ (GI, 2008)  verabschiedet, die de m Ziel einer  zeitgemäßen und fachlich substanziellen informatischen Bildung in den Schulen Nachdruck  verlieh und einen spürbaren Einfluss auf die folgenden Lehrpläne nahm. Im Zuge des  steigenden Einflusses der Digitalisierung auf alle Lebensbereiche wird i nformatische Bildung  zunehmend als wesentlicher Baustein der Allgemeinbildung wahrgenommen. Derzeit wird Informatikunterricht in drei Bundesländern (Bayern,  MecklenburgVorpommern , Sachsen ) für  alle Schülerinnen und Schüler  als Pflichtfach in der Sekundars tufe I angeboten. Darüber hinaus  existieren  in allen Bundesländern unterschiedlichste Angebote im Wahl (pflicht) unterricht ab  der Sekundarstufe I bis hin zum Abitur (vgl. Starruß, 2010) .   Einfluss hat zunehmend auch das i m internationalen Bildungsbereich ei nflussreiche Konzept  des ‚Computational Thinking ‘. In England, Neuseeland oder der Schweiz  hat dieses  bei der   Einführung eines für alle Schülerinnen und Schüler verpflichtenden Schulfachs geholfen .  “Computational Thinking is the thought processes involved in formulating problems and their solutions so that the solutions are represented in a form that can be effectively carried out by an  information -processing agent (eg. combinations of humans and machines)”  (Wing, 2006) .  Damit rücken  Konzepte wie Logisches Denken, Abstraktion, Algorithmen, Dekomposition und  Evaluation sowie Arbeitsweisen wie Experimentieren, Kreativität, Fehlerfinden und Kollaboration in den Fokus. Diese sind notwendi g, um ein Problem  oder eine Fragestellung  so  zu bearbeiten , dass ein Comput er bei der Lösung helfen kann (Barefoot, 2017) . Konzeptwissen  der Informatik hilft hierbei, digitale Medien nicht nur effizient und effektiv zu benutzen (vgl.  Voss, 2006) , sondern sie auch zu verstehen, weshalb im Kontext der bildungsbezogenen Strategien z ur Digitalisierung  dem Stellenwert der informatischen Bildung  zunehmend  Rechnung getragen wird.   Dabei ist die Informatikdidaktik  mit dem Problem  konfrontiert , dass bis  heute die mit früheren  Anwendungspraxen von Lehrkräften verbundenen Erfahrungen, überlieferte  Unterrichtsmaterialien und Bücher in nicht geringem Maße die Vorstellungen, Denkweisen und  Erwartungen von Lehrkräften, Eltern und Bildungsverantwortlichen prägen . Es bleibt eine  Herausforderung der DDI, das inzwischen recht stabi le Fachverständnis, das sich in den letzten  20 Jahren als Konsens gebildet  hat, inhaltlich und methodisch abzusichern und zugleich die   fachliche Weiterentwicklung der Informatik aufzugreifen und für den Informatikunterricht  fachdidaktisch aufzuarbeiten  (bspw. Big Data  (Grillenberger & Romeike, 2017) , Agile  Methoden der Softwareentwicklung  (Kastl & Romeike, 2015) ). Jüngere Ansätze, die auch  durch internationale Entwicklungen bestärkt werden, fordern Informatikunterricht bereits in  jüngeren Jahren , was derzeit in einer verstärkten Hinwendung zur Primarstufe und ersten  Versuchen im Kindergarten resultiert (Bergner et al., 2018) .    B. Lernen im Fach Informatik und seine fachdidaktische Erforschung   3. Ziele, Inhalte und Kompetenzen des Informatikunter richts und der informatischen  Bildung    Die didaktische Diskussion über Ziele, Inhalte und Methoden des  Unterrichtsfach s  ‚Informatik ’ und Kompetenzen, die Schülerinnen und Schüler hier entwickeln sollen, i st seit  jeher  durch einen starken Legitimationsdruck geprägt  gewesen . Dies führt e und führt  dazu, dass  in Curricula zu m Informatik unterricht  oft das Ziel leitend ist, den allgemeinbildenden Charakter  des Unterrichtsfaches im Kanon der etablierten Fächer nachzuweisen.  Dabei wird zumeist der  eigenständige Wert informatischer Bildung in einer in vielen Bereichen durch Digitalisierung  geprägten Gesellschaft  betont . Ein zentrales Argument ist in diesem Zusammenhang, dass d as  Verstehen wesentlicher informatischer Prinzipien w ie das Strukturieren, Verarbeiten,  Speichern und Verteilen von Daten und der kompetente Umgang mit Informatiksystemen als  ‚Vierte Kulturtechnik’ anzusehen sei. Auf diese Weise wird trotz der  ingenieurwissenschaftlichen Wurzeln des Faches und inhaltlicher Ü berschneidungen zur  Mathematik der besondere Stellenwert des Faches hervorgehoben. Dabei wird die Entwicklung  von Informatiksystemen als Ergebnis eines auf normativen Entscheidungen beruhenden Gestaltungsprozesses begr iffen. Informatische Bildung hat in di esem Sinne dazu bei zutragen ,  die vermeintlich alternativlose Zweckrationalität von Informatiksystemen kritisch zu hinterfragen und Schülerinnen und Schüler zur  kritischen Nutzung und ggf. Gestaltung derartiger  Systeme zu befähigen. 1F2 Als Orientierungspunkte  sind dabei  die folgenden  Schlüsselfragen  verbreitet :   (1) Was:  Welches sind die zentralen Inhalte des Unterrichtsfachs Informatik?   (2) Warum:  Nach welchen Kriterien werden die Inhalte aus der Vielfalt der informatischen  Themen der Fachwissenschaft ausgewählt, und welche spezifische allgemeinbildende  Bedeutung kommt ihnen zu?   (3) Wozu : Welches sind die zentralen Bildungsziele des Unterrichtsfachs In formatik?   (4) Wie: Mit welchen spezifischen Unterrichtsmethoden sollen die Inhalte im  Informatikunterricht vermittelt werden und in welcher Relation stehen diese zu den fachwissenschaftlichen Methoden der Informatik?   (5) Womit : Welche spezifischen Medien können im  Unterrichtsfach eingesetzt werden und   welche Bedeutung kommt dabei professionellen Entwicklungswerkzeugen der Informatik  zu?  (6) Für wen : Für welche Zielgruppen soll Informatik bzw. informatische Bildung in den  einzelnen schulischen Organisationsform en angeboten werden?  (vgl. Magenheim, 2008;  Magenheim & Schulte, 2006; Schubert & Schwill, 2011) .  Neben diesen Schlüsselfragen ist  für die Begründung von Inhalten und Zielen des  Unterrichtsfachs Informatik auch die  Entwicklung der zugehörigen Fachw issenschaf t von  Bedeutung . Diese ist z.T. nämlich durch eine relative Kurzlebigkeit angewandte r  fachwissenschaftliche r Methoden, Gegenstandsbereichen und Werkzeugen gekennzeichnet .  Schwill (1993)  hat vor diesem Hintergrund in Anlehnung an entwicklungspsychologische  Überlegungen von Bruner (1966)  mit seinem Konzept der ‚fundamentalen Ideen der  Informatik’ Kriterien zur Identifikation stabiler fachlicher Gegenstandsbereiche geliefert, die  unabhängig von fachwissenschaftlichen ‚Moden‘ auch als Kategorien zur Auswahl geeigneter  Lerninhalte dienen können. Diese Kriterien sind:   • Horizontalkriterium (Fachinhalt ist in vielen Teildisziplinen des Faches Informatik  relevant),   • Vertikalkriterium (Fachinhalt ist auf unterschiedlichen kog nitiven Niveaustufen  erschließbar),                                                               2  Das in der Curriculumdiskussion seit jeher bekannte Problem der normativen Fundierung (vgl. Robinsohn,  1967)  wurde in der fachdidaktischen Diskussion der Informatik im Hinblick auf die allgemeinbildende  Funktion des Faches vor allem mit Bezug auf Klafki (1996)  und auf Bussmann und Heymann (1987)   geführt. Verschiedene fachdidaktische Ansätze betonten und betonen den Beitrag des Unterrichtsfachs  ‚Informatik’ zum Verständnis und implizit zur Bewältigung des für das 21. Jahrhundert grundlegenden  Schlüsselproblems  ‚Informations und Kommunikationstechnologien’ und der damit verbundenen  Schlüsselkompetenzen.  • Zeitkriterium (Fachinhalt ist über einen längeren Zeitraum von Bedeutung für das Fach  Informatik),   • Sinnkriterium (Fachinhalt lässt sich über die Erfahrung der Zielgruppe in ihrer Alltagswelt  erschließen) und   • Zielkrite rium (Fachinhalt erschließt einen Bezug zu aktuellen Forschungsfragen des Faches  Informatik).   Als fundamentale Ideen der Informatik, die den genannten Kriterien genügen, werden z. B.   ‚Algorithmisierung’, ‚Sprache’ und ‚strukturierte Zerlegung’ genannt . Diese abstrakten  Konzepte (Masterideen) stellen zentrale Säulen der informatischen Modellbildung dar , die  ihrerseits  in Unterkategorien eingeteilt werden  können. Zu nennen sind beispielsweise  ‚Algorithmisierung’ in ‚Entwurfsparadigmen’, ‚Programmierkonzept e’, ‚Ablauf’ und  ‚Evaluation’ . Bei allen handelt es sich um  wesentliche Aufgabengebiete der Software Entwicklung und der informatischen Systemgestaltung. Anknüpfungspunkte für die  Begründung relevanter fachwissenschaftlicher Inhalte im Informatikunterricht  liefert überdies  der internationale Disku rs, etwa der Beitrag ‚Great Principles of Computing’ von Denning  (2004)  oder internationale Empfehlungen zur Gestaltung von Informatikcurricula in den  Bereichen ‚Higher’ und ‚Secondary Education’  (ACM, 2003, 2004; CSTA, 2011; Mulder &  van Weert, 2000) .  Fast alle fachdidaktische n Ansätze im deutschsprachigen Raum greifen  zumindest einige der  erläuterten informatischen Leitideen auf , um Inhalte und Zielsetzungen des Schulfaches  Informatik aus ihrer  jeweiligen Perspektive zu begründen. Nachfolgend sollen besonders  einflussreiche Konzepte in ihren inhaltlichen Akzenten und Zielen skizziert werden.   1. In einer frühen Phase des Informatikunterrichts, in der zwar kleinere Hardwaresysteme, aber  kaum verfü gbare Anwendersoftware vorhanden war, konzentrierte sich der Unterricht auf die  hardwarenahe Programmierung von Computern (hardwareorientierter Ansatz ) und deren  potenzielle Fähigkeit zur programmierten Unterweisung  (Frank & Meyer, 1974) . Auf diese  Weise s ollte Schülerinnen und Schüler n ein fundamentales Verständnis für einfache  Rechnerarchitekturen und Grundlagen hardwarenaher Programmierung vermittelt werden. Mit  der weiteren fachwissenschaftlichen Entwicklung rückte die Softwarenutzung und deren  Bedeutun g für die informatische Bildung immer stärker in den Mittelpunkt. Gleichzeitig wurde  die Beziehung zwischen Computer und Informatik im Hinblick auf fachliches Lehren und Lernen  diskutiert. Mittermeir betont in diesem Zusammenhang  allerdings , dass  Informatikunterricht nicht auf die Computernutzung reduziert werden dürfe. In der Informatik  gehe es „doch eigentlich nicht um den Computer, sondern um konstruierte (also technische) Systeme, die es erlauben, Daten (im weitesten Sinne) so zu interpr etieren, dass Aktionen  bewirkt werden“ (Mittermeir, 2010, S. 57) . Eine Gegenposition vertr itt Rechenberg, der  argumentiert, dass „die Informatik sich nicht mit Informationsprozessen in Gesellschaft und  Natur beschäftigt“. Man müsse „darauf beharren, daß Informatik heute die Wissenschaft und  Technik vom Computer und seinen Anwendungen ist, also Computerwissenschaft“   (Rechenberg, 2010, S. 47) . Allerdings ist mit Brandhofer zu konstatieren, dass eine Trennung  von Informatik und Computer(anwendung) in der fachdidaktischen Diskussion kaum stattfindet   (Brandhofer, 2014, S. 3) . Die Zielsetzungen der meisten informatikdidaktischen Konzepte  beinhalten daher sowohl die Vermittlung fundamentaler Kompetenzen in der Programmierung  eines Computers als auch von Kenntnissen über seine Anwendungen und gesellschaftlichen  Auswirkungen. 2F3  2. Im algorithmenorientierten Ansatz  (z. B.  Nievergelt, 1993)  soll Schülerinnen und Schülern  der zentrale Stellenwert von Algorithmen bei der Modellierung und Gestaltung von Informatiksystemen n ahegebracht werden, wobei die Entwicklung von Algorithmen auch  immer mit der Perspektive der Entwicklung von Software in Verbindung steht  und zu  behandeln ist . Damit sind Fragen des Speicherbedarfs, des Laufzeitverhaltens und der  Verteilung der Systemkompo nenten zu bedenken. Dies u.a. unterscheidet den Informatik vom  Mathematikunterricht im Hinblick auf den Umgang mit Algorithmen.   3. Im anwendungsorientierten Ansatz  (Arlt & Koerber, 1981; Koerber & Peters, 1993)  standen  hingegen nicht die  Algorithmen und deren Implementierung mittels einer Programmiersprache  im Fokus des Informatikunterricht s, sondern der Anwendungskontext  und die sozialen  Implikationen des Einsatzes von Informatiksystemen. Dies geschah nicht zuletzt aus einer  Kritik am algorithmenorientierten Ansatz, dem u.a. vorgehalten wurde, sich zu nah an den Zielen und Inhalten des Mathematikunterrichts zu orientieren . Am anwendungsorientierten  Ansatz wiederum wurde kritisiert, dass er Schülerinnen und Schüler  mit dem breiten Spektrum   seiner z. T. divergierenden Zielsetzungen Modellierung und Implementierung von  Informatiksystemen, Bewertung des Einsatzes derartiger Systeme und deren sozialer Folgewirkungen im Unterricht mit einer nicht zu bewältigen den Komplexität von Aufgaben  konfrontiert . Überdies stehe er in der Gefahr,  so ein weiterer Kritikpunkt, sich zu weit von                                                              3 Bei der Bewertung der damit verbundenen fachdidaktischen Diskurse ist der jeweilige historische Kontext der  fachwissenschaftlichen Entwicklung und die damit verbundene Verfügbarkeit von Hard und Softwaresystemen  im Unterricht zu berücksichtigen. Damit wird zugleich auch eine Besonderheit des Unterrichtsfaches Informatik  deutlich: Die ‚apparative Abhängigkeit’ von verfügbarer (Informations -)technik in der Schul e, die in der  Informatik wohl noch stärker ausgeprägt ist als in anderen Fächern des MINT -Bereichs.    genuin informatischen Fragestellungen zu entfernen  und zu einem verkappten  Sozialkundeunterricht zu mutieren .   4. Im benutzerorientierte n Ansatz  (Forneck, 1990)  wurde  ein Ausweg aus diesem Dilemma in  der Möglichkeit  gesehen , als wesentliches Ziel des Informatikunterrichts die Erziehung zum  verständnisvollen reflektierten Benutzen von Informatiksystemen zu priorisieren. Damit w urde  der Tatsache Rechnung getragen, dass d ie immer komplexer werdenden Softwaresysteme im  Unterricht ohnehin nicht von Schülerinnen und Schülern entwickelt oder zumindest  durchschaut werden könnten. Die Fokussierung auf den Nutzungsaspekt kann überdies auch  einen Beitrag zur Erziehung von mündigen  Bürgerinnen leisten. Als Problem des Ansatzes  stellte sich allerdings heraus, dass für die Lernenden oft nur die äußeren funktionalen Strukturen  der Benutzungsoberflächen deutlich wurden und damit Wissen im Vordergrund stand, dass  aufgrund der technischen  Entwicklungen schnell veraltete.   5. Dieses Problem wurde im  informationszentrierten  Ansatz  durch eine spezifische  Verbindung  von Programmier und Anwendungsbezug überwunden. Denn  mit den Begriffen ‚Daten ‘ und  ‚Information‘  rückten zwei wesentliche Grundi deen der Informatik in den Mittelpunkt der  Betrachtung  (Breier, 2004; Hubwieser, 2007) . Ziel des Ansatzes war und ist es, Schülerinnen  und Schüler im Informatikunterricht die Fähigkeit zu vermitteln , beide Bereiche zu  unterscheiden und deren Beziehung zuei nander zu erfassen . Daten  werden im  Modellierungsprozess aus einer Eingangsinformation formal beschrieben und mittels geeigneter Algorithmen und Datenstrukturen auf Computern verarbeitet. Dabei werd en die  Eingabe der Daten und die Darstellung der Ergebniss e auf Computern mittels Software  symbolisch repräsentiert. Es bleibt dann den Nutzern überlassen, aus der Eingangsinformation  und dem Ergebnis der formalen Berechnung vor dem Hintergrund eines (subjektiven)  Interpretationskontext es eine neue Information zu  generieren  bzw. diese zu interpretieren.  Computer und Informatik sind aus dieser Perspektive wesentliche integrale Bestandteile der  Informationsgewinnung und -verbreitung. Damit zusammenhängende Fragestellungen z. B.   nach der Form  und Angemessenheit der D atenmodellierung (objektorientiert, funktional,  prozessorientiert, zustandsorientiert, als ER -Modell) beschreiben  wichtige  Gegenstandsbereiche, in denen Schülerinnen und Schüler Kompetenzen erwerben sollen. Die  Rolle von Modellen und Modellierung en in dies em Zusammenhang  ist insbesondere von  (Thomas, 2002)  thematisiert und als wichtiger Kompetenzbereich des Informatikunterrichts  beschrieben  worden .  6. Der systemorientierte Ansatz (vgl. Magenheim, 2008)  geht bei der Behandlung komplexer  Informatiksysteme im Unterricht einen anderen Weg. Es sollen für unterrichtliche Rahmenbedingungen relativ komplexe Informatiksysteme didaktisch so vorbereitet werden,  dass für die Schülerinnen und Schüler  im Unterricht ein multipler Zugang zu deren innerer  (Algorithmen, Softw aredesign) und äußerer Struktur (GUI: Grafische Benutzungsschnittstelle)  ermöglicht wird. Durch  Dekonstruktion sollen wesentliche Designkonzepte der Software  exploriert , d.h. gezielt erkundet, und dann ggf. auch modifiziert werden. A uf diese Weise soll  das Systemverständnis der Lernenden und ihre Gestaltungskompetenzen für Informatiksysteme  gefördert werden . Dieses didaktische Prinzip w eist einen hohen Grad an Übereinstimmung mit  dem Reengineering im Bereich professioneller informatischer Aufgabenfelder auf.  Insbesondere soll Schülerinnen und Schüler n mit diese m didaktischen Konzept  verdeutlicht  werden, dass Designentscheidungen auf Soft und Hardwareebene wesentlichen Einfluss auf  den Anwendungskontext der Informatiksysteme und deren  gesellschaftlichen A uswirkungen  haben. Da die mit ein em Informatiksystem assoziierten sozialen Handlungssysteme von  interagierenden Personen bei der Modellierung und Implementierung mit bedacht werden  müssen, wird hier  auch von soziotechnischen Informatiksystemen gesprochen. Bei Brinda  (2004)  rücken in seinem Konzept des didaktischen Systems  mit der Bestimmung von  wesentlichen Determinanten der unterrichtlichen Umsetzung von Informatikinhalten und der  Klassifizierung von Aufgabenstellungen des Informatikunterrichts hinsichtli ch ihrer  Komplexität und ihres Schwierigkeitsgrades weitere Einflussfaktoren in den Fokus.   7. Die besondere Bedeutung des Einsatzkontextes von Informatiksystemen als  Unterrichtsgegenstand und dessen Beziehung zur Systemgestaltung werden auch in  dem  fachdidaktischen Konzept  ‚Informatik im Kontext ‘ (INIK ) und  dem damit verbundenen  fachwissenschaftlich  akzentuiert en Konzept der ‚Kontextuellen Informatik’  betont . Für das  INIK -Konzept wurden auch praktische Vorschläge für die Gestaltung des Informatikunte rrichts  erarbeitet  (Engbring, 2003; Keil -Slawik & Magenheim, 2001; Koubek et al., 2009; Krohn,  1992) . Schülerinnen und Schüler  sollen bei diesem Ansatz die Modellierung von  Informatiksystemen als wichtiges Element eines Gestaltungsprozesses des sozio -techn ischen  Einsatzkontextes dieser Systeme kennen lernen.   8. Dem systematischen Erkunden der vermuteten inneren Struktur und der von außen sichtbaren  Funktion von Informatiksystemen wird auch im fachdidaktischen Ansatz zur Dualitätsrekonstruktion erhebliche Bedeutung beigemessen. Dabei soll an die  Alltagserfahrungen der Lernenden mit Informatiksystemen angeknüpft und die Dualität von Struktur und Funktion digitaler Artefakte mittels systematischer Nutzung erschlossen werden   (Schulte, 2009) . Digitale Artefakte werden hierbei als kleinere und weniger komplexe  Informatiksysteme angesehen. Einen ähnlichen fachdidaktischen Zugang, in dem  von dem äußerlich sichtbaren Verhalten auf die innere Struktur von Informatiksystem geschlossen wird ,  schlägt  Stechert (2009)  vor. Auf die an der Dualitätsrekonstruktion orientierten Ansätze hat die  informatikdidaktische Kompetenzforschung später Bezug genommen und die Fähigkeit zum  Erkunden und Anwenden von Informatiksystemen als eine wesentliche Voraussetzung i hres  Verständnis ses identifiziert ( z. B. Magenheim et al., 2010) .  9. In fast allen genannten informatikdidaktischen Ansätzen wird betont, dass bei der Auswahl  von Informatiksystemen, mit denen sich die Schülerinnen und Schüler  im Informatikunterricht  auseinandersetzen, auf eine für die Zielgruppe geeignete Zugangsweise und auf den Bezug des  Anwendungskontextes des Informatiksystems zur Alltagswelt der Zielgruppe geachtet werden  muss. Im phänomenorientierten Ansatz wird dieses Prinzip in den Mittelpunkt gerückt. So  postulieren Humbert und Puhlmann (2004)  drei Gruppen von Phänomen, die Gegenstand des  Informatikunterrichts sein können.  a) Mit Informatiksystemen direkt verknüpfte Phänomene, die beim Nutzen eines  Informatiksystems a uftreten,  b) Mit Informatiksystemen indirekt verbundene Phänomene, die nicht sofort ersichtlich, in  ihrem Informatikbezug wahrgenommen werden, sondern sich erst bei genauerer Betrachtung als informatikhaltig erweisen.   c) Von Informatiksystemen unabhängige Phänomene , die sich dadurch auszeichnen, dass sie  eine inhärente informatische Struktur aufweisen und/oder informatisches Denken nahelegen ,  ohne  bestimmte digitale  Systeme  vorauszusetze n.  Ganz ähnlich hat die Forschergruppe um Diethelm (Diethelm et al., 20 11) in Anlehnung an den  Ansatz von Kattmann u. a. (1997)  ein Konzept der didaktischen Reduktion zur Gestaltung des  Informatikunterrichts vorgeschlagen, das als zentrales Element Phänomene der Informatik aus  der Erfahrungswelt der Schülerinnen und Schüler  als Unterrichtsgegenstand vorschlägt.   10. Betrachtet man die dargestellten informatikdidaktischen Ansätze, so wird  deutlich, dass  neben allgemeinbildenden Aspekten und den Bezügen zu den fachwissenschaftlichen  Methoden der Informatik  vor allem auch die O rientierung an den Interessen und der Motivation  der Schülerinnen und Schüler  ein wesentliches Element der Zielbestimmung und der  Inhaltsauswahl für den Informatikunterricht darstellt. Romeike (2008a)  betont vor diesem  Hintergrund die Bedeutung von Kreativität und Motivation für die Praxis des  Informatikunterrichts. Hinzu kommt die preisgünstige Verfügbarkeit von digitalen Bausteinen,  Mikrocontrollern etc. etwa in Gestalt des Arduino und anderer unterrichtsgeeigneter  didaktischer Informatiksysteme ( Lego M indstorms, Calliope , etc.) . Diese hat dazu geführt, dass  technische Aspekte und Fragen der Steuerung und Regelung wieder stärker als Themen des Informatikunterrichts angesehen werden können. Besonders Modrow (2010)  und Strecker  (2009)  haben diese Aspekte in die aktuelle fachdidaktische Diskussion eingebracht . Przybylla  und Romeike (2014)  haben diese Ansätze aufgegriffen und durch die Integration technischer  Aspekte in den Informatikunterricht in Richtung ‚Physical Computing’ vertieft.  Auf diese  Weise soll bei den Schülerinnen und Schülern ein grundlegendes Verständnis für die  technischen und algorithmischen Aspekte von Informatiksystemen gefördert werden. Hierzu  werden oft auch spielerische, handlungsorientierte Unterrichtsmethoden ohne Computereinsatz  vorgeschlagen (CS -unplugged; vgl. z. B.  Bell et al., 2009; Bergner et al., 2018, S. 8691).   Mit den aufgezeigten informatikdidaktischen Konzeptionen sind teils explizit, teils implizit  Annahmen und Zielbestimmungen zum Kompetenzerwerb im Informatikunterricht verbunden.  Diese haben den aktuellen Diskurs um fachspezifische Kompetenzen nachhaltig beeinflusst und  Eingang in die GI -Bildungsstandards  gefunden, deren Zielsetzungen und  Kompetenzbeschreibungen in der Informatikdidaktik bis zu einem gewissen Grad als  konsensfähig angesehen werden. Dies ist vor allem auch deshalb  der Fall , weil in den jeweiligen  GI-Arbeitsgruppen zahlreiche Fachdidaktiker innen und Fachdidaktiker beteiligt waren und die  Dokumente vor ihrer endgültigen Verabschiedung in der Fachcommunity intensiv und breit  diskutiert w orden  sind. Die GI -Bildungsstandards  (GI, 2008; GI, 2016)  dienten wiederum als  wesentliche Grundlage für die Gestaltung der Informatiklehrpläne in den Bundesländern.   Allerdings kam es hier  zu sehr unterschiedlichen Formen der  Implementierung von  Informatikcurricula in den verschiedenen Schultypen und Jahrgangsstufen.   Die Empfehlungen für Informatikstandards orientieren sich dabei an dem NCTM Kompetenzstrukturmodell  (NCTM, 2000) , das auch  den Bildungsstandards der Mathematik in   Deutschland zugrunde liegt. In den NCTM und den GI -Empfehlungen werden Kompetenzen  dabei im Sinne von Weinert (2001)  als beobachtbare und von den Schülerinnen und Schüler n  ausführ bare Handlung sdispositionen (Prozesse) angesehen, die sich im jeweiligen  Inhaltsbereich kontextualisieren. Daher können die zu erwerbenden Kompetenzen jeweils als  Ergebnis einer Kombination von Inhalts und Prozessaspekten beschrieben werden. Die  Bereiche sind dabei nicht trennsch arf voneinander abzugrenzen. Dieses Konzept liegt alle n GIEmpfehlungen und den meisten Informatiklehrplänen zugrunde und wurde jüngst auch als Empfehlung für den Bereich der frühkindlichen außerschulischen informatischen Bildung  adaptiert  (Bergner et al.,  2018) . Gemäß den Empfehlungen ist es das übergeordnete Ziel des Informatikunterrichts , alle  Schülerinnen und Schüler  für ein Leben in einer digital geprägten Welt vorzubereiten. Dabei  werden  fünf Kompetenz bereiche unterschieden :   • Die Fähigkeit, das Verstä ndnis für den grundlegenden Aufbau von Informatiksystemen und  deren Funktionsweise zu vermitteln , um damit „einerseits deren zielgerichtete Anwendung  bei der Lösung von Problemen, aber auch die leichte Erschließung anderer Systeme der  gleichen Anwendung zu ermöglichen “.   • Die Fähigkeit, Daten , die von Informatiksystemen produziert  sind, im Hinblick auf die darin  enthaltene Information zu interpretieren .  • Die Fähigkeit, Information in festgelegter Art und Weise  als Daten zu strukturieren , damit  diese mittels Algorithmen bzw. in Form von Automaten unter Verwendung von  Programmiersprachen von einem  Informatiksystem verarbeitet werden können .  • Die Fähigkeit, Methoden der informatischen Modellierung zu kennen und sie exemplarisch für die Impleme ntierung von Informatiksystemen zu nutzen.   • Die Fähigkeit, prinzipielle  Möglichkeiten und potenziellen Gefahren und Risiken der  Nutzung von Informatiksystemen in einem bestimmten Kontext zu erkennen und darauf  sachgerecht zu reagieren .   • Die Fähigkeit, r elevante Zusammenhänge zwischen Informatik, Mensch und Gesellschaft   zu erkennen und auf der Basis von Sachkenntnis zu bewerten.   Als didaktisches Prinzip bei der Umsetzung dieser Ziele gilt: „Die schulische Auseinandersetzung mit dem Aufbau und der Funktionswei se von Informatiksystemen darf  dabei aber nicht nur auf der Ebene der Benutzungsschnittstelle erfolgen, die sich bereits bei einer nächsten Produktversion oder bei Verwendung eines Produkts eines anderen Herstellers  ändern kann.“  (vgl. GI, 2008, S. 11f) .  Als relevante Inhaltsbereiche  mit allgemeinbildendem Charakter benennen die Empfehlungen:  ‚Information und Daten’, ‚Algorithmen’, ‚Sprachen und Automaten’, ‚Informatiksysteme’  sowie ‚Informatik, Mensch und Gesellschaft’.   Als wesentliche Prozessbereiche mit Handlungen, die in diesen Inhaltsbereichen ausgeführt  werden können, werden beschrieben: ‚Modellieren und Implementieren’, ‚Begründen und  Bewerten’, ‚Strukturieren und Vernetzen’, ‚Kommunizieren und Kooperieren’, und ‚Darstellen  und Interpretieren’. Als weitere Prozessdimension wurde in jüngster Zeit u.a. im Hinblick auf  internationale CSE -Ansätze die Kategorie ‚Interagieren und Explorieren’ in die fachdidaktische  Diskussion eingebracht  (Bergner et al., 2018; C. Schulte et al., 2017) .  Die auf diese Weise definierten themenbezogenen Handlungsfelder, in denen sich  Kompetenzen verorten lassen, erfordern eine Priorisierung und Präzisierung im Hinblick auf  die unterrichtliche Zielgruppe, da sie sich nicht in vollem Umfang in ein schulisches  Informatikcurric ulum integrieren lassen. Hier bedarf es letztlich erneut normativer  Entscheidungen für eine am exemplarischen Prinzip (Wagenschein, 1962)  orientierte  Ausgestaltung der Curricula und des Offenlegens der Priorisierungskriterien (vgl. Bergner et  al., 2018) .     4. Perspektiven fachdidaktischer Forschung und Entwicklung   Wie in B.3 bereits dargestellt, hat sich die fachdidaktische Forschung zunächst auf die  informatikdidaktische Theoriebildung konzentriert. In diesem Zusammenhang wurden die  fachdidaktischen Konzepte in einem kritischen Diskurs weiterentwickelt, vorwiegend unter  Beteiligung von Fachdidaktikern und Fachwissenschaftlern der Informatik, sowie partiell auch  der Lern und Kognitionspsychologie. Das diesen fach didaktischen Ansätzen zugrundeliegende  Forsch ungsformat kann als theorieorientiert und vergleichend  beschrieben werden. D iese  Konzepte wurden i n Auseinandersetzung mit dem technologischen Fortschritt und damit  einhergehenden Paradigmenwechseln in der Fachwissenschaft Informatik sowie  aktuellen  Tenden zen in anderen Fachdidaktiken  insbesondere im MINT -Bereich  entwickelt.  Eine wichtige Fragestellung war dabei auch, welchen Beitrag informatische Bildung für die  Allgemeinbildung leisten kann. Ferner wurden auf theoretischer Ebene verschiedene  Bildungskonzepte mit Bezug zur Informatik gegeneinander abgegrenzt, wie z. B. Inform atische  Bildung, Medienbildung, digitale Bildung, ‚ICT in Education’, ‚Computer Literacy’ (siehe dazu auch die Ausführungen zur  Dagstuhl -Erklärung  in Abschnitt C ). Breit angelegte  empirische Studien fanden in dieser Phase fachdidaktischer Forschung kaum st att. Die  theorieorientierten Diskurse führten aber zur Generierung von Forschungshypothesen, z. B.   über die Wirksamkeit spezifischer Vermittlungsmethoden und Lehr -Lernarrangements. Diese  wurden dann teilweise mit kleineren empirischen Studien oder Erprobungen überprüft. Die  Studien waren sowohl in Bezug auf den Umfang der Stichprobe als auch auf das empirische  Methodensetting begrenzt. Hier sind vor allem erste Dissertationen im Bereich der fachdidaktischen Forschung der Informatik zu nennen,  die sich mit d er Wirksamkeit  bestimmter Vermittlungsmethoden (z. B. Objects First Methode; Diethelm, 2007) oder der  Organisation von Lehr -Lernprozesse n im Informatik -Anfan gsunterricht  (Schulte, 2004)   auseinandergesetzt haben. Auch andere  fachdidaktische Dissertationen i n der Informatik   weisen ein empirisches Forschungsformat auf . In ihnen werden  oft in einem eng begrenzten Setting  spezifische Hypothesen, die sich aus den o.g. fachdidaktischen Diskursen ergeben  haben , überprüft  (GI, 2018) .  Hierbei kamen sowohl qualita tive als auch quantitative empirische Forschungsmethoden mit  einem in Bezug auf die Forschungsfrage gut begründeten Untersuchungsdesign zum Einsatz .  Zunehmend erfolgen Studien a uch im Mixed -MethodDesign.  Angewandte Methoden waren  hier Leitfadeninterviews, Einsatz von Frageb ögen, teilnehmende Unterrichtsbeobachtung und  Analyse von Videomitschnitten des Unterrichts bzw. der Aufzeichnung von  Bildschirmaktivitäten der Schülerinnen und Schüler  (Keystrike -Recor ds, Videographie).   Ein rein qualitatives Forschungsformat wandte Knobelsdorf (2011)  bei der biographischen  Analyse von Lern und Bildungsprozesse n von InformatikStudienanfängerInnen an. Dabei  standen Qualität und Quantität  der Computernutzung im Fokus . Der in der Studie angewandte  empirische Forschungsansatz orientierte sich an der erziehungswissenschaftlichen  Biogra phieforschung und an Methoden der Grounded Theory  (Strauss & Corbin, 1996) .  Mit graphen -analytische n Methoden wurde n in einer  weiteren Studie die Wissensstrukturen  und de r Wissenserwerb von Informatikstudierenden untersucht. Dazu wurde die Veränderung  von ‚Concepts -Maps’, die die Studierenden im Verlaufe der Zeit zu einem Gegenstandsbereich  gezeichnet hatten, im Hinblick auf die Strukturveränder ung und den Differenzierungsgrad  analysiert  (Hubwieser & Mühling, 2011; Mühling, 2014) . Eine umfangreichere quantitative  Studie (N> 700), die auf einer breiteren Datenbasis mittels psychometrischer Messskalen und  inferenzanalytischer Verfahren die Einschät zung von Schülern zur Praxis ihres  Informatikunterrichts und ihre Einstellungen zur Informatik untersuchte, wurde von Schulte &  Magenheim  (2005)  vorgelegt.   Während die meisten der vorgenannten Studien mit Fördergeldern aus Haushaltsmitteln der  jeweiligen U niversität durchgeführt  wurden, gelang es im Lauf der Zeit , DFG und BMBF  Fördermittel für die fachdidaktische Forschung in der Informatik einzuwerben. So wurden im  Bereich der empirischen Kompetenzforschung die DFG -geförderten Forschungsprojekte  MoKoM  I und II zum informatischen Systemverständnis und zum informatische n Modellieren  (iSiM) von den informatikdidaktischen Forschergruppen an den Universitäten Paderborn und  Siegen durchgeführt  (vgl. z. B.  Magenheim et al., 2010; Neugebauer et al., 2015) .  Das Projekt verfolgte drei Zielsetzungen:   (1) Theoriegeleitete und empirisch gestützte Entwicklung eines Kompetenzstrukturmodells   (2) Entwicklung eines entsprechenden Kompetenzniveaumodells   (3) Entwicklung von Instrumenten zur Kompetenzmessung zu iSiM, Zur En twicklung des Kompetenzstrukturmodells wurde auf normative Ansätze zu  Modellierungskompetenzen in der Informatik zurückgegriffen, die sich in Empfehlungen zur  Informatikausbildung an Hochschulen und fachdidaktischen Konzepten zur informatischen  Bildung an Schulen identifizieren ließen. Nach diesen eher mit hermeneutischen Methoden  gewonnenen Zwischenergebnissen wurden im Forschungsprojekt mit Hilfe eines an anforderungsanalytischen Methoden orientierten Verfahrens (Critical Incident Technik), das  auf Expert eninterviews beruhte, die zuvor aus normativen Setzungen hergeleiteten  Kompetenzkategorien empirisch überprüft, ausdifferenziert, ergänzt und modifiziert. Auf diese  Weise wurde ein differenzierteres Kompetenzstrukturmodell zu iSiM gewonnen.  Auf der Basis d ieses Modells wurde in einem mehrstufigen quantitativen empirischen  Verfahren mit einer umfangreicheren Datenerhebung (N>500), ein Messinstrument zur Kompetenzmessung (Item -Response -Konzept, Rasch -Skalierung) in diesem Bereich  entwickelt, dass später auch zur Messung von Kompetenzerwerb in anderen Informatik Projekten eingesetzt wurde  (Krämer et al., 2014) .   Bei der Testentwicklung wurden in erster Linie „szenariobasierte Testitems“ in Anlehnung an „Situational Judgement Tests“  (Weekly & Polyhart, 2006)  entwickelt, die auf komplexen  handlungsorientierten sowie repräsentativen Aufgabenstellungen der Unterrichtsdomäne  beruhen. Außerdem wurden Erfahrungen zur Testentwicklung bei großen  Schulleistungsstudien ( z. B. TMMS oder PISA) sowie eigenen Testkonstruktione n (Schaper et  al., 2008)  berücksichtigt.   Forschungsergebnisse aus diesen Projekten wurden kontinuierlich in den peer -reviewten  Proceedings einschlägiger Fachkonferenzen der ACM, IEEE und IFIP publiziert. Die Teilnahme an diesen Konferenzen führte auch zu einem regen internationalen Austausch über  aktuelle Fragen der Forschung und der Curriculum -Entwicklung auf dem Gebiet von Computer  Science Education.   Aktuell werden BMBF -Forschungsprojekte mit Bezügen zu schulischem und außerschulischen  informatischen  Lernen durchgeführt.  Zu dieser  Gruppe von Projekten gehören beispielsweise  das Projekt MLS  (Mobile Learning Smart Factories ; vgl. u.a. Wilke und Magenheim (2017) )  und das Projekt  Smile (2017) , die sehr unterschiedliche Zielsetzungen verfolgen. Im Projekt   MLS geht es um  die Entwicklung einer arbeitsplatzintegrierten mobilen Lern und  Arbeitsapplikation für Tablets und Webbrowser. Dazu sollen arbeitsplatzintegrierte  Lernszenarien sowie ein Workshopkonzept für Ausbilder/innen entwickelt und umgesetzt,  sowie d as Gesamtprojekt formativ und summativ evaluiert werden . Im Projekt ‚Smile‘  sollen  ‚Smarte Umgebungen ’ entwickelt werden, die  besonders Mädchen und junge Frauen einen  zielgruppengerechten Zugang zu Informatikthemen eröffnen.   Aber auch h ochschuldidaktisch a usgerichtete Projekte besitzen in der Informatik didaktik  gegenwärtig b esondere Bedeutung . Zu nennen sind hier vor allem vier Projekte:  KETT I  (Kompetenzerwerb von Tutorinnen und Tutoren in der Informatik; vgl. Danielsiek et al. , 201))  , KUI (Kompetenzen für  das Unterrichten in Informatik, vgl. u.a. Bender et al. , 2015) , MuSofT  (Multimedia in der SoftwareTechnik ; Magenheim und Scheel , 2004)  sowie SIMBA   (Schlüsselkonzepte der Informatik in verteilten multimedialen Bausteinen unter besonderer  Berücksichtigung spezifisch er Lerninteressen von Frauen; Schubert , 2004) . Die Projekte  KETTI und KUI haben die Verbesserung der Informatiklehre an der Hochschule und Schule  zum Ziel. In KETTI sollen TutorInnen in der Informatik in die Lage versetzt werden , kognitive  Aktivi täten der Studierenden anzuregen und selbstständiges Lernen zu fördern. Dazu soll auf  der Grundlage empirischer Untersuchungen ein spezielles Kompetenzmodell samt  Messinstrument entwickelt und die Ausbildung der Tutor Innen darauf abgestimmt werden.   KUI hat  bei ähnlicher Zielsetzung als Zielgruppe die Lehramtsstudierenden im Fokus. In den  Projekten MuSoFT und SIMBA wurden aus fachdidaktischer Perspektive digitale  Lehrmaterialien für die universitäre Lehre in den Bereichen Softwaretechnik, Kontextuelle  Inform atik, Computergrafik und Lehramtsausbildung entwickelt und evaluiert.      C. Lernen und Forschung über das Fach hinaus     5. Inhalte überfachlich verknüpfen und fachliche Kompetenzen verallgemeinern   „Informatik ist eine Basis und Querschnittsdisziplin, die ihre Grundlagen aus der Mathematik  und den Ingenieurwissenschaften bezieht und in alle Lebens und Anwendungsbereiche wirkt“   (GI, 2006) . Als grundlegende Wissenschaft der Digitalisierung liefert sie verschiedene  Konzepte, Modelle und Methoden zum Verständnis und zum effektiven sowie effizienten  Umgang mit digitaler Medien, weshalb informatische Bildung zunehmend als wichtige  Grundlage für die Umsetzung der Digitalisierungsstrategien im Bildungsbereich gesehen wird   (vgl. bspw. Breier, 2004; Gander et al., 2013; Romeike, 2017) .  Döbeli  Honegger  (2016)  beschreibt verschiedene Argumente, wie überfachliches Lernen durch  Informatikkompetenz unterstützt werden kann. So bietet Informatik zahlreiche Methoden und damit verbundene Werkzeuge, um Sachverhalte virtuell mit  Computern zu simulieren oder in  der realen Welt mit Sensoren und Aktoren zu steuern, wobei viel über Mathematik, Geometrie, Physik oder Volkswirtschaft gelernt werden kann (Konstruktionsargument). Mit der Methode der Simulation hat die Informatik ein drittes Standbein in den wissenschaftlichen  Erkenntnisprozess gebracht . Dabei ist Simulation  trotz ihrer enormen Bedeutung in der  Wissenschaft in den allgemeinbildenden Schulen bisher kaum wahrgenommen worden. Zukünftig könnte sie aber eine ähnliche Bedeutung erlangen wie bspw. die Methode des  Experiments (Wissenschaftsargument). Betrachtet man jüngere Entwicklungen  bspw. die  künstliche Intelligenz oder autonom fahrende Autos  zeigt sich, dass die Produkte der  Informatik auch Anlass bieten, über verschiedene  wichtige Konzepte unseres Lebens selbst  nachzudenken (Denkobjektargument)  – im Horizont von Fragen wie:  Was ist Intelligenz?  Woran erkennt man Kreativität? Was ist der eigene Wille und welche Bedeutung hat er? Vor dem Hintergrund, menschliche Verhaltensweisen simulieren und imitieren zu können, werden  solche philosophischen Überlegungen und Diskussionen ang eregt. Darüber hinaus werden auch  Aspekte des Rechts, der Ethik oder der Ökonomie berührt. Durch die zunehmende Durchdringung der Lebenswelt der Schülerinnen und Schüler mit digitalen Medien werden sie  in wohl jedem Unterrichtsfach (und darüber hinaus) mit  Phänomenen konfrontiert, die durch  Informatik oder Informatiksysteme geprägt sind. Ohne ein Verständnis der zugrundeliegenden  informatischen Konzepte ist es heute nicht mehr möglich, zentrale Gegenstände der Berufs  und Lebenswelt sachgemäß zu erfassen, z u hinterfragen oder mitzugestalten. Um Schülerinnen  und Schüler auf ein mündiges Leben vorzubereiten, was eine zentrale Aufgabe der  allgemeinbildenden Schule darstellt, reicht es nicht aus, die digitalen Medien nur  zu nutzen,  sondern es müssen auch die dahinter stehenden Mechanismen in den Blick genommen werden (Mündigkeitsargument).   Grundsätzlich leistet jedes Schulfach einen Beitrag zum fächerübergreifenden Lernen. Schubert und Schwill (2011)  verdeutlichen, dass das Schulfach Informatik dennoch eine Sonde rstellung  einnimmt, die auf drei Gründe zurückzuführen ist. Der erste, oben bereits ausgeführte Grund  liegt in der zunehmenden „Informatisierung“ aller Fachgebiete und aller Unterrichtsfächer. Der  zweite Grund liegt in der zentralen Stellung von Anwendungs aufgaben im Informatikunterricht  und deren Doppelfunktion, bei welcher im Idealfall Kompetenzen beider Fächer erworben  werden  (vgl. Becker, 1986) . Insbesondere im Kontext des Programmierenlernens wurden meist  Aufgaben aus dem Mathematikunterricht gewählt, die zwar wohl definiert und damit relativ  einfach umsetzbar waren, aber wichtige informatische Modellierungsaspekte und fachliche  Herausforderu ngen verhinderten  (vgl. Romeike, 2008b) . Da die Schülerinnen und Schüler noch  nicht die fachlichen Voraussetzunge n besitzen, tatsächlich informatische Probleme lösen  zu  können, werden regelmäßig Problemstellungen aus anderen Unterrichtsfächern herangezogen.  Mit der Entwicklung des Informatikim-Kontext -Ansatzes (vgl. Koubek et al., 2009)  wurde dieses Vorgehen weiter fachdidaktisch fundiert und ausgebaut. Strecker (2013)  stellt bspw.  verschiedene Unterrichtssequenzen für die Sekundarstufe I vor, die unter dem Oberbegriff  „Informatik hilft!“ an einem sozialen Kontext aus gerichte t sind  und anhand verschiedener  Themen aus  dem Bereich der Medizin die Unterrichtsinhalte präg en. Der dritte Grund nach  Schwill hat seine Wurzeln im „Scheitern der Informationstechnischen Grundbildung (ITG)“.  Ziel des 1984 durch die BundLänder -Kommission verabschiedeten Rahmenkonzeptes war es,  ausschließlich über fachübergreifendes und fächerverbindendes Lernen einen Beitrag zur  informatischen Bildung zu leisten, ohne dafür ein eigenes Fach vorzusehen. ITG scheiterte, da  gegenüber dem Benutzen von Computern die informatischen Lernziele nicht deutl ich wurden  und den Fachlehrern letztlich die informatischen und informatikdidaktischen Kompetenzen fehlten.     6. Informatikdidaktische Forschung vernetzen   Die fachdidaktische Forschung der Informatik war und ist, oft in Kooperation mit der  Fachwissenschaft Informatik , auch an einer Reihe von BMBF -Projekten beteiligt. Diese  besitzen in der Regel ein stärker praxisorientiertes Forschungsformat, das im Sinne von R&D (Research and Development) die praktische Implementierung neuer Lehr -Lern -Konzepte bzw.  didaktis cher Medien zum Ziel hat. Neben der praxisorientierten Entwicklung derartiger  Konzepte bzw. Medien findet in diesen Projekten empirische Forschung meist in Form einer  formativen Evaluation im Sinne von intervenierender Begleitforschung und weniger als  summ ative Evaluation statt. Die Projekte weisen neben einem Bezug zum Informatikunterricht  an allgemeinbildenden oder beruflichen Schulen,  bzw. zur außerschulischen informatischen  Bildung , z. T. auch eine hochschuldidaktische Perspektive mit Bezug zum E -Learni ng auf oder  sind als interdisziplinäre Kooperationsprojekte mit anderen Fachwissenschaften angelegt.  Neben den bereits in Kapitel 4 genannten schulbezogenen und hochschuldidaktischen Projekten   sind hier vor allem  die folgenden  interdisziplinäre n Projekte m it Beteiligung der  Informatikdidaktik  zu nennen:  Das Projekt MeCoPflege  (Mediencoaches für das Berufsfeld  Pflege ; vgl. z. B. Kamin et al., 2016) hat d as Ziel , in Kooperation mit der Medienwissenschaft,  der Pflegewissenschaft, der Medizin und unterschiedlichen Praxiseinrichtungen der Pflege , das  Pflegepersonal fachlich und kompetenzorientiert dabei zu unterstützen, digitale Lernangebote  für die kontinuierliche V erbesserung der Pflege zu nutzen und damit  Professionalisierungsbestrebungen in dem Berufsfeld zu fördern. In TABULA  (Lernen  begreifbar machen; vgl. TABULA , 2017)  soll das Erlernen von Informatikkonzepten in  anschaulicher Weise erfolgen . Dabei wird eine Ko mbination aus zwei innovativen Hardwarekomponenten ‚Multitouch -Tische’ und ‚Tangibles’ als Lernmedi um verwendet .  Primäre Zielgruppe ist die praxisorientierte Informatik -Hochschulausbildung, daneben auch die  Informatik in der gymnasialen Oberstufe sowie  die berufliche und betriebliche Bildung.   Nicht nur im Zusammenhang mit BMBF -Projekten hat die informatikdidaktische Forschung  sich stets auch interdisziplinär orientiert und auf diese Weise z. B.  Beiträge zur Entwicklung  der Didaktik des E -Learning s und der Entwicklung von E -Learning Tools geleistet. Beispiele  hierfür sind die Entwicklung eines Class -Room -Response Systems (Zoyke et al., 2017)  oder  die Entwicklung eines Multimedia -Werkzeugs zur multiperspektivischen Analyse von  Unterrichtsinteraktione n (Engbring et al., 2010) .  Auch Beiträge zur Entwicklung von Medientheorien wurden aus der Didaktik der Informatik  als Teilprojektpartner im Kulturwissenschaftlichen Forschungskolleg ‚Medienbrüche’ (DFG SFB / FK 615) geleistet. Dabei sollten mediale Einsch nitte und Übergänge  im Hinblick auf ihre  diskontinuierlichen, strukturellen Veränderungen innerhalb der Mediengeschichte untersucht  werden (Medienbrüche, 2017) .  Die Forschungsbeteiligung der Informatik didaktik an fachwissenschaftlichen  und  interdisziplinär en Forschungsformaten hat mittlerweile auch dazu geführt, dass bei der  Entwicklung von hochschuldidaktischen Konzepten in der Informatiklehre und bei der  Konzipierung von Empfehlungen zur Gestaltung der fachwissenschaftlichen Bachelor und  Masterstudiengän ge des Faches Informatik Vertreter innen und Vertreter der Fachdidaktik  beteiligt sind  (GI, 2017) .  Eine besondere Rolle stellt das Verhältnis zur Medienbildung dar . Keil (2012)  charakterisiert  den Computer als „besonderes“ und persönliches Medium , das als „ Denkzeug “ bezeichnet  werden kann . Das spezielle  an einem Denkzeug ist, dass es als interaktives Medium  Rückmeldung und somit Differenzerfahrung ermöglicht, um „Vorgestelltes und Tatsächliches  in Beziehung zu setzen und damit zwischen Illusion und Wirklichkeit zu unterscheiden“ (ebd.,  S. 149) . Dies stellt letztlich eine Grundvoraussetzung für Lernen dar und erlaubt  es, basierend  auf sinnlich vermittelten Rückmeldungen Fehler und falsche Annahmen zu korrigieren. Bereits  Papert (1982)  führte  mit seiner Lernthe orie des Konstruktionismus  aus, dass mit Hilfe von  Computern ein besonderes Lernen ermöglicht wird, bei welchem das Erschaffen persönlich  bedeutungsvoller Artefakte und das Reflektieren über Produkt und Gestaltungsprozess zentral  sind. Grundlegend hierfür sind Programmierfertigkeiten wie auch informatische  Gestaltungskompetenzen. Aufbauend auf diesen Ideen hat in vielen Schulen inzwischen die  Programmierumgebung ‚Scratch ‘ Verbreitung gefunden, die von seinen Entwicklern als  „medium for creative expression“ gedacht ist  (Resnick, 2007) .  Aktuelle Ansätze bemühen sich darum, die Ansätze und Ziele informatischer Bildung und  Medienbildung gemeinsam zu diskutieren und in Bildungsprozessen fruchtbar aufeinander zu  beziehen. Auf diese Weise sollen kontextlose innert echnische Technikeinführungen ebenso  vermieden werden  wie Bedien erschulungen , die sich im Wesentlichen  auf die gegebenen  Nutzungsmöglichkeiten von Bedienoberflächen di gitaler Systeme beschränken . Überdies  soll  die gesellschaftlich -kulturelle Perspektive deutlich gemacht werden: Die Dagstuhl -Erklärung   (Brinda et al., 2016) , eine gemeinsam e Erklärung von Vertretern der Informatikdidaktik, der  Informatik, der Medienbildung, der Medienwissenschaften und der Politik, beschreibt drei  gleichberechtigte und ineinandergreifende Erkenntnisperspektiven auf die „digitale Welt“, zu  denen interdisziplinär alle Disziplinen beitragen können: die technologische Perspektive (Wie funktioniert das?), die Anwendungsperspektive (Wie nutze ich das?) sowie  die gesellschaftlich kulturelle Perspektive (Wie wirkt das?). In diesem Handlungsfeld entwickeln sich nun auch kooperative Forschungsprojekte.     Ausblick   Mit der zunehmenden Etablierung des Informatikunterrichts in Deutschland – aber auch  weltweit – bleibt  es eine Herausforderung informatikdidaktischer Forschung, die  gesellschaftlichen Entwicklungen basierend auf soliden Forschungserkenntnissen zu begleiten  und voranzutreiben. Hierzu wäre es wünschenswert und hilfreich, wenn die Debatte um die   Legitimation des Schulfachs aufgrund verbindlicher politischer Maßnahmen beendet und die  Sicherstellung informatischer Bildung für alle Schülerinnen und Schüler durch die Einführung  eines eigenen Faches erfolgen würde. Dann könnte die relativ junge und erst an wenigen  Universitäten vertretene Wissenschaft der Didaktik der Informatik sich sowohl ihrer  Grundlagenforschung als auch der empirisch abgesicherten Ausgestaltung informatischer  Bildung zuwenden. Eine verstärkt e Zusammenarbeit  mit anderen Fächern ist bereits erkennbar .   Zunehmend wird die Forschung auch internati onal verschränkt. Mit seiner im internationalen  Vergleich langen, immerhin einige Jahrzehnte umfassenden  Historie fachspezifischer  didaktischer Forschung kommt der deutschen Informatikdidaktik eine Führungsrolle zu, wie  die ehemals nationale Tagung der Fachgruppe DDI der Gesellschaft für Informatik zeigt, die  sich seit 2012 zu einer der wichtigsten internationale n Tagungen  zur Informatikdidaktik  entwickelt hat  (WiPSCE, 2018) . Andere Forschungsfelder  bspw. Informatikunterricht in der  Grundschule , der sich international zunehmend etabliert  sind noch weitgehend unerschlossen  und beinhalten bedeutsames Forschungspotenzial. Literatur   ACM  (2003). A Model Curriculum for K –12 Computer Science. URL:   http://c sta.acm.org/Curriculum/sub/k12final1022.pdf   ACM (2004). Curriculum Guidelines for Undergraduate Degree Programs in Computer  Engineering.  Arlt, W., & Koerber, B. (1981). Ziele und Inhalte des Informatikunterrichts. In W. Arlt (Ed.),  Informatik als Schulfach. Didaktische Handreichungen für das Schulfach Informatik  (pp.  18-27). München: Oldenburg R. Verlag.   Barefoot  (2017). Computational Thinking. URL:  https://barefootcas.org.uk/barefoot -primary computing -resources/concepts/computational -thinking/   Baumann, R. (1993). Ziele und Inhalte des Informatikunterrichts. Zentralblatt für Didaktik  der Mathematik, 25(1).   Becker, K. -H. (1986). Informatikunterricht einmal anders gesehen. Praxis der Mathematik,  28(5), 281288.   Bell, T., Alexander, J., Freeman, I., & Grimley, M. (2009). Computer science unplugged:  School students doing real computing without computers. The New Zealand Journal of  Applied Computing and Information Technology, 13(1), 2029.   Bender, E., Hubwieser, P., Schaper, N., Margaritis, M., Berge s, M., Ohrndorf, L.,  Magenheim, J., & Schubert, S. (2015). Towards a Competency Model for Teaching  Computer Science. Peabody Journal of Education, 90(4), 519532.   Bergner, N., Köster, H., Magenheim, J., Müller, K., Romeike, R., Schulte, C., & Schroeder,  U. (2018). Frühe informatische Bildung  Ziele und Gelingensbedingungen für den  Elementar und Primarbereich. Berlin: Haus der kleinen Forscher.   Brandhofer, G. (2014). Ein Gegenstand „Digitale Medienbildung und Informatik “ – notwendige Bedingung für digitale  Kompetenz? R&E -SOURCE (1).   Brauer, W., & Brauer, U. ( 1973). Informatik an der Schule – weshalb und wie?  In 4.  Paderborner Werkstattgespr äch 1972. Forschungs und Entwicklungszentrum für  objektive Lehr und Lernverfahren. Schöning, Paderborn, 3435.  Breier, N. ( 2004 ). Stand und Perspektive der informatischen Bildung. 1. Fachtagung der GI Fachgruppe Hamburger Informatiklehrerinnen und lehrer .  Brinda, T. (2004). Didaktisches System für objektorientiertes Modellieren im  Informatikunterricht der Sekundar stufe II.  (PhD Thesis), Universität Siegen,   Brinda, T., Diethelm, I., Gemulla, R., Romeike, R., Schöning, J., & Schulte, C. (2016).  Dagstuhl -Erklärung: Bildung in der digitalen vernetzten Welt. URL:   https://www.gi.de/aktuelles/meldungen/detailansicht/article/dagstuhlerklaerungbildungin-der-digitalen -vernetzten -welt.html  Bruderer, H. (2015). Meilensteine der Rechentechnik: zur Geschichte der Mathematik und der  Informatik : Walter de Gruyter GmbH & Co KG.  Bruner, J. S. (1966). Toward a theory of instruction . Cambridge MA: Harvard University  Press.   Bussmann, H., & Heymann, H. W. (1987). Computer und Allgemeinbildung. Neue  Sammlung. Vierteljahreszeitschrift für Erziehung und Gesellschaft, 27(1), 2 -39.   Claus, V., & Schwill, A. (2006). Duden Informat ik A  Z: Fachlexikon für Studium,  Ausbildung und Beruf  (V. Claus & A. Schwill Eds. 4. Aufl., [Taschenbuchausg.] ed.).  Mannheim: Dudenverl.   Coy, W. (2001). Was ist Informatik? In J. Desel (Ed.), Das ist Informatik . Berlin, Heidelberg:  Springer.   Coy, W. (2008). Kulturen – nicht betreten? Anmerkungen zur "Kulturtechnik Informatik".  Informatik Spektrum, 31, 3034.   CSTA (2011). CSTA K -12 Science Standards. URL:   http://csta.hosting.acm.org/csta/csta/Curriculum/sub/K12Standards.html   Danielsiek, H., Vahrenhold, J., Hubwieser, P., Krugel, J., Magenheim, J., Ohrndorf, L.,  Osschenschmidt, D., & Schaper, N. (2017). Undergraduate teaching assistants in  Computer science: Teaching -related beliefs, tasks, and competences. IEEE, 718725.   Denning, P. J. ( 2004). Great Prin ciples in Computing Curricula. In SIGCSE 2004. Norfolk,  Virginia, USA: ACM.   Diethelm, I. (2007). Strictly models and objects first, Unterrichtskonzept und methodik für  objektorientierte Modellierung im Informatikunterricht. (PhD Thesis), Kassel,   Diethelm, I., Dörge, C., Dünnebier, M., & Mesaros, A. M. ( 2011). Die Dikatische  Rekonstruktion für den Informatikunterricht. In 14. GI -Fachtagung Informatik und  Schule (pp. 7786). Bonn.  Döbeli Honegger, B. (2016). Mehr als 0 und 1 Schule in einer digitalisierten Welt. Bern: hep Verlag.   Engbring, D. (2003). Informatik im Herstellungs und Nutzungskontext. (PhD Thesis),  Universität Paderborn, Paderborn.   Engbring, D., Reinhardt, W., Magenheim, J., Moi, M., & Maicher, J. (2010).  Anwendungsszenarien für ein Werkzeug z ur VideoAnnotation in der universitären  Lehre. In M. Kerres, N. Ojstersek, U. Schroeder, & U. Hoppe (Eds.), DeLFI 2010  8.  Tagung der Fachgruppe E -Learning der Gesellschaft für Informatik e.V  (pp. 133144).  Berlin/Heidelberg: Springer.   Forneck, H. J. (1990). Entwicklungstendenzen und Problemlinien der Didaktik der  Informatik. In G. Cyranek & et al. (Eds.), Beiträge zur Didaktik der Informatik, Aarau  (pp. 1853). Frankfurt a. M.: Diesterweg/Sauerländer.   Frank, H. G., & Meyer, I. (1974). Rechnerkunde: Eleme nte der digitalen  Nachrichtenverarbeitung und ihrer Fachdidaktik. In H. Frank & B. S. Meder (Eds.), Kybernetische Pädagogik Schriften 19581972 (Vol. Kybernetische Pädagogik).  Stuttgart: Kohlhammer.  Gander, W., Petit, A., Berry, G., Demo, B., Vahrenhold, J., McGettrick, A., Boyle, R.,  Mendelson, A., Stephenson, C., & Ghezzi, C. (2013). Informatics education: Europe  cannot afford to miss the boat. Report of the joint Informatics Europe & ACM Europe  Working Group on Informatics Education. URL:   http://europe.acm.org/iereport/informatics.html  GI (Gesellschaft für Informatik) (2000). Empfehlungen für ein Gesamtkonzept der  informatischen Bildung an allgemein bildenden Schulen.   GI (Gesellschaft für Informat ik) (2006). Was ist Informatik? Unser Positionspapier. URL:   https://gi.de/fileadmin/GI/Hauptseite/Themen/was -ist-informatik -lang.pdf   GI (Gesellschaft für Informatik) (2008). Grundsätze und Standards für die Informatik in der  Schule: Bildungsstandards Informatik für die Sekundarstufe I. URL:  http://www.informatikstandards.de   GI (Gesellschaft für Informatik) (2016). Bildungsstandards Informatik für die Sekundarstufe  II, Empfehlungen der Gesellschaft für Informatik e.V. erarbeitet vom Arbeitskreis »Bildungss tandards SII«. URL:   http://www.informatikstandards.de/docs/Bildungsstandards_SII.pdf   GI (Gesellschaft für Informatik) (2017). Empfehlungen für Bachelor und Masterprogramme  im Studienfach Informatik an Hochschulen. URL:  https://www.ft-informatik.de/filea dmin/user_upload/PDF/FTI -SK/2016GI_Empfehlung_BSC_MSC.pdf   GI (Gesellschaft für Informatik) (2018). Dissertationen: Fachdidaktische Dissertationen im  Fach Informatik. URL:   https://wiki.informatikdidaktik.de/index.php?title=Kategorie:Dissertationen   Grillenb erger, A., & Romeike, R. ( 2017). Empirische Ermittlung der Schlüsselkonzepte des  Fachgebiets Datenmanagement. In I. Diethelm (Ed.), INFOS 2017  17. GI -Fachtagung  Informatik und Schule, Oldenburg (Vol. Lectures Notes in Informatics Bd. P, pp. 157-166). Bonn: Köllen Druck + Verlag.   Hubwieser, P. (2007). Didaktik der Informatik: Grundlagen, Konzepte, Beispiele  (3.,  überarbeitete und erweiterte Auflage ed.). Berlin Heidelberg: Springer.   Hubwieser, P., & Broy, M. (1997). Grundlegende Konzepte von Informations und  Kommunikationssystemen für den Informatikunterricht. In H. U. Hoppe & W. Luther (Eds.), Informatik und Lernen in der Informationsgesellschaft. Informatik aktuell. :  Springer, Berl in, Heidelberg.   Hubwieser, P., & Mühling, A. ( 2011). “What Students (Should) Know About Object Oriented  Programming,”. In Seventh International Workshop on Computing Education Research (Vol. ACM, pp. 7784).  Humbert, L., & Puhlmann, H. (2004). Essential in gredients of literacy in informatics. In  Informatics and Student Assessment. Concepts of emirical research and standardisation of measurement in the area of didactics  (Vol. 1, pp. 6576).  Kamin, A. M., Greiner, A. D., DarmannFinck, I., & Meister, D. M. (2016). MeCoPflege im  Detail – Qualifizierung. Lernplattform. Medienpoints  (A. M. Kamin, A. D. Greiner, I.  Darmann -Finck, & D. M. Meister Eds.). Paderborn: IN VIA Verlag.  Kastl, P., & Romeike, R. ( 2015). Entwicklung eines agilen Frameworks für Projektunterricht  mit Design -Based Research. In J. Gallenbacher (Ed.), 16. GI -Fachtagung Informatik und  Schule, Darmstadt (pp. 201210). Bonn: Köllen Druck + Verlag.   Kattmann, U., D uit, R., Gropengießer, H. & Komorek  M. (1997). Das Modell der  Didaktischen Rekonstruktion – Ein Rahmen für naturwissenschaftsdidaktische Forschung  und Entwicklung. Zeitschrift für Didaktik der Naturwissenschaften (3), 3 -18.   Keil, R. (2012). Der Computer als Medium  Medien als Denkzeug des Geistes. In A. Knaut,  C. Kühne, R. Rehak, S. Ullrich, C. Kurz, & J. Pohle (Eds.), Per Anhalter durch die TuringGalaxis  (pp. 147219). Münster: Verl.Haus Monsenstein und Vannerdat.   Keil-Slawik, R., & Magenheim, J. (2001). Informatikunterricht und Medienbildung (Vol. P 8): Koellen, Bonn.   Klafki,  W. (1996). Grundzüge eines neuen Allgemeinbildungskonzepts. Im Zentrum:  Epochaltypische Schlüsselprobleme. In W. Klafki (Ed.), Neue Studien zur Bildungstheorie und Didaktik  (5 ed., pp. 4381). Weinheim: Beltz.   Knobelsdorf, M. (2011). Biographische Lern und Bildungsprozesse im Handlungskontext der  Computernutzung. (PhD Thesis), Freie Universität Berlin, Berlin.   Koerber, B., & Peters, I. R. (1993). Planungsstrukturen bei größeren Unterrichtsvorhaben –  Theorie und Praxis der Planung informatischer Bildungsprozesse bei komplexen Problemlösungen. LOGIN, 13 (6), 1925.   Koubek, J., Schulte, C., Schulze, P., & Witten, H. ( 2009). Informatik im Kontext (IniK) -Ein  integratives Unterrichtskonzept für den Informatikunterricht. Inpp. 268279).  Krämer, B., Gotthardt, K., Magenheim, J., & Neugebauer, J. (2014). On Benefits of  Interactive Online Learning in Higher Distance Education: Repeating a Learning Analytics Project in the Context of Programming Education. International Journal on Advances in Life Sciences, 12 (6), 3& 4.   Krohn, W. (1992). Zum historischen Verständnis der Technik. In G. Hurrle (Ed.), Technik –  Kultur –Arbeit  (pp. 2734). Marburg: Schüren.   Magenheim, J. ( 2008). Systemorientierte Didaktik der Informatik Sozio -technische  Informatiksysteme als Unterrichtsge genstand? In U. Kortenkamp, H. G. Weigand, & T.  Weth (Eds.),pp. 1736). Hildesheim: Franzbecker.  Magenheim, J., Nelles, W., Rhode, T., Schaper, N., Schubert, N., & Stechert, P. ( 2010).  Competencies for informatics systems and modeling: Results of qualitative content analysis of expert interviews. Inpp. 513521). Madrid, Spain: IEEE.   Magenheim, J., & Scheel, W. (2004). Der MuSofT Abschlussbericht; LE 1.3  Softwareengineering in der Informatiklehrerausbildung; LE 2.4 Dekonstruktion von Softwaresystemen. Abschl ussbericht des Projektes "Mulitmedia in der Software Technik ,  45-67.   Magenheim, J., & Schulte, C. (2006). Social, ethical and technical issues in informatics —an  integrated approach (Vol. 11): Springer.  Medienbrüche  (2017). Schriftenreihe des DFG -SFB/FK. URL:  http://www.fk615.uni siegen.de/de/pubschriftenreihe.php   Mittermeir, R. ( 2010). Informatikunterricht zur Vermittlung allgemeiner Bildungswerte. In 25  Jahre Schulinformatik: Zukunft mit Herkunft (Vol. 271, pp. 5473). Wien: Österr.  Computer -Ges.  Modrow , E. (2010). Informatik als technisches Fach. LOG IN (163/164), 3842.   Mühling, A. (2014). Investigating Knowledge Structures in Computer Science Education.  (PhD), TU München, München.   Mulder, F., & van Weert, T. (2000). IFIP/UNESCO's informatics curricul um framework 2000  for higher education. ACM SIGCSE Bulletin archive, 33(4), 75 -83.   NCTM (National Council of Teachers of Mathematics)  (2000). Principles and Standards for  School Mathematics. In.  Neugebauer, J., Magenheim, J., Ohrndorf, L., Schaper, N., & Schubert, S. (2015). Defining  Proficiency Levels of High School Students in Computer Science by an Empirical Task  Analysis Results of the MoKoM Project. In A. Brodnik & J. Vahrenhold (Eds.), Informatics in Schools. Curricula, Competences, and Competitions  (Vol. 9378, pp. 4556): Cham: Springer International Pbulishing.  Nievergelt, J . (1993). Was ist InformatikDidaktik? Informatik -Spektrum, 16, 310.   Papert, S. (1982). Mindstorms: Kinder, Computer und Neues Lernen. Basel: Birkhäuser  Verlag.   Przybylla, M., & Romeike, R. ( 2014). Physical computing in computer science education. In  C. Schulte, M. Caspersen, & J. Gal -Ezer (Eds.), WiPSCE 2014 (pp. 136137). Berlin:  ACM, New York, USA.   Rechenberg, P. (2000). Was ist Informatik? Eine allgemeinverständliche Einführ ung (3.  überarbeitete und Auflage ed.). München: Hanser.   Rechenberg, P. (2010). Was ist Informatik? In 25 Jahre Schulinformatik Zukunft mit  Herkunft  (pp. 4653): Österr. Computer Ges.   Resnick, M. ( 2007). Sowing the Seeds for a More Creative Society. In).  Robinsohn, S. B. (1967). Bildungsreform als Revision des Curriculum . Neuwied.  Romeike, R. (2008a). Kreativität im Informatikunterricht.  (Dissertation), Universität  Potsdam, Potsdam.   Romeike, R. ( 2008b). Where's my Challenge? The Forgotten Part of Problem Solving in  Computer Science Education. In 3rd ISSEP Intern. Conf. on Informatics in Secondary Schools  Evolution and perspectives. Torun, Polen.  Romeike, R. (2017). Wie informatische Bildung hilft, di e digitale Gesellschaft zu verstehen  und mitzugestalten. In S. Eder, C. Mikat, & A. Tillmann (Eds.), Software takes command. Herausforderungen der „Datafizierung" für die Medienpädagogik  (pp. 105118).  München: kopaed.   Schaper, N., Ulbricht, T., & Hochholdinger, S. (2008). Zusammenhang von  Anforderungsmerkmalen und Schwierigkeitsparametern der P -TEDS -Items. In S.  Blömeke, G. Kaiser, & R. Lehmann (Eds.), Kompetenzmessung bei angehenden  Lehrerinnen und Lehrern. Ergebnisse einer empirischen Studie zum professi onellen  Wissen, zu den Überzeugungen und zu den Lerngelegenheiten von Mathematik Studierenden und Referendaren . Münster: Waxmann.  Schubert, S. (2004). Abschlussbericht zum BMBF -Projekt Simba  Schlüsselkonzepte der  Informatik in multimedialen Bausteinen unter besonderer Berücksichtigung der spezifischen Lerninteressen von Frauen. Retrieved from   Schubert, S., & Schwill, A. (2011). Didaktik der Informatik : Spektrum Akademischer Verlag.   Schulte, C. (2004). Lehr -Lernprozesse im Informatik -Anfangsunterricht  Theoriegeleitete  Entwicklung und Evaluation eines Unterrichtskonzepts zur Objektorientierung in der Sekundarstufe II. (Dissertation), Universität Paderborn, Paderborn.   Schulte, C. (2009). Dualitätsrekonstruktion als Hilfsmittel zur Entwicklung und Planung  von  Informatikunterricht. In Informatik braucht Herkunft: 25 Jahre “INFOS  Informatik und  Schule” : Koellen, Bonn.   Schulte, C., Magenheim, J., Müller, K., & Budde, L. ( 2017 ). The design and exploration cycle  as research and development framework in comput ing education. In EDUCON 2017 (pp.  867-876). Athens, Greece: IEEE.   Schwill, A. (1993). Fundamentale Ideen der Informatik. Zentralblatt für Didaktik der  Informatik, 93(1), 30ff.   Smile  (2017). Das Projekt "smile"  Mädchen lernen Informatik. smile -smart -it. URL:   https://www.smile -smart -it.de/index.php/projekt/   Starruß, I. (2010). Synopse zum Informatikunterricht in Deutschland. Analyse der  informatischen Bildung an allgemein bildenden Schulen auf der Basis der im Jahr 2010 gültigen Lehrpläne und Richtlinien.   Stechert, P. (2009). Fachdidaktische Diskussion von Informatiksystemen und der  Kompetenzentwicklung im Informatikunterricht. (Dissertation), Universität Siegen, Fachbereich 12  Elektrotechnik und Informatik, Siegen.   Strauss, A., & Corbin, J. (1996). Grounded Theory: Grundlagen qualitativer Sozialforschung.  Weinheim: Beltz.   Strecker, K. (2009). Informatik für Alle  wie viel Programmierung braucht der Mensch?  (Dissertation), Universität Göttingen, Göttingen. Retrieved from https://ediss.uni goettingen. de/handle/11858/00173500000006B3C8 -0   Strecker, K. (2013). Medizinische Informatik in der Sek 1. In INFOS 2013: Informatik  erweitert Horizonte -15. GI -Fachtagung Informatik und Schule  (Vol. P -219, pp. 2534).  Bonn.  TABULA (2017). TABULA. Lehr und Forschungsgebiet Informatik 9  Lerntechnologien.  URL:  http://learntech.rwth -aachen.de/go/id/ltmn   Tedre, M. (2014). The Science of Computing: Shaping a Discipline . Boca Raton, FL, USA:  Chapman & Hall/CRC Press.   The Royal  Society  (2012). Shut down or restart ? The way forward for computing in UK  schools. URL:  https://royalsociety.org/~/media/education/computing -in-schools/201201-12-computingin-schools.pdf   Thomas, M. (2002). Informatische Modellbildung – Modellieren von Modellen als ein  zentrales Element der  Informatik für den allgemeinbildenden Schulunterricht.  (Dissertationsmanuskript), Universität Potsdam, Potsdam.   Voss, S. (2006). Modellierung von Standardsoftwaresystemen aus didaktischer Sicht.  (Dissertation), TU München, München.   Wagenschein, M. (1962). Pädagogische Aufsätze zum mathematischen Unterricht. In E.  Löffler (Ed.), Der Mathematikunterricht . Stuttgart: Ernst Klett Verlag.   Weekly, J. A., & Polyhart, R. E. (2006). Situational Judgment Tests: Theory, Measurement,  and Application. London: Mawah ( N. J.).  Weinert, F. E. (2001). Vergleichende Leistungsmessung in Schulen  eine umstrittene  Selbstverständlichkeit. In F. E. Weinert (Ed.), Leistungsmessungen in Schulen (pp. 1731). Weinheim, Basel: Beltz Verlag.   Wilke, A ., & Magenheim, J. ( 2017). Requirements analysis for the design of workplace integrated learning scenarios with mobile devices: Mapping the territory for learning in Industry 4.0. In EDUCON 2017 (pp. 476485). Athens, Greece: IEEE.   Wing, J. M. (2006). Computational thinking. Communi cations of the ACM, 49, 3335.  WiPSCE  (2018). Workshop in Primary and Secondary Computing Education. URL:   http://wipsce.org   Zoyke, A., Beutner, M., Herrmann, P., Kundisch, D., Magenheim, J., & Neugebauer, J.  (2017). Webbasierte Classroom Response Systeme in der Hochschullehre: Eine designbasierte Fallstudie zur Unterstützung von Lehr -/Lernprozessen aus  Studierendensicht. Das Hochschulwesen, 65(1+2), 48 -52.    