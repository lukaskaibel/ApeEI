1   Informatische Bildung in der digitalen Welt.  Forschungszugänge der Informatikdidaktik Die digitale Transformation im Forschungsfokus der Informatikdidaktik   Ralf Romeike, Stefan Seegerer 1. Informatik, Informatikunterricht und Informatikdidaktik im Zeichen digitaler Transformation Mit der Informatik existiert in Deutschland seit den 1970er Jahren ein vergleichsweise junges Schulfach, das seit jeher die digitale Transformation und ihre zugrundeliegenden Systeme, Methoden und Anwendungen zum Gegenstand hat (vgl. Magenheim & Romeike, 2020). Gegenstand des Informatikunterrichts sind bspw. Information und Daten, Algorithmen und Informatiksysteme, aber auch das Entwickeln, Implementieren und Bewerten informatischer Modelle. “Digitalisierung” hat dabei schon immer eine hohe Bedeutung für den Informatikunterricht besessen, beschreibt sie doch zuvorderst den Prozess der Überführung analoger Information in digitale Daten. Daneben kann Digitalisierung als gesellschaftlicher Prozess verstanden werden, der die Art und Weise, wie wir arbeiten, kommunizieren und zusammenleben, grundlegend verändert. Die damit verbundene digitale Transformation führt zunächst dazu, dass immer mehr Informationen digitalisiert, immer mehr dieser daraus entstehenden Daten geteilt und Prozesse immer stärker automatisiert werden. Grundlage dieser Entwicklungen ist die Wissenschaft der Informatik. Informatische Bildung beschreibt jenen Teil der Allgemeinbildung, “der die Welt unter informationellem Aspekt betrachtet, während die naturwissenschaftlichen Fächer den stofflichen oder energetischen Aspekt in den Mittelpunkt ihres Unterrichts stellen” (Breier, 1994). Informatische Bildung schafft also ein Verständnis der Grundlagen, insbesondere aber der zugrundeliegenden Ideen und Prinzipien der digitalen Transformation. Möchte man diese Entwicklungen nicht nur beobachten, sondern auch verstehen, einschätzen und aktiv mitgestalten können, ist informatische Bildung notwendig (Romeike, 2017).  Erfahrungen mit der sogenannten “informationstechnischen Grundbildung” zeigen, dass dies nicht durch eine Reduzierung auf die Bedienung von digitaler Technologie – etwa in Form von Softund Hardwareprodukten – erreicht werden kann (Hubwieser, 2007). Vielmehr ist ein Ziel der Informatikdidaktik, die zugrundeliegenden Konzepte informatischer Bildungsgegenstände zu identifizieren und für Lernende nutzbar zu machen (Schwill, 1993). Durch ihren Fokus auf die zeitbeständigen fundamentalen Ideen der Informatik schafft informatische Bildung die Basis für ein Leben in der digitalen Welt. Der im Zuge der digitalen Transformation stetig wachsenden Bedeutung der informatischen Bildung wird national und international (Gander et al, 2013) dadurch Rechnung getragen, dass Informatikunterricht in immer mehr Bundesländern bzw. Staaten als Pflichtfach verankert wird. Überdies werden erste Anstrengungen unternommen, informatische Bildung bereits in der Primarstufe zu berücksichtigen. Mit dem digitalen Wandel tritt informatische Bildung darüber hinaus auch zunehmend als Gegenstand der Lehrerbildung für Lehrkräfte aller Fächer in den 2   Blick, für die neben medienpädagogischen und medienbezogenen fachdidaktischen Kompetenzen auch informatische Kompetenzen als relevant erachtet werden (bspw. van Ackeren et al 2019, Forschungsgruppe Lehrerbildung Digitaler Campus Bayern 2019).  In diesem Beitrag wird die Argumentation des Positionspapiers zur fachlichen Bildung in der digitalen Welt der Gesellschaft für Fachdidaktik (GFD, 2019) aufgegriffen und mit Perspektive der informatischen Bildung konkretisiert. Aufgrund der immensen Breite der Forschung zu Digitalisierung, Big Data und KI in der Informatikdidaktik können hierzu allerdings nur punktuelle Beiträge aufgeführt werden. 2.  Informatikdidaktische Forschung zu Digitalisierung, Big Data und KI. Theorie, Empirie, Praxis 2.1 ‚Fachliche Kompetenzen digital fördern‘ Zentrale Aufgaben in der Wissenschaft der Informatik sind die Entwicklung, Untersuchung und Optimierung von Verfahren zur automatischen Verarbeitung von Information. Hieraus ergibt sich eine Bandbreite an Themen und daran anschließenden Kompetenzen für den Informatikunterricht, bei denen informatische Modelle (bspw. Darstellungsmodelle oder Vorgehensmodelle) erstellt, bewertet und implementiert werden (Hubwieser & Broy, 1996). Unter der “digitalen Förderung” solcher fachlichen Kompetenzen im Sinne des GFD-Positionspapiers soll im Folgenden der Einsatz von digitalen Technologien im Informatikunterricht verstanden werden. Im informatikdidaktischen Diskurs werden digitale Technologien meist als “Informatiksysteme” bezeichnet, um zu verdeutlichen, dass es sich hierbei um eine “spezifische Zusammenstellung von Hardware-, Softwareund Netzwerkkomponenten zur Lösung eines Anwenderproblems” (vgl. Empfehlungen für Bildungsstandards ‚Informatik‘ der Gesellschaft für Informatik e.V. (GI), Röhner et al. 2016) handelt.    Abb. 1: Funktionen digitaler Technologien im Unterricht (nach Hartmann, Näf und Reichert, 2007).  Hartmann, Näf & Reichert (2007) unterscheiden drei Funktionen, die digitalen Technologien grundsätzlich im Unterricht zukommen können (vgl. Abb. 1): Im Unterricht aller Schulfächer  3   findet typischerweise der Einsatz als Lernmedium statt, bspw. in Form von Lernsoftware. Gleiches gilt für die Verwendung als (häufig fachspezifisches) Werkzeug, für das oft ein fundiertes Verständnis der Grundlagen des betreffenden Faches notwendig ist. Neben diesen beiden Rollen beschäftigt sich Informatikunterricht insbesondere auch mit digitalen Technologien als Unterrichtsgegenstand. Im Folgenden werden wir diese Unterscheidung heranziehen, um verschiedene Perspektiven der digitalen Förderung fachlicher Kompetenzen im Informatikunterricht zu betrachten. 2.1.1 Digitale Technologien als Werkzeug im Informatikunterricht Unter einem Werkzeug versteht man ein Hilfsmittel zur Lösung von bestimmten Aufgaben. Digitale Werkzeuge haben seit jeher einen festen Platz in der Wissenschaft und Praxis der Informatik. Gleiches gilt für den Informatikunterricht, was sich an der i.d.R. festen Verortung im Computerraum der Schule widerspiegelt. Da Informatikerinnen und Informatiker, Informatikdidaktikerinnen und -didaktiker, aber auch Informatiklehrkräfte nicht ausschließlich Anwender digitaler Werkzeuge sind, sondern diese auch selbst entwickeln können, begegnen sie sich aus der Praxis ergebenden Herausforderungen nicht selten mit einem neuen, selbst entwickelten Werkzeug. Für vermutlich kein anderes Unterrichtsfach existiert daher eine derart große Bandbreite an didaktischen Werkzeugen für unterschiedliche Niveaus, Zielgruppen und Themenbereiche. Forschungsarbeiten in diesem Bereich fokussieren vor allem die Entwicklung und Evaluation dieser Werkzeuge, bspw. von Programmiersprachen für Lernende oder zur Visualisierung von Algorithmen, sowohl im schulischen als auch (und vor allem) im hochschuldidaktischen Bereich. Verschiedene Studien zeigen, dass sich je nach informatikdidaktischer Konferenz zwischen 16% und 26% der wissenschaftlichen Beiträge in der Vergangenheit mit Werkzeugen beschäftigten (Malmi, Utting & Ko., 2019). Oft wird dabei von konkreten Problemen der schulischen Praxis ausgehend eine Lösung entwickelt (etwa Michaeli, Seegerer & Romeike, 2018). Ziel dieser Arbeiten ist es meist, das Konzept bzw. dessen Anwendung zugänglicher zu gestalten.  Programmierumgebungen Prominenteste Beispiele für informatische Lernwerkzeuge sind Programmiersprachen und -umgebungen. Deren Gestaltung ist auch Thema der Fachwissenschaft ‚Informatik‘ selbst (Wirth, 1974). In der Fachwissenschaft geführte bzw. durch sie geprägte Programmiersprachendiskussionen und -entwicklungen haben dabei einen signifikanten Einfluss auf den Informatikunterricht, wie beispielsweise die objektorientierte Programmierung zeigt (Stefik & Bobrow, 1985). Im Schulkontext werden dabei sowohl professionell genutzte Werkzeuge als auch ‚didaktisch reduzierte‘ Vertreter eingesetzt (Garneli, Giannakos & Chorianopoulos, 2015). Gerade solche didaktisch für Lehr-Lern-Zusammenhänge angepasste Programmierumgebungen, die das häufig als besonders schwierig wahrgenommene Erlernen der Programmierung einer größeren Breite und Zahl an Lernenden zugänglich machen sollen, nehmen einen wichtigen Platz in der informatikdidaktischen Forschung ein. Nach Kelleher und Pausch (2005) lassen sich diese Systeme gemäß ihres primären Einsatzzwecks unterscheiden: Teaching systems sollen Lernende an die Programmierung heranführen, sodass diese später auf professionelle Umgebungen wechseln können, während sogenannte empowering systems Lernende dazu befähigen sollen, selbst Dinge von persönlichem Nutzen erschaffen zu können, ohne das konkrete Ziel, später mit professionellen Werkzeugen arbeiten zu müssen.  4    Abb. 2: Die Programmierumgebungen Scratch und Snap!, die auch fortgeschrittene Projekte einfach zugänglich machen. Als solche haben insbesondere die für Kinder entwickelte Programmierumgebung ‚Scratch‘ (Resnick et al., 2009) und die für Fortgeschrittene konzipierte Programmierumgebung ‚Snap!‘ (Ball et al., 2019) vielen Menschen die Potenziale des Programmierens eröffnet (vgl. Abb. 2). Hürden, die sich bei klassischen textbasierten Sprachen oft durch die Notwendigkeit ergeben, bestimmte Anweisungen und Syntaxregeln zu kennen, werden durch die Verwendung visueller, möglichst intuitiv verständlicher Programmierbausteine reduziert. Der Einsatz solcher Programmierumgebungen beschränkt sich nicht nur auf die Vermittlung informatischer Fachinhalte: Verschiedene Arbeiten zeigen, dass solche Werkzeuge auch mit Fokus auf andere Themen wie Storytelling (Burke, 2012), der Vermittlung physikalischer Gesetze (Lopez & Hernandez, 2015) oder zur Förderung mathematischer Bildung (Benton et al., 2016) eingesetzt werden können. Automatische Feedbacksysteme Ein anderes Feld, in dem digitale Werkzeuge in informatischen Lernprozessen eingesetzt werden, ist der Bereich der Rückmeldung. So wurden und werden noch immer verschiedene Systeme entwickelt, um automatisch Feedback zum selbst entwickelten Programmcode zu geben. Dabei werden unterschiedliche Aspekte – wie etwa Funktionalität, aber auch Gestaltung – bewertet, oder konkrete Hinweise zum weiteren Vorgehen gegeben (bspw. Singh, Gulwani & Solar-Lezama, 2013). Besonders verbreitet sind solche Systeme im Hochschulkontext, vor allem aufgrund hoher Studierendenzahlen in Grundlagenvorlesungen der Informatik. Aus Forschungssicht ist das Thema nach wie vor aktuell: In einer Analyse von 69 Feedback-Werkzeugen stellen Keuning, Jeuring und Heeren (2016) fest, dass diese Werkzeuge oft (noch) keine Hilfestellung dazu geben, wie das Problem gelöst werden könnte oder wie die nächsten Schritte aussehen sollten.  2.1.2 Digitale Technologien als Lernmedium im Informatikunterricht Auch in ihrer Rolle als Lernmedium haben digitale Medien eine lange Tradition in der Informatikdidaktik. Lernmedien sollen nicht nur Wissen vermitteln und den Kompetenzerwerb unterstützen, sondern gleichzeitig den Lernprozess motivieren und häufig auch spezifische Lernziele wie die Reflexion und Anwendung des Gelernten unterstützen. Ebenso wie bei den Werkzeugen entwickeln Informatiklehrkräfte bei Bedarf Lernsoftware für den eigenen Unterricht (bspw. Dorn, 2019). Hierbei verschmelzen Lernmedium und Werkzeug oft in einem  5   System, z.B. in der bereits erwähnten Programmierumgebung ‚Scratch‘. Aber auch in anderen Fächern anwendbare Lernmedien werden oft von Informatikerinnen bzw. Informatikern erstellt, sodass sich hieraus eine vielfältige fachdidaktische Forschung zur Entwicklung und Evaluation von Lernsoftware mit interdisziplinärer Ausrichtung entwickelt hat. So sind Plattformen wie LearningApps (Hielscher, 2012) oder Swisseduc1 aus informatikdidaktischer Forschung hervorgegangen, werden aber auch in anderen Fächern verwendet.  Die Gesellschaft für Informatik verfügt zudem über eine eigene Fachgruppe “Bildungstechnologien”2 (ehemals “E-Learning”). Der Fokus dieser Arbeitsgruppe liegt auf rechnergestützten Lehrund Lernformen und beschränkt sich dabei nicht auf bestimmte Phasen der Ausbildung, sondern adressiert Schulen, Hochschulen und lebenslanges Lernen gleichermaßen. Die Fachgruppe ist unter anderem für die Organisation der E-Learning Fachtagung Informatik (DeLFI) verantwortlich. Hier werden jährlich Innovationen aus dem Bereich E-Learning und Bildungstechnologien vorgestellt, wobei sich der Teilnehmerkreis nicht nur auf die Informatik beschränkt. Simulationsumgebungen Aufgrund ihrer abstrakten Natur sind viele informatische Bildungsgegenstände für Lernende nur schwer zu fassen und bedürfen daher einer entsprechenden Aufarbeitung. Simulationsumgebungen erlauben es auch Lernenden, verschiedene Parameter eines Sachverhalts virtuell zu manipulieren und Auswirkungen auf das Gesamtsystem zu beobachten. Für den Themenkomplex Rechnernetze etwa existiert mit ‚Filius‘ eine aus einem Promotionsprojekt hervorgegangene und im Unterricht häufig eingesetzte Software (siehe Abb. 3), die es erlaubt, selbst Computernetzwerke zu entwerfen. So kann der Austausch von Nachrichten beim E-Mail-Versand oder in Chatsystemen simuliert und so im Sinne des entdeckenden Lernens der Aufbau und die Funktionsweise von Rechnernetzen erkundet werden (Freischlad, 2010). Auch für viele Inhalte der theoretischen oder technischen Informatik können Simulationsumgebungen unterstützend eingesetzt werden. Dabei werden künstlich limitierte Systeme erschaffen, um bestimmte theoretische oder technische Rahmenbedingungen erfahrbar zu machen, wobei die Umgebungen oft auch einen spielerischen Charakter aufweisen (Battistella & von Wangenheim, 2016).    1 https://www.swisseduc.ch/  2 https://fg-bildungstechnologien.gi.de/ 6    Abb. 3: Simulationsumgebung ‚Filius‘, die das virtuelle Nachbilden von Rechnernetzen erlaubt. Visualisierungsprogramme Informatische Konzepte wie z.B. Algorithmen sind oft abstrakt. Obwohl Algorithmen sich vor allem durch ihr dynamisches Verhalten auszeichnen, bleibt der Prozess selbst oft verborgen, da nach Ausführung des Algorithmus lediglich das Ergebnis vorliegt. Um Lernende beim Verständnis zu unterstützen, beschäftigt sich ein Zweig informatikdidaktischer Forschung mit der Entwicklung von Visualisierungen und Animationen für informatische Konzepte, Verfahren oder Algorithmen. Indem die abstrakten Konzepte an Beispielen graphisch verdeutlicht werden, erhalten Lernende einen Einblick in deren Funktionsweise. In einer Umfrage stellen Isohanni & Järvinen (2014) fest, dass etwa 55% aller Programmierkurse Visualisierungswerkzeuge nutzen, wobei der Anteil mit zunehmendem Alter der Lernenden sinkt. Abb. 4 zeigt ein Beispiel aus dem Bereich der Künstlichen Intelligenz.    7   Abb. 4: Visualisierung des verstärkenden Lernens, einem Verfahren aus dem Bereich der künstlichen Intelligenz3. Robotik und Physical Computing Ein weiterer Ansatz, um abstrakte informatische Konzepte anschaulicher zu gestalten, ist der Einsatz von programmierbaren Robotern (wie z.B. ‚Lego Mindstorms‘) oder Miniaturcomputern, sogenannten Mikrocontrollern (wie z.B. ‚Calliope mini‘). Gerade für die Zielgruppe der jüngeren Lernenden existiert eine Vielzahl an programmierbaren Robotern, die sich entweder direkt über physische Tasten oder über einen verbundenen Computer programmieren lassen. Während einfache Roboter wie z.B. BeeBots vor allem dazu dienen, programmierte Wege nachzuverfolgen (vgl. Abb. 5), erlauben Robotik-Baukästen oder Mikrocontroller eine größere Varietät der Projekte. Aufgrund der Verfügbarkeit von Sensoren und Aktoren haben die Lernenden mehr Freiheiten und können auch komplexere Projekte umsetzen. Studien zeigen, dass gerade für Kinder jene anfassbaren Repräsentationen leichter zugänglich sind als rein virtuelle Repräsentationen (Xie, Antle & Motamedi, 2008). In der Informatikdidaktik existieren eine Reihe vor allem praktischer Arbeiten, die sich mit programmierbaren Robotern (Anzoátegui, Pereira & Jarrín, 2017) oder dem Physical Computing auseinandersetzen (Przybylla & Romeike, 2012).   Abb. 5: Kinder programmieren einen BeeBot. 2.1.3 Exkurs: Fachliche digitale Kompetenzen analog fördern: Informatik “unplugged” Vor dem Hintergrund des ohnehin hohen Stellenwerts und einer großen Präsenz von digitalen Technologien im Informatikunterricht soll an dieser Stelle ein methodischer Ansatz und Forschungsgegenstand der Informatikdidaktik erwähnt werden, der zur Erzielung der Methodenvielfalt explizit auf digitale Technologien verzichtet, um digitale Kompetenzen “analog” zu fördern. Das Konzept Computer Science Unplugged (Bell, Witten & Fellows, 2015)  3 Die Anwendung kann unter https://computingeducation.de/proj-schlag-das-kroko/ ausprobiert werden.  8   beschreibt Aktivitäten, die informatische Inhalte explizit ohne Strom – also unplugged – vermitteln sollen. Diese sollen einem breiten Publikum einfach und schnell Zugang zu informatischen Ideen verschaffen (Cortina, 2015). Unplugged-Aktivitäten zeichnen sich unter anderem dadurch aus, dass sie keinen (direkten) Einsatz von Computern erfordern, als Spiel oder Herausforderung verpackt sind, anfassbare Objekte benutzen oder Bewegung erfordern, und ohne große Vorbereitung bzw. teures Material einsetzbar sind (Nishida et al., 2009). Aus diesen Gründen werden sie häufig in Outreach-Programmen mit Kindern und Jugendlichen eingesetzt (Bell, Lambert & Marghitu, 2012; Lambert & Guiﬀre, 2009). Inzwischen gibt es Unplugged-Aktivitäten für eine Vielzahl an Themen, etwa für die Kodierung von Bildern, das Binärsystem (siehe Abb. 6 links) oder auch Themen wie künstliche Intelligenz (Seegerer, Lindner & Romeike, 2019) (siehe Abb. 6 rechts).  Studien zeigen, dass die Integration von Unplugged-Aktivitäten in den Informatikunterricht mindestens genauso effektiv ist wie herkömmliche Herangehensweisen unter Verwendung des Computers (Nishida et al., 2008; Thies & Vahrenhold 2013). Hermans und Aivaloglou (2017) stellen ebenfalls keine Unterschiede zwischen einem digitalen und einem mit Unplugged-Aktivitäten durchgeführten Zugang zur Programmierung beim Verständnis der Konzepte fest, sprechen aber von einer höheren Selbstwirksamkeitserwartung bei Lernenden, die Programmieren zunächst unplugged erlernt haben. Diese Effektivität von Unplugged-Aktivitäten scheint allerdings in höheren Klassen abzunehmen (Feaster et al., 2011).   Abb. 6: Unplugged-Aktivität zur Verdeutlichung der Funktionsweise des binären Zahlensystems (links, Quelle: UC CSE CS Unplugged Binary digits (sample classroom lesson), CC-BY) und von überwachtem maschinellem Lernen als Teil des Themengebiets KI (rechts). 3. Fokus ‚Digitale Kompetenzen fachlich fördern‘ Im Hinblick auf die Stellung des Digitalen im Unterricht stellt Informatikunterricht seit jeher eine Besonderheit dar: Digitale Technologien sind nicht nur Werkzeug oder Lernmedium, sondern vor allem auch Unterrichtsgegenstand. Im Informatikunterricht lernen Schülerinnen und Schüler, ihre informatischen Grundlagen zu analysieren, anzuwenden, eigene digitale Systeme selbst zu entwickeln und deren Wirkung zu reflektieren. Somit kann Informatik als das Schulfach verstanden werden, in dem primär fachlich verankert digitale Kompetenzen gefördert werden – vergleichbar mit dem Fach Deutsch, in dem sprachliche Kompetenzen fachlich zentral verankert sind, obwohl Sprachbildung gleichwohl als Querschnittsaufgabe aller Fächer verstanden wird.  9   Hieraus ergeben sich aus Sicht der Informatikdidaktik zwei Perspektiven zur “Förderung digitaler Kompetenzen”, wie sie in der Strategie der Kultusministerkonferenz (KMK) „Bildung in der digitalen Welt“ benannt werden. Die erste Perspektive bezieht sich auf die fachbezogenen Themen und Kompetenzen des Informatikunterrichts und ihren Beitrag zur Entwicklung der KMK-Kompetenzbereiche. Die zweite Perspektive bezieht sich auf Informatik als Grundlage der Digitalisierung in anderen Fächern und zeigt auf, wie informatische Bildung Grundlagen für den Erwerb und die Anwendung digitaler Kompetenzen in anderen Fächern schaffen kann. 3.1 Beiträge des Informatikunterrichts zu den KMK-Kompetenzbereichen Im Informatikunterricht haben alle KMK-Kompetenzbereiche – vor dem Hintergrund des oben skizzierten langjährigen und prominenten Stellenwerts von digitalen Technologien – eine lange Tradition. In diesem Abschnitt werden wir zunächst einzelne Bereiche der KMK-Strategie “Bildung in der digitalen Welt” aufgreifen und exemplarisch aufzeigen, wie sie in der Informatik fachlich adressiert werden. Gleichzeitig werden wir herausstellen, welche originär informatische Dimension diese jeweils beinhalten.  Der KMK-Strategie folgend sollen Schülerinnen und Schüler bspw. Kompetenzen im Bereich Suchen, Verarbeiten und Aufbewahren entwickeln. Sowohl Suchmaschinen als auch Datenbanken sind etablierte Themen des Informatikunterrichts. So trägt das Verständnis der Funktionsweise von Suchmaschinen dazu bei, effektiver suchen oder die Rangfolge der Ergebnisse beurteilen zu können. Datenbanken wiederum helfen beim strukturierten Speichern und Wiederfinden von Informationen. Aus Forschungsperspektive ist in diesem Gegenstandsbereich bspw. von Interesse, wie sich das dahinterstehende fachliche Feld des Datenmanagements weiterentwickelt und welche Konsequenzen sich daraus für die inhaltliche und methodische Gestaltung des Informatikunterrichts ergeben (Grillenberger & Romeike, 2017, vgl. auch Abschnitt 2.3). Ein ebenso fachlich verankerter und auch fachwissenschaftlich fundierter Gegenstandsbereich ist Kommunizieren und Kooperieren. So erwerben Schülerinnen und Schüler im Rahmen von eigenen Softwareprojekten kommunikative und kooperative Kompetenzen, wenn sie Projektziele festlegen, das weitere Vorgehen besprechen oder gemeinsam an Problemen arbeiten. Der Bereich ist dementsprechend auch integraler Prozessbereich der Bildungsstandards ‚Informatik‘ (Röhner et al. 2016). Als Anforderungen finden sich dort unter anderem die Nutzung digitaler Kommunikationsund Kollaborationssysteme und das Anwenden von Vorgehensmodellen aus der Softwareentwicklung (vgl. Abb. 7) (Romeike & Göttel, 2012). Die überfachliche Relevanz solcher Kompetenzen zeigt sich bspw. an der zunehmenden Verbreitung agiler Methoden, die sowohl in der Unternehmensorganisation als auch in vielen anderen Bereichen Anwendung finden. In der Informatik besitzen sie aber eine besondere Praxisrelevanz (vgl. Brichzin, Kastl, Romeike, 2019). Bei der Arbeit an Softwareprojekten wird außerdem häufig auf sogenanntes Pair-Programming zurückgegriffen. Dabei arbeiten Schülerinnen und Schüler zu zweit kontinuierlich kommunizierend an einem Rechner, wobei eine Person Tastatur und Maus kontrolliert und das Programm eingibt, während die andere Person den Überblick bewahrt und proaktiv nach potenziellen Fehlern, Hürden oder Stolpersteinen Ausschau hält (McDowell, Hanks & Werner, 2003). Informatikdidaktische Forschung zeigt, dass sich der Einsatz von 10   Pair-Programming positiv auf den Lernerfolg, die Qualität der Anwendungen und das Vertrauen in die eigenen Lösungen auswirkt (Hanks et al., 2011).  Abb. 7: Prozessmodell für die Anwendung agiler Methoden im Informatikunterricht. Kompetenzen im Bereich Produzieren und Präsentieren werden nicht nur anhand der Recherche, Aufbereitung und Präsentation von Fachinhalten an unterschiedlichen Themen der Informatik eingeübt und vertieft, etwa der Geschichte der Informatik oder dem Aufbau von Computern, sondern auch bei eigenen Projekten, wie einem selbst entwickelten Programm (Göttel, 2011). In manchen Bundesländern werden hier aber auch Themen anderer Schulfächer im Sinne eines fachübergreifenden Unterrichts, etwa aus der Biologie, aufgegriffen (Lehrplan Bayern, Natur und Technik, Klasse 6). Informatikunterricht fördert auch Kompetenzen im Bereich Schützen und sicher Agieren. Gerade die Themen ‚Daten und Datensicherheit‘ sind Gegenstand verschiedener Informatiklehrpläne (Hubwieser et al., 2015). Informatische Kompetenzen im Bereich Datensicherheit und Verschlüsselung helfen Schülerinnen und Schülern nicht nur dabei, ihre persönlichen Daten vor unbefugtem Zugriff zu schützen, sondern auch die Gründe bspw. für Passwortstrategien zu verstehen und vor diesem Hintergrund geeignete Entscheidungen zu treffen. So mag sich der Leser an dieser Stelle überlegen, warum zum Schützen seines Geldes eine vierstellige PIN für die Kreditkarte ausreicht, während der Zugang zum Lern-Management-System der Schule i.d.R. mit einem komplexen Passwort geschützt werden soll. Diese und ähnliche Fragestellungen sind Teil informatischer Bildung und unterstützen Schülerinnen und Schüler dabei, ihre Daten zu schützen. Darüber hinaus helfen auch Kompetenzen im Bereich der Datenanalyse, Gefahren und Risiken für die Privatsphäre zu erkennen, zu reflektieren und schließlich in der eigenen Strategie zu berücksichtigen (Grillenberger & Romeike, 2015).  11   Problemlösen und Handeln, insbesondere der Unterpunkt “Algorithmen erkennen und formulieren”, ist seit jeher ein integraler Bestandteil informatischer Bildung. Aus informatischer Sicht sind hierbei weniger vorgefertigte Lösungen zu verwenden, als vielmehr eigene Lösungen für Probleme zu entwerfen, wobei sich der Unterricht am Modellierungskreislauf orientiert und sowohl das Modellieren als auch das Implementieren in den Fokus stellt (Humbert, 2010). Dabei werden vor allem jene Denkund Arbeitsweisen, die in der Informatik bei der Problemlösung eingesetzt werden, als integraler Bestandteil informatischer Allgemeinbildung gesehen (Seegerer, Michaeli, Romeike, 2019) und in informatikdidaktischen Arbeiten oft unter dem Begriff Computational Thinking (Wing, 2006) referenziert. Zu den verschiedenen Denkund Arbeitsweisen findet sich jeweils auch informatikdidaktische Forschung, beispielsweise zur Abstraktion (Waite et al. 2018) oder zum Debugging, dem systematischen Finden und Beheben von Fehlern (Michaeli & Romeike, 2019). Auch dem Bereich Analysieren und Reflektieren wird im Informatikunterricht Rechnung getragen, indem er in den Empfehlungen für Bildungsstandards ‚Informatik‘ der Gesellschaft für Informatik (Röhner et al., 2016) inhaltlich explizit unter “Informatik, Mensch und Gesellschaft” berücksichtigt wird, was auch die Reflexion über “digitale Medien” bzw. den Prozess der Digitalisierung beinhaltet (vgl. Abb. 8). Informatische Bildung liefert die grundlegenden Kompetenzen, um die digitale Welt zu verstehen und eben jene fundierten Schlussfolgerungen bezüglich der Wechselwirkungen der digitalen vernetzten Welt mit Individuen und Gesellschaft zu entwickeln (Seegerer, Michaeli & Romeike, 2019). Schülerinnen und Schüler aller Jahrgangsstufen ● benennen Wechselwirkungen zwischen Informatiksystemen und ihrer gesellschaftlichen Einbettung, ● nehmen Entscheidungsfreiheiten im Umgang mit Informatiksystemen wahr und handeln in Übereinstimmung mit gesellschaftlichen Normen, ● reagieren angemessen auf Risiken bei der Nutzung von Informatiksystemen. Abb. 8: Auszug aus den Bildungsstandards ‚Informatik‘, Inhaltsbereich “Informatik, Mensch und Gesellschaft”. Alle sechs Kompetenzbereiche sind also in jeweils unterschiedlichem Umfang bereits Gegenstand des Informatikunterrichts bzw. werden im Informatikunterricht gefördert. Während dies bei Themen wie Kollaboration, Algorithmen oder Sicherheit oft deutlich erkennbar ist, sind andere Bereiche, die oft als Zusatzaufgaben an den Informatikunterricht herangetragen werden, wie etwa das Beachten rechtlicher Vorgaben oder das Präsentieren von Inhalten, weniger auffällig. Das spiegelt sich auch in der Forschung wider: Aspekte der Bereiche Kommunikation und Kollaboration, dem Umgang mit Daten sowie Problemlösen sind häufig Themen informatikdidaktischer Forschung. Dort stehen unterschiedliche Zugänge und Ansätze genauso im Fokus wie die Erfolgsmessung solcher Interventionen. Für die anderen Bereiche existiert hingegen eine geringere Zahl an empirischen Forschungen. Dafür findet sich hier eine höhere Anzahl an praktischen Arbeiten in Form von Lehrwerken oder Unterrichtsmaterialien. Mittlerweile existieren auch immer mehr Bestrebungen, informatische Grundlagen bereits in der Primarstufe zu thematisieren. Dabei finden sich sowohl Ansätze, ein eigenständiges Schulfach an Grundschulen zu etablieren – wie dies bspw. in Großbritannien geschehen ist 12   (Berry, 2018) – als auch Vorschläge, Informatik, einem Querschnittsansatz folgend, in verschiedenen Fächern aufzugreifen. Auch die Gesellschaft für Informatik hat mittlerweile Bildungsstandards für informatische Bildung im Grundschulbereich vorgelegt (Humbert et al., 2019). Vor dem Hintergrund des national wie international gestiegenen Interesses für informatische Bildung in der Grundschule ist es nicht verwunderlich, dass sich immer mehr Forschungsund Praxisarbeiten mit informatischer Bildung im Grundschulkontext beschäftigen. Beliebte Themen sind hierbei didaktische Möglichkeiten der Einführung in die Programmierung, insbesondere mit Scratch, fachund themenbezogene Vorstellungen von Schülerinnen und Schülern sowie Lehrkräften, die Verwendung konkreter Lernmedien wie programmierbarer Roboter oder die Entwicklung und Untersuchung methodischer Zugänge wie bspw. Unplugged-Aktivitäten (Bergner et al., 2018). 3.2 Informatik als Grundlage der Digitalisierung in anderen Fächern „Informatik ist eine Basisund Querschnittsdisziplin, die ihre Grundlagen aus der Mathematik und den Ingenieurwissenschaften bezieht und in alle Lebensund Anwendungsbereiche wirkt“ (GI, 2006). Schubert und Schwill (2011) konstatieren, dass, obwohl alle Fächer einen Beitrag zum fächerübergreifenden sowie fächerverbindenden Lernen leisten, der Informatik aufgrund der “Informatisierung aller Fachgebiete und damit verbunden auch aller Unterrichtsfächer” eine besondere Rolle zukommt. Die europäische Informatics for All-Strategie (Caspersen et al., 2018) betont, dass diese Informatisierung einen Wandel in allen Schulfächern nach sich zieht. Aus Sicht der Informatikdidaktik sind also informatische Grundlagenkompetenzen (neben anderen) in allen Fächern relevant: Erst wenn die Schülerinnen und Schüler bspw. verstanden haben, wie und mit welchen Verlusten analoge Informationen in digitale Daten überführt werden, oder wie eine große Menge an Daten effizient erfasst, verarbeitet und dargestellt werden kann, besteht für den Fachunterricht die benötigte Basis, sich der fachspezifischen Anwendung solcher Grundlagenkompetenzen zu widmen und damit fachspezifisch die KMK-Empfehlungen aufzugreifen. Dementsprechend beteiligt sich die Informatikdidaktik aktiv an der Diskussion um digitale Bildung. Die Stellungnahme der GI zur KMK-Strategie (Brinda, 2017) verweist zur Veranschaulichung auf das “Haus der digitalen Bildung” (vgl. Abb. 9), in welchem die Betrachtung digitaler Medien und Technologien als Unterrichtsgegenstand der Informatik eine solide Grundlage liefert, auf die in anderen Fächern aufgebaut werden kann: Ob als Gestaltungsmittel und -gegenstand, wie bspw. bei der Erstellung eines Videos, als Unterrichtsmittel, wie Geometrie-Software, oder dem pädagogisch-organisatorischen Einsatz als Organisationsmittel, wie bspw. smarter Tafeln. 13    Abb. 9: Haus der digitalen Bildung. Zur Ausbildung einer solchen Grundlage, die auch bei regelmäßigen technischen Weiterentwicklungen relevant bleibt, hat sich eine Fokussierung auf Konzeptwissen bewährt. Kompetenzen dagegen, die sich ausschließlich auf die Anwendung spezifischer Softwareprodukte beziehen (auch Bedienkompetenzen oder Produktwissen genannt), veralten schnell und sind wenig anschlussfähig. So können Software-Updates durchaus die Position oder die Benennung von Menüs und Schaltflächen ändern. Liegt der Fokus in der Vermittlung hingegen auf den Konzepten, die der Modellierung dieser Software zugrunde liegen, ist das erworbene Wissen unabhängig von solchen Veränderungen und auch auf alternative Anwendungen eines Typs übertragbar. Beispielsweise unterscheiden sich Textverarbeitungsprogramme unterschiedlicher Hersteller darin, wie einzelne Aktionen durch den Nutzer initiiert werden, der grundlegende Aufbau eines Dokuments aus Absätzen und Zeichen ist jedoch einheitlich. Hartmann, Näf & Reichert, 2006 stellen die Eigenschaften von Produktund Konzeptwissen zusammenfassend gegenüber (vgl. Tab. 1), und auch Peyton Jones (2014) unterstreicht, dass Anwendungsfertigkeiten nützlich, aber schnell veraltet sind. Die sich aus den fachlichen Zusammenhängen ergebenden Konzepte, Prinzipien und Methoden legen dagegen die Grundlage, langfristig anwendbare Kompetenzen auszubilden. Informatikdidaktische Forschung zum Umgang mit Standardsoftware wie Textverarbeitungssystemen oder Präsentationssoftware hat gezeigt, dass eine Vermittlung eines solchen Konzeptwissens gegenüber Produktwissen zu einer höheren Nachhaltigkeit führt (Voss, 2006). Produktwissen Konzeptwissen  14   produktbezogen kurzlebig auswendig lernen, wiedergeben isolierte Fakten wenig Transfer möglich konkret produktunabhängig langlebig verstehen und einordnen Zusammenhänge Transfer möglich abstrakt Tab. 1: Gegenüberstellung von Produkt und Konzeptwissen (Hartmann, Näf & Reichert, 2006). Das Ausweisen eines Kompetenzbereichs “Algorithmen erkennen und formulieren” in den KMK-Standards unterstreicht, dass die fachbezogene Anwendung von Programmierkompetenzen zukünftig auch außerhalb des Informatikunterrichts eine Rolle spielen wird. Ein gewichtiger Teil informatischer Bildung und informatikdidaktischer Forschung beschäftigt sich mit dem Erlernen der Programmierung. Dabei wird Programmieren eben nicht als reine technische Fertigkeit, sondern vielmehr als komplexer Problemlöseprozess verstanden, der die konzeptionelle Lösung (Modellierung) des Problems und die anschließende Umsetzung als Computerprogramm (Implementierung) einschließt (Van Merrienboer & Krammer, 1987). Programmierung erlaubt nicht nur das aktive Nachvollziehen algorithmischer Abläufe, sondern wird in diesem Zusammenhang durch seinen Beitrag zur kreativen Ausdrucksfähigkeit auch als Beitrag zur Allgemeinbildung gesehen (Schulte, 2013), wobei die im Rahmen der Programmierung erworbenen Kompetenzen auch auf Situationen übertragbar sind, in denen Problemlöseprozesse gefragt sind: Eine groß angelegte Metastudie über 105 Studien zum Programmierenlernen weist hier auf einen moderaten Transfer hin. Kompetenzen, die beim Programmieren erworben wurden, werden von Lernenden oft auf Situationen angewendet, die kreatives Denken, mathematische Fähigkeiten oder Metakognition erfordern. Auch zu räumlichen Fähigkeiten und logischem Schließen besteht ein positiver Zusammenhang (Scherer, Siddiq & Sánchez, 2018). 4. ‘Digitale Kompetenzen fachlich fördern über die KMK-Standards hinaus’ Die vorangehenden Ausführungen haben bereits verdeutlicht, dass die Förderung digitaler Kompetenzen in der informatischen Bildung weit über die explizit in den KMK-Standards niedergeschriebenen Kompetenzbereiche hinausgeht. In diesem Abschnitt führen wir dies genauer aus. Dabei gehen wir zunächst der Frage nach, wie sich fachliches Lernen (in allen Fächern) durch den Prozess der Digitalisierung verändert. Anschließend skizzieren wir, welchen Beitrag informatische Bildung hier leisten kann. Informatische Kompetenzen gewinnen in den unterschiedlichsten Anwendungsfeldern immer mehr an Bedeutung: Die mitunter als “Bindestrichinformatiken” bezeichneten Disziplinen, wie Bioinformatik und Wirtschaftsinformatik oder die Digital Humanities untersuchen disziplinspezifische Fragestellungen mit Hilfe informatischer Herangehensweisen. Auch die Diskussion um “Computational Thinking” liegt teilweise in der gestiegenen Bedeutung der Informatik in anderen Disziplinen begründet. Unter diesem Begriff fasste Wing (2008) jene informatischen Problemlösestrategien zusammen, die nicht nur in der Informatik, sondern auch in anderen Disziplinen Anwendung finden können. Hierzu zählt insbesondere das Nachdenken über die Schritte, die zur Problemlösung führen. Erst anschließend werden die technischen Fertigkeiten angewandt, sodass der Computer das Problem für uns löst. Neben 15   dem bereits in der KMK-Strategie erwähnten Nachvollziehen und Formulieren von Algorithmen sind hierzu auch Kompetenzen der Logik (Analysieren und Voraussagen treffen), der Abstraktion (Unwichtiges weglassen), des Generalisierens (Ähnlichkeiten wiedererkennen) oder des Debuggings (Fehler finden und beheben) erforderlich (vgl. Csizmadia et al., 2015). Solche Denkund Arbeitsweisen finden auch Anwendung sowohl bei der Erstellung von Simulationen und Datenanalysen, die oft auch als dritte bzw. vierte Säule des wissenschaftlichen Erkenntnisgewinns, neben Theorie und Experiment, bezeichnet werden (Riedel et al., 2008), als auch bei der Anwendung von Methoden der künstlichen Intelligenz, bspw. des maschinellen Lernens (Tarca et al., 2007). Die vielfältigen Möglichkeiten zeigen exemplarisch, dass die in der KMK-Strategie genannten Kompetenzen offenbar nur einen Ausschnitt aus dem Spektrum relevanter digitalisierungsbezogener Kompetenzen bilden. Die Informatikdidaktik beschäftigt sich dementsprechend auch mit der Frage, wie sich fachliches Lernen (in allen Fächern) durch den Prozess der Digitalisierung verändert. Ausgehend von den Veränderungen in den (Bezugs-)Wissenschaften, etwa durch die Verwendung von Simulationen, Big Data oder künstlicher Intelligenz, adressiert informatische Bildung auch solche Kompetenzen, die in diesem Kontext für andere Fächer wichtig werden.  Eine solche, zunehmend Beachtung findende Kompetenz ist Data Literacy. „Data literacy ist die Fähigkeit, planvoll mit Daten umzugehen und sie im jeweiligen Kontext bewusst einsetzen und hinterfragen zu können.“ (Hochschulforum Digitalisierung, 2017). Eine frühzeitige Entwicklung von Data-Literacy-Kompetenzen wird als wichtige Basis sowohl für ein selbstbestimmtes Leben in der digitalen Welt als auch für die Ausbildung interdisziplinärer und domänenspezifischer Kompetenzen angesehen (Ridsdale et al., 2015). Die Notwendigkeit zur Förderung grundlegender Datenkompetenzen bereits im Schulunterricht wird zwar immer häufiger anerkannt und betont (entsprechende Kompetenzen sind unter anderen in der Strategie zur „Bildung in der digitalen Welt“ der KMK enthalten), gleichzeitig sind entsprechende Kompetenzen jedoch noch nicht einmal in der Lehrerbildung angekommen, die zukünftig als Multiplikatoren von Datenkompetenz ihre Schülerinnen und Schüler entsprechend ausbilden sollen. So untersuchten Grillenberger & Romeike (2018) das Fachwissen von Informatiklehrkräften über und ihre Einstellungen zu typischen Datenmanagement-Themen und Datenkompetenz sowie die Herausforderungen, die sie für den Unterricht sehen. Ihre Analyse zeigt, dass Fortbildungsmöglichkeiten zu Datenmanagement-Themen für Lehrkräfte angeboten werden sollten. Obwohl die Lehrkräfte nämlich großes Interesse zeigen und teilweise versuchen, Datenmanagement-Themen in ihren Unterricht einzubauen, schätzen sie ihr eigenes Wissen in diesem Bereich generell als unzureichend ein. Eng mit Data Literacy verknüpft dominiert das Thema Künstliche Intelligenz (KI) zunehmend Medienund Bildungsdiskurse. Die wachsende Verfügbarkeit großer Datenmengen ist einer der Haupttreiber für die jüngsten Fortschritte bei Ansätzen des maschinellen Lernens und damit im Bereich der sogenannten datengesteuerten Künstlichen Intelligenz. Andererseits unterstützen auch KI-Techniken die Analyse großer Datenmengen und stellen somit eine wertvolle Technologie für den Umgang mit Big Data dar. Künstliche Intelligenz ist aus unserer heutigen Welt nicht mehr wegzudenken. Gerade vor dem Hintergrund der Einsatzbereiche von KI-Systemen wie selbstfahrende Autos, Bewerberscreenings oder bei der Kreditvergabe werden einige grundlegende, gesellschaftlich relevante Fragestellungen aufgeworfen, aus denen wiederum Herausforderungen für die Schule resultieren: Zu digitaler Bildung gehört in einem zunehmenden Maße auch, sich mit dem Thema KI und seinen zugrundeliegenden 16   Ideen und Prinzipien (vgl. Seegerer, Michaeli & Romeike, 2020) auseinanderzusetzen, ihre Funktionsweisen zu verstehen und die sich daraus ergebenden Anwendungsmöglichkeiten kreativ einzusetzen (vgl. Romeike, 2011). Darüber hinaus bietet KI einen Anlass, das eigene Denken zu reflektieren (bspw. Lernen durch Belohnung, Bildung von Kategorien) sowie Prozesse und Grenzen der Digitalisierung / der Informatik (Automatisierung des Automatisierbaren) nachzuvollziehen. Wie eine Studie von Lindner & Romeike (2019) zeigt, verfügen selbst die meisten am Thema interessierten Lehrkräfte nur über eine grobe Vorstellung, wenn es um das Themenfeld der KI geht. Entsprechend ist auch die Weiterbildung von Lehrkräften, um Themen wie KI im Unterricht aufgreifen zu können, ein wichtiges Handlungsfeld der Informatikdidaktik.  Informatische Themen wie künstliche Intelligenz haben dabei eine Relevanz weit über den Informatikunterricht hinaus entwickelt – eine Sichtweise, die sich auch in Anforderungsformulierungen für die Lehrerbildung wiederfindet. So fordern unter anderem eine vom BMBF einberufene Expertengruppe (van Ackeren et al., 2019) und die Forschungsgruppe Lehrerbildung Digitaler Campus Bayern (2017) informatische Fähigkeiten auf Seiten aller Lehrkräfte. Dazu gehören neben allgemeinen Grundlagen über Algorithmen oder Datenbanken auch “[m]edienbezogene fachliche Kenntnisse, zum Beispiel Wissen über Stellenwert und Funktionsweise von Rechensystemen bei der Simulation neuronaler Netzwerke in der Biologie” (Forschungsgruppe Lehrerbildung Digitaler Campus Bayern, 2017). In der Informatikdidaktik sind daher verschiedene Projekte entstanden, in denen Studienangebote für Lehrkräfte aller Fächer und Schularten entwickelt wurden. Einer dieser Ansätze ist die Ringvorlesung “Informatik im Alltag” der Universität Wuppertal (Losch & Humbert, 2019), die sich auf alltägliche Phänomene konzentriert, die aus Sicht der Informatik analysiert und beleuchtet werden, mit dem Ziel, Lehramtsstudierenden einen “fachlich ausgewiesenen Zugang zur Wissenschaft Informatik zu ermöglichen”. Einen anderen Weg wählt das Kursangebot digi4all4, in welchem informatische Bildung für Lehrkräfte in den größeren Kontext der digitalen Bildung eingebettet und mit der Aussicht kombiniert wird, die erworbenen Kompetenzen konkret für den Fachunterricht anwenden zu können (Albrecht et al., 2021). Evaluationsergebnisse zeigen, dass die Ausgestaltung solcher Studienangebote gelingen kann, wenn anschauliche Beispiele genutzt, Kommunikation und Kollaboration gefördert und insbesondere Bezüge und Anwendungsperspektiven für die jeweiligen Fächer berücksichtigt werden (Seegerer, Michaeli & Romeike, 2021). Auch in der Informatikdidaktik und im Informatikunterricht sorgt die digitale Transformation für Veränderungen. Obwohl etwa das Thema ‚Künstliche Intelligenz‘ schon seit über 60 Jahren Teil der Informatik als Disziplin ist, hat dessen Bedeutung erst in den letzten Jahren so stark zugenommen, dass es nun immer dringlicher an den Informatikunterricht herangetragen wird (Seegerer, Michaeli, Lindner & Romeike, 2020). Ähnlich verhält es sich mit den Themen Cybersecurity und Data Science als neue bzw. aufkommende Teilbereiche, die auch für Curricula relevant werden (Clear et al. 2020). Unter dem Begriff Internet of Things (IoT) wird Digitalisierung von Kleinstgeräten bspw. unter Nutzung von Sensoren für intelligente Haushaltsgeräte bezeichnet. Wie dieses Thema im Informatikunterricht aufgegriffen und für diesen fruchtbar gemacht werden kann, ist ein weiteres Thema für die Informatikdidaktik (Przybylla & Romeike, 2013). Durch die zunehmende Durchdringung der Gesellschaft mit digitalen Themen rücken außerdem immer mehr gesellschaftliche Auswirkungen und ethische  4 Das Studienangebot digi4all kann Online eingesehen werden unter https://digi4all.de/.  17   Fragestellungen in den Diskurs der Informatikdidaktik (Skirpan, Beard, Bhaduri, Fiesler & Yeh, 2018; Fiesler, Garrett & Beard, 2020). Zunächst ist hier festzustellen, dass in der informatikdidaktischen Forschung ein starker Konsens darüber besteht, dass sich der Unterricht auf Aspekte konzentrieren sollte, die für das Fach grundlegend und langfristig relevant sind. Kurzlebige technische Entwicklungen sollten hingegen eine geringere Rolle spielen. Aus diesem Grund wurden in den letzten 30 Jahren verschiedene Kataloge von Prinzipien, Ideen und Konzepten vorgeschlagen, die die Informatik oder einen ihrer Bereiche charakterisieren. Diese Kataloge können z. B. bei der Aufbereitung neuer Themen für den Unterricht, als Grundlage für die Entwicklung von Lehrplänen und für den Einblick in das Fachgebiet und seine zentralen Aspekte genutzt werden. Nach Denning (2004) erhöhen solche Charakterisierungen auch die Verständlichkeit, indem sie den Fokus von einer technologischen Perspektive auf die Prinzipien verlagern. Sie unterstützen auch das Erreichen eines "Gleichgewichts zwischen Konzepten und Praxis" (ebd.), indem sie die Praktiken des Fachgebiets hervorheben und helfen, einen breiteren Überblick zu bekommen. Grillenberger & Romeike (2017) haben ein methodisches Vorgehen zur Bestimmung der zentralen Ideen (Schlüsselkonzepte) eines fachdidaktisch unerschlossenen Informatik-Fachgebiets vorgeschlagen (vgl. Abb. 10), das unter Einbeziehung einschlägiger Fachcharakterisierungen und Lehrbücher auf empirischer Basis hilft, eine fachdidaktische Charakterisierung des Forschungsfeldes vorzunehmen.   Abb. 10: Vorgehen zur Bestimmung der Schlüsselkonzepte des Data Managements als Teilgebiet der Informatik. 5. ‚Personale fachliche Bildung mit und über digitale Medien fördern‘ Im GFD-Positionspapier (2018, S. 3) wird in diesem Kontext unter personaler fachlicher Bildung die “fachspezifische Reflexionsund Kritikfähigkeit über digitale Medien” verstanden. Im informatikdidaktischen Diskurs wird diese Perspektive zur fachlich fundierten und reflektierten Bewertung von Informatiksystemen insgesamt erweitert. Nicht selten wird dabei betont, dass ein Informatiksystem stets in ein sozio-technisches Handlungssystem eingebunden ist, sodass “bei der Entwicklung von Informatiksystemen zugleich auch die Ebene der Gestaltung von sozialen Handlungsund Kommunikationsprozessen mit zu berücksichtigen ist” (Magenheim, 2000). In der Diskussion um die allgemeinbildende Relevanz des Informatikunterrichts wurde wiederholt auf personale Bildung in Bezug auf die sieben Aufgaben allgemeinbildender Schulen von Bussmann und Heymann (1987) eingegangen. So argumentiert Witten (2003), dass informatische Bildung zu jeder dieser Aufgaben (bspw. Lebensvorbereitung, Weltorientierung, Anleitung zum kritischen  Terms relevant to Data Management Classification of Data Management Terms Definition of Classification Criteria Decision for a Model Framework Evaluation: Semi-Automatic Text Analysis Development of Category System and Clustering Definition of Selection Criteria Determining the Type of the Category System  Selection of Literature            Figure 1: Overview of the analysis process.       Model of Key Concepts of Data Management  Evaluation: Expert Interview Structuring the Subject Area 18   Vernunftgebrauch) einen signifikanten, nicht substituierbaren Beitrag leistet. Ebenso verdeutlichen die Bildungsstandards Informatik mit einem eigenen Inhaltsbereich “Informatik-Mensch-Gesellschaft”, dass Reflexion und Kritik immer auf Basis eines fundierten fachlichen Grundverständnisses erfolgen sollten (vgl. auch Abschnitt 2.2.1 in Bezug auf die KMK-Kompetenz “Analysieren und Reflektieren”). So kann bspw. ein Diskurs über “Wissen bzw. Bewusstsein, über Wert und Notwendigkeit der Privatheit von Daten und der Respekt vor der Unantastbarkeit der digitalen Identität anderer Menschen” nur dann fundiert erfolgen, wenn grundlegende Kenntnisse des Informatikfachgebiets „Informationssicherheit“ (bspw. Vertraulichkeit, Integrität, Verfügbarkeit oder Authentizität) hinsichtlich ihrer Realisierbarkeit und Auswirkungen bekannt sind. In der Dagstuhl-Erklärung (Brinda et al., 2016) findet sich personale Bildung in der gesellschaftlich-kulturellen Perspektive wieder: Zur Untersuchung der Wechselwirkungen der digital vernetzten Welt mit Individuen und der Gesellschaft verfolgt sie bspw. die Fragen: “Wie wirken digitale Medien auf Individuen und die Gesellschaft, wie kann man Informationen beurteilen, eigene Standpunkte entwickeln und Einfluss auf gesellschaftliche und technologische Entwicklungen nehmen?” Erneute Brisanz erhalten diese Fragen aktuell im Kontext der Begriffe Big Data, Künstliche Intelligenz und Quantencomputing, an denen deutlich wird, dass nichts sinnvoll kritisiert werden kann (bspw. die Delegation von Verantwortung an Maschinen), ohne die technologischen Grundlagen zu verstehen. 6.  Zukünftige Aufgaben der Informatikdidaktik in Forschung, Lehre und Weiterbildung Obgleich sich die Informatikdidaktik schon seit jeher der Bildung unter den Bedingungen der Digitalisierung widmet, entstehen bzw. zeigen sich auch für die Informatikdidaktik im Kontext der digitalen Transformation neue Aufgaben in Forschung, Lehre und Weiterbildung. In diesem Artikel ist an verschiedenen Beispielen aufgezeigt worden, warum es notwendig ist, Herausforderungen der Digitalisierung auf Basis der zugrundeliegenden Ideen und Prinzipien der Informatik zu begegnen, statt sie nur unter Anwendung neuer Technologien aufzugreifen. Digitalisierung wird immer wieder Phänomene, Situationen oder Artefakte hervorbringen, die aus Sicht der Informatikdidaktik hinsichtlich ihres Bildungsgehaltes oder ihrer zugrundeliegenden Ideen zu erschließen sind. Dabei ist es eben gerade nicht angezeigt, nur aktuellen Trends zu folgen, sondern stets die langfristige Perspektive einzunehmen und die zugrundeliegenden Ideen für die Schule nachvollziehbar zu machen. Darüber hinaus hat dieser Beitrag verdeutlicht, dass Informatik vermehrt auch im Grundschulkontext beforscht wird. Junge Menschen kommen immer früher mit Informatiksystemen in Berührung. Mehr als die Hälfte aller Familien in Deutschland nutzt beispielsweise Sprachassistenten (Presseportal, 2019). Vor diesem Hintergrund müssen die bisherigen Bestrebungen um Informatik in der Grundschule intensiviert werden und Konzepte für die Grundschule entwickelt und evaluiert werden, die dieser neuen Allgegenwärtigkeit digitaler Technologien Rechnung tragen. Damit einher geht die Notwendigkeit, Konzepte für die Vermittlung von Informatik auch abseits des Informatikunterrichts an weiterführenden Schulen zu entwickeln. Wie schon jetzt ein relevanter Teil informatikdidaktischer Arbeit in der Zugänglichkeit ihrer Werkzeuge liegt, ist die Informatikdidaktik damit konfrontiert, jene, mit der Digitalisierung aufkommende Themen, unabhängig von etwaigen Vorkenntnissen oder der Altersgruppe zugänglich zu machen. So werden Menschen jeden Alters, auch wenn diese die 19   Schule bereits verlassen haben, entsprechende Zugänge benötigen, um an der digitalen Welt teilhaben zu können. Das schließt insbesondere Angebote für die Aus-, Fortund Weiterbildung von Lehrkräften mit ein. Wie in diesem Artikel angesprochen, verändern sich alle Disziplinen der Schulfächer. Auch in Anforderungsformulierungen für die Lehramtsausbildung, etwa in einer von einer Expertengruppe des BMBFs (van Ackeren et al., 2019) oder der Forschungsgruppe Lehrerbildung Digitaler Campus Bayern (2017) veröffentlichten Stellungnahme, werden explizit informatische Fähigkeiten auf Seiten aller Lehrkräfte gefordert. Vor diesem Hintergrund ist es eine dringliche Aufgabe der Informatikdidaktik, die bestehenden Angebote in diesem Bereich zu erweitern und einem größeren Zielpublikum verfügbar zu machen.   20   Literatur Albrecht, C., Seegerer, S., Frederking, V., Koubek, J. & Romeike, R. (2021): Digitale Kompetenzen im Fach überfachlich fördern – Ein Blended Learning-Kurs für das Unterrichten in der digitalen Welt. In: GFD Tagungsband 2020: Fachliche Bildung und digitale Transformation Fachdidaktische Forschung und Diskurse, Universität Regensburg, S. 28-31. Anzoátegui, L. G. C., Pereira, M. I. A. R. & Jarrín, M. D. C. S. (2017, November). Cubetto for preschoolers: Computer programming code to code. In 2017 International Symposium on Computers in Education (SIIE) (pp. 1-5). IEEE. Ball, M., Mönig, J., Romagosa, B. & Harvey, B. (2019, February). Snap! A Look at 5 Years, 250,000 Users and 2 Million Projects. In Proceedings of the 50th ACM Technical Symposium on Computer Science Education (pp. 1279-1279). Barnes, D. J., Kölling, M. & Gosling, J. (2006). Objects First with Java: A practical introduction using BlueJ. Pearson/Prentice Hall. Battistella, P. & von Wangenheim, C. G. (2016). Games for teaching computing in higher ed-ucation–a systematic review. IEEE Technology and Engineering Education, 9(1), 8-30. Bell, T., Lambert, L. & Marghitu, D. (2012, February). CS unplugged, outreach and CS kines-thetic activities. In Proceedings of the 43rd ACM technical symposium on Computer Science Education (pp. 676-676). Bell, T., Witten, I.and Fellows, M. (2015). CS Unplugged: An enrichment and extension pro-gramme for primary-aged students. Benton, L., Hoyles, C., Kalas, I., & Noss, R. (2016). Building mathematical knowledge with programming: insights from the ScratchMaths project. Suksapattana Foundation. Brichzin, P., Kastl, P. & Romeike, R. (2019). Agile Schule – Methoden für den Projektunterricht in der Informatik und darüber hinaus. Bern, Schweiz: hep Verlag.  Bergner, N., Hubwieser, P., Köster, H., Magenheim, J., Müller, K., ... & Schulte, C. (2018). Frühe informatische Bildung–Ziele und Gelingensbedingungen für den Elementarund Primarbereich. Wissenschaftliche Untersuchungen zur Arbeit der Stiftung „Haus der kleinen Forscher, 9. Berry, M. (2018). »Computing« als neues Schulfach. Umsetzung des landesweiten Curriculums für das Fach Computing in England. LOG IN, Thema 38/189/190, hrsg. von Humbert, L.; Koerber, B., S. 20–26, ISSN : 0720-8642. Breier, Norbert (1994): Informatische Bildung als Teil der Allgemeinbildung. In: LOG IN, 14 Jg., H. 5/6, 90–93. Brinda, T. et al. (2016). Bildung in der digitalen vernetzten Welt – Dagstuhl-Erklärung. Online abrufbar unter https://www.gi.de/aktuelles/meldungen/detailansicht/ article/dagstuhl-erklaerung-bildung-in-der-digitalen-vernetzten-welt.html. Bonn. 21   Brinda, T. (2016): Stellungnahme der Gesellschaft für Informatik zum KMKStrategiepapier „Bildung in der digitalen Welt". Online: https://fb-iad.gi.de/fileadmin/stellungnahmen/gi-fbiad-stellungnahme-kmk-strategie-digitalebildung.pdf  Burke, W. Q. (2012). Coding & composition: Youth storytelling with Scratch programming. University of Pennsylvania. Bussmann, H.; Heymann, H. W.: Computer und Allgemeinbildung. In: Neue Sammlung I (1987), S. 2-39. Caspersen, M. E., Gal-Ezer, J., McGettrick, A. & Nardelli, E. (2018). Informatics for All The strategy. Clear, A., Parrish, A. S., Impagliazzo, J. & Zhang, M. (2019, February). Computing Curricula 2020: introduction and community engagement. In Proceedings of the 50th ACM Technical Symposium on Computer Science Education (pp. 653-654). Cortina, T. J. (2015). Reaching a broader population of students through" unplugged" activi-ties. Communications of the ACM, 58(3), 25-27. Csizmadia, A., Curzon, P., Dorling, M., Humphreys, S., Ng, T., Selby, C. & Woollard, J. (2015). Computational thinking-A guide for teachers. Online: https://eprints.soton.ac.uk/424545/1/150818_Computational_Thinking_1_.pdf  Denning, P. J. (2004). Great principles in computing curricula. In Proceedings of the 35th SIGCSE technical symposium on Computer science education (pp. 336-341). Diethelm, I. (2007). Strictly models and objects first–Unterrichtskonzept für objektorientierte Modellierung. Didaktik der Informatik in Theorie und Praxis–INFOS 2007–12. GI-Fachtagung Informatik und Schule. Diethelm, I. & Glücks, S. (2019). Analyse von Curricula auf Abdeckung der Kompetenzen zur Bildung in der digitalen Welt. Informatik für alle. Dorn, J. (2019). InstaHub Datenbanken und Datenschutz mit einem extra für den Unterricht entwickelten sozialen Netzwerk unterrichten. Informatik für alle. Feaster, Y., Segars, L., Wahba, S. K. & Hallstrom, J. O. (2011, June). Teaching CS unplugged in the high school (with limited success). In Proceedings of the 16th annual joint conference on Innovation and technology in computer science education (pp. 248-252). Fiesler, C., Garrett, N. & Beard, N. (2020, February). What do We teach when We teach tech ethics? A syllabi analysis. In Proceedings of the 51st ACM Technical Symposium on Computer Science Education (pp. 289-295). Forschungsgruppe Lehrerbildung Digitaler Campus Bayern (2017). Kernkompetenzen von Lehrkräften für das Unterrichten in einer digitalisierten Welt. merz. Zeitschrift für Medienpadagogik, 61, 65-74. Freischlad, S. (2010). Entwicklung und Erprobung des didaktischen Systems Internetworking im Informatikunterricht (Vol. 3). Universitätsverlag Potsdam. 22   Garneli, V., Giannakos, M. N. & Chorianopoulos, K. (2015, March). Computing education in K-12 schools: A review of the literature. In 2015 IEEE Global Engineering Education Confer-ence (EDUCON) (pp. 543-551). IEEE. Gander, W., Petit, A., Berry, G., Demo, B., Vahrenhold, J., McGettrick, A., Boyle, R., Drechsler, M., Mendelson, A., Stephenson, C., Ghezzi, C. & Meyer, B. (2013). Informatics Education: Europe Cannot Afford to Miss the Boat. https://europe.acm.org/iereport/ACMandIEreport.pdf. (2013). GFD (2019). Fachliche Bildung in der digitalen Welt. Göttel, T. (2011). Agiler Informatikunterricht: Soziale Aspekte der professionellen Softwareentwicklung im Schulunterricht erfolgreich erfahrbar machen. Informatik in Bildung und Beruf–INFOS 2011–14. GI-Fachtagung Informatik und Schule. Grillenberger, A. & Romeike, R. (2015). Schlüsselkompetenzen im Umgang mit Daten: Ein Thema für den Informatikunterricht. Grillenberger, A. & Romeike, R. (2017). Key concepts of data management: an empirical ap-proach. In Proceedings of the 17th Koli Calling International Conference on Computing Edu-cation Research (pp. 30-39). Grillenberger, Andreas & Romeike, Ralf (2018). What Teachers and Students Know about Data Management, In Tomorrow's learning: Involving Everyone. Learning with and about Technologies and Computing the 11th IFIP TC 3 World Conference on Computers in Edu-cation, WCCE 2017, Dublin, Ireland, July 3-6, 2017, Revised Selected Papers (Tatnall, Arthur, Webb, Mary, eds.), Springer International Publishing, volume 515, 2018. Hanks, B., Fitzgerald, S., McCauley, R., Murphy, L. & Zander, C. (2011). Pair programming in education: A literature review. Computer Science Education, 21(2), 135-173. Hartmann, W., Näf, M. & Reichert, R. (2007). Informatikunterricht planen und durchführen. Springer-Verlag. Hielscher, M. (2012). Autorenwerkzeuge für digitale, multimediale und interaktive Lernbausteine im Web 2.0 (Doctoral dissertation, Johannes Gutenberg University Mainz). Hermans, F. & Aivaloglou, E. (2017, November). To scratch or not to scratch? A controlled experiment comparing plugged first and unplugged first programming lessons. In Proceedings of the 12th workshop on primary and secondary computing education (pp. 49-56). Hubwieser, P. (2007). Didaktik der Informatik: Grundlagen, Konzepte, Beispiele. Springer-Verlag. Hubwieser, P. & Broy, M. (1996). Der informationszentrierte Ansatz Ein Vorschlag für eine zeitgemäße Form des Informatikunterrichtes am Gymnasium. Online: https://mediatum.ub.tum.de/1094662  Hubwieser, P., Giannakos, M. N., Berges, M., Brinda, T., Diethelm, I., Magenheim, J., ... & Jasute, E. (2015). A global snapshot of computer science education in K-12 schools. In Pro-ceedings of the 2015 ITiCSE on working group reports (pp. 65-83). 23   Humbert, L. (2010). Informatik, einfach ein Fach!?. 25 Jahre Schulinformatik, 125. Humbert, L., Herper, H., Best, A., Borowski, C., Freudenberg, R., Fricke, M., ... & Thomas, M. (2019). Empfehlungen der GI–Kompetenzen für informatische Bildung im Primarbereich. In-formatik für alle. Isohanni, E. & Järvinen, H. M. (2014, November). Are visualization tools used in programming education? by whom, how, why, and why not?. In Proceedings of the 14th koli calling interna-tional conference on computing education research (pp. 35-40). Kelleher, C. & Pausch, R. (2005). Lowering the barriers to programming: A taxonomy of pro-gramming environments and languages for novice programmers. ACM Computing Surveys (CSUR), 37(2), 83-137. Keuning, H., Jeuring, J. & Heeren, B. (2016, July). Towards a systematic review of automated feedback generation for programming exercises. In Proceedings of the 2016 ACM Conference on Innovation and Technology in Computer Science Education (pp. 41-46). Losch, D. & Ludger Humbert, L. (2019). Informatische Bildung für alle Lehramtsstudierenden. Informatik für alle. Lopez, V. & Hernandez, M. I. (2015). Scratch as a computational modelling tool for teaching physics. Physics Education, 50(3), 310. Lambert, L. and Guiﬀre, H. (2009). Computer science outreach in an elementary school. Jour-nal of Computing Sciences in colleges,24(3):118–124. Lehrplan Bayern, Natur und Technik 6. Klasse https://www.lehrplanplus.bayern.de/fachlehr-plan/gymnasium/6/nt_gym Lindner, A. & Romeike, R. (2019). Teachers’ Perspectives on Artificial Intelligence. In Eglė Jasutė and Sergei Pozdniakov (Eds.), ISSEP 2019 12th International conference on infor-matics in schools: Situation, evaluation and perspectives, Local Proceedings (pp. 22 29). Larnaca, CY. Magenheim, J. & Romeike R. (2020). Informatikdidaktik. In: Rothgangel, M., Abraham, U., Bayrhuber, H., Frederking, V., Jank, W. & Vollmer, H. J. (Eds.). Lernen im Fach und über das Fach hinaus: Bestandsaufnahmen und Forschungsperspektiven aus 17 Fachdidaktiken im Vergleich. Allgemeine Fachdidaktik, Band 2 (Vol. 13). Waxmann Verlag, 182–207.  McDowell, C., Hanks, B. & Werner, L. (2003). Experimenting with pair programming in the classroom. In Proceedings of the 8th annual conference on Innovation and technology in com-puter science education (pp. 60-64). Michaeli, T. & Romeike, R. (2019). Improving Debugging Skills in the Classroom – The Effects of Teaching a Systematic Debugging Process. In Proceedings of the 14th Workshop on Pri-mary and Secondary Computing Education (pp. 57-63). Glasgow, UK, GB: New York, NY, USA: ACM. Magenheim, J. (2000). Informatiksystem und Dekonstruktion als didaktische Kategorien Theoretische Aspekte und unterrichtspraktische Implikationen einer systemorientierten Didaktik. Online: http://ddi.uni-paderborn.de/didaktik/Veroeffentlichungen 24   Malmi, L., Utting, I. & Ko, A. (2019). "Tools and environments." In: Cambridge Handbook for Computing Education Research (pp. 639-662). Michaeli, T., Seegerer, S. & Romeike, R. (2018). Enabling Collaboration and Tinkering: A Ver-sion Control System for Block-based Languages. In Valentina Dagienė Eglė Jasutė (Eds.), Constructionism 2018: Constructionism, Computational Thinking and Educational Innovation: conference proceedings (pp. 395-403). Vilnius, LT. Nishida, T., Kanemune, S., Idosaka, Y., Namiki, M., Bell, T. & Kuno, Y. (2009). A CS unplug-ged design pattern. ACM SIGCSE Bulletin, 41(1), 231-235. Nishida, T., Idosaka, Y., Hofuku, Y., Kanemune, S. & Kuno, Y. (2008). New methodology of information education with “computer science unplugged”. In Proceedings of the 3rd Interna-tional Conference on Informatics in Schools: Situation, Evolution, and Perspectives (ISSEP 2008), Lecture Notes in Computer Science 5090 (pp. 241–252). Berlin, Germany: Springer. Przybylla, M. & Romeike, R. (2013). Physical Computing im Informatikunterricht. INFOS 2013: Informatik erweitert Horizonte-15. GI-Fachtagung Informatik und Schule. Przybylla, M. & Romeike, R. (2012). My Interactive Garden–A Constructionist Approach to Creative Learning with Interactive Installations in Computing Education. Constructionism: The-ory, Practice and Impact. Proceedings of Constructionism, 2012, 395-404. Peyton Jones, S. (2014). Teaching creative computer science: Simon Peyton Jones at TEDxExeter [Video]. YouTube. https://www.youtube.com/watch?v=Ia55clAtdMs  Presseportal (2019). Postbank Digitalstudie 2019: Ein Drittel der Deutschen spricht mit Alexa, Siri und Co. Online: https://www.presseportal.de/pm/6586/4295010 [14.05.2021]. Resnick, M., Maloney, J., Monroy-Hernández, A., Rusk, N., Eastmond, E., Brennan, K., ... & Kafai, Y. (2009). Scratch: programming for all. Communications of the ACM, 52(11), 60-67. Ridsdale, C., Rothwell, J., Smit, M., Ali-Hassan, H., Bliemel, M., Irvine, D., ... & Wuetherick, B. (2015). Strategies and best practices for data literacy education: Knowledge synthesis re-port. Riedel, M., Streit, A., Wolf, F., Lippert, T. & Kranzlmüller, D. (2008, December). Classification of different approaches for e-science applications in next generation computing infrastruc-tures. In 2008 IEEE Fourth International Conference on eScience (pp. 198-205). IEEE. Röhner, G., Brinda, T., Denke, V., Hellmig, L., Heußer, T., Pasternak, A., ... & Seiffert, M. (2016). Bildungsstandards Informatik für die Sekundarstufe II. Beilage zu LOG IN, (183/184), 88. Romeike, R. (2017). Wie informatische Bildung hilft, die digitale Gesellschaft zu verstehen und mitzugestalten. Software takes command. Herausforderungen der „Datafizierung" für die Medienpädagogik in Theorie und Praxis, München: kopaed, 105-118. Romeike, R. & Göttel, T. (2012, November). Agile projects in high school computing education: emphasizing a learners' perspective. In Proceedings of the 7th Workshop in Primary and Sec-ondary Computing Education (pp. 48-57). 25   Scherer, R., Siddiq, F. & Sánchez Viveros, B. (2018). The cognitive benefits of learning com-puter programming: A meta-analysis of transfer effects. Journal of Educational Psychology. Schmid, U., Weitz, K. & Gärtig-Daugs, A. (2018). Informatik in der Grundschule. Informatik-Spektrum, 41(3), 200-207. Schubert, Sigrid, and Andreas Schwill. "Didaktik der Informatik." Didaktik der Informatik. Spektrum Akademischer Verlag, Heidelberg, 2011. 1-30. Schulte, Carsten. "Reflections on the role of programming in primary and secondary computing education." Proceedings of the 8th Workshop in Primary and Secondary Compu-ting Education. 2013. Schwill, A. (1993). Fundamentale Ideen der informatik. Zentralblatt für Didaktik der Mathematik, 25(1), 20-31. Sheard, J., Simon, S., Hamilton, M. & Lönnberg, J. (2009, August). Analysis of research into the teaching and learning of programming. In Proceedings of the fifth international workshop on Computing education research workshop (pp. 93-104). Singh, R., Gulwani, S. & Solar-Lezama, A. (2013, June). Automated feedback generation for introductory programming assignments. In Proceedings of the 34th ACM SIGPLAN confer-ence on Programming language design and implementation (pp. 15-26). Skirpan, M., Beard, N., Bhaduri, S., Fiesler, C. & Yeh, T. (2018, February). Ethics education in context: A case study of novel ethics activities for the CS classroom. In Proceedings of the 49th ACM Technical Symposium on Computer Science Education (pp. 940-945). Seegerer, Stefan, Michaeli, Tilman und Romeike, Ralf (2021). „Informatische Grundlagen in der allgemeinen Lehrkräftebildung – Erkenntnisse und Erfahrungen aus einem online-gestützten Studienangebot“. In: Informatik – Bildung von Lehrkräften in allen Phasen, Proceedings der 19. GI-Fachtagung Informatik und Schule, INFOS 2021, 8.-10. September 2021, Wuppertal. Seegerer, S., Michaeli, T. & Romeike, R. (2019). Informatik für alle – Eine Analyse von Argumenten und Argumentationsschemata für das Schulfach Informatik. In Proceedings of Informatik 2019. Kassel: Bonn: Gesellschaft für Informatik e.V. (GI). Michaeli, Tilman, Stefan Seegerer, and Ralf Romeike. "Enabling collaboration and tinkering: a version control system for block-based languages." (2018): 395-403. Seegerer, S., Michaeli, T., Lindner, A., Romeike, R. & Koerber, B. (2020). EDITORIAL: Jetzt ist KI-Sommer! LOG IN Informatische Bildung und Computer in der Schule, 193-194, 3. Seegerer, S., Lindner, A. & Romeike, R. (2019). AI Unplugged–Wir ziehen Künstlicher Intelligenz den Stecker. Informatik für alle. Seegerer, S. & Romeike, R. (2019). Employing Computational Thinking in General Teacher Education. CoolThink@ JC, 86. Stefik, M. & Bobrow, D. G. (1985). Object-oriented programming: Themes and variations. AI magazine, 6(4), 40-40. 26   Tarca, A. L., Carey, V. J., Chen, X. W., Romero, R. & Drăghici, S. (2007). Machine learning and its applications to biology. PLoS computational biology, 3(6). Thies, R. & Vahrenhold, J. (2013). On plugging" unplugged" into CS classes. In Proceeding of the 44th ACM technical symposium on Computer science education (pp. 365-370). van Ackeren, I., Aufenanger, S., Eickelmann, B., Friedrich, S., Kammerl, R., Knopf, J., ... & Schiefner-Rohs, M. (2019). Digitalisierung in der Lehrerbildung: Herausforderungen, Entwicklungsfelder und Förderung von Gesamtkonzepten. Die Deutsche Schule, 111(1), 103-119. Van Merrienboer, Jeroen JG, and Hein PM Krammer. "Instructional strategies and tactics for the design of introductory computer programming courses in high school." Instructional Science 16.3 (1987): 251-285. Voss, S. (2006). Modellierung von Standardsoftwaresystemen aus didaktischer Sicht. München: TU München (Dissertation)) Waite, J. L., Curzon, P., Marsh, W., Sentance, S. & Hadwen-Bennett, A. (2018). Abstraction in action: K-5 teachers' uses of levels of abstraction, particularly the design level, in teaching programming. Online Submission, 2(4), 14-40. Wing, J. M. (2006). Computational thinking. Communications of the ACM, 49(3), 33-35. Wing, J. M. (2008). Computational thinking and thinking about computing. Philosophical Transactions of the Royal Society A: Mathematical, Physical and Engineering Sciences, 366(1881), 3717-3725. Wirth, N. (1974, August). On the Design of Programming Languages. In IFIP Congress (Vol. 74, pp. 386-393). Witten, Helmut. "Allgemeinbildender Informatikunterricht? Ein neuer Blick auf HW Heymanns Aufgaben allgemeinbildender Schulen." Informatische Fachkonzepte im Unterricht, INFOS 2003, 10. GI-Fachtagung Informatik und Schule (2003). Xie, L., Antle, A. N. & Motamedi, N. (2008, February). Are tangibles more fun? Comparing children's enjoyment and engagement using physical, graphical and tangible user interfaces. In Proceedings of the 2nd international conference on Tangible and embedded interaction (pp. 191-198). 