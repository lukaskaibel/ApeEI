Proceedings “Informatische Bildung zum Verstehen und Gestalten der digitalen Welt – INFOS 2017”  ist die 17. Konferenz der Reihe Informatik und Schule, die ihren Fokus auf das breite Spektrum der informatischen Bildung allgemein und der Informatik als Schulfach im Speziellen legt. Dieser Band steht im Kontext der bundesweiten Dis -kussionen zur Bildung  in der digitalen Welt und zeichnet sich daher durch eine große Spannweite aus – sowohl in der Gruppe der Lerner beginnend mit dem Kindergarten als auch in den behandelten Themengebieten. Der Tradition folgend legt auch diese viel Wert drauf , sowohl Theroie und Forschung als auch Praxisbei-trägen angemessenen Raum zu geben.ISSN 1617 -5468ISBN 978 -3-88579 -668-8Gesellschaft für Informatik e.V . (GI)publishes this series in order to make available to a broad public recent ﬁndings in informatics (i.e. computer science and informa -tion systems), to document conferences that are organized in co -operation with GI and to publish the annual GI Award dissertation.Broken down into• seminars• proceedings• dissertations• thematicscurrent topics are dealt with from the vantage point of research and development, teaching and further training in theory and practice.The Editorial Committee uses an intensive review process in order to ensure high quality contributions.The volumes are published in German or English.Information: http://www.gi.de/service/publikationen/lni/274I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen  und Gestalten der digitalen Welt – INFOS 2017GI-EditionLecture Notes  in InformaticsIra Diethelm (Hrsg.)Informatische Bildung zum  Verstehen und Gestalten  der digitalen Welt17. GI-Fachtagung Informatik und Schule13.–15. September 2017  Oldenburgii“proceedings” — 2017/9/17 — 20:19 — page I — #1iiiiii                                   ii“proceedings” — 2017/9/17 — 20:19 — page II — #2iiiiii  ii“proceedings” — 2017/9/17 — 20:19 — page III — #3iiiiii       Ira Diethelm (Hrsg.)   Informatische Bildung zum Verstehen und Gestalten der digitalen Welt  17. GI-Fachtagung Informatik und Schule      13.–15. September 2017 Oldenburg           Gesellschaft für Informatik e.V. (GI) ii“proceedings” — 2017/9/17 — 20:19 — page IV — #4iiiiiiLecture Notes in Informatics (LNI) - Proceedings Series of the Gesellschaft für Informatik (GI)   Volume P-274  ISBN 978-3-88579-668-8 ISSN 1617-5468  Volume Editor Prof. Dr. Ira Diethelm  Carl von Ossietzky Universität Oldenburg   Fakultät II – Didaktik der Informatik  26111 Oldenburg, Deutschland  ira.diethelm@uni-oldenburg.de  Series Editorial Board Heinrich C. Mayr, Alpen-Adria-Universität Klagenfurt, Austria  (Chairman, mayr@ifit.uni-klu.ac.at) Dieter Fellner, Technische Universität Darmstadt, Germany Ulrich Flegel, Infineon, Germany Ulrich Frank, Universität Duisburg-Essen, Germany Andreas Thor, HFT Leipzig, Germany Michael Goedicke, Universität Duisburg-Essen, Germany Ralf Hofestädt, Universität Bielefeld, Germany Michael Koch, Universität der Bundeswehr München, Germany Axel Lehmann, Universität der Bundeswehr München, Germany Thomas Roth-Berghofer, University of West London, Great Britain Peter Sanders, Karlsruher Institut für Technologie (KIT), Germany Torsten Brinda, Universität Duisburg-Essen, Germany Ingo Timm, Universität Trier, Germany Karin Vosseberg, Hochschule Bremerhaven, Germany Maria Wimmer, Universität Koblenz-Landau, Germany  Dissertations Steffen Hölldobler, Technische Universität Dresden, Germany Thematics Andreas Oberweis, Karlsruher Institut für Technologie (KIT), Germany  © Gesellschaft für Informatik, Bonn 2017 printed by Köllen Druck+Verlag GmbH, Bonn    This book is licensed under a Creative Commons Attribution-NonCommercial 3.0 License. ii“proceedings” — 2017/9/17 — 20:19 — page V — #5iiiiiiVorwort  Digitalisierung durchdringt immer mehr Lebensbereiche, daher muss die Bildung darauf reagieren … „Oh nein, nicht schon wieder!“, denken Sie vielleicht an dieser Stelle, und mir geht es ähnlich. Der Grund dafür ist aber erfreulich: Es verging in den letzten zwei Jahren kaum eine Woche, in der nicht eine politisch motivierte Tagung oder ein Feuilleton-Artikel sich dieses Themas in Bezug auf Bildung annahm. Sogar in Talkshows wurde das Thema schon hitzig und lautstark diskutiert. Immer mehr Personen aus den unterschiedlichsten Bereichen befassen sich jetzt neu mit den Themen Digitalisierung und Bildung bzw. Informatik und Schule.  Wir, die Aktiven der Fachdidaktik Informatik, die diese Tagung gestalten und ausrichten, durchlaufen daher gerade die Diskussionen der letzten 30 Jahre erneut und aufgrund des Fortschritts in den Kommunikationstechnologien auch viel schneller, intensiver und öffentlicher. Schon im „Gesamtkonzept für die informationstechnische Bildung“ der Bund-Länder-Kommission von 1987 findet sich die Eingangserkenntnis: „Neue Informations- und Kommunikationstechniken haben sich in den letzten Jahren zu Schlüsseltechniken entwickelt, die in fast alle Bereiche […] Einzug gehalten haben; sie haben auch im Bildungswesen und in unserer täglichen Umwelt Fuß gefaßt.“  Schon damals fragte man sich, welche Bildung für diese Veränderungen nötig ist, ob es ein Schulfach Informatik geben sollte, wie dieses oder ein Minimalprogramm „24 Lektionen Informatik“ aufgebaut sein sollten, was allgemeinbildend an der Informatik ist, wie das Verhältnis zum Einsatz von Computern als Werkzeug und Unterrichtsmedium ist, welchen Beitrag Informatik zur Medienkompetenz leistet, ab wann man mit Kindern Informatik machen kann und ob und ab wann Programmieren Pflicht sein sollte usw.  Seit 1976 gibt die Gesellschaft für Informatik e.V. in Form von Empfehlungen und Erklärungen Antworten auf diese Fragen, seit 1984 auch in den INFOS-Bänden. Dort findet man viele noch immer aktuelle Antworten. Zusammen bilden sie eine Art FAQ zur Informatik in der Schule. Jedem Einsteiger in das Thema seien diese Werke wärmstens empfohlen.  Schon im ersten INFOS-Band stand: „Die Kultusminister haben mehr oder weniger anspruchsvolle Programme zur Integration der Informatik und zur Rechnerausstattung der Schulen angekündigt.“ Auch inhaltlich sind die Überlegungen von damals der jüngsten Strategie der Kultusministerkonferenz zur Bildung in der digitalen Welt nicht unähnlich. Die Politik scheint sich zu wiederholen. Damals wie heute war klar: Es reicht nicht Computer in die Schulen zu stellen. Die Geschichte und auch die Lehrerbildungsforschung hat gezeigt, dass es auch nicht reicht, Unterrichtsmaterialien zu drucken und an die Schulen zu schicken, in der Hoffnung, dass die Lehrkräfte oder gar Schüler sich das schon irgendwie selbst aneignen, den Sinn verstehen und flächendeckend umsetzen.  Aber was reicht denn dann für die sogenannte „Digitale Bildung“, also die Bildung für die und in einer von der Digitalisierung geprägten Welt? Was tun? In den eingeladenen Vorträgen nehmen sich Jens Gallenbacher, Hilbert Meyer, Thomas Knaus und Stephan Noller dieser Frage aus verschiedenen Perspektiven an, kommen aber alle am selben Punkt ii“proceedings” — 2017/9/17 — 20:19 — page VI — #6iiiiiizusammen: Eine flächendeckende informatische Bildung ist zum Verstehen und Gestalten der digitalen Welt unerlässlich. Auch Hilbert Meyer, der sich hier erstmals mit dem Thema auseinandersetzt, spricht sich für ein Schulfach Informatik in den Sekundarstufen aus und Thomas Knaus betont, dass Medienbildung nicht genug sei und informatische Bildung zur Medienkompetenz dazugehöre.  Diese Erkenntnis ist für die meisten regelmäßigen INFOS-Teilnehmer nicht neu. Neu ist, dass sie sich auch außerhalb dieses Kreises weiter ausbreitet. Immer mehr Länder und Bundesländer führen das Schulfach Informatik (ab Sommer 2017 zuletzt Baden-Württemberg und Finnland), „Computing“ (England), den Lehrplan 21 „Informatik und Medien“ (Schweiz) oder etwas Vergleichbares verpflichtend ein oder haben so etwas schon seit fast 30 Jahren (Polen). Wie vielseitig das Thema jenseits der politischen Dimension ist, zeigen die Beiträge der weiteren Autoren, an deren Anzahl man ebenfalls die Breite der Diskussion ablesen kann. Es wurden 98 Beiträge eingereicht, darunter auch viele, die sich mit der Informatik in der frühen Bildung beschäftigen. In der Regel wurde jeder Beitrag von 3 Reviewern anonym mithilfe von Easychair begutachtet. Das Programmkomitee hat 47 Beiträge, teilweise mit Änderungen, akzeptiert. Darunter sind 13 wissenschaftliche Langbeiträge, 6 wissenschaftliche Kurzbeiträge, 13 Praxisbeiträge und 9 Workshops sowie 6 Poster. Daraus resultiert eine Annahmequote von 48%. Der Band enthält darüber hinaus vier eingeladene Keynotes, von denen zwei als Langfassungen und zwei mit Abstracts enthalten sind. Außerdem wurden einige in ihrer eingereichten Fassung abgelehnte Beiträge in stark gekürzter Form als Poster eingeladen. Alle Posterabstracts sind am Ende des Bandes alphabetisch nach Autoren gereiht. Die Reihung der Keynotes, Vorträge und Workshops folgt dem Tagungsprogramm. Die „Informatik und Schule“ ist die größte deutschsprachige Konferenz zur Informatik in der Schule. So stammt die überwiegende Mehrheit der AutorInnen aus Deutschland. Aber der Band enthält auch Beiträge von Autoren aus Dänemark und der Schweiz.  Zur Durchführung der Tagung sind viele Hände und viele Unterstützer nötig. Ich möchte mich daher allen voran bei meinen Mitarbeitern der Abteilung Didaktik der Informatik ganz herzlich bedanken. Mein Dank gilt auch der Universität Oldenburg mit der Universitätsgesellschaft (UGO), dem An-Institut OFFIS und der Gesellschaft der Freunde und Förderer des OFFIS e.V. (GdFF) für die tatkräftige und finanzielle Unterstützung der Tagung. Ebenso danke ich dem Programmkomitee für die Mitarbeit bei dem Auswahlverfahren und insbesondere Torsten Otto und Arno Pasternak für die Begleitung des ganzen Prozesses. Darüber hinaus geht mein Dank an das Niedersächsische Landesinstitut für schulische Qualitätsentwicklung (NLQ) und die Fachgruppe GI-ibnb und natürlich an die vielen Autoren, ohne die diese Tagung gar nicht stattfinden würde.  Oldenburg, im August 2017 Ira Diethelm   ii“proceedings” — 2017/9/17 — 20:19 — page VII — #7iiiiiiTagungsleitung  Gesamtleitung: Ira Diethelm, Universität Oldenburg	Leitung des Programmkomitees:  Ira Diethelm, Universität Oldenburg   Torsten Otto, GI-Fachgruppe SH-HILL   Arno Pasternak, TU Dortmund DoktorandInnensymposium: Nils Pancratz, Universität Oldenburg   Jörn Syrbe, Universität Oldenburg   Programmkomitee  Nadine Bergner    RWTH Aachen Torsten Brinda    Universität Duisburg-Essen Michael Brinkmeier   Universität Osnabrück Ulrike Buchholz    Gymnasium Oedeme Lüneburg Katrin Büttner    Mittelschule Heidenau (stellv. Sprecherin FA-IBS) Ira Diethelm    Carl von Ossietzky Universität Oldenburg Leonore Dietrich   Universität Heidelberg Beat Döbeli Honegger   Pädagogische Hochschule Schwyz Jens Gallenbacher   TU Darmstadt Lutz Hellmig    Universität Rostock (Sprecher FA-IBS) Tino Hempel    Richard-Wossidlo-Gymnasium Henry Herper    Universität Magdeburg Alexander Hug    Universität Koblenz-Landau Ludger Humbert    Universität Wuppertal Lennard Kerber    GI-Fachgruppe IBBB Bernhard Koerber   LOG IN Verlag GmbH Peter Micheuz    Alpen-Adria-Universität Klagenfurt Simone Opel    Berufskolleg der Stadt Bottrop Torsten Otto    GI-Fachgruppe SH-HILL Arno Pasternak    TU Dortmund Wolfgang Pohl    BWINF / Bundesweite Informatikwettbewerbe Juergen Poloczek   Studienseminar Oberursel Mareen Przybylla   Universität Potsdam Ralf Romeike    Friedrich-Alexander-Universität Erlangen-Nürnberg Gerhard Röhner    Studienseminar für Gymnasien Darmstadt Carsten Schulte    Universität Paderborn Andreas Schwill    Universität Potsdam Kerstin Strecker    Universität Göttingen Michael Weigend   WWU Münster    ii“proceedings” — 2017/9/17 — 20:19 — page VIII — #8iiiiiiOrganisationsteam  Christos Chytas Carl von Ossietzky Universität Oldenburg Mareike Daeglau Carl von Ossietzky Universität Oldenburg Wibke Duwe Carl von Ossietzky Universität Oldenburg Anatolij Fandrich OFFIS e.V. Claudia Hildebrandt  Carl von Ossietzky Universität Oldenburg  Nils Pancratz  Carl von Ossietzky Universität Oldenburg Tobias Stuckenberg Carl von Ossietzky Universität Oldenburg Jörn Syrbe  Carl von Ossietzky Universität Oldenburg Manuela Wüstefeld Carl von Ossietzky Universität Oldenburg  Lektorat   Nina Schneider  Carl von Ossietzky Universität Oldenburg  Proceedings-Support  Anatolij Fandrich OFFIS e.V. Nils Pancratz  Carl von Ossietzky Universität Oldenburg Jörn Syrbe  Carl von Ossietzky Universität Oldenburg                          ii“proceedings” — 2017/9/17 — 20:19 — page IX — #9iiiiii                           ii“proceedings” — 2017/9/17 — 20:19 — page X — #10iiiiiiii“proceedings” — 2017/9/17 — 20:19 — page XI — #11iiiiiiInhaltsverzeichnisEingeladene VorträgeJens GallenbacherAllgemeinbildung in der digitalen, gestalteten Lebenswelt . 19Hilbert MeyerUnterrichtsqualität in der digitalen Welt . 29Thomas KnausVerstehen – Vernetzen – Verantworten – Warum Medienbildung und infor-matische Bildung uns alle angehen und wir sie gemeinsam weiterentwickelnsollten .. 31Stephan NollerCalliope mini – Informatik zum Anfassen für GrundschülerInnen . 49VorträgeNadine Bergner, Hilde Köster, Johannes Magenheim, Kathrin Müller,Ralf Romeike, Ulrik Schroeder, Carsten SchulteZieldimensionen für frühe informatische Bildung im Kindergarten und inder Grundschule . 53Nadine Bergner, Sandra-Jasmin Petrut, Ulrik SchroederWas Grundschulkinder über Informatik wissen und was sie wissen wollen 63Katharina Wendlandt, Matthias Wendlandt, Sabrina Ho  mannAlgorithmisieren im Grundschulalter ... 73Alexander BestBild der Informatik von Grundschullehrpersonen. Erste Ergebnisse ausqualitativen Einzelfallstudien ... 83ii“proceedings” — 2017/9/17 — 20:19 — page XII — #12iiiiiiAndreas Dengel, Ute HeuerAufbau des Internets: Vorstellungsbilder angehender Lehrkräfte . 87Beat Döbeli Honegger, Michael HielscherVom Lehrplan zur Lehrerinnenbildung - Erste Erfahrungen mit obligatori-scher Informatikdidaktik für angehende Schweizer Primarlehrerinnen .. 97Kathrin Müller, Carsten SchulteEin Modell zur Analyse von Vorstellungen über Roboter und ihrer Funkti-onsweise . 109Torsten Brinda, Friederike BraunSchülervorstellungen im Zusammenhang mit Smartphones . 119Yannick Schneider, Andreas MühlingDas Konzept Nature of Computer Science  123Dorothee MüllerBerufswahl Informatiklehrkraft .. 127Claudia HildebrandtMit dem Glauben Berge versetzen ... - Die Selbstwirksamkeitserwartungvon Informatiklehrkräften  137Nico Steinbach, Eckart ZitzlerEin gamebasierter Ansatz zum Programmierunterricht in der Lehrerinnen-und Lehrerbildung  147Andreas Grillenberger, Ralf RomeikeEmpirische Ermittlung der Schlüsselkonzepte des Fachgebiets Datenmana-gement .. 157Alexander Hug, Rüdiger GrimmEntwicklung eines Datenschutzkompetenzmodells  167Klaus-Tycho FörsterVom Flaggenalphabet zur Vorratsdatenspeicherung: Schülerinnen undSchüler als Multiplikatoren technischer Aspekte der digitalen Welt  171Jonathan Otto, Michel Welke, Leonard Diekmann, Maria KnobelsdorfHamburg 2050, Land unter? – Eine „Informatik im Kontext“-Reihe zuKlimamodellierung mit Geographischen Informationssystemen .. 181ii“proceedings” — 2017/9/17 — 20:19 — page XIII — #13iiiiiiEsther Alzate Romero, Leonore DietrichMusikprogrammierung mit Sonic Pi. Entwicklung und Untersuchung einergendersensiblen Unterrichtseinheit zum Programmieren in der Sekundar-stufe 1. .. 191Dominik HeunEntwicklung eines HTML-Editors unter didaktischen Gesichtspunkten .. 201Johanna Borsch, Marco ThomasInformatische Bildung in der Sekundarstufe I an nordrhein-westfälischenSchulen . 211Lars Prädel, Gerlinde SchreiberHochschule als außerschulischer Lernort für Schülerinnen und Schüler:Ein pragmatisches Angebot  221Dieter EngbringAller Anfang ist schwer! Wie gelingt der Einstieg in den Informatikunterricht? 227Nadine Bergner, Thiemo Leonhardt, Ulrik SchroederFünf Argumente für einen graﬁschen Programmiereinstieg - eine Studieüber vier Jahrgangsstufen .. 237Johannes Fischer, Arno PasternakModularisierung im Informatikunterricht aus lernpsychologischer Perspektive 247Mareen Przybylla, Ralf RomeikeVon Eingebetteten Systemen zu Physical Computing: Grundlagen für Infor-matikunterricht in der digitalen Welt  257Tobias Jördens, Jens GallenbacherQuadrologik - Modellbildung und Modularisierung auf Basis von Rechner-technik  267Marlene Lindner, Sandra Schulz, Niels PinkwartIntegration des Erwerbs von Basiskonzepten der Informatik in den mathematisch-naturwissenschaftlichen Unterricht . 277Eva-Sophie Katterfeldt, Nadine DittertEin Framework zur Einordnung programmierbarer Baukästen in interdiszi-plinäre Bildungskontexte .. 287ii“proceedings” — 2017/9/17 — 20:19 — page XIV — #14iiiiiiNadine Dittert, Eva-Sophie KatterfeldtDas EduFab-Kit – Ein modularer FabLab-Baukasten für Lehrer*innen .. 291Oliver Krisch, Petra Kastl, Ralf Romeike3D-Druck als Motivation für die Einführung in die Programmierung in derRealschule .. 301Michael Brinkmeier, Stanislav PisarenkoNutzung eines Robotiksystems zur Förderung der Berufssprache Deutsch .311Torsten Brinda, David Tobinski, Stefan SchwinemSchülerinteresse an Informatik und Informatikunterricht .. 321WorkshopsKatharina Geldreich, Alexandra Funke, Peter HubwieserWillkommen im Programmierzirkus - Ein Programmierkurs für Grundschulen 327Otto Thiele, Petra JückstockDer Hamster hat das Programm erfolgreich beendet – Grundschulkinderlernen Programmieren ... 335Heiko Jochum, Klaus Becker, Martin Zimnol, Daniel Jonietz, ManuelFroitzheimEin Durchgang durch das Grundfach Informatik (nur) mit dem elektroni-schen Schulbuch inf-schule.de  345Barbara Wieczorek, Liz Ribe, Christina B. Class, Michael BrinkmeierAnalogien für Programmierkonzepte: Ein Weg zum Computational Thinking 349Heiko Jochum, Klaus Becker, Martin Zimnol, Manuel FroitzheimDatenbank-Anfragen mit SQL und dem elektronischen Schulbuch inf-schule.de 359Thomas Rohde, Kolja Strauss, Gregor Alexander Benedikt, RenéLevens, Lina Haji, Olaf MüllerOnline kooperieren im Informatikunterricht  363Esther Alzate Romero, Leonore DietrichMusikprogrammierung mit Sonic Pi  373ii“proceedings” — 2017/9/17 — 20:19 — page XV — #15iiiiiiSven Jatzlau, Ralf RomeikeHerausforderungen durch neue Programmierkonzepte in blockbasiertenProgrammiersprachen  383Michael T. Rücker, Nils Pancratz, Carolin Gold-Veerkamp, NielsPinkwart, Torsten BrindaAlltagsvorstellungen in der Informatik: Erhebungsmethodik und Implika-tionen für den Unterricht .. 393PosterKensuke AkaoBlended-Learning-Module für ein Lehrerfortbildungskonzept zum Informa-tikunterricht . 405Mike Barkmin, Matthias Kramer, David Tobinski, Torsten BrindaUnterschiede beim Memorieren von Quelltexten zwischen NovizInnen undExpertInnen der objektorientierten Programmierung ... 407Christine Bescherer, Andreas FestWirkmodelle zum Computational Thinking in der Grundschule .. 409Torsten Brinda, Thorsten TerjungSchülervorstellungen von relationalen Datenbanken: eine empirische Un-tersuchung .. 411Wibke DuweDie Handykiste für die Grundschule  413Christine GüntherInformatik mit und ohne Computer - Praxisideen für Kita, Hort undGrundschule . 415Lennart Goecke, Jurik Stiller, Detlef Pech, Niels PinkwartInformatische Grundbildung: Exploration des Erstzugangs zu Lego Wedo2.0 und Cubelets von Drittklässler_innen .. 417Anja Gärtig-Daugs, Katharina Weitz, Ute SchmidKindliche Modelle der digitalen Welt  419ii“proceedings” — 2017/9/17 — 20:19 — page XVI — #16iiiiiiMirek HanclLernwelten verbinden – Coding und Making mit Minecraft  421Stefanie JäckelZugänge scha  en und Lernen erleichtern - Motivierung im Informatikunterricht 423Matthias Kramer, Vahid Samimi, Torsten BrindaEntwicklung eines Online-Tools zur Bestimmung objektorientierter Pro-grammierkompetenzen ... 425Peter Micheuz, Gerald FutschekDer Biber der Informatik in Österreich - Anmerkungen und Perspektiven .427Martin Fricke, Kathrin Haselmeier, Ludger Humbert, Dorothee Müller,Daniel SiebrechtInformatik im Unterricht – so geht’s  429Wolfgang Pohl, Robert CzechowskiJugendwettbewerb Informatik: BWINF füllt die Lücke ... 431Marc RoßnerZur Berechnung der Komplexität von einfachen objektorientierten Programmen 433Arne Saatho  Wie stellen sich Schülerinnen und Schüler informatische Konzepte vor undwelche sprachlichen Bilder nutzen sie? ... 435Daniel SiebrechtSei selbst der Igel! – Umsetzung ausgewählter Elemente der phänomenori-entierten Informatik . 437Anke SteinhäuserGezieltes eLearning-Angebot für pädagogische Fachkräfte zur Reduktionvon Barrieren bei der Vermittlung von Elemtentarinformatik im Vor- undGrundschulbereich . 439Maarit StierleInformatik in der Elementarpädagogik – Herausforderung für die Profes-sionalisierung pädagogischer Fachkräfte .. 441Manuel Froitzheim, Klaus-Peter Becker, Martin Zimnol, Heiko JochumFörderung digitaler Bildung mit elektronischen Schulbüchern ... 443ii“proceedings” — 2017/9/17 — 20:19 — page 17 — #17iiiiiiEingeladene Vorträgeii“proceedings” — 2017/9/17 — 20:19 — page 18 — #18iiiiiiii“proceedings” — 2017/9/17 — 20:19 — page 19 — #19iiiiiiAllgemeinbildung in der digitalen, gestalteten Lebenswelt  Jens Gallenbacher1 Abstract:  Informatik ist allgemeinbildend – das wurde inzwischen deutlich belegt! Dieser Artikel geht der Frage nach, ob in unserer zunehmend gestalteten und durch menschliche Kre ativität entstandenen Lebenswelt Schule ohne Informatik überhaupt noch allgemeinbildend sein kann. Auf diesem Wege wird das klassische Peirce’sche Modell der inferentiellen  Lerntheorie  um die Komponente „Konstruktion“ erweitert.  Keywords:  Abduktion, Allgem einbildung, Allgemeinbildungskriterien, Deduktion, Erkenntnisgewinnungsmethoden, Heymann, Induktion, inferentielle Lerntheorie, Konstruktion, Konstruktivismus, Lebenswelt, Peirce.  1 Einleitung  Vor 14 Jahren zeigte Helmut Witten auf der INFOS 2003 anhand der Aufgaben der allgemeinbildenden Schule nach Heymann auf, dass Informatikunterricht allgemeinbildend ist  [Wi2003 ]. Bereits damals hatte in unserer Lebenswelt ein nie dagewesener Wandel eingesetzt : Lange Zeit waren die Gesetze der Natur prägender Faktor der Umwelt. Menschen versuchten diese zu verstehen, durch Beobachtung und Schlussfolgerung, abe r auch durch Auslegung relevanter  Schriften. Wichtige Methoden der Erkenntnisgewinnung waren Induktion, das Ableiten allgemeiner Regeln aus spezifischen Fakten und Deduktion, das Ableiten spezieller Fakten aus allgemeinen Regeln. In  der Informatik würden wir von B ottom -up- und Top-down -Verfahren sprechen.  Diese beiden Methoden könn en alleine allerdings nicht b eschreiben, was die immer einflussreicheren  Naturwissensc haften hervorbrachten : Eines der wichtigsten geistigen Werkzeuge dieser Disziplinen ist das hypothesengeleitete Experimentieren. Die Hypothese ist keine direkte Schlussfolgerung aus irgendeiner Richtung, daher führte Peirce für die Bildung einer Hypothese den Begriff Abduktion ein  [Pe1931]. Das Dreieck nach Abbildung 1 (abgewandelte Form  der Version  [Mi2015 ])                                                          1 TU Darmstadt, Didaktik der Informatik, Hochschulstraße 10, 64289 Darmstadt, jg@di.tu -darmstadt.de  FaktenSchlüsseTheorieAbduktionDeduktionInduktionAbbildung 1: Peirc’sches Dr eieck  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 19ii“proceedings” — 2017/9/17 — 20:19 — page 20 — #20iiiiiibeschreibt das Modell der  inferen tiellen Lerntheorie .  Bis etwa Ende des letzten Jahrtausends war diese Abfolge von Abduktion, Induktion und Deduktio n auch vollkommen ausreichend für die Erkenntnisgewinnung – zumindest was die Belange der Lebenswelt von Schülerinnen und Schülern angeht: Obwohl immer mehr technische Systeme diese Lebenswelt durchdringen, sind für deren Wirkprinzipien maßgeblich die Gese tze der Natur. So lässt sich etwa für ein sich näherndes Auto trotz „unnatürlichem“ Antrieb mit Hilfe der Kenntnis des Grundprinzips „Kraft = Masse mal Beschleunigung“ abschätzen, ob es sicher ist, die Straße noch davor zu überqueren oder nicht.  Selbstvers tändlich gab es auch bereits im 20. Jahrhundert von Menschen konstruierte Szenarien, für deren Verständnis diese „bekannten“ Gesetzmäßigkeiten nicht s ehr hilfreich waren, etwa innerhalb eines Atomkraftwerks. Für die Lebenswelt der Schülerinnen und Schüler spielten diese Ausnahmen allerdings in der Regel keine Rolle , da die Türen zu entsprechenden Bereichen meistens verschlossen waren . Das hat sich grundlegend verändert mit der zunehmenden Miniaturisierung und Vernetzung elektronischer Komponenten, die die U mwelt zunehmend prägen – erkennbar in Computern, Spielen od er Geräten zur Unterhaltung sowie  unsichtbar in Haushaltsgeräten, der Kleidung oder auch „konventioneller“ Technik.  Besonders im zwischenmenschlichen Bereich wird immer mehr „virtualisiert“ – Treff en finden oft nicht mehr von Angesicht zu Angesicht statt, sondern mit Hilfe mobil vernetzter Geräte, „Freundschaften“ werden in den sozialen Medien etabliert oder zumindest protokolliert. Aktivitäten „online“ bestimmen zunehmend auch den Erfolg „offline“.  Hierbei handelt es sich demnach  um einen sehr relevanten Teil unserer Lebenswelt und Schule hat  dies bei der Erfüllung ihrer allgemeinbildenden Aufgaben zu berücksichtigen, wie sie etwa von Heymann sehr gut herausgearbeitet wurden.  Bevor ich im Detail dar auf eingehe, möchte ich dies am Beispiel illustrieren.  Diese fiktive Schlagzeile  der Abbildung 2  ist keine „Fake News“, sondern beruht durchaus auf einer Studie vom Mai 2011 [U g2011], in der 721 Millionen Menschen mit 69 Milliarden Freun d-Beziehungen unter sucht wurden – eine Größenordnung, die für empirische Studien äußerst bemerkenswert erscheint . Allerdings : Einbezogen wurden alle T eilnehmerinnen und Teilnehmer des Dienstes  Facebook, die länger als vier Wochen angemeldet waren und mindestens eine Freund -Beziehung hatten. Die meisten davon wissen übrigens bis heute nichts davon, dass sie an der Studie überhaupt teilgenommen haben. Im Ergebnis w urde tatsächlich  festgestellt , dass ca. 84% der „Studienteilnehmerinnen und Studienteilnehmer“  weniger Freunde hatten als der Durchschnitt ihrer Freunde.  Eine wichtige Frage ist allerdings , welche tatsächliche Relevanz  diese Erkenntnis hat . 20 Jens Gallenbacherii“proceedings” — 2017/9/17 — 20:19 — page 21 — #21iiiiiiWir Informatiker kennen  für Problemlösung und Problemanalyse das geistige Werkzeug  der Modellbildung  und w enn wir dieses für die Fragestellung an einem Beispiel anwenden, kommen wir etwa für eine „normale“ Situation mit 9 Freunden zu einem Graph en wie in  Abbildung  3: Knoten repräsentieren die Personen, Kanten die Freundschaftsbeziehungen. Ein sehr kontaktfreudiger Mensch steht  hier im Mittelpunkt und hat recht viele Freundschaften. Um ihn herum gi bt es mehrere Cliquen, die neben  ihm nur zwei weitere Freunde kennen . Damit haben wir eine Person mit acht Freunden und durchschnittlich drei Freundesfreunden sowie acht Personen mit dre i Freunden, aber durchschnittlich 4,67 Freundesfreunden. So  haben „nachweislich“ acht von neun Personen ( also sogar knapp 89%) weniger Freunde als der Durchschnitt ihrer Freunde.  Das Beispiel bestätigt also  einerseits  die Studie, andererseits  kann man dara n auch relativ leicht erahnen , dass Menschen mit vielen Freunden immer häufiger in die Freundesfreunde -Statistik eingehen als solche mit wenigen Freunden  und damit das Facebook -Ergebnis nicht mehr sonderlich Abbildung 2: Fiktive Schlagzeile  Abbildung 3: Freunde -Graph  Allgemeinbildung in der digitalen, gestalteten Lebenswelt 21ii“proceedings” — 2017/9/17 — 20:19 — page 22 — #22iiiiiiüberraschend ist . Zu dem gleichen Ergebnis kommt  tatsächlich zwanzig Jahre vor Facebook auch Scott Lauren Feld, der dies als „Freundschaftsparadox“ bezeichnet [Fe1991]: Wenn in einer Gruppe mit Freundschaftsbeziehungen auch nur zwei  Personen unterschiedlich viele Freunde haben, hat immer die Mehrheit vo n Personen weniger Freunde als der Durchschnitt ihrer Freunde.  Dieses Beispiel macht klar, wie wichtig i nformatisches und i ngenieurmäßiges Denken sowie die Kenntnis um  informatische Methoden  zusammen mit der Kompetenz, diese sinnvoll anzuwenden,  sind, um A ussagen richtig interpretieren zu können . Im konkreten Beispiel ist  der direkte  Einfluss auf die Lebenswelt eher untergeordnet , das Titelbild vom Anfang dieses Artikels sicherlich künstlich . Diese Relevanz ist aber zum Beispiel ganz sicher gegeben im Zusam menhang mit Systemen, die für uns Entscheidungen treffen. Das kann auch die Entscheidung sein, uns mit bestimmte n Informationen zu versorgen  oder uns dies e vorzuenthalten.  So forderte Raj Reddy, Turi ngpreisträger von 1994, 2016 in Heidelberg in seinem Vor trag „Too Much Information and Too Little Time“  [HLF2016] sogenannte „Guardian Angels“ und „Cognition Amplifiers“ ein. Das sind Softwareprodukte, die für uns die  Flut verfügbarer Information en automatisiert sichten und nur noch interessante Neuigkeiten, Nachrichten und andere Details anzeigen.  Der Kommentar von William Kahan, Turing preisträger von 1989, auf den Vortrag war „Tell me only, what I want to hear, to reinforce my beliefs, even if they are wrong.“ Er spricht damit an, was wir im deutschen Sprach raum als „Echokammer -Effekt“ oder auch  „Filterblase“  kennen . Software auf Mobiltelefonen wie „Siri“ und Geräte wie „Alexa“ dringen einerseits immer weiter in unsere Privatsphäre ein, machen ihre Benutzer transparent und überwachbar. Andererseits gestalten sie zusätzlich aktiv unsere  Musikauswahl , unser Medienprogramm, die Nachrichten, die uns erreichen . Die Entwickler betonen immer wieder, dass dies  strikt dem eigenen Profil gemäß  erfolge, also nur den – ausgesprochenen und unausgesprochenen – Wünschen der Benutzer entsprechend . Selbst wenn wir in dieser Beziehung den Entwicklern nur beste Absichten unterstellen und Missbrauch ausschließen, kann es aufgrund der Filterblase passieren, dass wir  vom System  nach einer Zeit nur noch das bekommen, was wir auch hören wollen, ohne uns neuen  Aspekte n und neuen Ideen öffnen zu müssen . Sehr bequem, aber auch etwas einseitig ! Schule muss zuminde st die Möglichkeit eröffnen, hier  eine informierte Meinung zu bilden.  22 Jens Gallenbacherii“proceedings” — 2017/9/17 — 20:19 — page 23 — #23iiiiii2 Peirce reloaded  Erkenntnisgewinnung allgemein, insbesonder e aber in der Schule , muss sich heute auch mit den Wirkprinzipien gestalteter Systeme auseinandersetzen, denn nur ein Verständnis der Wirkprinzipien erlaubt auch eine mündige Entscheidung – privat für oder gegen die Nutzung bestimmter Medien und Kommunikat ionskanäle, im Sinne staatsbürgerlichen Handel ns aber auch in Bezug auf den möglichen, fürsorglichen regulatorischen Eingriff  beim  Umgang m it Medien und Systemen . Wie gewinnt man aber nun unter der Annahme konstruktivistisch er Lernpsychologie Erkenntnisse?  Das in Abbildung 1 visualisierte Modell inferentieller Lerntheorie nach Peirce beschreibt die Möglichkeiten,  naturwissenschaftliche Er kenntnisse zu gewinnen, recht gut:  Abduktion ist die „Kunst “, aus den Beobachtungen der Lebenswelt Hypothesen abzuleiten,  die eventuell dazu dienen, das Wissen der Menschheit zu erweitern. Deduktion würden wir Informatiker am ehesten als „top -down“ -Verfahren beschreiben: Aus allgemeinen Regeln und Erkenntnissen werden spezielle Details abgeleitet. Indukt ion wiederum bezeichn et die umgekehrte Vorgehensweise, wenn aus spezifische n Regeln und Beobachtungen allgemeine, weiter greifende Erkenntnis se erschlossen werden . Der Unterschied zur Abduktion ist dabei, dass es sich hier um mehr als eine Theorie bzw. Hypothese handelt.  Diese  Methoden der Erkenntnisgewinnung finden wir im Schulunterricht wieder. Auch hier konstruieren Schülerinnen und Schüler im Idealfall ihre Vorstellungen, indem sie aus wahrgenommenen Details allgemeine Regeln ableiten oder indem sie von den allgemeinen Rege ln, wie sie etwa aus Schulbüchern recherchiert werden, spezifische Antworten z u aufgeworfenen Fragen ableiten und erweitern so das individuelle Bild ihrer Lebenswelt.  Wenn wir diese beiden Methoden der Erkenntnisgewinnung im Informatikunterricht anwenden, betrachten wir allerdings Computersys teme, Software und die dahinter stehenden Ideen in gleicher Weise wie Naturphänomene: Wie Gegenstände, die  entweder unveränderl ich vom Universum vorgegeben sind  oder zumindest von „Experten“  bzw. „Nerds“ , die in der Vors tellung sehr weit weg von der Lebenswelt der Schülerinnen und Schüler sind. Die Betrachtung vieler Unterrichtsmaterialen zu Technik und Informatik zeigt, dass diese Sichtweise von außen im System Schule recht verbreitet ist. Das für die Natur - und Geistesw issenschaften sicherli ch meistens sinnvolle Paradigma  galt allerdings f ür Informatik wie für andere Ingenieurdisziplinen im engen Sinne noch nie und es wird immer deutlicher, dass es für die heutige Lebenswelt sogar fehlleitet : Informatiksysteme sind von M enschen gestaltet! Menschen, die altersmäßig oft viel näher an den Schülerinnen und Schülern als an den Lehrpersonen liegen.  Um diese Tatsache im allgemeinbildenden Sinne  zu berücksichtigen, lässt sich der verbundene Prozess der Erkenntnisgewinnung mit dem  Peirce’schen Modell nicht mehr Allgemeinbildung in der digitalen, gestalteten Lebenswelt 23ii“proceedings” — 2017/9/17 — 20:19 — page 24 — #24iiiiiisinnvoll beschreiben, d enn die Lernenden gehen  darüber hinaus, Erkenntnisse zu  vorhandenen Fakten zu gewinnen:  Vielmehr wird die Lebenswelt um neue Fakten erweitert.  Traditionell kennen wir das auch schon aus Unterrichtsfäch ern wie „Deutsch“ oder „ Kunst “, in denen Schülerinnen und Schüler ihre Lebenswelt durch Aufsätze oder Kunstwerke erweitern. Anhand von auf Softwareprodukten beruhenden Systemen wie Facebook, Uber oder auch Rootkits2 wird jedoch deutlich, dass die Wirkbreit e der Gestaltung durch Informatik systeme  deutlich größer ist.  „Konstruktion“ bildet daher heute neben Abduktion, Deduktion und Induktion eine vierte wichtige Säule der Erkenntnisgewinnung , und könnte das Peirce -Dreieck zum Beispiel in der Art der Abbildung  4 erweitern . Im folgenden Abschnitt wird dies im  Licht der Heyma nn’schen Aufgaben der allgemeinbildenden Schulen betrachtet.   Abbildung 4: Erweitertes Peirce’sches Dreieck  3 Informatik und Allgemeinbildung  Hans Werner Heymann identifiziert in [He2013] fäch erunabhängig sieben Aufgaben des allgemeinbildenden Schulsystems: Lebensvorbereitung, Stiftung kultureller Kohärenz , Weltorientierung , Anleitung zum kritischen Vernunftgebrauch , Entfaltung von Verantwortungsbereitschaft , Einübung in Verständigung und Koope ration  und Stärkung des Schüler -Ichs. Anhand wichtiger Zitate aus dem Werk wird im Folgenden  der Bezug zur Informatik und der gestalteten heutigen Lebenswelt der Schülerinnen und Schüler hergestellt.  Lebensvorbereitung  meint demnach die „Vorbereitung auf a ll das, was Heranwachsende jetzt oder später für ihre Lebensführung in der Gesellschaft, in der sie aufwachsen, mit großer Wahrscheinlichkeit notwendig und unverzichtbar brauchen und                                                          2 „root“ bezeichnet bei bestimmten Betriebssystemen Administratorrechte. Das „rootkit“ ist davon abgeleitet ein meistens auch von Laien zu bedienendes Software -Handwerkszeug, das den Einbruch in fremde Systeme ermöglicht. Oft sind in solche rootkits no ch Hintertüren eingebaut, die auch den Autoren des Werkzeugs die Möglichkeit einräumen, ein damit kompromittiertes System für eigene Zwecke auszunutzen.  24 Jens Gallenbacherii“proceedings” — 2017/9/17 — 20:19 — page 25 — #25iiiiiiwas sie ohne Schule großenteils nicht lernen würden.“  Betrachten wir Info rmatiksysteme wie Naturphänomene, können wir sie „verstehen“ lernen und in diesem Zusammenhang sicherlich auch bedienen lernen. Wichtigster Aspekt ist aber das „Begreifen“ der Systeme, was das Nachvollziehen der ( von Menschen ausgedachten ) Wirkprinzipien i mpliziert, zusammen mit der Möglichkeit, solche Systeme auch selbst zu gestalten.  Der letzte Punkt ist besonders relevant im Zusammenhang mit der Stiftung kultureller Kohärenz : „In allen Fächern sind zentrale Ideen aufzusuchen, mittels derer sich Brücken s chlagen lassen zwischen Fach und außerfachlicher Kultur, anhand derer sich deutlich machen lässt, was das Fach (bzw. die korrespondierende Wissenschaft) für die Kulturentwicklung bedeutet, wie es mit ihr verwoben ist, wie es mit dem täglich erfahrbaren ges ellschaftlichen Alltag verknüpft ist. […] In den zentralen Ideen eines Faches […] verbindet sich der diachrone mit dem synchronen Aspekt der kulturellen Kohärenz: Die zentralen Ideen sind historisch gewachsen, repräsentieren also eine Geschichte; und sie s tehen für die Wechselwirkung zwischen Fach und außerfachlicher Kultur, transzendieren also die Grenzen des einzelnen Faches.“  Ebenfalls i m direkte n Zusammenhang dazu steht  die Einübung in Verständigung und Kooperation : „Welchen Kurs die hochentwickelten Ge sellschaften […] nehmen können und müssen, darüber dürfen nicht allein Experten befinden, sondern das sind Fragen, die alle angehen und über die alle Staatsbürger - als im Höchstmaß betroffene Laien - mitentscheiden müssen. Die Rationalität derartiger Ents cheidungen hängt in hohem Maße von der gelingenden Kommunikation zwischen Laien und Experten ab.“  Viele moderne Wissenschaften – insbesondere Ingenieurwissenschaften und Informatik – arbeiten weitgehend konstruktiv gestaltend. Ein Unterrichtsfach, das dies en Aspekt der Erkenntnisgewinnung aufgreift, ist daher obligatorisch ! Andernfalls besteht die Gefahr zweier Parallelkulturen: Auf der einen Seite die der „Nerds“, die (aufgrund außerschulischer Bemühungen) Einblick in die Gestaltung moderner Systeme haben und als „Technokraten“ de facto entscheidende Teile der Lebenswelt gestalten und bestimmen. Auf der anderen Seite die  Kultur der „N ormalen“, zu denen die gewählten Vertreter der Mehrheit der Bürgerinnen und Bürger gehören, die aber keine aktiven und auch k eine passiven Kompetenzen bei der Gestaltung der Systeme haben, sondern lediglich Anwender sind.  Heymann: „F ür die Idee der Weltorientierung  ist ein gewisses ‚Luxurieren‘  des Wissens charakteristisch, gestützt auf die Annahme, dass ein differenziertes Welt bild einen weiten Urteilshorizont erschließt und sowohl die Klärung des eigenen Standortes in der Welt wie auch seine Relativierung erleichtert. “  Dieses „Luxurieren“ zeichnet sich in der heutigen Lebenswelt durch immer kürzere Innovationszyklen aus, die d as System Schule zunehmend überfordern. Statt mit Hilfe traditioneller Erklärmodellen  den Innovationszyklen hinterherzuhinken , sollte Weltorientierung durch Erweiterung dieser Erklärmodelle um die Konstruktion und die Allgemeinbildung in der digitalen, gestalteten Lebenswelt 25ii“proceedings” — 2017/9/17 — 20:19 — page 26 — #26iiiiiigestalterischen Aspekte ermöglicht wer den und auf diese Weise der  Charakter der Innovation selbst als relevanter Lerngegenstand ins Curriculum einziehen . Zum kritischen Vernunftgebrauch  schreibt Heymann: „Wer seine Vernunft kritisch gebrauchen kann, wird weder ein bequemer Untertan sein, der f raglos hinnimmt, was Lehrer, Politiker und andere Vertreter institutioneller Macht in der öffentlichen Verwaltung, in Kirche, Wirtschaft und Wissenschaft ihm zumuten, noch wird er sich umstandslos einem vermeintlichen oder faktischen Druck der „öffentliche n Meinung“ beugen. Kritische Vernunft birgt politische Sprengkraft in sich - insbesondere angesichts „unvernünftiger“ Verhältnisse.“  Die im letzten Abschnitt erwähnte „Echokammer“ legt nahe, dass heute ergänzend zu Verwaltung, Kirche, Wirtschaft und Wissen schaft noch informatisch bzw. ingenieurmäßig gestaltete Systeme betrachtet werden müssen, die – gegebenenfalls ganz ohne Hintergedanken ihrer Entwickler – Einfluss auf Meinungsbildung nehmen oder aber auch in Zeiten postfaktischer Politik und Fake -News ganz bewusst zur Manipulation ausgenutzt werden können.  Kritischen Vernunftgebrauch rein durch die Betrachtung von außen, aus der Bedienersicht zu erreichen, wird erfahrungsgemäß sehr schw ierig! Viel effizienter ist, wenn eine gewisse Durchdringung der Gestal tungsprinzipien erreicht wurde und Basis für die kritische Reflexion skompetenz der Schülerinnen und Schüler  ist. Die Entfaltung von Verantwortungsbereitschaft  grenzt Heymann folgendermaßen ab:  „Verantwortliches Handeln setzt beides voraus, Gefühl und Wisse n. Das Verantwortungsgefühl allein kann mich nicht hindern, im Sinne der Verantwortungsethik, die mir die Folgen meines Handelns zurechnet, unverantwortlich zu handeln, wenn ich nämlich zu wenig weiß. Das unverantwortliche Handeln ist dann uninformiertes o der dummes Handeln. Wissen und kritischer Vernunftgebrauch allein können mich andererseits nicht hindern, gewissenlos zu handeln, wenn mir Verantwortungsgefühl und Verantwortungsbewusstsein abgehen. Das unverantwortliche Handeln ist in diesem Falle böses, zynisches oder zumindest leichtfertiges Handeln.“   Schule sollte hier mindestens dafür sorgen, dass sich niemand auf die erste Position zurückziehen kann , indem Probleme, die vermeintlich aus dem gestalteten Teil der Lebenswelt entstehen der alleinigen Ver antwortung der „Nerds“ und damit „der anderen“ zugeordnet werden! Auch hierfür ist daher im Unterricht ein Minimum an Einblick in die Gestaltung selbst nötig.  Eine der wichtigsten Aufgaben allgemeinbildender Schulen ist sicher  die Stärkung des Schüler -Ichs: „Ich-Stärkung zielt auf die Entwicklung von Selbstbewusstsein, Selbstvertrauen, personaler Identität, auf die Fähigkeit, eigene Ziele, Wünsche und Vorstellungen klar zu erkennen und handelnd zu verwirklichen, mit den eigenen Stärken und auch Schwächen r ealistisch umzugehen.“  Die Möglichkeit, ohne großen finanziellen Aufwand Systeme gestalten zu können, die unsere Lebenswelt und die Art zu leben sowie als Gesellschaft zusammenzuleben 26 Jens Gallenbacherii“proceedings” — 2017/9/17 — 20:19 — page 27 — #27iiiiiinachhaltig verändern ist – unabhängig davon, ob sich die Schülerinnen un d Schüler dafür entscheiden, diese Möglichkeit zu nutzen – wahrscheinlich die bedeutendste  Komponente für die  Stärkung des Schüler -Ichs. Eine allgemeinbildende Schule muss dafür Sorge tragen, dass diese Möglichkeit nicht nur Kindern aus sogenannten „bildun gsnahen“ Schichten zur Verfügung steht, die sich das Prinzip der Konstruktion und Gestaltung auch außerhalb der Schule aneignen können. Alle sollen von diesen Möglichkeiten profitieren und selbstbewusst  erwachsen werden, mit dem Vertrauen auf das eigene Po tential zur Gestaltung . 4 Resümee  Helmut Witten kam bereits 2003 berechtigterweise zum Ergebnis, dass Informatik allgemeinbildend ist . Für die heutige Lebenswelt und die mit ihrer stetigen Veränderung  verbundene immer weiter  steigende Dominanz gestalteter Sy steme muss erweiternd festgestellt werden:  Eine allgemeinbildende Schule ist ohne die Anerkennung und Berücksichtigung des wachsenden Anteils der von Menschen (mit -)gestalteten Lebenswelt nicht möglich! Im konstruktivistischen Lernprozess ist somit die Erkenntnisgewinnungsmethode „Konstruktion“  als wichtiges allgemeinbildendes Element einzubeziehen . Für d ie Vermittlung der abgeleiteten Kompetenzen sind grundständig in  informatisch - bzw. ingenieurmäßig -gestalterischem Denken ausgebildete Lehrpersonen obligat orisch , was zwingend ein eigenständiges Unterrichtsfach  voraussetzt . Informatik erfüllt diese Bedingungen als einziges bundesweit. Die Forderung nach einem bundes länderübergreifenden  Pflichtfach Informatik ist daher  gleichzeitig die Forderung nach einer mo dernen  allgemeinbildenden Schule.  Allgemeinbildende Schule ist heute ohne das für alle Schülerinnen und Schüler verbindliche Pflichtfach Informatik mit angemessenem Stundenumfang nicht möglich!  5 Literaturverzeichnis  [Fe1992]  Scott L. Feld : Why do your frie nds have more friends than you do? , American Journal of Sociology, 96(6), 1991  [He2013]  Hans Werner Heymann: Allgemeinbildung und Mathematik . Studien zur Schulpädagogik und Didaktik, Bd. 13. Weinheim/Basel: Beltz 1996 - Neuauflage 2013  [HLF2016]  Raj Reddy:  Too Much Information and Too Little Time, Vortrag auf dem Heidelberg Laureate Forum am 22. September 2016,  online unter http://www.heidelberg -laureate -forum.org/event_2016/   Allgemeinbildung in der digitalen, gestalteten Lebenswelt 27ii“proceedings” — 2017/9/17 — 20:19 — page 28 — #28iiiiii[Mi2015]  Gerhard Minnameier : Tightening the Peirce -Strings  Forms of Abduction in the Context of an Inferential Taxonomy  in Magnani, L. & Bertolo tti, T. (Eds.) (2015),  Springer handbook of modelbased  science. Berlin: Springer  [Pe193 1] Charles Sanders Peirce : The Colle cted Papers of Charles Sanders Peirce  Vols. I -VI ed. Charles Hartshorne and Paul Weiss (Cambridge, MA:  Harvard University Press, 1931 -1935), Vols. VII -VIII ed. Arthur W. Burks (same  publisher, 1958)  in der Electronic Edition  1994  [Ug2011]  Johan Ugander , Brian Karrer , Lars Backstrom, Cameron Marlow : The Anatomy of the Facebook Social Graph , eprint arXiv:1111.4503 , 11/2011  [Wi2003]  Helmut Witten: Allgemeinbildender Informatikunterricht? Ein neuer Blick auf H. W. Heymanns Aufgaben allgemeinbildender Schulen  in Informatische Fachkonzepte im Unterricht, INFOS 2003, 10. GI -Fachtagung Informatik und Schule, 17. -19. September 2003 in Garching bei München , Seiten  59-75     28 Jens Gallenbacherii“proceedings” — 2017/9/17 — 20:19 — page 29 — #29iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 11Unterrichtsqualität in der digitalen WeltHilbert Meyer1Ich bin von Haus aus Bildungstheoretiker und kein Mediendidaktiker. Deshalb bewege ichmich bei diesem Vortrag auf dünnem Eis. Das von der Konferenzleitung vorgeschlageneThema habe ich zu folgender Frage konkretisiert: Welche Ansprüche an die Gestaltung desInformatikunterrichts und an die Arbeit mit digitalen Medien in anderen Fächern folgenaus dem aktuellen Diskussionsstand zur Unterrichtsqualität? Der Vortrag besteht aus vierAbschnitten:In der Einleitung (Abschnitt 1) wird kurz skizziert, welche Diskursverweigerungen (Hartmutvon Hentig), welche schlecht fundierten Attacken (Manfred Spitzer) und welche behutsamenAnnäherungsversuche (Klaus Zierer) Didaktiker und neurowissenschaftliche Hobbydidak-tiker im Blick auf digitale Bildung und digitalen Medieneinsatz im Unterricht in denletzten Jahren vorgenommen haben. Ich plädiere dabei für größtmögliche Nüchternheit. DieDigitalisierung der Welt ist weit fortgeschritten. Es geht nicht mehr um die Frage „Wollenwir sie reinlassen?“, sondern um die Frage: Wie können digitale Medien besser als bisherfür selbstreguliertes Lernen und für transformationale Bildungsprozesse (Hans-ChristophKoller) genutzt werden?Im Abschnitt 2 („Was ist guter Unterricht?“) wird anhand von vier empirisch basiertenKriterienkatalogen zum „guten Unterricht“ (von Meyer, von Helmke, von der ForschergruppeCOACTIV, von Good et al.) analysiert, dass sich diese Kataloge weltweit annähern. MeinFazit: Ein übergeordnetes Kriterium ist und bleibt für mich die Frage, ob im Unterrichtsinnstiftendes Kommunizieren stattgefunden hat.Im Abschnitt 3 („Was sagt die Forschung?“) erläutere ich beispielhaft an einigen wenigenForschungsergebnissen, worauf bei Urteilen über Unterrichtsqualität zu achten ist:1. Wir müssen zwischen Oberﬂächen- und Tiefenstrukturen unterscheiden.2. Wir sollten zur Kenntnis nehmen, dass sich der Unterrichtsprozess, wie schon vonJohann F. Herbart postuliert, in einem fortwährenden Wechsel von Vertiefung undBesinnung entfalten.3. Deshalb hat der von der Lehrperson angeleitete Metaunterricht auch im Unterrichtmit und über digitale Medien eine zentrale Bedeutung.1Hilbert Meyer, Prof. em., Kastanienallee 40, 26121 OldenburgI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 29ii“proceedings” — 2017/9/17 — 20:19 — page 30 — #30iiiiii4. Wir sollten dabei aber beachten, dass Lehrerinnen und Lehrer Weltmeister imKompensieren von Schwächen im einen Kompetenzfeld durch Stärken im andernsind.Im Abschnitt 4 geht es um die Frage: „Was tun?“ Ich votiere gegen ein eigenes Unterrichtsfach„Informatik“ in der Grundschule, aber für ein solches Fach in den Sekundarstufen. Ichskizziere mein Drei-Säulen-Modell der Unterrichtsentwicklung (aus Meyer 2015) undplädiere dafür, die drei Grundformen der Direkten Instruktion, des Individualisierenden unddes Kooperativen Unterrichts zu unterscheiden. In allen drei Grundformen können digitaleMedien eine wichtige Rolle spielen – aber immer kommt es darauf an, die Lehrer-Schüler-Interaktionen zu stärken. Dieser Abschnitt endet mit dem Motto: „Mischwald ist besser alsMonokultur.“Ein Handout mit der schriftlichen Fassung des Vortrags wird zu Beginn des Vortrags verteilt.Keywords: Unterrichtsqualität; Informatikunterricht; Medien im Unterricht; sinnstiftendes Kommu-nizieren30 Hilbert Meyerii“proceedings” — 2017/9/17 — 20:19 — page 31 — #31iiiiiiVerstehen – Vernetzen – Verantworten  Warum Medienbildung  und informatische Bildung  uns alle angehen und wir sie gemeinsam weiterentwickeln sollten   Thomas Knaus1  Abstract:  Digital  ist ein Begriff, der uns heute in sämtlichen Lebensbereichen begegnet. Das  „Digitale“ ist aber nicht nur ein omnipräsenter Hashtag , sondern bezeichnet technologische und technische Entwicklungen, die in hohem Maße subjekt - und gesellschaftsprägend sind. Diese sozialisatorische Relevanz des Digitalen soll im vorliegenden Beitrag anhand von fünf Thesen exemplarisch aufgezeigt werden: So beeinflussen digitale Medien unsere Wahrnehmung und damit die produktive Verarbeitung von Wirklichkeit. Aufgrund der ständigen Verfügbarkeit (mobiler) digitaler Medien, Werkzeuge und technischer Net ze umgeben uns auch unsere sozialen  Netzwerke permanent, was neue Formen sozialer Eingebundenheit sowie interessen - und kontextbezogene Vergemeinschaftungen ermöglicht. Da wir mit digitalen Medien nicht nur Umwelt wahrnehmen, sondern zunehmend auch selbst  Realität in Form von digitalen Artefakten und Werkstoffen erzeugen , verschmelzen einerseits unsere „analogen“ und „virtuellen“ Realitäten; andererseits werden Realitäts konstruktionen  unmittelbar erlebbar.  Hiervon kann die Entwicklung von Subjekt und Gesell schaft nicht unbeeindruckt bleiben – denn digitale Medien und Werkzeuge sind inzwischen in sämtlichen Sozialisationsinstanzen allgegenwärtig und entwickeln sich aufgrund ihrer neuen sozialen Bedeutung zunehmend vom Inter face zum kommunizierenden Gegenüber . Auslöser von subjekt - und gesellschaftskonstituierenden Konstruktionsprozessen sind also nicht nur andere Menschen, sondern auch deren mediale Artefakte – Dinge , die mittels digitaler Werkzeuge produziert  und manipuliert  werden und Individuen in zunehmend em Maße kommunikativ vernetzen. Digitale Medien sollten daher sowohl als Mittel als auch als Gegenstand einen zentralen Platz im schulischen Unterricht einnehmen. Zudem zielt die Medienbildung auf die Bildung des Subjekts. Die gesellschaftliche Teilhabe se tzt künftig das mediengebildete Subjekt voraus. Doch wird es nicht mehr nur in der Hand der oder des Einzelnen liegen, Kontrolle über die Werkstoffe der Zukunft, die Daten und Algorithmen, zu behalten. Da die Prozesse hinter dem Interface der Maschine für Menschen nicht mehr unmittelbar durchschaubar und kontrollierbar sind, ist gleichermaßen auch eine Sensibilisierung für Technik und technische Prozesse desiderat, die hinter den digitalen Medien und in den Werkzeugen stecken. Denn unsere sozialen Realitäte n, ob digital oder analog, sind aktiver und individueller denn je gestaltbar  – in dieser Gestaltbarkeit steckt gleichermaßen ein zu nutzendes Potential sowie  eine zu erbringende Pflicht. Aus diesen Potentialen und sich eröffnenden Gestaltungsspielräumen he raus erwächst unsere Verantwortung, Medienerziehung und informatische Bildung idealerweise gemeinsam  weiterzudenken.  Keywords:  Medienpädagogik, Bildungsinformatik, digitale Medien, Medienbildung, informatische Bildung, „digitale Bildung“, „digitales Lerne n“, Schule, Mensch -Maschine -Interaktion, Kommunikation, digitale Werkzeuge und Werkstoffe, Software, Programmierbarkeit, Adaptivität, Vernetzung, Konvergenz, Symbolischer Interaktionismus, Sozialisation, Sozialisationstheorien, Mediensozialisation, KMK -Strategie, Dagstuhl -Dreieck.                                                           1 Wissenschaftlicher Direktor des FTzM der Frankfurt University of Applied Sciences, Nibelungenplatz 1, 60318 Frankfurt am Main, knaus@ftzm.de.  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 31ii“proceedings” — 2017/9/17 — 20:19 — page 32 — #32iiiiii1 Turn : Digital , medial – egal?  Digital ist das neue Bio – zumindest scheint es so, als habe das Adjektiv „digital“ vieles ersetzt, was kürzlich  noch als „medial“ bezeichnet wurde. So wird aktuell vielerorts diskutiert, ob in einer digital vernetzten Welt  [GI16] auch „digitale Bildung“ benötig t wird [Ba17 ]. Sollte  daraufhin auch  unsere Disziplin in Digital pädagogik umbenannt  werden ? Unabhängig von der noch zu klärenden Frage, ob Bildung überhaupt „digital“ sein kann, sollten wir uns das „omnipräsente Adjektiv“ [Kn16b ], das  derzeit so unkritisch in nahezu alle gesellschaftlichen, kulturellen, ökonomischen und politischen Vollzüge übernommen  wird, etwas genauer anschauen . Denn – so viel sei an dieser Stelle bereits verraten – die begrif fliche Unterscheidung zwischen  Medium  und digitale m Werkzeug  erleichtert das  Verständnis  der sozialen Funktion  und der sozialisatorischen Bedeutung digitaler Technik.  Die Kritik a m aktuellen Hashtag  und am omnipräsenten Adjektiv  soll vorliegend mittels einer alternative n fachliche n Sichtweise be feuert werden : Wenn Informatiker innen und Informatiker  das Adjektiv digital  hören, denken sie zunächst an Einsen und Nullen. In einer binären Welt lässt sich aus einem Schaltzustand heraus alles  konstruieren. Irgendw ie mag diese Komplexitätsreduktion jedoch nicht zu dem passen, was wir mit „digitalen Welten“, „digitaler Gesellschaft“ oder auch „digitaler Bildung“ ausdrücken wollen. Digitalisierung  bezeichnet üblicherweise die Übertragung analoger Erscheinungsformen in  diskrete Werte mit dem Ziel, diese elektronisch zu verarbeiten , zu distribuieren oder zu speichern. Eine „analoge Gesellschaft“ lässt sich entsprechend nicht einfach in eine digitale Gesellschaft trans form ieren. Ist also der Begriff der Digitalisierung zu treffend, wenn er auf eine Gesellschaft angewendet wird – auf Kultur, auf Bildungsfragen, auf Schule oder auf das menschliche Lernen?  Eigentlich müssten die Fragen doch lauten: Wie veränder n sich unser Leben, Zusammenleben und unsere Umwelt in einer techn ologisch  und technisch  induzierten gesellschaftlichen Umbruchsituation und welche Fähigkeiten werden für das Aufwachsen,  die Integration und ein souveränes Miteinander benötigt? „Wie wirken digitale Medien auf Individuen und die Gesellschaft, wie kann man Informationen beurteilen, eigene Standpunkte entwickeln und Einfluss auf gesellschaftliche und technologische Entwicklungen nehmen? Wie können Gesellschaft und Individuen digitale Kultur u nd Kultivierung mitgestalten?“ [ GI16]. Zugegeben, Hashtag s wie „digitales Something “ sprechen  sich schneller und präg en sich leichter  ein. Doch trifft beispielsweise „digitale Bildung“ wirklich den Kern dessen, was wir damit meinen? Eine präzisere Analyse erscheint notwendig . Im Folgenden sollen fünf Thesen die Relevanz digitaler Medien für die Sozialisation in digital vernetzen  Gesellschaften  aufzeigen .  32 Thomas Knausii“proceedings” — 2017/9/17 — 20:19 — page 33 — #33iiiiii2 Sign: Thesen zur sozialisatorischen  Relevanz des Digitalen  Die folgenden fünf Thesen sollen die Zeichen der Zeit  markieren  und bilden die Basis für die Re -Interpretation eines klassischen Konzepts (vgl. Kapitel 3), das unter Berücksichtigung derzeitiger technologischer und technischer Entwicklungen, die in hohem Maße subjekt - und gesellschaftsprägend sind, aktueller denn je erscheinen wird.  2.1 Digitale Medien beeinflussen Umw eltwahrnehmung  (1. These)  Nikki Yanofsky sagte vor Kurzem im ZEITmagazin , dass sie als Zwölfjährige aus lauter Neugier „Jazz“ googelte und daraufhin eine bekannte Jazz -Sängerin wurde. Hieran erstaunt eigentlich gar nichts. Dieses Beispiel – das auch ein ga nz anderes sein könnte – soll lediglich zeigen, welche Relevanz digitale Medien  für unsere Welt wahrnehmung  haben. Dass die Relevanz „virtueller“ Wahrnehmung mitunter gewichtiger sein kann als face-to-face-Begegnungen , zeigt das Beispiel  ebenfalls, berücksi chtigt man  nämlich , dass Yanofsky in Montreal  aufgewachsen ist – also just in der Stadt, in der jährlich das weltweit gr ößte Jazz -Festival stattfindet. Um mit Jazz in Berührung zu kommen, hätte Nikki alternativ auch vor die Tür gehen können. Es kann konsta tiert werden: Digitale Medien beeinflussen in hohem Maße unsere Weltwahrnehmung  und entsprechend die „produktive Verarbeitung von Wirklichkeit “ [Hu06] .  2.2 Digitale  Werkzeuge  sind omnipräsent (2. These)  Studien wie die KIM - und JIM -Studien des MPFS [ MP14; MP1 6] zeigen, dass fast alle Menschen inzwischen über einen persönlichen Zugriff auf digitale Geräte verfügen. So sind laut der JIM -Studie 2016 Jugendliche in Deutschland mit Handy, Smartphone, Computer und Internetzugang nahezu voll ausgestattet [MP16]. Diese umfassende Verfügbarkeit  digitale r Geräte wird vielerorts als Initial eines tiefgreifenden gesellschaftlichen Wandels beschrieben [Aß16; Ba07; Ca14; DI14; Ho17; KM16; Sc14 ]. Doch was änderte sich mit der rasanten Verbreitung des mobilen  und vernetzten  Computers – in Gestalt des Smartphones – wirklich? Ist ein technisches  Gerät in der Lage die soziale  Welt zu verändern?  Der historische Technikeinsatz war im Wesentlichen durch die Erleichterung physischer  Arbeit gekennzeichnet : So revolutionierte beispiels weise die Eisenbahn die Mobilität; im Bausektor machte der Technikeinsatz das kräftezehrende Handwerk nicht nur sicherer und für Menschen erträglicher, sondern ermöglichte auch völlig neue Bauwerke. Technik hatte aber auch direkten Einfluss auf das soziale  Miteinander: „Die Einführung der Sprache konstituierte die Stammesgesellschaft, die Einführung der Schrift die antike Hochkultur  [und] die Einführung des Buchdrucks die moderne Gesellschaft [...]“ [Ba07]. Technik  revolutionierte also die physische Arbeit und Medien, wie die Schrift und der Buchdruck sowie der Computer, reformieren die geistige Arbeit [Na92; Sc97]  und sie Verstehen – Vernetzen – Verantworten 33ii“proceedings” — 2017/9/17 — 20:19 — page 34 — #34iiiiiiprägten als jeweils dominierende Kommunikationsmedien das gesellschaftliche Miteinander.  Es geht außerdem  nicht um ein Gerät, denn d ie Me nsch-Computer -Relation veränderte sich seit der Einführung des Computers entscheidend: So arbeiteten noch vor relativ kurzer Zeit  mehrere  Personen an einem  Computer – in Banken arbeiteten Menschen an Terminals; in Universitäten konnten Forschende Rechenkap azitäten  des Großrechners  buchen. In den letzten drei Jahrzehnten dominierte der „persönliche“  (Personal)  Computer – der PC – und damit die Eins-zu-eins-Relation von Mensch und Maschine. Heute genügt vielen von uns nicht mehr nur ein Gerät. Damit änderte s ich das (zunächst rein quantitative ) Verhältnis von Mensch und Maschine erneut. Zur steigenden Zahl digitaler Geräte , die einen Menschen umgeben, gesellen sich zu den  sichtbaren Geräte n, wie Smartphone, Tablet  und Notebook, auch weniger auffällige Computer  in Alltagsgegenständen , wie Motorsteuerungen und Bremsassistenten im Auto, Haus - und Heizungssteuerungen oder auch „smarte“ Kühlschränke und Zahnbürsten. In nicht allzu ferner Zukunft wird beinahe jeder Gegenstand des täglichen Lebens einen Computer entha lten und mit den anderen Gegenständen vernetzt sein, was als IoT – Internet of Things  – bezeichnet wird und die Omnipräsenz des Digitalen  zementiert.  Es geht aber nicht nur um Quantitäten, sondern um eine neue Qualität von Technik und damit auch um ein ne ues Verständnis der Mensch -Maschine -Interaktion  – nach folgend weitere These n dazu.  2.3 Digitale Werkzeuge  ermöglichen neue Formen sozial er Vernetzung (3. These)  Digitale – und vor allem mobile  – Medien ermöglichen eine soziale Eingebundenheit  in neuer Quantit ät und Qualität [Kn16c; Kn17] . Noch vor wenigen Jahren war der ständige  Zugang zum Internet  und seinen Diensten  unüblich ; dann wurde das erste Smartphone mit einer Internet -Flatrate  für Mobilfunknetze angeboten und vieles änderte sich: Dank der technischen  Vernetzung  konnte nicht nur die verhältnismäßig leistungsschwache Hardware des mobilen Geräts mittels  online bereitgestellte r Speicher - und Prozessor -Ressourcen ergänzt werden, womit die mobile Technik performanter wurde . Es wurden darüber hinaus auch Men schen miteinander „vernetzt“ [Wi02 ]. Mit dieser Vernetzung sind keineswegs nur technische  Plattformen  im WWW ( Soziale Netzwerke ) gemeint, sondern die Tatsache, dass das Individuum permanent  mit seinen sozialen Netzwerken und Peers  – wie der Familie und dem  Freundeskreis – verbunden sein kann und sich aufgrund dieser dauerhaft verfügbaren kommunikativen Vernetzung  neue persönliche Netzwerke entwickeln können  [Kr16] . War noch vor wenigen Jahren die soziale Vernetzung in hohem Maße  durch  räumliche Nähe  geprägt , so entscheiden künftig vor allem  Themen oder individuelle Interessen  – beispielsweise in Form von Communities of Practice  [We98] – über persönliche Verbundenheit  und soziale Eingebundenheit . Durch die Konvergenz von physischen und virtuellen Wirklichkeit en können wir also Grenzen überwinden und damit neue Formen der Vergesellschaftung erleben.  34 Thomas Knausii“proceedings” — 2017/9/17 — 20:19 — page 35 — #35iiiiii2.4 Digitale Werkzeuge  machen  Realität ( 4. These)  An der Benutzerschnittstelle, am Inter face – also an der Stelle, an der Technik zum Gegenüber wird – ist es zunächst i rrelevant, ob es sich um ein analoges oder digitales Medium handelt  [Je06] , denn die mittels analoger Technik hergestellten Bilder, Filme oder Tondokumente stehen bezüglich ihrer medialen Erscheinung  digital produzierten Dokumenten in nichts nach [Kn09 ]. Während das Medium primär die äußere Erscheinungsform, als Objekt der Wahrnehmung  [Ke06] die Schnittstelle zum Menschen darstellt, umfasst der Werkzeugbegriff auch die zugrunde - und dahinter liegende technische Basis des digitalen Geräts, die aufgrund ihrer Programmierbarkeit , Adaptivität, Konvergenz und technischen Vernetzung  umfassende Gestaltungsmöglichkeiten der medialen Erscheinungsformen sowie der eigenen Funktionalitäten bietet und damit über Potentiale verfügt, die über jene der analogen Medien heraus reichen  [Kn15a; Kn16a/b; Kn17 ].  Weiterführender als die Differenzierung analoger und digitaler Technik ist also vielmehr die Unterscheidung der Technik in Bezug auf ihre soziale Funktion : Erscheint sie primär als Medium  oder als Werkzeug ? Gerade bezüglich  digitaler  Technik mag diese Unterscheidung auf den ersten Blick künstlich oder gar antiquiert wirken , zumal sie zunehmend verschwimmt und Menschen doch von Anbeginn ihre dingliche Umwelt mittels Werkzeug en gestalteten. Die Unterscheidung zwischen Medium u nd Werkzeug ist aber gerade unter Berücksichtigung der zuvor benannten Spezifika des Digitalen  wesentlich und weiterführend, da sie den Blick auf die soziale Bedeutung und Funktion  der Technik schärft: So sind beispielsweise Werkzeuge im Gegensatz zu Medie n ohne aktiv Nutzende  „nutzlos“ [Kn15b] . Die Werkzeug -Analo gie verdeutlicht darüber hinaus, dass das Medium nicht nur dann beteiligt  ist, wenn wir Umwelt wahrnehmen , wie zuvor beispielhaft mit der Jazzsängerin Nikki Yanofsky erläutert  (vgl. Kapitel 2.1) , sondern auch dann , wenn wir unsere Umwelt sowie digitale Werkstoffe mittels digitaler Werkzeuge gestalten .  Die Produktion  und aktive Gestaltung  analoge r (Massen -) Medien  war zwar grundsätzlich möglich, aber stets aufwändig – man denke nur an die historisch e Vervielfältigung von Texten oder die ersten Filme aus den Anfängen der Kinematogra fie. Erst mit dem Aufkommen der Digitaltechnik  konnten auch diejenigen, die üblicherweise rezipieren, das Objekt der Wahrnehmung  direkt  beeinflussen  – es manipulieren , wie es der Informatiker Reinhard Keil nennt: „Zum ersten Mal in unserer Mediengeschichte kann das Objekt der Wahrnehmung auch unmittelbar zum Objekt der Manipulation werden“ [Ke06] . Damit kann  das digitale Medium nicht nur rezipiert werden , sondern auch  ohne g rößere Aufwände selbst produziert  und „interaktiv“ gestaltet  werden. Hierbei ist wesentlich, dass der alltagssprachlich  eher negativ besetzte Begriff der Manipulation  nicht falsch verstanden  wird: Es ist hier nicht  der aus dem Französischen stammende  Fachb egriff aus der Soziologie  oder Psychologie  gemeint – es geht also nicht  um gezielte oder verdeckte Einflussnahme  oder um Konditionierung . Und es geht auch  nicht darum, dass Medien Menschen „manipulieren“ . Der Begriff der Manipulation  sollte vielmehr in sei nem eigentlichen Wortsinn  verstanden werden: So ist Verstehen – Vernetzen – Verantworten 35ii“proceedings” — 2017/9/17 — 20:19 — page 36 — #36iiiiiimanus  das lateinische Wort für „Hand“ und plere bedeutet „füllen“ . Man könnte also wörtlich übersetzen: „eine Handvoll haben“ oder etwas passender: „die Dinge in der Hand haben“. Damit ist gemeint, dass w ir digitale  Medien nicht nur wahrnehmen können, sondern auf das Objekt der Wahrnehmung  auch  selbst handelnd  zugreifen  können.  2.5 IT doesn ’t matter  ... Software takes command (5 . These)  Der Werkzeugbegriff erscheint als Relikt einer vergangenen Zeit – der Hard warezeit.  Dabei verfügt  die physische  IT, obwohl sie die technische Basis alles Digitalen ist, heute nur noch über eine nachrangige  Bedeutung. Um es mit dem bekannten Zitat von Lev Manovich „Software takes command“ [Ma08] auszudrücken: Die Software hat die  Macht übernommen . Anhand mobiler Computer , lässt sich die schwindende Relevanz von Hardware und die steigende Bedeutung von Software und technischen Netzen gut veranschaulichen : Smartphones wären nichts ohne die Apps , die wir individuell zusammenstellen u nd mittels der die Hardware zu einem ganz persönlichen Werkzeug – einem „digitalen Taschenmesser“ – vervollkommnet wird. Auch die Strategien der globalen Internet konzerne  wie Amazon , Apple  und Google lassen diese Bedeutungsverschiebung erahnen: Der Hardwar e wird in Relation zum Content , wie Apps, Musik, Videos etc. , auch ökonomisch eine immer geringere Bedeutung beigemessen.  Die Relevanz des Netzes lässt sich a nhand von Apps zur Sprachsteuerung (wie beispielsweise SIRI) illustrieren: Smartphones sind nur de swegen so leistungsfähig, weil die rechen intensiven Prozesse, wie Sprachanalyse, inhaltliche Auswertung und Antwortgenerierung, nicht innerhalb des mobilen Gerätes statt finden , sondern die Speicher - und Prozessor leistung verteilter Server im Netz genutzt w erden . Auch dies ist gemeint, wenn in Anlehnung an Lev Manovich konstatier t wird , dass die Software und – ich ergänze – das Netz2 „die Macht übernehmen“ [Ma08]. Digitale Medien ermöglichen also aufgrund ihrer Programmierbarkeit und technischen Vernetzung d ie Integration von Werkzeugen zur aktiven Gestaltung und Verknüpfung von Inhalten innerhalb einer Einheit – häufig innerhalb eines Geräts oder einer Plattform. Diese digitalen Werkzeuge tragen demnach nicht nur dazu bei, unterschiedliche codale und mediale  Elemente zu verbinden, sondern darüber hinaus auch Lerngegenstand und das ( didaktische ) Werkzeug selbst miteinander zu verschmelzen [Kn15b]. Damit können nicht nur digitale Medien selbst produziert und                                                          2 Bestätigt wird diese Bedeutungsverschiebung durch aktuelle Studien, wie die bereits zitierten KIM - und JIM-Studien des MPFS [MP16] und die Studie zur Generation What , einer europaweiten Jugendstudie von ZDF, SWR und dem Bayerischen Rundfunk. Für letztere Studie wurden junge Erwachsene nach ihren Einstellungen und unter anderem auch zur Relevanz des Netzes  in ihrem Leben befragt – mit interessantem Ergebnis: So können sich 80 Prozent der befragten 18 - bis 34 -jährigen Menschen in Deutschland ein Leben ohne Gott, 70 Prozent ein Leben ohne Auto und 79 Prozent ein Leben ohne Fernsehen vorstellen. Selbst ein glückliches Leben ohne Kinder ist immerhin für 52 Prozent der Befragten denkbar – aber: „nicht ohne Internet“: Laut http://www.generation -what.de/por trait/data/all (aufgerufen am 21 . Mai 2017) können sich lediglich 48 Prozent  der Befragten in Deutschland ein g lückliches Leben ohne Internet vorstellen, unter den 16- und 17 -Jährigen sind es nur 42 Prozent.  36 Thomas Knausii“proceedings” — 2017/9/17 — 20:19 — page 37 — #37iiiiiimanipuliert werden, sondern digitale Werkzeuge verfüg en auch über eine hohe funktionale und formale Adaptivität  – vor allem  aufgrund theoretisch unendlicher Erweiterungs - und Kombinationsmöglichkeiten mittels individuell zusammenstellbarer Apps und gegebenenfalls auch entsprechender Peripherie. Dies bedeutet , dass nicht nur Inhalte beziehungsweise (Lern -) Gegenstände gestaltbar werden, sondern auch das (Lern -) Werkzeug selbst.  3 Re-Turn: Digitale Werkzeuge  und ihre Bedeutung für subjekt - und gesellschaftskonstituierende Interaktion  Zusammenfassend kann festgeha lten werden, dass digitale Medien in hohem Maße unsere Wahrnehmung von Umwelt  und damit die produktive Verarbeitung von Wirklichkeit  beeinflussen  (vgl. Kapitel 2.1) . Aufgrund der Omnipräsenz  digitaler Medien (vgl. Kapitel 2.2) und der ständigen Verfügbarke it technischer Netze umgeben  uns auch unsere sozialen  Netze permanent  (vgl. Kapitel 2.3) , was neue Formen sozialer Eingebundenheit und eine interessen - und kontext bezogene Vergemeinschaftung ermöglicht . Da wir zunehmend auch mittels digitaler  Medien Realit ät erzeugen, kann Realitäts konstruktion in unmittelbarer Weise erlebt  werden und es können in der Revision digitaler Artefakte Reflexionsprozesse angestoßen werden. Damit  sind digitale Medien und soziale Netze nicht nur ständig beteiligt, wenn wir andere u nd uns selbst  wahrnehmen und inszenieren, sondern aufgrund der grundsätzlichen Speicherbarkeit digitaler Medien stehen mediale Konstruktionen zur Selbstreflexion zur Verfügung (vgl. Kapitel 2.4) . Prozesse von Sozialisation  werden demnach zunehmend medial v ermittelt  und medial konstruiert : Die Wahrnehmung von innen und außen , die Konstruktion von Umwelt und die Subjektbildung sind von Medien , die wohlgemerkt omnipräsent sind , durchsetzt und beeinflusst [Su99; Ca14; Kn17 ]. Wenn man dies voraussetzt, dann verw undert es, dass in den Sozialisationstheorien digitale Medien noch immer eine so untergeordnete Rolle spielen und bisher in der Sozialisationsforschung bestenfalls als Massenmedien  wahrgenommen werden [ Hu06; Hu08 ]. I n den kommunikationswissenschaftlichen u nd medienpädagogischen Arbeiten zur „Mediensozialisation“ [Fr03; Ho10; Vo10] werden  – zu diesem Schluss kommt Dieter Spanhel  – „die Medien in ihrer Bedeutung für den Sozialisationsprozess isoliert oder unter eingeschränkten Perspektiven konzeptualisiert“ [ Sp13]. So werden Medien mitunter als Orte der Sozialisation  bezeichnet und damit nur sehr spezifische Funktionen der Medien für die Persönlichkeitsentwicklung betont, obwohl inzwischen Einigkeit darüber herrscht , dass sich das Verständnis von Medien als So zialisations instanz  – also neben  Familie und Schule – überholt hat, da Medien inzwischen in allen  Instanzen vorhanden und prägend sind  (vgl. Kapitel 2.2) .  Nach den für die deutschsprachige Sozialisationsforschung prägenden Autoren Dieter Geulen und Klaus Hurrelmann entsteht und entwickelt sich die Persönlichkeit eines Menschen „in wechselseitiger Abhängigkeit von der gesellschaftlich vermittelten sozialen und materiellen Umwelt“ [Ge80]. Damit wird als Sozialisation  die Summe aller Verstehen – Vernetzen – Verantworten 37ii“proceedings” — 2017/9/17 — 20:19 — page 38 — #38iiiiiiLernprozesse bezeichnet, die der Mensch in seiner Entwicklung zu einer handlungsfähigen Persönlichkeit durchläuft. Wenn nun also, wie zuvor konstatiert, das Leben zwar „analog“ , Kommunikation und Kollaboration aber zunehmend „digital“ ist und entsprechend medial  stattfindet [Kn16c], dann kann Persönlichkeitsentwicklung hiervon nicht unbeeindruckt bleiben [Ca14 ].  Nach dem Symbolischen Interaktionismus  [Bl69; Me73 ], einer Theorie, die für die handlungs - und rollentheoretische Perspektive als wesentliche soziologische Basistheorien i nnerhalb des Sozialisationskonzepts prägend war [Hu06], ist Kommunikation zwischen Individuen der Schlüssel zur Subjektkonstitution; Kommunikation dient demnach nicht bloß dem Transport von Botschaften, sondern primär der Konstitution  und Entwicklung  von S ubjekt und Gesellschaft [ Sc14 ]. Charles Horton Cooley, einer der geistigen Väter von George Herbert Mead, nimmt an, dass die Impulse für die Persönlichkeitsentwicklung vom Anderen  ausgehen . Diese Erkenntnis wurde möglicherweise durch Johann Wolfgang von Go ethe inspiriert: „Der Mensch erkennt sich nur im Menschen“ [Go99].  Für Cooley findet die Entwicklung von Persönlichkeit mittels  Kommunikation  statt, er schr eibt dazu: „It is through communication that we get our higher development.  The faces and conversati on of our associates; books, letters, travel, arts [...] supply the stimulus and  framework for all our growth“ [ Co72 ]. Mead entwickelte in Anlehnung an Cooley ein Modell, das die Konstitution des Subjekts durch Kommunikation konzeptionalisiert ; von seinem Schüler Herbert Blumer wurde dieses Modell dann weiter ausgebaut. Darin entsteht die Persönlichkeit , von Mead und Blumer als Self bezeichnet , als Produkt zweier Größen: Dem „sozialen Selbst“, dem Me, und der psychischen Komponente des  I.  Das Me steht für die in einer Gesellschaft existierenden gemeinsamen Normen, Regeln, Werthaltungen, also: für die sozialen Konsense [Me73 ]. Es präsentiert die Vorstellung dessen, wie die anderen Menschen – also: das soziale Umfeld – ein Individuum sehen und wie es sich nac h der Interpretation ihrer Erwartungen zu verhalten ha be. Das Me wiederum „speichert“ die intersubjektiv ausgehandelten Erwartungen und stellt darüber hinaus handlungsleitende Strukturen und Orientierungen zur Verfügung. Das I vertritt – gegenüber dem Me – impulsive und spontane Energien der Person, die zwar durch das Me „gezügelt“ werden, aber doch eine unabhängige Größe der Persönlichkeit darstellen. Durch ebendieses Zusammenwirken von I und Me bildet sich das Self, also: das Selbst  – das Selbstverständni s. Dieses Zusammenspiel , so der Kommunikationswissenschaftler Friedrich Krotz , müsse man sich als kommunikativen Prozess  vorstellen [Kr98 ]. Ein Prozess, der nach außen hin wahrnehmbar sein könne , sich aber durchaus auch als „innerer Dialog“ abspiele.  Cooley, Mead und Blumer sind sich darin einig, dass diese „sozialisierende“ Kommunikation nicht nur zwischenmenschlich erfolgt, sondern auch zwischen Mensch und Dingen  möglich ist. Kommunikation findet also auch dann statt, wenn Dinge  uns ein Handeln auferlege n oder nahelegen. Ein Beispiel hierfür ist der Berliner Schlüssel  [La93 ]: Dieser Schlüssel mit zwei identischen Bärten wird nach dem Aufschließen des Schlosses durch das Schloss hindurchgeschoben und ermöglicht daraufhin das 38 Thomas Knausii“proceedings” — 2017/9/17 — 20:19 — page 39 — #39iiiiiiZuschließen der Durchgangstür v on der anderen Seite. Dieser Schlüssel ist ein sehr treffendes Beispiel für Dinge, die Menschen ein bestimmtes Handeln auferlegen – man könnte auch sagen: Dinge, die „kommunizieren“  [Kn09 ]. Auch digitale Medien, Werkstoffe und Werkzeuge kommunizieren und k önnen so unser Handeln beeinflussen. In Bezug auf die Massenmedien hat der kanadische Philosoph Marshall McLuhan mit der vielzitierten Erkenntnis the Medium is the Message  darauf hingewiesen, dass Medien nicht neutral und demnach niemals nur „Behältnisse“ für Informationen  sind [Mc68 ]. Dass wir heute im Gegensatz zum Buch, Film, Fernsehen oder der Architektur direkten  und kreativen  Einfluss auf das digitale  Medium selbst nehmen können, in dem wir es aktiv gestalten , konnte er seinerzeit bestenfalls ahnen.  4 Connect: Das Gestaltende als Verbindung zwischen  Informatik und Pädagogik  Bei der Entscheidung für mein Studium folgte ich meinem persönlichen Interesse. Dabei verband ich – wie damals noch recht  unüblich – eine Ingenieurwissenschaft mit der Sozial - und Me dienpädagogik  (und ergänzte später  noch Erziehungswissenschaft und Pädagogische Psychologie ). Dass sich d ie Medienpädagogik auf die geistes - und sozialwissenschaftliche Erziehungswissenschaft und die Informatik als Struktur - und Ingenieurwissenschaft auf e ine andere Logik der Theoriebildung beruft [Br17], empfand ich mitunter als irritierend  und inspirierend zugleich . Die beiden Professionen erscheinen also auf den ersten Blick kaum gegensätzlicher  – sie verfügen jedoch über mindestens eine verbindende Geme insamkeit : die Gestaltung . Während die Informatik als die Wissenschaft der systematischen Organisation , Speicherung  und elektronischen Verarbeitung von Informationen  gilt und sich beispielsweise innerhalb der Technischen Informatik mit der Gestaltung von Algorithmen und Architekturen befasst , gestalten Pädagogin nen und Pädagoge n unter anderem erzieherische  Interventionen und (Lern -) Umfelder. Wenn – im Sinne des bereits in alternativer  Übersetzung zitierten Buchtitels von Lev Manovich – die Software  es ist,  die Befehle annimmt [Ma08], dann könn ten diese Aufgabentrennungen tendenziell  verschwimmen, da potentiell alle Menschen künftig ohne größere Aufwände  (wie es beispielsweise noch in einer hardwaredominierten Zeit oder vor der Einführung grafischer Benutzer oberflächen war ) Technik gestalten  können [Sc2011; Kn15b] . Am Beispiel von Content -Management -Systemen lässt sich beispielhaft darlegen, dass zur Gestaltung einer ansprechenden Webseite primär gute Ideen, geeignete Texte un d gelungene Grafiken sowie Bilder  benötigt werd en, jedoch keine HTML - und Programmierkenntnisse mehr. Auch digitale Werkzeuge, wie das  Smartphone , lassen  sich ohne tiefergehendes technisches Know -how individualisieren. Software wird damit zum Werkstoff,  aus dem sich hilfreiche Werkzeuge  herstellen , weiterentwickeln  und kombinieren lassen. Programmierbare und adaptive digitale Werkzeuge sowie verbesserte Benutzerschnittstellen und gemeinsame Codes erleichtern damit einerseits die interdisziplinäre Zusammenarbeit, anderseits ermöglichen sie Making  – das kreative Verstehen – Vernetzen – Verantworten 39ii“proceedings” — 2017/9/17 — 20:19 — page 40 — #40iiiiiiGestalten mittels digitaler Werkzeuge und -stoffe : Wie wäre es wohl, wenn beispielsweise Lehrende  nicht die (didaktischen) Medien und Werkzeuge nutzen müssten , die ihnen  angeboten w erden , sondern sie diese selbst  gestalten könnten?  5 De-Sign: Verantworten? Gestalten!  Wir sollten uns ein Beispiel an digital er T echnik nehmen  und – wie vorliegend beschrieben – auch selbst Grenzen  überwinden, uns neu vernetzen und dadurch Tradiertes  re-form ieren.  Routinierte Abläufe und Gewohnheiten sind f ür uns Menschen zwar wesentlich, denn trainierte Handlungsweisen und -abläufe benötigen keine weitere Aufmerksamkeit mehr und ermöglichen die Konzentration auf die wesentlichen Dinge: Nahmen das Schleifpunkt suchen  sowie „Spiegel, Blinker , Schulter“ früher unsere ganze Konzentration in Anspruch, beherrschen  wir diese Handlungen heute ganz nebenbei. Nicht selten jedoch stehen just jene tradierte n Handlungspraxen einem Weiterkommen im Weg , wie der fünfte fraMediale -Band am Beispiel des digitalen Wandels in Bildungseinrichtungen  zeigt  [Kn16d] . Zu r Illustration  ein kleines Experiment: Bitte falten Sie Ihre Hände. Prüfen  Sie bitte, ob bei Ihnen der rechte oder der linke Daumen oben liegt. Nehmen Sie nun die Hände wieder auseinander. Bitte falten Sie nun noch einma l Ihre Hände, aber nun absichtlich so, dass Ihr anderer  Daumen oben liegt. Was Sie nun spüren, ist die Macht der Gewohnheit  und damit erhalten wir einen vagen Eindruck  davon , warum digitale Medien so schwer Eingang in Schule und Hochschule finden. Was ist zu tun?  5.1 Schule erneue rn: Kooperation und Making  Die Medienpädagogik formuliert nicht nur gut begründete Anforderungen zur Notwendigkeit eines Lernens über Medien an Schule n [Kn16b] , sondern kann gleichermaßen auch aktivierende und kreative  Zugänge für das Lernen mit Medien , die Förderung von Medienbildung  und informatische r Bildung anbieten. Hilfreich hierfür wäre die Infragestellung der traditionellen Grenze zwischen der Institution Schule und der außerschulischen Medien  (projekt -) arbeit – die bisher kaum  zu überwindende Demarkationslinie zwischen formalen, non -formalen und informellen Bildungskontexten. Durch medienpädagogische Projektarbeit und Aktive  Medienarbeit nach subjekt - und handlungsorientierten Ansätzen , wie sie u.  a. Bernd Schorb [S c95], Dieter  Baacke [B a96] und Gerd  Tulodziecki [Tu97] propagieren, wird die Chance eröffnet , digitale Medien als Verbindungsglied für etwas zu nutzen, was nicht unbedingt voneinander getrennt sein muss: die Lebenswelt der Schülerinnen und Schüler und das (schulische)  Lernen. Hiermit würde nicht nur die Rolle der Schule als Lebens raum befördert, sondern den Schülerinnen und Schülern  könnten  neue anknüpfbare Erfahrungsräume bereitgestellt  werden  [Ni04; Wa16]. Wie ich in anderen Arbeiten umfassender untersuchte und ausfü hrte [ Kn15a; Kn16c; Kn17], können  beispielsweise 40 Thomas Knausii“proceedings” — 2017/9/17 — 20:19 — page 41 — #41iiiiiiaktivierende und lebensweltverbindende Potential e digitaler Medien schon heute in der Schule genutzt werden; technische und gesellschaftliche Entwicklungen ermöglichen einerseits, erfordern anderseits aber mitunter auch, bestehende organisatorische Grenzen wie tradierte Stundentaktungen, Fächergrenzen und Raumkonzepte infrage zu stellen und neu zu denken.  5.2 Gemeinsam Gesellschaft gestalten: Medienbildung ist nicht genug  Medienbildung zielt auf die Bildung des Subjekts. Sie soll umfassend sein , das mediengebildete Subjekt ist und bleibt in einer digital vernetzen  Welt [GI16] relevant. Doch zunehmend liegt es nicht mehr nur in der Hand der oder des Einzelnen, Kontrolle  über die eigenen (personenbezogenen) Daten z u behalten. Eine Person kann sich noch so überlegt im WWW und in Sozialen Netzwerken  bewegen: Wenn unscheinbare Apps  persönliche Daten sammeln – wer liest schon die lange n Nutzungsvereinbarungen (die sich mit jedem Update ändern können) – ist es mit der  „Datensouveränität“ passé . Auch wenn ein Nutzer  im Adressbuch eines anderen WhatsApp -Kontakts gespeichert ist, kann das jeweilige  Individu um nicht mehr souverän  und fallbezogen entscheiden, ob die Speicherung und Weitergabe persönliche r Daten erfolgen darf – respektive einschätzen, ob eine solche Entscheidung überhaupt möglich ist. Ergänzend  zur subjektiven Medienbildung sollte ein gesellschaftliche r Diskurs  darüber  stattfinden , was Technik und global operierende beziehungsweise  vernetzte Unternehmen dürfen. Der Diskurs muss in Regeln und (Selbst -) Verpflichtungen – oder allgemein: Normen – möglichst transparent und nachvollziehbar kodifiziert werden. Da das Netz und darin operierende Unterneh men Staaten grenzen überwinden, sollten auch diese Normen grenzübergr eifend  gedacht, diskutiert und vereinbart werden.  Medienkompetenz  ist ein Begriff, der in seiner traditionellen Auffassung recht wenig mit Technik zu tun hatte [Sc07 ] und der interessanterweise heute im Alltagsverständnis nicht selten sogar ausschließlich auf technische Fertigkeiten verkürzt  wird [Kn16b ]. Dabei ging es doch Dieter Baacke, der den Begriff in Anlehnung an das Kompetenzkonzept von Noam Chomsky und die Arbeiten von Karl -Otto Apel und Jürgen Habermas prägte, nicht um die Technik, die Geräte oder  die Medien, sondern um Kommunikation und Kooperation  [Ba73; Ba96 ]. Die Fähigkeit eines Menschen  also, Medien, (digitale) Werkzeuge und Technik im Allgemeinen souverän für eigene Ziele und Bedürfnisse zu nutzen und selbst -, medien - und gesellschaftsbezogen  zu reflektieren, kreativ und partizipativ zu handeln sowie analytisch und strukturell Wissen zu erwerben [Ba96]. So geht es auch heute nicht um Technik , sondern um die Frage, wie und wozu wir digitale Werk zeuge , Werk stoffe  und Medien nutzen (wollen) und d amit im Wesentlichen noch immer  um Kommunikation  und Kooperation  – nur eben in ihrer digitalen Form. Da nun gerade digitale  Technik mehr ist als ein bloßer „Mittler“, sondern sie auch an der Herstellung  von (Medien -) Inhalten [Sc07] und Kommunikation [Ba07 ] beteiligt ist und selbst Interpretationen vornimmt [Kn16b] – wie seman tische Technologien und beispielhaft die „Antwortmaschine“ Wolfram|Alpha  –, rückt ein weiteres Ziel von Medienkompetenz in den Fokus der Betrachtung: die Kenntnis der technischen und Verstehen – Vernetzen – Verantworten 41ii“proceedings” — 2017/9/17 — 20:19 — page 42 — #42iiiiiiorganisatorischen Bedingungen  der Wissens - und Medienproduktion .  Wichtig ist also, dass idealerweise alle Menschen in der Lage sind, die Technik selbst, die Algorithmen, auf deren Grundlage sie arbeitet, sowie generell Prozesse der Entstehung und Reprodukt ion von Wissen zumindest grundlegend nachzuvollziehen  [Kn16b ]. Nur wer über die Kenntnis verfügt, was hinter der Benutzerschnittstelle – hinter dem Inter face der Maschine – vor sich geht, kann kompetent rezipieren und souverän kommunizieren . Daher gehören zu einer umfassenden Medien kompetenz  ein konzeptionelles Technikverständnis und mindestens grundlegende Aspekte informatischer Bildung [ GI16; KM16; Kn16b; Sc16] . Im Sinne der zuvor geforderten Grenzüberwindungen sollten daher Medienbildung und informatisch e Bildung in geeigneter Form [Re15; He16; Sc16; Tu16b ] miteinander verbunden werden. Exemplarisch möchte ich im Folgenden auf zwei aktuelle Entwicklungen hinweisen, die Medienbildung und informatische Bildung „gemeinsam denken“.  5.3 Gemeinsam weiterdenken: Dagstuhl -Erklärung  zum Verhältnis von informatischer Bildung und Medienbildung  Die Dagstuhl -Erklärung  2016 wurde von Informatikerinnen und Informatikern sowie Medienpädagoginnen und Medienpädagogen gemeinsam  verfasst [GI16]. Von beiden Seiten wurde d ie Redakt ion des Dokuments  als herausfordernd beschrieben und auch nach seiner Veröffentlichung wird es weiter diskutiert und kritisiert – das muss  so sein, denn dies  ist wesentliches Kennzeichen von Wissenschaft. Die Definition eines gemeinsamen Gegenstands – auch  wenn dieser als Hashtag  in den Communities nicht nur Zustimmung findet (vgl. Kapitel 1) – und das Aufeinanderzubewegen  fanden einen überfälligen und guten Anfang. Im Juli 2017 wird der gemeinsame Austausch zwischen Informatik und Medienpädagogik im Rahmen  einer Klausurtagung zum „Verhältnis von Medienbildung und informatischer Bildung: Dagstuhl -Dreieck in progress “ [KB17] im FTzM in Frankfurt am Main fortgesetzt.  5.4 Gemeinsam Potentiale des Digitalen nutzen: KMK -Strategie zu r „Bildung in der digitalen Welt“  Ein weiteres aktuelles Beispiel für das gemeinsame Weiterdenken von informatischer Bildung und Medienbildung findet sich in der Strategie der Kultusministerkonferenz (KMK) zur „Bildung in der digitalen Welt“ [KM16 ], die am 8. Dezember 2016 in Berlin beschlo ssen und deren Entwurf seitens der Fachgruppe Schule der GMK3, der Initiative KBoM!4 und der Sektion Medienpädagogik der DGfE5 kritisch kommentiert wurde [GM16; KB16]. Unsere wesentlichen Kritikpunkte waren die Verwendung eines                                                          3 GMK: Gesellschaft für Medienpädagogik und Kommunikationskultur, http://www.gmk -net.de  4 KBoM!: Initiative Keine Bildung ohne Medien, http://www.keine -bildung -ohne -medien.de/ ; siehe auch Veröffentlichungen u.  a. von Horst Niesyto zum Wirken und den Zielen der Initiative [Ni16]  5 DGfE: Deutsche Gesellschaft für Erziehungswissenschaft, http://www.dgfe.de  42 Thomas Knausii“proceedings” — 2017/9/17 — 20:19 — page 43 — #43iiiiiiunklaren und funktionalistis chen Bildungsbegriffs sowie die schwerlich nachvollziehbare Tatsache, dass die jüngste Erklärung hinter den Zi elen des ausgefeilten Papiers zu „Medienbildung in der Schule “ aus dem Jahr 2012 zurückblieb. Seitens des GI-Fachbereichs Informatik und Ausbildun g/Didaktik der Informatik  (IAD) wurde kritisiert, dass „eine Beschränkung auf die Nutzung digitaler Medien in allen Unterrichtsfächern bedeuten [würde], die digitale Welt so zu akzeptieren, wie sie jetzt ist, und deren Weiterentwicklung a nderen zu überlass en. Schule muss aber zu gesellschaftlicher Teilhabe befähigen“ [Br16].  Was an der neuen KMK -Erklärung als sehr positiv bewertet werden kann, ist die Tatsache, dass erstmals  ein Papier  der KMK zur Vorab -Kommentierung veröffentlicht wurde. Das heißt, die Er klärung behandelt nicht nur im gegenständlichen Sinne die Herausforderungen, die digitale Technik an die Gesellschaft und das Bildungssystem stellt, sondern die Kultusministerkonferenz  nutzte mit dem vorherigen Einbezug der Fachgesellschaften auch das Potential, die digitale Technik zur Organisation kollaborativer und partizipativer Prozesse bietet . Dies erscheint mir in Anbetracht vieler weiterer komplexer Aufgaben, die eine fachübergreifende  Expertise und transnationale  Beteiligung erfordern, als ein klug er und weiterhin verfolgungswürdiger Weg.  Literaturverzeichnis  [Ar65]  Arnheim, Rudolf; Bock, Henning: Kunst und Sehen. Eine Psychologie des schöpferischen Auges (Art and visual perception). De Gruyter, Berlin, 1965.  [Aß16]  Aßmann, Sandra; Brüggen, Niels; Dander, Valentin; Gapski, Harald; Sieben, Gerda; Tillmann, Angela; Zorn, Isabel: Digitale Datenerhebung und -verwertung als Herausforderung für Medienbildung und Gesellschaft. In  (Brüggemann, Marion; Knaus, Thomas; Meister, Dorothee, Hrsg.): Kommunikations kulturen in digitalen Welten. kopaed, München, S. 131 -139, 2016 . [Ba07]  Baecker, Dirk: Studien zur nächsten Gesellschaft. Suhrkamp, Frankfurt am Main , 2007 . [Ba17]  Bastian, Jasmin; Feldhoff, Tobias; Harring, Marius: Call for Papers zum Themenheft „ ‚Digita le Bildung ‘. Medienbezogene Bildungskonzepte für die ‚nächste Gesellschaft ‘“, http://medienpaed.com/public/journals/1/cfps/CfP  _Digitale_Bildung.pdf, 02.05.17   [Ba73]  Baacke, Dieter: Kommunikation und Kompetenz. Grundlegung einer Didaktik der Kommunikatio n und ihrer Medien . Juventa,  München , 1973 . [Ba96]  Baacke, Dieter: Medienpädagogik. Grundlagen der Medienkommunikation (Bd. 1). Niemeyer , Tübingen,  1996 . Verstehen – Vernetzen – Verantworten 43ii“proceedings” — 2017/9/17 — 20:19 — page 44 — #44iiiiii[Be02]  Benjamin, Walter: Medienästhetische Schriften (darin: Das Kunstwerk im Zeitalter seiner techn ischen Reproduzierbarkeit).  Suhrkamp, Frankfurt am Main, 351-383, 2002 . [Bl69]  Blumer, Herbert: Symbolic interactionism: Perspective and method.  Prentice -Hall,  New Jersey (USA) , 1969 . [Br16]  Brinda, Torsten: GI kritisiert reduzierten Bildungsbegriff der KMK: Informatik muss in Bildungsstrategie für die digitale Welt integriert werden (25. Juli 2016) , https://www.gi.de/aktuelles/meldungen/detailansicht/article/gi -kritisiert -reduzierten -bildungsbegriff -der-kmk-informatik -muss -in-bildungsstrategie -fuer-die-dig.html, 02.05.201 7. [Br17]  Brinda, Torsten; Diethelm, Ira; Kommer, Sven; Rummler, Klaus: Call for Papers zum Themenheft „Medienpädagogik und Didaktik der Informatik. Eine Momentaufnahme disziplinärer Bezüge und schulpraktischer Entwicklungen“, http://med ienpaed.com/public/journals/1/cfps/CfP_Medienpaedagogik_und_Informatik.pdf, 02.05.17 . [Ca14]  Carstensen, Tanja ; Schachtner, Christina ; Schelhowe, Heidi ; Beer, Raphael: Subjektkonstruktionen im Kontext digitaler Medien. In  (Carstensen, Tanja ; Schachtner, C hristina ; Schelhowe, Heidi ; Beer, Raphael , Hrsg. ): Digitale Subjekte, Transcript, Bielefeld , 2014 . [Co72]  Cooley, Charles Horton: Social Organization. A Study Of The Larger Mind. Schoken Books, New York , 1972 . [Ge80]  Geulen, Dieter ; Hurrelmann, Klaus: Zu r Programmatik einer umfassenden Sozialisationstheorie. In  (Hurrelmann, Klaus ; Ulich, Dieter , Hrsg.): Handbuch Sozialisationsforschung, Beltz, Weinheim, 51 -67, 1980.  [GI16]  GI – Gesellschaft für Informatik  (2016) , Bildung in der digitalen vernetzten Welt (Dagstuhl -Erklärung) : https://www.gi.de/aktuelles/meldungen/  detailansicht/article/dagstuhl -erklaerung -bildung -in-der-digitalen -vernetzten -welt.html, 14.07.2016.  [GM16] GMK – Gesellschaft für Medienpädagogik und Kommunikationskultur : Stellungnahme der FG Schule der GMK zum Strategiepapier der Kultusministerkonferenz vom 12. Mai 2016 zu „Bildung in der digitalen Welt “, http://www.gmk -net.de/fileadmin/pdf/GMK -Stellungnahme_zum_KMK -Strategie -Entwurf.pdf , 02.05.2017 . [Go99]  Goethe, Johann Wolfgang von: Poetis che Werke  (Bd. 5 ), Phaidon Verlag , Essen, 1999.  44 Thomas Knausii“proceedings” — 2017/9/17 — 20:19 — page 45 — #45iiiiii[He16]  Herzig, Bardo: Medienbildung und Informatische Bildung – Interdisziplinäre Spurensuche. MedienPädagogik  25/16, 59-79, 2016, http://www.medienpaed.com/article/view/428 , 02.05.2017. [Ho10]  Hoffmann, D agmar ; Mikos, Lothar: Mediensozialisationstheorien – Modelle und Ansätze in der Diskussion. VS, Wiesbaden , 2010 . [Hu06]  Hurrelmann, Klaus: Einführung in die Sozialisationstheorie. Beltz, Weinheim , 2006 . [Hu08]  Hurrelmann, Klaus ; Grundmann, Matthias ; Walp er, Sabine: Handbuch Sozialisationsforschung . Beltz , Weinheim,  2008 . [Je06]  Jenkins, Henry: Convergence Culture. Where Old and New Media Collide. New York University Press , New York, 2006 . [KB16]  KBoM – Keine Bildung ohne Medien  (2016) : Stellungnahme der  Initiative Keine Bildung ohne Medien – KBoM! zum Strategiepapier der Kultusministerkonferenz vom 12. Mai 2016 zu „Bildung in der digitalen Welt “, http://www.keine -bildung -ohne -medien.de/publications/stellungnahme -zum-kmk-strategiepapier -bildung -in-der-digitalen -welt, 02.05.2017.  [KB17]  KBoM – Keine Bildung ohne Medien  (2017) : Klausurtagung zum Verhältnis von informatischer Bildung und Medienbildung im Juli 2017 – Dagstuhl -Dreieck in progress (Tagungsankündigung) , http://ftzm.de/medienbildung/klausurtag -zum-verhaeltnis -von-informatischer -bildung -und-medienbildung, 21.05.2017.  [Ke06]  Keil, Reinhard: Zur Rolle interaktiver Medien in der Bildung. In  (Keil, Reinhard ; Schubert, Detlef , Hrsg. ): Lernstätten im Wandel – Innovation und Alltag in der Bildung. Waxman n, Münster , 59-77, 2006 . [Ke17]  Keiner, Edwin: Didaktik – Bildung – Technik – Kritik. Medienpädagogik und Antinomien der Moderne. MedienP ädagogik  27/17, 270 -286, 2017, http://www.medienpaed.com/issue/view/33 , 02.05.2017.  [KM16] KMK – Kultusministerkonfer enz (2016) : Bildung in der digitalen Welt , https://www.kmk.org/fileadmin/Dateien/pdf/PresseUndAktuelles/2016/Bildung_digitale_Welt_Webversion.pdf, 10.12.2016.  [Kn09]  Knaus, Thomas: Kommunigrafie. kopaed, München , 2009 . [Kn15a]  Knaus, Thomas: Me, my Tablet  – and Us. Vom Mythos eines Motivationsgenerators zum vernetzten Lernwerkzeug für autonomopoietisches Lernen. In  (Friedrich, Katja ; Siller, Friederike ; Treber, Albert , Hrsg.): Smart und mobil – Digitale Kommunikation als Herausforderung für Bildung, Pädago gik und Politik. kopaed,  München,  17-42, 2015 .  Verstehen – Vernetzen – Verantworten 45ii“proceedings” — 2017/9/17 — 20:19 — page 46 — #46iiiiii[Kn15b]  Knaus, Thomas ; Engel, Olga: (Auch) auf das Werkzeug kommt es an – Technikhistorische und techniktheoretische Annäherungen an den Werkzeugbegriff in der Medienpädagogik. In  (Knaus, Thomas ; Engel, Olga , Hrsg.): fraMediale – digitale Medien in Bildungseinrichtungen (Bd. 4). kopaed, München, 15-57, 2015 . [Kn16a]  Knaus, Thomas: Potentiale des Digitalen – Theoretisch -konzeptionelle Betrachtungen pädagogischer und didaktischer Potentiale des schulischen Einsa tzes von Tablets und BYOD. medien+erziehung: schule. smart. mobil 60/16, 33-39, 2016 . [Kn16b]  Knaus, Thomas: digital – medial – egal? – Ein fiktives Streitgespräch um digitale Bildung und omnipräsente Adjektive in der aktuellen Bildungsdebatte. In (Brüggem ann, Marion ; Knaus, Thomas ; Meister, Dorothee , Hrsg.): Kommunikationskulturen in digitalen Welten. kopaed, München, 99-130, 2016 . [Kn16c]  Knaus, Thomas: Kooperatives Lernen. Begründungen – digitale Potentiale – konzeptionelle Perspektiven. In  (Scheer, Augu st Wilhelm ; Wachter, Christian Hrsg.): Perspektiven für die digitale Weiterbildung – Bildungslandschaften der Zukunft. IMC AG, Saarbrücken, 141-155, 2016 . [Kn16d]  Knaus, Thomas ; Engel, Olga: Wi(e)derstände – Digitaler Wandel in Bildungseinrichtungen (Bd. 5  der fraMediale -Reihe). kopaed , München, 2016.  [Kn17]  Knaus, Thomas: Pädagogik des Digitalen – Phänomene – Potentiale – Perspektiven. In  (Eder, Sabine ; Micat, Claudia ; Tillmann, Angela , Hrsg.): Software takes command, kopaed , München, 2017 . [Kr98]  Krotz, Friedrich: Digitalisierte Medienkommunikation: Veränderungen interpersonaler und öffentlicher Kommunikation . In (Neverla, Irene , Hrsg.): Das Netz -Medium. Kommunikationswissenschaftliche Aspekte eines Mediums in Entwicklung , Westdeutscher Verlag, Opladen, 113-136, 1998.  [Kr16]  Krotz, Friedrich: Wandel von sozialen Beziehungen, Kommunikationskultur und Medienpädagogik – Thesen aus der Perspektive des Mediatisierungsansatzes. In  (Brüggemann, Marion ; Knaus, Thomas ; Meister, Dorothee M. , Hrsg. ): Kommunikationskulturen in digitalen Welten. kopaed, München, 19-42, 2016 . [La93]  Latour , Bruno : Der Berliner Schlüssel. Erkundungen eines Liebhabers der Wissenschaften ( La clef de Berlin et autres leçons d‘un amateur de sciences ). Akademie -Verlag , Berl in, 1996.  [Ma01]  Manovich, Lev: The Language of New Media: MIT Press , Cambridge, 2001.  [Ma08]  Manovich, Lev: Software takes Command , www.softwarestudies.com/softbook , 02.05.2017.  46 Thomas Knausii“proceedings” — 2017/9/17 — 20:19 — page 47 — #47iiiiii[Mc68]  McLuhan, Marshall: Die Gutenberg Galaxis: Das Ende des Buchzeitalte rs. Econ, Düsseldorf , 1968 . [Me73]  Mead, George Herbert: Geist, Identität und Gesellschaft. Suhrkamp, Frankfurt am Main , 1973.  [MP14]  MPFS – Medienpädagogischer Forschungsverbund Südwest: KIM 2014 – Kinder + Medien, Computer + Internet. MPFS, Stuttgart , 2014. [MP16]  MPFS – Medienpädagogischer Forschungsverbund Südwest: JIM 2016 – Jugend, Information, (Multi -) Media: MPFS , Stuttgart, 2016 . [Na92]  Nake, Frieder: Informatik und die Maschinisierung von Kopfarbeit. In (Coy, Wolfgang; Nake, Frieder; Pflüger, Jö rg-Martin; Rolf, Arno; Seetzen, Jürgen; Siefkes, Dirk; Stransfeld, Reinhard , Hrsg. ): Sichtweisen der Informatik.  Vieweg, Braunschweig , 181-201, 1992 . [Ni04]  Niesyto, Horst: Öffnung von Schule und partnerschaftliche Kooperation. Zur Zusammenarbeit von schul ischer und außerschulischer Medienarbeit. In (Pöttinger, Ida; Schill, Wolfgang; Thiele, Günter , Hrsg. ): Medienbildung im Doppelpack. kopaed, München, 39 -49, 2004.  [Ni16]  Niesyto, Horst: Keine Bildung ohne Medien! – Kritische Medienbildung jenseits funktio neller Vereinnahmung. In  (Knaus, Thomas ; Engel, Olga , Hrsg. ): Wi(e)derstände – Digitaler Wandel in Bildungseinrichtungen (Bd. 5 der fraMediale -Reihe). kopaed, München, 17-34, 2016 . [Re15]  Reiter, Anton (2015): Medienbildung und informatische Bildung , http://medienimpulse .at/articles/view/795 , 02.05.2017. [Sc07]  Schelhowe, Heidi: Technologie, Imagination und Lernen – Grundlagen für Bildungsprozesse mit Digitalen Medien . Waxmann , Münster, 2007 . [Sc14]  Schachtner, Christina ; Duller, Nicole: Kommunikationsor t Internet. Digitale Praktiken und Subjektwerdung. In (Carstensen, Tanja ; Schachtner, Christina ; Schelhowe, Heidi ; Beer, Raphael , Hrsg.): Digitale Subjekte . Transcript , Bielefeld,  81-154, 2014.  [Sc16]  Schelhowe, Heidi (2016): Through the Interface – Medie nbildung in der digitalisierten Kultur. MedienPädagogik  25/16, 41-58, 2016,  http://www.medienpaed.com/article/view/427/426, 02.05.2017.  [Sc95]  Schorb, Bernd: Medienalltag und Handeln. Medienpädagogik in Geschichte, Forschung und Praxis. Leske+Budrich , Opladen, 1995 . [Sc97]  Schelhowe, Heidi: Das Medium aus der Maschine. Zur Metamorphose des Computers. Campus, Frankfurt am Main , 1997 . Verstehen – Vernetzen – Verantworten 47ii“proceedings” — 2017/9/17 — 20:19 — page 48 — #48iiiiii[Sp13]  Spanhel, Dieter (2013): Sozialisation in mediatisierten Lebenswelten – Grundzüge eines theoretischen Bezugsrahmens.  merz -Wissenschaft  57.6/13, 30 -43, 2013 . [Su99]  Sutter, Tilmann : Systeme und Subjektstrukturen. Zur Konstitutionstheorie des interaktionistischen Konstruktivismus. VS, Wiesbaden , 1999 . [Tu16a]  Tulodziecki, Gerhard: Aktuelle Debatten beim GMK -Forum 2015 i m „Rückspiegel“. In  (Brüggemann, Marion ; Knaus, Thomas ; Meister, Dorothee , Hrsg.): Kommunikationskulturen in digitalen Welten – Konzepte und Strategien der Medienpädagogik und Medienbildung. kopaed, München, 83-98, 2016 . [Tu16b] Tulodziecki, Gerhard: Konk urrenz oder Kooperation? Zur Entwicklung des Verhältnisses von Medienbildung und informatischer Bildung.  MedienPädagogik  25/16, 7-25, 2016, http://www.medienpaed.com/article/view/428 , 02.05.2017.  [Tu97]  Tulodziecki, Gerhard: Medien in Erziehung und Bildu ng. Klinkhardt, Bad Heilbrunn,  1997 . [Vo10]  Vollbrecht, Ralf ; Wegener, Claudia: Handbuch Mediensozialisation. VS, Wiesbaden , 2010.  [Wa16]  Wagner, Ulrike ; Ring, Sebastian: Organisierte Wildnis – Kooperation von außerschulischer und schulischer Medienpädag ogik. In  (Knaus, Thomas ; Engel, Olga , Hrsg.): Wi(e)derstände – Digitaler Wandel in Bildungseinrichtungen (Bd. 5 der fraMediale -Reihe). kopaed, München, 139-149, 2016 . [We98] Wenger, Etienne: Communities of Practice: Learning, Meaning, and Identity. Cambrid ge University Press, Cambridge (UK) , 1998.  [Wi02]  Winkler, Hartmut: Das Modell. Diskurse, Aufschreibesysteme, Technik, Monumente – Entwurf für eine Theorie kultureller Kontinuierung. In  (Pompe, Hedwig ; Scholz, Leander , Hrsg.): Archivprozesse. Die Kommunika tion der Aufbewahrung. Dumont, Köln, 297-315, 2002 . Lizenz  Dieser Beitrag steht mit dem Einverständnis des Verlags unter folgender Creative Commons Lizenz: CC -BY 3.0 (https://creativecommons.org/licenses/by/3.0/de/) und darf unter den Bedingungen dieser freien Lizenz genutzt werden.   48 Thomas Knausii“proceedings” — 2017/9/17 — 20:19 — page 49 — #49iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 11Calliope mini - Informatik zum Anfassen fürGrundschülerInnenStephan Noller1Abstract: Im Vortrag wird der Gründer und Erﬁnder von Calliope mini über die Motivation derLeute hinter dem Projekt sprechen und versuchen die Frage zu beantworten, warum es sinnvoll ist,Kindern schon in der Grundschule das Programmieren beizubringen. Ausserdem wird ausführlichdarauf eingegangen, inwiefern mit Calliope mini das Ziel der Förderung von digital literacy erreichtwerden kann.Keywords: Grundschule; Calliope; Digital Literacy1Calliope gemeinnützige GmbH, Linienstraße 52, 10119 Berlin, Deutschland, info@calliope.ccI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 49ii“proceedings” — 2017/9/17 — 20:19 — page 50 — #50iiiiiiii“proceedings” — 2017/9/17 — 20:19 — page 51 — #51iiiiiiVorträgeii“proceedings” — 2017/9/17 — 20:19 — page 52 — #52iiiiiiii“proceedings” — 2017/9/17 — 20:19 — page 53 — #53iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017     15 Zieldimensionen für frühe informatische Bildung im Kindergarten und in der Grundschule  Nadine Bergner1, Hilde Köster2, Johannes Magenheim3, Kathrin Müller3, Ralf Romei-ke4, Ulrik Schroeder1 und Carsten Schulte3  Abstract:  Dieser Artikel stellt die Grundlage n und wesentlichen Ergebnisse  einer Expertise für die Stiftung Haus der kleinen Forscher e. V. zum Thema informatische Bildung in Kita und Grund-schule vor. Hierzu wurde zunächst eine bildungstheoretisch orientierte Analyse hinsichtlich des Kerns der Fachwi ssenschaft Informatik durchgeführt. Basierend hierauf wie auch auf weiteren Analysen der Potenziale und Lebensumstände der Kinder sowie entsprechender internationaler Curricula für die Primarstufe werden Kompetenzbereiche zur frühen informatischen Bildung erarbeitet. Dazu wird auf den Rahmen der GI -Standards für die Sekundarstufen zurückgegriffen, die für die Zielgruppe der Kita - und Grundschulkinder um den weiteren Prozessbereich „ P0 - Interagieren und Explorieren“  erweitert werden. Anschließend werden aus  dem so erweiterten Rahmen vier Kombinationen von Prozess - und Inhaltsbereichen besonders im Hinblick auf deren allgemeinbildende Bedeutung als förderwürdig vorgeschlagen. Ergänzt werden sie um Empfeh-lungen und Vorschläge für die praktische Umsetzung sowie  Ansätze für weiterführende For-schungsfragen.  Keywords:  Frühe informatische Bildung, Grundschule, Kindergarten , Kita, Allgemeinbildung  1 Einleitung  Viele Kinder in Deutschland wachsen zurzeit mit großartigen Möglichkeiten und Per-spektiven auf. Eine im Alltag  wirkmächtige, derzeit aber im Bildungssystem nicht in dem Ausmaß widergespiegelte Ursache sind die Veränderungen  durch die Digitalisie-rung, die derzeit alle Lebensbereiche erfasst und transformiert. Sie führt dazu, dass grundsätzlich Daten aller digitalis ierbaren Lebensbereiche zu geringen Kosten maschi-nell erfasst, gespeichert, verarbeitet, übermittelt und verbreitet werden können. Durch die damit einhergehende enorme Steigerung der Verfügbarkeit von Information ergeben sich weitreichende Möglichkeiten un d Herausforderungen für die Gesellschaft.  Derzeit ist noch unklar , wie auf diese umfassende n Veränderung en am besten reagiert werden  kann. Die Autoren dieses Beitrags haben in einer  Expertise für die Stiftung Haus der kleinen Forscher e. V . (HdkF) anhand t heoretischer Überlegungen, de n Blick in 1 RWTH Aachen, Lerntechn ologien & Didaktik der Informatik , Ahornstraße 55, 52074 Aachen, [bergner, schroeder ]@informatik.rwth -aachen.de  2 FU Berlin, Grundschulpädagogik, Habelschwerdter Allee 45, 14195 Berlin, hilde.koester@fu -berlin.de  3 Universität Paderborn, Institut für Infor matik, Fürstenallee 11, 33102 Paderborn , [Johannes.Magenheim, Kathrin.Mueller, Carsten.Schulte]@uni -paderborn.de  4 FAU Erlangen -Nürnberg, Didaktik der Informatik, Martensstr. 3, 91058 Erlangen, ralf.romeike@fau.de                                                             I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 53ii“proceedings” — 2017/9/17 — 20:19 — page 54 — #54iiiiii 16    Nadine Bergner  et al.   verglei chbare Länder und deren Ansätze  sowie der Analyse verschiedener Praxisprojekte und des Forschungsstands in der Didaktik der Informatik  untersucht , welchen Beitrag die informatische Bildung zu einer zeitgemäßen  und zukunftssicheren Bildung in Kinderta-gesstätten und Grundschulen  leisten kann.  Im vorliegenden Beitrag sollen die wichtigs-ten Erkenntnisse hierzu vorgestellt werden.  Aus unserer vor allem informatikdidaktisch geprägten Sichtweise ist klar: Die neuen digitalen Medien sind nicht nur eine weitere Erscheinungsform im Alltag der Kinder, sie stellen vielmehr einen neuen und eigenständigen  Bildungsbereich  dar. Zentrales Ziel dieses neuen Bildungsbereichs bzw. dieser neuen Perspektive ist das eigenständige, verantwortungsvolle Handeln in einer digital geprägten Lebenswirklichkeit. Um dieses zu erreichen, bedarf es der Kenntnis der grundlegenden Funktionsprinzipien und Wir-kungsweisen digitaler Technologien , da diese – im wahrsten Sinne des Wortes – sonst zwar  oberflächlich genutzt, aber nur unzureichend erschlossen, (mit -)gestaltet und be-wertet werden  können . 2 Analysen der Ausgangslage  2.1 Analyse und Beschreibung der Fachwissenschaft Informatik  Wie ist Informatik darzustellen , um Kindern  in der frühen Bildung die notw endigen Grundlagen und ein adäquates Bild zu vermitteln? Informatik wird auch heute noch als die Wissenschaft der automatischen Informationsverarbeitung definiert  [GI16]. Sie hat ihre Wurzeln  in der Mathematik und den Ingenieurwissenschaft en, ähnelt in den  Metho-den und Fragestellungen aber auch den  Naturwissenschaften [TA13].  Wir nehmen  vor allem die ingenieurwissenschaftliche  Perspektive der Informatik als eine konstruierende Wissenschaft  auf, die sich im Kern mit Fragen rund um und über die Konstruktion  von digitalen Artefakten – Hardware und Software – beschäftigt. Für Bildung sind vor allem die grundsätzlichen Fragen interessant, wie diese Konstruktion im Prinzip vonstattengeht, was das eigentlich ist, was konstruiert wird und wie dadurch das Leben des  Einzelnen und der gesamten Gesellschaft beeinflusst wird. Ziel der In-formatik ist es  zunächst vor allem , effiziente auf digitalen Artefakten ausführbare Algo-rithmen zu entwickeln, die Abläufe automatisieren und Daten transformieren.  In der Fachdidaktik  entwickelte sich rasch ein Konsens, dass das Lösen realweltlicher Probleme im Mittelpunkt stehen  sollte . Diese Orientierung wird auch als Modellieren im Gegensatz zum Programmieren bezeichnet . Für die Modellierung – also vor allem die Schritte der Analyse u nd des Entwurfs – bedeutet das Folgendes: Ausgangspunkt ist eine bestimmte (Problem -)Situation. Diese muss zunächst hinsichtlich eines Zwecks abge-grenzt und verallgemeinert werden, denn (nur) verallgemeinerte und damit wiederkeh-rende Aspekte einer Situatio n lassen sich sinnvoll automatisieren, weil die Lösung dann auch wiederkehrend eingesetzt werden kann. Entscheidend ist nun der Unterschied zwi-54 Nadine Bergner et al.ii“proceedings” — 2017/9/17 — 20:19 — page 55 — #55iiiiii Der Kurzt itel des Beitrags    17 schen der realen Welt und der Modellwelt. In der realen Welt ist meist intuitiv klar, worum es sich bei einem Geg enstand oder einer Erscheinung handelt, doch die genaue Grenzziehung fällt oft schwer: Wo fängt beispielsweise der Berg an und wo hört das Tal auf? Idealtypen zu beschreiben ist meist leicht, aber es gibt immer wieder Unschärfen. Z.B.: Ab welcher Anzahl ne nnen wir eine Ansammlung von Bäumen Wald? In der Mo-dell-Welt bzw. der informatischen Welt müssen alle diese Unschärfen auf eindeutige Aussagen bezogen werden können. Dieses Zurückführen ist Grundvoraussetzung für Digitalisierung und Automation. In der info rmatischen Konstruktion wird also eine Ein-deutigkeit hergestellt, die nicht immer so gegeben ist. In der Entwicklung werden hier Entscheidung en getroffen, die oft aus rein s oftwaretechnischer Sicht relativ egal sind – etwa wie groß das n ist, ab dem man vo n Wald spricht. Aus Anwenderperspektive kann das durchaus sehr relevant sein, etwa, wenn Eigentümer für ‚Wald’ einen anderen Steu-ersatz als für eine Ansammlung von Bäumen bezahlen müssen.  Informatische Lösungen stellen also immer eine Eindeutigkeit her, d ie es ggf. vorher so nie gegeben hat. Sie tun dies immer zweckbezogen, und dieser Einsatzweck bedingt eine weitere wichtige Konsequenz: Eine Veränderung der Wirklichkeit, eine Wirkung, ist immer beabsichtigt. Die automatische Ausführung soll etwas neu scha ffen oder ersetzen – und damit wird das digitale Artefakt im Einsatz Teil der zuvor analysierten und antizi-pierten Wirklichkeit . Die Lösung kommt also prinzipiell immer zu spät: Wenn sie einge-setzt wird, gibt es die Situation gar nicht mehr, für die sie ei nmal entwickelt wurde. Das treibt einen Kreislauf aus sich verändernden Soft wareversionen an. Die (Weiter -) Ent-wicklung von Programmen bzw. digitalen Systemen und Infrastrukturen erfolgt in einer Ko-Evolution: Auf der einen Seite ausgelöst von sich verände rnden Bedingungen und neuen Ideen im Einsatzkontext, der sozialen Seite, und auf der anderen Seite ebenso getrieben von inner -technischen Anforderungen und Weiterentwicklungen. Digitale Systeme bzw. Informatiksysteme werden daher zunehmend als soziotechnis che Systeme aufgefasst [Ma08]. Für die Grundschule sollte daher ein Weg gefunden werden, diese Konstruktionsprozes-se verständlich zu machen . Dazu ist eine Möglichkeit das Gestalten (das nicht mit Pro-grammierung in eins gesetzt werden sollte), eine andere M öglichkeit ist die entsprechen-de Untersuchung fertiger Systeme , die Exploration  (vgl. [Kö06]). In der Expertise [Be17] werden diese beiden Zugangsweisen und ihre Wechselbeziehungen jeweils durch einen Ablauf von Handlungen und Lernprozesse n beschrieben (Ge staltungs - und Explo-rationskreis , vgl. auch [Sc17] ). 2.2 Potenziale und Lebensumstände der Kinder  Die Exploration eignet sich auch deshalb, weil Kinder auch in Kita - und Grundschulalter bereits über Nutzungserfahrungen verfügen und diese sinnvoll aufgegriffen werden kön-nen. Verschiedene  Studien zu Kindern in digitalen Welten belegen, dass Kinder zwar insgesamt selbstsicher mit Informatiksystemen agieren, dabei allerdings häufig die zu-grundeliegenden Prinzipien nicht kennen und daher auch die Konsequenzen ihres Han-Zieldimensionen für frühe informatische Bildung 55ii“proceedings” — 2017/9/17 — 20:19 — page 56 — #56iiiiii 18    Nadine Bergner  et al.   delns nicht immer richtig einschätzen können  (u.a. [DI17] ). Ferner ist ihre Mediennut-zung weitgehend konsumierend (Medienangebote im Web nutzen, Videos ansehen, spielen). Sie vernachlässigen d as mögliche konstruktive und kreative Potenzial , mit und innerhalb von Informatiksystemen Neues zu schaffen und sich ihre digitalen Welten individuell nützlich zu gestalten. Unserer Einschätzung nach könnte eine besondere Rolle von Schulen und ggf. auch Kindergärten darin bestehen, neben den vorherrschen-den konsumie renden Nutzungsaktivitäten weitere Interaktionsmöglichkeiten und –typen zu fördern und aufzuzeigen. Ferner könnten Interaktionen nicht nur isoliert und indivi-duell erlebt werden, sondern Informatiksysteme durch Eltern und Kinder zusammen gestaltet  werden, sodass die Erfahrungen dann auch versprachlicht, verarbeitet und al-tersgerecht reflektiert und eingeordnet werden können.  Untersuchungen zu lernpsychologischen Voraussetzungen sprechen dafür, dass informa-tische Bildung in Kindertagesstätten und in der Grun dschule sowohl sinnvoll als auch möglich ist  (bspw. [Sc01] oder [An13]). Die Kinder sind prinzipiell kognitiv dazu in der Lage, ausgewählte informatische Konzepte nachzuvollziehen, zu verstehen und umzu-setzen. Sie sind für informatische Aspekte zu begeiste rn und zwar Mädchen und Jungen gleichermaßen.  Auch wenn informatische Bildung für Kinder im Kindergarten - und Grundschulalter ein relativ junges Forschungsgebiet darstellt, existieren bereits verschiedene erprobte Zu-gänge, die Kinder motivieren und Kompet enzen der Informatik vermitteln können. Da-bei können Zugänge mit und ohne Informatiksystem  genutzt werden. Programmierbare Spielzeuge erlauben, Erfahrungen im kreativen, gestalterischen, programmierenden Umgang mit technischen Geräten zu sammeln  und diese dabei spielerisch zu erkunden. Alternativ stehen Mikrowelten und Entwicklungsumgebungen mit visuellen, block -orientierten Programmiersprachen zur Verfügung. Diese Alternativen bieten Kindern die Möglichkeit, frühzeitig die Phänomene der durch Informatiksys teme geprägten Welt aktiv zu erkunden und erste Schritte des informatischen Denkens zu erfahren.  Hinsicht-lich der Eignung für die verschiedenen Zielgruppen lassen sich Zugänge finden, die für Kinder im Kindergartenalter intendiert und erprobt sind (bspw. L ernmaterialen der frü-hen Bildung  zu logischem Denken oder Mathematik , Bücher  (z. B. [Liu 17]), Bee-Bot, ScratchJr) sowie Angebote  für Kinder ab dem Grundschulalter (häufig etwa ab 3. Klasse , bspw. CS Unplugged, Informatik -Biber, LEGO WeDo, Scratch, Schülerl abore). Aller-dings ist die Forschungslage hierzu als ungenügend zu bezeichnen, da die verschiedene n Erfahrungsberichte über den Praxiseinsatz allenfalls erste Hinweise zur Gestaltung und Wirkung informatischer Bildung in dieser Altersgruppe geben können.  2.3 Vergleich internationaler Curricula für die Primarstufe  Aktuell etablieren international einige fortschrittliche Bildungssysteme informatische Bildung in der Sekundarstufe I und in der Primarstufe als durchgä ngige Pflichtfächer, um Schüler innen  und Schülern  informatische Denkweisen und Problemlösekompetenzen mittels informatischer Methoden (international „Computational Thinking“) zu vermit-56 Nadine Bergner et al.ii“proceedings” — 2017/9/17 — 20:19 — page 57 — #57iiiiii Der Kurzt itel des Beitrags    19 teln. Diese Denkweisen qualifizieren sowohl für eine fundierte und reflektierte Nutzung von, als auch die kreative Gestal tung der eigenen Lebenswelt mit Informatiksystemen. Daher werden die Fächer allgemein auch mit Begriffen wie Informatik (Computer Sci-ence, Informatics, Programming, Computing (UK, NZ)), informatisches Denken (Com-putational Thinking (USA)) oder Digitale Tec hnologien (Digital Technologies (AUS)) bezeichnet. Unabhängig von ihrer Bezeichnung beinhalten die internationalen Initiativen für frühe informatische Bildung zum einen Bedien - und Medienkompetenz (Digital Literacy und ICT -Grundbildung) sowie zum anderen P roblemlösefähigkeiten und tech-nische Gestaltungskompetenzen (Computing, Computational Thinking), die jeweils im Nutzungsko ntext reflektiert werden müssen . Die in der Expertise analysierten Kompetenzen aus den internationalen Standards und Curricula wurden in den Ordnungsrahmen der GI -Standards der Sekundarstufen darge-stellt. Dabei wurde herausgearbeitet, dass d ieser  Rahmen weitgehend genutzt werden kann, die Bereiche allerdings unterschiedlich intensiv  bzw. mit zielgruppenspezifischen Schwerpunkten  zu behan deln sind. Ferner wurde deutlich, dass der gesamte Schnittstel-lenbereich zur ICT -Anwendungskompetenz und digital liter acy innerhalb der informati-schen Kompetenzen nur abgedeckt werden kann, wenn ein zusätzlicher Prozessbereich definiert wird. Dieser Prozes sbereich, den wir im Folgenden als P0: Interagieren & Explorieren  einführen, lässt sich in den internationalen Standards vielfach  finden.  Aus den Kompetenzbeschreibungen der internationalen Ansätze geht häufig nicht direkt hervor, wie sich Kinder  mit den Fac hinhalten auseinandersetzen. Daher lässt sich eine Zuordnung aller beschriebenen Kompetenzen eher zu den Inhaltsbereichen angeben und dabei die möglichen Prozessbereiche andeuten, da die Art der Auseinandersetzung mit einem Fachinhalt von der didakt ischen Auseinandersetzung in der unterrichtlichen Situa-tion abhängt. Häufig sind die Kompetenzen lediglich als „Verstehen“ oder „Erkennen“ ausgewiesen. Das Verständnis können die Kinder aktiv erlangen, indem sie etwas mo-dellieren & implementieren (P1) und dabei Teile begründen & bewerten ( P2). Dabei werden oft Aspekte strukturiert & vernetzt (P3) und je nach didaktischer Methode dabei kooperiert & kommuniziert (P4). Fachinhalte m üssen auch jeweils dargestellt und  die fachliche Darstellung interpretiert w erden (P5). Vor allem müssen sich Kinder in der aktiven Auseinandersetzung mit Fachkonzepten, Algorithmen, Programmen oder Infor-matiksystemen Strukturen und Abläufe erschließen, ind em sie mit diesen interagieren und diese explorieren (P0), um sich ein ment ales Modell aufzubauen. Daher erweitern die Autoren der Expertise das GI -Kompetenzm odell der Sekundarstufen um d en Pro-zessbereich  „P0: Interagieren & Explorieren“ . 3 Kompetenzbereiche zur frühen informatischen Bildung  Ausgehend v on unseren  wissenschaftstheor etischen Überlegungen zu r Informatik und daraus resultierenden fachdidaktischen Implikationen, den Erwägungen zur Lebenswelt der Kinder und ihren Erfahrungen mit digitalen Medien sowie unter Berücksichtigung Zieldimensionen für frühe informatische Bildung 57ii“proceedings” — 2017/9/17 — 20:19 — page 58 — #58iiiiii 20    Nadine Bergner  et al.   der Analyseergebnisse internationaler CS -Curricu la in der Primarstufe  schlagen wir vor, zur Beschreibung von Kompetenzbereichen zu r frühen informatischen Bildung  das bis-her in den Curricula zu den  Sekundarstufen  I und II verwendete Modell der GI Bildungs-standards  [GI16, Be17] um die Prozessdimension „P0: Interagieren und Explorieren “ zu erweitern.  3.1 P0 - Interagieren und Explorieren  Die Exploration eines digitalen  Artefakt s bzw. eines Informatiksystems  ähnelt dem Ex-perimentieren und damit ein wenig dem Forschungskreis der Naturwissenschaften  (vgl. [An12], S. 165 pp) . Hier geht es darum, anhand der nach außen wahrnehmbaren Funkti-on bzw. des Einsatzzweck es oder anhand der Nutzung des Systems – also aus der Nut-zungsperspektive – zunehmend die innere Bauweise, die einzelnen Bestandteile und deren Wirkmecha nismen zu erkunden. Das geht rein durch äußere Beobachtung nur bis zu einem bestimmten Grad, aber die meisten Aspekte der Benutzungsoberfläche sind ja so gestaltet, dass sie die inneren Systemzustände oder Aspekte davon widerspiegeln. Es geht darum , die Au fmerksamkeit weg von der Aufgabe (einen Text verfassen, den Robo-ter fahren lassen, ein Foto machen) hin zur technischen Realisierung zu lenken (der Text wird nicht bildlich gespeichert, sondern durch Zeichen und Metazeichen, die beschrei-ben, wie der Text a m Bildschirm aussieht...).  Das spielerische Erkunden und Ausprobieren von Objekten ihrer Alltagswelt ist ein wesentliches Element kindlichen Lernens  (vgl. [Sa 04]). Sie ‚be -greifen’ derartige Objek-te im wörtlichen Sinne und gewinnen über den spielerischen U mgang mit ihnen ein rudimentäres mentales Modell über deren technische Funktionen  und ihr mögliches ‚Innenleben’ (vgl. [SZ97]). Diese lernpsychologischen Erkenntnisse über den kindlichen Umgang mit simplen technischen Artefakten können auch beim Lernen mit  und über altersgemäße Informatiksysteme (z.  B. Bee-Bot) genutzt werden. Über das  Interagieren mit und das Explorieren von Informatiksystemen können sich Kinder einen ersten Zu-gang zu diesen Systemen erschließen. Wenn es gelingt, diese Erfahrungen in moder ier-ten Lernprozessen für die Kinder zu systematisieren, können die Grundlagen für vertiefte Erkenntnisse der Kinder über Funktion und Struktur derartiger System e geschaffen  wer-den.  Neben der lernpsychologischen Begründung dieses Prozessbereiches gibt es a uch zahl-reiche fachdidaktische und fachwissenschaftliche Argumente, die die Relevanz dieses Prozessbereichs für die informatische Bildung begründen. Zahlreiche internationale Ansätze zur frühen informatischen Bildung, z.  B. Resnick am MIT [RR 13] oder die CAS-Initiative in Großbritannien , enthalten mit dem ‚Tinkering’, dem spielerischen Erkunden von Informatiks ystemen, ein dem Prozessbereich P0 ‚ Interagieren und Explo-rieren von Informatiksystemen’ vergleichbares methodisches Konzept.  58 Nadine Bergner et al.ii“proceedings” — 2017/9/17 — 20:19 — page 59 — #59iiiiii Der Kurzt itel des Beitrags    21 3.2 Vier  hervorzuhebende Ko mbinationen  Im Folgenden begründen  wir ausgewählte Zielkompetenzen auf Ebene der Kinder, die unserer Einschätzung nach die wichtigsten altersgemäßen Verknüpfungen von Prozess - und Inhaltsbereichen demonstrieren. Diese Priorisierung erfolgt anhand von Leitk rite-rien, die sich sowohl an der fachdidaktischen Relevanz des auszuwählenden Kompe-tenzbereichs als auch an lern - und entwicklungspsychologischen Kriterien orientieren. Neben den fachlich informatischen Kompetenzen, die sich aus einer Kombination von Inhal ts- und Prozessber eichen ergeben  und in die vor allem fachdidaktische Überlegun-gen einfließen, spielt bei der Priorisierung der Aspekt der Vermittlung von allgemeinen Basiskompetenzen und der damit zu erwartende Beitrag zur Allgemeinbildung der Kin-der eine  wichtige Rolle.    Zusammenfassend liegen die folgenden Leitkriterien der Priorisierung der ausgewählten Kompetenzbereiche zugrunde:  1. Fachliche und fachdidaktische Konzepte : Welche Bedeutung hat der ausgewählte Kompetenzbereich für das Verständnis von zentr alen informatischen Konzepten und deren Anwendung bei Informatiksystemen?  2. Lern - und entwicklungspsychologische Aspekte : Können die informatischen Konzepte auf einem der Zielgruppe angemessenen kognitiven Niveau vermittelt werden?  3. Alltagsbezug : Kann der Kom petenzbereich im Hinblick auf die Alltagssituation der Kinder altersgemäß veranschaulicht werden?  4. Motivation:  Ist der priorisierte Kompetenzbereich anhand eines für die Kinder motivierenden Beispiels darstellbar?  5. Fachliches Interesse : Sind die priorisierte n Kompetenzbereiche geeignet, das Inte-resse der Kinder an Informatik zu wecken?  6. Selbstwirksamkeit : Befähigt der Kompetenzbereich und das ausgewählte Beispiel die Kinder dazu, ihre Selbstwirksamkeit im Umgang mit Informatiksystemen zu stärken?  7. Allgemeinbild ung: Können der Kompetenzbereich und das ausgewählte Beispiel einen Beitrag zur Allgemeinbildung der Kinder leisten?  8. Übergreifende Basiskompetenzen: Welche Basiskompetenzen , wie Kommunikati-ons- und Kooperationsfähigkeit, Empathie, Problemlösefähigkeit , werden mit dem ausgewählten Kompetenzbereich gefördert?  9. Bezug zu didaktischen Konzepten  (Grundschule, Sachunterricht, frühkindliche Erziehung): Kann der priorisierte Kompetenzbereich in den curricularen Kontext der Grundschule und in Konzepte der frühkindlich en Erziehung eingeordnet werden?  10. Existierende Praxiserfahrungen : Gibt es beim ausgewählten Kompetenzbereich bereits positive Erfahrungen bei der pädagogischen Umsetzung von zielgruppenspe-zifischen Lernszenarien?  Insgesamt scheinen in Orientierung an diese n Kriterien die folgenden fachlichen Kombi-nationen aus Inhalts - und Prozessbereichen besonders vielversprechend für eine gelin-gende informatische Bildung im Elementar - und Primarbereich  (vgl. Abb. 1) : Zieldimensionen für frühe informatische Bildung 59ii“proceedings” — 2017/9/17 — 20:19 — page 60 — #60iiiiii• Interaktion mit und Exploration (P0) von Informatiksyst emen (I4)  • Modellieren und Implementieren (P1) von Algorithmen und Programmen (I2)  • Repräsentieren/Darstellen/ Interpretieren (P5) von Daten und Information (I1)  • Nachdenken über und Bewerten (P2) des Zusammenhangs von Informatik, Mensch und Gesellschaft (I5)   Abb.  1: Empfohlene Kombinationen von Inhalts - und Prozessbereich en. Rot für die Zielgruppe wichtige und naheliegende Kombinationen. Gelb: Weitere zielführende Kombinationen.   Beispiele zur Umsetzung werde n in der HdkF -Expertise [ Be17] ausgeführt.  4 Rahmenb edingungen und Anforderungen für die praktische  Umsetzun g Eine erfolgreiche Förderung früher informatischer Bildung hat die Erfüllung verschiede-ner Bedingungen zur Voraussetzung . Dies betrifft insbesondere die Kompetenzen der pädagogischen Fach - und Lehrk räfte. So sollten pädagogische Fach - und Lehrkräfte   (a) fachliche  und fachdidaktische Kompetenzen besitzen, insbesondere um angebotenes Lehr -Lern -Material zu verstehen , zu reflektieren  und darauf basierend eigene Lernein-heiten zu planen und zu gestalten,  (b) pädagogisch -didaktische Handlungskompetenz besitzen , um Lerngelegenheiten bezogen auf informatisch e Bildung zu erkennen und zu  nutzen sowie  angebotene Materialien lerngruppenadäquat auszuwählen, anzupassen und 60 Nadine Bergner et al.ii“proceedings” — 2017/9/17 — 20:19 — page 61 — #61iiiiii Der Kurzt itel des Beitrags    23 ggf. weiterzuentwickeln,  (c) positive Ein stellungen zur Informatik aufweisen , aber auch gegenüber existierenden Vorstellungen offen für neue Sichtweisen sein.  Die Rahmenbe-dingungen bezogen auf die Institutionen betreffen vor allem die Schaffung der zeitli-chen, räumlichen, organisatorischen und au sstattungsbezogenen Voraussetzungen.   Für den Bereich der informatischen Bildung im Elementar - und Primarbereich liegen bisher keine empirisch fundierten Kompetenzmodelle vor. Daraus resultiert ein Mangel an verlässlichen Instrumenten zur Messung der erwor benen Kompetenzen im Elementar - und Primarbereich der informatischen Bildung und damit zusammenhängend eine empi-risch fundierte Evaluation der informatischen Bildungskonzepte im Kita - und Grund-schulbereich. Wünschenswert für die weitere Arbeit im Forschung sbereich wäre die konzeptuelle Evaluation entwickelter Maßnahmen und Beispiele , die fachliche Analyse von Materialien und deren Einsatz sowie die Untersuchung der Wirksamkeit in Hinblick auf Kinder, Erzieher innen, Erzieher  und Lehrkräfte, Multiplikatoren u nd Eltern.  5 Fazit  Die Analyse internationaler Curricula unter fachdidaktischen Gesichtspunkten hat offen-bart, dass zusätzlich zu den bestehenden fünf Inhalts - und fünf Prozessbereichen der GI -Bildungsstandards für die Sekundarstufen ein weiterer Prozessbere ich „P0 - Interagieren und Explorieren“  notwendig ist, um informatische Bildung bereits im Elementar - und Primarbereich zielgruppenadä quat abzubilden. Durch diesen zusätzlichen Prozessbereich kann die Alltagserfahrung der Kinder zielführend hin zu informat ischer Bildung aufge-griffen werden. Die Kinder erlernen anknüpfend an ihre persönlichen Vorerfahrungen die zugrundeliegenden Wirkmechanismen von Informatiksystemen und können so auf zukünftige Herausforderungen der Digitalisierung vorbereitet werden.  Da in formatische Bildung im Kita - und Grundschulbereich ein junger Forschungsbereich ist, wurde dieser im zugrundeliegenden Projekt sowohl aus der Perspektive fachdidakti-scher Forschung als auch unter Gesichtspunkten pädagogischer Praxis analysiert. Es wird deu tlich, dass gut qualifizierte pädagogische Fach - und Lehrkräfte einen wesentli-chen Faktor für die erfolgreiche Umsetzung informatischer Bildungskonzepte im Kita - und Grundschulbereich darstellen. Die praktische Erprobung der Beispiele und der vor-gestellten  Konzepte sowie eine begleitende formative Evaluation werden von den Auto-ren dabei selbst als wesentliche Faktoren für die erfolgreiche Implementierung früher informatischer Bildung in der Praxis von Kitas und Grundschulen angesehen.  Zieldimensionen für frühe informatische Bildung 61ii“proceedings” — 2017/9/17 — 20:19 — page 62 — #62iiiiii 24    Nadine Bergner  et al.   Literaturverzeichnis  [An13 ] Anders, Y.  et al: Wissenschaftliche Untersuchung zur Arbeit der Stiftung „Haus der kleinen Forscher“, Band 5, Schubi Lernmedien 2013.  [An12] Ansari, S.  et al: Wissenschaftliche Untersuchung zur Arbeit der Stiftung „Haus der kleinen Forscher“, Band 4,  Schubi Lernmedien 2012.  [DI17] Kinder in der digitalen Welt. (o. J.). DIVSI : https://www.divsi.de/publikationen/   studien/divsi -u9-studie -kinder -der-digitalen -welt/, Stand : 14.02.2017.  [GI16]  GI, Gesellschaft für Informatik e.V.: Bildungsstandards Inform atik für die Sekundar-stufe II, Empfehlungen der Gesellschaft für Informatik e.V., Arbeitskreis „Bildungs-standards SII“: LOG IN, 2016 . [Be17 ] Bergner, N., Köster H., Magenheim, J., Müller,  K., Romeike, R., Schulte, C.; Schro-eder, U.: Zieldimensionen informa tischer Bildung im Elementar - und Primarbereich. In (Stiftung Haus der kleinen Forscher, Hrsg.) : Frühe informatische Bildung – Ziele und Gelingensbedingungen für den Elementar - und Primarbereich. Berlin , 2017  (im Druck)  [Kö06]  Köster, H.: Freies Explorier en und Experimentieren: eine Untersuchung zur selbstbe-stimmten Gewinnung von Erfahrungen mit physikalischen Phänomenen im Sachunter-richt, Studien zum Physik - und Chemielernen. Berlin  : Logos -Verlag, 2006.  [Li17] Liukas, L .: Hello Ruby: Programmier dir dein e Welt. Bananenblau, 2017.  [Ma08]  Magenheim, J.: Systemorientierte Didaktik der Informatik Sozio -technische Informa-tiksysteme als Unterrichtsgegenstand? In (Kortenkamp; U. et al, Hrsg.): Informatische Ideen im Mathematikunterricht. Franzbecker, Hildesheim , S. 17 -36, 2008 . [RR13] Resnick, M.; Rosenbaum, E. : Designing for Ti nkerability. In (Honey, M.; Kanter, D. , Hrsg.):  Design, Make, Play: Growing the Next Generation of STEM Innovators, Routledge, New York, S. 163 -181, 2013  [Sa04] Sachser, N. : Neugier, Spie l Und Lernen: Verhaltensbiolog ische Anmerkungen Zur Kindheit.  Zeitschrift Für Pädagogik 50 4 , S. 475–86, 2004.  [Sc17] Schulte , C. et al: The Design and Exploration Cycle as a R&D Framework in CSE in Proceedings of the IEEE EDOCON 2017, At hens, Greece, S.  862 – 871. [Sc01] Schwill, A.: Ab wann kann man mit Kindern Informatik machen? In (Keil-Slawik, R.; Magenheim, J. , Hrsg.): INFOS 2001  – 9. GI -Fachtagung Informatik und Schule , S. 13–30, 2001.  [SZ97] Schwarzkopf, H.; Zolg, M.: Kann der Computer denken? Grund schulzeitschrift, H. 108, 1997.  [TA13]  Tedre, M .; Apiola, M.: Three computing Traditions in school computing education. In: Kadijevich,  D.M.;  Angeli, C .,Schulte , C.: Improving Computer Science Education,  Routledge , New York, 2013 . 62 Nadine Bergner et al.ii“proceedings” — 2017/9/17 — 20:19 — page 63 — #63iiiiii Was Grundschulkinder über Informatik wissen und was sie wissen wollen  Sandra -Jasmin Petrut1, Nadine Bergner1 und Ulrik Schroeder1 Abstract:  Beim Einstieg in die Informatik in der Grundschule stellen sich die Frage n, wo die Lernenden abgeholt werden müssen,  welche Erfahrungen sie mitbringen und was die Lernenden an dem Thema Informatik interessiert und nicht zuletzt motiviert.  Im Rahmen eines eintägigen Grundschulmoduls wurden für eine quantitative Analyse 198 Kinder mit Hilfe eines Pre -Post-Tests und für eine tiefergehende qualitative Analyse  34 Kinder  mit der Methode des Plakaterstellens evaluiert. Die Auswertung beider Studien  ergab ein konsistentes Ergebnis. Der Computer wird bei Grundschulkindern als „Spielzeug“ statt als Werkzeug bzw. Lernmedium gesehen . Außerdem hat die betrachtete Zielgruppe keine Vorbehalte der Di sziplin gegenüber, sondern zeig t ohne  geschlecht sspezifische  Unterschiede großes Interesse. Dies spiegelt  sich auch in den Fragen  wider , die die Schülerinnen und Schüler auf die Plakate schri eben . Keywords: Digitale Bildung, Primarstufe, Evaluation, Schülerlabor, Vorkenntnisse, Bild der Informatik  1 Einleitung  und Motivation  Außerschulische Angebote bieten Kinder n im Grundschulalter eine Möglichkeit zum Erwerb digitaler Bildung. Neben hardware - und computergestützten Materialien, wie dem Calliope Mini2, der Internetseite code.org  oder kindgerechte n Roboter n, gibt es auch technikfreie Varianten, wie beispielsweise Computer Science Unplugged3 der University of Canterbury. Auch Schülerlabore , wie da s InfoSphere4 der RWTH Aachen , bieten eine Reihe solcher Möglichkeiten . Außerdem gibt es in NRW das Projekt „Informatik an Grundschulen“5, welches von den Universitäten Aachen, Paderborn und Wuppertal in Kooperation mit dem Ministerium für Schule und Weite rbildung NRW ins Leben gerufen wurde , um informatische Bildung in den Sachunterricht zu integrieren . Im Kernlehrplan für den Sachunterricht an Grundschulen in NRW [Mi08]  ist ein Ziel , einen „verantwortungsvollen Umgang mit der natürlichen und gestalteten L ebenswelt“ [ebd. S. 39]  zu fördern. Auch sollen  die vielfältigen Erfahrungen der Schülerinnen und Schüler in ihrer Lebenswirklichkeit sowie die Möglichkeit zur Informations beschaffung durch „alte“ und „neue“ Medien genutzt werden. Betrachtet man die KIM -Studie für die                                                            1 RWTH Aachen, Lehr - und Forschungsgebiet Informatik 9, Ahornstr. 55, 52074 Aachen, nachname @informatik.rwth -aachen.de  2 calliope.cc  3 csunplugged.org  4 schuelerlabor.informatik.rwth -aachen.de  5 https://www.schulministerium.nrw.de/docs/Schulsystem/Unterricht/Lernbereiche -und-Faecher/Mathematik -_-Naturwissenschaften/Informatik -an-Grundschulen/index.html  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 63ii“proceedings” — 2017/9/17 — 20:19 — page 64 — #64iiiiii Altersgruppe 6 bis 13 aus dem Jahre 2014 [Me15], so erkennt man, dass digitale Medien in beinahe allen Haushalten vorzufinden sind. So ist die heutige Lebenswirklichkeit der Kinder voller Informatiksysteme. Auch die aktuell in Entwicklung befi ndlichen Empfehlungen für Bildungsstandards Informatik speziell für den Primarbereich sehen eine Anknüpfung an die Lebenswelt der Lernenden  im Inhaltsbereich “Informatik, Mensch und Gesellschaft” explizit vor  [GI17] . 2 Related Work  Dieses Paper lehnt an eine  Interviewstudie von Borowski, Diethelm und Wilken aus 2011 an [BDW16] . Dabei wurden über 600 Grundschulkinder zwischen acht und zehn Jahren aus 30 verschiedenen Klassen interviewt. Die Kinder formulierten  Fragen über die T hemen Computer, Handys, Roboter  etc., die sie  einem Experten  stellen wollen . Insgesamt wurden 2594 Fragen gesammelt, die die Autoren in die sechs Hauptk ategorien : „Internet“ (656), „Computer“ (647), „Roboter“ (450), „Handys“ (405), „Musik und Bild“ (210) und „Spielekonsolen“ (209)  zusamme nfassten . Außerdem wurden Unterkategorien gebildet, die die Art der Fragen beschreiben. Diese sind „Geschichte und Zukunft“, „Arbeitsweise“, „Potential“, „Entwicklung und Produktion“ und „Sicherheit und Haltbarkeit“.  Die Bedeutung des Fragenstellens für de n Lernprozess wurde in zahlreichen internationalen Arbeiten herausgearbeitet und unter anderem von Chin und Osborne 2008 zusammengefasst  [CO08] . Das Stellen von Fragen seitens der Schülerinnen und Schüler bietet sowohl für die Lernenden als auch für die Le hrende n einige Vorteile. Auf der einen Seite fördert es das direkte Lernen eines Inhaltes , auf der anderen Seite fällt den jeweiligen Lehrkräften eine Diagnose über die Vorkenntnisse der Schülerinnen und Schüler leichter.  3 Forschungsfragen und -design  3.1 Forsc hungsfragen  In der hier präsentierten Studie sind Kinder im Grundschulalter (aus NRW) die Zielgruppe. Aufgrund des extrem heterogenen Vorwissens, welches hauptsächlic h privat erworben werden kann, ergeben sich folgende Forschungsfragen:   • Was verbinden Grun dschulkinder mit dem Begriff „Informatik“?  • Welches Interesse haben Grundschulkinder an Informatik?  • Was möchten Grundschulkinder über Informatik wissen?  • Welche Informatiksysteme  nutzen Grundschulkinder?  64 Nadine Bergner, Sandra-Jasmin Petrut, Ulrik Schroederii“proceedings” — 2017/9/17 — 20:19 — page 65 — #65iiiiii 3.2 Forschungsdesign  Das Informatik -Schülerlabor InfoSpher e bietet für diese Studie den Forschungskontext. Im InfoSphere gibt es verschiedene Module für Kinder und Jugendliche ab der dritten  Klasse. Für Grundschulkinder gibt es das Modul „Zauberschule Informatik“, welches in dieser Studie betrachtet wird. Dieses Modul  besteht aus verschiedenen Stationen , welche den Kindern Thematiken aus der Informatik näherbringen. Dabei wird in zwei Stationen der Computer als Werkzeug eingesetzt, an den anderen vier Stationen arbeiten die Kinder mit Papier, Stiften und weiteren Hands -On-Materialien.  In Station  1 „Magische Zahlen“ erfahren die Kinder, dass und wie man jede Dezimalzahl in eine Binärzahl umwandeln kann.  In Station 2 „Zettelzauber“ lernen die Kinder die Funktion von Prüfbits kennen und wie man einen Fehler korrigiere n kann.  In der dritten Station „Türme von Hanoi“ erlernen die Kinder das Prinzip  der Rekursion. In Station 4 „Bilder verzaubern“ werden auch Bilder binär dargestellt.  In der fünften Station „Verhexte Wege“ arbeiten die Kinder am Computer und versuchen den kürzesten Weg von einem Ort zum nächsten zu finden. So erfahren sie , wie ein Navigationsalgorithmus funktioniert.  In der letzten Station „Der Computer“ schauen  die Kinder  ein Video über den Aufbau des Computers. Anschließend wird ein Zuordnungsquiz bearbei tet, welches die wichtigsten Bestandteile des Computers aufgreift. Für eine nähere Beschreibung der Stationen und des Moduls kann Bergners Dissertation betrachtet werden  [Be15] . Um den obigen  Forschungsfragen nachzugehen, wird eine Kombination aus einem quantitativen und einem qualitativen  Forschungsansatz gewählt. Zum einen werden die Grundschulmodule seit 2012 in einem Pre -Post-Testdesign schriftlich evaluiert, zum anderen wurde die Methode des Plakaterstellens angewandt, um weitere Details zur aktuellen Lebenssituation der Kinder und ihren Interessen zu erheben.  Gleichzeitig wird erforscht, inwiefern sich diese kreative Methode als Forschungsinstrument für die Zielgruppe der Grundschulkinder eignet, um deren Vorstellungen zu erheben.  In der Vorbefragung w ird das Vorwissen der Kinder über Informatik wie auch der Besitz und die Nutzung des Computers erhoben. Weiter werden die Teilnehmerinnen und Teilnehmer aufgefordert , ihr Interesse an verschiedenen Aspekten der Informatik anzugeben.  In der Nachevaluation w ird zum einen ein Feedback zum Modul und d ie Passung zu den vorherigen Erwartungen e rfragt,  zum anderen werden die Fragen zum Interesse an verschiedenen Aspekten der Informatik wiederholt . Die Auswertung geschieht in einem ersten Schritt summativ, um einen  Überblick über die Angaben der Schülerinnen und Schüler zu erhalten. In einem zweiten Schritt werden gruppenspezifische Unterschiede (z. B. zwischen Jungen und Mädchen) mittels des (Pearson -)Chi-Quadrat -Tests ermittelt. Ebenso werden abschließend die Verä nderungen durch den eintägigen Modulbesuch über den Vergleich der Pre - und Posttests errechnet.  Für die qualitative Evaluation wurden zwei Durchführungen des Moduls „Zauberschule Informatik“ betrachtet. Da ran nahmen zwei Grundschulklassen mit je 17 Schüler innen und Schülern der vierten  Klasse  teil. Zu Beginn wurden die Kinder in Gruppen von je 4 -Was Grundschulkinder über Informatik wissen und was sie wissen wollen 65ii“proceedings” — 2017/9/17 — 20:19 — page 66 — #66iiiiii 5 Schülerinnen und Schüler aufgeteilt. Mit jeweils einem Interviewer saß jede Gruppe um ein Plakat mit der Zeichnung eines Computers. Jedes Kind erhielt einen Stift  mit unterschiedlicher Farbe, damit im Anschluss die Beiträge eindeutig einer Person zugeordnet und damit teilgruppenspezifisch ausgewertet werden konnten.  Der Interviewer stellte vorkonzipierte Fragen, die die Schülerinnen und Schüler auf dem Plakat beant worten. Sie hatten dabei die Möglichkeit , einzelne Begriffe oder Sätze zu notieren , aber auch Bilder zu malen. Die gestellten Fragen gehören zu zwei Kategorien. Im ersten Fragenblock ging es um das Vorwissen der Kinder und im zweiten Block wurde nach den I nteressen gefragt. Die erste Frage lautete „Was fällt dir zu  dem Begriff  „Informatik “ ein?“, um zu ermitteln , welche Vorerfahrungen  die Kinder mitbrachten . Das Bild des Computers gab den Kindern einen Gedankenanstoß, da vermieden werden sollte, dass ein Ki nd nichts auf das Plakat schreibt. Auf Grundlage ihrer Antworten wurden vier weitere Fragen gestellt:   1. An welchen Orten/wo könnte Informatik vorkommen?  2. Was könnte zu Hause/in der Schule/draußen mit Informatik zu tun haben?  3. Wo nutzt du einen Computer, ein Smartphone  etc.?  4. Mit wem nutzt du den Computer, das Smartphone  etc.?  Sowohl die dritte als auch die vierte Frage war davon abhängig , was die Kinder  bereits angegeben  hatten. Falls beispielsweise kein Kind am Tisch ein Smartphone genannt hatte, so wurde  nicht nach dem Smartphone gefragt, um keine Antworten zu erzwingen.  Anschließend ging es weiter mit dem zweiten Fragenblock. Hier war die erste Frage „Was interessiert dich an Informatik?“. Auch hier wurden weitere Fragen abhängig de r bereits gena nnten Antwort en gestellt :  1. Was interessiert dich an Computer n, Smartphones  etc.?  2. Was wolltest du schon immer über Informatik wissen?  Zu Beginn der Plakatevaluation stellte sich sowohl jedes Kind als auch der Interviewer vor und schrieben ihre Namen auf das Plakat. So k onnte am Ende zwischen Mädchen und Jungen differenziert werden. Mittels der kurzen Vorstellungsrunde und der Tatsache, dass auch der Interviewer seinen Namen auf das Plakat schrieb, sollte das Gefühl des „Getestetwerdens“ vermieden werden.  Um eine möglichs t objektive Erhebung zu ermöglichen, stellte der Interviewer ausschließlich die vorkonzipierten Fragen. Auch eine Wertung der Antworten wurde vermieden. Bei Rückfragen der Kinder, ob ihre Antworten richtig seien, wurde  ihnen gesagt, dass sie dies alles gle ich bei der Moduldurchführung  erführen . Abgesehen von der Freiheit ihrer Nennungen wurde den Kindern zu Beginn mitgeteilt, dass auf Rechtschreibung, Grammatik und künstlerische Begabung nicht geachtet werde , um mögliche Hemmungen zu nehmen.  66 Nadine Bergner, Sandra-Jasmin Petrut, Ulrik Schroederii“proceedings” — 2017/9/17 — 20:19 — page 67 — #67iiiiii 4 Auswertung der Evaluation  4.1 Quantitative Auswertung  Im Rahmen der quantitativen Evaluation beantworteten im Zeitraum von 2012 bis 2016 insgesamt 223 Kinder den Vor- und Nach -Fragebogen. Dabei ergab sich durch die Teilnahme von Geschwisterkindern an bestimmten Veranstaltung en ein Spektrum der ersten bis siebten Klassenstufe. Für die folgende Auswertung wurden die Ausreißer herausgefiltert, so dass sich ein Stichprobenumfang von N=198 Kindern ergab, von denen 83 Kinder die dritte und 115 Kinder die vierte Klasse besuchten. Da mit ergibt sich folgende Altersverteilung: 44 Acht -, 96 Neun -, 52 Zehn - und 6 Elfjährige. Die Stichprobe umfasst 84 Mädchen und 113 Jungen.  Der erste Fragenblock thematisiert die Vorerfahrungen der Kinder mit technischen Geräten und insbesondere  mit dem Co mputer. 87,4% der Besucherinnen und Besucher  gaben an , Zugang zu einem Computer zu haben. Die se 173 Kinder wurden tiefergehend  dazu befragt, wozu sie den Computer nutzen.  In Abb.  1 sieht  man die Verteilung in vier  Kategorien.  Bezüglich der Kategorien „Haus aufgaben machen“  und „Spiele n“ konnte eine geschlechtsspezifische Differenz festgestellt werden: Jungen gaben häufiger an, den Computer für die Hausaufgaben bzw. für das Spielen zu verwenden.  Diese Bestandsaufnahme macht deutlich, dass der private Computer  hauptsächlich als Spielzeug und selten als Lernmedium  verstanden wird.   Abb. 1: Nennungen  zur Verwendung des Computers  Als Nächstes wurde das grundsätzliche Interesse der Kinder an dem bevorstehenden Modul im Schülerlabor erhoben . Die Auswertung  zeigt , dass die wenigsten Kinder der Informatik Vorbehalte entgegenbringen. Auch ergaben sich keine geschlechts spezi -fische n Differenzen.  Im V ergleich des Pre - und Posttest s wurden die Erwartungen der Besucherinnen und Besucher mit der Erfüllung jener verglichen . 38 Kinder notierten Was Grundschulkinder über Informatik wissen und was sie wissen wollen 67ii“proceedings” — 2017/9/17 — 20:19 — page 68 — #68iiiiii „viel Spaß” . Dies zeigt, dass die Kinder keine inhaltlichen Erwartungen an den Tag im Informatik -Schülerlabor hatten. Obwohl die Angaben zu den Erwartungen im Vorfeld vage blieben, gaben 115 Kinder nach dem Modul an, dass jenes ihren E rwartungen entsprochen habe, 23 Kinder stimmten dem nicht zu.  Zusätzlich gab ein Großteil der Kinder an „großes Interesse“ zu haben einen weiteren Kurs zu besuchen , welches wiederum keine signifikanten Differenzen zwischen den Geschlechtern, den Kindern mi t und ohne Computer zugang und der Klassenstufe aufzeigt.  Bezogen auf das vorhandene Bild zur Informatik zeigt sich vor dem Modulbesuch, dass die Vorstellung kaum ausgeprägt ist  (Tabelle 1). Der Vergleich macht deutlich, dass der Bezug zu den Informatiksyst emen auch in den Unplugged Modulen deutlich wird.  Kategorie  Anzahl  Nennungen im Pretest  Anzahl  Nennungen im Posttest  Kein Begriff  52 21 Computer  30 41 Technik  10 15 Tab. 1: Nennungen  zu Informatik  Das Interesse der Kinder an verschiedenen Aspekten wu rde in vier Kategorien unterteilt (Abb. 2). Die Auswertung zeigte außerdem, dass Jungen größeres Interesse an technischen Geräten haben, umgekehrt scheint das Interesse am Lösen kniffliger Aufgaben bei Mädchen stärker ausgebildet zu sein. Auch an der Infor matik zeigten die meisten Kinder starkes Interesse, obwohl sie gleichzeitig kundtaten, dass sie gar nicht wüssten, was dies sei.  Abb. 2: Interesse an verschiedenen Aspekten  Nach denselben vier Kategorien wurden die Kinder  auch im Posttest befragt. Es zeig te sich in allen Kategorien ein Zuwachs des Interesses, wobei dieser zur Informatik am 68 Nadine Bergner, Sandra-Jasmin Petrut, Ulrik Schroederii“proceedings” — 2017/9/17 — 20:19 — page 69 — #69iiiiii deutlichsten ausfiel, was allerdings darin begründet ist, dass in den anderen beiden Kategorien die Kinder bereits im Pretest sehr großes Interesse angaben.  4.2 Qualitative Auswertung  Die erstellten Plakate wurden nach jeder Durchführung eingesammelt, anonymisiert und zusammengefasst. Bei den zwei Durchführungen entstanden acht Plakate, an denen insgesamt 34 Schülerinnen und Schüler (13 Mädchen und 21 Jungen) mitgewirkt hatte n. Die Kinder waren alle in der 4. Jahrgangsstufe und besuchten  dieselbe Schule.  Bei der Analyse der Plakate wurden zunächst alle Einzelnennungen,  die kompletten Sätze, Fragen und Bilder kategorisiert , wobei  die Rechtschreibung korrigiert  wurde . Auf Basis der Vorarbeit von Borowski, Diethelm und Wilken wurden zunächst dieselben Hauptkategorien gewählt. Da einige Angaben der Kinder nicht in die vorhandenen Kategorien passten, entstanden weitere Kategorien und bestehende wurden erweitert. Eine Aufzählung der meist genannten Kategorien und zugehöriger Anzahl der Nennungen findet sich in Tabelle 2 in de n ersten beiden  Spalte n. Kategorie  Anzahl  Nennungen  Anzahl  Kinder  Mädchen  Jungen  Anzahl  Plakate  Spiele  84 28 10 (77%)  18 (86%)  8 Computer  82 28 11 (85%)  17 (81%)  8 Internet  57 27 10 (77%)  17 (81%)  8 Bild, Musik , Video  46 25 8 (62%)  17 (81%)  8 Kommunikationsmittel  39 26 11 (85%)  15 (71%)  8 Tablet  24 20 8 (62%)  12 (57%)  7 Schule  22 14 6 (46%)  8 (38%)  5 Programmierung  15 11 5 (38%)  6 (29%)  6 Tab. 2: Katego rienverteilung  Aus der Kategorie „Bild und Musik“ wurde „Bild, Musik, Video“, die Kategorien „Spielekonsolen” und „Spiele” wurden zu „Spiele” zusammengefasst und aus der Kategorie „Handy” entstand die Kategorie „Kommunikationsmittel“.  Die Anzahl der Nennun gen überschreitet die Anzahl der Kinder , zumal  Nennungen in den Einzelbegriffen, aus kompletten Sätzen, aus den Fragen oder den Bildern hinzugezählt wurden. Darüber hinaus ist i n Tabelle 2 die Anzahl der Mädchen und der Jungen angegeben, die mindestens ein e Nennung zu den jeweiligen Kategorien hatten. Die letzte Spalte zeigt, welche Kategorien auf wie vielen der Plakate vorzufinden waren.  Bereits hierbei lassen sich Unterschiede zu den Ergebnissen von Borowski, Diethelm und Wilken erkennen. Das Thema „Spiel e“ steht  in der hier dargestellten Studie an erster Stelle, wohingegen die Begriffe „Spielekonsole“ und „Spiele“ in der damaligen Studie insgesamt, also nach dem  Zusammenfügen beider Kategorien zum Aspekt „Spiele”, nur auf dem fünften Platz  lag. Ein Unters chied zwischen Mädchen und Jungen wird bei der Auswertung nicht erkennbar. Dies kann unter anderem daran liegen, dass an allen Was Grundschulkinder über Informatik wissen und was sie wissen wollen 69ii“proceedings” — 2017/9/17 — 20:19 — page 70 — #70iiiiii Plakaten sowohl Schülerinnen als auch Schüler arbeiteten, die sich gegenseitig beeinflusst haben könnten.  Die gestellten Fragen w urden neben der Einteilung in die Hauptkategorien auch in die Unterkategorien  „Potential“ (Po, 24x), „Entwicklung und Produktion“ (EP, 21x), „Arbeitsweise“ (AW, 8x), „Vergangenheit und Zukunft“ (VZ, 3x) und „Sicherheit und Haltbarkeit“ (SH, 1x)  zugeordnet.  Insgesamt wurden 57 Fragen von 27 Kindern gestellt.  In Tabelle 3 werden Fragen der Hauptkategorien „Spiele“, „Computer“, „Internet“ und „Musik, Bild, Video“ den zugehörige n Unterkategorie n zugeordnet . Da jedoch nicht jede Frage eindeutig einer Haupt - und einer Unterkategorie zugeordnet werden kann, wiederholen sich  die Fragen oder gehören der Unterkategorie „Sonstiges” an.  UK6 Fragen  HK7 Po Hat man bei Informatik meistens einen Computer?  Gehört Informatik zum Computer ? Computer  Für was braucht man einen  Fernsehe r? Musik, Bild, Video  EP Wie schaffen es Programmierer Spiele zu machen?  Wie programmiert man ein Videospiel?  Wie wurden (alle) Spiele hergestellt?  Spiele  Wer hat den Computer erschaffen?  Wie wird ein Computer gebaut?  Wer baut Computer?  Compute r Wie entsteht WLAN?  Internet  Wie wurden Pixel hergestellt?  Wie wurden Filme auf Fernseher hergestellt?  Musik, Bild, Video  AW Wie funktioniert eine elektrische Dartscheibe?  Spiele  Was kann man auf dem Computer alles machen?  Kann man auf dem Computer  Fotos machen?  Kann man auch Fotos und Videos machen?  Computer und  Musik, Bild, Video  Wie funktionieren Online -Server?  Internet  VZ Seit wann gibt es PS1, PS2, PS3, PS4 und Wii?  Spiele  Seit wann gibt es Computer?  Können Computer bald Menschen ersetzen?  Computer  SH Wie geht man mit dem Computer um?  Computer  Son-stiges  Wie viele Computer gibt es auf der Welt?  Wie viele Computerapps gibt es auf dem Computer?  Computer  Wie viele Internetseiten gibt es?  Internet  Kann man in Bilder reinspringen und in e ine andere Realität kommen?  Kann man Pixel in die Realität setzen?  Musik, Bild, Video  Tab. 3: Unterkategorienverteilung                                                             6 Unterkategorie  7 Haup tkategorie  70 Nadine Bergner, Sandra-Jasmin Petrut, Ulrik Schroederii“proceedings” — 2017/9/17 — 20:19 — page 71 — #71iiiiii Die Fragen zum Ort des Vorkommens und der Nutzung von Informatiksystemen wie auch den damit verbundenen Personen  konnten nicht ausgewer tet werden. Fast alle Kinder beantworteten diese drei Fragen nur mündlich. Dies könnte daran gelegen haben, dass ihnen nicht eindeutig bewusst war, wie sie ihre Antworten auf das Plakat eintragen konnten. Außerdem wurde die erste Frage  von einigen Kindern auch missverstanden, sodass sie Geschäfte nannten, wo Informatiksysteme zu kaufen sind (z.B. Media Markt, Saturn, Handyladen  etc.). Die Auswertung der letzten Frage ergab kein Ergebnis. Alle Kinder, die hierauf antworteten , gaben an, dass sie entweder mit ihren Eltern oder mit ihren Geschwistern die zu Hause befindlichen Geräte nutzen.  5 Reflexion und Ausblick  Zunächst zeigt  sowohl die quantitative als auch die qualitative Auswertung , dass  die befragten Kinder (ebenso wie in den Ergebnissen der KIM -Studie)  häufig den Computer nutzen. A uch in der Auszählung der Beiträge auf den Plakaten  ist die Kategorie „Computer“ auf Platz 2 gelandet. Jedoch sollte hier vermerkt werden, dass die Kinder den Computer im Wesentlichen als „Spielzeug“ sehen. Dies bestätigt sich du rch die quantitative Auswertung  der Tätigkeiten, welche die Kinder am Computer ausführen . Bei näherer Betrachtung der Nennungen auf den Plakaten  zeigt sich, dass  häufig explizite Computerspiele genannt wurden, so wird ebenfalls ein Zusammenhang zwischen de m Computer und den Spielen sichtbar.  Insgesamt sind keine geschlechtsspezifischen Differenzen erkennbar. Dies wird zum einen in Hinblick auf die Interessen der Schülerinnen und Schüler und zum anderen auch bei ihren Vorbehalten der Disziplin gegenüber deut lich. Aus der quantitativen Auswertung ergibt sich, dass über ein Viertel der Kinder kein Vorwissen über Informatik haben. Dies lässt nicht nur darauf schließen, dass es keinen Informatikunterricht in der Grundschule gibt, sondern auch, dass in anderen Fäc hern kein Bezug zur Informatik hergestellt  wird.  Auch ergibt sich die Vermutung, dass Kinder den Begriff „Informatik“ nicht zuordnen können, obwohl sie dennoch Vorwissen mitbringen. Hier wird für zukünftige Evaluationen nach Alternativen gesucht ohne mit anderen Assoziationen Einfluss auf die Nennungen zu nehmen.  Außerdem lag die Kategorie „Schule“ in der Plakatevaluation mit nur 22 Nennungen weit hinten. Dieses Ergebnis ist verwunderlich, da die jeweiligen Lehrkräfte mitteilten, dass die Kinder den „Internetführerschein“  in der Schule  machten. So könnte man schlussfolgern, dass die Anzahl der Nennung der Kategorie „Schule“ bei anderen Grundschulklassen noch geringer ausfallen könnte.  Aus der Auswertung der von den Kindern notierten Fragen wird erkennbar, da ss sie großes Interesse an den Unterkategorien „Potential“ und „Entwicklung und Produktion “ haben. Diese  Fragen  können  ohne spezifisches Vorwissen beantworte t werden , indem danach recherchiert  wird. Dies könnte eine Motivation  sein, erste Aspekte informati scher Bildung bereits in der Grundschule  zu vermitteln , um die Interessen der Kinder Was Grundschulkinder über Informatik wissen und was sie wissen wollen 71ii“proceedings” — 2017/9/17 — 20:19 — page 72 — #72iiiiii abzudecken , ohne hochqualifizierte Informatiklehrkräfte in der Grundschule zu benötigen.  Jedoch sollte nicht außer Acht gelassen werden, dass weitere  informatische Aspekte , die ebenfalls das Interesse der Kinder wecken  und für eine informatische Grundbildung zwingend notwendig sind,  nur von qualifizierten Lehrkräften vermittelt werden können (z. B. das Thema Internet) . Abschließend kann festgehalten werden, dass die Evaluat ionsmethode  „Plakat  erstellen“  gelungen ist, sodass sie in weiteren Durchführungen erneut eingesetzt wird. Zusätzlich wird intensiv in Richtung Vorbilder  geforscht. So ist h ier die Frage offen, mit welchen  Personen  die Kinder Informatiksysteme assoziieren bzw. mit wem sie diese verwenden und welche Rolle die Berufe der Eltern oder auch die Informatikerfahrung von Geschwistern und Freunden spielen.  Aus diesem Grund wird auch in dem Interviewleitfaden die Frage „Wem würdest du deine Fragen stellen?“ ergänzt.  Bei weiteren Durchführungen werden auch die Lehrkräfte hinzugezogen, um die aktuelle Situation und das mögliche Vorwissen der Schülerinnen und Schüler zu erheben . Dabei würde sich ein Interview mit der jeweiligen Lehrkraft beim  Besuch im InfoSphere eignen.  Darüber hinaus wird ein Beobachtungsbogen für die Betreuerinnen und Betreuer angefertigt, sodass in zukünftigen Durchführungen auch die Aktivität der Kinder sowie weitere nicht verschriftliche Beiträge  der Diskussion ausgewertet werden können . Literaturve rzeichnis  [Be15] Bergner , N.: Konzeption eines Informatik -Schülerlabors und Erforschung dessen Effekte auf das Bild der Informatik bei Kindern und Jugendlichen . Dissertation , Lehr - und Forschungsgebiet Informatik 9, RWTH Aachen, 2015.  [BDW 16] Borowski , C.; Diethelm, I .; Wilken, H. : What children ask about computers, the Internet, robots, mobiles, games,  etc.. ACM -Press, S. 72 -75, Münster, 2016.  [CO08] Chin , C.; Osborne, J. : Students‘ question: a potential resource for teaching science. In Studies in Science  Education 44.1.  S. 1-39, 2008.  [Me15 ] Medienpädagogischer Forschungsverbund Südwest: KIM -Studie 2014 – Kinder + Medien, Computer + Internet. Stuttgart, 2015.  [Mi08] Ministerium für Schule und Weiterbildung des Landes NRW : Richtlinien und Lehrpläne für die  Grundschule in Nordrhein -Westfalen: Deutsch, Sachunterricht, Mathematik, Englisch, Musik, Sport, Evangelische Religionsle hre, Katholische Religionslehre.  Ritterbach, Frechen, 2008.  [GI17] Arbeitskreis „Bildungsstandards Primarbereich“ der Gesellschaft für  Informatik e.V. : Bildungsstandards Informatik für den  Primarbereich – zur Diskussion.  http://metager.to/gibsppdf , Stand: 02.01.2017.  72 Nadine Bergner, Sandra-Jasmin Petrut, Ulrik Schroederii“proceedings” — 2017/9/17 — 20:19 — page 73 — #73iiiiiiAlgorithmisieren im GrundschulalterSabrina Hoffmann1, Katharina Wendlandt2, Matthias Wendlandt3Abstract: Informatik, insbesondere das Programmieren, wird zunehmend in Form von Projektenin Grundschulen in Deutschland thematisiert. Eine der wesentlichen Schl ¨usselkompetenzen zumerfolgreichen Programmieren ist das Algorithmisieren von Probleml ¨osungen. In der vorliegendenArbeit wird zun ¨achst ein Stufenmodell des Algorithmisierens entworfen und darauf aufbauend einTestverfahren zur Beurteilung der F ¨ahigkeit zum Algorithmisieren gewonnen. Basierend auf die-sem Testverfahren wurden 155 Grundschulkinder aus acht Grundschulklassen der Schulstufen 2-4bez¨uglich ihrer Kompetenz zum Algorithmisieren untersucht. Die zugrundeliegende Fragestellungwar, inwiefern sich die F ¨ahigkeit zum Algorithmisieren in den Schulstufen 2-4 entwickelt. Mithilfedes Exakten Fisher-Tests konnten signiﬁkante Unterschiede in vier verschiedenen Stufen der F ¨ahig-keit zum Algorithmisieren zwischen den Klassenstufen nachgewiesen werden. Dabei ﬁel auf, dassder Unterschied zwischen der zweiten und dritten Klasse deutlicher ausﬁel als zwischen der drittenund vierten Klasse. Die vorliegende Arbeit stellt den ersten Teil einer zweigeteilten Untersuchungdar. Der zweite Teil der Untersuchung wird sich mit der Trainierbarkeit des Algorithmisierens imGrundschulalter besch ¨aftigen.1 EinleitungInformatikunterricht tr ¨agt in vielf ¨altiger Weise zur kognitiven Entwicklung, der pers ¨onli-chen Entfaltung und zu einem selbstbestimmten Handeln eines jeden Sch ¨ulers/ einer jedenSch¨ulerin bei. Informatische Kompetenzen wie das Algorithmisieren, das Modellieren unddie Probleml ¨osef¨ahigkeit bilden heutzutage grundlegende F ¨ahigkeiten, die in vielen Situa-tionen auch unabh ¨angig von Informatik verwendet werden k ¨onnen. Notwendiges Wissen¨uber Datenschutz, Datensicherheit und Grenzen des Computers bef ¨ahigt die SuS dazu, einselbstbestimmtes Leben zu f ¨uhren. Deshalb ist es eine Kernfrage, ob und inwieweit In-formatik schon in der Grundschule angeboten werden kann. Diese Frage wurde bereits ineinigen Projekten angegangen.Mit der Zauberschule [BLS11] zeigen die Autoren einige interessante Ans ¨atze zum The-matisieren von Informatik in der Grundschule. Die Themen unterteilten sich in Bin ¨ar-zahlen, Bilddarstellung und Fehlererkennung. Die Autoren berichten, dass es den Kindernviel Spaß gemacht habe. In [Sc01] konnte aus psychologischen Studien gefolgert werden,dass Grundschulkinder in der Lage seien, gewisse fundamentale Ideen der Informatik al-tersgerecht zu verstehen und anzuwenden. In [BD09] wird ein Projekt im Rahmen einerArbeitsgemeinschaft mit Kindern der vierten Klasse beschrieben, welches das Thema Pro-grammieren durch die drei Programmierumgebungen Karol ,Scratch undLego Mindstomsthematisiert. Die Reﬂexion des Projekts zeigt, dass Karol undLego Mindstoms f¨ur einen1Rotebergschule Dillenburg, R ¨uhlstraße 3, 35683 Dillenburg, Deutschland2Mathematisches Institut, Universit ¨at Giessen, Arndtstr. 2, 35392 Giessen, Deutschland3Institut f ¨ur Informatik, Universit ¨at Giessen, Arndtstr. 2, 35392 Giessen, DeutschlandI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 73ii“proceedings” — 2017/9/17 — 20:19 — page 74 — #74iiiiiisolchen Kurs weniger geeignet sind, wohingegen Scratch eine gute M ¨oglichkeit darstellt,Kinder dieser Altersstufe erste Programmiererfahrungen sammeln zu lassen. Ein weiteresProjekt, welches das Programmieren in Scratch [GW16] in der Grundschule thematisiert,wurde von der Hochschule Hannover in einer zweiten Grundschulklasse durchgef ¨uhrt.Auch hierbei kommen die Autoren zu dem Schluß, dass”Grundschulkinder der zweitenKlasse in der Lage sind, Programmierkonzepte zu erlernen“.Die oben genannten Publikationen, bzw. Projekte, resultieren alle in dem Ergebnis, dassGrundschulkinder in der Lage sind zu programmieren. Diese Aussage erscheint geradein der zweiten Klasse ¨uberraschend, da entwicklungspsychologische Aussagen dies nichtvermuten lassen w ¨urden und es stellt sich die Frage, inwieweit Grundschulkinder f ¨ahigsind zu programmieren. Nach Untersuchungen von Piaget [SL12] sind Kinder im pr ¨aope-rationalen Stadium (2-7 Jahre) nicht imstande, geistige Operationen vollst ¨andig durch-zuf¨uhren. Diese F ¨ahigkeit entwickelt sich erst im Verlauf des konkret-operationalen Stadi-ums (7-12 Jahre). Da das Grundschulalter die Zeit zwischen dem 6. und dem 10. Lebens-jahr umfasst, sind grundlegende geistige Entwicklungsprozesse im Gange. Auch Untersu-chungen mathematischer Kompetenzen im Grundschulalter best ¨atigen den Entwicklungs-prozess. Erkl ¨arungen ﬁnden sich in der F ¨ahigkeit Repr ¨asentationsformen beziehungsweiseMethoden zu kennen und nutzen zu k ¨onnen, beziehungsweise in den vorhandenen F ¨ahig-keiten des Arbeitsged ¨achtnisses [RHP08, Gr06].Die vorliegende Arbeit geht der Frage nach, auf welchem Komplexit ¨atsniveau Grund-sch¨uler programmieren k ¨onnen und welche Entwicklungsphasen dabei sichtbar werden.Den Schwerpunkt der Untersuchung bildet dabei die F ¨ahigkeit des Algorithmisierens.Das Algorithmisieren ist eine der wesentlichen ¨uberfachlichen Kompetenzen, die im Infor-matikunterricht vermittelt werden. Ein Algorithmus ist eine pr ¨azise Folge von Anweisun-gen zum L ¨osen eines genau deﬁnierten Problems. W ¨ahrend die Kompetenz Algorithmenanzuwenden oft eine sehr spezielle und auf ein Fach oder eine Wissenschaft bezogeneT¨atigkeit ist, ist die Kompetenz des Algorithmisierens, also die F ¨ahigkeit f ¨ur ein gegebe-nes Problem eine pr ¨azise Folge von L ¨osungsschritten zu ﬁnden, eine Kompetenz, die invielf¨altiger Weise, in verschiedenen Wissenschaften und vor allem im Alltag eine wichtigeRolle spielt. Sie ist die F ¨ahigkeit, eine Probleml ¨osung pr ¨azise und zielgerichtet zu konstru-ieren. Dar ¨uber hinaus liegt es im Charakter des Fachs Informatik, eine m ¨oglichst efﬁziente,also in m ¨oglichst wenig Zeit und mit m ¨oglichst wenig Platz, ablaufende Probleml ¨osungzu beschreiben, die dar ¨uber hinaus noch automatisiert werden kann. Damit grenzt sichdie Informatik deutlich von anderen Wissenschaften ab. Die Algorithmisierung ﬁndet sichdeshalb auch in jeglicher Strukturierung der Informatik aus schulischer Sicht wieder (vgl.z.B. [Bi16], [Sc93]).In Kapitel 2 wird zun ¨achst ein Stufenmodell des Algorithmisierens entwickelt, welchesdie drei Dimensionen Programmierelemente ,Raumkomplexit ¨atundProblemkomplexit ¨atumfasst. Die einzelnen Dimensionen werden jeweils in Stufen unterteilt. Aus diesem Stu-fenmodell werden in einem zweiten Schritt Testaufgaben entwickelt, um die F ¨ahigkeitenzum Algorithmisieren von insgesamt 155 Grundsch ¨ulern aus acht Klassen der Klassen-stufen 2-4 an drei verschiedenen Schulen in Hessen bzw. Rheinland-Pfalz zu untersuchen.Die Aufgaben beziehen sich auf die Programmierung eines Hamsters [Bo13], der Aufga-74 Katharina Wendlandt, Matthias Wendlandt, Sabrina Ho  mannii“proceedings” — 2017/9/17 — 20:19 — page 75 — #75iiiiiiben in einem Territorium bew ¨atigen muss. Wie in den eingangs erw ¨ahnten Projekten wirdauch hier mit konkret sichtbaren Problemstellungen gearbeitet, um die Aufgaben f ¨ur dieSuS leichter verst ¨andlich zu machen und die Motivation zu erh ¨ohen. Die Ergebnisse beﬁn-den sich in Kapitel 4. Die dazugeh ¨orige Diskussion und ein Ausblick auf zuk ¨unftige Ideenbeﬁndet sich in Kapitel 5.2 Das StufenmodellZur Klassiﬁzierung der Programmierf ¨ahigkeiten wurden Dimensionen des Programmie-rens [MHB15, BR12] untersucht. Auch die Taxonomie von Biggs [BC82] kann als Maßadaptiert werden. Jedoch sind beide Modelle zu grobk ¨ornig f ¨ur die Untersuchung der vor-liegenden Problemstellung, da das Spektrum der Dimensionen f ¨ur die F ¨ahigkeiten vonGrundsch ¨ulern zu umfassend ist. Im Folgenden wird Algorithmisierung in drei verschie-dene Dimensionen unterteilt. Die erste Dimension beschreibt die M ¨oglichkeiten Algorith-men zu beschreiben. Hierbei werden drei verschiedene Stufen unterschieden:1. Sequenzielle Befehle2. Alternativen3. IterationAls grundlegende Programmierelemente kommen normalerweise noch Methoden und inobjektorientierten Programmiersprachen Objekte hinzu. Beide z ¨ahlen wir nicht zur Algo-rithmisierung, sondern ¨ahnlich wie auch in [Sc93] zur Modellierung, da sie die Funktio-nalit¨at nicht erweitern, jedoch die Struktur ver ¨andern. Rekursion k¨onnte als eigenst ¨andigeStufe betrachtet werden. Sie kann jedoch immer durch Iteration ersetzt werden und erwei-tert den Beschreibungsbereich somit nicht. Dar ¨uber hinaus ist die Rekursion ein fortge-schrittenes Konzept der Beschreibung von L ¨osungen, welches nur selten im Alltag intuitivverwendet wird. Aus diesem Grund ist Rekursion f ¨ur eine Einf ¨uhrung in der Grundschu-le sicherlich nicht geeignet. In h ¨oheren Klassenstufen kann sie jedoch als eigenst ¨andigeStufe mit aufgenommen werden.Die zweite Dimension bezieht sich auf den Problemraum. Bei der gew ¨ahlten Umgebungist dies das Territorium des Hamsters (vgl. Bild 1). So kann ein Problem einen fest vorge-gebenen oder einen beliebigen Raum betreffen. Der Algorithmus kann somit nur f ¨ur genaueinen Raum funktionieren oder f ¨ur eine ganze Klasse von Territorien. Bei einem fest vor-gegebenen Raum wird dahingehend unterschieden, ob der Weg fest vorgegeben ist odernicht:1. vorgegebener Raum, Weg vorgegeben2. vorgegebener Raum3. beliebiger RaumAlgorithmisieren im Grundschulalter 75ii“proceedings” — 2017/9/17 — 20:19 — page 76 — #76iiiiiiBei Problemen mit einem vorgegebenem Weg m ¨ussen die Kinder nicht selbst einen Wegﬁnden, sondern dieser ist durch die Beschaffenheit des Raums vorgegeben (vgl. Bild 4 imGegensatz zu Bild 5). Probleme in einem beliebigen Raum bed ¨urfen der F ¨ahigkeit, L ¨osun-gen nicht nur an konkreten Situationen festzumachen, sondern ein Muster oder etwas Ver-gleichbares zu erkennen. Ein Beispiel hierf ¨ur w¨are”Beschreiben Sie einen Algorithmus,der Sie aus einem beliebigen Labyrinth f ¨uhrt“. Nach Piaget [SL12] ist diese F ¨ahigkeit, alsodie F ¨ahigkeit, Verhalten unabh ¨angig von einer konkreten Situation geistig zu verarbeiten,im konkret-operationalen Stadium (7-12 Jahre) noch nicht herausgebildet. Deshalb kanndiese Stufe nur als Ausblick gewertet werden. Sie wird im Folgenden nicht untersucht.Die dritte Dimension umfasst die Problemkomplexit ¨at. Hierbei werden ebenfalls drei ver-schiedene Stufen unterschieden:1. 2-3 ¨Anderungen2. 4-8 ¨Anderungen3. beliebig viele ¨Anderungen, Erkennung und Bearbeitung von MusternUntersuchungen zur Verarbeitungs- und Behaltensspanne [PSZ11] zeigen, dass 6-j ¨ahrigeKinder dazu f ¨ahig sind, etwa 4 W ¨orter unmittelbar reproduzieren zu k ¨onnen. Die Ver-arbeitungsleistung ist noch geringer einzusch ¨atzen, vgl. [Gr06]. Nach der Durchf ¨uhrungvon V ortests mit Zweit- und Drittkl ¨asslern zeigte sich, dass Probleme mit vier oder mehr¨Anderungen, die sich die SuS merken mussten, deutlich schlechter gel ¨ost wurden. Dieletzte Stufe (beliebig viele ¨Anderungen) kann nur in Kombination mit der dritten Stufeder Dimension Problemraum , also beliebiger Raum , auftreten. Deshalb wird sie in dieserArbeit nicht untersucht.Die unterschiedlichen Kombinationen von Komplexit ¨atsstufen werden im Folgenden aneinigen Stellen mit Zahlen abgek ¨urzt. So beschreibt die Bezeichnung 3.2.1 ein Problem,dass unter Verwendung von Iteration, in einem vorgegebenen Raum mit maximal 2-3¨Anderungen gel ¨ost werden muss.3 MethodeInsgesamt wurden von den SuS sieben Aufgaben bearbeitet. Alle Aufgaben wurden mitZettel und Stift bearbeitet. Es wurde bewusst auf den Einsatz von Computern verzichtet,da sich bei der Verwendung von Computern die M ¨oglichkeit bietet, eine richtige L ¨osungdurch Austesten zu gewinnen. Dies misst jedoch nicht die F ¨ahigkeit zum Algorithmisieren.Bevor die konkreten Aufgaben beschrieben und analysiert werden, sei erw ¨ahnt, dass dieUntersuchung nacheinander drei Befehlss ¨atze verwendet hat. Befehlssatz 1 wurde in denAufgaben 1-4 verwendet. Befehlssatz 2 in den Aufgaben 2-4. F ¨ur die Aufgaben 5-7 wurdeausschließlich Befehlssatz 3 verwendet.76 Katharina Wendlandt, Matthias Wendlandt, Sabrina Ho  mannii“proceedings” — 2017/9/17 — 20:19 — page 77 — #77iiiiiiBefehlssatz 1 wurde folgendermaßen deﬁniert: vor- Er geht ein K ¨astchen vor, links - Ergeht ein K ¨astchen nach links, rechts - Er geht ein K ¨astchen nach rechts, zur¨uck- Er gehtein K ¨astchen zur ¨uck.Befehlssatz 2 umfasst die Befehle: vor bis zur Wand - Er geht vor bis zur Wand, links biszur Wand - Er geht nach links bis zur Wand, rechts bis zur Wand - Er geht nach rechtsbis zur Wand, zur¨uck bis zur Wand - Er geht zur ¨uck bis zur Wand.Befehlssatz 3 umfasst die Befehle: vor- Er geht ein K ¨astchen vor, linksum - Er dreht sichnach links (90 Grad), rechtsum - Er dreht sich nach rechts (90 Grad), Wand - Er geht vorbis zur Wand.Im Folgenden werden die Aufgaben erkl ¨art. Zun ¨achst die ersten beiden Aufgaben undAufgabe 5:1. Das ist unser Hamster Emil. Er hat einen neuen K ¨aﬁg bekommen und kennt sichnoch nicht so gut aus. Er wacht nachts auf und hat Hunger. Leider ist es sehr dunkelund er sieht nichts. Bitte hilf ihm, damit er das Futter ﬁndet (siehe Bild 1).2. Emil will sein neues Spielzeug, einen Tunnel, ausprobieren. Er ist noch ein bisschen¨angstlich. Du musst ihn f ¨uhren. Du darfst kein Kommando zweimal hintereinanderbenutzen (vor vor ist nicht erlaubt!) (siehe Bild 2).5. Emil hat Futter gefunden und m ¨ochte es in seinen Bau bringen. Bitte hilf ihm! Leiteihn zum Futter und dann zur ¨uck zum Ausgangspunkt.Bild 1. Aufgabe 1 Bild 2. Aufgabe 2 Bild 3. Aufgabe 5Diese Aufgaben dienen zum einen als Einf ¨uhrung der Befehlss ¨atze und”Warming up“,zum anderen sollen sie zeigen, dass die SuS die Befehle verstanden haben, wissen, wie sieihre L ¨osungen aufschreiben sollen und prinzipiell keine links-rechts Schw ¨achen haben. Siezielen noch nicht darauf ab, eine der Stufen der Komplexit ¨at (vgl. Kapitel 2) zu messen.Der erste Block von bewerteten Aufgaben (3+4) besch ¨aftigt sich mit der Stufe der Itera-tionen . Hierbei wird die erste Stufe des Problemraums (vorgegebener Raum, vorgegebenerAlgorithmisieren im Grundschulalter 77ii“proceedings” — 2017/9/17 — 20:19 — page 78 — #78iiiiiiWeg) in Aufgabe 3 und die zweite Raumstufe in Aufgabe 4 (vorgegebener Raum) getestet.Die Problemkomplexit ¨at bleibt in der untersten Kategorie, da die Tests vor allem Aussa-gen¨uber die F ¨ahigkeit des Konzepts der Iteration geben sollen. Es werden also Stufe 3.1.1und Stufe 3.2.1 getestet.Die Aufgaben 3 und 4:3. Puh! Der Tunnel ist ja noch gar nicht zu Ende und jetzt geht er auch noch im Zick-Zack weiter. F ¨uhre Emil durch den Tunnel.Emil, mache solange...bis du aus dem Tunnel kommst!4. V om vielen Laufen hat Emil aber Hunger. Benutze m ¨oglichst wenig Anweisungen.Emil, mache solange...bis du oben an der Wand bist. Gehe nun noch...Bild 4. Aufgabe 3 Bild 5. Aufgabe 4In den Aufgaben 6 und 7 wurde die Problemkomplexit ¨at untersucht. So wurden bei beidenAufgaben die ersten beiden Stufen auf unterstem Niveau betrachtet (sequentielle Befeh-le, vorgegebener Raum, vorgegebener Weg) . Aufgabe 6 misst die Problemkomplexit ¨at aufStufe 1 (2-3 ¨Anderungen) und Aufgabe 7 misst die Problemkomplexit ¨at auf Stufe 2 (4-8¨Anderungen) . In V ortests zeigte sich, dass sich die Kinder Positionen im Raum durchBenutzung des Fingers auf dem Aufgabenzettel merkten. Deshalb wurde bei den Aufga-ben 5-7 die Drehung aufgenommen und darauf geachtet, dass die SuS nur einen Stift zurL¨osung benutzen konnten. Auf diese Weise konnte sichergestellt werden, dass die SuS sichgewisse Situationen merken mussten. Diese F ¨ahigkeit wird beim Programmieren h ¨auﬁgben¨otigt, zum Beispiel bei Ver ¨anderungen von Variablen oder Arrays in einem Programm.78 Katharina Wendlandt, Matthias Wendlandt, Sabrina Ho  mannii“proceedings” — 2017/9/17 — 20:19 — page 79 — #79iiiiiiDie Aufgaben 6 und 7:6 Emil ist entlaufen und ist in ein Rohr gekrabbelt. Er hat Angst und m ¨ochte deshalbnur noch vorw ¨arts laufen, weil er dort alles gut sieht. K ¨onntest du ihm helfen, wiederheraus zu kommen?7 Emil ﬁndet wieder einmal das Futter nicht. F ¨uhre Emil zu den 6 Honigb ¨allchen.Bild 6. Aufgabe 6 Bild 7. Aufgabe 7Um die Objektivit ¨at der Untersuchung zu gew ¨ahrleisten, wurde ein einheitlicher Ablauf-plan f ¨ur alle Untersuchungen aufgestellt. Sowohl die Erkl ¨arungen der Befehle, als auch diegezeigten Beispiele und der organisatorische Ablauf waren somit einheitlich und klar vor-gegeben. Dar ¨uber hinaus wurden alle Untersuchungen unter Anleitung derselben Persondurchgef ¨uhrt.4 ErgebnisseDie bearbeiteten Aufgaben wurden bewertet und die Resultate in die diskrete Ordinalskalabestehend aus den drei Merkmalen”richtig gel ¨ost“,”teilweise gel ¨ost“ und”nicht gel ¨ost“eingeordnet. Die Bewertung”teilweise gel ¨ost“ wurde vergeben, wenn kleinere Fehler ge-macht wurden, aber die L ¨osung des Problems erkennbar war. Syntaxfehler, bzw. Recht-schreibfehler, wurden nicht als Fehler gewertet. Die Ergebnisse der einzelnen Aufgabensind in Kontingenztafeln dargestellt.Die statistische Auswertung der Ergebnisse wurde mittels des Exakten Fisher-Tests durch-gef¨uhrt. Die Berechnung erfolgte durch das Statistikprogramm R. Der Nachweis der Leis-tungsunterschiede zwischen den einzelnen Klassenstufen erfolgt zum Signiﬁkanzniveau1%. Die nachgewiesenen Unterschiede gelten als hoch signiﬁkant .Algorithmisieren im Grundschulalter 79ii“proceedings” — 2017/9/17 — 20:19 — page 80 — #80iiiiiiSind Unterschiede in den Leistungen zwischen der zweiten und dritten und zwischen derdritten und vierten Klasse nachweisbar, so kann hier aufgrund der Daten transitiv aufeinen Leistungsunterschied zwischen den Klassen 2 und 4 geschlossen werden. Nur inEinzelf ¨allen werden daher die Ergebnisse der zweiten und vierten Klasse direkt miteinan-der verglichen.Aufgabe 3 Klasse 2 Klasse 3 Klasse 4richtig gel ¨ost 5 31 39 75teilweise gel ¨ost 1 3 0 4nicht gel ¨ost 27 32 17 7633 66 56 155Tabelle 1. Ergebnisse Aufgabe 3Bei Aufgabe 3 ist zwischen der zweiten und dritten Klasse ein signiﬁkanter Unterschiednachweisbar ( p=0.002). Auch wenn im Vergleich zu den SuS aus Klasse 3 ein h ¨ohererProzentsatz der SuS aus Klasse 4 die Aufgabe richtig l ¨osen konnte, ist dieser Unterschiednicht signiﬁkant ( p=0.014). Ein deutlicher Leistungsunterschied besteht außerdem zwi-schen der zweiten und vierten Klasse ( p<0.001).Aufgabe 4 Klasse 2 Klasse 3 Klasse 4richtig gel ¨ost 1 16 29 46teilweise gel ¨ost 0 5 0 5nicht gel ¨ost 32 45 27 10433 66 56 155Tabelle 2. Ergebnisse Aufgabe 4Bei Aufgabe 4, der Aufgabe auf der h ¨oheren Problemstufe 3.2.1, lassen sich signiﬁkan-te Unterschiede zwischen der zweiten und dritten Klasse ( p=0.003) und zwischen derdritten und vierten Klasse ( p=0.001) nachweisen. Es kann außerdem festgestellt werden,dass nur ein Kind aus der zweiten Klasse die Aufgabe l ¨osen konnte.Aufgabe 6 Klasse 2 Klasse 3 Klasse 4richtig gel ¨ost 10 29 31 70teilweise gel ¨ost 7 17 14 38nicht gel ¨ost 16 20 11 4733 66 56 155Tabelle 3. Ergebnisse Aufgabe 6Bei Aufgabe 6 l ¨asst sich kein signiﬁkanter Unterschied zwischen den einzelnen Klassen-stufen feststellen. Auch wenn angenommen werden muss, dass die SuS der zweiten unddritten Klasse die Aufgabe gleichermaßen l ¨osen konnten ( p=0.216), genauso wie die SuS80 Katharina Wendlandt, Matthias Wendlandt, Sabrina Ho  mannii“proceedings” — 2017/9/17 — 20:19 — page 81 — #81iiiiiider dritten und vierten Klasse ( p=0.350), so zeichnet sich doch ein Unterschied zwischenden SuS der zweiten und vierten Klasse ab ( p=0.015).Aufgabe 7 Klasse 2 Klasse 3 Klasse 4richtig gel ¨ost 6 34 38 78teilweise gel ¨ost 8 13 6 27nicht gel ¨ost 19 19 12 5033 66 56 155Tabelle 4. Ergebnisse Aufgabe 7Bei der h ¨oheren Problemkomplexit ¨at in Aufgabe 7 ist ein signiﬁkanter Unterschied zwi-schen der zweiten und dritten Klasse nachweisbar ( p=0.003). Der Unterschied in denErgebnissen der dritten und vierten Klasse ist nicht signiﬁkant ( p=0.184). Es liegt eindeutlicher Unterschied zwischen den Leistungen der SuS der zweiten und vierten Klassevor(p<0.001).5 Diskussion und AusblickEs zeigt sich ein deutlicher Leistungsunterschied zwischen der zweiten und der drittenKlasse. So konnten in den Aufgaben 3, 4 und 7 signiﬁkante Unterschiede nachgewiesenwerden. Auff ¨allig ist auch, dass, bis auf eine einzige Ausnahme, kein Sch ¨uler und keineSch¨ulerin der zweiten Klasse das Konzept der Iteration umsetzen konnte. Hingegen zeigtsich in der dritten Klasse, dass nahezu die H ¨alfte der Kinder unmittelbar f ¨ahig waren,dieses Konzept umzusetzen, sofern der Weg vorgegeben war. Bei nicht vorgegebenemWeg waren es nur noch ein Viertel der Drittkl ¨assler, die die Aufgabe l ¨osen konnten. DerUnterschied zwischen zweiter und dritter Klasse wird auch in Aufgabe 7 sehr deutlich. Sonimmt die Leistung bei einer h ¨oheren Anzahl von Ver ¨anderungen, die verarbeitet werdenm¨ussen, stark ab.Der Unterschied zwischen den Klassen 3 und 4 zeigt sich vor allem bei dem Konzept derIteration. So ist der Unterschied bei Aufgabe 3 mit vorgegebenem Weg zwar vorhanden,aber nicht signiﬁkant. Bei Aufgabe 4 hingegen haben zirka ein Viertel der Drittkl ¨assler dieAufgabe korrekt gel ¨ost, wohingegen mehr als die H ¨alfte der Viertkl ¨assler diese Aufgabeerfolgreich l ¨osen konnte. Die sichtbaren Unterschiede in den Ergebnissen der Dritt- undViertkl ¨assler in Aufgabe 7 m ¨ussen als zuf ¨allig angesehen werden.Es zeigt sich, dass Aufgaben auf sehr niedrigem Niveau in allen Klassenstufen erfolgreichbearbeitet werden konnten. Sowohl das Konzept der Iteration als auch h ¨ohere Problem-komplexit ¨atsstufen f ¨uhrten zu großen Problemen bei Sch ¨ulerinnen und Sch ¨ulern der zwei-ten Klasse. Das Konzept der Iteration kann unmittelbar erst ab der dritten Klasse verstan-den und angewendet werden. Der sichere Umgang mit Iteration kann erst ab der viertenKlasse erwartet werden.Insgesamt zeigt die Untersuchung klare Unterschiede im ¨Ubergang zwischen der zwei-ten und der dritten Klasse. Hinzu kommt, dass das Konzept der Iteration eine deutlicheAlgorithmisieren im Grundschulalter 81ii“proceedings” — 2017/9/17 — 20:19 — page 82 — #82iiiiiiH¨urde in allen untersuchten Jahrgangsstufen ist. In einer Folgeuntersuchung muss ¨uber-pr¨uft werden, inwieweit diese Stufen in den betrachteten Altersklassen trainierbar sind. Sosollte nach einem Eingangstest eine Unterrichtseinheit oder ¨Ahnliches mit Grundschul-kindern durchgef ¨uhrt werden und infolgedessen ein zweiter Test durchgef ¨uhrt werden.Hierbei muss vor allem die Verwendung des Programmierelements Iteration in allen Jahr-gangsstufen untersucht werden. Desweiteren m ¨ussen die Bedingungen der zweiten Klassegenauer untersucht werden, da hier die prinzipielle Frage ist, ob Sch ¨ulerinnen und Sch ¨ulerder zweiten Klasse f ¨ahig sind, L ¨osungen f ¨ur Probleme auf h ¨oheren Stufen zu erstellen.Aber auch f ¨ur die Klassen 3 und 4 stellt sich die Frage, ob sich die F ¨ahigkeiten f ¨ur einegr¨oßere Anzahl von Sch ¨ulerinnen und Sch ¨uler in einer Unterrichtseinheit erlernen, bzw.festigen lassen. F ¨ur die vierte Klasse stellt sich dar ¨uber hinaus die Frage, ob die Sch ¨ule-rinnen und Sch ¨uler schon in diesem Alter f ¨ahig sind, Probleme in einem beliebigen Raumzu l¨osen, da dies in klassischen Programmieraufgaben eine wichtige Rolle spielt.Literatur[BC82] John B. Biggs, Kevin F. Collis, Evaluating the quality of learning: The SOLO taxonomy;structure of observed learning outcome , Educ. Psychology Series, Academic Pr., 1982.[BD09] Christian Borowski, Ira Diethelm, Kinder auf dem Weg zur Informatik: Programmierenin der Grundschule , In: Zukunft braucht Herkunft, INFOS 2009, 244–253, 2009.[Bi16] Gerhard R ¨ohner et al., Bildungsstandards Informatik f ¨ur die Sekundarstufe II , Beilagezu LOG IN, Heft Nr. 183/184, 2016.[BLS11] Nadine Bergner, Thiemo Leonhardt, Ulrik Schroeder Zauberschule Informatik – Einblickin die Welt der Informatik f ¨ur Kinder im Grundschulalter , In: Informatik mit Kopf, Herzund Hand, INFOS 2011, 132–141, 2011.[Bo13] Dietrich Boles, Programmieren spielend gelernt mit dem Java-Hamster-Modell ,Springer-Vieweg-Verlag, 2013.[BR12] Karen Brennan and Mitchel Resnick, New frameworks for studying and assessing thedevelopment of computational thinking , In: AERA, 2012.[Gr06] Dietmar Grube, Entwicklung des Rechnens im Grundschulalter , Waxmann, 2006.[GW16] Robert Garmann, Benjamin Wanous, Code for competence - Programmieren f ¨ur Zweit-kl¨assler mit ScratchJr , In: Informatik f ¨ur Kinder - 7. M ¨unsteraner Workshop zur Schul-informatik, 71–80, 2016.[MHB15] Andreas M ¨uhling, Peter Hubwieser, Marc Benges, Dimensions of programming know-ledge. , In: Situation, Evolution, and Perspectives, International Conference on Informa-tics in Schools, 32–44, Springer, 2015.[PSZ11] Martin Pinquart, Gudrun Schwarzer, Peter Zimmermann, Entwicklungspsychologie -Kindes- und Jugendalter , 111–121, Hogrefe Verlag, 2011.[RHP08] Kristina Reiss, Aiso Heinze, Reinhard Pekrun, Mathematische Kompetenz und ihre Ent-wicklung in der Grundschule , In: Kompetenzdiagnostik, 107–127, Verlag f ¨ur Sozialwis-senschaften, 2008.[Sc01] Andreas Schwill, Ab wann kann man mit Kindern Informatik machen? , In: Informatik-unterricht und Medienbildung, INFOS 2001, 13–30, 2001.[Sc93] Andreas Schwill, Fundamentale Ideen der Informatik , Zentralblatt f ¨ur Didaktik der Ma-thematik 1, 20–31, 1993.[SL12] Wolfgang Schneider, Ulman Lindernberger Entwicklungspsychologie , 385–400, BeltzVerlag, 2012.82 Katharina Wendlandt, Matthias Wendlandt, Sabrina Ho  mannii“proceedings” — 2017/9/17 — 20:19 — page 83 — #83iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017    15  Bild der Informatik von Grundschullehrpersonen Erste Zwischenergebnisse aus qualitativen Einzelfallstudien Alexander Best1 Abstract: Über eine schriftliche Umfrage an Grundschulen im Regierungsbezirk Münster (NRW) konnten Lehrpersonen für Einzelinterviews über ihre Vorstellungen zur Informatik und zu Informatikunterricht gewonnen werden. Die Lehrpersonen assoziieren Gegenstände, Inhalte und Methoden der Informatik, der Medienbildung, des unterrichtlichen Medieneinsatzes sowie bestehender Grundschulfächer mit Informatikunterricht. Sie stellen Bezüge zu verschiedenen Inhalts- und Prozessbereichen der Empfehlungen für Bildungsstandards Informatik für die Sekundarstufe I der Gesellschaft für Informatik (GI) her. Kindern den kreativen, kritischen, sachgerechten und zielgerichteten Umgang mit Informatiksystemen zu vermitteln, wird von den Interviewten als wesentliches Ziel informatischer Bildung in der Grundschule verstanden. Es werden Zwischenergebnisse des Forschungsvorhabens auf Basis von zwei Interviews vorgestellt. Keywords: Informatik in der Grundschule; Primarbildung; Bild der Informatik; Lehrervorstellungen; Einzelfallstudien; Leitfadeninterviews; Qualitative Forschung 1 Einleitung Die Forderungen nach informatischer Bildung im Primarbereich haben in den vergangenen Jahren stark zugenommen [ACM12]. Als möglicher Lehr-Lernort wurde, neben außerschulischen Angeboten, der Klassenunterricht an Grundschulen genannt (ex. [BDM10]). Bislang liegen kaum gesicherte Erkenntnisse über Vorstellungen von Grundschullehrpersonen zur Informatik und zu Informatikunterricht in Deutschland vor [BM15, FGH16]. Diese stellen eine wesentliche Voraussetzung dar, um Unterrichtskonzepte sowie Aus-, Fort- und Weiterbildungsangebote in einem Bottom-Up-Verfahren entwickeln zu können [DKW11]. Für den Sekundar- und Tertiärbereich existieren bereits Arbeiten zu diesem Forschungsfeld (ex. [Be15]). Im Rahmen des Forschungsprojekts Informatik in der Grundschule (IGS) am Arbeitsbereich Didaktik der Informatik der Westfälischen Wilhelms-Universität Münster werden Studien zu diesem Desiderat durchgeführt. Im Projekt werden u.a. folgende Forschungsfragen untersucht: x Welche biografischen Bezüge zur Informatik und zu Informatikunterricht werden von Grundschullehrpersonen assoziiert?                                                            1 Westfälische Wilhelms-Universität Münster, Didaktik der Informatik, Fliednerstr. 21, 48149 Münster, alexander.best@uni-muenster.de I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 83ii“proceedings” — 2017/9/17 — 20:19 — page 84 — #84iiiiii 16    Alexander Best   x Wo begegnen Grundschulkinder in ihrem Alltag nach Ansicht von Grundschullehrpersonen Informatik? x Wie sind zentrale Begriffe der Informatik und des Informatikunterrichts nach Auffassung von Grundschullehrpersonen inhaltlich belegt und welche Bedeutung messen sie diesen Begriffen der Primarbildung bei? 2 Methodologie und Methodik Im Forschungsprojekt IGS wird ein hypothesengenerierender Ansatz im Kontext qualitativer Forschung verfolgt. Eine erste Pilotstudie im Jahr 2015 zeigte, dass über die Erhebung quantitativer Daten zwecks Hypothesenüberprüfung nur ein sehr eindimensionaler Zugang zum Forschungsfeld geschaffen werden konnte [BM15]. Erste Zwischenergebnisse aus den bislang geführten Einzelinterviews lassen vermuten, dass den Lehrpersonen durch die methodische Neuausrichtung mehr Raum für die Darlegung ihrer individuellen Perspektive gegeben wird. Zur Datenerhebung wurde ein Interviewleitfaden nach dem sogenannten SPSS-Prinzip entwickelt [He11]. Es wurden zunächst Fragen des Forschers gesammelt (S), anhand von Kriterien geprüft (P), sortiert (S) und subsummiert (S). Der so entstandene Interviewleitfaden wurde einer befreundeten Grundschullehrperson zur Prüfung vorgelegt, um unverständliche Leitfragen bzw. Fragen der Check-Liste zu identifizieren und umzuformulieren. Anschließend erfolgte ein erstes Testinterview, bei dem sämtliche Fragen erneut auf ihre Verständlich- und Tauglichkeit geprüft wurden. Das Ergebnis waren vier Leitfragen mit jeweils 4-6 Fragen für die Check-Liste2: 1. „Zu Beginn des Interviews möchte ich Sie bitten, mir zu beschreiben, was Sie mit Informatik verbinden.“ 2. „Welche Aufgaben hätte Ihrer Meinung nach Informatikunterricht in der Grundschule?“ 3. „Wo taucht Ihrer Ansicht nach Informatik im Leben von Grundschulkindern ganz konkret auf?“ Vor der vierten Frage wurde den Lehrpersonen eine Übersicht über die Inhalts- und Prozessbereiche der Empfehlungen für Bildungsstandards Informatik für die Sekundarstufe I der GI vorgelegt [GI08]: 4. „Sie finden hier einige Fachbegriffe zur Informatik. Welche Begriffe sind Ihrer Ansicht nach bedeutsam für die Grundschule und welche unterrichtlichen Inhalte verbinden Sie mit diesen?“ Die Anordnung der Fachbegriffe (Bereiche) wechselte zwischen den Interviews, sodass                                                            2 Aus Platzgründen werden hier nur die Leitfragen aufgeführt. 84 Alexander Bestii“proceedings” — 2017/9/17 — 20:19 — page 85 — #85iiiiii Bild der Informatik von Grundschullehrpersonen    17  gleiche Antworten nicht auf dieselbe Anordnung zurückgeführt werden können. Die Interviews wurden mit schriftlichem Einverständnis der Interviewten digital-auditiv aufgezeichnet und anhand von Anonymisierungs- und Transkriptionsregeln transkribiert. 3 Zwischenergebnisse und Ausblick Bei den interviewten Lehrpersonen, nennen wir sie ALICE und BOB, existieren erste Präkonzepte zur Informatik und zu Informatikunterricht. Dies entspricht den Ergebnissen der Pilotstudie von Best und Marggraf [BM15] sowie der Studie von Funke, Geldreich und Hubwieser [FGH16]. ALICE verfügt in den Bereichen Ort der informatischen Bildung und Aufgaben von Informatikunterricht bereits über sehr konkrete Vorstellungen, die zum einen eng an den Mathematikunterricht geknüpft und zum anderen durch die hohe Durchdringung der Schülerschaft mit Smartphones geprägt sind. Die Aussagen von BOB hingegen scheinen noch nicht derart gefestigt zu sein. Er sieht den Ort der informatischen Bildung einerseits in einem fächerintegrierten Ansatz und andererseits in einem eigenständigen Fach Informatik („oder AG/Neigungsgruppe“). Die Frage, welche informatischen Inhalte wo behandelt werden sollten, führt er auf deren kognitive Komplexität und die intrinsische Motivation der Schülerinnen und Schüler3 zurück. Die Abgrenzung scheint jedoch nicht trennscharf. Sowohl ALICE als auch BOB verorten den Kontakt von Grundschulkindern mit Informatik in deren Interaktion mit Informatiksystemen, insbesondere Smartphones. In Punkto der Ausprägung dieses Kontakts scheinen sich die Schülerschaften der beiden Lehrpersonen zu unterscheiden. ALICE gibt an, dass die SuS mehrheitlich mit diesen Systemen in Kontakt treten. BOB hingegen beobachtet dies nur bei wenigen SuS. Dennoch sehen beide diesen Umstand durchaus kritisch. Aufgabe eines Informatikunterrichts in der Grundschule sei das Aufzeigen der Funktionsweise, aber auch der potentiellen Gefahren dieser Informatiksysteme. Auch bezüglich der Inhalts- und Prozessbereiche [GI08] weichen die Aussagen von ALICE und BOB voneinander ab. Während ALICE erneut den starken Bezug zum Lehrplan bzw. dem Modellierungskreislauf der Mathematik herstellt sowie die Algorithmik hervorhebt, erarbeitet sich BOB ein Verständnis der Begriffe ad-hoc. Einige Assoziationen, wie die Verknüpfung des Bereichs Sprachen und Automaten mit „Software zum Erlernen von Fremdsprachen oder der Deutschen Sprache“, überraschen. Bob stellt jedoch auch Bezüge zu Programmiersprachen, Datenschutz sowie zur Datenspeicherung und -sicherheit her. Die ersten beiden ausgewerteten Interviews lassen vermuten, dass die Vorstellungen der Lehrpersonen zur Informatik und zu Informatikunterricht von unterschiedlichen Faktoren geprägt werden. Dazu könnten Erfahrungen mit dem Informatikunterricht in der eigenen Schulzeit, Kontakte mit universitären „Computerkursen“, Einsatz von                                                            3 Im Folgenden mit SuS abgekürzt. Bild der Informatik von Grundschullehrpersonen 85ii“proceedings” — 2017/9/17 — 20:19 — page 86 — #86iiiiii 18    Alexander Best   Informatiksystemen in bestehenden Grundschulfächern, Kontakte der eigenen Kinder mit Informatiksystemen sowie weitere Faktoren zählen. Auch zur inhaltlichen Erschließung der Fachbegriffe (Bereiche) werden unterschiedliche Zugänge und Strategien gewählt, welche sich aus Alltagsverständnissen oder bestehenden Grundschulfächern ergeben könnten. Über die Auswertung weiterer Interviews und die systematische Entwicklung eines Kategoriensystems sollen im Verlauf des Projekts IGS weitere Erkenntnisse gewonnen werden. Es wird auf Techniken der Qualitativen Inhaltsanalyse nach Mayring sowie der Grounded Theory nach Glaser und Strauss zugegriffen werden. Literaturverzeichnis [ACM12] Computer Science Teachers Association (CSTA) und Association for Computing Machinery (ACM): Computer Science K-8. Building a Strong Foundation. ACM Press, New York, S. V, 2012. [Be15] Bender, E. et al.: Identifying and formulating teachers’ beliefs and motivational orientations for computer science teacher education. Studies in Higher Education Vol. 41/2016 Issue 11, S. 1958-1973, 2015. [BDM10] Borowski, C.; Diethelm, I.; Mesaroş, A.: Informatische Bildung im Sachunterricht der Grundschule. Theoretische Überlegungen zur Begründung. widerstreit-sachunterricht Ausgabe 15/Oktober 2010, 2010. [BM15] Best, A.; Marggraf, S.: Das Bild der Informatik von Sachunterrichtslehrern. Erste Ergebnisse einer Umfrage an Grundschulen im Regierungsbezirk Münster. In (Gallenbacher, J. Hrsg.): Informatik allgemeinbildend begreifen. INFOS 2015. 16. GI-Fachtagung Informatik und Schule, Darmstadt 2015. Köllen Verlag + Druck, Bonn, S. 53-62, 2015. [DKW11] Diethelm, I.; Koubek, J.; Witten, H.: IniK – Informatik im Kontext. Entwicklungen, Merkmale und Perspektiven. LOG IN 169/170, S. 100 f., 2011. [FGH16] Funke, A.: Geldreich, K.; Hubwieser, P.: Primary school teachers' opinions about early computer science education. In (Sheard, J.; Montero, C. S. Hrsg.): Koli Calling 2016. Proc. 16th Koli Calling Int. Conf. on Computing Education Research, Koli 2016. ACM Press, New York, S. 135-139, 2016. [GI08] Gesellschaft für Informatik e.V.: Grundsätze und Standards für die Informatik in der Schule. Bildungsstandards Informatik für die Sekundarstufe I. Beilage zu LOG IN 150/151, S. 11, 2008. [He11] Helfferich, C.: Die Qualität Qualitativer Daten. Manual für die Durchführung qualitativer Interviews, 4. Auflage, VS Verlag für Sozialwissenschaften, Wiesbaden, S. 182-189, 2011. Wir bedanken uns bei allen Lehrerinnen und Lehrern, die sich an der Umfrage und den Interviews beteiligt haben. Unser Dank gilt weiterhin den Schulämtern und der Bezirksregierung Münster für ihre Unterstützung. 86 Alexander Bestii“proceedings” — 2017/9/17 — 20:19 — page 87 — #87iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 1Aufbau des Internets: Vorstellungsbilder angehenderLehrkr ¨afteAndreas Dengel1und Ute Heuer2Abstract: Heranwachsende haben ein nat ¨urliches Fragebed ¨urfnis in Bezug auf ihre Umwelt. In derdigitalen Informationsgesellschaft des 21. Jahrhunderts ist das Internet aufgrund der allgegenw ¨artigenVernetzung von Menschen, Computern und Informationen ein omnipr ¨asenter Bestandteil der kind-lichen Umwelt. Hierdurch entstehende Fragen richten Kinder vorwiegend an eine Bezugspersonmit Lehrfunktion, welche im Grundschulalter zumeist durch die entsprechende Lehrkraft verk ¨orpertwird. Um auf solche Fragen ad ¨aquat eingehen zu k ¨onnen, sind entsprechende Fachkompetenzender Lehrkraft notwendig. Anhand einer kognitionspsychologischen Fundierung und unter Ber ¨uck-sichtigung des tats ¨achlichen physisch-topologischen Aufbaus des Internets wurde eine Studie zuentsprechenden V orstellungsbildern entwickelt und durchgef ¨uhrt. Die Ergebnisse der Untersuchungmit 167 Lehramtsstudierenden aller Schularten zeigen, dass die V orstellungsbilder von angehendenLehrkr ¨aften zum Aufbau des Internets oftmals auf drastischen Fehlannahmen basieren, welche beiStudierenden des Grundschullehramts besonders stark ausgepr ¨agt sind. Die Diskussion der Untersu-chungsergebnisse m ¨undet in einem Forschungsdesiderat zur Begegnung dieses Fachkompetenzdeﬁ-zits, insbesondere im Grundschulbereich.Keywords: Informatik in der Grundschule, Aufbau des Internets, V orstellungsbilder, Lehramtsstu-dium, Fehlvorstellung1 Einf ¨uhrungNahezu alle aktuellen Bildungsinitiativen fordern die weiterf ¨uhrende Digitalisierung derSchulen. Das Strategiepaper”Bildung in der digitalen Welt“ sowie das Modellprojekt”Di-gitale Schule 2020“ erstreben die Weiterentwicklung und kompetente Nutzung der digita-len M ¨oglichkeiten in Schulen in Form vernetzter technischer Hilfsmittel [Km16], [DS17].Zu den allgemeinbildenden Inhalten der heutigen Informationsgesellschaft z ¨ahlt gem ¨aßdem Strategiepaper”Bildung in der digitalen Welt“ der Kultusministerkonferenz unter an-derem auch, die Herausforderungen der”digitalen Revolution“ bew ¨altigen zu k ¨onnen, waseine Weiterentwicklung des Unterrichts und eine entsprechende Qualiﬁkation der Lehr-kr¨afte erfordert [Km16]. Eine damit einhergehende Professionalisierung angehender Lehr-kr¨afte ist unabdinglich, um eine konsistente Vermittlung von Lerninhalten in Bezug auf diedigitale Welt zu gew ¨ahrleisten, besonders, da Informatik in Deutschland l ¨angst nicht in al-len Schularten als Pﬂichtfach integriert ist.1Universit ¨at Passau, Lehr- und Forschungseinheit ”Lehramtausbildung Mathematik und Informatik”, Innstr. 33,94032 Passau, andreas.dengel@uni-passau.de2Universit ¨at Passau, Lehr- und Forschungseinheit ”Lehramtausbildung Mathematik und Informatik”, Innstr. 33,94032 Passau, heuer@ﬁm.uni-passau.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 87ii“proceedings” — 2017/9/17 — 20:19 — page 88 — #88iiiiii2 Andreas Dengel und Ute HeuerIn Deutschland l ¨asst besonders die Grundschule bislang eine Implementierung der Infor-matik in den Lehrplan missen, was bei Grundsch ¨ulerinnen und -sch ¨ulern zu einem Infor-mationsdeﬁzit bez ¨uglich bestehender Fragen f ¨uhrt: In einer Untersuchung von [BDW16]wurden 2594 Fragen von 600 Sch ¨ulerinnen und Sch ¨uler der Grundschule gesammelt, da-von allein 656 Fragen zum Thema Internet. Beispielhaft werden Fragen wie”Can I rentor buy the Internet?“,”Is there a central computer for the Internet?“,”What is the sourceof the Internet?“ und”Can the Internet get broken?“ genannt.Allerdings sind besonders solche physisch nicht allgegenw ¨artigen Konzepte unserer di-gitalen Welt, wie der Aufbau des Internets, bei Sch ¨ulerinnen und Sch ¨ulern zumeist vonFehlvorstellungen gepr ¨agt (u.a. [DZ10]; [Pa05]; [He15]). So stellten sich in der qualita-tiven Untersuchung nach [DZ10] 40% der 23 befragten Sch ¨uler einen zentralen Rechnervor, ¨uber den das Internet l ¨auft, Probanden der Studie von [Pa05] mit 340 griechischenSch¨ulerinnen und Sch ¨ulern zeichneten neben ¨ahnlichen zentralisierten bzw. hierarchischenStrukturen (56%) oder Formen der Direktvernetzung (6%) auch Modelle mit komplett feh-lender Kommunikation (29%).Falsche V orstellungsbilder ﬁnden sich aber nicht nur auf Seite der Lernenden: auch bei an-gehenden Lehrerinnen und Lehrern haben sich oft Fehlvorstellungen eingepr ¨agt, wie eineV oruntersuchung zeigen konnte: Es wurden 30 Studierende verschiedener Lehramtsf ¨acher(außer Informatik) und Schularten nach ihrer V orstellung zum E-Mail-Versand befragt.Hierbei ließen sich die Angaben von 93,3% der Probanden einem naiven metaphorischenModell des Internets nach [He15] zuordnen, beispielsweise als direkte Datenleitung zwi-schen zwei Computern oder dem Internet als”Wolke“/Blackbox, bzw. konnten als eineTopologie der lokalen Vernetzung (Stern, Bus, Hierarchie) identiﬁziert werden.2 Entstehung von VorstellungsbildernDas Alter, in welchem Kinder das erste Mal in Kontakt mit dem Internet kommen, l ¨asstsich durch dessen Allgegenw ¨artigkeit und unausweichliche Pr ¨asenz in allen Lebensberei-chen nicht klar bestimmen. Dadurch entwickeln Kinder teilweise schon sehr fr ¨uh ihre ei-gene V orstellung zum Aufbau des Internets. Hieraus ergibt sich zun ¨achst die Frage, wie einV orstellungsbild zu einer bestimmten Thematik ohne konkrete Wissensvermittlung durcheinen Lehrenden entsteht. Die Lernpsychologie nennt hierzu den von Gagn ´e gepr ¨agtenBegriff des kumulativen Lernens, welcher den Prozess des Verkn ¨upfens neu erworbenerInformationen mit bereits im Ged ¨achtnis existierendem Wissen bezeichnet [Br79].Im Modell des kumulativen Lernens wird das bereits existierende Wissen als”Schema“und der Prozess der Eingliederung und Vernetzung neuer Informationen als”Assimilation“bezeichnet [Ma81].3Kumulatives Lernen erfolgt nach Mayer, wenn von außen kommende,neue Informationen folgende Schritte durchlaufen:3Die Verwendung der Begriffe Schema / schema undmentales Modell / mental model ist im deutsch- und eng-lischsprachigen Raum nicht einheitlich. Da dieses Paper Probleml ¨oseprozesse fokussiert (im Gegensatz zusubjektiven Funktionsmodellen anderer Untersuchungen), wird der Begriff Schema hier im Sinne von bereitsexistierendem Wissen nach [Ma81] verwendet.88 Andreas Dengel, Ute Heuerii“proceedings” — 2017/9/17 — 20:19 — page 89 — #89iiiiiiAufbau des Internets: V orstellungsbilder angehender Lehrkr ¨afte 3(1) Aufnahme . Zun ¨achst muss der Lernende seine Aufmerksamkeit auf die eintreffendeInformation richten, sodass diese vom sensorischen ins Kurzzeitged ¨achtnis gelangt.(2) Verf¨ugbarkeit . Der Lernende muss ¨uber zur neuen Information passende bereits vor-handene Konzepte im Langzeitged ¨achtnis verf ¨ugen, um die neue Information assi-milieren zu k ¨onnen.(3) Aktivierung . Der Lernende muss aktiv sein bereits bestehendes V orwissen nutzen,um die neue Information in sein Schema im Langzeitged ¨achtnis einzugliedern.Ein besonderes Augenmerk sei hier auf den in (2) beschriebenen Prozess des Suchensnach einem passendem Schema gelegt: Diese”appropriate anchoring ideas“ werden inverschiedenen Kontexten von Lehrenden benutzt, um bei der Einf ¨uhrung von neuem Stoffan die V orstellungen der Lernenden anzukn ¨upfen (u.a. [Ma81]; [He15]; [Fr01]). Geradejedoch bei der selbstgesteuerten Aneignung neuer Inhalte kommt es vor, dass vermeint-lich zur Information passende Schemata nicht der realen Struktur entsprechen, wodurchein neues, fehlerhaftes Schema entsteht. Derart inkonsistente Schemata behindern durchihre Funktion als”skelettartige Wissensstrukturen, die mit den Speziﬁka einer aktuellenProblemstellung angereichert werden, wenn die Person einem passenden Problemtyp be-gegnet“, nach [WM09] nicht nur den effektiven Probleml ¨oseprozess, sondern liefern beieinem Mismatch zwischen Realit ¨at und V orstellung auch ein falsches Ergebnis (beispiels-weise ein Nichtmuttersprachler, der versucht, die Grammatikstrukturen seiner Mutterspra-che auf die deutsche Sprache anzuwenden).Hier zeigt sich deutlich, dass bei Inhalten, deren selbstgesteuerte Aneignung intuitiv zufalschen Ergebnissen f ¨uhren w ¨urde, eine Anleitung des Lernenden durch einen Expertenzwingend erforderlich ist. Erfolgt eine Wissensvermittlung aufgrund einer fehlenden Lehr-person oder deren fehlender Fachkompetenz nicht, so bildet sich durch Assimilation an-hand eines selbstst ¨andigen kumulativen Lernprozesses ein falsches, wenngleich ¨außerstpersistentes Schema. Dieses wird f ¨ur alle folgenden Lernprozesse der entsprechendenThematik als Grundlage genommen. Ein m ¨oglicher Teilaspekt f ¨ur die Konstruktion einesad¨aquaten Schemas der topologischen Struktur des Internets wird nachfolgend dargestellt.3 Struktur des Internets[KR12] sprechen von einem Puzzle, welches es bez ¨uglich des Entwurfs einer Struktur desInternets zu l ¨osen gilt: In einem ersten Schritt sind eine Milliarde Endnutzer und Dienstan-bieter mit Internet-Service-Providern (ISPs) zu vernetzen. Die Hauptarbeit besteht jedochdarin, die ISPs selbst untereinander zu vernetzen.”This is done by creating a network ofnetworks - understanding this phrase is the key to understanding the Internet.“ Die Tier-1-ISPs, auch Internet-Backbones genannt, beﬁnden sich auf der obersten Stufe der ISP-Hierarchie und sind grunds ¨atzlich auf die gleiche Art und Weise aufgebaut und vernetztwie jedes Netzwerk: Sie besitzen Leitungen und Router und sind mit anderen Netzen ver-bunden. Ein Tier-1-ISP agiert global, es kann allerdings im Sinne einer vertikalen Integra-tion gleichzeitig auch als ISP einer niedrigeren Stufe fungieren und noch niedrigstuﬁgeren(z.B. regionalen) ISPs direkt Internetzug ¨ange verkaufen [KR12]. In gewisser Weise”par-allel zu den Tier-1-ISPs“ und”parallel zum Internet“ betreiben große Content ProviderAufbau des Internets: Vorstellungsbilder angehender Lehrkräfte 89ii“proceedings” — 2017/9/17 — 20:19 — page 90 — #90iiiiii4 Andreas Dengel und Ute Heuer(wie z.B. Google) ihr eigenes privates, weltumspannendes Netz von Daten-Zentren. EinNicht-Tier-1-ISP muss, um einen Teil des weltweiten Internets zu erreichen, zwar immerwieder seinen Datenverkehr durch einen der Tier-1-ISPs f ¨uhren, versucht sich aber oft auswirtschaftlichen Gr ¨unden auch direkt mit anderen ISPs gleicher (oder niedrigerer) Stufezu verbinden. In diesem Fall k ¨onnen Daten ¨ubertragen werden, ohne ein Tier-1-Netz pas-sieren (und dieses bezahlen) zu m ¨ussen [KR12]. F ¨ur einen schnellen, kosteng ¨unstigen undzuverl ¨assigen Datenaustausch zwischen ISPs sorgen sogenannte Peering-Points, wie derin Frankfurt beheimatete DE-CIX, an welchen nach eigenen Angaben heute mehr als 550Netzbetreiber (ISPs und Content Provider Netze) aus mehr als 50 L ¨andern angeschlossensind [Br15]. Somit l ¨asst sich mit [KR12] sagen, dass das heutige Internet - ein Netz ausNetzen - eine komplexe Struktur besitzt. Die nachfolgend beschriebene Untersuchung fo-kussiert in Anlehnung an [He15] nur folgenden Aspekt der Struktur:”Es gibt Netze, dieverschiedenen Unternehmen geh ¨oren. Diese Unternehmen betreiben eigene Vermittlungs-punkte und vernetzen diese, um Anfragen und Antworten innerhalb ihres Bereichs wei-terzuleiten. Die Unternehmensnetze wiederum tauschen an gemeinsamen Punkten Datenaus. So passiert eine Anfrage typischerweise einige Unternehmensnetze bis sie schließlichan ihr Ziel gelangt.“Ausgehend von den V orstellungsbildern aus der V oruntersuchung, den Ergebnissen derKognitionspsychologie und dem beschriebenen Aspekt der Struktur des Internets ergibtsich ein Forschungsdesiderat mit der Frage nach der Relevanz dieser Fehlvorstellungenbei angehenden Lehrkr ¨aften allgemein, sowie insbesondere in Bezug auf die Primarstufe,um dort aufkommenden Fragen der Heranwachsenden begegnen zu k ¨onnen. Da bereitsfr¨uhere Untersuchungen das V orhandensein von Fehlvorstellungen bez ¨uglich der Strukturdes Internets bei Erwachsenen im Allgemeinen nachweisen konnten (u.a. [TG98]), kon-zentriert sich die vorliegende Studie ausschließlich auf angehende Lehrkr ¨afte. Anhand derdargestellten Struktur des Internets in Verbindung mit m ¨oglichen falsch erstellten Sche-mata aus der Lebenswelt der Studierenden und anhand der bereits erhaltenen Ergebnisseder V oruntersuchung wurden speziﬁsche Fehlvorstellungen selektiert.4 Erhebung der Vorstellungsbilder4.1 Aufbau des FragebogensDer Fragebogen wurde in drei Teile untergliedert. Nach der Erhebung allgemeiner In-formationen (Geschlecht, Schulart und Hauptfach/vertieftes Fach) wurden im zweiten Teildie eigenen V orstellungsbilder der Studierenden bez ¨uglich des Internets anhand einer Frei-textfrage zum Aufruf einer Website und einer hierzu zu erg ¨anzenden schematischen Zeich-nung abgefragt. Zun ¨achst sollte die Aufgabe Sie rufen zuhause von Ihrem Computer A dieWebsite der Uni Passau vom Server B auf. Beschreiben Sie zun ¨achst kurz in Worten, wel-chen Weg entlang der Kabelverbindungen Ihre Anfrage bzw. die Antwort im Internet w ¨ahlt.bearbeitet werden.Anschließend sollte die der Beantwortung zugrundeliegende V orstellung mithilfe einer zuerg¨anzenden Zeichnung illustriert werden: Zeichnen Sie folgend ein Schaubild, welches90 Andreas Dengel, Ute Heuerii“proceedings” — 2017/9/17 — 20:19 — page 91 — #91iiiiiiAufbau des Internets: V orstellungsbilder angehender Lehrkr ¨afte 5die Vernetzung von Computern/Servern (Kreise) im Internet darstellt (Kabelverbindun-gen). Dieses sollte zu Ihrer Beschreibung in 1. passen. Falls Sie neue Symbole einf ¨uhren,beschriften Sie diese. Bei der vorgegebenen Zeichnung waren der eigene Computer undder Server der Universit ¨at als mit A bzw. B beschriftete Kreise eingezeichnet. Zur bes-seren Orientierung und zur Verdeutlichung der physischen Struktur waren noch weitereKreise (gem ¨aß der Aufgabenstellung Computer/Server) ohne Beschriftung eingezeichnet.Der dritte Teil bestand aus einer Selbstzuordnung, bei der die Probanden ihre selbst an-gegebene V orstellung im Single-Choice-Verfahren einer schematischen Darstellung zu-ordnen sollten: W¨ahlen Sie nun bitte die Darstellung aus, die Ihrer Vorstellung in 1. und2. am N ¨achsten kommt. Bitte versuchen Sie nicht, eine richtige Struktur zu”erraten“,sondern beurteilen Sie ausschließlich Ihre in 1. und 2. angegebene Struktur . Die Darstel-lungen orientierten sich an den von Hennecke aufgef ¨uhrten naiven metaphorischen Mo-dellen / Modellen der Lokalvernetzung und den von Diethelm und Zumbr ¨agel ermitteltenSch¨ulervorstellungen ([He15]; [DZ10]). Zur Veranschaulichung wurde das jeweilige Mo-dell ohne namentliche Nennung graﬁsch und textuell dargestellt:1. DV: Direktverbindung / vollvermaschtes Netz2. Stern: zentraler Computer / Sterntopologie3. Hierarchie: hierarchischer Aufbau / erweiterter Stern4. Bus: Bustopologie5. Router: Netz von Routern6. Autonome Systeme: Netz von Autonomen Systemen / Netz von Routern mit PeeringDie Zuordnung des Modells sollte nur auf die im vorangegangenen Teil angegebenen V or-stellung bezogen werden, die Fragestellung wies hierauf ausdr ¨ucklich hin. Diese angege-bene Methode wurde gew ¨ahlt, um zum einen eine Zuordnung durch einen Korrektor zuvermeiden und zum anderen, um den Probanden die M ¨oglichkeit zu gew ¨ahren, nicht inder eigenen Darstellung enthaltene V orstellungen zu erg ¨anzen. Um die M ¨oglichkeit ei-ner Fehlinterpretation der Fragestellungen trotz entsprechenden Wissens zu ¨uberpr ¨ufen,wurde eine Vergleichsstichprobe ausschließlich mit Lehramtsstudierenden mit dem FachInformatik gebildet, bei welchen davon ausgegangen werden konnte, dass das notwendigeWissen zur korrekten Beantwortung der Fragen bereits erworben wurde. Hierbei gaben 13von 14 Probanden eine korrekte Antwort, große Abweichungen zwischen eigener Darstel-lung und angekreuzter Topologie konnten nicht festgestellt werden.4.2 Stichprobe und Durchf ¨uhrungInsgesamt nahmen 167 Lehramtsstudierende an der Befragung teil, davon waren 30 m ¨ann-lich und 137 weiblich. Bei der Angabe der Schulart war mit 126 Angaben die Grundschuleam h ¨auﬁgsten vertreten, gefolgt vom Gymnasium mit 20 Studierenden, der Mittelschulemit 13 Studierenden und der Realschule mit 8 Studierenden. V on den 167 Frageb ¨ogenwurden 163 in die Auswertung miteinbezogen, auch wenn Antworten fehlten. Da f ¨ur dieHauptuntersuchung lediglich Lehramtsstudierende ohne Informatik von Interesse waren,Aufbau des Internets: Vorstellungsbilder angehender Lehrkräfte 91ii“proceedings” — 2017/9/17 — 20:19 — page 92 — #92iiiiii6 Andreas Dengel und Ute Heuerwurden 4 Frageb ¨ogen nicht mit in die Auswertung einbezogen, da diese Probanden Infor-matik als vertieft studiertes Fach angaben.Die Studierenden wurden unter Aufsicht von einem der Autoren in verschiedenen Semi-naren und V orlesungen befragt. Die Probanden wurden darauf hingewiesen, dass sie ledig-lich ihre eigene V orstellung angeben und sich nicht etwa in der Gruppe beraten sollen. DieBearbeitungszeit betrug acht Minuten. Die Selbstzuordnung wurde so an die Fragebogengeheftet, dass die dort angegebenen Modelle bei Bearbeitung des zweiten Teils noch nichtsichtbar waren, wodurch eine Suggestivwirkung vermieden werden sollte. R ¨uckfragen zurFragestellung waren erlaubt.4.3 AuswertungV on den 163 ausgewerteten Frageb ¨ogen ließen 9,6% die Felder der eigenen V orstellungfrei oder gaben an, keine eigene V orstellung zu haben (danach trotzdem angekreuzte Struk-turen wurden aufgrund der Suggestivwirkung nicht gewertet).fehlend DV Stern Hierarchie Bus Router Autonome Systeme Gesamt16 32 57 9 5 26 18 163Tab. 1: gew ¨ahlte TopologienInsgesamt 22,2% der Studierenden w ¨ahlten bei der Selbsteinordnung eine Struktur der Di-rektvernetzung (19,2% Peer-to-Peer, 3,0% Bus), 39,5% entschieden sich f ¨ur eine hierarchi-sche Struktur (34,1% Stern und 5,4% erweiterter Stern/Hierarchie). Lediglich 26,4% derStudierenden ordneten ihre eigene V orstellung einer Vernetzung von Routern zu (15,6%Netz von Routern, 10,8% Netz von Autonomen Systemen). Als richtige V orstellung wur-de das Bild einer dezentralisierten Vernetzung gesehen, repr ¨asentiert durch die Antworten”Netz von Routern“ und”Netz von Autonomen Systemen“.Insgesamt widersprachen nach Beurteilung zweier unabh ¨angiger, qualiﬁzierter Rater (Staats-examensabschluss Informatik bzw. Bachelorabschluss Internet Computing) zwischen 15%(Rater A) und 14,5% (Rater B) der eigenen (gewerteten) Darstellungen der Probandenden letztlich angekreuzten Topologien. Es wurden lediglich sich v ¨ollig widersprechen-de und aus der jeweiligen Kategorie (Direktvernetzung, hierarchische Struktur, Vernet-zung von Routern) fallende Angaben als Abweichung gez ¨ahlt, wie die Angabe einer Di-rektverbindung im Beschreibungsteil in Verbindung mit einer angekreuzten Sterntopo-logie. Als Interrater-Reliabilit ¨atsmaß wurde ein Cohens-Kappa-Wert von K=.668 undsomit eine beachtliche ¨Ubereinstimmung ermittelt. Im Folgenden werden im Zuge der¨Ubersichtlichkeit nur die Werte f ¨ur Rater A genannt, da zwischen beiden Ratings nur f ¨urdie Auswertung unwesentliche Unterschiede bestehen.Bei einer gewerteten Abweichung (insgesamt 24) w ¨ahlten 62,5% der Probanden in derletzten Frage eine Topologie der dezentralisierten Vernetzung, was zu h ¨ochst signiﬁkanten(p=.000 bei df=1) Chi-Quadrat-Werten von c=14,799 f ¨uhrt. Die Probanden ohneeigene Angabe zum V orstellungsbild (”fehlend“ in Tab. 1) wurden nicht mehr einbezogen.92 Andreas Dengel, Ute Heuerii“proceedings” — 2017/9/17 — 20:19 — page 93 — #93iiiiiiAufbau des Internets: V orstellungsbilder angehender Lehrkr ¨afte 7falsche V orstellung richtige V orstellung Gesamtkeine Abweichung 94 29 123Abweichung 9 15 24Gesamt 103 44 147Tab. 2: Zusammenhang zwischen gewerteter Abweichung (Rater A) und gew ¨ahlter TopologieEntfernt man die 24 Probanden mit einem Widerspruch zwischen eigener Darstellung undangekreuzter Topologie sowie die 16 Probanden ohne eigene Angabe zum V orstellungs-bild, verbleiben 123 gewertete Frageb ¨ogen mit 29 richtigen Antworten.DV Stern Hierarchie Bus Router Autonome Systeme Gesamt29 54 6 5 22 7 123Tab. 3: gew ¨ahlte Topologien ohne Widerspr ¨uche zur eigenen V orstellung (Rater A)Teilt man die Stichprobe auf in”Lehramtsstudierende mit Schulart Grundschule“ und”Lehramtsstudierende anderer Schularten“, ergeben sich folgende Ergebnisse:falsche V orstellung richtige V orstellung Gesamtanderes Lehramt 16 11 27Grundschullehramt 78 18 96Gesamt 94 29 123Tab. 4: Zusammenhang zwischen widerspruchsfreier, richtiger V orstellung und dem StudiengangGrundschullehramt (Rater A)Hieraus ergibt sich eine signiﬁkate Korrelation ( p=.017 bei df=1) zwischen den Ei-genschaften”studiert Grundschullehramt“ und”hat eine falsche V orstellung“ (keine V or-stellung einer Vernetzung von Routern) mit einem Chi-Quadrat Wert von c=5,656. DerVergleich fasst alle anderen Schularten zusammen.Als Ergebnisse lassen sich festhalten:• Lehramtsstudierende haben verschiedene V orstellungen vom strukturell-topologischenAufbau des Internets.• Knapp ein Viertel der Lehramtsstudierenden hat ein valides eigenes Bild vom strukturell-topologischen Aufbau des Internets.• Studierende des Grundschullehramts haben h ¨auﬁger falsche V orstellungsbilder bez ¨uglichdes strukturell-topologischen Aufbaus als Lehramtsstudierende anderer Schularten.5 Diskussion und AusblickEin Wissensdeﬁzit bez ¨uglich des topologischen Aufbaus des Internets ist in allen Schular-ten unverkennbar. Dass diese Informationsl ¨ucken noch einmal verst ¨arkt bei StudierendenAufbau des Internets: Vorstellungsbilder angehender Lehrkräfte 93ii“proceedings” — 2017/9/17 — 20:19 — page 94 — #94iiiiii8 Andreas Dengel und Ute HeuerAbb. 1: Zusammenhang zwischen dem Studium Grundschullehramt / V orstellungsbilddes Grundschullehramts hervortreten, ist besonders kritisch zu sehen: Zum einen entste-hen gerade im Grundschulalter besonders viele Fragen zum Thema Computer und Inter-net, zum anderen gibt es in der Schulform der Grundschule bislang in Deutschland keinenInformatik-Unterricht. Diese Einﬂussfaktoren beg ¨unstigen das Entstehen eigener Schema-ta bei den Sch ¨ulern, welche gem ¨aß dem Prinzip des kumulativen Lernens als Grundlagef¨ur jedes weiter erworbene Wissen in diesem Themenbereich genommen werden.Weiter ist jedoch erkennbar, dass bei einer direkten Wahl zwischen verschiedenen M ¨oglich-keiten oft trotz eigener Fehlvorstellungen die richtige Option selektiert wird (das Treffender richtigen Wahl bei Abweichung von der selbst angegebenen Struktur). Dies legt dieVermutung nahe, dass sp ¨ater erworbenes Wissen bez ¨uglich korrekter Strukturen zwar auf-genommen, allerdings nicht in das eigene V orstellungsbild ¨ubernommen wird, da eineAssimilation bei sich widersprechenden V orstellungsbildern nicht m ¨oglich ist und dieseFehlvorstellungen somit persistent sind. Hieraus wird umso deutlicher, wie wichtig einentsprechendes Entgegenwirken bereits in fr ¨uhen Jahren ist, was zur Folge eine notwendi-ge St ¨arkung der IT-Inhalte in der Primarstufe hat.Die Angemessenheit der Platzierung des Fachs Informatik in der Grundschule konstatiert[Sc01], deren Notwendigkeit betonen u.a. [RR11] und [BDM10]. Zwar ﬁnden sich bereitsim aktuellen Lehrplan M ¨oglichkeiten im Rahmen des Sachkunde-Gegenstandsbereiches”Technik und Kultur“, diese werden in der Praxis jedoch aufgrund von fehlendem Selbst-vertrauen / fehlender Fachkompetenz kaum wahrgenommen. Dem versucht beispielsweisedas aktuelle Kooperationsprojekt”Informatik an Grundschulen“ der RWTH Aachen undder Universit ¨aten Wuppertal und Paderborn entgegenzuwirken. Der Ausgangspunkt desProjekts folgt dem oben er ¨orterten Ansatz: Es greift typische Alltagsfragen der Kinderzum Thema Informatik auf und entwickelt ausgehend von den individuellen V orerfahrun-gen der Sch ¨ulerinnen und Sch ¨uler Inhaltsbl ¨ocke zu den Themen”Umgang mit Informatio-94 Andreas Dengel, Ute Heuerii“proceedings” — 2017/9/17 — 20:19 — page 95 — #95iiiiiiAufbau des Internets: V orstellungsbilder angehender Lehrkr ¨afte 9nen, ¨Ubertragung von Daten“,”Kryptologie, Einblicke in Konzepte der Verschl ¨usselungund Entschl ¨usselung“ und”Erste Schritte zur Programmierung“ [Ac15]. Grundlagen zumAufbau und der Funktionsweise des Internets werden hier allerdings nur am Rande derThemen”Daten ¨ubertragung“ und”Bin¨ardarstellung“ angeschnitten. Weitere Ans ¨atze f ¨urhandlungsorientierte Zug ¨ange zur Informatik in der Grundschule bietet das Projekt”InfoS-phere“ der RWTH Aachen mit auf die Grundschule zugeschnittenen Modulen wie”Zau-berschule Informatik“,”Alles Informatik, oder was?!?“ und”Kryptograﬁe zum Anfassen“[SI17]. Der Fokus der beiden genannten Projekte liegt in der F ¨orderung der informatischenBildung von Grundsch ¨ulerinnen und -sch ¨ulern.Das vorliegende Paper untersucht das V orhandensein informatischer Grundlagen bei denhierf ¨ur intentional zust ¨andigen Lehrkr ¨aften: Anhand der erhaltenen Untersuchungsergeb-nisse aus einem einzelnen, exemplarisch ausgew ¨ahlten Teilbereich der Informatik konnteein Hinweis auf ein spezielles Wissensdeﬁzit bei angehenden Grundschullehrkr ¨aften gege-ben werden. Der Erwerb eines Fachkompetenzkanons auf dem Gebiet der Informatik, so-wohl korrespondierend zum untersuchten Inhalt als auch zu weiteren geeigneten Inhalten,ist allerdings aufgrund existierender Fragen seitens der Sch ¨ulerinnen und Sch ¨uler indis-pensabel. Um diesen Fragen zu begegnen und um die sp ¨atere Wissensentwicklung behin-dernde Fehlvorstellungen zu vermeiden, ist der Anteil informatischer Bildung im Primar-schulbereich zu st ¨arken. Eine dauerhafte Forcierung der Informatik-Inhalte in der Grund-schule w ¨urde selbstverst ¨andlich auch eine Implementierung von Inhalten der Informatikin die Curricula der Studieng ¨ange des Grundschullehramts implizieren. Als Werkzeug zurAuswahl geeigneter Inhalte f ¨ur die Modulkataloge des Grundschullehramts k ¨onnte dasKonzept der fundamentalen Ideen nach [Br60] dienen (in Bezug auf die Informatik sieheauch [Sc93] bzw. [SS11]). Zur Strukturierung, Organisation und Pr ¨asentation dieser Inhal-te m¨ussen ausgehend von den Ans ¨atzen der didaktischen Rekonstruktion (Model of Edu-cational Reconstruction) nach [Du12] auch die Fehlvorstellungen der Lernenden, hier derangehenden Lehrkr ¨afte der Grundschule, ber ¨ucksichtigt werden. Nur durch Konzeptionund Integration eines entsprechenden Modulkatalogs k ¨onnen die notwendige Fachkompe-tenz der angehenden Grundschullehrkr ¨afte entwickelt, das Aufkommen von Fehlvorstel-lungen bei Kindern vermieden und entstehende Fragen ad ¨aquat beantwortet werden.Literaturverzeichnis[Ac15] Acht, R.: Wie passt ein Video durchs Kabel? Informatische Bildung im Primarbereich.Schule NRW 07/08/15, S. 327–329, 2015.[BDM10] Borowski, C., Diethelm, I., Mesaros, A.: Informatische Bildung im Sachunterrichtder Grundschule: Theoretische ¨Uberlegungen zur Begr ¨undung, http://www.widerstreit-sachunterricht.de/ebeneI/superworte/infor/BorDieMe.pdf, Stand: 1.2.2017.[BDW16] Borowski, C., Diethelm, I., Wilken, H.: What children ask about computers, the Inter-net, robots, mobiles, games etc. In: Proceedings of the 11th Workshop in Primary andSecondary Computing Education, WiPSCE 2016, M ¨unster, Germany, October 13-15,2016. S. 72–75, 2016.[Br60] Bruner, J. S.: The Process of Education. Harvard University Press, 1960.Aufbau des Internets: Vorstellungsbilder angehender Lehrkräfte 95ii“proceedings” — 2017/9/17 — 20:19 — page 96 — #96iiiiii10 Andreas Dengel und Ute Heuer[Br79] Bransford, J.: Human cognition: Learning, understanding, and remembering. Belmont,CA: Wadsworth, 1979.[Br15] Br ¨uhl, V .: Wirtschaft des 21. Jahrhunderts: Herausforderungen in der Hightech-¨Okonomie. Springer Fachmedien, Wiesbaden, 2015.[Du12] Duit, R., Gropengießer, H., Kattman, U., Komorek, M., Parchmann, I.: The Modelof Educational Reconstruction - a Framework for Improving Teaching and LearningScience. In: Science Education Research and Practice in Europe: Retrospective and Pro-spective, Jorde, D., Dillon, J. (Hrsg.) S.13-37, 2012.[DS17] Bildungspakt Bayern. Projekt: Digitale Schule 2020, http://bildungspakt-bayern.de/digitale-schule-2020/, Stand:31.1.2017.[DZ10] Diethelm, I., Zumbr ¨agel, S.: Wie funktioniert eigentlich das Internet? Empirische Un-tersuchung von Sch ¨ulervorstellungen. In: Proc. Didaktik der Informatik. M ¨oglichkeitenempirischer Forschungsmethoden und Perspektiven der Fachdidaktik. K ¨ollen Verlag,Bonn, S. 33–44, 2010.[Fr01] Freiman, T.: Kumulatives Lernen im Biologieunterricht. In: Praxis der Naturwissen-schaften - Biologie in der Schule Jahrgang 50 Nr. 7, 2001.[He15] Hennecke, M.: Modellvorstellungen zum Aufbau des Internets. In: Tagungsband zurINFOS 2015, Lecture Notes in Informatics (LNI), 2015.[Km16] Bildung in der digitalen Welt, Beschluss vom 8.12.2016, htt-ps://www.kmk.org/ﬁleadmin/Dateien/pdf/PresseUndAktuelles/2016/Bildung digitale-Welt Webversion.pdf, Stand: 20.12.2016.[KR12] Kurose, J.F., Ross, K.W.: Computer Networking. Addison-Wesley, 2012.[Ma81] Mayer, R.E.: The Psychology of How Novices Learn Computer Programming. In: Stu-dying the Novice Programmer. Lawrence Erlbaum Associates, 1981.[Pa05] Papastergiou, M.: Students Mental Models of the Internet and Their Didactical Exploi-tation in Informatics Education. Education and Information Technologies, 10 (4), S.341–360, 2005.[RR11] Romeike, R., Reichert, D.: PicoCrickets als Zugang zur Informatik in der Grundschule,2011.[Sc93] Schwill, A.: Fundamentale Ideen der Informatik. In: Zentralblatt f ¨ur Didaktik der Ma-thematik 25, S. 20-31, 1993.[Sc01] Schwill, A.: Ab wann kann man mit Kindern Informatik machen? Eine Studie ¨uberinformatische F ¨ahigkeiten von Kindern. In: Keil-Slawik, R.; Magenheim, J. (Hrsg.):Informatikunterricht und Medienbildung: INFOS 2001, 2001.[SI17] Sch ¨ulerlabor Informatik - InfoSphere, Informatik entdecken in Modulen f ¨uralle Schulformen und Klassenstufen, http://schuelerlabor.informatik.rwth-aachen.de/module/grundschule, Stand: 1.2.2017.[SS11] Schubert, S., Schwill, A.: Didaktik der Informatik. Spektrum Akad. Verl., Berlin Hei-delberg, 2011.[TG98] Thatcher, A., Greyling, M.: Mental models of the Internet. In: International Journal ofIndustrial Ergonomics 22, S. 299-305, 1998.[WM09] Wild, E., M ¨oller, J.: P ¨adagogische Psychologie. Springer-Verlag, Berlin Heidelberg,2009.96 Andreas Dengel, Ute Heuerii“proceedings” — 2017/9/17 — 20:19 — page 97 — #97iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017    15  Vom Lehrplan zur LehrerInnenbildung - Erste Erfahrungen mit obligatorischer Informatikdidaktik für angehende Schweizer PrimarlehrerInnen Beat Döbeli Honegger1, Michael Hielscher2  Abstract: In den letzten Jahren ist Informatikunterricht in verschiedenen europäischen Ländern in die Lehrpläne aufgenommen worden und soll zunehmend bereits im Grundschulalter beginnen. Auch der im Jahr 2015 verabschiedete »Lehrplan 21« für die 21 deutschsprachigen Kantone der Schweiz sieht bereits ab der 5. Klasse der Primarschule ein eigenes Zeitgefäß für »Medien und Informatik« vor. Diese Entwicklung stellt die Lehrerinnen- und Lehrerbildung vor große Heraus-forderungen. Die pädagogische Hochschule Schwyz (PHSZ) hat als erste Lehrerbildungsstätte in der deutschsprachigen Schweiz den Studiengang Primarschule entsprechend angepasst und erteilt künftig eine Lehrbefähigung »Medien und Informatik«. Im Herbstsemester 2016 wurde eine obli-gatorische Informatik-Lehrveranstaltung für alle Studierenden des Studiengangs Primarstufe durchgeführt. Bei der Eingangsbefragung (n=85) bestätigte sich die Hypothese, dass angehende Primarlehrpersonen weder über eine Vorstellung des Themas Informatik noch über das not-wendige Fachwissen verfügen. Der Beitrag schildert die Entstehungsgeschichte des Fachs »Medien und Informatik« im Lehrplan 21 in der Schweiz und diskutiert exemplarisch anhand der Lehrveranstaltung die Herausforderungen einer Informatikdidaktik für Primarlehrpersonen. Keywords: Lehrplan, Informatikdidaktik, Grundschule, Ausbildung, Weiterbildung. 1 Informatik in der Grundschule Unser Alltag wird immer stärker von digitalen Medien geprägt. Der Einfluss digitaler Medien auf alle Aspekte ist so groß, dass verschiedene Experten die Erfindung des Computers mit der Erfindung des Buchdrucks vergleichen und von einem digitalen Leit-medienwechsel sprechen [Dö16]. Dies hat sowohl den Ruf nach Informatischer Bildung in der Schule (z.B. [Ga13]) als auch das Verständnis für diese Forderung in den letzten Jahren gestärkt (PM14). In immer mehr Ländern sind deshalb Bemühungen im Gange, Informatik stärker in der Schule zu verankern. Gleichzeitig ist auch die Tendenz zu beo-bachten, dass bei entsprechenden Projekten das Einstiegsalter für Informatik sinkt. War Informatik noch bis vor wenigen Jahren meist auf der Sekundarstufe I und II angesiedelt, wird heute immer häufiger bereits in der Grundschule oder noch früher begonnen. Auch im deutschsprachigen Teil der Schweiz ist eine solche Entwicklung im Gang.                                                               1 Pädagogische Hochschule Schwyz, IMS, Zaystrasse 42, CH-6410 Goldau, beat.doebeli@phsz.ch 2 Pädagogische Hochschule Schwyz, IMS, Zaystrasse 42, CH-6410 Goldau, michael.hielscher@phsz.ch I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 97ii“proceedings” — 2017/9/17 — 20:19 — page 98 — #98iiiiii 16    Beat Döbeli Honegger und Michael Hielscher   1.1 Der Lehrplan 21 in der Schweiz Das schweizerische Bildungssystem ist sehr föderalistisch. So sind z.B. Lehrpläne bisher kantonal geregelt. Im Jahr 2006 haben die Bildungsdirektoren der deutsch- und mehr-sprachigen Kantone (D-EDK) beschlossen, einen sprachregionalen Lehrplan für die gesamte obligatorische Schulzeit (Kindergarten bis Ende Sekundarstufe I) zu entwickeln. Dieser wurde von 2010 bis 2014 erarbeitet und danach zur Umsetzung an die 21 beteiligten Kantone übergeben. Da der Lehrplan 21 nur Empfehlungscharakter hat, entscheiden alle 21 Kantone einzeln, ob, wie und wann er umgesetzt werden soll. In zahlreichen Kantonen finden aufgrund heftiger Kritik konservativer Kreise Volksabstimmungen zur Einführung des Lehrplans 21 statt.  Die Zahl 21 steht nicht nur für die 21 am Lehrplan beteiligten Kantone, sondern soll auch ausdrücken, dass der Lehrplan für das 21. Jahrhundert gedacht ist. Neben der versuchten Harmonisierung der kantonalen Lehrpläne lassen sich beim Lehrplan 21 vier wesentliche Veränderungstendenzen ausmachen [DEDK2014]: • Orientierung an drei Zyklen (Kindergarten bis 2.Klasse, 3.-6. und 7.-9. Klasse)  statt der Definition von spezifischen Jahrgangszielen • Kompetenzorientierte Formulierungen statt bisheriger Lernziele • Definition von Fachbereichen statt einzelner Fächer • stärkere Betonung überfachlicher Themen und Kompetenzen 1.2 Informatik im Lehrplan 21 In der ursprünglichen Planung von 2010 war der Themenbereich Digitalisierung nur am Rande unter dem Titel »ICT und Medien« als eines von vielen überfachlichen Themen ohne eigene Stundendotation vorgesehen [DEDK10]. Dementsprechend waren informatische Kompetenzen im ersten veröffentlichten Lehrplanentwurf eher versteckt und ohne die explizite Nennung des Begriffs Informatik vertreten [DEDK13]. Obwohl versteckt, führten diese Kompetenzbeschreibungen zu einer breiten bildungspolitischen Diskussion (siehe z.B. [Bu13]). Insbesondere das in der Öffentlichkeit wahrgenommene Programmieren im Schulunterricht wurde kontrovers diskutiert. Nachdem sich zahlreiche Kreise für eine stärkere Verbindlichkeit digitaler Kompetenzen ausge-sprochen haben (z.B.[ICTS13]), wurde der Lehrplanteil in »Medien und Informatik« (M+I) umbenannt und zu einem Modul umgewandelt. Der bis zu diesem Zeitpunkt im Volksschulbereich undefinierte Begriff »Modul« stellt dabei einen bildungspolitischen Kompromiss dar, da sich ein neues Fach vermutlich nicht hätte realisieren lassen.  Der im Jahr 2015 als Teil des Lehrplans 21 von der D-EDK verabschiedete und zur Umsetzung den Kantonen übergebene Teillehrplan »Medien und Informatik« [DEDK15] unterscheidet folgende drei Kompetenzbereiche: 98 Beat Döbeli Honegger, Michael Hielscherii“proceedings” — 2017/9/17 — 20:19 — page 99 — #99iiiiii Vom Lehrplan zur LehrerInnenbildung    17  • Anwendungskompetenzen: „Schülerinnen und Schüler nutzen Informations- und Kommunikationstechnologien in allen Fach- und Lebensbereichen effektiv und effizient.“ • Medien: „Schülerinnen und Schüler können an der Mediengesellschaft selbstbe-stimmt, kreativ und mündig teilhaben und sich sachgerecht und sozial verantwortlich verhalten.“ • Informatik: „Schülerinnen und Schüler verstehen Grundkonzepte der automatisier-ten Informationsverarbeitung, nutzen sie zur Entwicklung von Lösungsstrategien in allen Lebensbereichen und zum Verständnis der Informationsgesellschaft.“ Mit dieser Dreiteilung ist der Teillehrplan »Medien und Informatik« nicht weit entfernt vom im Februar 2016 entwickelten Dagstuhl-Dreieck (s. Abb. 1). Während im Lehrplan 21 bereits belegte Fachbegriffe verwendet werden, werden im Dagstuhl-Dreieck historisch unbelastetere Perspektiven definiert.  Abb. 1: Ähnliche Dreiteilung digitaler Kompetenzen im Teillehrplan »Medien und Informatik« [DEDK15] (links) sowie im Dagstuhl-Dreieck [Br16] (rechts) Für zwei der drei Bereiche (Medien, Informatik) gibt der Lehrplan 21 einen Kompetenz-aufbau vor. Die Kompetenzen im dritten Bereich »Anwendung« sollen hingegen in anderen Fachbereichen integriert unterrichtet werden und sind damit nicht unmittelbarer Gegenstand des eigenständigen Zeitgefäßes. Der Bereich Informatik gliedert sich wie-derum in die drei Teilbereiche Datenstrukturen, Algorithmen und Informatiksysteme. Die darin aufgeführten Kompetenzen wurden teilweise jedoch aus bildungspolitischen Gründen gewählt und folgen damit weniger fachdidaktischen Überlegungen.  Aufgrund des Empfehlungscharakters des Lehrplans 21 ist es den Kantonen überlassen, wie sie den Begriff Modul bezüglich Stundenplan und Zeugniseintrag interpretieren. Ebenso ist offen, ob die Inhalte des Moduls von allen Klassenlehrpersonen oder von speziellen Fachlehrpersonen unterrichtet werden, oder ob es zukünftig eine eigen-ständige Lehrbefähigung für Medien und Informatik geben soll. Während einige Vom Lehrplan zur Lehrerinnenbildung 99ii“proceedings” — 2017/9/17 — 20:19 — page 100 — #100iiiiii 18    Beat Döbeli Honegger und Michael Hielscher   Kantone ein eigenes Zeitgefäß bereits ab der 5. Klasse vorsehen (z.B. Zürich und St. Gallen), planen andere ein solches erst ab der 7. Klasse und integrieren die Inhalte auf der Primarstufe in bestehende Fächer wie Mathematik und Deutsch (z.B. Luzern oder Schwyz). Da in den Schweizer Primarschulen grundsätzlich das Klassenlehrerprinzip gilt, sind praktisch alle Primarlehrpersonen mit dem Thema M+I konfrontiert, können ihm also nicht ausweichen (anders in der Sekundarstufe I, in der Lehrpersonen nur eine Auswahl von Fächern unterrichten). Dass nun auf der Primarschulstufe alle angehenden und praktizierenden Lehrpersonen im Bereich Informatik aus- bzw. weitergebildet werden, ist im deutschsprachigen Raum bisher einzigartig. 1.3 Herausforderungen bei der Aus- und Weiterbildung von Lehrpersonen Mit dem Lehrplan 21 gewinnt das Thema Medien und Informatik stark an Bedeutung. Damit benötigen Lehrpersonen aber auch eine entsprechende Aus- oder Weiterbildung. Dies stellt die Kantone und die pädagogischen Hochschulen (wo in der Schweiz auch die Weiterbildung von Lehrpersonen angesiedelt ist) vor zahlreiche Herausforderungen: 1. Fehlendes Fachwissen und Erfahrung bei Lehrpersonen: Amtierende und angehende Lehrpersonen verfügen insbesondere im Bereich Informatik über praktisch kein Vorwissen und haben auch keine Unterrichtserfahrungen aus der eigenen Schulzeit [Döb15]. 2. Fehlendes Fachwissen und Erfahrung bei Dozierenden an Pädagogischen Hochschulen: Derzeit sind Dozierende in der LehrerInnenbildung mit fundierter Informatikausbildung selten. Selbst diesen Dozierenden fehlt jedoch meist entsprechende Unterrichtserfahrung auf der Zielstufe. 3. Fehlende Lehrmittel: Derzeit sind entsprechende, auf den Modullehrplan »Medien und Informatik« abgestimmte Lehrmittel erst in Entwicklung und werden anfänglich für die Aus- und Weiterbildung nicht zur Verfügung stehen. 4. Fehlende Zeit für Aus- und Weiterbildung: Sowohl aus finanziellen Gründen als auch aufgrund der sonstigen Belastung von Lehrpersonen steht weniger Aus- und Weiterbildungszeit für »Medien und Informatik« zur Verfügung als es Fachdidaktiker als notwendig ansehen. 5. Reservierte Haltung der Studierenden: Lehramtsstudierende haben gegenüber dem Thema Medien und Informatik oft eine reservierte bis ablehnende Haltung (siehe auch ähnliche Ergebnisse aus deutschen Studien, z. B. [KB11]) 6. Fehlendes Bewusstsein bei Entscheidungsträgern: Sowohl politischen als auch administrativen Entscheidungsträgern fehlt anfänglich oft noch das Bewusstsein für das Thema und seine Aspekte. Insbesondere die Unterscheidung zwischen Informatik als eigenständige Disziplin und der allgemeinen Nutzung von Computern im Unterricht fällt häufig schwer.  100 Beat Döbeli Honegger, Michael Hielscherii“proceedings” — 2017/9/17 — 20:19 — page 101 — #101iiiiii Vom Lehrplan zur LehrerInnenbildung    19  2 Situation an der Pädagogischen Hochschule Schwyz Die Pädagogische Hochschule Schwyz (PHSZ) ist eine kleine Pädagogische Hochschule mit vierfachem Leistungsauftrag (Ausbildung, Weiterbildung, Dienstleistung, sowie Forschung und Entwicklung) in Goldau (Kanton Schwyz) mit ca. 100 Mitarbeitenden. Sie bietet in der Ausbildung die beiden Studiengänge »Lehrperson für die Primarstufe« (1.-6. Klasse) und »Lehrperson für Kindergarten/Unterstufe« (Kindergarten bis 2. Klasse) und hat aktuell ca. 350 Studierende. Im April 2016 hat der Hochschulrat die beiden Studiengänge aufgrund des Lehrplans 21 angepasst. Dabei stand insbesondere die Erweiterung der Studiengänge um den Fachbereich M+I im Zentrum. Der Studiengang Primarschule enthält neu 6 ECTS-Punkte (von 180) in fünf Modulen im Bereich Medien und Informatik. Zusätzlich werden mediendidaktische Kompetenzen in einer weiteren Veranstaltung aufgebaut (Modulübersicht siehe Abb. 2).  Abb. 2: Modulverteilung des Fachkerns »Medien und Informatik« an der PHSZ Die PHSZ ist damit die erste Pädagogische Hochschule in der deutschsprachigen Schweiz, die im Herbstsemester 2016 mit der Ausbildung gemäß Lehrplan 21 im Bereich M+I begonnen hat. Insbesondere ist sie die erste Deutschschweizer PH mit einer obligatorischen Veranstaltung in Informatikdidaktik für alle Studierenden der Primar-schulstufe. Vom Kanton Schwyz wurde die PHSZ mit der Weiterbildung der amtierenden Lehrpersonen für den Lehrplan 21 beauftragt. Für Primarlehrpersonen der 5. und 6. Klasse stellt dabei die obligatorische Weiterbildung in Informatik im Umfang von 10 Halbtagen den größten Themenbereich dar.  Vom Lehrplan zur Lehrerinnenbildung 101ii“proceedings” — 2017/9/17 — 20:19 — page 102 — #102iiiiii 20    Beat Döbeli Honegger und Michael Hielscher   3 Erstmalige Durchführung der Lehrveranstaltung »Grundlagen der Informatik«  Im Herbstsemester 2016 haben die beiden Autoren erstmalig die obligatorische Lehrveranstaltung »Grundlagen der Informatik« im ersten Semester des Studiengangs Primarstufe durchgeführt. Vor Beginn der Lehrveranstaltungen haben zwei Befragungen stattgefunden, einerseits die allgemeine Eingangsbefragung der PHSZ [Eck16], andererseits eine lehrveranstaltungsspezifische der beiden Autoren dieses Beitrags.  Von den 85 Studierenden der Lehrveranstaltung sind ca. 80% weiblich, 95% in der Schweiz geboren und über 85% sprachen zu Hause deutsch oder Schweizerdeutsch. 35% verfügten bei Studienbeginn bereits über eine abgeschlossene Berufsausbildung und beschritten mit dem Beginn des Studiums somit den zweiten Bildungsweg [Eck16]. Bereits die allgemeine Eingangsbefragung gibt erste Hinweise auf die Motivation der Studierenden in Bezug auf digitale Medien. So rangiert der thematische Schwerpunkt der PHSZ im Bereich digitaler Medien auf Platz 7 von 9 möglichen Gründen für die Wahl des Studienorts. Zudem möchten sich mehr Studierende möglichst viel pädagogisches Hintergrundwissen aneignen und ihre Lern- und Arbeitsstrategien im Studium verbessern, als ihre Kompetenz im Bereich digitaler Medien verbessern (siehe Abb. 3). Diese Frage ist insofern relevant, als dass die PHSZ einen Schwerpunkt im Bereich digitaler Medien hat und zu den ersten Pädagogischen Hochschulen in der Schweiz gehörte, die bereits 2004 ein Notebookobligatorium für Studierende einführte.  Abb. 3: Ziele für das Studium der Studierenden der Lehrveranstaltung  »Grundlagen der Informatik« [Eck16] Während in der Eingangsbefragung des Studiengangs noch sehr allgemein von »neuen Medien« und »digitalen Medien« die Rede war, interessierten in der Eingangsbefragung der Lehrveranstaltung mehr die Vorstellungen und Erwartungen der Studierenden zum Seminar und der Informatik in der Primarschule sowie ihre persönlichen Erfahrungen und Anwendungskompetenzen.  Mehr als ein Drittel der Studierenden gab an, dass sie auf ihren Notebooks noch keine oder wenige persönliche Daten abgelegt haben, womit davon ausgegangen werden kann, dass die Geräte erst mit Beginn des Studiums angeschafft wurden. Alle 85 Studierenden gaben an, ein Smartphone zu besitzen. 102 Beat Döbeli Honegger, Michael Hielscherii“proceedings” — 2017/9/17 — 20:19 — page 103 — #103iiiiii Vom Lehrplan zur LehrerInnenbildung    21  Die Antworten auf die Frage “Was stellen Sie sich unter Informatik in der Primarstufe vor? Beschreiben Sie stichwortartig.” wurden in Tabelle 1 thematisch gruppiert und nach Anzahl Nennungen sortiert. Bis auf das Programmieren beziehen sich alle Ant-worten auf Anwendungskompetenzen, die laut Lehrplan 21 nicht zur Informatik gehören und unabhängig davon in allen Fächer aufgebaut und angewendet werden sollen. Thematisch gruppierte Freitextantworten Nennungen Umgang mit Office-Programmen erlernen (z.B. Textverarbeitung)  38 Lernprogramme / Lernspiele anwenden 32 Handhabung von Computer / ICT erlernen  30 Umgang mit dem Internet erlernen (inkl. Sicherheit, Datenschutz) 24 Tastaturschreiben erlernen (10-Finger-System) 20 Webrecherche erlernen (Computer als Informationsquelle nutzen) 12 Bild- und Videobearbeitung erlernen 5 Einsatz von ICT im Schulalltag thematisieren 4 Programmieren lernen 4 Tab. 1: Von erstsemestrigen PH-Studierenden erwartete Inhalte bei »Informatik in der Primarschule”, absteigend geordnet nach Anzahl Nennungen Die Antworten zeigen, dass ein Verständnis der Informatik als eigenständige Disziplin und die damit verbundenen Fachinhalte beim überwiegenden Teil der Studierenden fehlt. Dies ist wenig erstaunlich, weisen doch selbst Untersuchungen zu Abbruchquoten in Informatikstudiengängen ebenfalls auf das Problem von Fehlvorstellungen hin, obwohl diese Studierenden ein offensichtliches Interesse am Thema haben (vgl. [BM05], [HSW06]).  In der Eingangsbefragung wurde erhoben, ob die Studierenden schon einmal etwas selbst programmiert haben (29% ja, 71% nein). Bei den 25 Studierenden, die “ja” angaben, wurde in zwei Folgefragen mit Freitextantworten konkretisiert, was und in welcher Programmierumgebung programmiert worden ist. Tabelle 2 zeigt den Versuch einer thematischen Gruppierung der Antworten. Die Nennung verschiedenster Anwendungsprogramme deutet stark darauf hin, dass der Begriff “Programmieren” bei rund der Hälfte dieser Studierenden unklar ist und mit “Installieren” oder “Konfigurieren” gleichgesetzt wurde. Auch die Antworten “DropBox”, “USB-Stick”, “Schule” oder “Apple” auf die Frage der eingesetzten Programmierumgebung deuten auf fehlende oder falsche Vorstellungen im Bereich des Programmierens hin. Insgesamt gaben 6 der 25 Studierenden mit Programmiererfahrung an, bereits mit Scratch gearbeitet zu haben (gefolgt von Java und Python mit je 2 Nennungen). Insgesamt verfügten somit nur rund 10% aller Studierenden über Vorerfahrungen im Bereich des Programmierens. Vom Lehrplan zur Lehrerinnenbildung 103ii“proceedings” — 2017/9/17 — 20:19 — page 104 — #104iiiiii 22    Beat Döbeli Honegger und Michael Hielscher   Thematisch gruppierte Freitextantworten Nennungen Outlook, Adobe Reader, iTunes, Anti Virus, FortiClient ...   8 kleine Rechenprogramme programmiert (mathematische Themen) 7 Scratch 3 Kara 1 Datenbanken 1 Turtle 1 Simulation 1 Webseite erstellt 1 Vergleich von zwei Exceltabellen 1 Tab. 2: Programmiererfahrungen erstsemestriger PH-Studierender (Selbstauskunft) Für drei ausgewählte, anspruchsvollere Kompetenzen aus dem Lehrplan 21 sollten sich die Studierenden einerseits selbst einschätzen und andererseits angeben, ob diese Kompetenzen für heutige Schülerinnen und Schüler Ende der 6. Klasse relevant seien. (siehe Tab. 3). Über 40% der angehenden Primarlehrpersonen waren der Meinung, dass Kinder erklären können sollten, wie der Strichcode auf einer Milchpackung funktioniert, dies aber nur rund 10% selbst erklären könnten. Auch im Bereich der Anwendungs-kompetenzen zeigt sich eine Diskrepanz zwischen dem Anspruch des Lehrplans 21 und den Selbsteinschätzungen der Erstsemestrigen. Bis auf wenige Ausnahmen konnten alle Studierenden das Betriebssystem ihres Notebooks und ihres Smartphones in einem Frei-textfeld benennen. Eine Single-Choice-Frage zu Messgrößen der Informatik (Wieviel Speicherplatz benötigen 3 Minuten Musik auf einem Smartphone?) konnten hingegen nur noch rund 30% korrekt beantworten und mehr als die Hälfte der Studierenden wählten die Antwortoption “keine Ahnung”.  Zusammenfassend bestätigen die beiden Eingangs-befragungen somit die in Abschnitt 2.3 genannten Herausforderungen 1 und 5: Studie-rende verfügen über wenige Vorkenntnisse und sind nicht besonders interessiert am The-ma. Insbesondere bezüglich Vorwissen unterscheidet sich damit das Thema Informatik von den meisten anderen Schulfächern. Das einsemestrige Seminar gliederte sich in acht 90-minütige Präsenzveranstaltungen mit jeweils 20 bis 24 Teilnehmenden (in 4 Kursgruppen) und Selbststudienphasen. Inhaltlich orientierte sich die Veranstaltung eng am Lehrplan mit den drei Teilbereichen Datenstrukturen, Algorithmen und Informatiksystemen, wobei anteilig ein größeres Gewicht auf Algorithmen, insbesondere auf das Programmieren gelegt wurde. Zudem wurde in den ersten beiden Veranstaltungen anhand anschaulicher Unterrichtsbeispiele am Grundverständnis der Informatik als eigenständige Disziplin gearbeitet. In der letzten Präsenzveranstaltung wurden die Informatikdidaktik und ihre Besonderheiten im Rückblick auf das Semester thematisiert. Die detaillierten Lernziele, Kursplanung und Materialien sind im Veranstaltungswiki (phsz.doebe.li/GDI16) öffentlich einsehbar.  104 Beat Döbeli Honegger, Michael Hielscherii“proceedings” — 2017/9/17 — 20:19 — page 105 — #105iiiiii Vom Lehrplan zur LehrerInnenbildung    23  Tab. 3: Selbsteinschätzung angehender PrimarlehrerInnen bezüglich Informatik-Kompetenzen aus dem Lehrplan 21 Gegen Ende des Semesters wurde eine Kursevaluation durchgeführt. Die Lehrveranstal-tung wurde insgesamt überwiegend als “gut” bis “sehr gut” bewertet. Die Seminarinhalte wurden als “eher anspruchsvoll” bis “sehr anspruchsvoll” bezeichnet. Die Studierenden sollten u.a. auch angeben, ob sie sich nun in der Lage sehen, eine typische Fragestellung/Problemstellung aus dem Themenbereich der Informatik zu bearbeiten. Dem konnte mehrheitlich nur bedingt zugestimmt werden. Insbesondere das Program-mieren mit Scratch wurde von den Studierenden als zu schwierig und mit “zu wenig Zeit” beschrieben. Mehrheitlich wünschen sich die Studierenden deshalb mehr Präsenzveranstaltungen und eine intensivere Auseinandersetzung mit Scratch. 4 Dilemma von Motivation vs. Wissensvermittlung  Da die Inhalte des Modullehrplans M+I in einigen Schweizer Kantonen auf der Primar-stufe integriert in den bestehenden Fächern unterrichtet werden sollen, besteht die bei integrierten Ansätzen übliche Gefahr von Vermeidungsstrategien bei Lehrpersonen, die diese Inhalte aus verschiedenen Gründen nicht unterrichten wollen oder können. Fehlt die extrinsische Vorgabe durch einen Fachlehrplan, hängt es an der intrinsischen Motivation der Lehrperson ab, ob sie informatische Themen unterrichtet. Da den Studierenden - wie oben gezeigt - eine Vorstellung des Themas Informatik fehlt, muss diese intrinsische Motivation in der Lehreraus- und -weiterbildung angelegt werden. Sowohl in der Aus- als auch in der Weiterbildung steht aber bereits zu wenig Zeit zur Verfügung, um die eigentlich notwendige fachliche und fachdidaktische Kompetenz zu vermitteln. Bei der Planung von Informatikaus- und -weiterbildungen entsteht somit das Dilemma, ob angesichts der begrenzten zeitlichen Ressourcen bei den angehenden und amtierenden Lehrpersonen eher die Motivation oder die informatischen Kompetenzen stärker gewichtet werden sollen (siehe Abb. 4). Eine zu starke Konzentration auf fach-0 und 1: Ich kann erklä-ren, wie der Computer Texte, Bilder, Töne und Videos mittels 0 und 1 speichert Codes: Ich weiß, wie Codes in unserem Alltag (z.B. Barcode auf der Milchpackung, ISBN- Nummer) funktionieren. Geheimschrift: Ich kann selbst eine Geheimschrift entwickeln, die zwar alle lesen, aber nicht alle verstehen können.  Vom Lehrplan zur Lehrerinnenbildung 105ii“proceedings” — 2017/9/17 — 20:19 — page 106 — #106iiiiii 24    Beat Döbeli Honegger und Michael Hielscher   wissenschaftliche Inhalte der Informatik könnte dazu führen, das häufig bereits negativ vorgeprägte Bild der Informatik bei Lehrpersonen zu verstärken und damit intrinsische Motivation zu verhindern. Umgekehrt besteht bei zu starker Gewichtung motivationaler Aspekte die Gefahr, dass die Lehrpersonen zu wenig Fachkompetenz erlangen und sich gleichzeitig selbst überschätzen. Positiv formuliert dürften aber motivierte Lehrpersonen eher bereit sein, sich auch zukünftig mit dem Thema auseinanderzusetzen und sich weiterzubilden.    Abb. 4: Das Dilemma von Motivation vs. Wissensvermittlung bei begrenzten Zeitressourcen 5 Fazit und Empfehlungen  Informatik als Thema wird in wenigen Jahren in den Lehrplänen der meisten Deutschschweizer Kantone angekommen sein. Es stellt sich nicht mehr die Frage, »ob« sondern »wie« Informatik in der Volksschule (oder gar im Kindergarten) unterrichtet werden soll. Die Aus- und Weiterbildungen an den Pädagogischen Hochschulen stehen nun vor der Herausforderung, die angehenden und bestehenden Lehrpersonen zu befähigen, diese Inhalte auch stufenadäquat unterrichten zu können. Angesichts der in Abschnitt 1.3 beschrieben Herausforderungen und den ersten Erfahrungen an der PHSZ empfehlen wir, in der Aus- und Weiterbildung insbesondere motivationale Aspekte gegenüber der Vermittlung umfangreichen Fachwissens zu betonen. Aufgrund der fehlenden eigenen Erfahrungen braucht es konkrete Beispiele, um sowohl eine Vorstellung zu entwickeln wie Informatik in der Volksschule aussehen kann als auch das Selbstvertrauen der Lehrpersonen zu stärken, diese Inhalte selbst umsetzen zu können. Es gilt, das eher negative Bild der Informatik mit den vorherrschenden Fehlvorstellungen zu korrigieren. Bei der Veranstaltungsplanung muss das Vorwissen der Studierenden bzw. Lehrpersonen berücksichtigt werden. Eine inhaltliche Überfrachtung und damit verbundene Überforderung könnte langfristig der flächendeckenden Einführung von Informatik in der Schule schaden.  Die Informatikdidaktik muss somit sowohl für sich selbst als auch nach außen die Erwartungen an rasche Kompetenzzuwächse im Bereich der Informatik an Schulen dämpfen. Nach “don’t miss the boat” [Ga13] ist es nun wichtig, dieses Boot nicht gleich zu überladen.  106 Beat Döbeli Honegger, Michael Hielscherii“proceedings” — 2017/9/17 — 20:19 — page 107 — #107iiiiii Vom Lehrplan zur LehrerInnenbildung    25  Literaturverzeichnis [BM05]  T. Beaubouef, J. Mason: Why the High Attrition Rate for Computer Science Students: Some Thoughts and Observations, ACM SIGCSE Bull. June 2005 Vol. 37, Num. 2, S. 103-106 https://doebe.li/t19532 [Bu13]  Burri, A.: Jeder Schüler ein kleiner Programmierer. Tages Anzeiger vom 29.06.2013 https://doebe.li/t15492  [Ga13]  Gander, W. et.al.: Informatics education: Europe cannot afford to miss the boat. Report of the joint Informatics Europe & ACM Europe Working Group on Informatics Education. 2013, https://doebe.li/t14733  [Br16]  Brinda, T. et al: Bildung in der digitalen vernetzten Welt – Dagstuhl-Erklärung.  http://tinyurl.com/dagstuhl3eck, https://doebe.li/t19500   [DEDK10] Deutschschweizer Erziehungsdirektorenkonferenz (D-EDK): Grundlagen für den Lehrplan 21, verabschiedet von der Plenarversammlung der deutschsprachigen EDK-Regionen, 2010: http://www.lehrplan.ch/sites/default/files/Grundlagenbericht_0.pdf https://doebe.li/t11540 [DEDK13]  Deutschschweizer Erziehungsdirektorenkonferenz (D-EDK): ICT und Medien.  In: D-EDK: Lehrplan 21, Entwurfsfassung, 2013: http://konsultation.lehrplan.ch/downloads/container/30_10_0_0_1_1.pdf https://doebe.li/t17000   [DEDK15]  Deutschschweizer Erziehungsdirektorenkonferenz (D-EDK): Medien und Informatik. In: D-EDK: Lehrplan 21. Bereinigte Fassung, 2015. http://projekt.lehrplan.ch/lehrplan/V5/ablage/FS1E_Modul_MI.pdf  https://doebe.li/t17600 [Dö15]  Döbeli Honegger, B.: Digitale Kompetenzen von Lehrpersonen für den Lehrplan 21, 2015. https://doebe.li/t17550  [Dö16]  Döbeli Honegger, B.: Mehr als 0 und 1. bern: hep Verlag, 2016. https://doebe.li/b6000 [ICTS13]  ICTswitzerland: Digitale Kompetenzen benötigen Verbindlichkeit im Lehrplan 21. Positionspapier der Kommission Bildung von ICTswitzerland, 2013. http://tinyurl.com/verbindlichkeit, https://doebe.li/t17550   [Ec16]  Eckert, N.: Eingangsbefragung 2016 - Studiengang Primarstufe der Pädagogischen Hochschule Schwyz (unveröffentlicht), 2016.  [HSW06]:  U. v. Holdt, H. Schneider, B. Wagner: Analyse von Studienverläufen und Studienab-brüchen in den Bachelorstudiengängen Informatik an der Leibnitz Universität Hannover. HDI 2006 - Hochschuldidaktik der Informatik. Organisation, Curricula, Erfahrungen. 2. GI- Fachtagung 7.-8. 12. 2006 in München. https://doebe.li/t12101 [KB14]  Kommer, S. & Biermann, R.: Der mediale Habitus von (angehenden) LehrerInnen. In: Jahrbuch Medienpädagogik 9. Springer VS., 2014 https://doebe.li/t14704 [PM14]  Peyton Jones, S., Muuß-Merholz, J.: Schulfach "Computing" ab Klasse 1. In: c’t 14/2014, https://doebe.li/t16648 Vom Lehrplan zur Lehrerinnenbildung 107ii“proceedings” — 2017/9/17 — 20:19 — page 108 — #108iiiiiiii“proceedings” — 2017/9/17 — 20:19 — page 109 — #109iiiiiiIra Diethelm [et. al. ](Hrsg.): INFOS 2017 - Informatische Bildung zum Verstehen und Gestalten,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 1Ein Modell zur Analyse von Vorstellungen über Roboterund ihrer FunktionsweiseKathrin Müller, Carsten Schulte1Abstract: Kinder wachsen heute in einer Welt auf, in der sie immer früher und häuﬁger digitalenArtefakten begegnen. Daher wird auch die Forderung nach informatischer Bildung für Kinder in derPrimarstufe immer größer. Informatische Bildung sollte Kindern ermöglichen, Informatiksysteme,deren Funktionsweise sowie unterschiedliche Rollen im Alltag wahrnehmen zu können. Als exempla-risches Informatiksystem werden hier Roboter verwendet. Doch mit welchen eigenen Vorstellungenbegegnen die Kinder diesen Robotern? Bisherige Studien konzentrieren sich besonders auf Fragen wie:Sind Roboter lebendig? Sind Roboter intelligent? In diesem Artikel stellen wir ein Modell vor, welchesauf Basis der Ergebnisse vorangegangener Studien und dem Ansatz der Dualitätsrekonstruktionentwickelt wurde. Mit diesem Modell ist es möglich, Vorstellungen zur Funktionsweise und Rollenvon Robotern zu analysieren und klassiﬁzieren. Es ermöglicht, einen Überblick über unterschiedlicheVorstellungen der Kinder zu bekommen und somit eine darauf abgestimmte informatische Bildungkonzipieren zu können, welche die vorhandenen Vorstellungen zielgerichtet erweitern oder ggf. auchverändern kann.Keywords: Informatik in der Primarstufe, Roboter, Schülervorstellungen1 EinleitungDurch die Tatsache, dass Kinder immer früher und häuﬁger mit digitalen Artefakten inBerührung kommen, wird auch die Forderung nach einer entsprechenden informatischenBildung immer größer. Diese sollte es Kindern ermöglichen, Informatiksysteme, derenFunktionsweise sowie unterschiedliche Rollen im Alltag wahrnehmen zu können. Für einenanschaulichen Unterricht und einen Lebensweltbezug, wurden und werden zahlreiche Infor-matiksysteme für den Unterricht entwickelt. Besonders hervorzuheben sind hier Roboter.Sie existieren in unterschiedlichen Formen in der Lebenswelt der Kinder (Spielzeug, Filme,Haushalt) und bereits für die frühe informatische Bildung in KiTa und Grundschule.Doch mit welchen eigenen Vorstellungen begegnen die Kinder digitalen Artefakten undbesonders diesen Robotern? Zahlreiche vorangegangene Studien (siehe Abschnitt 2) kon-zentrieren sich besonders auf Fragen wie: Sind Roboter lebendig? Sind Roboter intelligent,etc. Hinsichtlich eines Systemverständnisses in Verbindung mit der Programmierung desRoboters ist uns kaum Forschung bekannt. Diese Forschungslücke sollte unserer Meinung1Universität Paderborn, Didaktik der Informatik, Fürstenallee 11, 33102 Paderborn, [vorname].[nachname]@uni-paderborn.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 109ii“proceedings” — 2017/9/17 — 20:19 — page 110 — #110iiiiii2 Kathrin Müller und Carsten Schultenach im Hinblick auf die informatische Bildung geschlossen werden. Roboter stehen hier nurexemplarisch für eine wichtige Klasse von digitalen Artefakten. Andere digitale Artefaktefunktionieren nach denselben oder zumindest ähnlichen Prinzipien.Robotern wird noch eher als anderen digitalen Artefakten entsprechendes autonomes undintentionales Verhalten zugetraut (per Deﬁnition der Technologieklasse), da sie bewusstfür eine solche Wahrnehmung und solchen Einsatz (vgl. die Forschungsrichtung socialrobotics) entwickelt und entworfen werden. Arthur C. Clarke [Wi16] geht sogar soweit,dass jede hinreichend fortgeschrittene Technologie nicht von Magie zu unterscheiden sei.Wir wissen aus vielen Praxisbegegnungen, -berichten und Forschungsergebnissen, dassComputertechnologie an sich vermenschlicht wird (Elektronengehirn, ...). Es ist dahereine Aufgabe der informatischen Bildung, diese vorunterichtlichen Alltagsvorstellungenaufzugreifen und ihnen angemessene Vorstellungen über die tatsächlichen Wirkprinzipengegenüberzustellen. Daher bietet sich die Nutzung dieser Technologie besonders an, daihre Faszination zu Neugier und Hinterfragen anregt, und andererseits hier die Neigungbzw. Zuschreibung von menschlichen Eigenschaften vermutlich noch größer ist. An diesemGegenstand lässt sich also besonders gut erforschen, welche Vorstellungen Kinder haben,und mit welchen didaktischen Konzepten diese verändert bzw. angereichert werden können.In diesem Papier stellen wir ein Modell vor, welches Ergebnisse vorangegangener Studien zuRobotervorstellungen und den Ansatz der Dualitätsrekonstruktion [Sc09] zusammenbringt.Das Modell klassiﬁziert und beschreibt Schülervorstellungen (deskriptiver Aspekt) undermöglicht es, diese Vorstellungen einzuordnen und zu bewerten (normativer Aspekt).Darüber hinaus dient es als Werkzeug, um vorhandene Vorstellungen zu erweitern oder zuverändern (konstruktiver Aspekt) (vgl. die Einteilung bei [Ra11]).2 Vorstellungen über RoboterIm Folgenden möchten wir einen Überblick über uns bekannte Forschungen zu Vorstellungenvon Robotern geben. Bei der Recherche ﬁel auf, dass viele dieser Studien bereits älterenDatums sind. Die Technik hat sich seitdem stark weiterentwickelt, dennoch gehen wirdavon aus, dass viele dieser Vorstellungen auch heute noch von Relevanz sind. Einen gutenersten Überblick über Vorstellungen zu Computern allgemein gibt [RP16]. Auf Basis einerLiteraturrecherche werden hier die Vorstellungen inComputer sind intelligent,Computersind allwissende Datenbanken,Computer sind mechanisch,Computer sind KabelnetzwerkeundComputer sind programmierbargruppiert. Besonders im BereichComputer sindintelligentweist der Artikel auch auf Studien im Bereich Vorstellungen über Roboter hin.Die Ergebnisse dieser und weiterer Studien stellen wir nun im Folgenden gegliedert vor.Psychologische und technologische PerspektivenNach Turkle [Tu05] und Ackermann [Ac91] gibt es psychologische und physische bzw.technologische Perspektiven. Von der psychologischen ist die Rede, wenn der Gegenstandmit lebendigen Ansichten, Emotionen, Personalität oder eigenem Willen versehen wird. Im110 Kathrin Müller, Carsten Schulteii“proceedings” — 2017/9/17 — 20:19 — page 111 — #111iiiiiiVorstellungen zu Robotern 3Gegensatz dazu sprechen sie bei technologischen Perspektiven von leblosen Materialien,wie Motoren, Sensoren und Kontrollprogrammen.Turkle [Tu05] hat Kinder in einem natürlichen/ gewohnten Umfeld mit intelligenten Spiel-sachen konfrontiert und die Gespräche der Kinder aufgezeichnet. Sie fand in ihrer Studiesowohl eine eher psychologische Sichtweise - wie z.B. ein sprechendes Spielzeug istlebendig, da sprechende Wesen automatisch lebendig sind - aber auch eine gegenteiligeSichtweise auf intelligente Spielsachen heraus. Die gegenteilige Sichtweise behauptet,lebendige Wesen müssen mit Intentionen handeln, daher könne ein sprechendes Spielzeugnicht lebendig sein.Ackermann [Ac91] geht von zwei ähnlichen Perspektiven aus: „psychologisch“ und „engi-neering“. Beim psychologischen Bild werden intelligente Artefakte als lebendig angesehen,wenn sie Intentionen, Bewusstsein, Persönlichkeit oder einen eigenen Willen zu habenscheinen. Die Perspektive „engineering“ wird typischerweise benutzt, wenn das Bild einesgebauten oder programmierten Systems vorherrscht, dass das System gebaut oder pro-grammiert wird und keine Intentionen aufweist, sondern das Verhalten lediglich durchdie Interaktion der einzelnen Komponenten zustande kommt. Laut Ackermann ist einevollständige Beschreibung jedoch nur durch beide Perspektiven möglich: Die Fähigkeit,Objekte zu beleben bzw. Objekten Leben zu geben, sei ein entscheidender Schritt inRichtung des Aufbaus kybernetischer Theorien und kein Zeichen von kognitiver Unreife.Es wird die Fähigkeit erlangt, Perspektiven gezielt zu wechseln und für den richtigen Zweckeinzusetzen. Daher sollte es ein Ziel informatischer Bildung sein, diese Fähigkeit zu fördern.Levly und Mioduser [LM08] bestätigen diese Perspektiven in einer Studie mit fünf- undsechsjährigen Kindern in gewisser Weise. Die Studie untersucht die Erklärungsperspektivenhinsichtlich eines mobilen Roboters, während die Kinder sein Verhalten anhand von Regelnprogrammieren. Als Ergebnis lassen sich zwei Typen von Schülerperspektiven ﬁnden: DiePerspektive „bridging“ stellt dabei eine Mischperspektive aus „engineering“ und der psycho-logischen Perspektive dar. Außerdem wird im Gegensatz zu anderen Studien, die die Kinderbzw. Schülerinnen und Schüler ausschließlich die Roboter beobachten lassen, deutlich, dassdie Kinder durch die Steuerung von Robotern eine Vorstellung davon entwickelt haben, wieRoboter funktionieren und arbeiten.Resnick und Martin [RM91] unterteilen die wechselnden Perspektiven in der Grundschulebeim Umgang mit Lego Robotern in psychologische (Tier/ lebendig), mechanische (Ma-schinen) und informatische (Informationsﬂuss von einem Teil zum anderen) Denkmuster.Eigenschaften von RoboternIn den im vorherigen Abschnitt vorgestellten Studien lassen sich bereits erste Eigenschaftenerkennen, die Kinder Robotern zuweisen.Bernstein und Crowley [BC08] beschäftigten sich mit der Frage, inwieweit Erfahrungenmit Robotern und intelligenten Systemen im Kindesalter die Konzepte von „lebendig sein“und „Intelligenz“ beeinﬂussen. Um dies zu untersuchen, wurden 60 Kinder zwischen 4und 7 Jahren über intellektuelle, psychologische und biologische Eigenschaften von achtDingen befragt. Zusätzlich wurden die Eltern der Kinder befragt. Themen waren hier:Zugänglichkeit von Robotern und digitalem Spielzeug und/oder Lernmaterial, Roboter imEin Modell zur Analyse von Vorstellungen über Roboter und ihrer Funktionsweise 111ii“proceedings” — 2017/9/17 — 20:19 — page 112 — #112iiiiii4 Kathrin Müller und Carsten SchulteHaushalt und Interesse und Vorwissen über Roboter und Computer. Daraus ergab sich einquantitatives Maß der Vorerfahrungen der Kinder.In dieser Studie wurde deutlich, dass einem Roboter im Bereich der Intelligenz mehrEigenschaften zugeordnet wurden als einem Computer. Auf der Ebene der Intelligenz sinddie Werte vergleichbar mit einer Katze. Die Werte für biologische Eigenschaften lagen immittleren Segment, vergleichbar mit einer Pﬂanze. In der durchschnittlichen Bewertung derpsychologischen Eigenschaften wurde deutlich, dass gut die Hälfte der Kinder Roboterneinen freien Willen und/oder eigene Emotionen zuschreiben (Werte lagen im Mittelfeld).In [Be11] werden weitere kognitive Eigenschaften wie z.B. Erinnerungsvermögen genannt.Darüber hinaus werden hier emotionale und verhaltensorientierte Eigenschaften genannt.Roboter und AnimismusIn den vorherigen Abschnitten wurde bereits deutlich, dass es Kinder gibt, die Roboternmenschliche Charakteristika wie beispielsweise eine Persönlichkeit oder Bewusstsein odergar Lebendigkeit zuordnen. Diese Tendenz, leblosen Objekten menschliche Charakteristikazuzuordnen wurde ursprünglich von Piaget entdeckt und wird als Animismus bezeichnet(vgl. [Be11]). Es gibt zahlreiche Studien, in denen der mehrdeutige Status von technischenObjekten untersucht wird. Einige wie z.B. [DS96], [Be11] oder [BC08] zeigen, dass derbeschriebene Animismus häuﬁg auch in Bezug auf Roboter vorliegt.Kategorien von RoboternIm Rahmen der Studie von Bernstein und Crowley [BC08] wurden aus den bereits zuvorvorgestellten Eigenschaften von Robotern drei Kategorien zur Klassiﬁzierung von Roboternherausgearbeitet. Dabei handelt es sich um die Kategorien Roboter als Tier, Roboter alsMaschine und Roboter als intelligente Technik (smart technology). Roboter als Tiere weisendie Eigenschaft Lebendigkeit sowie viele psychologische und kognitive Eigenschaftenauf. Roboter als Maschine weisen keine Eigenschaft im Bezug auf Lebendigkeit auf.Psychologische und kognitive Eigenschaften sind kaum bis gar nicht vorhanden. Im Zugeder Kategorie Roboter als intelligente Technik machen die Autoren keine Aussage zurEigenschaft Lebendigkeit. Die Kategorie weist aber viele kognitive Eigenschaften auf undKinder, deren Vorstellungen in diese Kategorie eingeordnet werden, haben bereits mehrErfahrungen oder Begegnungen mit Robotern gehabt.Aus der Literaturanalyse wird deutlich, dass der Roboter häuﬁg als technologischeBlackbox betrachtet wird. Der Fokus liegt auf den biologischen, psychologischen undintellektuellen Eigenschaften sowie den Funktionen des Roboters. Lediglich die techno-logische Perspektive betrachtet Motoren, Sensoren etc. und bietet somit Hinweise aufein technisches Verständnis der Roboter. Um ein vollständigeres Bild über Roboter imKontext der informatischen Bildung zu erhalten, führen wir im folgenden Abschnitt eineDualitätsrekonstruktion dieses digitalen Artefakts durch.Dualitätsrekonstrution und RoboterDie Dualitätsrekonstruktion [Sc09] ist ein Verfahren zur didaktischen Analyse von digitalenArtefakten bzw. Informatiksystemen für die informatische Bildung. Es verschränkt die112 Kathrin Müller, Carsten Schulteii“proceedings” — 2017/9/17 — 20:19 — page 113 — #113iiiiiiVorstellungen zu Robotern 5Beschreibung von Präkonzepten und angestrebten Kompetenz- bzw. Lernzielen mit der ex-emplarischen Analyse der wesentlichen informatischen Aspekte des Unterrichtsgegenstands.Diese sind generell die Funktionsweise (Struktur) sowie die mit dem System verknüpftenAbsichten, Einsatzziele, -zwecke und Nebenwirkungen (Funktion). Um diese zu fassen,wird jeweils auch auf dietechnikgeschichtliche Entwicklungder betrachteten Klasse vonInformatiksystemen eingegangen.In den 1940er prägte Isaac Asimov in seinen Science-Fiction-Geschichten die berühmtendrei (später auf vier erweiterten) Robotergesetze, denen zufolge ein Roboter keinen Men-schen (bzw. später die Menschheit) schädigen darf, den Menschen gehorchen und sichselbst schützen muss - jeweils soweit nicht ein übergeordnetes Gesetz dagegen spricht.Tatsächlich gebaut wurden die ersten Roboter in den 1960er und 1970er Jahren, zunächstals Master-Slave-Arm zum Umgang mit atomaren Sto en, später dann als sogenannteIndustrie-Roboter in der industriellen Produktion. In den 1980er Jahren ging es um dieintelligente Verknüpfung von Wahrnehmung und Operation: Durch ausgeklügelte pro-grammierte Steuerung sollten Roboter anhand ihrer Sensoren die Umgebung erfassen unddementsprechend die Umgebung manipulieren oder sich selbst darin bewegen (mittelsAktoren). Mit dem Fortschreiten der Technologie erweiterte sich der Einsatzbereich vonstark begrenzten und kontrollierbaren Umgebungen (Fertigungsstraße, Operationssaal, etc.)zu alltäglichen Umgebungen (Haushalt,...), und damit auch die Interaktion zwischen Menschund Roboter von der engen Kontrolle zu stärkerer Autonomie und von der strikten Trennungder Einsatzbereiche bzw. -orte zu kooperierenden Formen, sodass heute auch von socialrobotics und co-bots anstelle von ro-bots gesprochen wird.DieFunktionvon Robotern wird daher auch mit Automatisierung (im Sinne Objektivierung:Übertragen von Handlungen an eine Maschine, die diese dann ausführt) nicht vollständigerfasst. Roboter werden eher menschenähnlich als Teil der Handlungen (z.B. Arbeitsprozesse)bzw. als autonom agierende Wesen betrachtet, die zur sozialen Umgebung dazugehören(z.B. Roboter in der Pﬂege). Anders formuliert: Robotern wird noch stärker als anderendigitalen Artefakten Autonomie und Interaktion als eigenständige Handlungsfähigkeitin einer sozialen Umgebung zugesprochen. Damit wird das Verhalten einer Maschinetendenziell als menschenähnlich, intentional aufgefasst.Auf der Betrachtungsebene derStrukturwird deutlich, dass dieses (emergente) Verhaltenauf einer Kombination von Sensoren, Programmsteuerung und Aktoren beruht. Sensorenumfassen typischerweise optische Sensoren, aber auch akustische und Berührungssensorensowie weitere „Sinne“, die Menschen so nicht haben (Radar, Ultraschall, u.a). Aktorendienen der Bewegung im Raum (Räder, u.a.) und der Manipulation von Gegenständen bzw.der Umgebung (Greifarm, u.a.).Ein Modell zur Analyse von Vorstellungen über Roboter und ihrer Funktionsweise 113ii“proceedings” — 2017/9/17 — 20:19 — page 114 — #114iiiiii6 Kathrin Müller und Carsten Schulte3Modell zur Analyse von Vorstellungen über Roboter und ihre Funk-tionsweiseIm Folgenden stellen wir nun unser theoretisches Modell zur Analyse und Einordnung vonVorstellungen über Roboter und ihrer Funktionsweise vor. Um ein möglichst vollständigesBild von Robotern in unserem Modell abzubilden, haben wir die Ergebnisse der unsbekannten Studien um weitere Charakteristika und um die zusätzlichen PerspektivenStruktur und Funktion aus der Dualitätsrekonstruktion ergänzt. Abbildung1zeigt unserKlassiﬁzierungRoboter als Lebewesen (soziales Wesen)Roboter als MaschineRoboter als intelligente Technik(smart technology)Roboter als soziale TechnikPerspektivetechnologischpsychologischStrukturFunktionMerkmalebiologischmechanisch/technischemotionalkognitiv/intellektuellintentionales	Verhaltensteuerbar	(manuell,	automatisch)Abb. 1: Modell zur Analyse und Einordnung von Vorstellungen über Roboter und ihre Funktionsweisevollständiges Modell bestehend aus Perspektiven und Merkmalen von Robotern. Ergänztwird das Modell um eine Klassiﬁzierung von Robotern.In den folgenden Abschnittenbeschreiben wir die einzelnen Aspekte des Modells und die vorgenommenen Ergänzungengenauer.Perspektiven auf RoboterIn der Literatur wurde deutlich, dass Kinder Roboter aus den Perspektiven technologischoder psychologisch, bzw. einer Mischung der beiden Perspektiven beschreiben (vgl. z.B.[LM08]). Wie bereits erwähnt, wurde in den vergangen Studien wenig Fokus auf dietechnologische Funktion und Struktur von Robotern gelegt. Würde man nur - beispielsweise- die psychologische Perspektive mit der technologischen Perspektive ergänzen oder ersetzen,fehlt ein wichtiger Aspekt informatischer Bildung, der leider oft übersehen wird. Verste-hen einer Technologie ist nicht reduzierbar auf das Verstehen eines Artefakts oder einesPhänomens an sich. Es lässt sich auch nicht auf die Analyse und Beschreibung reduzieren.Denn dann würde man die Technologie quasi naturwissenschaftlich als gegebenen Unter-suchungsgegenstand - als naturgegeben - hinnehmen. Dabei ist der Unterschied zwischenTechnologie und Natur, dass die Technologie und damit technische Artefakte von Menschenmit bestimmten Absichten künstlich erscha en worden sind und weiterhin neue erfundenund erscha en werden. Diese beiden Perspektiven werden daher als Struktur (Aufbau einestechnischen Systems) und Funktion (Interpretation eines technischen Systems) ergänzt.Zusammenfassend umfasst das Modell die folgenden Perspektiven:technologisch:Diese Perspektive betrachtet technische Bauteile und Eigenschaften undbietet somit Hinweise auf ein technisches Verständnis der Roboter.psychologisch:Der Fokus dieser Perspektive liegt auf den biologischen, psychologischenund intellektuellen Eigenschaften sowie den Funktionen des Roboters.114 Kathrin Müller, Carsten Schulteii“proceedings” — 2017/9/17 — 20:19 — page 115 — #115iiiiiiVorstellungen zu Robotern 7Struktur:Diese Perspektive charakterisiert sich durch beobachtbare Merkmale, die messbarund objektiv beschreibbar sind.Funktion:Diese Perspektive charakterisiert eine interpretierende Zuschreibung: Mehr oderweniger plausible Annahmen über E ekte, Nutzen, Angemessenheit, Einsatzzweck etc..Merkmale von RoboternDie Merkmale von Robotern in unserem Modell setzen sich aus den in der Literatur bereitsbenannten Merkmalen biologisch, emotional, kognitiv sowie intentionalem Verhalten undder Ergänzung um mechanisch/technisch und steuerbar zusammen. Die Ergänzung wurdevorgenommen, um im Bereich der Merkmale eine wichtige Komponente aus den Bereichender Funktionsweise und Struktur hinzuzufügen. Konkret sind die einzelnen Merkmale wiefolgt zu betrachten:biologisch:Hinter biologischen Merkmalen verbergen sich neben dem Animismus, also derZuschreibung von Lebendigkeit, weitere Aspekte, die Lebewesen zugeschrieben werdenkönnen, wie z.B. Wachsen oder Atmen sowie Sinne.mechanisch/technisch:Hinter mechanischen, bzw. technischen Merkmalen verbergen sichinsbesondere mechanische, bzw. technische Komponenten wie z.B. Sensoren und Aktorenund entsprechende mechanisch/technische Eigenschaften und Abläufe.emotional:Emotionale Merkmale sind solche, die man dem Bereich Emotionen und dememotionalen Erleben zuordnen kann. Hierzu gehören aber auch Interessen und Einstellungen.kognitiv/intellektuell:Kognitive bzw. intellektuelle Merkmale beinhalten alle kognitivenbzw. intellektuellen Fähigkeiten wie beispielsweise Denken, Rechnen, etwas wissen etc.intentional:Unter intentionalem Verhalten werden alle Verhaltensweisen betrachtet, diezielgerichtet, bzw. beabsichtigt sind. Hierzu gehört auch Sprechen.steuerbar:Merkmale im Bereich steuerbar gliedern sich auf in direkt und indirekt steuerbar.Unter direkt steuerbar wird beispielsweise die Steuerung über Hebel oder eine Fernbedienungverstanden. Indirekt steuerbar beinhaltet die Programmierung.Klassiﬁzierung von RoboternZur Klassiﬁzierung von Robotern übernehmen wir die drei Kategorien aus [BC08] mit derErgänzung um Roboter als soziale Technik und deﬁnieren diese wie folgt:Roboter als Lebewesen:In diese Kategorie fallen Vorstellungen über Roboter, die diese alslebendig ansehen und darüber hinaus neben eventuellen weiteren biologischen Merkmalen,Merkmale aus der Struktur-Perspektive aufweisen. Aus psychologischer Perspektive gibt esMerkmale im Bereich der Emotionalität, der Kognition sowie dem intentionalen Verhalten.Diese Merkmale können zusätzlich auch aus der Funktions-Perspektive auftauchen.Roboter als Maschine:In diese Kategorie fallen Vorstellungen über Roboter, die dieseEin Modell zur Analyse von Vorstellungen über Roboter und ihrer Funktionsweise 115ii“proceedings” — 2017/9/17 — 20:19 — page 116 — #116iiiiii8 Kathrin Müller und Carsten Schultenicht als lebendig ansehen, also keine biologischen Merkmale aus der Struktur-Perspektiveaufweisen. Aus Struktur- sowie technologischer Perspektive weisen Vorstellungen dieserKategorie mechanische bzw. technische Merkmale auf. Diese sind z.B. aus Struktur-Perspektive technische Bauteile. Darüber hinaus weisen Vorstellungen dieser Kategorie ausFunktions-Perspektive Merkmale im Bereich steuerbar auf.Roboter als intelligente Technik:Vorstellungen über Roboter als intelligente Technik weiseneine Abwesenheit von biologischen und emotionalen Merkmalen in allen Perspektiven auf.Im Prinzip erweitern Vorstellungen dieser Kategorie die Kategorie Roboter als Maschineum kognitive Merkmale aus technologischer und Funktions-Perspektive.Roboter als soziale Technik:Vorstellungen dieser Kategorie weisen im Unterschied zuRobotern als intelligente Technik Merkmale aus dem Bereich der Emotionalität ausFunktions- und technologischer Perspektive auf. Kognitive Merkmale sind ggf. gar nichtoder geringer vorhanden.Abbildung2zeigt die Einordnung der einzelnen Kategorien in das Modell.Roboter als LebewesenRoboter als MaschineRoboter als intelligente TechnikRoboter als soziale TechnikPerspektivetechnologischpsychologischStrukturFunktionMerkmalebiologischmechanisch/technischemotionalkognitiv/intellektuellintentionales	Verhaltensteuerbar	(manuell,	automatisch)PerspektivetechnologischpsychologischStrukturFunktionMerkmalebiologischmechanisch/technischemotionalkognitiv/intellektuellintentionales	Verhaltensteuerbar	(manuell,	automatisch)PerspektivetechnologischpsychologischStrukturFunktionMerkmalebiologischmechanisch/technischemotionalkognitiv/intellektuellintentionales	Verhaltensteuerbar	(manuell,	automatisch)PerspektivetechnologischpsychologischStrukturFunktionMerkmalebiologischmechanisch/technischemotionalkognitiv/intellektuellintentionales	Verhaltensteuerbar	(manuell,	automatisch)Abb. 2: Klassiﬁzierung von Robotervorstellungen anhand des Modells3.1 AnwendungsfelderDie Anwendungsfelder für das hier vorgestellte Modell lassen sich in normative, deskriptiveund konstruktive Aspekte unterteilen. Der deskriptive Aspekt umfasst dabei die Katego-risierung der Vorstellungen und die Einordnung der einzelnen Vorstellungsbestandteilein das Modell. Dabei ist die Form der Vorstellungserhebung z.B. Interview, Text, Bildetc. nicht von Relevanz. Die erhobenen Vorstellungen können zunächst z.B. mit einerqualitativen Inhaltsanalyse ausgewertet werden. Als Kategorien dienen hierbei die einzelnenPerspektiven und Merkmale des Modells (vgl. Abb.1, Tabelle links). Die Ergebnisse könnendann anhand der vorgegebenen Klassiﬁzierung eingeordnet werden (vgl. Abb.1, Auﬂistungrechts). Auf diese Art und Weise können sowohl Vorstellungen von einzelnen Individuenals auch von Gruppen analysiert und beurteilt werden. Die so gesammelten Vorstellungenwerden sichtbar und können damit in Lernprozessen berücksichtigt werden.116 Kathrin Müller, Carsten Schulteii“proceedings” — 2017/9/17 — 20:19 — page 117 — #117iiiiiiVorstellungen zu Robotern 9In einem weiteren Anwendungsfeld (normativer Aspekt) kann untersucht werden, inwieweitdie vorhandenen Vorstellungen ausreichend bzw. hilfreich sind. Hierzu wird zunächstfestgelegt, wie Roboter zu verstehen sein sollten. Angemessene Vorstellungen sind unsererMeinung nach eine Verknüpfung der KategorienRoboter als intelligente TechnikundRobo-ter als soziale Technik(vgl. Abb.2). O en ist, inwiefern die psychologische Perspektivedabei weiterhin berücksichtigt werden soll und ob die technologische Perspektive feinerunterteilt werden sollte [Ac91;RM91].Im dritten Anwendungsfeld, dem konstruktiven Aspekt, können basierend auf bekanntenSchülervorstellungen und normativen Modellen Methoden entwickelt und evaluiert werden,die zur Erweiterung und ggf. Veränderung der vorhandenen Vorstellungen beitragen. Wirkönnen mit unserem Modell die vorunterrichtlichen Vorstellungen wie folgt beschreiben:Sie sind vermutlich im BereichRoboter als Lebewesen, bzw.Roboter als Maschinean-gesiedelt (Abb.2oben). Aus normativer Perspektive angemessene Vorstellungen wärenaus den BereichenRoboter als intelligente, bzw.soziale Technik(Abb.2unten). An derGegenüberstellung mit dem Modell kann nun direkt abgelesen werden, auf welchen Vor-stellungen im Unterricht aufgebaut werden kann. So können Konzepte und Werkzeugeentstehen, die es ermöglichen Vorstellungen von Lernenden zu diagnostizieren und sinnvollzu verändern, bzw. anzureichern. Für die Erforschung von didaktischen Konzepten undLernprozessen kann das Modell an unterschiedlichen Stellen als Werkzeug zur Einordnungder Vorstellungen eingesetzt werden.4 Zusammenfassung und AusblickDieser Artikel stellt neben einem Überblick zum Stand der Forschung zu Robotervorstellun-gen ein Modell vor, welches ein Werkzeug zur Analyse und Einordnung von Vorstellungenüber Roboter und ihrer Funktionsweise darstellt. Dieses theoretisch erstellte Werkzeug wirdin einem nächsten Schritt in der Praxis eingesetzt, um Vorstellungen von Grundschulkindernzu Robotern zu analysieren und einzuordnen. Dabei wird es empirisch evaluiert und ggf.um fehlende Komponenten ergänzt. Eine interessante Fragestellung an dieser Stelle ist, obdie Perspektivetechnologischim Anwendungskontext ausreichend ist, oder, ob sie wie bei[RM91] in mechanische und informatische Perspektive unterteilt werden sollte.Durch die Einordnung von Vorstellungen in das Modell ist es möglich, Hypothesen zurBeeinﬂussung der Vorstellungen zu generieren. Hier sind unterschiedliche Wege vorstellbar,wie z.B. mit Konzepterweiterung und Konzeptwechsel. Darüber hinaus ist es interessant zuerforschen in wie weit in der KategorieRoboter als intelligente TechnikundRoboter alssoziale Technikpsychologische Vorstellungen vorhanden sein sollten, um ein umfassendesVerständnis zu Robotern und ihrer Funktionalität zu besitzen. Dies ist gerade dann relevant,wenn es darum geht, Roboter in unterschiedlichen Rollen wahrnehmen zu können undihnen auch unterschiedliche Rollen zuweisen zu können. Ob dies ohne eine psychologischePerspektive überhaupt möglich, oder wir unsere KategorienRoboter als intelligente Technikundsoziale Technikum Merkmale aus psychologischer Perspektive ergänzen müssen, isthier eine spannende Frage.Ein Modell zur Analyse von Vorstellungen über Roboter und ihrer Funktionsweise 117ii“proceedings” — 2017/9/17 — 20:19 — page 118 — #118iiiiii10 Kathrin Müller und Carsten SchulteWie bereits in der Einleitung erwähnt, dienen Roboter hier als exemplarisches Beispielfür digitale Artefakte. Es ist daher interessant zu untersuchen, welche Veränderungen amModell für andere digitale Artefakte notwendig sind.Literatur[Ac91]Ackermann, E.: The agency model of transactions: Toward an understandingof children’s theory of control. Psychologie genetique et sciences cognitives.Geneve: Fondation Archives Jean Piaget/, 1991.[BC08]Bernstein, D.; Crowley, K.: Searching for Signs of Intelligent Life: An Inves-tigation of Young Children’s Beliefs About Robot Intelligence. Journal of theLearning Sciences 17/2, S. 225–247, 2008.[Be11]Beran, T. N.; Ramirez-Serrano, A.; Kuzyk, R.; Fior, M.; Nugent, S.: Understandinghow children understand robots: Perceived animism in child–robot interaction.International Journal of Human-Computer Studies 69/7–8, S. 539–550, 2011.[DS96]van Duuren, M.; Scaife, M.: “Because a robot’s brain hasn’t got a brain, it justcontrols itself” — Children’s attributions of brain related behaviour to intelligentartefacts. European Journal of Psychology of Education 11/4, S. 365, 1996.[LM08]Levy, S. T.; Mioduser, D.: Does it “want” or “was it programmed to...”? Kinder-garten children’s explanations of an autonomous robot’s adaptive functioning.International Journal of Technology and Design Education 18/4, S. 337–359,2008.[Ra11]Rabel, M.: Grundvorstellungen in der Informatik. In (Weigend, M.; Thomas, M.;Otte, F., Hrsg.): Informatik mit Kopf, Herz und Hand. Praxisbeiträge zur INFOS2011. ZfL-Verlag, Münster, S. 61–70, Sep. 2011,    : 978-3-86877-009-4.[RM91]Resnick, M.; Martin, F.: Children and artiﬁcial life. In (Hartel, I.; Papert, S.,Hrsg.): Constructionism. Ablex, S. 41–71, 1991.[RP16]Rücker, M. T.; Pinkwart, N.: Review and Discussion of Children’s Conceptionsof Computers. Journal of Science Education and Technology 25/2, S. 274–283,2016.[Sc09]Schulte, C.: Dualitätsrekonstruktion Als Hilfsmittel Zur Entwicklung Und Pla-nung von Informatikunterricht. In (Koerber, B., Hrsg.): Zukunft Braucht Herkunft.INFOS’09. S. 355–366, 2009,    : 978-3-88579-250-5.[Tu05]Turkle, S.: The Second Self: Computers and the Human Spirit (MIT Press). TheMIT Press, 2005.[Wi16]Wikipedia: Clarkesche Gesetze. In: Wikipedia. Page Version ID: 158717013,13. Okt. 2016,   :https://de.wikipedia.org/w/index.php?title=Clarkesche_Gesetze&oldid=158717013, Stand: 19. 01. 2017.118 Kathrin Müller, Carsten Schulteii“proceedings” — 2017/9/17 — 20:19 — page 119 — #119iiiiiiIra Diethelm (Hrsg.):  Informatische Bildung zum Verstehen und Gestalten , Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017     1  Schülervorstellungen im Zusammenhang mit  Smartphones   Torsten Brinda1 und Friederike Braun2 Abstract:  Smartphones haben einen rasanten Aufstieg hinter sich. Von den ersten erschwinglichen Mobiltelefonen bis zu modernen High -Tech -Geräten  sind sie nicht nur komplexer, sondern auch immer beliebter geworden. Im Jahr 2016 besaßen  fast 100% aller Jugendl ichen in Deutschland ein eigenes Smartphone und benutz ten es ständig. Smartphone s weisen für Lernende in Schulen einen hohen Lebensweltbezug auf  und eignen sich d aher für eine unterrichtl iche Betrachtung  als Infor-matiksystem  auch  im Hinblick auf dessen Wirkung auf Individuum und Gesellschaft, weiterhin zur Anzeige schulbezogener Medieninhalte . Für eine didaktische Aufbe reitung des Gegenstandes „Smartphone “ für d en Unterricht  mangelt es jedoch unter anderem noch an wissenschaftlichen Arbeiten zu diesbezüglichen Schülervorstell ungen. Deshalb  wurde eine explorative Studie zur Erfassung von Schülervorstellungen im Zusammenhang mit  Smartphones durchgeführt . Aus acht halbstrukturierten Interviews wurde ein erster Überblick über bestehende Vorstellungen  zu Teilas-pekten von Smartphones gewonnen . Keywords: Schülervorstellungen, Smartphone , halbstrukturierte Interviews, explorative Studie .  1 Einleitung   In unserer modernen Welt  sind wir in beständig zunehmenden Umfang von verschied e-nen Informatiksystemen umgegeben. Informatische Bildung in Schulen soll sich mit den Prinzipien  und G estaltungsgrundlagen solcher Systeme  auseinanderse tzen und die kom-plexen Wirkprozesse auf Individuu m und Gesellschaft in den Blick nehmen  – auch  unter Einbeziehung von Informatiksysteme n aus der Lebenswelt der Schülerinnen und Schü-ler. Schon bei einer oberflächlichen Suche sticht dabei ein System  aus der Menge he raus: das Smartphone . Laut der JIM -Studie  2016 (vgl. mpfs.de)  besitzen 95% der Jugendli-chen im Alter zwischen 12 und 19 Jahren im Jahr 2016 ein Smartphone mit Touchscreen und Internetz ugang . Die überwiegende Mehrheit benutzt das Gerät  täglich , sei es  zum Kommunizieren, zum Recherch ieren  im Intern et, zum Hören von Musik  oder zum Schauen von V ideos. Für eine unterrich tliche Aufbereitung  nach  dem Prinzip der didak-tischen Rekonstruktion [Di11]  mangelt es jedoch gegenwärtig noch an empirisch gesi-cherten Erkenntnissen zu Alltagsvorstellungen, die Schül erinnen und Schüler durch ihren Umgang mit dem Gerät entwickeln und in den Unterricht mitbringen . Die empiri-sche Exploration solcher  Vorstellungen war daher Gegenstand einer Interviewst udie [Br16] , von der in dieser Arbeit berichtet wird.                                                               1 Universität Duisburg -Essen, Didaktik der Informatik , Schützenbahn 70 , 45127  Essen , torsten.brinda@u ni-due.de  2 Universität Duisburg -Essen, Institut für Informatik und Wirtschaftsinformatik , Schützenbahn 70 , 45127  Essen , friederike.braun@stud.uni -due.de  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 119ii“proceedings” — 2017/9/17 — 20:19 — page 120 — #120iiiiii 2   Torsten Brinda  und Friederike Braun    2 Verwandte Arbeite n  Es wird bereits seit einiger Zeit  in den Blick genommen, die Attraktivität von Smartph o-nes unter Jugendlichen für die informatische Bildung in Schulen nutzbar zu machen. So liegen Konzepte zur Implementierung  von Apps im Unterricht vor (z. B.  [Br14] ), wei-terhin wurde damit experimentiert, Smartphones als alleinige Informati ksysteme im Informatikunterricht einzusetzen  (z. B. [Mü11] ). Darin zeigte sich , dass das möglich ist und das s damit einige didaktische Vorteile verbunden sein können, wie z.  B. eine ef fek-tivere Nutzung der Unterrichtszeit und ein geschlechtergerechterer Zugang zum verwen-deten Inform atiksystem.  Schülerorientierter Unterricht , der von bestehenden Schülervor-stellungen ausgeht, kann bspw. nach dem Modell der didaktischen Rekonstruktion ge-staltet werden, das Diethelm et al. in die Informatik übertrugen [Di11]. Ferner erweiter-ten sie es um gesellschaftliche Ansprüche an das zugeordnete Schulfach , die Auswahl von informatischen Phänomenen und die Einbeziehung von Lehrerperspe ktiven . In die-sen d rei Bereichen sowie den  Schülervorstellungen im Inform atikbereich  bestehe noch Forschungsbedarf. Es existieren bisher  eine Reihe von Arbeiten zu Schülervorstellungen, die einzelne Teilaspekte des vernetzten Informatiksystems Smartphone berühren , bspw.  wurd en Schülervo rstellungen zum Aufbau und zur Funktionsweise des  Internet s in einer Reihe von Arbeiten erfasst  (z. B.  [Pa05],  [DWZ12 ]). Inform atikbezogene Arbeiten, die sich explizit auf Schülervorstellungen im Zusamme nhang von Smartphones beziehen, wurden in  einer ausführlichen Literaturreche rche der Autoren bislang nicht gefu nden. 3 Forschungsmethodik  Zur Datenerhebung fiel die Wahl auf leitfadengestützte Interviews.  Für deren Hauptpha-se wurden Fragen zu Kategorien entwickelt, die sich an von Desktop -Computern  ab-grenzenden Aspekten von Smartphones orientierten (K1 bis K4, vgl. Tab. 1).  K1: Drahtl ose Verbindungen von Smar tphones  K1.1: Netzwerkstru ktur von Mobil-funknetzen  K1.2: Adressierung in Mobi lfunknet-zen K1.3: Vom Smar tphone genutztes Übertragung smedium  K1.4 : Handover bei Smartphones  K1.5: Internetprot okoll als Grundlage netzb asierter Dienste  K2: Apps auf Smartphones  K2.1: Definition einer App  K2.2:Program m-aufruf auf einem Smartphone  K2.3: Herkunft von Apps  K2.4: Installat ion von Apps  K3: Steu erung von Smartph ones mit Hilfe des Touc h-screens  K3.1: Bedienel emente eines Smartphone  K3.2: Touchscreen eines Smartphones  K3.3: Programma rchi-tektur eines Smartpho-nes K4: Kompa kte Bauart von Smartphones  K4.1: In Smar t-phones vertre-tene kompakte Hardware  K4.2: Techn i-sche Grenzen von Smartph o-nes Tab. 1: Deduktiv entwickeltes Kategoriensystem für Schülervorstellungen zu Smartphones  Im Herbst 2016 wurden zwölf Inte rviews mit Lernenden der Jgst. 9 und 11  (jeweils zur Hälfte mit und ohne Informatikunterricht) an einem Gymnas ium im Ruhrgebiet in NRW durchgeführt und audioaufgezeichnet , davon acht für die Auswertung ausgewählt und mittels qualitativer Inhaltsanalyse nach Mayring ausgewertet.   120 Torsten Brinda, Friederike Braunii“proceedings” — 2017/9/17 — 20:19 — page 121 — #121iiiiii Schülervorstellungen im Zusammenhang  mit Smartphones     3  4 Ergebnisse der Studie   Im Bereich drahtlose r Netzverbindungen  (K1) waren sich a lle Teilnehmenden be-wusst, dass ihre Smartphones an ein weitläufiges Netzwerk angeschlossen sind  (K1.1) . Vier Schüler stellten sich vor, dass die Verbindung über Masten  erfolge , drei über Server und drei weitere  über Satellit . Dass zur Adre ssierung von Daten eine  Nummer verwendet werde , äußerten fünf von acht Teilnehmenden  (K1.2). Ein Teilnehmer sagte explizit, dass die Nummer eindeutig sei , bei anderen ergab sich dies implizit aus den gewählten Beispielen  (z. B. Telefonnummer) , was dem Konzept der MAC -Adressen  nahekommt . Eine übergreifende Vorstellung, welches Übertragungsmedium ein Smartph one nutzt , wurde  nicht gefunden  (K1.3). Funk wurde  auf Anfrage nicht erwogen, jedoch  von einem Schüler später  im Kontext eines Funkloches beilä ufig erwähnt. Vier von acht Schüle rn nannten  lediglich „Signale “ als Medium . Alle Teilnehmenden  waren sich  bewusst, dass die Güte einer Netzwerkverbindung schwanken kann (K1.4). Die Hälfte meint e, dass unterschiedliche Dienste auch unterschiedliche Anford erungen an Netzwerkverbindun-gen stellen (K1.5) . Drei Schüler sagten, dass die verschiedenen Dienste dasselbe Netz benutzen. Ein e Schüler in schlus sfolgert e, dass „alles über das Internet funktioniere “ [Br16, S. 134] , weil ihre Messenger -Apps nur mit einer aktiven Internetverbindung nutzbar s eien. Unter den Vorstellungen  zu Apps  (K2) sticht vor allem heraus, dass s echs der Teilnehmenden  Programme auf dem Smartphone  für eine  bestimmte Aufgabe als Apps betrachten  (K2.1) . Sie defi nieren damit Anwendungsprogramme, auch wenn sie die Begriffe „Anwen dung “ und „Application “ deutlich seltener  nutzen.  Fünf Schüler betrachten alles, was aus einem App Store heruntergeladen werde , als eine App. Fünf von acht Schülern stellten sich vor, dass das Smartphone oder etwas darin  beim Aufruf einer App arbe ite (K2.2) . Zwei präzisier ten, dass Signale versen det würden . Bezüglich der in einer App enthaltenen Daten fanden sich bei zwei Schülern  detai lliertere Vorstellungen : Einer  stellt e sich vor, dass beim Aufruf einer App ein „Layout “ aufgerufen werde , das dann mit aus dem Internet geladenen Daten aufg efüllt werde . Er verglich  diese „App -Basis“ mit dem in Java verwendetem Konzept  des Basisko nstruktors für Klassen. Eine Schülerin gab an , dass Informat ionen , welche entweder  vom Entwickler der App einpro-grammiert oder bei v orherigen Aufrufen der App gespe ichert worden seien, geladen werden. Alle Schüler hatten  schon einmal eine App aus einem Store geladen  (K2.3) , doch nur  eine Sch ülerin gab auch die Möglichkeit an, dass man selbst eine App entwi-ckeln könn e. Für die Hälfte de r Teilnehmenden  war eine App nach dem Download direkt nutzbar , weitere Installationsschritte wurden nicht erwogen  (K2.4) . Drei Befragte gaben  an, dass Install ationsschritte vor der Nutzbarkeit erforderlich seien . Hinsichtlich der Bedienung per Touchscreen  (K3) beschränkten sich die Antworten  in K3.1 fast aus-schließlich darauf, welche Bedienelemente bei einem Smartphone gegeben seien . Fünf der Teilnehmenden  benannten  den Touc hscreen als Peri pheriegerät, das Berührungen wahrnehme  und entsprechend Signale an e ine zentrale Recheneinheit  sende  (K3.2) . Sechs der Jugendl ichen stellen sich weiterhin vor, dass das Smartphone  nach vorpro-grammierten Mustern auf Eingaben reagier e (K3.3) . Die kompakte  Bauart (K4)  erklär-te sich die Hälfte der Lernenden  damit , dass die in ihnen enthaltenen Daten wenig bzw. keinen Platz wegn ähmen (K4.1) . Zwei konkretisierten , dass eigentlich keine Daten ge-Schülervorstellungen im Zusammenhang mit Smartphones 121ii“proceedings” — 2017/9/17 — 20:19 — page 122 — #122iiiiii 4   Torsten Brinda  und Friederike Braun    speichert werden  müssten , da diese  auf externen Speichern , wie Se rvern oder im Himmel fliegenden Clouds , hinterlegt  würden . Zwei weitere ä ußerten, dass die kleinen internen Speicher in der Lage seien viele Daten aufzunehmen . Ein Schüler äußerte zudem , Daten würden keinen Platz we gnehmen, weil sie nur aus Bits und Bytes bestünden  und somit nicht physisch präsent seien . Im Vergleich zu Desktop -Computern schätzten fünf Teil-nehmende die Leistungsfähigkeit von Smartphones geringer ein  (K4.2)  mit Verweis auf  den geringeren Spe icherplatz, langsamere Prozessoren bzw.  schlechtere Grafikkarten. Außerdem könnten  weniger Peripherieger äte angeschlossen we rden. 5 Fazit  und Ausblick  Im Rahmen der Studie konnten eine Reihe von Schülervorstellungen zu einzelnen A s-pekten von Smartphones ermittelt werden.  Dabei  wurden sowohl Vorstellungen e rfasst, die von einer Mehrzahl der Jugendlichen vertreten wurden, als auch solche , die nur von einzelnen Teilnehmenden  genannt wurden, dafür aber deutlich d etaillierter ausfielen.  Nachfolgend  ist es nun erforderlich , die Erfassung die sbezüglicher Vorstellungen in weiteren Arbeiten zu vertiefen und zu prüfen, inwieweit sich diese auch bei anderen Schülergruppen finden lassen. Weiterhin sollte  dabei informatikspezifisches Vorwissen genauer ermittelt und kontrolliert werden, um den Einfluss von Informatikunterricht auf die Schülervorstellungen ermitteln zu können . Offen ist außerdem die Erfassung diesbe-züglicher  Lehrervorstellungen, wie in [Di11] angeregt . Schlussendlich sollten Empfeh-lungen für den Informatikunterricht abgeleitet werden.  Literaturverzeichnis  [Br14]  Brichzin, P.: Überwachung von Smartphone -Kosten. Ein Beispiel für die  Aufgabe n-entwicklung mithilfe von Leitfragen. LOG IN 176/177, 82 -87 (2014).  [Br16]  Braun, F.: Schülervorstellungen von Smartphones. Schr.  Hausarbeit im Rahmen der Ersten Staatspr.  f. d. Lehramt an Gymn. /Gesamtschulen, Univ.  Duisburg -Essen, 2016.  [Di11]  Diethelm, I.; Dörge, C.; Mesaros, A.; Dünnebier, M.: Die Didaktische Reduktion für den Informatikunterricht. In (Thomas, M. Hrsg.): Informatik in Bildung und Beruf. 14. GI-Fachtagung „Informatik und Schule – INFOS 2011”. Köllen, Bonn, S. 77 -86, 2011.  [DWZ12]  Diethelm, I.; Wilken, H.; Zumbrägel, S.: An investigation of secondary school st u-dents’ conceptions on how the Internet works. In (ACM ed.): Proc.  of the 12th Koli Calling Int. Conf.  on Computing Educ.  Research. ACM, New York, pp. 67 -73, 2012.  [Mü11]  Mülle r, D.: Fachdidaktisch begründete Auswahl von Informatiksystemen für den Unterrichtseinsatz. In (Thomas, M. Hrsg.): Informatik in Bildung und Beruf. 14. GI -Fachtagung „Informatik und Schule – INFOS 2011”. Köllen, Bonn, S. 167 -176, 2011.  [Pa05]  Papastergiou,  M.: Students’ Mental Models of the Internet and Their Didactical E x-ploitation in Informatics Education. Educ. a.  Inform.  Techn.  (10) 4, S. 341 -360, 2005.  122 Torsten Brinda, Friederike Braunii“proceedings” — 2017/9/17 — 20:19 — page 123 — #123iiiiiiIra Diethelm (Hrsg.): Infos 2017 - Informatische Bildung zum Verstehen und Gestalten,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 1Das Konzept Nature of Computer ScienceYannick Schneider1, Andreas Mühling2Abstract: Diese Arbeit präsentiert die Ergebnisse einer Delphi-Befragung, die unter Experten einenKonsens über das „Bild“, also die wissenschaftlichen Ziele und Methoden der Informatik, ermittelnsoll. Die Experten wurden sowohl aus dem akademischen als auch industriellen Umfeld akquiriert.Ziel dieser und folgender Untersuchungen ist es, das Konstrukt „Nature of Computer Science“ , d.h.angemessene V orstellungen von Informatik, für Forschende und Lehrende in der Informatikdidaktikzugänglich zu machen.Keywords: Informatikdidaktik; Nature of Computer Science; Informatikbild; Schülerperspektive1 Einleitung uns Stand der ForschungInformatikunterricht kann viele Ziele verfolgen und auf viele Arten ausgestaltet sein. Wäh-rend aktuell die Diskussion um „digitale Bildung“ der Informatik eine eher unterstützendeRolle im Kanon mit anderen Fächern zuweist, gibt es nach wie vor auch den Fachunter-richt mit klarem Bezug zur Wissenschaft der Informatik. Ein Ziel sollte in einem solchenUnterrichtsszenario natürlich auch sein, diese Bezugswissenschaft kennenzulernen undein adäquates Verständnis der Denkweisen und Methoden von Informatikern auszubilden.Befragungen mit Schülern und Studienanfängern zeigen, dass viele von ihnen nur unzurei-chende V orstellungen von Informatik haben [He13, MW06]. Das mag einerseits an einemfehlenden Kontakt zu Informatikunterricht selbst liegen, aber auch an der uneinheitlichenAusgestaltung des Fachunterrichts sowie an einem fehlenden Konsens unter den Expertenhinsichtlich dem Bild der Wissenschaft Informatik [Ha93].In diesem Artikel wird eine Erhebung nach der Delphi-Methode vorgestellt, die versucht,normativ unter Experten einen Konsens darüber zu ermitteln, was die Informatik als Wis-senschaft auszeichnet.In den Naturwissenschaften und der Mathematik werden derartige Forschungen seit Jahr-zehnten unter den Schlagwörtern „Nature of Science“ und „Nature of Mathematics“ durch-geführt. Einen umfassenden Überblick über die bisherigen Arbeiten in den Naturwissen-schaften und der Mathematik liefern [Le07, ODV02]. Im Bereich Informatik existierenbislang philosophische Arbeiten [Ha93] und einige deskriptive Studien aus dem amerika-nischen Raum, deren Fokus auf den Einstellungen und dem Selbstkonzept von Schülernund Studierenden liegt [EDS12],[Wi03].Im Rahmen des Projekts „Weltbilder der Informatik“ wurde eine qualitative Erhebungunter Studierenden durchgeführt [GI13]. „[D]as Bild der Informatik“ ist ein Bestandteil1Christian-Albrechts-Universität zu Kiel, ysc@informatik.uni-kiel.de2Christian-Albrechts-Universität zu Kiel, Arbeitsgruppe Didaktik der Informatik, am@informatik.uni-kiel.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 123ii“proceedings” — 2017/9/17 — 20:19 — page 124 — #124iiiiiidieses Weltbildes. Teilweise wurden den Studierenden in der Weltbilder-Studie ähnlicheFragen gestellt wie den Teilnehmern in dieser Befragung, es geht im Gegensatz zu derhier präsentierten Studie allerdings nicht um einen Konsens unter Experten sondern um„die subjektiven bzw. kollektiven (alltagsweltlichen) Einschätzungen der Studierenden“.Eine vergleichbare Befragung [MW06] führten Maaß und Wiesner mit dem Fokus auf dasStudienfach Informatik durch. In dieselbe Richtung gehen auch einige Studien amerikani-scher Forscher, beispielsweise [He13].2 Konzeption der StudieEs wurde eine Befragung nach der Delphi-Methode organisiert. Hinweise zur Methodikﬁnden sich u.a. in [Hä02]. Die Teilnehmer wurden sowohl aus dem akademischen Um-feld, über die GI-Fachgruppe „Didaktik der Informatik“, als auch aus der Industrie, überden lokalen Dachverband „Digitale Wirtschaft Schleswig-Holstein“ (DiWiSH), akquiriertum ein möglichst heterogenes Expertenpanel zusammenzustellen. Die Ergebnisse wurdenqualitativ nach der Methode der Grounded Theory kategorisiert.Die Eingangsfragen waren: „Wie deﬁnieren Sie für sich den Begriff ,Informatik‘?“ und„Halten Sie ,computer science‘ für eine angemessene Übersetzung von ,Informatik‘? Fallsnicht: Was stört Sie daran?“ Ziel dieser Fragen waren das Sammeln von persönlichen Bil-dern und eine Bewertung des englischen Begriffs „computer science“, der in der Informatik-Gemeinschaft seit jeher umstritten ist ([Co92], [Ja93]).Die Methoden einer Wissenschaft und ihr Verhältnis zu anderen Wissenschaften sind einelementarer Bestandteil ihres Selbstverständnisses und somit ihrer Natur [Ha93]. Die Ex-perten wurden nach einzigarten/typischen Methoden der Informatik befragt und gebe-ten, die Informatik in die vier Wissenschaftskategorien (nach [Ba08]) Natur-, Struktur-,Geistes- und Ingenieurswissenschaften einzuordnen (5-stuﬁge Likert Skala).Die zentralen fünf Fragen der ersten Runde waren Deﬁnitionen von oder Aussagen überInformatik, zu denen die Teilnehmer Stellung beziehen sollten. Als Quellen wurden diegroßen Dachverbände GI3, ACM [De89] und CSTA [CS04] sowie die Studiengangsbe-schreibung der RWTH Aachen4und die Deﬁnition eines klassischen Informatiklehrbu-ches [Br98] verwendet.Die beiden letzten Fragen befassen sich mit „häuﬁgen Missverständnis[sen] in Bezugzur Informatik (von Schülern, Studierenden, Auszubildenden, Kunden oder Laien)“ undAspekten, in denen Informatik häuﬁg unterschätzt wird.3Was ist Informatik? Unser Positionspapier. https://www.gi.de/ﬁleadmin/redaktion/Download/was-ist-informatik-lang.pdf, 20064Course of Study Description: Computer Science B.Sc. http:/ www.rwthaachen.de/cms/root/Studium/V or-dem-Studium/Studiengaenge/Liste-Aktuelle-Studiengaenge/Studiengangbeschreibung/bnzs/Informatik-B-Sc-/124 Yannick Schneider, Andreas Mühlingii“proceedings” — 2017/9/17 — 20:19 — page 125 — #125iiiiiiIra Diethelm (Hrsg.): Infos 2017 - Informatische Bildung zum Verstehen und Gestalten,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 33 Ergebnisse und AusblickAn der ersten Runde der Befragung nahmen 14 Teilnehmer teil. Sechs davon kamen ausdem akademischen, acht aus dem industriellen Umfeld. In der zweiten Runde war dasPanel auf acht Teilnehmer, je vier mit akademischen und industriellem Hintergrund, ge-schrumpft. Daher und aufgrund der Tatsache, dass unter den verbleibenden Teilnehmernweitgehende Übereinstimmung herrschte, wurde auf eine dritte Runde verzichtet.Konsens herrschte über den Begriff „computer science“, den fast alle (13 von 14) Teilneh-mer als unangemessen bewerten. Große Einigkeit gibt es außerdem hinsichtlich der Ein-gangsfrage. Neun der 14 Teilnehmer deﬁnierten Informatik für sich selbst sinngemäß als„Wissenschaft der automatischen Informationsverarbeitung“. Die dritte Frage, nach dentypischen oder einzigartigen Methoden der Informatik, ließ sich nicht zu einem Konsensführen. Die meistgenannten typischen, aber nicht notwendigerweise einzigartigen, Metho-den waren: Modellierung (6 ⇥), Verwendung digitaler Daten und Implementierung (4 ⇥),algorithmisches Problemlösen, Abstraktion, Konstruktion und Dekonstruktion sowie dieVerwendung einer universellen Maschine (je 2 ⇥).Die Einordnung in die Wissenschaftskategorien liefert ein gemischtes Bild. Die größte Ei-nigkeit besteht in der Ablehnung bei Geisteswissenschaft und Zustimmung bei Ingenieurs-wissenschaft. Strukturwissenschaft bewegt sich um die Mitte der Likert Skala, währendNaturwissenschaft eine eher bimodale Verteilung zeigt (6 mal Ablehnung, 5 mal Zustim-mung). Die beiden Teilnehmer, die hier „eindeutig nein“ gewählt hatten, stimmten in ihrenBegründungen überein: die Informatik beschäftige sich nicht mit natürlichen, sondern mitmenschengemachten Phänomenen. Der Teilnehmer, der „eindeutig ja“ gewählt hatte ist derAnsicht, dass die Gesellschaft inzwischen so sehr von Informatiksystemen durchdrungenist, dass diese quasi-natürliche Phänomene bildeten und auch als solche erforscht würden.Die Auswertung der Kommentare zu den gegebenen Deﬁnitionen drehte sich hauptsäch-lich um eine Kritik an der Über- bzw. Unterrepräsentation von Themen. Insgesamt fünfTeilnehmer monierten, die Deﬁnitionen von ACM und CSTA seien zu stark auf Algorith-mik und Automatisierung fokussiert. Da diese beiden Deﬁnitionen als einzige dem eng-lischsprachigen Kulturkreis entstammen, könnte auch dies wieder ein Indiz darauf sein,dass mit dem Begriff „computer science“ eine andere Sichtweise auf die Disziplin Infor-matik verknüpft ist. Fünf Teilnehmer rekurrierten auf den Themenkomplex „Informatikund Gesellschaft“, es wurde sowohl an den Deﬁnitionen von Broy und der GI dessenFehlen bemängelt als auch an den Deﬁnitionen von CSTA und RWTH deren Nennunghonoriert.Das Verhältnis von Informatik und Programmierung – in V orarbeiten teilweise gleichge-setzt [Wi03] – erweist sich als nicht eindeutig: das Panel erkennt zwar das Implementierenoder Programmieren als typische Methode an, sieben Teilnehmer gaben aber als häuﬁgstesMissverständnis die Gleichsetzung von Informatik und Programmierung an.Zusammengefasst kann man als Konsens des Panels festhalten: Die Informatik begreiftsich selbst als Bindeglied zwischen Ingenieurs- und Strukturwissenschaften. Sie befasstsich mit dem Untersuchungsobjekt „Information“ mit den eng damit verknüpften Metho-Das Konzept Nature of Computer Science 125ii“proceedings” — 2017/9/17 — 20:19 — page 126 — #126iiiiiiden der Abstraktion und Modellierung. Eine Verzahnung von Forschung und Entwicklung,verknüpft mit der Methode des Implementierens, ist typisch. Zu den Aufgaben eines In-formatikers gehört auch die Beschäftigung mit den sozialen Auswirkungen und der Inter-aktion von Mensch und Computer.Literaturverzeichnis[Ba08] Balzert, Helmut: Wissenschaftliches Arbeiten. Herdecke, 2008.[Br98] Broy, Manfred: Informatik. Eine grundlegende Einführung. Berlin, 1998.[Co92] Coy, Wolfgang: Für eine Theorie der Informatik! In (Coy, Wolfgang et al., Hrsg.): Sicht-weisen der Informatik. Braunschweig, 1992.[CS04] CSTA, Computer Science Teachers Association: Model Curriculum for K-12 ComputerScience. 2004.[De89] Denning, Peter J. et al.: Computing as a discipline. Communications of the ACM,32(1):9–23, 1989.[EDS12] Elliott Tew, Allison; Dorn, Brian; Schneider, Oliver: Toward a Validated Computing At-titudes Survey. In: Proceedings of the Ninth Annual International Conference on Interna-tional Computing Education Research. ICER ’12, New York, S. 135–142, 2012.[GI13] GI, Gesellschaft für Informatik, Hrsg. Sonderheft: Weltbilder in der Informatik: Sichtwei-sen auf Profession, Studium, Genderaspekte und Verantwortung, Jgg. 36(3) in Informatik-Spektrum. 2013.[Ha93] Hartmanis, Juris: Some observations about the nature of computer science. Lecture Notesin Computer Science, 761:1–12, 1993.[Hä02] Häder, Michael: Delphi-Befragungen. Ein Arbeitsbuch. Wiesbaden, 2002.[He13] Hewner, Michael: Undergraduate Conceptions of the Field of Computer Science. In (Si-mon, Beth; Clear, Alison; Cutts, Quintin I., Hrsg.): Proceedings of the Ninth Annual In-ternational ACM Conference on International Computing Education Research, La Jolla,USA, 12–14 August 2013. New York, S. 107–114, 2013.[Ja93] Janich, Peter: Zur Konstitution der Informatik als Wissenschaft. In (Schefe, Peter; Has-tedt, Heiner; Dittrich, Yvonne; Keil, Geert, Hrsg.): Informatik und Philosophie. Mann-heim, S. 53–68, 1993.[Le07] Lederman, Norman G.: Nature of Science: Past, Present and Future. In (Abell, Sandra K.;Lederman, Norman G., Hrsg.): Handbook of research on science education. Mahwah,2007.[MW06] Maaß, Susanne; Wiesner, Heike: Programmieren, Mathe und ein bisschen Hardware . . .Wen lockt dies Bild der Informatik? Informatik-Spektrum, 29(2):125–132, 2006.[ODV02] Op’t Eynde, Peter; De Corte, Erik; Verschaffel, Lieven: Framing Students’ Mathematics-Related Beliefs. A Quest for Conceptual Clarity and a Comprehensive Categorization. In(Leder, Gilah C.; Pehkonen, Erkki; Törner, Günter, Hrsg.): Beliefs: A Hidden Variable inMathematics Education? Dordrecht, S. 13–37, 2002.[Wi03] Wiebe, Eric; Williams, Laurie; Yang, Kai; Miller, Carol: Computer science attitude sur-vey. computer science, 14(25):0–86, 2003.126 Yannick Schneider, Andreas Mühlingii“proceedings” — 2017/9/17 — 20:19 — page 127 — #127iiiiiiDiethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 1Berufswahl InformatiklehrkraftDorothee Müller1Abstract: Der Mangel an qualiﬁzierten Informatiklehrkräften ist ein seit Jahren bestehendes, deutsch-landweites Problem. Die aktuellen Studierendenzahlen und das hohe Durchschnittsalter der aktivenInformatiklehrkräfte machen eine Verschärfung des Problems innerhalb der nächsten Jahre voraus-sehbar. In einer empirischen qualitativen Untersuchung wurden Faktoren identiﬁziert, die die Be-rufswahl Informatiklehrkraft positiv oder negativ beeinﬂussen. In diesem Beitrag werden die Aus-gangssituation, der wissenschaftliche Kontext, die Methoden und die Ergebnisse der Untersuchungdargelegt. Die Ergebnisse zeigen, dass dem Bild der Informatik, dem Bild des Informatikunterrichtsund dem Informatikselbstkonzept eine herausragende Rolle bei der Berufswahl Informatiklehrkraftzukommen. Diese Faktoren werden entscheidend von Informatikunterricht bestimmt.Keywords: Lehrerbildung Informatik, Informatiklehrermangel, Berufswahlmotivation Informatik-lehrkraft, Bild der Informatik, Informatikselbstkonzept, Informatikunterricht1 Ausgangssituation InformatiklehrermangelSeit Jahren ist der Mangel an Informatiklehrkräften bekannt [FMW06] und wird fachdi-daktisch und politisch diskutiert, ohne dass die Ursachen empirisch erforscht oder geeig-nete bildungspolitische Maßnahmen ergriffen wurden. Es ist prognostizierbar, dass sichder Mangel in den kommenden Jahren noch deutlich vergrößern wird: Mehr als 56 % derInformatiklehrkräfte in Nordrhein-Westfalen2sind älter als 50 Jahre und werden in dennächsten 15 Jahren aus dem Schuldienst ausscheiden. Aufgrund der Anzahl von Studieren-den mit dem Berufsziel Informatiklehrkraft kann in den nächsten Jahren durchschnittlichmit 55 Bewerbern für Informatiklehrkraftstellen in Nordrhein-Westfalen gerechnet wer-den. Damit können nur 56 % des Neubedarfs gedeckt werden [Kl15, S. 19]). Neben demhohen Durchschnittsalter der Informatiklehrkräfte ist der sehr geringe Anteil von 25,7 %an weiblichen Lehrkräften im Fach Informatik [MS15, S. 13, 57 f.] auffällig.Bereits jetzt führt der Informatiklehrermangel dazu, dass Informatikunterricht nicht ange-boten wird, ausfällt oder fachfremd, d. h. von Lehrkräften ohne Lehrbefähigung für dasFach Informatik, unterrichtet wird (s. Tab. 1). Der hohe Anteil an fachfremdem Informa-tikunterricht ist für die informatische Bildung besonders bedrohlicher, weil die Lehrkraftals der entscheidende Faktor für den Erfolg schulischen Lernens erkannt wurde [Ha09].Und empirische Studien bestätigen »signiﬁkante Zusammenhänge zwischen der fachbe-zogenen Lehrbefähigung und den erreichten Schülerkompetenzen« [Pa13, S. 283].1Bergische Universität Wuppertal, Didaktik der Informatik, 42119 Wuppertal, dmueller@.uni-wuppertal.de2Für die in diesem Beitrag dargestellte empirische Untersuchung wurden Befragungen in Nordrhein-Westfalendurchgeführt, und es wurden entsprechend vor allem statistische Daten zum Schulwesen in Nordrhein-Westfa-len herangezogen. Die Ausgangssituation ist jedoch in anderen Bundesländern ähnlich [Kl15, S. 3].I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 127ii“proceedings” — 2017/9/17 — 20:19 — page 128 — #128iiiiii2 Dorothee MüllerSchulform erteilte Stunden ohne LehrbefähigungHauptschule 2.436 84,7 %Realschule 6.640 54,4 %Gesamtschule 2.094 74,1 %Gymnasium 4.280 36,1 %Tab. 1: Informatikunterricht 2015/16 in NRW: erteilte Stunden und Anteil des Unterrichts ohneLehrbefähigung [PM16, S. 3]2 Forschungsstand Berufswahl InformatiklehrkraftDer bundesweite Mangel an Informatiklehrkräften lenkt den Blick der Fachdidaktik Infor-matik stärker auf das Studium mit dem Ziel Lehramt Informatik und die entsprechendenBerufswahlmotive. So schlagen Informatikdidaktiker im Zusammenhang mit der Lehrer-bildung Informatik vor, Vorstellungen zu erforschen, die zu einem Studium Lehramt Infor-matik geführt haben oder die es verhindert haben [Di10, S. 59]. Auf bereits durchgeführteinformatikfachdidaktische Untersuchungen zur Berufswahl Informatiklehrkraft kann nichtzurückgegriffen werden. Lediglich Teilaspekte wurden bisher empirisch untersucht. Sofragt Humbert sechzehn aufgrund ihres fachdidaktischen Engagements ausgewählte Infor-matiklehrkräfte nach Gründen für Ihre Hinwendung zur Wissenschaft Informatik [Hu03,S. 88]. Auch die Untersuchung von Knobelsdorf zur Computernutzung als einen Weg indie Informatik [Kn11] thematisiert nicht speziell den Weg ins Lehramt Informatik, obwohlneben anderen Studierenden auch Studierende mit dem Ziel Lehramt Informatik befragtwurden.Die Berufswahl Informatiklehrkraft kann als zwei – eventuell gleichzeitig getroffene –Teilentscheidungen aufgefasst werden: als Berufswahl Lehrkraft und als Berufs-/Studien-wahl Informatik. Für beide getrennt betrachteten Einzelentscheidungen existieren For-schungsbeiträge, die eine Grundlage für die hier dargestellte Untersuchung liefern.ZurBerufs-/Studienwahl Informatik werden immer wieder Forschungsprojekte und För-dermaßnahmen (vgl. z. B.: [Kl13, GH13]) durchgeführt. Das Bild der Informatik, das In-formatikselbstkonzept und die eventuelle Enkulturation in die Informatik beeinﬂussen dieBerufs-/Studienwahl Informatik entscheidend. Die drei Faktoren werden durch den Schul-unterricht beeinﬂusst. Zwischen der Leistungskurswahl und der späteren Studien- oder/undBerufswahl besteht eine direkte, empirisch nachgewiesene Beziehung. Im Vergleich mitanderen MINT-Fächern3wird deutlich, dass relativ wenige Schülerinnen und Schüler inNordrhein-Westfalen an Leistungskursen Informatik teilnehmen: Nur 1.330 Schülerinnenund Schüler besuchen einen Leistungskurs Informatik, im Vergleich etwa fünfmal so vie-le (6.557) einen Leistungskurs Chemie und fast dreißig mal so viele einen LeistungskursBiologie (39.102). Die Leistungskurswahl resultiert wiederum hauptsächlich aus dem inder Sekundarstufe I geweckten Interesse.3MINT ist ein Akronym für Mathematik, Informatik, Naturwissenschaften und Technik.128 Dorothee Müllerii“proceedings” — 2017/9/17 — 20:19 — page 129 — #129iiiiiiBerufswahl Informatiklehrkraft 3Auch die Berufswahl von Lehrkräften ist ein Forschungsgegenstand, zu dem immer wiederneue, aktuelle Untersuchungen durchgeführt werden. Vor allem die Fragen nach Rekrutie-rungsmustern und Berufswahlmotiven stehen im Mittelpunkt der Untersuchungen. Bei derFrage, werden Beruf Lehrkraft wählt, werden meist Merkmale wie Geschlecht, Herkunft,Schichtzugehörigkeit, Milieuzugehörigkeit, Persönlichkeit und Leistungsmerkmale quan-titativ erfasst (Übersicht über den Forschungsstand in [Ro14b]). Zur Beantwortung derFrage, warum der Beruf Lehrkraft ergriffen wird, werden die Interessen, Motive und Über-zeugungen, die zu der Berufsentscheidung führen, quantitativ erhoben (Übersicht über denForschungsstand in [Ro14a]). Als wichtig für die Berufswahl Lehrer im Allgemeinen wieauch für die Fächerwahl hat sich der Einﬂuss der eigenen Schulzeit erwiesen. Zukünfti-ge Lehrkräfte greifen bei der Wahl der Studienfächer oft auf ihre »Lieblingsfächer in derSchule« [Ul04] zurück. Diese Fächerwahl wird durch die Leistungskurswahl vorbereitetund angekündigt [Kl07].Trotz der zahlreichen Forschungsbeiträge zur Berufswahl von Lehrkräften wird in die-sem Zusammenhang von Forschungsdesideraten gesprochen. Dies betrifft vor allem zweiAspekte dieser Forschung: die fehlende Differenzierung nach Schulfächern und die For-schungsperspektive einschließlich der damit verknüpften Methodenwahl. VergleichendeStudien [Ka12] zeigen jedoch, dass sich Lehramtsstudierende verschiedener Fachkombi-nationen bezüglich Interessenstrukturen, kognitiver Leistungsfähigkeit, Studienzufrieden-heit und Leistung deutlich voneinander unterscheiden und Differenzierung nach Fächernsomit notwendig ist. Das zweite Desiderat im Zusammenhang mit der Forschung zur Be-rufswahl von Lehrkräften betrifft die Perspektive und Methoden dieser Forschung. Dieempirische Forschung zur Berufswahl von Lehrkräften ist meistens quantitativ orientiert.Es fehlt die qualitative Forschung mit einer biograﬁschen Perspektive auf den zum Lehrer-beruf führenden Bildungsprozess. Diese Forschung könnte weitere, eventuell unerwarteteEinﬂussfaktoren ermitteln.3 Forschungsziel und Methodendiskussion3.1 ForschungszielDie hier dargestellte Untersuchung [Mü17] hat das Ziel, die beschriebenen Forschungs-desiderata zu verringern: Die Berufswahl von Informatiklehrkräften wurde aus der indi-viduellen, biograﬁschen Perspektive der Beteiligten erforscht. Daten zu speziﬁschen Ein-ﬂussfaktoren der Berufswahl speziell dieser Gruppe von Lehrkräften wurden in offenenqualitativen Verfahren erhoben und ausgewertet. Dabei wurden Faktoren identiﬁziert, diedie Berufswahl Informatiklehrkraft positiv oder negativ beeinﬂussen.3.2 Qualitative empirische Forschung nach der Grounded TheoryDa kaum Forschungsergebnisse und keine empirisch fundierten Theorien zur Berufswahlvon Informatiklehrkräften existieren, mussten im Forschungsprozess Theorien generiertBerufswahl Informatiklehrkraft 129ii“proceedings” — 2017/9/17 — 20:19 — page 130 — #130iiiiii4 Dorothee Müllerwerden. Als methodologisches Rahmenkonzept wurde die Grounded Theory gewählt. Die-se eignet sich für die Theoriegenerierung auf der Grundlage von qualitativen empirischenDaten in einem noch relativ unerforschten Feld. ngsprozess.Stichprobe: Die Stichprobe wurde mit dem für die Grounded Theory typischen Verfah-ren des Theoretical Samplings zusammengestellt. Die Gruppe der Befragten wurde nichtkomplett vor Beginn der Datenerhebung zusammengestellt, sondern es wurde bei den bei-den parallel verlaufenden Prozessen der Datenerhebung und der Datenauswertung vor derAufnahme neuer Fälle geprüft, ob durch weitere Datenerhebungen neuen Erkenntnisse zuerwarten waren. Als Grundgesamtheit der zu befragenden Personen wurden Studierendemit dem Ziel Lehramt Informatik nach oder bei der ersten besuchten Veranstaltung zurDidaktik der Informatik gewählt. Für diese Entscheidung sprach, dass sich mit der Teil-nahme an dieser Veranstaltung auch in dem polyvalenten Bachelor-Studium die Entschei-dung für den Beruf Informatiklehrkraft dokumentiert und zugleich der zeitliche Abstandzu der Entscheidung relativ gering ist. Dass der Kreis der Befragten sich ausschließlich ausStudierenden zusammensetzt, die sich für das Berufsziel Informatiklehrkraft entschiedenhaben, wirft die methodenkritische Frage auf, ob dadurch größtenteils Faktoren identi-ﬁziert werden, die die Berufswahl Informatiklehrkraft befördern, oder ob auch Faktorenermittelt werden können, die die Berufswahl behindern.Datenerhebung: Die Datenerhebung erfolgte als eine Kette von aufeinander aufbauendenAuswahlentscheidungen, wobei die Auswahl der Erhebungsinstrumente und die Erhebungder Daten sukzessive erfolgte. Drei Erhebungsformen wurden in chronologischer Folgegenutzt: das teilnarrative Leitfadeninterview, die Gruppendiskussion zum Thema Berufs-wahlbiograﬁe und das speziell für diese Untersuchung entwicklte Erhebungsinstrumentder schriftlichen Berufswahlbiograﬁe. Die schriftliche Berufswahlbiograﬁe stellte sich alsbesonders geeignet heraus, da sie durch die schriftliche Form die Fokussierung auf dasThema förderte und zugleich die Kontrolle der Befragten über die Preisgabe der eigenenbiograﬁschen Daten garantierte.Datenauswertung: Die erhobenen Daten wurden in einer Methodentriangulation aus denVerfahren der Grounded Theory und der dokumentarischen Methode ausgewertet. Ange-wandt wurde die Kodierungsmethode der Grounded Theory, ein kategorisierendes Ver-fahren mit dem Ziel der Gewinnung von Kategorien und die Generierung von Theorien.Ergänzt wurde dieses Verfahren für die interpretierende Arbeit am Datenmaterial durchdie dokumentarische Methode nach Ralf Bohnsack.4 Durchführung der BefragungBefragt wurden insgesamt 45 Studierende mit dem Studienziel Lehramt Informatik. Davonwaren zehn weiblich. Es wurden neun mündliche Berufswahlinterviews und 34 schriftli-che Berufswahlbiograﬁen erhoben, sodass von 43 Befragten Berufswahlinterviews oder-biograﬁen vorliegen. Zwei der elf Teilnehmenden der Gruppendiskussionen nahmen nuran diesen und nicht ebenfalls an mündlichen oder schriftlichen Interviews teil. Aussagendieser Teilnehmenden wurden in der Auswertung berücksichtigt.130 Dorothee Müllerii“proceedings” — 2017/9/17 — 20:19 — page 131 — #131iiiiiiBerufswahl Informatiklehrkraft 5Die Reihe der Datenerhebungen wurde mit neun aufgezeichneten teilnarrativen Leitfaden-interviews eröffnet. Ausgegangen wurde im Leitfadeninterview von einer offen gehaltenenFrage zur Berufswahlbiograﬁe: »Ich möchte Sie zu Beginn ganz einfach bitten, mir zuerzählen, wie es kommt, dass Sie heute hier als Studierende(r) mit dem Berufsziel Infor-matiklehrer(in) sitzen. Sie können so weit ausholen, wie sie wollen. Mich interessiert, wieeins zum anderen gekommen ist.« Die Interwievs dauerten jeweil etwa 30 Minuten. Fallsdie Befragten folgende Themenkomplexe nicht oder kaum thematisierten, wurden vorbe-reitete Leitfragen zur eigenen Computerbiograﬁe, zum Einﬂuss von Freunden und Familieund zum antizipierten Berufsbild Informatiklehrkraft ergänzt.Es wurden zwei Gruppendiskussionen durchgeführt. Mit der ersten Diskussion zum The-ma »Mädchen im Informatikunterricht« sollte vor allem die Erhebungs- und Auswertungs-form erprobt werden. Die zweite Gruppendiskussion zum Thema »Warum werde ich In-formatiklehrkraft?« fokussiert dagegen die Berufswahlmotive der Teilnehmenden. Das Er-hebungsinstrument der Gruppendiskussionen stellte sich für diesen Forschungszweck alsweniger ergiebig als erwartet heraus und ﬂoss nur zu geringem Teil in die Auswertung ein.In der schriftlichen Berufswahlbiograﬁe Informatiklehrkraft wurde an die Befragten eineschriftliche Schreibaufforderung gegeben. Diese bestand aus der eigentlichen Aufforde-rung und kurzen »Locktexten«, die den Erzählraum beispielhaft inhaltlich und formal auf-schlossen und wichtige Themen in den gedanklichen Fokus der Befragten brachten, ohneAussagen zu den Themen zu erzwingen.5 ErgebnisseDie Datenauswertung nach der Kodierungsmethode der Grounded Theory führte zu denfolgenden Haupt- und untergeordneten Subkategorien:•Irrwege und Wege zur Berufswahl Informatiklehrkraft–Informatiklehrkraft – zwei Berufsentscheidungen–Vom Abitur direkt zum Studium Informatiklehrkraft–Über Irrwege zur Berufswahl–Faktor Zufall•Bild der Informatik–Philosophie des Faches / epistemologische Überzeugungen–Bild des Informatikers und des Berufshabitus Informatiklehrkraft•Informatikselbstkonzept–Eigene Schulerfahrungen im Informatikunterricht–Erfahrungen mit Informatiksystemen–Familie und Peer-Gruppe–Geschlecht und InformatikZiel der folgenden Darstellung ist es, die vielfältigen Aspekte der Forschungsergebnissestrukturiert und in dem Zusammenhang der »Handlung in dieser Geschichte«, also deszentralen Themas in Sinne Corbins [Co06, S. 74], vorzustellen. Als diese Schlüsselka-tegorie kristallisierte sich bei der Auswertung »Irrwege und Wege zur Berufswahl Infor-Berufswahl Informatiklehrkraft 131ii“proceedings” — 2017/9/17 — 20:19 — page 132 — #132iiiiii6 Dorothee Müllermatiklehrkraft« heraus. Die Kategorien sind in der Ergebnisdarstellung nicht vollständigtrennbar, da sie sich in vielen Aspekten wechselseitig bedingen. Beispielzitate aus demerhobenen Datenmaterial belegen und illustrieren die Ergebnisse.Die Ergebnisse der Untersuchung zeigen, dass der Berufswahlprozess von angehenden In-formatiklehrkräften häuﬁg mit Irrwegen in Form von Studien- bzw. Berufszielwechselnverbunden ist. Die Entscheidung für den Beruf Informatiklehrkraft wurde meist als einedoppelte Berufsentscheidung , als die Entscheidung für den Beruf Lehrkraft und als dieEntscheidung für das Fach Informatik, begriffen und auch formuliert.»Ja, wobei das ein Unterschied ist, Lehrer oder Informatiklehrer. Informatiklehrerwollte ich eben noch nicht lange werden, das hat sich eben so ergeben. «»Die Wahl Informatik und Lehrer sind voneinander unabhängig getroffen worden. «Diese doppelten Berufsentscheidungen werden meist auch zeitlich getrennt getroffen undführen zu Umwegen im Berufsweg. Von der in der Berufsentscheidung Informatiklehr-kraft enthaltenen doppelten Entscheidung für Lehramt und Informatik ausgehend könnendie Wege zur Berufsentscheidung Informatiklehrkraft in drei Arten eingeteilt werden: denWeg vom Abitur direkt zum Studium Informatiklehrkraft, den Weg über ein Lehramtsstu-dium ohne Informatik und den Weg über die Informatik ohne das Ziel Lehramt. Nur einknappes Drittel der Befragten traf nach dem Schulabschluss als erste Berufswahl die Ent-scheidung für den Beruf Informatiklehrkraft. Stattdessen wurde die Entscheidung meistenserst nach oder während einer Berufsausbildung oder während eines anderen Studiumsgetroffen. Dies kann als Grund für das von der Statistik ausgewiesene (vgl. z. B. [St14,S. 164]) vergleichsweise hohe Durchschnittsalter bei gleichzeitig geringer Fachstudienzeitbei Absolventen einer Lehramtsprüfung mit dem Fach Informatik gesehen werden.Der Zusammenhang zwischen in der eigenen Schulzeit entwickeltem Fachinteresse, derLeistungskurswahl und der Studienfachwahl bestätigt sich für diejenigen Befragten, dieden»Weg vom Abitur direkt zum Studium Informatiklehrkraft« gingen. Häuﬁg wird derInformatikunterricht der eigenen Schulzeit positiv erinnert, und diese Erfahrung ﬂießt ex-plizit in die Entscheidung ein. Sie hatten zur Schulzeit ein positives Bild der Informatikund ein hohes Informatikselbstkonzept. Der Informatiklehrkraft ihrer Schulzeit bescheini-gen sie oft eine berufliche Vorbildfunktion.»Und auch in der Schule haben Mathe und Info am meisten Spaß gemacht unddeswegen studiere ich es wahrscheinlich. «»Die Situation von meinem [Informatik-] Lehrer hat mich im Endeffekt davon über-zeugt, dass auch Lehrer ihren Spaß am Unterricht und am Unterrichten haben kön-nen.«Allerdings hatten die meisten der befragten angehenden Informatiklehrkräfte selbst keinenInformatikunterricht oder erinnern diesen negativ. Der Weg zum Studium Informatiklehr-kraft führt bei diesen Befragten häuﬁg über den Umweg von zunächst anderen Studienent-scheidungen, meistens über ein Lehramtsstudium mit anderen Fächern oder ein Informa-tikstudium. Die Informatikstudierenden haben typischerweise zum Zeitpunkt ihrer erstenStudienwahl ein positives Bild der Informatik und ein hohes Informatikselbstkonzept, aber132 Dorothee Müllerii“proceedings” — 2017/9/17 — 20:19 — page 133 — #133iiiiiiBerufswahl Informatiklehrkraft 7kein positives Berufsbild Informatiklehrkraft. Ihr Wechsel von einem Informatikstudiumzum Studium mit dem Berufsziel Informatiklehrkraft wird in der Regel durch den Wunschnach einer stärkeren sozialen Komponente im späteren Berufsalltag ausgelöst.»Dies ist der erste Grund, weshalb ich mich für ein Lehramtsstudium entschied. Mirfehlte einfach die soziale Komponente meiner (bis dato) Tätigkeit [Programmierend. V.] .«Oder ihr Berufsbild von Informatiklehrenden erfährt eine entscheidende Änderung.»Später im Studium haben mich dann Professoren, die Informatik erteilten, davonüberzeugt, dass es Spaß macht diesen Stoff zu vermitteln. Dieser Gedanke kam beimir nicht durch ein Gespräch zustande, sondern durch die Teilnahme an Vorlesun-gen und den dazugehörenden Übungen. «Bei den Lehramtsstudierenden mit anderen Fächern, die häuﬁg zunächst ein niedriges In-formatikselbstkonzept und/oder ein negatives Bild der Informatik hatten, kann es zu einerUmorientierung hin zum Studienziel Informatiklehrkraft kommen, wenn diese Vorstellun-gen sich während des ersten Studiums – z. B. durch den Besuch von universitären Lehr-veranstaltungen zu informatischen Inhalten – ändern.Die letztliche Entscheidung für den Beruf Informatiklehrkraft wird von denjenigen, die ihrStudienziel wechselten, mit Recht als durch Zufälle bestimmt empfunden. Immer wiederwird im Zusammenhang mit dem Berufszielwechsel von den Befragten explizit der Faktor»Zufall« thematisiert. So beginnen viele erhobene schriftliche Berufswahlbiograﬁen mitWorten wie:»Ich bin also eher zufällig zur Informatik gekommen. «»Zum Berufswunsch ›Informatiklehrer‹ brachten mich eine Reihe von Zufällen. «»Ich werde eher zufällig Informatiklehrer. «Die dargestellten Ergebnisse zeigen, dass das Bild der Informatik und das damit zusam-menhängende Informatikselbstkonzept entscheidend für die Berufswahl Informatiklehr-kraft sind. Beide erhalten im Allgemeinen schon vor dem ersten Informatikunterricht einevorläuﬁge Prägung. Das stereotype, durch die Medien vermittelte und in der Gesellschaftvorherrschende Informatikbild wirkt sich dabei negativ aus und verhindert eventuell dieWahl des Faches Informatik. Ein Studierender mit dem Ziel Lehramt, der erst währenddes Studiums von einem anderen Fach zur Informatik wechselte, berichtet zum Beispiel:»Ich hatte während meiner eigenen Schulzeit fast keinerlei Berührungen mit Infor-matik [. . . ] Die allgemeinen Vorurteile, wie ›Informatik gleich Programmieren‹ oder›Informatik ist für Computer-Freaks‹, hielten mich ab, dem Thema / der Wissenschaftdie nötige Aufmerksamkeit zu schenken. «Jedoch haben einige Befragte auch von einem bereits vor dem ersten Informatikunterrichtbestehenden positiven Informatikbild berichtet. Dieses war meist mit Vorbildern in derFamilie, die einen Beruf im Bereich der Informatik ausübten, verbunden.Berufswahl Informatiklehrkraft 133ii“proceedings” — 2017/9/17 — 20:19 — page 134 — #134iiiiii8 Dorothee MüllerEin neutrales oder positives Bild der Informatik kann durch die Schule geändert werden –sogar ohne dass die Schülerin oder der Schüler jemals am Informatikunterricht teilnimmt.Ein Befragter berichtet, dass er ursprünglich durchaus Interesse an Informatik und am In-formatikunterricht hatte, ihm jedoch in der schulischen Beratung vom Wahlpﬂichtfach In-formatik abgeraten wurde, mit der Begründung, es gäbe » in Informatik nichts ›Wichtiges‹zu lernen «.Auch Informatikunterricht von fachlich oder/und fachdidaktisch unqualiﬁzierten Lehrkräf-ten kann sich negativ auf das Bild der Informatik oder/und das Informatikselbstkonzeptauswirken. Auf die Frage, ob er Informatikunterricht in der eigenen Schulzeit hatte, ant-wortete ein Lehramtsstudierender, der erst während des Studiums von einem anderen Fachzur Informatik wechselte:»Ja. Aber den habe ich nachher abgewählt, weil ich fand den aber, glaube ich, eherKacke und eher uninteressant. [. . . ] Also dass mir Programmieren Spaß macht, ha-be ich erst in der Uni gelernt. Weil in der Schule war das so – lag natürlich auch amLehrer – ich hatte einen Lehrer, der hat gesagt, ihr habt frei, wenn er sein Buch ver-gessen hatte. [. . . ] Also er hatte selber gar keine Ahnung, und konnte das Interesseoder den Spaß an dem Fach überhaupt nicht vermitteln. «Das Bild der Informatik dieses Befragten änderte sich erst an der Universität, wo er fest-stellt, dass sein in der Schulzeit gewonnenes Informatikbild falsch war. Auch das Informa-tikselbstkonzept kann unter misslungenem Informatikunterricht leiden und eine weitereBeschäftigung mit Informatik verhindern:»Informatik kam für mich zunächst nicht in Frage. Als Schüler hatte ich als Differen-zierungskurs Mathematik/Informatik und da ich dort im Bereich Programmierunghinter denjenigen Mitschülern, die sowieso schon programmieren konnten, deutlichim Nachteil war, habe ich es nicht in Betracht gezogen, Informatik als Fach zu stu-dieren. «Dieser Befragte entwickelt in diesem Informatikunterricht ein niedriges, und wie sichim späteren Studium zeigt, nicht realistisches Informatikselbstkonzept. Erst im Studiumkommt es zu einem erneuten Kontakt mit informatischen Themen, wobei sich sein Infor-matikselbstkonzept ebenso wie sein Bild der Informatik ändern und er zum StudienfachInformatik wechselt.»Nachdem ich feststellte, dass mir Informatik liegt, [. . . ] was vielleicht auch dar-an lag, dass [. . . ] die Programmierung einfach ist, wenn man sie von Grund auflernt [. . . ] habe ich mich [. . . ] dann endgültig für Lehramt Mathematik/Informatikentschieden. «6 Fazit und AusblickDie Berufswahl Informatiklehrkraft wird vom informatischen Selbstkonzept der Wählen-den, ihrem Bild der Informatik und ihrem Bild des Berufs Informatiklehrkraft bestimmt.134 Dorothee Müllerii“proceedings” — 2017/9/17 — 20:19 — page 135 — #135iiiiiiBerufswahl Informatiklehrkraft 9Auf alle diese Faktoren hat das Erleben oder auch Fehlen des eigenen Informatikun-terrichts der Befragten entscheidenden Einﬂuss. Die Ergebnisse zeigen, dass die in derFachliteratur als typisch beschriebenen Faktoren der Fächerwahl bei Lehramtsstudieren-den für Informatiklehrkräfte nicht die Norm sind. Typischerweise studieren angehendeLehrkräfte die Fächer, für die ihr Interesse in der Sekundarstufe I geweckt wurde und diesie anschließend in der Sekundarstufe II oft als Leistungskurse oder zumindest als Grund-kurse gewählt haben.In der Gruppe der befragten angehenden Informatiklehrkräfte ist die Wertung des als Schü-lerin oder Schüler erlebten Informatikunterrichts weitgehend dichotom. Der größere Teilder Befragten hatte keinen Informatikunterricht oder hat eher negative Erfahrungen damitgemacht. Es wurde ein niedriges Informatikselbstkonzept aufgebaut und/oder ein nega-tives Bild der Informatik. Ein Studium mit dem Ziel Lehramt Informatik wird zunächstnicht in Betracht gezogen. Diejenigen, die sich zunächst für ein Fachstudium Informatikoder einen informatiknahen Beruf entschieden, waren häuﬁg schon vor dem ersten mög-lichen Informatikunterricht von der Informatik begeistert. Sie wählten diesen eventuellnicht, weil sie davon keinen wesentlichen Lernzuwachs erwarteten. Erst positiv erlebteInformatiklehre an der Universität und/oder der Wunsch nach einer sozialen Komponenteim Beruf führte zu einem Wechsel der Berufsziels zur Informatiklehrkraft. Es gibt jedochauch Befragte, die in ihren Berufswahlbiograﬁen mit Begeisterung von dem Informatik-unterricht ihrer Schulzeit und den Informatiklehrkräften berichten. Die Entscheidung fürden Beruf Informatiklehrkraft wurde bei diesen Befragten oft als erste Berufsentscheidungnach dem Abitur betroffen. In diesen Fällen wird oft explizit auf die Vorbildfunktion ihrerInformatiklehrkraft und deren Einﬂuss auf ihre Berufswahl Informatiklehrkraft hingewie-sen.Ein fachlich und fachdidaktisch guter Informatikunterricht ist der förderlichste Faktor fürdie Berufswahl Informatiklehrkraft. Ein diesen Anforderungen entsprechender Informatik-unterricht für alle Schülerinnen und Schüler kann dauerhaft dem Informatiklehrermangelentgegenwirken.Keine fundierten Ergebnisse konnten anhand der Befragungen zu dem Thema Geschlechtund Informatik ermittelt werden. Der niedrige Anteil von weiblichen Informatiklehrkräf-ten und die allgemein übliche Zuordnung der Informatik zur männlichen Domäne lässteine spezielle Untersuchung zu diesen Thema wichtig erscheinen.Literaturverzeichnis[Co06] Corbin, Juliet: Grounded Theory. Verlag Barbara Budrich, Opladen und FarmingtonHills, S. 70–75, 2006.[Di10] Diethelm, Ira; Hellmig, Lutz; Friedrich, Steffen; Breier, Norbert; Brinda, Torsten: Lehr-erbildung Informatik – Was ist zu tun? In (Diethelm, Ira; Dörge, Christina; Hildebrandt,Claudia; Schulte, Carsten, Hrsg.): DDI. Jgg. 168 in LNI. GI, S. 57–65, 2010.[FMW06] Frein, Thomas; Möller, Gerd; Wilpricht, Michael: Fachspeziﬁscher Lehrermangel amGymnasium: Mythos oder Wahrheit? SchulVerwaltung NRW, (1):29, Januar 2006.[GH13] Götz, Christian; Hubwieser, Peter: Belebt die Einführung des Schulfachs Informatik dieNachfrage nach einem Informatikstudium? Jgg. P-219 in LNI. GI, S. 147–156, 2013.Berufswahl Informatiklehrkraft 135ii“proceedings” — 2017/9/17 — 20:19 — page 136 — #136iiiiii10 Dorothee Müller[Ha09] Hattie, John Allan Clinton: Visible Learning. A synthesis of over 800 meta-analysesrelating to achievement. Routledge, London and New York, 2009.[Hu03] Humbert, Ludger: Zur wissenschaftlichen Fundierung der Schulinformatik. Dissertation,Witten, 3 2003. zugl. Dissertation an der Universität Siegen.[Ka12] Kaub, Kathrin; Kathrin, Julia; Biermann, Antje; Friedrich, Anja; Bedersdorfer, Hans-Werner; Spinath, Frank M.; Brünken, Roland: Berufliche Interessensorientierungen undkognitive Leistungsproﬁle von Lehramtsstudierenden mit unterschiedlichen Fachkombi-nationen. Zeitschrift für pädagogische Psychologie, 26(4):233–249, 2012.[Kl07] Klika, Dorle: Fächerwahl im Lehramtsstudium – Zementierung der Geschlechtersegre-gation? In (Schellack, Antje; Große, Stefanie, Hrsg.): Bildungswege, S. 123–133. Wax-mann, Münster u. a., 2007.[Kl13] Kleinn, Karin; Götsch, Monika; Heine, Yvonne; Schinzel, Britta: Das DFG-Projekt»Weltbilder der Informatik«. Informatik-Spektrum, 36(3):251–256, 2013.[Kl15] Klemm, Klaus: , Lehrerinnen und Lehrer der MINT-Fächer: Zur Bedarfs- und Angebots-entwicklung in den allgemein bildenden Schulen der Sekundarstufen I und II am BeispielNordrhein-Westfalens, 2015.[Kn11] Knobelsdorf, Maria: Biographische Lern- und Bildungsprozesse im Handlungskontextder Computernutzung. Dissertation, Freie Universität Berlin, 2011.[MS15] MSW-NW: . Das Schulwesen in Nordrhein-Westfalen aus quantitativer Sicht 2014/15.Statistische Übersicht 388. Düsseldorf, 5 2015. MSW-NW – Ministerium für Schuleund Weiterbildung Nordrhein-Westfalen.[Mü17] Müller, Dorothee: Der Berufswahlprozess von Informatiklehrkräften. Commentarii in-formaticae didacticae (CID) 11, Universiätsverlag Potsdam, Potsdam, 2017. Überarbei-tete Fassung der Dissertation, Universität Wuppertal, 2016.[Pa13] Pant, Hans Anand; Stanat, Petra; Schroeders, Ulrich; Roppelt, Alexander; Siegle, Thilo;Pöhlmann, Claudia: IQB-Ländervergleich 2012. Mathematische und naturwissenschaft-liche Kompetenzen am Ende der Sekundarstufe I. Waxmann, Münster, New York, 2013.IQB – Institut zur Qualitätsentwicklung im Bildungswesen.[PM16] Pieper, Monika; Marsching, Michele: Schulministerin Löhrmann ermutigt Schülerin-nen und Schüler zur Wahl des Fachs Informatik, doch wer soll sie unterrichten? Klei-ne Anfrage 4731 vom 2. Mai 2016. Antwort der Ministerin für Schule und Weiterbil-dung namens der Landesregierung. Drucksache 16/11876, Landesregierung des LandesNordrhein-Westfalen, Düsseldorf, 2016. Datum des Originals: 30.05.2016/Ausgegeben:02.06.2016.[Ro14a] Rothland, Martin: Warum entscheiden sich Studierende für den Lehrerberuf? In: (Terhartet al.) [TBR14], S. 349–385.[Ro14b] Rothland, Martin: Wer entscheidet sich für den Lehrerberuf? In: (Terhart et al.) [TBR14],S. 319–348.[St14] Statistisches Bundesamt, Hrsg. Bildung und Kultur – Prüfungen an Hochschulen. Prü-fungsjahr 2013. Fachserie 11 Reihe 4.2. Wiesbaden, 2014.[TBR14] Terhart, Ewald; Bennewitz, Hedda; Rothland, Martin, Hrsg. Handbuch der Forschungzum Lehrerberuf, Münster, New York, München, Berlin, 2014. Waxmann.[Ul04] Ulich, Klaus: »Ich will Lehrer, -in werden« eine Untersuchung zu den Berufsmotivenvon Studierenden. Weinheim, 2004.136 Dorothee Müllerii“proceedings” — 2017/9/17 — 20:19 — page 137 — #137iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 1Mit dem Glauben Berge versetzen ... - DieSelbstwirksamkeitserwartung von Informatiklehrkr ¨aftenClaudia Hildebrandt1Abstract: Den Unterrichtsstoff sachlich richtig und interessant vermitteln, motivieren, optimal aufPr¨ufungen vorbereiten, Durchsetzungsverm ¨ogen zeigen, die Klasse im Griff haben, Konﬂikte offen-siv angehen und bew ¨altigen und vieles mehr wird von den Lehrerinnen und Lehrer heutzutage erwar-tet. Ob sie allerdings derartig hohen fachlichen und p ¨adagogischen Anforderungen gerecht werden,ist von vielen Faktoren abh ¨angig. Ein bedeutender Faktor ist die individuelle ¨Uberzeugung von deneigenen F ¨ahigkeiten, die sogenannte Selbstwirksamkeitserwartung. Sie beeinﬂusst Wahrnehmungen,die Motivation, die Leistungen sowie das Handeln. Somit geht es im Folgenden um die Frage, welcheSelbstwirksamkeitserwartung Informatiklehrkr ¨afte bezogen auf den Informatikunterricht im Bereichder Sekundarstufe I vor und nach einer Fortbildungsmaßnahme haben. Es wird dabei nicht nur dieallgemeine informatikspeziﬁsche Lehrerselbstwirksamkeitserwartung mit Hilfe von Fragebogener-gebnissen von 41 Lehrkr ¨aften untersucht, sondern ebenfalls die informatikspeziﬁsche Lehrerselbst-wirksamkeitserwartung f ¨ur spezielle Themenbereiche wie algorithmisches Probleml ¨osen, Daten undihre Spuren und automatisierte Prozesse. Dar ¨uber hinaus ist von Interesse, ob die unterschiedlichenSelbstwirksamkeitserwartungen bez ¨uglich dieser speziellen Themenbereiche mit der empfundenenQualit ¨at einer Fortbildung in Zusammenhang stehen. Die Untersuchungsergebnisse best ¨atigen, dasseine Steigerung der informatikspeziﬁschen Lehrerselbstwirksamkeitserwartungen durch bestimmteArten von Fortbildungen m ¨oglich ist. Weiterhin weisen sie auf einen Zusammenhang zwischen derQualit ¨at der Fortbildungen und der Lehrerselbstwirksamkeitserwartungen hin. Eine Entfaltung desPotenzials von Lehrkr ¨aften durch eine Steigerung der individuellen Lehrerselbstwirksamkeit mithil-fe von Fortbildungen ist somit m ¨oglich, wovon letztendlich die Sch ¨ulerinnen und Sch ¨uler proﬁtieren.Keywords: Selbstwirksamkeitserwartung, Lehrerselbstwirksamkeitserwartung, Lehrerfortbildung,Einﬂuss von Fortbildungen, empirische Untersuchung1 Einf ¨uhrung und MotivationAufgrund der Tatsache, dass es, insbesondere in Niedersachsen, wenig Informatiklehr-kr¨afte gibt, die durch das Studium des Faches Informatik mit dem Berufsziel Lehramt ihreQualiﬁkation zum Unterrichten dieses Faches erworben haben, ist es unabdingbar, durchgeeignete Fortbildungsmaßnahmen daf ¨ur zu sorgen, dass ein zeitgem ¨aßer curriculums-konformer Informatikunterricht erm ¨oglicht wird. Dabei gilt es allerdings nicht außer Achtzu lassen, dass die Verwirklichung von gutem Unterricht im Sinne der Sch ¨ulerinnen undSch¨uler von vielen Faktoren wie der individuellen ¨Uberzeugung ¨uber eigene F ¨ahigkeiten,die sogenannte Selbstwirksamkeitserwartung [Ba97], abh ¨angt. Im folgenden Kapitel wirdsomit zun ¨achst das Konzept der Selbstwirksamkeit nach Albert Bandura vorgestellt undver¨offentlichte Forschungsergebnisse zu diesem Thema dargestellt. Schlussfolgerungen1Carl von Ossietzky Universit ¨at Oldenburg, Fakult ¨at II - Didaktik der Informatik, 26111 Oldenburg,claudia.hildebrandt@uni-oldenburg.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 137ii“proceedings” — 2017/9/17 — 20:19 — page 138 — #138iiiiiiaus der Selbstwirksamkeitsforschung folgen f ¨ur die selbst durchgef ¨uhrten Lehrerfortbil-dungen in Kapitel 3. Die Forschungsfragen und notwendigen Deﬁnitionen werden in Ka-pitel 4 pr ¨asentiert und die Messinstrumente zur Erhebung der beschriebenen Konstruktemithilfe der quantitativen Datenerhebung in Kapitel 5 erl ¨autert. Kapitel 6 besch ¨aftigt sichmit den ersten Ergebnissen. Abschließend werden die Resultate zu den Forschungsfragendiskutiert (siehe Kapitel 6) und ein Ausblick wird gegeben.2 Stand der ForschungDie Grundlage der folgenden Ausf ¨uhrungen bildet das von Albert Bandura [Ba77] entwi-ckelte Konzept der Selbstwirksamkeit. Das urspr ¨unglich im Rahmen der klinischen Psy-chologie entstandene Konzept hat in der empirischen Bildungsforschung zunehmend anBedeutung gewonnen. Selbstwirksamkeitserwartungen sind optimistische ¨Uberzeugungenvon der eigenen F ¨ahigkeit, schwierige Anforderungssituationen mit den zur Verf ¨ugungstehenden Ressourcen erfolgreich bew ¨altigen zu k ¨onnen [Ba77]. Bandura deﬁniert dieSelbstwirksamkeitserwartung als”beliefs in one’s capabilities to organize and execute thecourses of action required to manage prospective situations“ [Ba95, S. 2]. Sie wirkt sichauf das Denken, F ¨uhlen und unsere Motivation aus [Ba95, S. 3] und beeinﬂusst als einSchl¨usselfaktor unser Handeln.”Hence different people with similar skills, or the sameperson under different circumstances, may perform poorly, adequately, or extraordinarily,depending on ﬂuctuations in their beliefs of personal efﬁcacy“ [Ba77, S. 37].Die Ergebnisse aus der Selbstwirksamkeitsforschung der letzten etwa 40 Jahre werden imArtikel Teacher Self-Efﬁcacy and Its Effects on Classroom Processes, Student AcademicAdjustment, and Teacher Well-Being: A Synthesis of 40 Years of Research von MarjoleinZee and Helma M. Y. Koomen [ZK16] zusammengefasst. Es zeigt sich, dass Lehrkr ¨aftemit einer hohen berufsspeziﬁschen Selbstwirksamkeit positiv mit der Qualit ¨at der Prozesseim Unterricht in Beziehung stehen. Sie sind eher in der Lage, Unterst ¨utzung beim Lernenzu geben, zeigen eine gute Unterrichtsorganisation und eine emotionale Unterst ¨utzung derSch¨ulerinnen und Sch ¨uler. Diese Faktoren stehen wiederum mit den schulischen Leistun-gen und der Motivation der Lernenden in Beziehung (ebenfalls zu ﬁnden in [Ba97, S. 240- 243], [HPK13], [GD84]). Aber nicht nur die Sch ¨ulerinnen und Sch ¨uler proﬁtieren von ei-ner hohen berufsspeziﬁschen Selbstwirksamkeit von Lehrkr ¨aften. Sie wirkt sich ebenfallspositiv auf die Gesundheit der Lehrerinnen und Lehrer und als Pr ¨aventionsfaktor gegenzum Beispiel Burnout aus [SS00]. Dieses war eines der Ergebnisse des deutschen Modell-versuchs Selbstwirksame Schulen von 1995 - 1998, an dem zehn Schulen mit ihrer Sekun-darstufe teilnahmen. Ein gemeinsames Ziel war es, das Niveau der Selbstwirksamkeit beiLehrkr ¨aften und Sch ¨ulerinnen und Sch ¨ulern zu erh ¨ohen [SJ99].Jetzt stellt sich die Frage, wie man die Selbstwirksamkeitserwartung entwickeln und erhal-ten kann. Bandura [Ba97, S. 79 - 115] beschreibt in diesem Zusammenhang vier Quellen:• Enactive master experience: Eigene Erfolgserlebnisse stellen den einﬂussreich-sten Faktor dar. Ein robuster Glaube an die individuelle Selbstwirksamkeit kann nur138 Claudia Hildebrandtii“proceedings” — 2017/9/17 — 20:19 — page 139 — #139iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 3durch die eigene erfolgreiche Bew ¨altigung (schwieriger) Situationen erlangt wer-den. Misserfolge f ¨uhren zu einer Reduzierung der Selbstwirksamkeitserwartung.• Vicarious experiences: Andere Menschen mit F ¨ahigkeiten, die den eigenen als ¨ahn-lich eingestuft werden, k ¨onnen zu Vorbildern werden. Meistern diese Vorbilder eineAufgabe, traut man sich selbst auch eher das L ¨osen derartiger Aufgaben zu. Ande-rerseits demotivieren Misserfolge.• Verbal persuasion: Menschen strengen sich eher an und versuchen, die Herausfor-derungen zu meistern, wenn ihnen gut zugeredet und von anderen zugetraut wird,eine bestimmte Situation zu bew ¨altigen.• Physiological and affective states: Die Situations- und Selbstwirksamkeitsbewer-tung erfolgt unter anderem ¨uber die eigenen physiologischen Reaktionen wie Herz-klopfen oder Schweißausbr ¨uche in vor allem stressigen Situationen. Menschen mithoher Selbstwirksamkeitserwartung interpretieren diese physiologischen Reaktio-nen als normal und unabh ¨angig von den eigenen F ¨ahigkeiten, wohingegen eine In-terpretation als Schw ¨ache Selbstzweifel aufkommen lassen k ¨onnte.Die Anzahl der Forschungen zu Faktoren, die im schulischen Alltag die Selbstwirksam-keit von Lehrenden beeinﬂussen, ist bisher gering [Ge13, S. 9f]. Die Untersuchungenvon Gebauer im Rahmen des Modellvorhabens Selbstst ¨andige Schulen NRW (von 2003- 2008) ergaben, dass der affektive und emotionale Zustand den st ¨arksten und stabils-ten Zusammenhang zur Selbstwirksamkeits ¨uberzeugung von Lehrenden zeigt [Ge13, S.139]. Dar ¨uber hinaus fanden Holzberger, Philipp und Kunter in ihrer L ¨angsschnittstudieunter anderem heraus, dass die Selbstwirksamkeit von Lehrerinnen und Lehrern zu denErfolgserlebnissen im Klassenraum in Beziehung steht - unabh ¨angig von der Anzahl derJahre an Unterrichtserfahrung [HPK13]. Ziel ist es nun, im Rahmen von Fortbildungendas vorhandene Potenzial der Lehrkr ¨afte zu steigern und voll auszunutzen. Mit m ¨oglichenKonsequenzen, die aus den erw ¨ahnten Ergebnissen f ¨ur Fortbildungen abgeleitet werdenk¨onnen, besch ¨aftigt sich das n ¨achste Kapitel.3 Die Fortbildungen3.1 Das KonzeptEine bedeutende Schlussfolgerung, die man aus den Untersuchungsergebnissen (siehe Ka-pitel 2) ziehen kann, ist, dass der effektivste Weg, die Selbstwirksamkeit zu entwickeln undzu steigern, mithilfe von positiven, eigenen Erfahrungen erfolgt. Das heißt f ¨ur Lehrerfort-bildungen, dass die Praxisanteile deutlich h ¨oher als die Theorieanteile liegen sollten. Aberdabei gilt es zu beachten, dass die Aufgaben so gew ¨ahlt werden m ¨ussen, dass die nach ei-ner Phase der Anstrengung auch erfolgreich bew ¨altigt werden k ¨onnen. Beispielsweise beiFortbildungen zum Thema automatisierte Prozesse mithilfe von Lego Mindstorms Robo-tern k ¨onnen bei komplexen Aufgaben sowohl Fehler bei der Konstruktion des Roboters alsauch Fehler in der Programmierung auftreten. Somit ist es notwendig, zun ¨achst AufgabenMit dem Glauben Berge versetzen ... 139ii“proceedings” — 2017/9/17 — 20:19 — page 140 — #140iiiiiizu w ¨ahlen, die von jeder Teilnehmerin und jedem Teilnehmer erfolgreich bew ¨altigt wer-den k ¨onnen. Dazu geh ¨oren einfache Fahraufgaben, ein Ballwerfer, der unter dem Einsatzeines”Wurfarmes“ mit einem kleinen Ball Kegel aus Legoteilen umwerfen soll. Es ist einemotivierende Aufgabe, bei der man den Erfolg direkt selbst sieht. Anschließend k ¨onnenAufgaben gestellt werden, die immer komplexer werden, z.B. ein Quadrat abfahren, undschließlich auch das Sensor-Aktor-Prinzip ber ¨ucksichtigen wie Hindernissen ausweichenund einer schwarzen Linie folgen. Ein weiterer Aspekt, der Ber ¨ucksichtigung ﬁndet, istdas Lernen vom Vorbild. Nicht nur die Fortbilder k ¨onnen Vorbilder sein, indem sie vonLernwiderst ¨anden im Unterricht berichten und M ¨oglichkeiten zur Bew ¨altigung aufzeigen,sondern auch die anderen Fortbildungsteilnehmerinnen und -teilnehmer. Die Kolleginnenund Kollegen werden in erster Linie als Vorbilder angesehen, da die ¨Ahnlichkeiten undGemeinsamkeiten am st ¨arksten sind. Somit kann es zu einer Beeinﬂussung durch dieseVorbilder kommen. Es gilt, den Austausch unter den an der Fortbildung teilnehmendenPersonen explizit zu f ¨ordern und zu fordern. Dar ¨uber hinaus ist es immer wieder wichtig,den Lehrkr ¨aften ihre Erfolge vor Augen zu f ¨uhren, z.B. durch Lob und W ¨urdigung der Er-gebnisse oder Teilergebnisse und der damit verbundenen Anstrengung sowie sie zu ermu-tigen, weiter zu machen, da sie die F ¨ahigkeit zum erfolgreichen Bew ¨altigen der Aufgabebesitzen. Damit sollen Selbstzweifel ¨uberwunden werden oder gar nicht erst aufkommen.Um stressvolle Situationen zu vermeiden, ist es sinnvoll, den Teilnehmerinnen und Teil-nehmern Aufgaben unterschiedlichen Schwierigkeitsgrades anzubieten. F ¨ur die Fortge-schrittenen gibt es die Aufgaben ohne Hilfsanweisungen sowie weiterf ¨uhrende Aufgaben,f¨ur die Anf ¨anger einfachere Aufgaben mit mehr Hilfestellungen. Individuelle Lernumge-bungen k ¨onnen geschaffen werden, um einer Abnahme der Selbstwirksamkeitserwartungentgegenzuwirken.Zusammenfassend kann man festhalten, dass lernende Lehrkr ¨afte durchaus mit herausfor-dernden und f ¨ur den Unterricht bedeutsamen Aufgaben konfrontiert werden k ¨onnen, dieaber auch mit einem gewissen Maß an Anstrengung bew ¨altigbar sein m ¨ussen. Kontinuier-liche Misserfolge m ¨ussen vermieden werden.3.2 Inhalte und UmfangEs wurde versucht, die beschriebenen Aspekte bei den drei hier untersuchten Lehrer-fortbildungen anzuwenden. Bei den ersten beiden untersuchten Fortbildungen handelt essich um eint ¨agige, bei der dritten um eine dreit ¨agige Fortbildung. Die erste Fortbildung,die im November 2016 mit 16 Personen stattfand, beinhaltete den Einsatz von Arduino-Mikrocontroller-Boards im Informatikunterricht. Den Fortbildungsteilnehmerinnen und-teilnehmern wurden Arduino-Mikrocontroller-Boards vorgestellt und sie sollten selbst-st¨andig eine im Unterricht einsetzbare Unterrichtsreihe als Lernende bearbeiten. Die zwei-te Fortbildung mit f ¨unf Teilnehmerinnen und Teilnehmern im Januar 2017 war eine schulin-terne Lehrerfortbildung f ¨ur eine Oberschule. Hier ging es um die Einf ¨uhrung in den The-menbereich automatisierte Prozesse mit Lego Mindstorms Robotern in der SekundarstufeI. Der Kurs f ¨uhrte in die Grundlagen der Robotik sowie die graphische Programmierum-gebung von Lego ein. Die dritte Fortbildung mit 20 Personen war eine dreit ¨agige Fortbil-dung, wobei jeder Tag seinen thematischen Schwerpunkt hatte. Am ersten Tag ging es um140 Claudia Hildebrandtii“proceedings” — 2017/9/17 — 20:19 — page 141 — #141iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 5das Lernfeld algorithmisches Probleml ¨osen, was mithilfe von Scratch n ¨aher beleuchtetwurde. Am zweiten Tag r ¨uckte das Lernfeld Daten und ihre Spuren (Aufbau von Netz-werken mit Schwerpunkt Internet, Datenaustausch in Netzwerken, Kennenlernen von Ver-schl¨usselungsverfahren) in den Fokus. Den Abschluss am dritten Tag bildete der Bereichautomatisierte Prozesse ( ¨ahnlich durchgef ¨uhrt wie die zweite Fortbildung im Januar). AlleFortbildungen hatten gemeinsam, dass sie einen hohen praktischen Anteil zum Ausprobie-ren von digital zur Verf ¨ugung stehendem Unterrichtsmaterial hatten. Dar ¨uber hinaus gab esimmer wieder kurze Theoriephasen und am Ende wurde der Bezug zum nieders ¨achsischenKerncurriculum Informatik f ¨ur die Schuljahrg ¨ange 5-10 (KC) hergestellt. Damit sollte denLehrkr ¨aften veranschaulicht werden, wie viel sie eigentlich schon gelernt haben, um denAnforderungen, die das KC an sie stellt, problemlos gerecht zu werden. Dar ¨uber hinauswird in den untersuchten Fortbildungen den Lehrkr ¨aften ein umfangreiches digitales Pa-ket von Unterrichtsmaterialien zur Verf ¨ugung gestellt, damit sie die M ¨oglichkeit haben,ihre Kompetenzen in Heimarbeit auszubauen und auch keine Scheu davor haben, das neuGelernte trotz mangelnder Erfahrung im Unterricht einzusetzen.4 Forschungsfragen und DeﬁnitionenUnter Einbeziehung der Ergebnisse aus den Kapiteln 2 und 3 sowohl in Bezug auf die De-ﬁnition der zu messenden Konstrukte als auch in Bezug auf die mangelnden Forschungs-ergebnisse zu den Einﬂussfaktoren auf die Lehrerselbstwirksamkeit, werden folgende For-schungsfragen gestellt:1. Inwiefern ver ¨andert sich die individuelle informatikspeziﬁsche Lehrerselbstwirk-samkeitserwartung im Allgemeinen bzw. jeweils bezogen auf Teile der Lernfelderalgorithmisches Probleml ¨osen, Daten und ihre Spuren sowie automatisierte Prozes-se im Laufe der untersuchten Fortbildung?2. Inwiefern h ¨angen die unterschiedlichen informatikspeziﬁschen Lehrerselbstwirk-samkeitserwartungen nach der Fortbildung von der Qualit ¨at der Fortbildung ab?Die Grundlage der folgenden Deﬁnitionen bildet das bereits existierende Konstrukt derindividuellen Lehrerselbstwirksamkeitserwartung. Im Sinne Banduras versteht man unterderindividuellen Selbstwirksamkeit von Lehrkr ¨aften die¨Uberzeugung einer Lehrkraft,mit ihren F ¨ahigkeiten und Ressourcen eine herausfordernde beruﬂiche Anforderungssitua-tion zu meistern. Zum Beispiel basiert die F ¨ahigkeit, Lernumgebungen zu schaffen, die diekognitiven Kompetenzen der Lernenden entwickeln, unter anderem auch auf der Lehrer-selbstwirksamkeit [Ba97, S. 240]. Die Entwicklung der Skala zur Lehrerselbstwirksam-keitserwartung erfolgte bereits von Schwarzer und Jerusalem [SJ99, S. 60]. Dieses Kon-strukt wird weiter speziﬁziert und konkret auf den Bildungsbeitrag des Faches Informatikbezogen [Ni14]. Es wird die individuelle informatikspeziﬁsche Lehrerselbstwirksam-keitserwartungsskala entwickelt. Mithilfe eines kompakten Messinstruments soll die in-formatikspeziﬁsche Selbstwirksamkeit der Lehrer erhoben werden. Beispielsweise wirdFolgendes abgefragt: Ich weiß, dass mein Informatikunterricht Sch ¨uler zum reﬂektier-ten und verantwortungsbewussten Umgang mit Informatiksystemen bef ¨ahigt. Es ﬁndenMit dem Glauben Berge versetzen ... 141ii“proceedings” — 2017/9/17 — 20:19 — page 142 — #142iiiiiidie Aspekte Ber ¨ucksichtigung, die das Fach Informatik zum Bildungsbeitrag der allge-meinbildenden Schulen beitragen kann. Die Sch ¨ulerinnen und Sch ¨uler sollen ein gewissesGrundwissen erwerben und anwenden, um reﬂektierte und verantwortungsbewusste Ent-scheidungen treffen zu k ¨onnen.Die dar ¨uber hinaus entwickelte informatikspeziﬁsche Lehrerselbstwirksamkeitserwar-tungsskala jeweils bezogen auf die Lernfelder algorithmisches Probleml ¨osen, Daten undihre Spuren sowie automatisierte Prozesse beinhaltet die ¨Uberzeugungen einer Lehrkraft,mit ihren F ¨ahigkeiten und Ressourcen eine herausfordernde beruﬂiche Anforderungssi-tuation speziell bezogen auf einen abgegrenzten Themenbereich zu meistern. Dazu wur-den die Kompetenzanforderungen der verschiedenen Bereiche im bereits erw ¨ahnten nie-ders¨achsischen Kerncurriculum [Ni14] untersucht und als Items formuliert. Dabei ﬁn-den allerdings nicht alle Kompetenzen, die mit einem Lernfeld entwickelt werden sollen,Ber¨ucksichtigung, sondern lediglich die Kompetenzen, die mithilfe der Inhalte der jewei-ligen Lehrerfortbildungen entwickelt und gef ¨ordert werden k ¨onnen.Schließlich ist noch die von den Lehrkr ¨aften empfundene Qualit ¨at der Fortbildung vonBedeutung. Hier sollen sich die Quellen der Selbstwirksamkeitsentwicklung widerspie-geln (siehe Kapitel 2). Mithilfe dieses Konstrukts sollen in kompakter Form zum BeispielAussagen zur Angemessenheit der Fortbildungsziele, ¨uber das Theorie-Praxis-Verh ¨altis(enactive master experience), die produktive Zusammenarbeit mit Kolleginnen und Kolle-gen (in Teilen vicarious experiences), ¨uber das Engagement der Fortbilder (in Teilen verbalpersuasion) und ¨uber die vorherrschende Atmosph ¨are (physiological and affective states)get¨atigt werden. Eine ¨Ubersicht ¨uber die Konstrukte, die dazugeh ¨orige Anzahl der Items,die Reliabilit ¨aten der Skalen (Cronbachs Alpha) sowie Beispielitems sind in Tabelle 1 zuﬁnden.5 ForschungsmethodeAn den Umfragen zu den in Kapitel 3 beschriebenen Fortbildungen nahmen insgesamt 41Lehrkr ¨afte (12 Frauen, 29 M ¨anner) teil. Frageb ¨ogen wurden zur Datenerhebung vor (zumZeitpunkt t 0) bzw. nach der jeweiligen Fortbildung bzw. des jeweiligen Fortbildungstages(zum Zeitpunkt t 1) erhoben. Die meisten der teilnehmenden Lehrkr ¨afte gaben an, sich In-formatik selbst beigebracht oder durch Fortbildungen Qualiﬁkationen erlangt zu haben.Lediglich sechs Personen hatten Informatik als Erst- oder Zweitfach oder als Erweite-rungsfach studiert. Die Lehrerinnen und Lehrer notierten, zwischen 26 und 63 Jahre alt zusein. Drei Lehrkr ¨afte waren am Gymnasium oder an einer Schule mit gymnasialem Ange-bot t¨atig, alle anderen Lehrkr ¨afte arbeiteten an Kooperativen Gesamtschulen, Realschulen,Hauptschulen, aber vor allem an Oberschulen (28 Lehrkr ¨afte).Die Untersuchung der im letzten Kapitel vorgestellten Konstrukte erfolgte anhand vonItems. Die Antwortskalen der Items waren sechsstuﬁg, von”1 = trifft gar nicht zu“ bis”6 = trifft v ¨ollig zu“ (Likert-Skala). Das bedeutet, dass die Lehrkr ¨afte jeweils nach demGrad ihrer Zustimmung bzw. Ablehnung zu den Items befragt wurden. Antworten auf ei-ner Likert-Skala sind ordinal- beziehungsweise rangskaliert. Da den Umfragenteilnehme-rinnen und -teilnehmern die verschiedenen Antwortm ¨oglichkeiten durch eine ¨aquidistante142 Claudia Hildebrandtii“proceedings” — 2017/9/17 — 20:19 — page 143 — #143iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 7Skala visualisiert wurden, wird im Folgenden das Intervallskalenniveau verwendet. DieErgebnisse werden dadurch nur unwesentlich”verf¨alscht“ ([HSE10, S. 67], [Al78]). Ta-belle 1 zeigt die Konstrukte, Beispielitems und die Cronbachs Alpha Werte. Bei den Kon-strukten, bei denen die Werte f ¨ur Cronbachs Alpha ¨uber 0,7 liegen, ist davon auszugehen,dass die jeweilige Gruppe von Test-Items als Messung einer einzelnen Variablen (hier dereinzelnen Konstrukte) angesehen werden k ¨onnen. Da bei der Lehrerumfrage, bei der dieinformatikspeziﬁsche Lehrerselbstwirksamkeitserwartung bezogen auf das Lernfeld algo-rithmisches Probleml ¨osen erhoben wurde, lediglich 19 g ¨ultige Datens ¨atze vorhanden sind,ist ein Wert f ¨ur Cronbachs Alpha von 0,628 gerade noch so akzeptabel. ¨Ahnlich verh ¨alt essich mit dem Cronbachs Alpha Wert vom Konstrukt Qualit ¨at der Fortbildung bezogen aufdas Lernfeld Daten und ihre Spuren. Dort sind 17 g ¨ultige Datens ¨atze zu ﬁnden.Konstrukt nBeispielitem aindividuelle informatikspezi-ﬁsche Lehrerselbstwirksam-keitserwartung (LSWE)8 Ich bin in der Lage, bei Sch ¨ulern ein grundle-gendes Verst ¨andnis von der Informatik zu entwi-ckeln.t0: 0,913t1: 0,882informatikspeziﬁsche LSWE(algorithmisches Problem-l¨osen)5 Ich weiß, dass ich es schaffe, den Lernenden dieKompetenz zu vermitteln, eindeutige Anweisun-gen als ausf ¨uhrbares Programm zu implementie-ren.t0: 0,795t1: 0,628informatikspeziﬁsche LSWE(Daten und ihre Spuren)7 Ich bin in der Lage, bei Sch ¨ulern ein Verst ¨and-nis f¨ur die dem Internet zugrundeliegenden tech-nischen Strukturen und Kommunikationswege zuentwickeln.t0: 0,878t1: 0,839informatikspeziﬁsche LSWE(automatisierte Prozesse)5 Ich bin mir sicher, dass ich auf individuelle Pro-bleme der Sch ¨uler im Bereich automatisierte Pro-zesse gut eingehen kann.t0: 0,884t1: 0,876Qualit ¨at der Fortbildung 6 Das Verh ¨altnis von Theorie- und Praxisanteilenwurde angemessen gew ¨ahlt.algorith. Probleml ¨osen: t1: 0,760Daten und ihre Spuren: t1: 0,689automatisierte Prozesse: t1: 0,956Tab. 1: Die Merkmale (Anzahl der Items n, Cronbachs Alpha a) der erfassten Konstrukte im ¨Uber-blick6 Ergebnisse6.1 Forschungsfrage 1Zur Untersuchung der ersten Forschungsfrage Inwiefern ver ¨andert sich die individuelle in-formatikspeziﬁsche Lehrerselbstwirksamkeitserwartung im Allgemeinen bzw. jeweils bezo-gen auf Teile der Lernfelder algorithmisches Probleml ¨osen, Daten und ihre Spuren sowieautomatisierte Prozesse im Laufe der untersuchten Fortbildung? werden die Konstrukteindividuelle informatikspeziﬁsche Lehrerselbstwirksamkeitserwartung sowie die informa-tikspeziﬁsche Lehrerselbstwirksamkeitserwartung jeweils bezogen auf das algorithmischeMit dem Glauben Berge versetzen ... 143ii“proceedings” — 2017/9/17 — 20:19 — page 144 — #144iiiiiiProbleml ¨osen, Daten und ihre Spuren und automatisierte Prozesse zu den Erhebungszeit-punkten t 0und t 1untersucht. Die Skalenmittelwerte und Standardabweichungen bez ¨uglichdieser Konstrukte sind der Tabelle 2 zu entnehmen. Man erkennt, dass die Skalenmittel-werte der jeweiligen Selbstwirksamkeiten vor den jeweiligen Fortbildungen ungef ¨ahr beivier auf einer Skala von eins bis sechs liegen. Das heißt, es herrscht eine zwar nicht sehrhohe, aber eine gewisse positive Lehrerselbstwirksamkeit vor. Im Bereich des algorithmi-schen Probleml ¨osens ist diese am geringsten ausgepr ¨agt, wohingegen die allgemein ge-haltene individuelle informatikspeziﬁsche Lehrerselbstwirksamkeitserwartung zu Beginnder Fortbildungen am gr ¨oßten ist. Das positive Resultat dieser Untersuchung ist die Tatsa-Konstrukt m0 m1 m1-m0 Wilcoxon-Test(p-Wert)individuelle informatikspeziﬁ-sche LSWE4,21(s⇡0,87)4,94(s⇡0,55)+0,73 0,000LSWE (algorithmisches Pro-bleml ¨osen)3,98(s⇡1,03)4,49(s⇡0,75)+0,51 0,104LSWE (Daten und ihre Spuren) 4,22(s⇡0,88)4,85(s⇡0,62)+0,63 0,006LSWE (automatisierte Prozes-se)4,10(s⇡1,08)4,66(s⇡0,86)+0,56 0,002Qualit ¨at der Fortbildung (algo-rithmisches Probleml ¨osen)- 5,31(s⇡0,44)- -Qualit ¨at der Fortbildung (Datenund ihre Spuren)- 5,45(s⇡0,45)- -Qualit ¨at der Fortbildung (auto-matisierte Prozesse)- 5,57(s⇡0,50)- -Tab. 2: Skalenmittelwerte mund Standardabweichungen sder Konstrukteche, dass die Selbstwirksamkeit in allen Bereichen w ¨ahrend der Fortbildung zugenommenhat. Betrachtet man zus ¨atzlich noch die Ergebnisse des nichtparametrischen zweiseitigenWilcoxon-Tests, so kann man folgern, dass die Unterschiede der Skalenmittelwerte vorund nach der Lehrerfortbildung bis auf den Bereich des algorithmischen Probleml ¨osenssigniﬁkant sind (p <0,05). Im Bereich des algorithmischen Probleml ¨osens ist ganz knappkeine statistische Signiﬁkanz feststellbar. Weitere Untersuchungen werden zeigen, ob eseventuell doch eine statistische Signiﬁkanz gibt.6.2 Forschungsfrage 2Inwiefern h ¨angen die unterschiedlichen informatikspeziﬁschen Lehrerselbstwirksamkeits-erwartungen nach der Fortbildung von der Qualit ¨at der Fortbildung ab? stellt die zweiteForschungsfrage dar. Zun ¨achst kann man Tabelle 2 entnehmen, dass die Qualit ¨at der Fort-bildungen von Lehrkr ¨aften im Durchschnitt mit 5,44 auf einer Skala von eins bis sechssehr hoch bewertet wurde. Dar ¨uber hinaus zeigen sich zum Erhebungszeitpunkt t 1, also je-weils nach den Fortbildungen, statistisch starke bis sehr starke Zusammenh ¨ange zwischender informatikspeziﬁschen Lehrerselbstwirksamkeitserwartung aller drei hier betrachteten144 Claudia Hildebrandtii“proceedings” — 2017/9/17 — 20:19 — page 145 — #145iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 9Lernfelder mit der jeweils empfundenen Qualit ¨at der Fortbildungen (siehe Tabelle 3). DenKommentaren der Lehrkr ¨afte kann entnommen werden, dass besonders positiv der sehrhohe Praxisanteil und das gut aufbereitete, sch ¨ulergerechte, digitale Unterrichtsmaterialhervorgehoben wurden. Lediglich einer Lehrkraft war die Fortbildung nicht tiefgr ¨undiggenug und nur sehr vereinzelt wurde mitgeteilt, dass Teile der Fortbildungen zu einer¨Uberforderung gef ¨uhrt h ¨atten, da das Vorgehen nicht kleinschrittig genug gewesen seinsollte. Welche Richtung dieser Zusammenhang hat, kann man aus dem Spearmans RohKorrelationskoefﬁzienten nicht ablesen. Um das herauszuﬁnden, w ¨aren weitere Untersu-chungen notwendig.Qualit ¨at der FortbildungLSWE (algorithmisches Probleml ¨osen) t 1 0,801**LSWE (Daten und ihre Spuren) t 1 0,650**LSWE (automatisierte Prozesse) t 1 0,681**Tab. 3: Korrelationen (Spearmans Roh, **p <0,01)7 Diskussion und AusblickAufgrund der positiven Untersuchungsergebnisse l ¨asst sich vermuten, dass die zeitlicheStruktur der Fortbildungen, das Verh ¨altnis der Theorie- und Praxisanteile, das vorbereiteteMaterial sowie der Umgang mit den Kolleginnen und Kollegen und die Vermittlung derInhalte der Mehrzahl der teilgenommenen Lehrkr ¨aften zugesagt hat. In dieser angenehmenLernatmosph ¨are war es m ¨oglich, die informatikspeziﬁsche Lehrerselbstwirksamkeit deut-lich zu steigern. Es ist zu vermuten, dass die hohen Praxisanteile, die mehrfach lobendin den Kommentarfelder des Fragebogens erw ¨ahnt wurden, einen großen Teil zu dieserpositiven Entwicklung beigetragen haben.Zusammenfassend l ¨asst sich festhalten, dass sich die informatikspeziﬁsche Lehrerselbst-wirksamkeit der Informatiklehrkr ¨afte bis auf im Bereich des algorithmischen Probleml ¨o-sens signiﬁkant erh ¨oht hat. Damit ist, wenn man die Ergebnisse erfolgter Untersuchun-gen ber ¨ucksichtigt (siehe Kapitel 2), davon auszugehen, dass damit auch ein St ¨uck weitdie Qualit ¨at des Informatikunterrichts steigt. Lernumgebungen zu verschiedensten Lern-feldern der Informatik k ¨onnen geschaffen werden, die die kognitiven Kompetenzen derSch¨ulerinnen und Sch ¨uler entwickeln, f ¨ordern und fordern. Mithilfe des den Lehrkr ¨aftenzur Verf ¨ugung gestellten Unterrichtsmaterials und der entsprechenden positiven Selbst-wirksamkeitserwartung ist dieses Ziel in der Praxis umsetzbar. Bei den beschriebenenErgebnissen muss man allerdings beachten, dass sie bisher auf einer Stichprobe von 41Personen beruhen. Weitere Datenerhebungen - auch in Kontrollgruppen - sind notwendig.Dar¨uber hinaus ist nach einem gewissen Zeitraum, z.B. nach ein bis zwei Jahren, zu unter-suchen, ob die Fortbildungen nachhaltig die Lehrerselbstwirksamkeit und die Qualit ¨at desInformatikunterrichts positiv beeinﬂusst haben.Damit sich Fortbildungsmaßnahmen in einer Ver ¨anderung des Unterrichts niederschlagen,sollte in Zukunft vermehrt dar ¨uber nachgedacht werden, mehrt ¨agige Fortbildungen anzu-bieten, damit die Lehrkr ¨afte Vorstellungen von den verschiedensten Bereichen der Infor-Mit dem Glauben Berge versetzen ... 145ii“proceedings” — 2017/9/17 — 20:19 — page 146 — #146iiiiiimatik bekommen und selbst die Erfahrungen sammeln, wie sie diese Lernfelder im prak-tischen Informatikunterricht einbringen k ¨onnen. Dar ¨uber hinaus hat sich gezeigt, dass esvon Vorteil ist, wenn mehrere Kolleginnen und Kollegen einer Schule an ein und derselbenFortbildung teilnehmen k ¨onnen, um die positiven Eindr ¨ucke zusammen in den Schulalltagzu integrieren - auch bei auftretenden Widerst ¨anden, die erst gemeinsam ¨uberwunden wer-den m ¨ussen. In diesem Zusammenhang k ¨onnen weitere Forschungen zu fachgruppenspe-ziﬁschen Lehrerselbstwirksamkeitserwartungen angestellt werden. Denn,”wenn es einenGlauben gibt, der Berge versetzen kann, so ist es der Glaube an die eigene Kraft“ (MarieFreifrau von Ebner-Eschenbach, 1830 - 1916).Literaturverzeichnis[Al78] Allerbeck, K. R.: Messniveau und Analyseverfahren - Das Problem strittiger Intervallska-len. Zeitschrift f ¨ur Soziologie, (3):199–214, 1978.[Ba77] Bandura, A.: Self-efﬁcacy: Toward a unifying theory of behavioral change. PsychologicalReview, 84(2):191 – 215, 1977.[Ba95] Bandura, A.: Exercise of personal and collective efﬁcacy in changing societies. In (Ban-dura, A., Hrsg.): Self-efﬁcacy in Changing Societies. Cambridge University Press, Cam-bridge, S. 1–45, 1995.[Ba97] Bandura, A.: Self-efﬁcacy: The exercise of control. Freeman, New York, 1997.[GD84] Gibson, S.; Dembo, M. H.: Teacher Efﬁcacy: A Construct Validation. Journal of Educa-tional Psychology, 76(4):569 – 582, 1984.[Ge13] Gebauer, M. M.: Determinanten der Selbstwirksamkeits ¨uberzeugung von Lehrenden.Schulischer Berufsalltag an Gymnasien und Hauptschulen. Springer VS, Wiesbaden,2013.[HPK13] Holzberger, D.; Philipp, A.; Kunter, M.: How Teachers’ Self-Efﬁcacy Is Related toInstructional Quality: A Longitudinal Analysis. Journal of Educational Psychology,105(3):774 – 786, 2013.[HSE10] Hussy, W.; Schreier, M.; Echterhoff, G.: Forschungsmethoden in Psychologie und Sozial-wissenschaften. Springer, Berlin, 2010.[Ni14] Nieders ¨achsisches Kultusministerium (Hrsg.): Kerncurriculum f ¨ur die Schulformen desSekundarbereichs I Schuljahrg ¨ange 5 - 10 Informatik, Niedersachsen. Unidruck, Hanno-ver, 2014.[SJ99] Schwarzer, R.; Jerusalem, M.: Skalen zur Erfassung von Lehrer- und Sch ¨ulermerkma-len. Dokumentation der psychometrischen Verfahren im Rahmen der WissenschaftlichenBegleitung des Modellversuchs Selbstwirksame Schulen. Berlin, 1999.[SS00] Schmitz, G. S.; Schwarzer, R.: Selbstwirksamkeitserwartung von Lehrern: L ¨angsschnitt-befunde mit einem neuen Instrument. Zeitschrift f ¨ur P¨adagogische Psychologie, 14:12 –25, 2000.[ZK16] Zee, M.; Koomen, H. M. Y.: Teacher Self-Efﬁcacy and Its Effects on Classroom Proces-ses, Student Academic Adjustment, and Teacher Well-Being: A Synthesis of 40 Years ofResearch. Review of Educational Research, 86(4):981 – 1015, 2016.146 Claudia Hildebrandtii“proceedings” — 2017/9/17 — 20:19 — page 147 — #147iiiiiiEin gamebasierter Ansatz zum Programmierunterricht in der Lehrer innen- und Lehrer bildung Nico  Steinbach , Eckart Zitzler   Abstract:  Mit dem Lehrplan 21 hält in den deutsch - und mehrsprachigen Kantonen der Schweiz der Themenbereich Informatik sowie die Kompetenzorientierung Einzug in die Volksschule. Dadurch ergeben sich neue Herausforderungen für die Schule, den Unterricht sowie die Aus - und Weiterbildung von Lehrpersonen.  Zudem gibt es für diesen Themenbereich derze it keine offiziellen Lehrmittel. Die pädagogischen Hochschulen stehen vor der Aufgabe, die aktiven Lehrp ersonen, neben anderen Lehrplan -21-Weiterbildungen, für den Informatikunterricht zu befähigen.  In diesem Zusammenh ang gilt es ein didaktisches Konzept zu entwerfen, welches den folgenden Anforderungen gerecht wird: 1) Einen motivierenden und spielerischen Zugang zu Informatikkonzepten zu ermöglichen 2) Die Heterogenität der Teilnehmenden hinsichtlich des Vorwissens un d der Zielstufe zu berücksichtigen, 3) Die Erwachsenenbildung und den Schulunterricht gemeinsam zu denken, 4) Den Bezug zu anderen Fächer n aufzuzeigen.  Der vorliegende Beitrag beschreibt die Entwicklung und Durchführung von kompetenzorientierten Weiterbild ungen zum Themenfeld Programmieren im Kanton Bern . Im Zentrum des Ansatzes steht ein Jump’n Run -Computerspiel, welches blockbasiert entwickelt und individuell ausgestaltet werden kann.  Keywords: Computerspiel, Lehrer innen - und Lehrer bildung, Programmierunt erricht, Lehrplan  21 1 Einleitung  Mit dem Projekt Lehrplan 21 wurde in der Schweiz im Zeitraum 2010 -2015 ein gemeinsamer Lehrplan für die 21 deutsch - und mehrsprachigen Kantone entwickelt mit der Absicht, die Ziele der Volksschule zu harmonisieren. Eine wesentliche Neuerung ist, dass die I nhalte kompetenzorientiert formuliert und auf Zyklen verteilt sind (Zyklus 1 = Kindergarten bis zweite Klasse; Zyklus 2 = dritte bis sechste Klasse; Zyklus 3 = siebte bis neunte Klasse). Des Weiteren wurde erstmalig die Informatik in allen Zyklen verankert , wobei auch die Bezüge zu anderen Fächern thematisiert werden. Sie umfasst neben reinen Anwendungskompetenzen drei Kompetenzen zu den Themenfeldern Datenstrukturen, Algorithmen und Informatiks ystemen, die jeweils in mehrere n Kompetenzstufen ausdifferenzie rt sind. Je nach  Kanton sind separate Zeitgefäß e hierfür vorgesehen, die zudem vier Kompetenzen  im Medienbereich  umfassen.  Im Kanton Bern  handelt es sich um jeweils eine Wochenlektion im 5., 6., 7. und 9. Schuljahr, deren Umsetzung im Schuljahr 2018/ 19 beg innt. Da derzeit keine entsprechenden Informatik -Lehrmittel zur Verfügung stehen und den  meisten  im Berufsfeld  tätigen Lehrpersonen sowohl die  fachliche n als auch d ie I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 147ii“proceedings” — 2017/9/17 — 20:19 — page 148 — #148iiiiiifachdidaktische n Hintergrü nde fehlen, stehen die Schulen vor großen  Herausforderungen. Fü r die Pädagogischen Hochschulen heißt  das, eine große  Anzahl von Lehrerinnen und Lehrer n in kurzer Zeit – im Kanton Bern  sind es gut 750 Personen  – innerhalb  von drei Jahren  für den Informatikunte rricht vorzubereiten , neben den anderen Weiterbildungen  im Kontext des Lehrplan 21. Dabei ergeben sich diverse Frage n, die sich bei der Entwicklung von Weiterbildungsangeboten stellen: 1. Wie kann der Spanne zwischen keinem Vorwissen und bereits eigener Unterrichtserfahrung begegnet werden?; 2. Wie kann das zu era rbeitende Konzept inklusive Material aufbereitet werden, damit  es sowohl für die Lehrer innen - und Lehrer bildung als auch für den Unterricht genutzt werden kann?; 3. Wie kann der Bezug zu anderen Fächern aufgezeigt und implementiert werden?  An der Pädagogis chen Hochschule Bern  wurde ein einwöchiger Blockkurs für Volksschullehrpersonen entwickelt, in dem sowohl die Medien - als auch die Informatikkompetenzen behandelt werden. Dieser Beitrag fokussiert die Algorithmik und diskutiert, wie das Themenfeld der Prog rammierung innerhalb eines Tages in diesen Blockkurs eingebettet wurde. Im Folgenden wird die Entwicklung eines entsprechenden didaktischen Konzepts vorgestellt und die Umsetzung im Schulunterricht sowie  in der Weiterbildung  diskutiert.  1.1 Hintergrund  Im Absc hlussberi cht der Arbeitsgruppe ICT und Medien, die das Modul Medien und Informatik des Lehrplan 21 ausgearbeitet hat, wird für die Weiterbildung von amtierenden Lehrpersonen ein Umfang von mindestens 3 ECTS -Punkten (1 ECTS -Punkt entspricht 30 Stunden) für Primarlehrpersonen bzw. 5 ECTS -Punkten für Sekundarlehrpersonen empfohlen [ MI15 ]. Aufgrund verschiedener praktischer Rahmenbedingungen steht den Lehrpersonen jedoch in der Regel wesentlich weniger Zeit zur Verfügung, um sich im Themenfeld aus - und weiterzu bilden.  1.2 Rahmenbedingungen im Kanton Bern  Im Kanton Bern  ist die Weiterbildung zum Modul Medien und Infor matik nicht obligatorisch. Es liegt in der Verantwortung der Schulleitungen zu bestimmen, welche Lehrpersonen die spezifischen Lektionen in der 5., 6., 7. und 9. Klasse unterrichten werden. Weil zudem eine Vielzahl weiterer, obligatorischer Weiterbildungen im Kontext des Lehrplan 21 absolviert werden müssen, die mit ca. 12 Stunden pro Fach dotiert sind, sind die zeitlichen Ressourcen  für das Themenfeld Me dien und Informatik  begrenzt . In Absprache mit der Erziehungsdirektion wurde ein 30 -stündiges, einwöchiges Weiterbil dungsformat entwickelt, wobei dr ei Tage den Medien -Kompetenzen und zwei Tage den Informatik -Kompetenzen gewidmet  sind. In diesen Blockwochen  mit knapp 50 Teilnehmenden sind sowohl Primarlehrpersonen (betrifft 5. und 6. Klasse) als auch Sekund arlehrpersonen (betrifft 7 . und 9. Klasse) weiterzubilden. A ufgrund der 148 Nico Steinbach, Eckart Zitzlerii“proceedings” — 2017/9/17 — 20:19 — page 149 — #149iiiiiibeschränkten personellen Ressourcen sind die Teilnehmendengruppen gemischt , zudem bringen die Teilnehmenden sehr unterschiedliche  persönliche Erfahrungen zum  Thema Medien und Informatik mit.  Aufgrund dieser Rahmenbedingungen ist die Zielsetz ung des Blockkurses vor allem  den Lehrpersonen die fachlichen Hintergründe zum Modul Medien und Informatik zu vermitteln, fachdidaktische Ideen aufzuzeigen und Motivation und Interesse für das Thema zu wecken, damit diese sich selbständig weiter mit dem Thema beschäftigen können. Insb esondere ergeben sich folgende Anforderungen an das Kurskonzept:  1) Es kann Teilnehmende unterschiedlichen Vorwissens abholen und ins Thema einführen beziehungsweise  w eiterführende Themen anbieten; 2) Es ist geeignet für die Lehrerinnen - und Lehrer bildung  als auch den ansch ließenden Einsatz im Unterricht ; 3) Es zeigt konkrete  Verknüpfu ngen zu anderen Fachbereichen auf ; 4) Es spricht die Kreativität an und motiviert durch Lebensweltbezug.  Die Entwicklung solcher Materialien und Konzepte obliegt normalerweis e den kantonalen Lehrmittelverla gen u nd Lehrmittelautoren. Eine Weiterbildung kann sich dann auf die vorgeschriebenen Lehrmittel beziehen. Zum Zeitpunkt der ersten Durchführung des Blockkurses lag jedoch kein entsprechendes Lehrmittel vor. Aus diesem Grun d wurde die Entwicklung eines eigenen Konzepts angestrebt. Im Folgenden fokussieren wir uns auf den Aspekt des Programmierunter richts – ein Tag im Block - kurs –, der im Lehrplan unter der Kompetenz Algorithmen beschrieben wird: “Die Schülerinnen und Schüle r können einfache Problemstellungen analysieren, mögliche Lösungsverfahren beschreiben und in Programmen umsetzen.” [ LP16 ] Die Kompetenz unterteilt sich in neun Kompetenzstufen , die mehrheitlich im zweiten Zyklus liegen. Die Frage, mit der sich dieser Beitrag auseinandersetzt , lautet, wie eine eintägige Weiterbildung zum Thema Programmierung didaktisch konzipiert und umgesetzt werden kann, so dass die oben aufgeführten Anforderung en erfüllt werden können.  1.3 Einbettu ng Es existiert eine Vielzahl von Ansätzen und entsprechender Erfahrung zum Programmierunterricht in der Schule. Neben dem Programmieren ohne Computer können vor allem die textbasierte und die visuelle Programmierung genan nt werden. Die textbasierte Programmierung blickt auf eine langjährige Debatte nach der Wahl einer geeigneten Programmierspra che, nebst Programmierparadigma  zurück. Das  Schreiben von textbasie rten Programmen kann  Schülerinnen und Schülern Schwierigkeiten  bereiten , obwohl die Motivation und Fähigkeit zum algorithmischen Problemlösen vorhanden ist [MMS11]. Eine mögliche Konsequenz ist , dass das Interesse an der Informatik sinkt [Hu00]. Als Argumente gegen die textbasierte Programmierung werden unter anderem a ufgeführt: Die  Kodierung des Programmcodes in  Textform ist nicht intuitiv [MMS11]  und Menschen können Bilder viel früher verstehen als Text [Sc01]. Für die Förderung algorithmischen Denkens bietet die visuelle Programmierung für Anfänger  Vorteile . Sie erla ubt es , sich schneller auf den Inhalt zu fokussieren  und Ein gamebasierter Ansatz zum Programmierunterricht in der Lehrerbildung 149ii“proceedings” — 2017/9/17 — 20:19 — page 150 — #150iiiiiivermeidet Syntaxfehl er [Mo11] . Mit Scratch  – die offizielle erste Version wurde  2007  veröffentlicht  – existiert eine solche visuelle Programmierlernumgebung, die sich direkt an Kinder und Jugendliche  richtet, blockbasierte Entwicklung von Programmen ermöglicht und Spiele ins Zentrum stellt. Neben Weiterentwicklungen (Scratch 2.0, 2013) und Modifikationen (BYOB/Snap) gibt es auch weit ere Plattformen wie code.org [CO 13], die auf die Kombination aus Blöc ken und Spielen setzen. M it der Bewegung Hour -of-Code [HO 13] und prominenter Unterstützung (u.a. Barack Obama, Mark Zuckerberg , Bill Gates) schaffte  es die Program mierung in die US -Schulen . Der Einsatz von Spie len, wie er auch bei code.org verfolgt wird,  scheint vielversprechend. Al lein bis Ende 2015 konnte code.org  über 100 Millionen Schülerinnen und Schüler auf der ganzen Welt erreichen [US15]. Auch die Bitkom konnte aufzeigen, dass sich Gaming  in allen  Altersgruppen etabliert hat [BI 15]. Spiele sind dank bare Vehikel für Lerninhalte [Pr01]. Allerdings sind die zugrundeliegenden didaktischen Ansätze nur begrenzt auf das oben skizzierte Weiterbildungsszenario übertragbar.  Die Aufgaben  bei code.org  schränken die Lernenden ein, indem sie die zu nutzenden Blöcke und damit das Wissen zur Lösung einer Aufgabe vorgeben. Schon Romeike kritisierte, dass Problemstellungen (Start,  Ziel, Hürde) in der Informatik eher als Aufgaben (vorgegebenes Wissen und defi nierte Lösung) formuliert werden. Die Kreativität die der Informatik immanent ist, kommt nicht zur Entfaltung [Ro08]. Zusätzlich erschwert ein solches Setting die Fächerverbindung, da es kaum Ansatzpunkte gibt, Inhalte anderer Fächer einzubinden.  2 Didaktisc her Ansatz  In diesem Beitrag wird die Idee verfolgt, die Lernenden ein Computerspiel (weiter)entwickeln zu lassen und so die Kompetenzstufen im Bereich der Algorithmik abzudecken. Beim Computerspiel handelt es sich um ein einfaches Jump’n -Run-Computerspiel , in dem eine Spielfigur von links nach rechts durch Spielumgebungen geführt werden kann . Eine Grundfunktionalität soll zur Verfügung gestellt werden, die dann von den Lernenden schrittweise erweitert wird, z. B. indem die Spielfigur neue Fähigkeiten erhäl t oder die Spielumgebung ausgebaut wird.  Konzept.  Das didakt ische Konzept, das an der PH Bern  entwickelt wurde, basiert auf drei Eckpfeilern:  1. Eine blockbasierte Programmierumgebung, die einen möglichst einfachen Zugang zum Programmieren ermöglich t, den Aust ausch mit anderen Programmierenden fördert, frei verfügbar ist und zudem erlaubt, Multimedia -Inhalt e niederschwellig einzubinden; L etzteres war uns wichtig, um die inhaltliche Anbindung an andere Fächer zu erleichtern.  150 Nico Steinbach, Eckart Zitzlerii“proceedings” — 2017/9/17 — 20:19 — page 151 — #151iiiiii2. Ein erweiterbares Programmgerüst, wel ches die Grundfunktionalität des Computerspiels implementiert, gleichzeitig aber möglichst schlank gehalten ist, damit die Lernenden das Spiel erweitern und abändern können. Der Nachteil eines solchen vorgegebenen Systems ist, dass die Lernenden sich überf ordert und verloren fühlen können. Für uns stand jedoch aufgrund der Heterogenität der Lerngruppen im Vordergrund, dass früh sichtbare Erfolgserlebnisse und zudem sehr offene Aufgabenstellungen möglich sind.  3. Eine interaktive Wegleitung, anhand derer die Le rnenden das Computerspiel individuell weiterentwickeln können. Sie besteht aus mehreren multimedialen  Aufgabenblättern J edes Aufgabenblatt enthält eine Sequenz von Aufgaben, die durch Zusatzinformationen (Videos, Texte etc.) und Beispiele angereichert sind. Die insgesamt neun Aufgabenblätter decken alle Kompetenzstufen im Bereich Algorithmik ab.   Wir haben uns bewusst dafür entschieden, die Lernenden mit einer vollständigen Programmierumgebung zu konfrontieren und die Möglichkeiten der Programmierung in Abhängigkeit der Aufgabenstellung explizit nicht einzuschränken. Des Weiteren folgt die Konzeption der Aufgabenblätter der Idee der Lernspiral e [Ki13 ]: Anstatt fundamentale Programmierkonzepte einzeln zu behandeln, werden Konstrukte wie Anweisungen, bedingte Anweisungen, Schleifen und Variablen in allen Aufgabenblättern benutzt. Die Lernenden begegnen den elementaren Ideen also immer wieder, allerdings nimmt die Komplexität der Aufgaben zu. Damit einher geht auch das Konzept, dass die Aufgabenblätter nicht lin ear, sondern eher baumartig angeordnet sind.  Einzig die zwei ersten Aufgabenblätter sind hintereinander zu bearbeiten, danach können die Lernenden nach ihren Fähigkeiten und Interessen auswählen.  Implementierung . Als Progr ammierumgebung wurde Scratch [SC 17] gewählt. Scratch erfüllt die oben beschriebenen Anforderungen, hat allerdings (derzeit) den Nachteil, dass die Umgebung auf Geräten ohne Flash  nicht einsetzbar ist; diese Einschränkung soll gemäß  Ankündigung der Scrat ch-Entwickler behoben werden [SC 16]. Das Programmgerüst, um die Grundfunktionalität des Spiels zu realisieren, umfasst fünf Funktionen und insgesamt knapp vierzig Einzelanweisungen; es definiert die Spielfigur sowie dere n Bewegung über die Pfeiltasten und wird in  Abbildung 1  skizziert . Ein gamebasierter Ansatz zum Programmierunterricht in der Lehrerbildung 151ii“proceedings” — 2017/9/17 — 20:19 — page 152 — #152iiiiii Abbi ldung 1: Das Spielfeld  (links)  und das Programmgrundgerüst in Scratch  (rechts)  Die Arbeitsumgebung umfasst drei Einstiegshilfen in Scratch, neun Arbeitsblätter sowie einen Remixbaum (alle Weiterentwicklungen  unseres  Ursprungprojektes, die öffentlich sind), die in Form einer Baumstruktur auf einer Webseite verlinkt sind . Die vollständigen Materialien finden sich unter https://milehrplan.ch/scratch . Die Arbeitsblätter  werde n on-the-fly aus einem JSON -Format generiert, welches in einer relationalen Datenbank liegt. Das ermöglicht sowohl eine Ansicht für Schülerinnen und Schüler ohne Lehrerkommentare, als auch eine weitere Ansicht für Lehrpersonen , zu erzeugen. Die Arbeitsblät ter setzen sich wie folgt zusammen:  Zwei fundamentale Arbeitsblätter ( “Der Beginn”, “Lass uns die Welt bunter machen” ) mit denen begonnen wird. Sie greifen niederschwellig einfache Anweisungen, bedingte Anweisungen sowie Schleifen auf und dienen dazu , der Spielfigur erste Interaktionen mit ihrer Umgebung zu ermöglichen, indem sie auf Farben reagiert. Aus den restlichen sieben Arbeitsblättern kann frei gewählt werden. Die drei fachübergreifenden Arbeitsblätter ( “Level Design”, “Story Design”, “Sound Design” ) dienen zur Erzeugung von Spielwelten (Bildnerisches Gestalten), Geschichten und Anleitungen (Deutsch) sowie Hintergrundmusik und Soundeffekten (Musik). Das erzeugte Material kann über bedingte Anweisungen in das Computerspiel integriert werden. Vier weite re Arbeitsblätter routinieren die Verwendung der eingeführten Konzepte und führen neue ein. Es handelt sich um Variablen ( “Spielelement - Sammeln” ), Nachrichten zwischen Objekten ( “Spielelement - Hindernis” ), Ereignisse ( “Spielelement - Aktion”) sowie die  Implementierung weiterer Objekte wie zum Beispiel Gegner mit zufallsbasierten Bewegungspfaden ( “Spielelement - Gegner”). Abbildung 2 stellt zwei Programmblöcke gegenüber – von einer früheren und einer 152 Nico Steinbach, Eckart Zitzlerii“proceedings” — 2017/9/17 — 20:19 — page 153 — #153iiiiiispäteren Aufgabe – und vermittelt einen Eindruck vom Anforderungsniveau und der Komplexitätszunahme. Im linken Programmblock wird der Figur beigebracht, auf verschiedene Farben zu reagieren und entsprechend einfache Anweisungen auszuführen. Die Schleife simuliert den Gameloop , der nötig ist, um Interaktionen  bis zum Programmende am Leben zu erhalten. Im rechten Programmblock wird entschieden, was mit einem zusätzlichen Objekt (Gegner) passiert, wenn die Variable “LebenVirus” auf unter 1 fällt. Dieser Programmblock ist nur ein Teil einer möglichen Lösung und interagiert mit weiteren Blöcken, welche die Variable ändern dürfen und Nachrichten schicken (nicht im Bild enthalten).   Abbildung 2: Gegenüberstellung zweier P rogrammblöcke unterschiedlichen Niveaus  3 Erfahrungen  Das vorgestellte Konzept wurde einerseit s in Schulklassen getestet und andererseits in der Weiterbildung eingesetzt.  Der Einsatz im Unterricht fand in vier Klassen des siebten Schuljahres einer Sekundarschule statt mit je 16 -18 Schülerinnen und Schülern. Die Erprobung dauerte über sechs Wochen m it je einer Lektion pro Woche . Stellvertretend für die Klassenlehrperson übernahm ein Mitarbeiter der PHBern  die Rolle der Lehrperson, zwei weitere Mitarbeiter waren als Beobachter im Klassenraum. Das Ziel der sechs Wochen war die fachübergreifenden Themen zu  erreichen , da die gesamte Einheit für bis zu 16 Lektionen ausgelegt ist. Im Vorfeld zu  jeder Lektion entschied die Lehrperson, welche Arbeitsblätter zur Verfügung stehen. Anschließend haben sich die Schülerinnen und Schüler, meist zu zweit, selbstständig an die Inhalte gewagt.  In der allgemeine n Beobachtung und persönlichen Gesprächen fiel auf, dass das Computerspiel als Thema von beiden Geschlechtern sehr gut angenommen wurde. Die Arbeitsblätter wurden in unterschiedlichem Tempo im Pair Programming bearbeitet. Vor allem schnelle Teams halfen den  anderen mit Hinweisen. Viele Teams haben intuitiv begonnen , aus den Problemstellungen eigene Projekte zu definieren. Alle Teams hatten Ein gamebasierter Ansatz zum Programmierunterricht in der Lehrerbildung 153ii“proceedings” — 2017/9/17 — 20:19 — page 154 — #154iiiiiivöllig ind ividuelle Ergebnisse, durchliefen aber dieselben Konzepte. Auch über die Unterrichtszeit hinaus gab es zusätzl iches Engagement in den Pause n und in der Freizeit.  Die Lehrperson hat bei Fragen vor allem zwischen den Teams vermittelt und Konzepte im Plenum zusammengefasst. Am Ende der sechs Wochen wurden die entstandenen Projekte auf Initiative der Schülerinnen und Schüler abschließend vorgestellt.  Einschränkend war der 45 -Minuten -Rahmen der pro Woche zur Verfügung stand.  In der Regel benötigten  die Schülerinnen und Schüler  das erste Unterrichtsdrittel,  um am Stand der letzten Woche anzuknüpfen. Ebenfalls kann es für  die Lehrperson mitunter schwierig sein, an die unterschiedlichen Projekte und Lernstände anzuknüpfen  nach  einer Woche Pause zwischen den Lektionen .  In der Lehrer innen - und Lehrer bildung  haben bisher 95 Lehrpersonen die Blockwoche absolviert. An der erste n Blockwoche nahmen 48 Lehrpersonen teil, an der zweiten 47. Die Teilnehmenden wurden jeweils auf zwei Räume verteilt sowie zwei Dozenten zugeteilt. Die Kurstage erstreckten sich von 8:30 Uhr bis 17:00 Uhr. Zu Beginn des Algorithmentages wurden die Teilneh menden in den Räumen in Vierer -Gruppen aufgeteilt. Anschließend wurde die Relevanz der Informatik für die Gesellschaft und Schule thematisiert und im Plenum die Vorerfahrung der Teilnehmenden diskutiert , bevor die selbstständige Arbeit begann .  Positiv hat  sich gezeigt, d ass die Thematik Computerspiele  entgegen genereller Vermutungen auch bei Lehrpersonen Anklang findet. Zum einen , weil ihre Schülerinnen und Schüler oft über Games erzählen und sie motiviert sind, ihnen das Material vorzustellen. Zum anderen , weil sie Scratch und das Material als kreativ  wahrnehmen und aktiv gestalten - im Gegensatz zu ihrer Vorstellung vom reinen Spielen kommerzieller  Computerspiele . Selbst Lehrpersonen , die noch nie programmiert haben und/oder noch nie gespielt haben , nahmen den Ansatz dankend auf. Wie auch bei den Schülerinnen und Schülern gab es bei den Teilnehmenden unterschiedliche Arbeitstempi. Sie arbeite ten eben falls im Pair Programming und fi ngen an, eigene Projekte und kreative Umsetzungen aus den Arbeitsblättern z u generieren. Alle Teilnehmenden erreich ten gegen Mittag die fächerübergreifenden Themen und nutz ten den Nachmittag , neue Konzepte in den anderen Arbeitsblättern zu streifen.  Kritisch muss gesagt werden, dass an einem Kurstag keine echte Algorithmik erlern t werden kann und die Teilnehmenden die meisten Konzepte nur ausprobieren  können. Die meisten reflektieren das für sich und geben an, sich weiterhin nicht sicher zu fühlen, das Thema im Unterricht aufzugreifen. Für sie bildet das  Konzept nebst  Material ein en soliden Ausgangspunkt.  In eine r abschließenden Befragung zu der gesamten Blockwoche wurde der Kenntnisstand in der Informatik vor und nach der Woche erfragt, siehe Abbildung 3 . 154 Nico Steinbach, Eckart Zitzlerii“proceedings” — 2017/9/17 — 20:19 — page 155 — #155iiiiii Abbildung 3: Kenntnisstand  zur Informatik vor und nach den  Blockwoche n (Selbsteinschätzung)  Die in Abbildung 3 gezeigten Resultate beziehen sich auf die  beide n Informatiktage der Woche zu den Themen Algorithmen, Datenstrukturen und Informat iksysteme. Es zeigte  sich nach der Blockwoche , dass  sowohl ein deutlicher Lernzuwachs zu verzeichnen ist , als auch  dass sich keine Lehrperson nach der Woche selbst mit einem niedrigen Kenntnisstand einstuft.  4 Fazit  Das vorliegende d idaktische Konzept ist geeignet um mit heterogenen Gruppen bestehend aus Lehrpersonen in der Lehrer innen - und L ehrer bildung oder Schülerinnen und Schülern im Unterricht zu arbeiten. Ebenso vermag die Thematik eines Computerspiels beide Gruppen gleichermaßen anzusprechen und bietet in Verbindung mit einer visuellen Programmierlernumgebung wie Scratch eine niedrige E instiegshürde für Programmieranfänger. Zudem eignet sich der Kontext rund um Spiele besonders gut, um kompetenzorientierte Problemstellungen zu formulieren, verschiedene Lösungswege zuzulassen und Raum für kreative Weiterentwicklungen zu ermöglichen. Das K onzept stellt hohe Anforderungen  an Dozierende und Lehrpersonen und setzt voraus, dass sich Lernende gegenseitig unterstützen können.  Offen bleibt die Frage, wie nachhaltig eine eintägige Einführung in die Algorithmik sein Ein gamebasierter Ansatz zum Programmierunterricht in der Lehrerbildung 155ii“proceedings” — 2017/9/17 — 20:19 — page 156 — #156iiiiiikann, schließlich lässt sich an e inem Tag nur ein Einblick geben . Die Lehrpersonen gaben an , dass sie sich nach dem Tag nicht sicher fühlen , das Thema zu unterrichten, mit dem Material und der exemplarischen Durchführung jedoch eine solide Basis zum Anfangen gegeben ist. Die selbstständig e Auseinandersetzung sowie weitergehende Weiterbildungsangebote sind eine Voraussetzung , damit das Thema effektiv in den Schulen unterrichtet werden kann. Erst dann kann sich ein didaktischer Diskurs bilden.  Literaturverzeichnis  [BI15] Gaming hat sich in a llen Altersgruppen etabliert, https://www.bitkom.org/Presse/Presseinformation/Gaming -hat-sich-in-allen -Altersgruppen -etabliert.html , Stand: 14.02.2017  [CO13] Code.org - Jeder Schüler sollte die Möglichkeit haben, Informatik zu lernen, http://code.org , Stand: 14.02. 2017  [Hu00]       Bericht zur Lehrerausbildung Informatik, http://koenigstein.inf.tu -     dresden.de/00/humbert2.html , Stand: 14.02.2017  [HO13]    Hour of Code, https://hourofcode.com/de , Stand: 14.02.2017  [Ki13]     Klippert, Heinz, Leitfaden zum Arbeiten mit Lernspiralen, 2013  [LP16 ] Kompetenz Algorithmen im Modullehrplan Medien und Informatik, http://v -ef.lehrplan.ch/index.php?code=a|10|0|2|0|2 , Stand: 14.02.2017  [MI15 ] Schlussbe richt der Arbeitsgruppe zu Medien und Informatik im Lehrplan 21 , https://www.lehrplan.ch/sites/default/files/Schlussbericht_MI_2015 -02-23%20mit%20Anhang_0.pdf , Stand: 14.02.2017  [MMS11 ]  Modro w Eckart , Jens Mönig, Kerstin Strecker, LOG IN Heft Nr. 168,  2011  [Mo11 ] Modrow, Eckart, Visuelle Programmierung: - oder: W as lernt man aus Syntaxfehlern?,                              Lecture Notes in Informatics, Proceedings, Volume P -249, 2011  [Pr01]        Prensky , Marc , Digital Game - Based Learning, McGraw -Hill, 2001  [Ro08 ] Romeike, Ralf, Krea tivität im Informatikunterricht, Mathematisch -Naturwissenschaftliche Fakultät Potsdam, 2008  [SC17]      Scratch - imagine, program, share - https://scratch.mit.edu , Stand: 14.02.2017  [Sc11]       Schiffer Stefan, Visuelle Programmierung, Grundlagen und Einsatzmöglichkeiten, 2001  [SC16 ] Scratch -Blöcke (Google Blocky und Scratch  - Open Source Projekt), https://scratch.mit.edu/developers , Stand: 14.02.2017  [US15 ] Hour of Code to feature Star Wars: The Force Awakens . In: USA TODAY ,9. November 2015   156 Nico Steinbach, Eckart Zitzlerii“proceedings” — 2017/9/17 — 20:19 — page 157 — #157iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 11Empirische Ermittlung der Schlüsselkonzepte desFachgebiets DatenmanagementAndreas Grillenberger1, Ralf Romeike2Abstract: Die Aufbereitung neuer Themen für den Unterricht stellt eine wichtige Aufgabe derInformatikdidaktik dar. Diese schließt die Suche nach den zentralen Aspekten mit ein, weswegenbereits verschiedene Kataloge von Ideen, Prinzipien und Konzepten erstellt worden sind, die sich aufeinzelne Teilbereiche oder die Informatik im Ganzen beziehen. Das Fachgebiet Datenmanagement undinsbesondere dessen in den letzten Jahren hinzugekommene und neu ausgestaltete Aspekte werdenjedoch bisher kaum erfasst. Dennoch lässt sich vermuten, dass auch in diesem Gebiet Konzeptemit langfristiger Relevanz existieren. Da Datenmanagement und Kompetenzen aus diesem Bereichheute auch im Alltag immer unverzichtbarer werden, sind eine didaktische Aufbereitung diesesThemenkomplexes und die Fokussierung auf grundlegende Aspekte des Gebiets notwendig. Indiesem Beitrag wird daher ein Versuch unternommen, die Ermittlung der Schlüsselkonzepte einesThemenkomplexes zu systematisieren. Die vorgestellte empirische Herangehensweise wird dann aufdas Fachgebiet Datenmanagement angewandt. Anhand des resultierenden Modells werden zentraleAspekte von Datenmanagement für den Informatikunterricht exemplarisch verdeutlicht.Keywords: Datenmanagement; Schlüsselkonzepte; Modell; Ideen; Prinzipien; Praktiken; Unterricht1 MotivationIn der informatikdidaktischen Forschung besteht Einigkeit darüber, dass sich Unterrichtnicht an möglicherweise nur kurzzeitig bedeutenden technischen Entwicklungen orientierensollte, sondern an den grundlegenden und langfristig relevanten Aspekten des Fachs. In denletzten 20 Jahren wurden daher verschiedene Kataloge von Prinzipien, Ideen und Konzeptenvorgeschlagen, die die Informatik oder einen ihrer Teilbereiche charakterisieren. Diesekönnen beispielsweise im Rahmen der Aufbereitung neuer Themen für den Unterricht undals Grundlage der Unterrichtsplanung oder der Curriculumsentwicklung gewinnbringendeingesetzt werden. Bekannte Vertreter in der Informatikdidaktik sind beispielsweise die GreatPrinciples of Computing [De03 ] und die Fundamentalen Ideen der Informatik [Sc93 ]. Mitder kontinuierlichen Weiterentwicklung und Ausdi  erenzierung der Informatik geht jedochoft auch eine Ergänzung oder Neuinterpretation dieser Ideenkataloge einher. So ergänztebeispielsweise Modrow die Fundamentalen Ideen der theoretischen Informatik [Mo03 ]und identiﬁzierte einige Jahre später fundamentale Ideen der Schulinformatik [ MS16 ].1Friedrich-Alexander-Universität Erlangen-Nürnberg, Didaktik der Informatik, Martensstr. 3, 91058 Erlangen,andreas.grillenberger@fau.de2Friedrich-Alexander-Universität Erlangen-Nürnberg, Didaktik der Informatik, Martensstr. 3, 91058 Erlangen,ralf.romeike@fau.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 157ii“proceedings” — 2017/9/17 — 20:19 — page 158 — #158iiiiii12 Andreas Grillenberger, Ralf RomeikeDas Fachgebiet Datenmanagement wurde bislang noch nicht explizit auf solche Ideen hinuntersucht. Gerade im Kontext von Big Data und damit einhergehenden Entwicklungenentstehen jedoch viele neue Themengebiete, die eigene neue Ideen mitbringen. Da dieseauch Einzug in den Alltag halten, werden Kompetenzen in diesem Bereich nicht nurfür Informatiker, sondern auch für den alltäglichen Umgang mit Daten immer wichtiger[GR14b ]. Als Grundlage für die Aufbereitung des Fachgebiets für den Informatikunterrichtist es daher essentiell, dessen Schlüsselkonzepte zu ermitteln. Im Folgenden werden wirdaher einen empirischen Ansatz zur systematischen Ermittlung vorstellen und das Modellder Schlüsselkonzepte des Datenmanagements, das wir bei der Anwendung des Ansatzesauf dieses Fachgebiet gewinnen konnten, vorstellen.2 Datenmanagement in der Informatik und der InformatikdidaktikIn den letzten Jahren wurde der Themenbereich Datenbanken um eine Vielzahl neuerThemen, Methoden und Konzepte erweitert und hat sich zum Fachgebiet Datenmanagementweiterentwickelt. Ein zentrales Thema ist dabei Big Data , die Verwaltung immer größerer Da-tenbestände mit unterschiedlichsten Arten von Daten, die schnell verarbeitet werden müssen.Mit der Entstehung neuer Anforderungen an Datenspeicher, wie Partitionstoleranz als Basisder verteilten Datenspeicherung, und mit der Zunahme korrelationsbasierter Datenanalysen(Data Mining ) zeigen sich Auswirkungen auf Datenbanken und andere Datenmanagement-systeme: Während beispielsweise bei klassischen Datenbanken die langfristige konsistenteDatenspeicherung im Vordergrund steht, legen moderne NoSQL-Datenbanken den Fokusaufhohe Verfügbarkeit undverteilte Datenspeicherung , oft unter Vernachlässigung derKonsistenz. Gleichzeitig setzen sich neue Forschungsrichtungen im Datenmanagementinsbesondere mit Datenqualität ,Metadaten oder neuen Datenmanagementsystemen wieIn-Memory-Datenbanken oder Datenstromsystemen auseinander.Diese Innovationen haben unmittelbare Auswirkungen auf den Umgang mit Informatiksys-temen, z. B. im Zusammenhang mit Cloudspeichern ,Synchronisation persönlicher Datenüber verschiedene Endgeräte hinweg, Webdatenbanken oder Metadaten . Obwohl die fürden Umgang mit solchen Systemen nötigen Kompetenzen insbesondere im Informatikunter-richt vermittelt werden könnten, wurden verwandte Themen in der informatikdidaktischenForschung seit der Fundierung des Datenbankunterrichts in den 1990er Jahren kaumthematisiert. Entsprechend wurden bisher wenige Unterrichtsansätze zu moderneren Da-tenmanagementthemen verö  entlicht. Damit zeigt sich eine Lücke zwischen dem Standder Forschung im Fachgebiet und dem aktuellen Schulunterricht [ GR14a ]: Während sichder Informatikunterricht insbesondere auf das Thema Datenbanken konzentriert, werdenoben genannte Themen nur marginal betrachtet. Darüber hinaus können und sollten Schülerjedoch auch verschiedene Schlüsselkompetenzen erwerben, die für den Umgang mit Datenund Datenmanagementsystemen heute essentiell sind [ GR14b ]. Als praktisches Unterrichts-beispiel haben wir das Thema Datenstromsysteme bereits in dieser Hinsicht aufbereitet[GR15a ,GR15b ]. Für die weitere Erschließung des Fachgebiets ist es notwendig, diesessystematisch aufzuarbeiten und die zugrunde liegenden Konzepte zu ermitteln. Da diese158 Andreas Grillenberger, Ralf Romeikeii“proceedings” — 2017/9/17 — 20:19 — page 159 — #159iiiiiiEmpirische Ermittlung der Schlüsselkonzepte des Fachgebiets Datenmanagement 13einen Zugang zum gesamten Fachgebiet darstellen und ein Verständnis der zentralen Themenund Ideen ermöglichen, bezeichnen wir sie im Folgenden als Schlüsselkonzepte .3 Konzepte, Prinzipien und fundamentale Ideen der InformatikDie Strukturierung eines Fachgebiets durch Ermittlung der zugrunde liegenden Ideen, Kon-zepte oder Prinzipien ist insbesondere in den naturwissenschaftlichen Fächern und in derInformatik ein anerkannter Ansatz, der genutzt wird, um eine Wissenschaftsdisziplin odereinen Teil davon für den Schulunterricht zugänglich zu machen. In der Informatikdidaktiksind dabei insbesondere die Fundamentalen Ideen der Informatik zu nennen, die Schwillausgehend vom Softwareentwicklungsprozess, dessen Erforschung er als eine der grundle-genden Aufgaben der Informatik erachtet, identiﬁziert hat [ Sc93 ]. Dazu hat er vier (späterfünf) Kriterien deﬁniert: Eine fundamentale Idee soll einerseits in der Breite der Informatikvertreten sein („Horizontalkriterium“) und sowohl in der Vergangenheit aber auch in dererwarteten Zukunft Bedeutung haben („Zeitkriterium“). Gleichzeitig soll sie jedoch aucheinen Bezug zu Denken und Alltag haben („Sinnkriterium“), auf verschiedenen kognitivenNiveaus vermittelbar sein („Vertikalkriterium“) und zum Erreichen eines idealisierten abermeist unerreichbaren Ziels dienen (“Zielkriterium”). Modrow hat den Ansatz der fundamen-talen Ideen aufgegri  en und auf die Theoretische Informatik angewendet [ Mo03 ]. EinigeJahre später haben Modrow und Strecker den Ideenkatalog von Schwill erneut herangezogenund auf acht fundamentale Ideen der Schulinformatik reduziert [ MS16 ]. Denning hingegencharakterisiert mit den Great Principles of Computing die Informatik aus fachlicher Sichtanhand von Kerntechnologien , die verschiedene Anwendungen und Forschungsrichtungender Informatik darstellen sowie je fünf Praktiken, Entwurfs- und Funktionsprinzipien , dieder Informatik zugrunde liegen [ De03 ]. Für Zendler und Spannnagel waren die Konzepte[ZS06 ] und Prozesse [ZSK07 ] der Informatik zentral, die sie in einer Fragebogenstudieunter fachlichen Experten ermittelten, wobei sich die Auswahl auch an den Kriterien nachSchwill [ Sc93 ] orientierte. Diese und weitere Ansätze unterscheiden sich in ihrer Methodik,Breite und dem Detaillierungsgrad deutlich, während sie in der Zielsetzung typischerweiseübereinstimmen: Es soll die Informatik oder eines ihrer Teilgebiete durch die zugrundeliegenden Konzepte, Prinzipien bzw. fundamentalen Ideen charakterisiert werden.4 Ermittlung der Schlüsselkonzepte des DatenmanagementsUm die Schlüsselkonzepte des Datenmanagements zu ermitteln, muss das Fachgebietunter Beachtung der Entwicklungen der letzten Jahre aufgearbeitet und hinsichtlich derzeitstabilen Relevanz bewertet werden. Während beispielsweise Schwill und Denning ihrenKatalogen eine informelle Charakterisierung der Informatik zugrunde legen, wählen wirim Folgenden einen in zwei Phasen aufgeteilten empirischen Ansatz zur systematischenIdentiﬁzierung der Schlüsselkonzepte.Empirische Ermittlung der Schlüsselkonzepte des Fachgebiets Datenmanagement 159ii“proceedings” — 2017/9/17 — 20:19 — page 160 — #160iiiiii14 Andreas Grillenberger, Ralf Romeike4.1 Phase 1: Fachdidaktische AnalyseIm der ersten Phase soll durch Analyse zentraler fachwissenschaftlicher Literatur einumfassender Überblick über die Themen des Fachgebiets gewonnen werden. Da dies ausfachdidaktischer Perspektive geschehen sollte, konnten bestehende Arbeiten, wie der DataManagement Body of Knowledge [ DA09 ] (DAMA-DMBoK), nicht als alleinige Basisgenutzt werden: Diese beschreiben das Fachgebiet zwar ausführlich, jedoch aus fachlicherSicht und oft stark an der professionellen Nutzung orientiert. Trotzdem können sie als Teil derAnalyse wertvolle Einblicke ins Fachgebiet liefern. Unsere Analyse wurde an den Schrittender qualitativen Inhaltsanalyse nach Mayring [ Ma10 ] orientiert. Aufgrund ihrer speziellenZielsetzung und Aufteilung in zwei getrennte Phasen wurden jedoch einzelne im Sinne derMethodik zulässige Anpassungen vorgenommen, insbesondere durch Zusammenfassungverschiedener Schritte. Die fachdidaktische Analyse wurde daher wie folgt durchgeführt:1.Literaturauswahl: Als Basis für die Analyse wurden sechs anerkannte Fachbücher[Ed11 ,EN09 ,KE15 ,Ku15 ,Pi11,UP14 ] aus dem Fachgebiet sowie der DAMA-DMBoK ausgewählt. Neben tradierten Grundlagenwerken wurden auch solche Werkehinzugezogen, die sich speziell auf jüngere Themen des Datenmanagements beziehen,um auch diese und damit zusammenhängende Aspekte zu berücksichtigen. Obwohl sichder Materialkanon hauptsächlich aus deutschsprachiger Literatur zusammensetzt, wurdeauch die internationale Perspektive berücksichtigt: Bei einem der Lehrbücher handeltes sich um die deutschsprachige Ausgabe eines international anerkannten Fachbuchs[EN09 ]. Außerdem stellt der DAMA-DMBoK die Perspektive der internationalenDatenmanagement-Vereinigung dar. Im Laufe der Analyse konnten keine Abweichungenzwischen deutscher und internationaler Literatur festgestellt werden.2.Entscheidungen zum Kategoriensystem und den Auswahlkriterien: Aufgrunddes Ziels, einen umfassenden Überblick über das Fachgebiet zu gewinnen, ist essinnvoll, das Kategoriensystem durch Analyse der Materialien induktiv aufzubauen.Als Analyseeinheit wurden die vorkommenden Begri  e gewählt, die Themen desDatenmanagements beschreiben. Ihr Kontext wurde dabei insofern berücksichtigt, dassauch dieser aufgenommen wurde, wenn er einen eigenen Aspekt umfasst.3.Analysephase:a)Entwicklung des Kategoriensystems: Dieser Schritt wurde in mehreren Ite-rationen wiederholt durchlaufen. Zuerst wurde der DAMA-DMBoK als Basisgenutzt, da unsere Vermutung war, dass er das Themenfeld gut abdeckt. In dendarau  olgenden Iterationen wurden zusätzliche Quellen hinzugenommen, wobeiab der dritten kaum noch weitere Themen ergänzt wurden. Stattdessen kameneher zusätzliche Details hinzu, die als Unterkategorien aufgenommen wurden. AlsErgebnis entstand ein hierarchisch organisiertes Kategoriensystem, das zentraleThemen des Fachgebiets inklusive einiger Details, die als Subkategorien enthaltensind, beschreibt. Ein Ausschnitt der Ergebnisse wird in Abb. 1 dargestellt.160 Andreas Grillenberger, Ralf Romeikeii“proceedings” — 2017/9/17 — 20:19 — page 161 — #161iiiiiiEmpirische Ermittlung der Schlüsselkonzepte des Fachgebiets Datenmanagement 15b)Clustering: Nach der Entwicklung des Kategoriensystems wurde die umfangrei-che Menge an Begri  en in induktiv gebildeten Gruppen reorganisiert. Dabei konn-te festgestellt werden, dass sich vier Gruppen herausbilden: technische Aspekteder Funktionsweise von Datenmanagementsystemen, Prinzipien, denen Datenma-nagementsysteme gehorchen, Beispiele für Anwendungen von Datenmanagementund Tätigkeiten, die bei Entwurf und Nutzung von Datenmanagementsystemendurchgeführt werden. Ein Einblick in das Clustering ist in Abb. 2 dargestellt.Um in dieser Analysephase einen möglichst hohen Grad an Vollständigkeit sicherzustellen,wurde das Ergebnis mittels einer teilautomatisierten Textanalyse validiert. Aus einemDokumentenkorpus wurden die häuﬁgsten Begri  e automatisch herausgeﬁltert und nachThemen des Datenmanagements händisch durchsucht. Als Basis dienten insbesondereVorlesungsskripte und Folien verschiedener Wissenschaftler, die teils das gesamte Fachgebiet,teils nur einzelne Spezialgebiete abdecken, sowie weitere Lehrbücher und ein Großteil derAusgaben des „Datenbank Spektrums“. Es wurden dafür 305 Dokumente mit 9.447 Seitenbzw. Folien analysiert, die zu über 1.800 einzuordnenden Begri  en (nach Filterung vonMehrdeutigkeiten und Stoppwörtern) führten. Die Ergebnisse wurden mit den vorherigenErgebnissen abgeglichen, indem die häuﬁgsten vorkommenden fehlenden Begri  e demvorher entwickelten Kategoriensystem hinzugefügt wurden. Dabei stellten sich nur solcheDaten-managementModellierungIdeenStruktu-rierungAbstraktionSchl¨ usselModellelogischkonzep-tionellphysikalischTechnikenE/R-DiagrammeFunktionaleAbh.TriggerImplemen-tierungDatenorg-anisationDaten-strukturenKom-pressionAllokationPu↵erAnfragenAnfrage-sprachenTransakt-ionsver-waltungAblaufop-timierungRecoveryMethodenSynchro-nisationReplikationMetadatenParalleli-sierungAnfor-derungenDaten-bestandKonsistentIntegrit¨ atRedundanzSchl¨ ussel-prinzipZugri↵u.Modi-ﬁkationACIDBASEMultiuserSicherheitGeheim-schutzRecoveryBerech-tigungenAnwendungenSpei-cherungVerteilteDBIn-MemoryDBCloud-SpeicherAus-wertungSemanticWebKnowledgeRepre-sentationDataMiningNutzungSuch-maschineneCommerceSozialeMedienAbb. 1: Ausschnitt aus den Ergebnissen des ersten AnalyseschrittsEmpirische Ermittlung der Schlüsselkonzepte des Fachgebiets Datenmanagement 161ii“proceedings” — 2017/9/17 — 20:19 — page 162 — #162iiiiiiAbb. 2: Clustering der zuvor gefundenen Begri  e des Datenmanagementsals fehlend heraus, die das System nicht in der Breite, sondern nur in der Tiefe erweitern.Daher kann ein hoher Vollständigkeitsgrad der Analyseergebnisse angenommen werden.4.2 Phase 2: Ermittlung und Strukturierung der KonzepteIn der zweiten Phase wurden eine Strukturierung der Themen vorgenommen mit demZiel, eine prägnante aber vollständige Charakterisierung des Fachgebiets durch dessenSchlüsselkonzepte zu erhalten. Ein Vergleich der vier beim Clustering herausgebildetenGruppen mit bereits etablierten Arbeiten zeigte, dass insbesondere das Framework der GreatPrinciples of Computing diese Perspektiven abdeckt. Aufgrund der ähnlichen Zielsetzung,der Charakterisierung einer Wissenschaft bzw. eines ihrer Teilbereiche, ist eine Adaptierungdes Modells für die Charakterisierung von Datenmanagement sinnvoll. Die Einordnungder zuvor gefundenen Begri  e in das Modell erfolgte daher anhand folgender auf Denningzurückzuführender Kriterien:•Kerntechnologien stellen konkrete Anwendungen bzw. Technologien dar, die deut-lichen Bezug zu Datenmanagement haben. Sie sind dabei gleichzeitig zentrale For-schungsrichtungen des Fachgebiets.•Praktiken repräsentieren Aktivitäten und Methoden, die dem Datenmanagementzuzuordnen sind und stellen gleichzeitig Kompetenzen dar, die zur Nutzung und/oderEntwicklung von Datenmanagementsystemen notwendig sind.•Entwurfsprinzipien sollten beim Entwurf von Datenmanagementsystemen berück-sichtigt werden. Zusätzlich können sie auch für die Entscheidung genutzt werden, obein System für einen konkreten Anwendungsfall geeignet ist.•Funktionsprinzipien stehen für die grundlegende Funktionsweise von Datenmanage-mentsystemen und sind insbesondere bei deren Implementierung relevant.162 Andreas Grillenberger, Ralf Romeikeii“proceedings” — 2017/9/17 — 20:19 — page 163 — #163iiiiiiDateispeicher, Datenbanken, Datenstromsysteme, Datenanalysen, Semantic Web, DokumentenspeicherKerntechnologien•Datenerfassung/-gewinnung•Datenbereinigung•Modellierung•Implementierung•Optimierung•Analyse•Visualisierung•Evaluation•Austausch•Archivierung•LöschungPraktiken•Datenunabhängigkeit•Integrität•Konsistenz•Isolierung•Dauerhaftigkeit•Verfügbarkeit•Partitionstoleranz•Konkurrenz•RedundanzEntwurfsprinzipien•Strukturierung•Repräsentation•Replikation•Synchronisation•Partitionierung•Transport•TransaktionFunktionsprinzipienAbb. 3: Modell der Schlüsselkonzepte des Datenmanagements5 Modell der Schlüsselkonzepte des DatenmanagementsDie beiden Phasen resultierten in einem Modell der Schlüsselkonzepte des FachgebietsDatenmanagement (vgl. Abb. 3). In den Kerntechnologien spiegeln sich die Fortschritteim Datenmanagement gegenüber dem ursprünglichen Fachgebiet Datenbanken wider, aberauch zentrale Forschungsrichtungen des Fachgebiets: Dies sind derzeit Dateispeicher,Datenbanken, Datenstromsysteme, Datenanalysen, Semantic Web und Dokumentenspeicher.Wie bei Denning ist zu erwarten, dass zukünftig weitere Kerntechnologien hinzukommen.DiePraktiken entsprechen den Aktivitäten und Methoden, die im Kontext von Datenma-nagement notwendig sind. Dies schließt die Gewinnung und Bereinigung von Daten, dieDatenmodellierung, Implementierung und die Optimierung, Analyse und Visualisierungvon Daten sowie die Evaluation der Analyseergebnisse, aber auch den Austausch undschlussendlich die Archivierung bzw. Löschung von Daten mit ein.Bei der Entwicklung und Nutzung von Datenmanagementsystemen müssen die folgendenEntwurfsprinzipien beachtet werden:•Datenunabhängigkeit , d. h. die Abstraktion zwischen interner Repräsentation vonDaten und ihrer Schnittstelle nach außen.•Sicherstellung der Integrität und der Konsistenz von Datenbeständen.•Isolierung undDauerhaftigkeit von Änderungen im Datenbestand.•Verfügbarkeit von Daten, d. h. geeignete und schnelle Zugri  smöglichkeiten.•Partitionstoleranz , d. h. Toleranz gegenüber Ausfällen von Teilen eines verteiltenDatenspeichers.•Konkurrenz von Anfragen in Datenmanagementsystemen und Datenanalyseprozessenbei nebenläuﬁgem Zugri  .•(Vermeidung oder Nutzung von) Redundanz in Datenbeständen.Empirische Ermittlung der Schlüsselkonzepte des Fachgebiets Datenmanagement 163ii“proceedings” — 2017/9/17 — 20:19 — page 164 — #164iiiiii18 Andreas Grillenberger, Ralf RomeikeDie grundlegende Funktionsweise von Datenmanagementsystemen basiert auf folgendenFunktionsprinzipien :•Strukturierung von Daten (z. B. durch Metadaten oder Indizes), um auf diese schnellund e  zient zugreifen zu können.•Repräsentation , d. h. Methoden und Techniken zur Speicherung von Daten, beispiels-weise (interne) Datenstrukturen.•Replikation undPartitionierung , d. h. mehrfache und/oder verteilte Speicherung vonDaten über mehrere Datenspeicher hinweg.•Synchronisation von gleichzeitigen bzw. konkurrierenden Zugri  en auf Daten.•Transport von Daten, der die Übertragung von Daten, aber auch die Übertragungssi-cherheit einschließt.•Transaktionen , die insbesondere zur Erhöhung der Fehlertoleranz eingesetzt werden.6 Anwendung und Relevanz für den InformatikunterrichtDas Modell der Schlüsselkonzepte des Datenmanagements liefert einen umfangreichenÜberblick über dessen zentrale Konzepte aus Sicht relevanter Technologien, Praktikenund Prinzipien. Es ist klar erkennbar, dass das Fachgebiet eine große Vielfalt an Themenumfasst, die im Unterricht bisher allenfalls am Rande betrachtet werden. Trotzdem habendiese Themen und die damit in Verbindung stehenden Kompetenzen im Zusammenhang mitder zunehmenden Bedeutung von Datenmanagement auch im Alltag eine hohe Relevanzfür den Informatikunterricht. Das Modell eignet sich damit insbesondere, um bei derUnterrichts- oder Curriculumsentwicklung zu untersuchen, welche Aspekte des Fachgebietsdurch ein Unterrichtsthema abgedeckt werden können bzw. sollen. Exemplarisch kann hierdas Thema Datenstromsysteme [ GR15a ] herangezogen werden, das auch schon außerhalbder Informatik und Informatikdidaktik zunehmend Aufmerksamkeit erhält (vgl. [ Tu16 ]):Datenstromsysteme werden zur Echtzeitverarbeitung immer größerer Datenmengen ein-gesetzt und machen deutlich, wie sich die Grenzen im Datenmanagement gegenüber denvor einigen Jahren noch relativ zeitaufwändigen Datenanalysen verschoben haben. DiesesThema umfasst insbesondere folgende Schlüsselkonzepte:Kerntechnologie: DatenstromsystemePraktiken: Datenerfassung/-gewinnung, Datenbereinigung, AnalyseEntwurfsprinzipien: Verfügbarkeit, KonkurrenzFunktionsprinzipien: Strukturierung, Repräsentation, TransportDie Betrachtung des Themas Datenstromsysteme aus der Perspektive des Modells derSchlüsselkonzepte von Datenmanagement hilft, die zentralen Konzepte des Themas zuerkennen und im Unterricht einen Schwerpunkt auf diese zu legen.Im Vergleich mit dem zentralen Thema „Datenbanken“ im aktuellen Informatikunter-richt zum Thema Daten ist die unterschiedliche Ausprägung der Schlüsselkonzepte desDatenmanagements in beiden Systemen klar erkennbar:164 Andreas Grillenberger, Ralf Romeikeii“proceedings” — 2017/9/17 — 20:19 — page 165 — #165iiiiiiEmpirische Ermittlung der Schlüsselkonzepte des Fachgebiets Datenmanagement 19Kerntechnologie: DatenbanksystemePraktiken: Modellierung, Implementierung, Optimierung, AnalyseEntwurfsprinzipien: Datenunabhängigkeit, Integrität, Konsistenz, RedundanzFunktionsprinzipien: Strukturierung, Repräsentation, TransaktionWährend bei Datenstromsystemen die Echtzeitdatenverarbeitung zentral ist, setzen Datenban-ken den Fokus auf strukturierte Speicherung. Beide vorgestellte Themen sind exemplarischfür das Fachgebiet und verdeutlichen, dass verschiedene Schlüsselkonzepte sich als roteFäden durch dieses ziehen, aber unterschiedlich ausgeprägt sind. Das Modell kann damitzu einer Fokussierung auf die zentralen Aspekte beitragen, liefert einen Überblick überzentrale Begri  e des Fachgebiets und kann als Zugang zu diesem herangezogen werden.7 FazitIn diesem Beitrag wurde eine empirische Vorgehensweise zur systematischen Ermittlung derSchlüsselkonzepte eines Fachgebiets vorgestellt. Durch Anwendung auf das Fachgebiet Da-tenmanagement konnten wir ein Modell der Schlüsselkonzepte dieses Fachgebiets erstellen,das durch die vier Kategorien Kerntechnologien, Praktiken, Entwurfs- und Funktionsprin-zipien die zentralen Aspekte des Fachgebiets betont. Vergleicht man dieses Modell mitdenGreat Principles of Computing [De03 ], so zeigt sich, dass es an verschiedenen Stelleneine Spezialisierung der Great Principles darstellt: Beispielsweise wird das von Denninggenannte Entwurfsprinzip Sicherheit im Datenmanagement durch die EntwurfsprinzipienIntegrität ,Verfügbarkeit undIsolierung konkretisiert. Betrachtet man die Kriterien, dieSchwill an fundamentale Ideen der Informatik stellt [ Sc93 ], lässt sich vermuten, dass dieermittelten Schlüsselkonzepte repräsentativ für fundamentale Ideen stehen: Einerseits sindsie in verschiedenen Bereichen des Fachgebiets, aber häuﬁg auch darüber hinaus, relevantund erfüllen somit das Horizontalkriterium. Ebenso scheint auch das Vertikalkriteriumerfüllbar, wie beispielsweise durch die Aufarbeitung des Themas Datenstromsysteme alsUnterrichtsbeispiel [ GR15a ] gezeigt wurde. Durch den Alltagsbezug der Konzepte wirdauch das Sinnkriterium adressiert, durch die langjährige Relevanz der meisten Aspekte auchdas Zeitkriterium. Trotzdem unterscheiden sich die dargestellten Schlüsselkonzepte vonden Ideen: Während letztere die Urbilder bezeichnen, aus denen informatische Phänomeneentstehen, sind die Konzepte auf einer konkreteren Ebene angesiedelt und beschreibenGesetzmäßigkeiten, Funktionsweisen und Vorgehensweisen im Datenmanagement.Während sich Informatikunterricht im Bereich „Daten“ bisher auf Datenbanken konzen-triert, verdeutlichen die Schlüsselkonzepte die Vielfalt von Datenmanagement. Durch diestrukturierte Darstellung kann das Modell einen deutlichen Beitrag zur Curriculums- undUnterrichtsgestaltung liefern, und als Basis für die weitere Forschung eingesetzt werden.Wie exemplarisch gezeigt wurde, eignet sich das Modell, um Themen des Datenmanage-ments hinsichtlich der enthaltenen Konzepte zu untersuchen. Für die Schule ergeben sichverschiedene Vorteile: Zum einen wird das Fachgebiet strukturiert und der Kompetenz-erwerb konkretisiert, zum anderen liefern die Schlüsselkonzepte konkrete Begri  e, dieden fundierten Gebrauch der Fachsprache unterstützen. Die vorgestellte HerangehensweiseEmpirische Ermittlung der Schlüsselkonzepte des Fachgebiets Datenmanagement 165ii“proceedings” — 2017/9/17 — 20:19 — page 166 — #166iiiiii20 Andreas Grillenberger, Ralf Romeikezur Ermittlung der Schlüsselkonzepte konnte damit am Fachgebiet Datenmanagementerfolgreich angewandt werden und scheint auch bezogen auf andere Gebiete der Informatikund möglicherweise darüber hinaus erfolgversprechend.Literaturverzeichnis[DA09] DAMA International: The DAMA Guide to the Data Management Body of Knowledge -DAMA-DMBOK. Technics Publications, LLC, USA, 2009.[De03] Denning, P. J.: Great Principles of Computing. Commun. ACM, 46(11):15–20, 2003.[Ed11] Edlich, S. et al.: NoSQL. Hanser Fachbuchverlag, 2011.[EN09] Elmasri, R. A.; Navathe, S. B.: Grundlagen von Datenbanksystemen. Pearson Studium, 2009.[GR14a] Grillenberger, A.; Romeike, R.: A Comparison of the Field Data Management and itsRepresentation in Secondary CS Curricula. In: Proceedings of WiPSCE 2014. ACM, Berlin,2014.[GR14b] Grillenberger, A.; Romeike, R.: Teaching Data Management: Key Competencies andOpportunities. In: Proceedings of KEYCIT 2014. Universitätsverlag Potsdam, 2014.[GR15a] Grillenberger, A.; Romeike, R.: Big-Data-Analyse im Informatikunterricht mit Datenstrom-systemen: Ein Unterrichtsbeispiel. In: Praxisband INFOS 2015. 2015.[GR15b] Grillenberger, A.; Romeike, R.: Big Data im Informatikunterricht: Motivation und Umset-zung. In: INFOS 2015. Lecture Notes in Informatics (LNI). Köllen, Bonn, 2015.[KE15] Kemper, A.; Eickler, A.: Datenbanksysteme. Gruyter, Walter de GmbH, 2015.[Ku15] Kudraß, T.: Taschenbuch Datenbanken. Hanser Fachbuchverlag, 2015.[Ma10] Mayring, P.: Qualitative Inhaltsanalyse: Grundlagen und Techniken. Beltz, 2010.[Mo03] Modrow, E.: Fundamentale Ideen der theoretischen Informatik. In: Informatische Fachkon-zepte im Unterricht, INFOS 2003. S. 189–200, 2003.[MS16] Modrow, E.; Strecker, K.: Didaktik der Informatik. Oldenbourg, 2016.[Pi11] Piepmeyer, L.: Grundkurs Datenbanksysteme. Hanser Fachbuchverlag, 2011.[Sc93] Schwill, A.: Fundamentale Ideen der Informatik. Zentralblatt für Didaktik der Mathematik,25(1), 1993.[Tu16] Tulodziecki, G.: Konkurrenz oder Kooperation? Zur Entwicklung des Verhältnisses vonMedienbildung und informatischer Bildung. MedienPädagogik: Zeitschrift für Theorie undPraxis der Medienbildung, 25(0), 2016.[UP14] Unland, R.; Pernul, G.: Datenbanken im Einsatz. de Gruyter, Oldenbourg, 2014.[ZS06] Zendler, A.; Spannagel, C.: Zentrale Konzepte im Informatikunterricht: eine empirischeGrundlegung. Notes on Educational Informatics—Section A: Concepts and Techniques,2(1):1–21, 2006.[ZSK07] Zendler, A.; Spannagel, C.; Klaudt, D.: Zentrale Prozesse im Informatikunterricht: eineempirische Grundlegung. Notes on Educational Informatics—Section A: Concepts andTechniques, 3(1):1–19, 2007.166 Andreas Grillenberger, Ralf Romeikeii“proceedings” — 2017/9/17 — 20:19 — page 167 — #167iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum V erstehen und Gestalten der digitalen Welt ,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017    15 Entwicklung eines Datenschutzkompetenzmodells   Alexander Hug1, Rüdiger  Grimm2  Abstract:  Zur Beschreibung der Fähigkeit im Umgang mit (digitalen ) Medien  haben Six  und Gimmler ein Medienkompetenzmodell veröffentlicht [SGG07] . Darin fehlen Punkte wie Risikobewertung und Vermeidungsstrategie , die u nter dem Gesichtspunkt des Datenschutzes besonders zu beachten sind . Risikobewertungen können nach den Regeln der IT -Sicherheit vorgenommen und mithilfe  des Vert rauensmodells von Mayer, Davis und Schoorman [MDS95]  explizit gemacht  werden . In diesem Artikel wird das Medien kompetenz modell zu einem begründeten Datenschutzkompetenzmodell erweitert. Dabei erfolgt die Risikobewertung über ausgewählte Dimensionen des Medien kompetenzmodells. Ein derart e rweitertes Modell liefert eine fachdidaktisch begründete Vorlage zur Messung der Risiko bewertung bei Schülerinnen und Schülern in Bezug auf die Wahrung ihrer Privatsphäre.  Keywords: Datenschutz, Datenschutzkompetenzmodell, Medienkompetenzmodell, Vertrauen s-modell, Referenzmodell IT -Sicherheitsanalyse  1 Internetnutzung als ein Zusammenspiel zwischen Selbstkontrolle und Vertrauen  Die Nutzung des Internets ist ohne eine Kooperation mit verschiedenen Parteien  (Softwareherstellern, Providern, Dienstanbietern) , de nen man Vertrauen entgegenbringen muss, nicht möglich. In [GB15]  wird Vertrauen definiert „als eine Bereitschaft des Trustors  [des Vertrauensnehmers] , eine riskante Handlung in einem Kontext zu unternehmen, die er nicht vollständig kontrolliert, in der Erwartung, dass der Trustee [der Vertrauensgeber] diesen kontrolliert und den Trustor darin schützt.“   Das Zusammenspiel zwischen Trustor und Trustee wird durch das Modell von Mayer, Davis und Schoorman beschrieben [MDS95] . Der Nutzer (Trustor) schenkt den Anbietern (Trustees) aufgrund deren Kompetenz, deren Wohlwollen und deren Integrität sein Vertrauen. Liegt nun ein zu erwartendes Risiko vor, dann wird dieses in die Vertrauensbeziehung mit aufgenommen. Aufgrund der Wirk ung der Ergebnisse dieser Vertrauensbeziehung wächst oder fällt mit der Zeit das Vertrauen, da die Ergeb nisse wiederum die wahrgenommene Vertrauenswürdigkeit des Trustees darstellen. Dies stellt ein rückkoppelndes Element dar.  Handlungen, die im Zusammenh ang mit der Internetnutzung vollzogen werden, sind risikobehaftet. Bevor der Nutzer den Trustees Vertrauen schenkt, muss er das Risiko                                                            1 Universität  Koblenz -Landau , FB Informatik , Universitätsstr. 1 , 5607 0 Koblenz , hug@uni -koblenz.de  2 Universität Koblenz -Landau, FB Informatik , Universitätsstr. 1, 5607 0 Koblenz, grimm@uni -koblenz.de  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 167ii“proceedings” — 2017/9/17 — 20:19 — page 168 — #168iiiiii 16    Alexander Hug und Rüdiger Grimm  wahr nehmen und bewerten. Mit Hilfe des Referenzmodells für ein Vorgehen bei der IT -Sicherheitsanalyse [Gr16]  kann eine Bewertung vorgenommen werden. Es ist in erster Linie für die Entwickler von Sicherheitssystemen gedacht und kann in abgewandelter Form auch zur Einschätzung eines Nutzungsrisikos genutzt werden. Bei dieser Abwandlung werden nur die datenschutzr elevanten Aspekte und Kriterien des  vierschrittigen  Modells benutzt.  Im ersten Schritt , der sog. Ist -Analyse , sind die Güter in diesem Fall die persönlichen Daten . Als Akteure gelten der Nutzer, die Administratoren der Netzwerke, die Dienstanbieter und le tztendlich auch die Personen, die unbefugt in den Prozess des Datenaustauschs eingreifen. Interessenkonflikte können in dem, was der Nutzer erwartet, und dem, was sich die anderen Kommunikations teilnehmer wünschen , entstehen . Schwachstellen im System könne n durch eine falsche Konfiguration der Hard - und Software, durch Fehler in der Software, aber auch durch Missachtung von Verhaltensregeln entstehen.  Der zweite Schritt ist die  Potenzial -Analyse. Be drohungen als mögliche Folge von Angriffen (z.  B. auf das  Endgerät des Nutzers und auf den Kommunikationsprozess) sind z. B. eine Fremdsteuerung des eigenen Geräts, Datenverlust (etwa durch Diebstahl von Kreditkartendaten), das unbefugte Mitlesen von Kommunikation oder eine zweckfremde Nutzung von veröffentlicht en Daten in sozialen Netzwerken. Dies bedeutet im letzten Fall konkret, dass aufgrund aggregierter Daten aus dem Profil, der Zeitleiste, den Chat -Verläufen, usw. entweder ein falsches Profil des Nutzers entstehen kann oder das Profil stimmig ist, aber der Nutzer aufgrund anschließender Einflussnahme des Betreibers unerwünschte Werbung, Spam -Mails o.  Ä. erhält. Das Risiko ist daher immer in Bezug auf die schützenswerten Güter  zu bemessen. Im Falle der personenbezogenen Daten ist ihr Bedrohungsrisiko je nach Datenart und nicht immer direkt monetär zu beziffern. Schwachstellen, die hier ausgenutzt werden können, sind zu leichte Zugänge zu den Servern (z.  B. durch schwache Passwörter), unzureichend geschützte Zugänge zu den Daten (offene Netze) und das Nutzerver halten (z.  B. der Verzicht kryptografischer Verfahren). Die An forderung eines Schutzes an Privatheit lässt sich so in folgende funktionale Sicherheits anforderungen zerlegen: Vertraulichkeit  und Zweckbindung  der Daten , sowie Vertrauenswürdigkeit der anderen Parteien und eine funktionsintegre Verfüg barkeit der Daten.  Im nächste n Schritt  wird ein Sicherheitskonzept  entwickelt.  Eine erste Sicherheitsmaß -nahme ist die Nutzung von starken Passwörtern, von Verschlüsselung beim Mailen , Chatten und im Web . Ferner sollte der Nutzer durch Kenntnis der Datenschutzprinzipien darauf achten, dass er nur ausgewählte Inhalte kommuniziert und diese mit Bedacht weitergibt. Weiterhin sind Sicherheitseinstellungen vor zunehmen und Schutzmechanismen zu nutzen, etwa alterna tive Suchmaschinen oder das regelmäßige Löschen von Cookies und de s Browserverlauf s.  Der letzte Schritt  ist die Installation eines Sicherheitskonzepts . Es  dient dem Internetnutzer , diejenigen Sicherheitsmechanismen des Selbstdatenschutzes 168 Alexander Hug, Rüdiger Grimmii“proceedings” — 2017/9/17 — 20:19 — page 169 — #169iiiiii Datenschutz und Informatikunterricht     17 auszuwählen , die ihm ein adäquates Sicherheits niveau bieten. Dabei muss er das verbleibende Restrisiko erkennen , akzeptieren und entscheiden , inwieweit er den Partnern, von denen er dann noch abhängt, vertrau t. Hier ist die Handlungsfähigkeit in der Datenschutz kompetenz gefragt.  2 Von der Risikobewertung i n eine m Medienkompetenzmodell zu einem Datenschutzkompetenzmodell  In [SGG07]  stellen Six und Gimmler ein Medienkompetenzmodell vor, das – wie Gimmler in [Gi12]  schon zeigt – Datenschutzkompetenz in einem ge wissen Maß zu beschreiben  vermag . Aber eine Betrachtung des Risikos bei der Internet nutzung unterbleibt  an dieser Stelle . Folgende Dimensionen aus dem Medienkompetenzmodell spielen bei der Risiko bewertung eine Rolle:  Hintergrundwissen  ist notwendig, da zur Abschätzung des Risikos der Internetnutzung die möglichen Schadensursachen und ihrer Gegenmittel ja bekannt sein müssen . Die Nutzung alternativer Softwareprodukte, z. B. alternati ver Suchmaschinen  und Verschlüsselungs methoden , und die eigene Entscheidung über die Datenpreisgabe sind Datenschutz maßnahmen, die der Nutzer ergreifen kann , wenn er sie kennt . Ferner zählen wir zu dieser Dimension auch das Wissen über die Prinzipien des  Datenschutzes und deren Bedeutung und Anwendung.  Der Selbstdatenschutz verlangt Orientierungswissen, weil der Nutzer die Funktionen der Angebote verstehen muss. Er muss in der Lage sein, diese Funktionen in der Anwendungsumgebung, in der er sich befindet , sicher und wirkungsgemäß auszuführen.  Der Nutzer kennt die Angebote , kann die angemessenen auswählen  und setzt sie aus dieser Orientierungssicherheit heraus situationsgerecht ein. Ferner kennt er Möglichkeiten, um sich weitere und neue Informationen zu e rschließen.  Zur Urteilskompetenz zählt die Fähigkeit, d ie Angebote im Internet zu kennen und deren Wirkung zu beurteilen. Zusätzlich  muss sich der Nutzer bei der Abwägung des Risikos ein Urteil  über die Vertrauens würdigkeit der anderen Kommunikationstei lnehmer bilden . Auf der Basis der Urteilsentscheidung nimmt der Nutzer das Angebot an oder lehnt es ab .  Durch die Auswahl - und Nutzungskompetenz  kommt der Nutzer zu der „selbstbestimmten, zielorientierten und reflektierten Auswahl und Nutzung“ [Gi12]  des Internetangebots. In risikobehafteten Situationen urteilt der Nutzer, ob er das Risiko eingehen wird oder nicht. Durch die passende Auswahl und Nutzung von Schutzmechanismen kann der Nutzer das Risiko minimieren .  Die Dimensionen des Medienkompetenzmodells  sind nicht völlig unabhängig voneinander (bspw. Aspekte von Urteil und Orientierung), daher ist es hilfreich, einzelne Kompetenzaspekte mehrfach zuzuordnen. Die auf die ausgewählten Dimensionen des Entwicklung eines Datenschutzkompetenzmodells 169ii“proceedings” — 2017/9/17 — 20:19 — page 170 — #170iiiiii 18    Alexander Hug und Rüdiger Grimm  Medienkompetenzmodells angewendete Risikointerpretation f ührt zu einer Erweiterung des Modells, welches als Datenschutz kompetenzmodell aufgefasst werden kann. Damit definieren wir  Datenschutzkompetenz als den Zusammenschluss von Hintergrundwissen, Orientierungswissen, Urteilskompetenz, Handlungs - und Nutzungsko mpetenz, Risikobewertungskompetenz und die Anwendung von Handlungsmustern  mit Bezug auf das schützenswerte Gut der pers önlichen  Daten .  3 Zusammenfassung und Ausblick  Eine datenschutzbewusste Internetnutzung ist gekennzeichnet durch die bewusste Ausübung des  Selbstdatenschutzes im Rahmen des wahr genommenen bestehenden Systemdatenschutzes und seiner Vertrauenswürdigkeit  bei gleichzeitig  kompetente r Abwägung des Restrisikos. Aufgrund des Medienkompetenzmodell s von Six /Gimmler  [SGG07] , das  Teilkompetenzen bzgl.  des Datenschutz es aufzeig t, aber Risikobewertung auße r Acht lässt, wurde das Modell zu einem Daten schutzkompetenzmodell erweitert . Die Validität dieses Modells soll im Rahmen einer weiteren Forschung untersucht werden. Auf Basis der Modellvorlage wird ein e Schülerbefragung mit dem Schutz der Privatsphäre als Schwerpunkt durchgeführt, sodass aufgrund dieser Ergebnisse später konkrete Handlungsempfehlungen für Unterrichtsinhalte entwickelt werden . 4 Literaturverzeichnis  [GB15]  Grimm, R.; Bräunlich, K.:  Vertrauen und Privatheit. Anwendung des Referenzmodells für Vertrauen auf die Prinzipien des Datenschutzes. In Datenschutz und Datensicherheit - DuD, 2015, 39; S. 289 –294. [Gi12]  Gimmler, R.:  Medienkompetenz und Datenschutzkompetenz in der Schule. In Datenschutz und Datensicherheit - DuD, 2012, 36; S. 110 –116. [Gr16]  Grimm, R. et al.:  Referenzmodell für ein Vorgehen bei der IT -Sicherheitsanalyse. In Informatik -Spektrum, 2016, 39; S. 2 –20. [MDS95]  Mayer, R. C.; Davis, J. H.; Schoorman, F. D.:  An Integrative Model of Organizational Trust. In Academy of Management Review, 1995, 20; S. 709–734. [SGG07]  Six, U.; Gleich, U.; Gimmler, R. Hrsg.:  Kommunikationspsychologie -- Medienpsychologie. Lehrbuch. Bel tzPVU, Weinheim, 2007.  170 Alexander Hug, Rüdiger Grimmii“proceedings” — 2017/9/17 — 20:19 — page 171 — #171iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 1Vom Flaggenalphabet zur Vorratsdatenspeicherung:Schülerinnen und Schüler als Multiplikatoren technischerAspekte der digitalen WeltKlaus-Tycho Förster1Abstract: Im Nachrichtenalltag existieren viele kontroverse informatische Phänomene wie etwa dieGesundheitskarte, Internetsperren oder die Vorratsdatenspeicherung. Bei Berichten oder Diskussionenüber die Thematiken fällt zumeist auf, dass zwar über den informatischen Kontext gesprochen, daszur Beurteilung benötigte technische Wissen jedoch eher ignoriert, teilweise sogar sachlich falschverwendet wird. Durch informatisch-technische Bildung erhalten Schülerinnen und Schüler dieMöglichkeit, zumindest in ihrem lokalen Umfeld als Multiplikatoren dieser Aspekte zu wirken. DieVerbindung von Informatik und Gesellschaft unter technischen Aspekten im Informatikunterrichtist dabei natürlich kein neuartiges Konzept. Dennoch möchte die vorgestellte mehrfach praktisch imSchulalltag erprobte Unterrichtssequenz einen kurzen Vorschlag liefern, wie dieses für die Thematikder Vorratsdatenspeicherung im Rahmen der Behandlung von Computernetzen durchgeführt werdenkönnte.Keywords: Computernetzwerke, Vorratsdatenspeicherung, technische Aspekte der Informatik1 Schülerinnen und Schüler als lokale MultiplikatorenDie Idee der kontextorientierten Unterrichtsorganisation ist ein neues altes Unterrichts-paradigma (vergl. [ Ko]) zur Herstellung des Lebensweltbezuges im Informatikunterricht.Unter dem Oberbegri  Informatik im Kontext (IniK) werden dabei diverse Thematikenaufgegri  en, siehe dazu etwa etwa [ DKW11 ] und [ DD11 ]. Der Lebensweltkontext soll dabeinach Diethelm, Koubek und Witten auch das Kriterium erfüllen, dass er geeignet für „ Abend-brotgespräche mit den Eltern ist “[DKW11 ]. Daher bietet sich eine Multiplikatoren-Rolleder Schülerinnen und Schüler aus dem Informatikunterricht heraus an.Bei anderen schulischen Fächern zuordenbaren Phänomenen, wie z.B. der Nuklearka-tastrophen von Fukushima und Tschernobyl, haben Eltern zumeist aus ihrer eigenenLebenserfahrung bzw. ihrer (Schul-)Bildung einen Wissensvorsprung gegenüber ihren Kin-dern in der Sekundarstufe, der neben den gesellschaftlichen auch die technischen Aspekteumfasst. In Bezug auf technische Aspekte der Informatik bei tagesaktuellen Phänomenendreht sich diese althergebrachte Rollenverteilung jedoch oft um.1Aalborg University, Department of Computer Science, Selma Lagerlöfs Vej 300, DK-9220 Aalborg, Denmark,ktfoerster@cs.aau.dk. Klaus-Tycho Foerster is supported by the Danish Villum Foundation.I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 171ii“proceedings” — 2017/9/17 — 20:19 — page 172 — #172iiiiii2 Klaus-Tycho FörsterSofern die Eltern nicht ein erhebliches fachliches Interesse an der Informatik zeigen,begegnet ihnen der technische Hintergrund nur in alltäglichen Zusammenhängen, wieetwa in Nachrichten, Zeitungsartikeln oder Diskussionssendungen in Radio und Fernsehen.Dabei ist ohne Vorkenntnisse nur schwer zu überprüfen, ob geführte Argumentationskettenoder (anscheinend) fachliche Aussagen auch der Realität entsprechen. Die gesellschaftli-chen Implikationen sind nachvollziehbar, basieren aber gegebenenfalls auf verfälschteninformatischen Annahmen.Auf Grund der teilweisen Rollenumkehr ist es rein mit technischen Argumenten für Schü-lerinnen und Schüler der Sekundarstufe I eher schwierig, mit ihren Eltern gemeinsamüber informatische Phänomene zu diskutieren. Auch bei Kenntnis der Positionen diversergesellschaftlicher Gruppierungen und Interessenverbänden liegt eine Akzeptanz der ent-gegengesetzten Meinung durch die Schülerinnen und Schüler nicht unbedingt vor, diesergegenseitige Respekt ist für eine Diskussion jedoch unabdingbar: Teilweise kommt es zu derKollision von technischem Optimismus und gesellschaftlichem Pessimismus. Ein aktivesErleben und Nachvollziehen der Meinungsbildung scheint daher unerlässlich für eine aktiveMultiplikatoren-Rolle der Schülerinnen und Schüler gegenüber ihrem lokalen Umfeld.In anderen Schulfächern, wie etwa Sozialkunde oder Politik, wird dazu im Vergleich zurInformatik häuﬁger die Methode der Podiumsdiskussion eingesetzt. Anhand durch dieLehrkraft vorbereitetes oder durch die Schülerinnen und Schüler gesuchtes Quellenmaterialwerden Positionen vorher deﬁnierter Gruppen ausgearbeitet, die in einem Rollenspielähnlich einer Talkshow ausdiskutiert werden. Dabei wird auch das Publikum aktiv einge-bunden: „ Diese Art von Rückkopplung dient dazu, die Klassen stärker in die Diskussionmiteinzubeziehen und den Realitätsbezug der Positionen zu erhöhen “ [Bu04].Natürlich wird die Methode des Rollenspiels auch im Informatikunterricht schon seitlängerem verwendet, z.B. zur Simulation einer CPU [ Gi] oder der Einführung der objektori-entierten Modellierung [ Di07 , S.86  ]. Für eine weitergehende Betrachtung der Thematiksiehe etwa [ Fo07 ]. Die Methode des Rollenspiels scheint jedoch in der Fachliteratur zumeistauf eher technische bzw. algorithmische Aspekte der Informatik angewandt zu werden.2Vorratsdatenspeichung im technischen Bezug von ComputernetzenEs stellt sich dabei die Frage, warum diese Multiplikatoren-Rolle für die Vorratsdaten-speicherung insgesamt in einem Informatikunterricht behandelt werden muss. Man könntemeinen, dass man die physikalischen Grundlagen der Nachrichtenübermittlung auch inPhysik, nur die benötigten Netzelemente in Informatik und dann abschließend davon ge-trennt die gesellschaftlichen Auswirkungen in einer Podiumsdiskussion im Politik- bzw.Sozialkundeunterricht vermitteln kann. Insbesondere in Bezug auf die gesellschaftlichenAspekte lässt sich diese Auslagerung in andere Fächer nach Schubert und Schwill jedochnicht vornehmen:172 Klaus-Tycho Försterii“proceedings” — 2017/9/17 — 20:19 — page 173 — #173iiiiiiVom Flaggenalphabet zur Vorratsdatenspeicherung 3„Ethische und rechtliche Regelungen spielen in diesem Unterrichtsgegenstand eine großeRolle. Wenn sich Informatiklehrer dieser Aspekte nicht annehmen, gehen die fachlichenBezüge im Lernprozess verloren. Man kann sicher in anderen Fächern darüber sprechen, aberkaum Verständnis für die komplexen Zusammenhänge entwickeln. Die Wirkungsprinzipiender Internet-Architektur bilden die kognitive Basis für das Verstehen der kompliziertenUmsetzung der Gesetzgebung. “ [SS04, S.267f.].Ein eigenes Erfahren und Erforschen durch die Schüler ist dabei sicherlich sinnvoll, „ weildie Lernenden eher an den Werkzeugen und Anwendungsbeispielen, vor allem aber ameigenen Tun interessiert sind als an den Fachinhalten “ [Mo03, S.189].Die Schülerinnen und Schüler für die technische Beherrschung und gesellschaftliche Beur-teilung von Computernetzen zu befähigen, wird bei der Konzeption von Informatikunterrichtin Zukunft sicherlich eine immer wichtiger werdende Rolle spielen, denn die Frage „ Wiekommunizieren zwei Rechner miteinander? “ ist nach Aussage von Hubwieser von hoherallgemein bildender Bedeutung [ Hu07 , S.245]. Schubert und Schwill verweisen ebenfallsdarauf, dass im Falle der Informations- und Kommunikationssysteme der Bildungswertsehr hoch eingeschätzt werden muss, da diese Systeme unter anderem folgendes Ziel fürSchüler ermöglichen: „ Sie verstehen die Wirkprinzipien von Rechnernetzen und verteiltenSystemen, der Basistechnologie neuer gesellschaftlicher Entwicklungen “[SS04 , S.255].Es sollte daher während der schulischen Ausbildung rechtzeitig und regelmäßig bei denSchülerinnen und Schülern gesorgt werden für die§3.1 Präzisierung des Begri  es der Kommunikation und Analyse ihrer Komponenten§3.2 Entwicklung eines technischen Grundverständnisses über Aufbau und Funktion vonComputernetzen§3.3 Fähigkeit zur sachgerechten Beurteilung der Vorteile und Risiken der Kommunikationin ComputernetzenAufbauend auf diesen Kompetenzen kann eine gesellschaftliche Einordnung des Phänomensder Vorratsdatenspeicherung unter Berücksichtigung technischer Aspekte (§3.4) im Informa-tikunterricht durch die Schülerinnen und Schüler im Rahmen etwa einer Podiumsdiskussiongeleistet werden . Ohne die vorherige technische Grundlagenlegung in (§3.1 - §3.3) kanndie komplexe Thematik der Vorratsdatenspeicherung von den Schülerinnen und Schülernnicht adäquat beurteilt werden, sie sind ein notwendiger Baustein.Ein kurzer Vorschlag für eine mögliche Umsetzung der Thematik wird dazu im nächstenAbschnitt gegeben. Er basiert auf einer mehrfach durchgeführten Unterrichtssequenz imUmfang von ca. 4 Doppelstunden, welche im Informatikunterricht der 9. Klasse gehaltenwurde. Die Doppelstundenthemen ergeben sich aus dem obigen Aufbau:§3.1 Wie funktioniert Kommunikation?§3.2 Wesentliche Aspekte eines Computernetzes§3.3 Untersuchung von Eigenschaften eines Computernetzes§3.4 Auswirkungen der VorratsdatenspeicherungVom Flaggenalphabet zur Vorratsdatenspeicherung 173ii“proceedings” — 2017/9/17 — 20:19 — page 174 — #174iiiiii4 Klaus-Tycho FörsterNatürliche Erweiterungen ergeben sich durch ausführlichere Behandlung der Anonymitätin Computernetzen und der Planung von Computernetzen für diverse Anwendungsfälle.Weiteres Beispielmaterial und vorläuﬁge Ausführungen ﬁnden sich in [Fo10].3 Ein praktischer Durchführungsvorschlag3.1 Wie funktioniert Kommunikation?•Welche Kommunikationsarten gibt es, welche Regeln gelten hierbei?•„Analoge“ Beispiele: Morsen, Winkieralphabet mit Flaggen, Seefunk•Welche Besonderheiten gibt es bei Nachrichten zwischen Computern?•Wie sehen Pakete im Netzwerk vereinfacht aus?Die Grundlagen von Computernetzen basieren auf der Kommunikation mit Protokollen,während die Vorratsdatenspeicherung Protokolle über die Kommunikation anlegt. EinEinstieg in die Unterrichtssequenz über die Vorratsdatenspeicherung wäre zwar möglich,für Schülerinnen und Schüler der Sekundarstufe I scheint die Thematik zu diesem Zeitpunktjedoch noch zu abstrakt zu sein, bzw. führt nicht direkt zu den dahinterliegenden technischenAspekten. Nach eigener Erfahrung reicht die Behandlung von Computernetzen anscheinendals intrinsische Motivation in der 9. Klassenstufe aus, jedoch nicht für einen Einstieg überdie Eigenschaften von Kommunikation – hier bietet sich eine aktive Erforschung durch dieSchülerinnen und Schüler an.Die praktische Untersuchung nur einer einzelnen Kommunikationsart würde jedoch wiebei der Verwendung nur einer einzelnen Programmiersprache (vergl. [ St11]) eher zuProduktwissen führen, statt allgemeingültige Komponenten wie Sender und Empfänger zuidentiﬁzieren. Für viel Freude bei den Schülerinnen und Schülern sorgt dabei das praktischeAusprobieren in Gruppen von Morsen mit Taschenlampen und dem Einsatz von je zweiSignalﬂaggen pro Sender. Abhängig vom Zeitansatz können weitere Kommunikationsartenhinzugefügt werden (z.B. Zeichensprache) bzw. Hilfsmittel wie eine Morsecode-Tabelleweggelassen werden. Eine Vertiefung dieser Thematik für weitere Unterrichtsstundenin der Oberstufe wird in [ Me12 ] ausgeführt. Ausgehend von diesem Grundverständnisder Kommunikation kann in der verbleibenden Zeit der ersten Doppelstunde eine starkvereinfachte Version der paketbasierten Nachrichtenübermittlung zwischen Computerndurch die Schülerinnen und Schüler erarbeitet werden.3.2 Wesentliche Aspekte eines Computernetzes•(Gruppenpuzzle) Was ist bzw. wie funktioniert es?•(Stammgruppe) eine MAC- bzw. IP-Adresse•(Expertengruppen) Router, Switch, WLAN?Hartman et al. [ HNR06 ] formulieren als eine zentrale Leitidee, dass die Adressierungein wichtiger Aspekt bei Netzprotokollen sei und eine Grundvoraussetzung für die funk-tionierende Kommunikation. Explizit wird dabei erwähnt, dass die Lernenden auch in174 Klaus-Tycho Försterii“proceedings” — 2017/9/17 — 20:19 — page 175 — #175iiiiiiVom Flaggenalphabet zur Vorratsdatenspeicherung 5der Lage sein sollen, selbständig MAC- und IP-Adresse herauszuﬁnden [ HNR06 , S.54f].Daher werden zunächst die notwendigen technischen Fachkenntnisse aufgebaut, bevor inder nächsten Doppelstunde das Netz an sich erforscht wird.Durch die Vielfältigkeit des Themas wird eine Untersuchung der gängigen Komponenteneines Computernetzwerkes mithilfe eines Gruppenpuzzles durchgeführt. Nach einer Betrach-tung von MAC und IP-Adressen in Stammgruppen werden in Expertengruppen die BereicheRouter, Hub/Switch und WLAN bearbeitet, um anschließend in den Stammgruppen nachgegenseitiger Erklärung ein eigenes kleines Computernetzwerk zu planen und mithilfe vonPostern dieses den anderen Gruppen zu präsentieren. Durch die konkrete Identiﬁkationmit eigenen Netzwerkkomponenten zu Hause konnten auch zeitlich relativ anspruchsvolleArbeitsaufträge gegeben werden, da die Schülerinnen und Schüler großes Interesse daranzeigten, „ wie das alles funktioniert “.3.3 Untersuchung von Eigenschaften eines Computernetzes•Erkunden gängiger Netzwerkeigenschaften durch eigenständige Erforschung vonNetzwerken mit Standardprogrammen•Geograﬁsches Zuordnen von IP-Adressen bzw. Nachverfolgung der Route vonNachrichtenpaketen•Theoretische und praktische Möglichkeiten zur Anonymisierung in ComputernetzenIn den folgenden beiden Unterrichtsstunden wird zunächst die Untersuchung von Netzwerk-eigenschaften mit Standardbefehlen ( arp,ping,traceroute ,nslookup etc.) zur Nachvollzieh-barkeit von Kommunikation durchgeführt, bevor theoretische und praktische Möglichkeiten(z.B. über das TOR-Netzwerk 2zur Verschleierung auch von Verbindungsdaten) der An-onymisierung thematisiert bzw. ausprobiert wurden. Hierbei kann auch der Aufbau desInternets durch sogenannte Autonome Systeme thematisiert werden, siehe dazu [He15].Die Thematik der Verschlüsselung wird dabei über die Visualisierung der Inhalte unver-schlüsselten Netzverkehrs mit Werkzeugen wie Wireshark 3angesprochen (vergl. [ HNR06 ,S.127], siehe Abb. 1. Die (komplexe) Technik hinter kryptographischen Verfahren kannin einer weiteren Unterrichtseinheit behandelt werden, siehe etwa RSA&Co von Wittenund Schulz [ WS10 ] oder im Kontext von Emails in [ GHW12 ]. Weitere Anregungen zuDatenschutz und Privatsphäre ﬁnden sich in [Be15].3.4 Auswirkungen der Vorratsdatenspeicherung•Argumente für und gegen die Nachverfolgbarkeit von IP-Adressen im Internet•Positionen verschiedener gesellschaftlicher Gruppen zur Vorratsdatenspeicherung•Vorbereitung und Durchführung einer Podiumsdiskussion2https://www.torproject.org/3https://www.wireshark.org/Vom Flaggenalphabet zur Vorratsdatenspeicherung 175ii“proceedings” — 2017/9/17 — 20:19 — page 176 — #176iiiiii6 Klaus-Tycho FörsterAbb. 1: Mitlesen von vermeintlich geschützten Inhalten mit Wireshark .Die in der abschließenden Doppelstunde vorbereitete und durchgeführte Podiumsdiskus-sion über die Vorratsdatenspeicherung sollte dabei einen groben Querschnitt durch dieGesellschaft repräsentieren, als Gruppen bieten sich hierbei etwa die Sicht der Provider,der Polizei, von Parteien und die von Datenschützern an. Wichtig dabei ist die konkreteAuseinandersetzung in Gruppen mit zugehörigem Quellenmaterial, z.B. Zeitungsartikel,Interviews, Pressemeldungen, Webseiten etc. Nur daraus können die Schülerinnen undSchüler sich in die gewählte Position hineinﬁnden, die Argumentationsketten nachvollziehenund technisch beurteilen, siehe Abb. 2 für einige Beispiele 4Abb. 2: Beispielposter für verschiedene gesellschaftliche Positionen zur Vorratsdatenspeicherung.Bewährt hat sich dabei die Moderation der Podiumsdiskussion durch eine(n) Schülerinbzw. Schüler, da die Lehrkraft sich damit im (beobachtenden) Abseits aufhalten kann undes eher um die Sache an sich geht, wodurch nach kurzer Zeit auch sonst eher ruhigereSchülerinnen und Schüler in den Diskussionsﬂuss kamen.Bemerkenswert war dabei die relative Länge der Podiumsdiskussionen (ca. 30 Minuten)4Einalternativer Einstieg bietet sich über mögliche Auswertungsszenarien der Vorratsdaten an [OG14, OS11].176 Klaus-Tycho Försterii“proceedings” — 2017/9/17 — 20:19 — page 177 — #177iiiiiiVom Flaggenalphabet zur Vorratsdatenspeicherung 7und die inhaltliche Tiefe, welche wahrscheinlich nur durch die direkte Identiﬁkation imRollenspiel, das geweckte persönliche Interesse der Schülerinnen und Schüler im Publikumund die vorherige ausführliche Quellenarbeit möglich war, wobei als direkte Grundlage aufdie technischen Aspekte von Computernetzen zurückgegri  en werden konnte.Auch ergab sich im Anschluss nicht ein einseitiger Ausschlag dafür oder dagegen, dieeinzelnen Schülermeinungen blieben di  erenziert, wenn auch eher gegen die Vorratsdaten-speicherung tendierend.4 FazitObwohl oder gerade weil die ersten Stunden stark theoretisch und technisch fundiert waren,zeigten die Schülerinnen und Schüler starkes Interesse und Begeisterung an der Thematik.Erst das technische Grundverständnis von Kommunikation in Computernetzen erlaubteihnen eine angemessene Beurteilung der in Bezug stehenden gesellschaftlichen Aspekte derInformatik.Nach Aussage mehrerer Schülerinnen und Schüler ergab sich aus der Unterrichtssequenzheraus zumindest ein kurzer Austausch mit der Familie, wobei gerade die Weitergabetechnischen Wissens von Interesse war. Da das Hauptlernziel natürlich nicht eine Multipli-katorenausbildung ist, sondern der Wissens- und Kompetenzgewinn der Schülerinnen undSchüler, positiv überprüft durch eine Klassenarbeit, ist diese Weitergabe ein interessanterzusätzlicher E  ekt, den wir in der Zukunft auch weiter untersuchen möchten.Als eine weitere Auswirkung ergab sich auch, dass die Schülerinnen und Schüler nachder Sequenz viele Arten von eingerichteten Internetseitensperren (nicht nur) in der Schuleumgehen konnten – und dieses Wissen als Multiplikatoren auch gerne aktiv unter Mitschülernverbreiteten – ein (un[?])gewollter Aspekt der Unterrichtssequenz.Es wäre dabei sicherlich interessant, diese Multiplikatorenwirkung bewusst als Unter-richtsmethode zu verwenden, etwa durch die Einbeziehung der Schülerinnen und Schüler:Welches Wissen und welche Kompetenzen müsstet ihr anderen (Erwachsenen) vermitteln,sodass diese fachlich fundierte Entscheidungen tre  en können?Dabei ist die Vorratsdatenspeicherung nur ein (immer noch) aktuelles Anwendungbeispielfür den Unterricht. Mögliche Alternativen im Bereich Computernetze wären etwa auchNetzneutralität oder Internetsperren.Abschließend möchten wir noch einmal anmerken, dass (nicht nur) unserer Meinung nachjede Unterrichtssequenz, die Informatik und Gesellschaft behandelt, auch zwingend dietechnischen Aspekte behandeln muss. Denn zum Verstehen und Gestalten der digitalenWelt sind die fachlichen Hintergründe immer notwendig, sonst wandelt sich das Potenzialvom aktiven Mitwirken zum passiven Erfahren der Auswirkungen, ein gesellschaftlicherAspekt, den nur das Schulfach Informatik adäquat behandeln kann.Vom Flaggenalphabet zur Vorratsdatenspeicherung 177ii“proceedings” — 2017/9/17 — 20:19 — page 178 — #178iiiiii8 Klaus-Tycho FörsterDanksagungAbschließend möchte der Autor herzlichst Ylva Brandt, Eckart Modrow und KerstinStrecker für viele anregende Diskussionen und Hinweise danken, ebenso Ira Diethelm fürdas Konzept der Abendbrotgespräche und Vorabversionen ihrer Artikel sowie den anonymenReviewern für ihre hilfreichen Anmerkungen, u.a. für die Idee der Multiplikatorenwirkungals Unterrichtsmethode, als auch Nina Schneider für Hinweise zur ﬁnalen Formatierung.Literatur[Be15] Berendt, Bettina; Dettmar, Gebhard; Esslinger, Bernhard; Gramm, Andreas; Grillenberger,Andreas; Hug, Alexander; Witten, Helmut: Datenschutz im 21.Jahrhundert - Ist Schutz derPrivatsphäre (noch) möglich? In: INFOS. Jgg. P-249 in LNI. GI, S. 33–42, 2015.[Bu04] Bundeszentrale für politische Bildung: , Makromethode Podiumsdiskussion (Forschen mitGrafStat). http://www.bpb.de/lernen/formate/methoden/46894/podiumsdiskussion, 2004.Zuletzt abgerufen am 10. Februar 2017.[DD11] Diethelm, Ira; Dörge, Christina: Zur Diskussion von Kontexten und Phänomenen in derInformatikdidaktik. In: INFOS. Jgg. P-189 in LNI. GI, S. 67–76, 2011.[Di07] Diethelm, Ira: Strictly models and objects ﬁrst: Unterrichtskonzept und -methodik fürobjektorientierte Modellierung im Informatikunterricht. Dissertation, University of Kassel,Germany, 2007.[DKW11] Diethelm, Ira; Koubek, Jochen; Witten, Helmut: IniK – Informatik im Kontext: Entwick-lungen, Merkmale und Perspektiven. LOG IN, 32/33(169/170):97–105, 2011.[Fo07] Fothe, Michael: Algorithmen in spielerischer Form. In (Stechert, Peer, Hrsg.): Praxisbandder 12. Fachtagung Informatik und Schule INFOS. 2007.[Fo10] Foerster, Klaus-Tycho: Didaktische Reduktion des Themenkomplexes Computernetze unterbesonderer Berücksichtigung der technischen Aspekte - ein Unterrichtsversuch im Jahrgang9. Schriftliche Arbeit im Rahmen der zweiten Staatsprüfung, Studienseminar Göttingen fürdas Lehramt an Gymnasien, 2010.[GHW12] Gramm, Andreas; Hornung, Malte; Witten, Helmut: Email for you (only?): design andimplementation of a context-based learning process on internetworking and cryptography. In:WiPSCE. ACM, S. 116–124, 2012.[Gi] Gierhardt, Horst: , CPU-Simulation als Rollenspiel (aus: Mikroprozessor-Simulation mitdem DC (Didaktischer Computer). http://www.gierhardt.de/informatik/dc/Rollenspiel.pdf.Zuletzt abgerufen am 10. Februar 2017.[He15] Hennecke, Martin: Modellvorstellungen zum Aufbau des Internets. In: INFOS. Jgg. P-249 inLNI. GI, S. 155–164, 2015.[HNR06] Hartmann, Werner; Näf, Michael; Reichert, Raimond: Informatikunterricht planen unddurchführen. Springer, 2006.[Hu07] Hubwieser, Peter: Didaktik der Informatik: Grundlagen, Konzepte, Beispiele (3.Auﬂage).Springer, 2007.178 Klaus-Tycho Försterii“proceedings” — 2017/9/17 — 20:19 — page 179 — #179iiiiiiVom Flaggenalphabet zur Vorratsdatenspeicherung 9[Ko] Koubek, Jochen: , Informatik im Kontext (IniK). http://www.informatik-im-kontext.de.Zuletzt abgerufen am 10. Februar 2017.[Me12] Merkert, Klaus: , Kommunikation in Rechnernetzen. http://www.hsg-kl.de/faecher/inf/netze/lehrplan/index.php, Dezember 2012. Zuletzt abgerufen am10. Februar 2017.[Mo03] Modrow, Eckart: Fundamentale Ideen der theoretischen Informatik. In: INFOS. Jgg. 32 inLNI. GI, S. 189–200, 2003.[OG14] OpenDataCity; Glättli, Balthasar: , Vorratsdaten-speicherung in der Schweiz: Das überwachteLeben von Nationalrat Balthasar Glättli. https://apps.opendatacity.de/vds/, April 2014. Zuletztabgerufen am 10. Februar 2017.[OS11] Online, Zeit; Spitz, Malte: , Vorratsdatenspeicherung: Verräterisches Handy.http://www.zeit.de/datenschutz/malte-spitz-vorratsdaten, März 2011. Zuletzt abgerufenam 10. Februar 2017.[SS04] Schubert, Sigrid E.; Schwill, Andreas: Didaktik der Informatik. Spektrum Akadem. Verl.,2004.[St11] Strecker, Kerstin: Einstieg in die Algorithmik. Lehrerbildungszentrum Informatik Göttingen,2011.[WS10] Witten, Helmut; Schulz, Ralph-Hardo: RSA&Co in der Schule - Moderne Kryptologie, alteMathematik, ra  nierte Protokolle. Neue Folge (Teil 4). LOG IN, 30(163/164):97–103, 2010.Vom Flaggenalphabet zur Vorratsdatenspeicherung 179ii“proceedings” — 2017/9/17 — 20:19 — page 180 — #180iiiiiiii“proceedings” — 2017/9/17 — 20:19 — page 181 — #181iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017  15 Hamburg 2050, Land unter? Eine „Informatik im Kontext“-Reihe zu Klimamodellierung mit Geoinformationssystemen Jonathan Otto1, Michel Welke2, Andreas Gramm3, Leonard Diekmann4, Maria Knobelsdorf5   Abstract: Dieser Beitrag stellt eine interdisziplinär ausgerichtete „Informatik im Kontext“-Unterrichtsreihe für das Wahlpflichtfach Informatik in der Sekundarstufe I vor sowie erste Erfahrungen einer Erprobung der Reihe in Klasse 10 einer Hamburger Stadtteilschule. An die Kontextorientierung im Hamburger Bildungsplan für das Wahlpflichtfach Informatik anknüpfend, thematisiert die Reihe Grundkonzepte informatischer Bildung aus den Kompetenzbereichen „Informationen und Daten“, „Informatiksysteme“ und „Informatik, Mensch und Gesellschaft“ im Kontext von Klimawandel und Klimamodellierung mit dem Geoinformationssystem QGIS. Fächerübergreifende Bezüge zum Schulfach Geografie werden durch das Thema Klimawandel, das digitale Werkzeug QGIS und die damit einhergehenden geografischen Fragestellungen hergestellt. Keywords: Informatik im Kontext, IniK, Bildungsstandards, Wahlpflichtfach Informatik, Hamburg, Geographische Informationssysteme, GIS. 1 Einleitung „Informatik ist per se fachübergreifend und fächerverbindend, deshalb ist Inter-disziplinarität ein Grundsatz der Unterrichtsgestaltung. Das bedeutet, dass informatische Kompetenzen im Grunde nur in einem Unterricht erworben werden können, der von vornherein interdisziplinär angelegt ist.“ ([GI08], S. 10). Angesichts der im Rahmen der Digitalisierung immer stärker zunehmenden Durchdringung von Branchen, Disziplinen, privaten und öffentlichen Bereichen mit informatischen Methoden, Anwendungen und Systemen ist der interdisziplinäre Aspekt informatischer Bildung aktueller denn je. Doch was bedeutet es konkret, wenn Informatikunterricht über die Grenzen der eigenen Disziplin hinausgehen soll? Wie kaum ein anderer fachdidaktischer Ansatz greift „Informatik im Kontext“ (IniK) [KSSW09] die Forderung nach Interdisziplinarität durch                                                              1 Universität Hamburg, Fachbereich Informatik, Vogt-Kölln-Str. 30, 22527 Hamburg, Jonathan.Otto@informatik.uni-hamburg.de 2 Universität Hamburg, Fachbereich Informatik, Vogt-Kölln-Str. 30, 22527 Hamburg, michel.welke@studium.uni-hamburg.de 3 Gymnasium Tiergarten, Altonaerstr. 26, 10555 Berlin, gramm@gymnasium-tiergarten.de 4 Universität Hamburg, Fachbereich Informatik, Vogt-Kölln-Str. 30, 22527 Hamburg, diekmann@informatik.uni-hamburg.de 5 Universität Hamburg, Fachbereich Informatik, Vogt-Kölln-Str. 30, 22527 Hamburg, knobelsdorf@informatik.uni-hamburg.de I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 181ii“proceedings” — 2017/9/17 — 20:19 — page 182 — #182iiiiii 16    Jonathan Otto et al.  die Orientierung an lebensweltlichen Kontexten und den Bildungsstandards zweifach auf. Mit der Orientierung an Kontexten wird im IniK-Ansatz das Ziel verfolgt, für die Schülerinnen und Schüler bedeutsame und nachvollziehbare Zusammenhänge zwischen ihrer Lebenswelt und den Fachinhalten des Schulfachs herzustellen. Hierzu sollen lebensweltliche Fragestellungen, Phänomene und Probleme der Alltagswelt betrachtet werden, die verschiedene fachliche Dimensionen haben und so einen Bezug zu mehreren Fachdisziplinen ermöglichen. Weil nicht nur informatische, sondern auch z. B. politische, ökonomische, ethische oder rechtliche Fragestellungen eines Kontexts thematisiert werden, kann so ein interdisziplinärer Unterricht gestaltet werden. In den letzten Jahren sind verschiedene, vor allem im Berliner Raum entwickelte, IniK-Unterrichtsreihen vorgestellt worden, die beispielhaft erfolgreich das Prinzip des kontextorientieren Informatikunterrichts umgesetzt haben. Das Prinzip der Interdisziplinarität ist dabei jedoch nicht in dem Maße berücksichtigt worden, wie die Kontextkriterien von IniK dies jeweils vorsehen. Diese Lücke wollen wir schließen und im folgenden Artikel eine interdisziplinäre IniK-Unterrichtsreihe zu Klimawandel und -modellierung mit Geoinformationssystemen (GIS) vorstellen, die Bezüge zum Geografieunterricht in der Sekundarstufe I (Sek. I) herstellt. Im nächsten Abschnitt stellen wir kurz den fachdidaktischen Ansatz IniK vor und leiten dann her, inwiefern das Thema Klimawandel und -modellierung mit GIS als möglicher Kontext für eine IniK-Reihe umsetzbar ist. In Abschnitt 3 beschreiben wir die konkrete Unterrichtsplanung. Abschnitt 4 zieht ein erstes Fazit aus der konkreten Erprobung der Unterrichtsreihe an einer Hamburger Stadtteilschule. 2 Informatik im Kontext der Geografie Als zentrale Merkmale eines IniK-Unterrichts werden die folgenden drei Prinzipien genannt: Orientierung an lebensweltlichen Kontexten, Orientierung an Bildungsstandards wie den Empfehlungen der Gesellschaft für Informatik (GI) (vgl. [GI08]) und der Einsatz einer Vielfalt an lernerzentrierten Methoden. Weiterhin werden fünf Kriterien für die Auswahl geeigneter Kontexte definiert (im Folgenden als „Kontextkriterien“ bezeichnet). Was bedeutet die Orientierung an Kontexten genau? Was bedeutet es für informatische Bildung und den Informatikunterricht, wenn ein Bezug zur Lebenswelt der Schülerinnen und Schüler gezogen wird und der Unterricht dabei interdisziplinäre Züge aufweisen soll? Koubek et al. (2009) definieren einen Kontext als einen spezifischen Handlungsrahmen einer konkreten, durch das Individuum erlebbaren Situation: „Jede Situation hat ihre technischen, sozialen, ethischen, rechtlichen, ökonomischen, ästhetischen etc. Aspekte, die zusammen den Kontext ausmachen.“ ([KSSW09], S. 4) Konkret auf den Unterricht bezogen stellen Kontexte eine „Menge von lebensweltlichen Themen bzw. Fragestellungen [dar], die von den Schülerinnen und Schülern als zusammenhängend geordnet werden und die dadurch sinnstiftend auf deren Handlungen wirken“ (ebd., S. 5). Ein solcher Kontext sollte laut Diethelm et al. ([DKW11], S. 102) informatisch relevant sein und sich auf möglichst viele Kompetenzen der Bildungsstandards beziehen (Kriterium der Tiefe). Er sollte aber 182 Jonathan Otto, Michel Welke, Leonard Diekmann, Maria Knobelsdorfii“proceedings” — 2017/9/17 — 20:19 — page 183 — #183iiiiii Hamburg 2050, Land unter?    17 auch Bezüge zu anderen Disziplinen oder Bereichen aufweisen (Kriterium der Mehrdimensionalität) und gesellschaftlich relevant (Kriterium der Breite), über einen längeren Zeitraum stabil (Kriterium Stabilität) sowie durch Bezüge zur Lebenswelt der Schülerinnen und Schüler potenziell erlebbar (Kriterium der Lebenswelt) sein. Für die konkrete Unterrichtsstruktur wurde vorgeschlagen, dass sich eine IniK-Unterrichtseinheit an den vier Phasen kontextorientieren Unterrichts orientiert: Begegnungsphase, Neugier- und Planungsphase, Erarbeitungsphase und Vernetzungsphase [KSSW09]. Wir wollen im Folgenden das geographische Thema Klimawandel und sein geoinformatisches Pendant Klimamodellierung mit GIS als einen möglichen Kontext für eine IniK-Unterrichtsreihe vorstellen und diskutieren. 2.1 Klimawandel und Klimamodellierung mit GIS als lebensweltlicher Kontext Die Geowissenschaften durchleben seit Jahrzehnten eine starke digitale Transformation, die unter anderem Geoinformationssysteme (GIS) hervorgebracht hat. GIS sind ein leistungsstarkes und vielfältiges digitales Werkzeug, um geografische Fragestellungen mit informatischen Methoden zu erforschen. Auch im Schulbereich sind GIS als ein zentrales Lehr-Lern-Werkzeug für den Geografieunterricht anerkannt und in die Geografie-Bildungsstandards für die Sek. I integriert worden [MSV11]. Klima, als ein zentrales Thema des Schulfaches Geografie in der Sek. I, beinhaltet ein Verständnis des Klimasystems an sich und analysiert dessen Interaktion mit anderen Ökosystemen auf der Erde. Der Schwerpunkt liegt dabei auf der Betrachtung der verschiedenen Klimaelemente (Temperatur, Niederschlag, Wind, Sonnenschein usw.) und wie deren Veränderungen das System Erde beeinflussen. Forschung in diesem Bereich ist von großer Bedeutung, um insbesondere den menschlichen Einfluss auf das Klimasystem zu verstehen. Hierfür werden computerbasierte Klimamodelle entwickelt und eingesetzt, um Veränderungen zu analysieren und Vorhersagen für die Zukunft treffen zu können. Für die Erfassung, Analyse und Visualisierung von Klimadaten stellen GIS ein wichtiges und vielgenutztes Werkzeug dar. GIS bestehen aus einer räumlichen Datenbank und einem grafischen Interface zur Erfassung, Verwaltung, Analyse und Visualisierung von Daten (vgl. Abbildung 1), die einen räumlichen und zeitlichen Bezug haben. Raum- und zeitbezogene Datenquellen definieren geografische Informationen, die sich auf Objekte und Prozesse geografischer Phänomene beziehen, die auf der Erde beobachtbar sind. Geografische Phänomene können hinsichtlich ihrer Ursachen und Wirkungen variieren: So ist Niederschlag zum Beispiel ein Wetterphänomen, während Migration ein geopolitisches und sozio-kulturelles Phänomen darstellt. Die Datenvisualisierung mit einem GIS stellt eine mehrschichtige Repräsentation räumlich-zeitlicher Prozesse mit unterschiedlichen Dimensionen und Auflösungen dar, die weit über die Möglichkeiten einer Papierkarte hinausgehen. Die Darstellung der Daten wird durch raster- und vektorbasierte Grafiken umgesetzt, wobei unterschiedliche Datenformate sowie Möglichkeiten zur Datenanalyse bereitgestellt werden. Mithilfe von SQL (Structured Query Language) können Daten sowohl attributbezogen als auch räumlich selektiert und analysiert werden. Eine Reihe Hamburg 2050, Land unter? – Eine „Informatik im Kontext“-Reihe 183ii“proceedings” — 2017/9/17 — 20:19 — page 184 — #184iiiiii 18    Jonathan Otto et al.  unterschiedlicher Algorithmen sind in jedem GIS integriert und können durch eigene Programme (z. B. mit Python oder Java) ergänzt werden [SS05]. Die Software QGIS ist im Schulbereich ein vielgenutztes, Open-Source-basiertes GIS, welches alle gängigen Funktionen für die Arbeit mit GIS enthält.  Abbildung 1: Screenshot der Software QGIS mit Niederschlagsdaten für Deutschland (Datenquelle: Deutscher Wetterdienst, DWD) 2.2 IniK-Kontextkriterien und gewählter Kontext GIS an sich stellen noch keinen Lebensweltbezug für die Schülerinnen und Schüler dar und benötigen einen Anwendungsbereich, in dem sie sinnstiftend zur Erkenntnis-gewinnung eingesetzt und genutzt werden können. GIS können in zahlreichen unterschiedlichen Kontexten zum Einsatz kommen, z. B. für die Raum- und Stadtplanung, das Management des Verkehrsaufkommens in Städten und Häfen, die Analyse von Naturkatastrophen oder die archäologische Kartografie von Ausgrabungsstätten. Der in dieser Unterrichtseinheit verwendete Kontext aus dem Fach Geografie ist das Thema Klima und Klimamodellierung am regionalen Beispiel von Hamburg. Der regionale Bezug stellt dabei das Klima und die Folgen des Klimawandels im Raum Hamburg in den Mittelpunkt. Aufgrund der gesellschaftlichen Relevanz von Klimaforschung in Zeiten stark wahrnehmbarer Klimaveränderungen und dem Einsatz von Informatiksystemen in diesem Bereich eignet sich Klimawandel und -modellierung unserer Meinung nach für einen kontextorientierten Informatikunterricht, der auch interdisziplinäre Bezüge zum Schulfach Geografie herstellt. Dieser Eindruck bestätigt sich, wenn man den Kontext bezüglich der fünf Kontextkriterien betrachtet. 184 Jonathan Otto, Michel Welke, Leonard Diekmann, Maria Knobelsdorfii“proceedings” — 2017/9/17 — 20:19 — page 185 — #185iiiiii Hamburg 2050, Land unter?    19 Der Klimawandel und die Frage, welche Auswirkungen menschliches Handeln darauf hat, stellt nicht nur für die Schülerinnen und Schüler, sondern für die gesamte Welt-bevölkerung einen lebensweltlichen Kontext dar, der durch Wetterphänomene sowie Diskussionen um Folgefaktoren wie Migrationsbewegungen oder Ressourcenkonflikte direkt und indirekt erlebbar ist. Der Kontext hat aufgrund der menschlichen Veränderungen des Klimasystems und der damit verbundenen Verantwortung im Hinblick auf Produktion und Nachhaltigkeit eine ethische und ökonomische Dimension sowie aufgrund der räumlichen Wirkung auf verschiedenen Skalen auch eine geografische Dimension. Die Klimamodellierung und -simulation mit informatischen Werkzeugen wiederum ermöglicht überhaupt erst eine fundierte wissenschaftliche Betrachtung des Themas, wodurch informatische Methoden, Konzepte und Prinzipien eine zentrale Rolle spielen. Damit ist das Kriterium der Mehrdimensionalität im Sinne des IniK-Ansatzes erfüllt und Bezüge zu einem fächerübergreifenden Unterricht sind gegeben. So kann eine IniK-Reihe mit Schwerpunkt auf Klimamodellierung mit GIS im Informatikunterricht starten und im Schulfach Geografie mithilfe von GIS weitere Fragestellungen bearbeiten. Darüber hinaus ist in Abhängigkeit von der Fragestellung die Integration in weitere Fächer möglich (z. B. Politische Weltkunde, Biologie, Physik), die eine nicht-informatische Dimension haben. Neben dem Kontextkriterium der Breite ist auch das Kriterium der Tiefe erfüllt: Wie das nächste Kapitel zeigen wird, ist für die Betrachtung und Entwicklung von Klimamodellen und -simulationen ein solides Hintergrundwissen der Informatik notwendig, welches Kompetenzen aus den Bereichen der Datenverwaltung, Algorithmik, Programmierung und Modellierung erfordert, womit Kompetenzen aus mehreren Kompetenzbereichen der GI-Bildungsstandards erworben werden. An dieser Stelle wird deutlich, dass ohne den thematischen Kontext GIS lediglich eine Datenbankanwendung ist, ohne spezifischen Bedeutungsrahmen für die Schülerinnen und Schüler der Sek. I. Erst durch den Handlungsrahmen, den das Thema Klimawandel und -modellierung vorgibt, entsteht ein mehrdimensionaler Kontext, der interdisziplinäre Fragestellungen für die Informatik und die anderen Schulfächer aufwirft.  3 Eine IniK-Unterrichtsreihe zu Klimawandel mit QGIS In diesem Abschnitt skizzieren wir eine mögliche IniK-Unterrichtsreihe zur Erforschung des Klimawandels mit einem GIS. Wie für IniK-Reihen vorgeschlagen, orientiert sich die informatische Dimension der hier beschriebenen Unterrichtsreihe an den Empfehlungen der GI (Gesellschaft für Informatik e. V.) zu Bildungsstandards für die Sek. I. Konkret werden Kompetenzen aus den Inhaltsbereichen „Informationen und Daten“, „Informatiksysteme“ und „Informatik, Mensch und Gesellschaft“ für die Klassenstufe 8 bis 10 erworben ([GI08], S. 12ff.). Die Unterrichtsreihe fördert dabei besonders folgende Aspekte:  • Informationen und Daten: Informationen in unterschiedlicher Form darstellen, Daten im Kontext der repräsentierten Information interpretieren und Hamburg 2050, Land unter? – Eine „Informatik im Kontext“-Reihe 185ii“proceedings” — 2017/9/17 — 20:19 — page 186 — #186iiiiii 20    Jonathan Otto et al.  Vor- und Nachteile unterschiedlicher Informationsdarstellungen beurteilen können. • Informatiksysteme: Das Betriebssystem zweckgerichtet benutzen, Dateiformate unterscheiden und sich selbstständig neue Anwendungen und Informatiksysteme erschließen können.  • Informatik, Mensch und Gesellschaft: Seriosität und Authentizität von Informationen aus dem Internet beurteilen, Auswirkungen der Automatisierung auf die Arbeitswelt bewerten und Beurteilen der Umsetzung automatisierter Vorgänge. In der Planung der Unterrichtsreihe stellten sich drei Aspekte als eine Herausforderung dar: 1) die Einführung in den thematischen Kontext, 2) Einführung des Werkzeugs QGIS und 3) die Dekontextualisierung hin zu den Fachkonzepten der Bildungsstandards. Konkrete Fragen stellten sich insbesondere zur Gewichtung, wie z. B. Wie viel Kontext ist nötig, um das Werkzeug und die Fachkonzepte zu motivieren? Wie steht es um das Vorwissen der Schülerinnen und Schüler im Hinblick auf den Klimawandel? Wie intensiv muss das Werkzeug eingeführt werden, um die eigentlichen Leitfragen des Kontexts bearbeiten zu können? Hier wurde relativ schnell deutlich, dass die Planung sich nur sehr grob an den IniK-Unterrichtsphasen orientieren kann. In den folgenden Unterabschnitten beschreiben wir die einzelnen Unterrichtsphasen der hier vorgestellten Unterrichtsreihe zu Klimamodellierung mit QGIS, wobei wir auf die genannten Fragen eingehen.  3.1 Klimawandel als thematischer Kontext  Zu Beginn der IniK-Unterrichtsreihe, wie wir sie hier im Weiteren skizzieren wollen, steht zunächst der Kontext Klimawandel und die geografische, ökonomische sowie ethische Dimension dieses Kontexts im Mittelpunkt. Dazu gehört auch die Relevanz des Klimawandels als globales und regionales Phänomen, welches wir im Folgenden konkret an der Stadt Hamburg und damit als eine mögliche Unterrichtseinheit vor allem aber nicht nur für Hamburger Schülerinnen und Schüler betrachten wollen. Die informatische Dimension ist in dieser Phase zunächst zweitrangig, da es zunächst darum gehen soll, den Bezug zur Lebenswelt der Schülerinnen und Schüler herzustellen und dabei vor allem die ökologischen, ökonomischen und sozialen Folgen des Klimawandels, am Beispiel von Hamburg, zu thematisieren. Die Länge dieser Phase ist abhängig vom Vorwissen der Schülerinnen und Schüler. Sofern diese im Fach Geografie die klimageografischen Grundlagen gelernt haben, kann direkt mit einem motivierenden Beispiel eingestiegen werden, das die entsprechende Leitfrage(n) der Unterrichtsreihe motiviert. Ein solches Beispiel kann Informationsmaterial mit für die Schülerinnen und Schüler regional relevanten Klimaprognosen sein. Am Beispiel Hamburgs wären dies z. B. Überflutungsszenarien, wie sie bereits durch Sturmfluten in Hafennähe bekannt sind. Hierzu schlagen wir konkret vor, mit einem Video zum Thema Klimawandel und einer anschließenden Diskussion im Klassenplenum zu starten. Daraufhin können die 186 Jonathan Otto, Michel Welke, Leonard Diekmann, Maria Knobelsdorfii“proceedings” — 2017/9/17 — 20:19 — page 187 — #187iiiiii Hamburg 2050, Land unter?    21 Schülerinnen und Schüler, z. B. im Rahmen einer Gruppenarbeit, ein aktuelles Zeitungsinterview eines Klimaforschers auswerten, das sich mit einer Klimaprognose auseinandersetzt. Wir haben hierzu z. B. Material gefunden, das eine komplette Überflutung von Hamburg im Jahr 2050 prognostiziert. Untermalt von Überflutungssimulationen sowie echten Fotos vom überfluteten Hamburger Fischmarkt soll ein solches regionales Beispiel und die in diesem Fall sehr extreme Prognose, die potenziellen Auswirkungen des Klimawandels auf das Lebensumfeld der Schülerinnen und Schüler verdeutlichen und für die weitere Auseinandersetzung sinnstiftend wirken. Die weitere(n) Leitfrage(n) der Unterrichtsreihe können eine solche Prognose in Frage stellen und für die Schülerinnen und Schüler den Arbeitsauftrag enthalten, zu untersuchen, inwiefern die Prognose tatsächlich realistisch wäre. 3.2 Klimamodellierung und Kennenlernen von QGIS An die Begegnung mit dem thematischen Kontext Klimawandel folgt im Anschluss die erste Auseinandersetzung mit Klimamodellierung, die auch das Kennenlernen des Werkzeugs QGIS umfasst. In dieser Phase sollten die Schülerinnen und Schüler den grundlegenden Aufbau des Werkzeugs QGIS sowie die wichtigsten Funktionen und das Layerprinzip (Darstellung der räumlichen Daten in übereinanderliegenden Ebenen) kennenlernen, um im weiteren Verlauf das Werkzeug für Fragestellungen zur Klimamodellierung einsetzen zu können. Neben der reinen Nutzung des Werkzeugs QGIS wird in dieser Phase auch schon eine erste Dekontextualisierung in Bezug auf die dem Werkzeug zugrundeliegenden informatischen Inhalte vorgenommen. Dabei sollen die Schülerinnen und Schüler das Begriffspaar „Informationen und Daten“ kennenlernen und voneinander abgrenzen sowie mithilfe einer grafischen Darstellung die Informationsverarbeitung am Beispiel von Klimadaten visualisieren können. Im Rahmen dieser Phase stehen vor allem die technische (Nutzung des Werkzeugs) sowie die informatische Dimension (Daten als Informationsträger) im Mittelpunkt. Die geografische Dimension als Kontext ist immer noch präsent, spielt in dieser Phase jedoch eine untergeordnete Rolle. In der fachlichen Tiefe liegt der Schwerpunkt dieser Phase auf den Kompetenzbereichen „Informationen und Daten“ und „Informatiksysteme“. Während bei dem Kompetenzbereich „Informationen und Daten“ vor allem die Darstellung der Daten sowie die Interpretation der zugrundeliegenden Repräsentation im Vordergrund steht, liegt der Fokus bei den „Informatiksystemen“ auf der zweckgerichteten Nutzung und der Unterscheidung unterschiedlicher Datentypen. Um diese Phase entsprechend zu motivieren, schlagen wir vor, die Schülerinnen und Schüler in einer Partnerarbeit eine eigene Visualisierung ihrer Vorstellungen zum Thema „Hamburg im Jahr 2050“ anfertigen zu lassen. Das Ziel hierbei ist, dass die Schülerinnen und Schüler mit ihrem Ergebnis unzufrieden sind, da die ihnen bekannten, gängigen Visualisierungsmöglichkeiten starke Grenzen setzen, um Klimamodellierung und konkrete Prognosen adäquat darzustellen. In einem Gespräch im Klassenplenum können die Potenziale und Grenzen der bisherigen Visualisierungsmöglichkeiten an der Tafel gesammelt und diskutiert werden. Im Anschluss daran findet die Einführung von QGIS Hamburg 2050, Land unter? – Eine „Informatik im Kontext“-Reihe 187ii“proceedings” — 2017/9/17 — 20:19 — page 188 — #188iiiiii 22    Jonathan Otto et al.  statt. Hier schlagen wir vor, dass die Schülerinnen und Schüler das Werkzeug selbst mithilfe eines bereitgestellten Tutorials kennenlernen. Wir haben hierzu ein Tutorial erstellt, welches aus mehreren Arbeitsblättern besteht und sequenziell abgearbeitet wird, wobei die Grundfunktionen des Werkzeugs sowie das für die Arbeit mit QGIS wichtige Layerprinzip vorgestellt werden.  Für die konkrete Auseinandersetzung mit QGIS können sich die Schülerinnen und Schüler mit Klima- und Wetterdaten auseinandersetzen, wie sie z. B. durch den Deutschen Wetterdienst (www.dwd.de, ftp://ftp-cdc.dwd.de/pub/CDC/) oder auf dem Hamburger Bildungsserver bereitgestellt werden (http://bildungsserver.hamburg.de/daten-zum-klimawandel/). Tatsächliche Aufgaben wären z. B. das Modellieren einer digitalen Karte in QGIS auf Grundlage dieser Daten. Hierbei müssen Objekte festgelegt und ihre Attribute zugewiesen werden (in diesem Fall Werte verschiedener Klimaelemente, z. B. Temperatur, Niederschlag usw.). Im Vordergrund stehen dabei auch die verwendeten Datentypen (String, Integer, Dezimalzahlen) für die einzelnen Klimaelemente und deren Vor- und Nachteile. Ebenso relevant sind die grafischen Repräsentationsformen der Vektor- und Rastergrafik, die die Visualisierung der Modellierung letztendlich ermöglichen. Die entsprechenden informatischen Konzepte werden dabei konkret thematisiert und so im Weiteren auch dekontextualisiert betrachtet. 3.3 Erarbeitungsphase und Abschluss In einer anschließenden Projektphase werden die Leitfrage(n) aus der Begegnungsphase der Unterrichtsreihe im Rahmen einer Projektarbeit wieder aufgegriffen und die in der Phase vorher erarbeiteten Kenntnisse und Fähigkeiten angewendet und vertieft. Das zu bearbeitende Projekt sollte sich mit der Visualisierung verschiedener Klimaelemente im gewählten, regionalen Raum mithilfe von QGIS auseinandersetzen, mit dem Ziel, prognostizierte Auswirkungen des Klimawandels zu analysieren und darzustellen. Hierzu müssten entsprechende Datensätze und die geeignete Repräsentationsform ausgewählt und in QGIS entsprechend der Leitfrage(n) modelliert werden. Für unser regionales Beispiel Hamburg schlagen wir vor, dass die Schülerinnen und Schüler als Projektaufgabe eine eigene Karte zum Thema Klimawandel in Hamburg erstellen, mit der sie die Prognose des Klimaforschers aus der Begegnungsphase entweder belegen oder widerlegen. Dazu können sie in Partnerarbeit ein oder mehrere Klimaelemente (Temperatur, Niederschlag usw.) und die für die Fragestellung am besten geeignete grafische Repräsentationsform auswählen. Die von den Schülerinnen und Schülern bearbeiteten Projekte können im Anschluss an diese Phase in der Klasse präsentiert und besprochen werden. Der Schwerpunkt der Diskussion sollte dabei auf der Wahl der Repräsentationsform, der Qualität der Daten und der Visualisierung liegen und welche Verbesserungsmöglichkeiten es hinsichtlich dieser geben würde.  188 Jonathan Otto, Michel Welke, Leonard Diekmann, Maria Knobelsdorfii“proceedings” — 2017/9/17 — 20:19 — page 189 — #189iiiiii Hamburg 2050, Land unter?    23 4 Erfahrungen und erstes Fazit Die in Abschnitt 3 skizzierte IniK-Unterrichtsreihe wurde von uns in einer 10. Klasse einer Hamburger Stadtteilschule im Rahmen des Wahlpflichtfachs Informatik im Umfang von 14 Unterrichtsstunden praktisch erprobt. Für diese Erprobung wurde die Reihe zusätzlich zu den Bildungsstandards auch an den Hamburger Bildungsplan angepasst. Hierzu wurden die Module „Prozesse analysieren und modellieren“ und „Daten und Prozesse“ ausgewählt. Ein Fokus lag dabei auf Repräsentation von Informationen, Algorithmen und prozedurale Programmierung, Exploration des gewählten Anwendungskontextes, Analyse von Einsatzmöglichkeiten eines Informatiksystems im gewählten Anwendungskontext und Daten strukturieren sowie Variablen und Parameter verwenden ([FFH14], S. 22ff). Die Klasse bestand aus insgesamt 19 Schülerinnen und Schülern, wobei die Voraussetzungen und die Leistungsstärke sehr heterogen verteilt waren. So hatten z. B. einige Schülerinnen und Schüler schon im vorhergehenden Schuljahr Informatikunterricht, in dem sie sich mit Konzepten wie dem sequenziellen Durcharbeiten eines Problems zur Problemlösung auseinandergesetzt hatten. Auch Grundkenntnisse zum Thema Klimawandel waren unterschiedlich stark ausgeprägt. Zusätzlich strebten die Schülerinnen und Schüler des Kurses unterschiedliche Schulabschlüsse an (sowohl das Abitur als auch den ersten bzw. den mittleren allgemeinbildenden Schulabschluss), sodass auf eine entsprechende Binnendifferenzierung besonders intensiv eingegangen werden musste. Umgesetzt wurde dies durch eine vom Lehrer gesteuerte Partnerzusammenstellung der Projektgruppen während der ersten zwei Unterrichtsphasen auf Grundlage des Leistungsstands. In der dritten Phase konnten die Schülerinnen und Schüler ihre Projektpartner selbst wählen und erhielten eine gestufte Hilfestellung von Seiten der Lehrkraft. Ebenso wurde die Projektarbeit selbst durch die Lehrkraft stärker angeleitet. Die Lehrkraft gab dabei sowohl die Fragestellung als auch die zur Verfügung stehenden Daten vor. Die Erprobung der Unterrichtsreihe wurde von Mitte Januar bis Anfang März 2017 durchgeführt. Der Einstieg über den Kontext Klimawandel und der regionale Bezug am Beispiel von Hamburg verlief erfolgreich und hat die Schülerinnen und Schüler von Beginn an stark motiviert. Die eigene Visualisierung im Rahmen der Begegnungsphase lieferte das gewünschte Ergebnis einer übereinstimmenden Unzufriedenheit mit den vorhandenen Möglichkeiten der Darstellung einer eigenen Prognose. Dabei wurden von den Schülerinnen und Schülern mehrere Vorschläge gemacht, wie man die Möglichkeiten der Visualisierung verbessern könnte. Die Vorschläge umfassten unter anderem eine kartografische Darstellung und Animationen des Klimawandels, wie sie durch QGIS umgesetzt werden können. Die eigenständige Einführung in die Arbeit mit QGIS mithilfe des Tutorials verlief erfolgreich und die Schülerinnen und Schüler waren bei der Bearbeitung der Aufgaben sehr motiviert und engagiert. Dabei konnten wir insbesondere beobachten, dass eher zurückhaltende Schülerinnen und Schüler deutlich motivierter und aktiver waren als in der vorhergehenden Unterrichtseinheit zum Thema Robotik. Die Doppelstunde zum Thema „Information und Daten“ lief wie geplant und Hamburg 2050, Land unter? – Eine „Informatik im Kontext“-Reihe 189ii“proceedings” — 2017/9/17 — 20:19 — page 190 — #190iiiiii 24    Jonathan Otto et al.  zeigte deutlich, dass die anfänglich wahrgenommene Motivation im Rahmen von Kontext und Werkzeug auch in dieser Phase stark zu erkennen war. So gaben viele der Schülerinnen und Schüler immer wieder Beispiele aus dem thematischen Kontextbereich, um die Begriffe Information und Daten zu erklären. Weiterhin konnten die Schülerinnen und Schüler begründete Entscheidungen treffen, welche Datentypen für die Repräsentation der jeweiligen Klimaelemente am besten geeignet sind. Ausgehend vom Kontext gelang es den Schülerinnen und Schülern problemlos viele weitere Beispiele aus anderen Bereichen zu nennen, für die sich eine Repräsentation durch Gleitkommazahlen, Integer oder auch Wahrheitswerte eignet. Die hier zu erkennende erste Vernetzung führte zu einer sehr regen Diskussion.  Unsere ersten Erfahrungen im Rahmen einer IniK-Unterrichtsreihe zum Thema Klimamodellierung mit GIS zeigen, dass das Thema und Werkzeug ein geeigneter Kontext sein kann, um Konzepte informatischer Bildung in einen Bezug zur Lebenswelt der Schülerinnen und Schüler zu setzen und sie zu motivieren, sich damit zu beschäftigen. Das Werkzeug QGIS scheint sich hier besonders gut zu eignen, um eine Auseinandersetzung mit informatischer Bildung im Kontext und am Schnittpunkt zum Schulfach Geografie zu motivieren. Literaturverzeichnis [DKW11]  Diethelm, I.; Koubek, J.; Witten, H.: IniK – Informatik im Kontext, Entwicklungen, Merkmale und Perspektiven. LOG IN, 169/170, S. 97-105, 2011. [GI08]  Gesellschaft für Informatik e. V. (GI): Grundsätze und Standards für die Informatik in der Schule: Bildungsstandards Informatik für die Sekundarstufe I - Empfehlungen der Gesellschaft für Informatik e. V. Beilage zur LOG IN, 28, 150/151, 2008. [KMK16]  Kultusministerkonferenz (KMK): Bildung in der digitalen Welt, Strategie der KMK, 2016. [KSSW09]  Koubek, J.; Schulte, C.; Schulze, P.; Witten, H.: Informatik im Kontext (IniK) – Ein integratives Unterrichtskonzept für den Informatikunterricht. Im Tagungsband der 13. GI-Fachtagung Informatik und Schule. Kölln Verlag, S. 268–279, 2009. [MSV11]  Michel, U.; Siegmund, A.; Volz, D. Digitale Revolution im Klassenzimmer?! Potenziale digitaler Geomedien für einen zeitgemäßen Unterricht. In: Praxis Geographie, Braunschweig, 2011. [SS05]  Strahler, A.; Strahler, A.: Introducing Physical Geography, Wiley, 2005. [FFH14] Freie und Hansestadt Hamburg: Bildungsplan Stadtteilschule Jahrgangsstufen 7 – 11 Informatik Wahlpflichtfach. 2014. 190 Jonathan Otto, Michel Welke, Leonard Diekmann, Maria Knobelsdorfii“proceedings” — 2017/9/17 — 20:19 — page 191 — #191iiiiiiMusikprogrammierung mit Sonic Pi.  Entwicklung und Untersuchung einer gendersensiblen Unterrichtseinheit zum Prog rammieren in der Sekundarstufe I . Esther Alzate Romero1, Leonore Dietrich2  Abstract:  Die Musikprogrammiersprache Sonic Pi3, die an der University of Cambridge speziell für Kinder und Jugendliche entwickelt wurde, eröffnet einen kreativen, kontextbasierten Zugang zur Informatik. Ganz nach dem Motto „Technik zum Anfassen“ können  durch den Einsatz der günsti gen Hardwarelösung Raspberry Pi  Berührungsängste zu Informatiksystemen abgebaut werden. Mithilfe des Design -Based -Research -Ansatzes wird eine Unterrichtseinheit zum Thema Musikprogrammieren unter gendersensiblen Aspekten entwic kelt und untersucht. Im vorliegenden Beitrag w ird vor allem die erste Praxisphase, die daraus resultierenden Erkenntnisse und damit verbundenen Verbesserungs - bzw. Überarbeitungsschritte thematisiert. Hierbei stehen vor allem die Gestaltungsaspekte der Unt errichtseinheit im Vordergrund, ebenso die Frage, welche zentralen Inhalte und Konzepte der Informatik in diesem Rahmen vermittelt werden können. Zum Abschluss wird ein Ausblick auf das weitere Vorgehen gegeben . Keywords: Informatikdidaktik, Genderforschun g, Unterrichtsforschung, Musikinformatik, Live -Coding, Sonic Pi, Design -Based -Research, Programmiereinstieg, Informatik im Kontext . 1 Motivation und Forschungsvorhaben  Das ungleiche Geschlechterverhältnis in MINT -Berufen ist auch heute noch ein ernstzunehmen des Thema.  Betrachtet man die aktuellen Zahlen aus dem “MINT -Herbstreport 2016” des Instituts der deutschen Wirtschaft Köln, so gibt es trotz der hohen Zuwanderungszahlen immer noch eine “Arbeitskräftelücke” ( 212.000  unbesetzte Stellen ) im MINT -Berei ch [IWK16 ]. Dies stellt ein ernstzunehmendes Problem dar und es ist dringend vonnöten jungen Menschen diesen Arbeitsbereich näher zu bringen.  Aus Sicht der Gesellschaft ist die überwiegend männliche Gestaltung unserer zunehmend IT -gesteuerten Welt und Gesellschaft problematisch. Informatiksysteme werden auch künftig immer weiter in die Gestaltung aller Bereiche unserer Welt eingreifen – je weiter dieser Einfluss geht, desto wichtiger ist eine breite Repräsentanz aller Gesellschaftsgruppen in Berufen, d ie diese Gestaltung beeinflussen [Sc12]. Daher                                                            1 Heidelberg School of Education, Voßstraße 2, Geb. 4330, 69115 Heidelberg, romero@heiedu.ph -heidelberg.de  2 Universität Heidelberg, Didaktik der Informatik, INF 205, 69120 Heidelberg, leonore.dietr ich@uni -heidelberg.de  3 http://sonic -pi.net  [25.01.2017]  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 191ii“proceedings” — 2017/9/17 — 20:19 — page 192 — #192iiiiiigilt es Maßnahmen zu entwickeln, um Mädchen für informatische Fragestellungen zu begeistern.   Musik spielt im Leben von Jugendlichen eine große Rolle – Informatiksysteme werden von diesen aber in aller Regel n ur zum Konsum genutzt. Bei Mädchen ist das Rezipieren und Ausüben von Musik tendenziell stärker vertreten als bei Jungen [Me16]. Dieses Interesse soll im Forschungsvorhaben genutzt werden, um innerhalb des Musikunterrichts in das Thema Programmierung einzu führen und damit im Kontext des Fachs Musik das Interesse an Informatik zu wecken. Durch die speziell für Kinder und Jugendliche ab etwa 10 Jahren entwickelte Entwicklungsumgebung Sonic Pi sollen zentrale Konzepte und Prozesse der Informatik vermittelt wer den. Zendler und Spannagel [ZS06] arbeiten die zentralen Konzepte durch eine empirische Grundlegung heraus, um sich dem „Kern“ des Unterrichtsfaches Informatik anzunähern. Ebenso erheben sie im Rahmen einer Befragung unter Expert_innen die zentralen Prozes se im Informatikunterricht [Ze07]. Die Verknüpfung der zentralen Konzepte und Prozesse hilft bei der Gestaltung der Unterrichtseinheit. Als für die Unterrichtseinheit relevante zentrale Konzepte dieser Studie wurden die Konzepte Algorithmus, Problem, Sprac he, Kommunikation, Computer und (Informatik -)System identifiziert.  Die hier abgedeckten Prozesse aus der Studie sind das Problemlösen, Kreieren und Erfinden sowie Analysieren. Die GI Standards [GI08] für Informatik in der Sekundarstufe I weisen „Informati on und Daten“, „Algorithmen“ und „Sprachen und Automaten“ als für dieses Projekt relevante Inhaltsbereiche sowie „Modellieren und Implementieren“, „Strukturieren und Vernetzen“ und „Darstellen und Interpretieren“ als relevante Prozessbereiche aus.  Im Fokus  des ersten Teils des Forschungsvorhabens steht zunächst die Entwicklung, Weiterentwicklung und  Untersuchung der Unterrichtseinheit. Zudem wird untersucht, wie eine Unterrichtseinheit zum Thema Musikinformatik gestaltet werden muss, damit Mädchen und Jung en gleichermaßen für das Fach Informatik begeistert werden. Im zweiten Teil des Forschungsvorhabens wird die gendersensible Unterrichtsgestaltung im Vordergrund stehen. Grundlage für die Entwicklung der Unterrichtseinheit ist zum einen eine ausführliche An alyse der vorhandenen Literatur und Theoriekonzepte. Zum anderen wird den oben genannten Fragestellungen im Rahmen qualitativer Untersuchungen nachgegangen. Neben Interviews mit den beteiligten Schüler_innen und Lehrer_innen werden Expert_inneninterviews g eführt.  Es gibt kaum Forschungsarbeiten zu Unterrichtseinheiten mit Bezug zur Musikinformatik. Folglich erfordert diese Forschung ein innovatives und damit ein auf die Weiterentwicklung und Erprobung fokussiertes Vorgehen. Daher wurde Design -Based -Research  als Forschungsmethode gewählt. Das Konzept wird in mehreren Iterationen erprobt und nach jeder Erprobungsphase angepasst [Va 06]. Dieser Ansatz bietet ein auf die E ntwicklungsforschung angepasstes  mehrstufigen Verfahren.  192 Esther Alzate Romero, Leonore Dietrichii“proceedings” — 2017/9/17 — 20:19 — page 193 — #193iiiiii2 Live -Coding  Das Programmieren und I mprovisieren in Echtzeit von elektronischer Musik und audiovisueller Kunst wird als Live -Coding bezeichnet [Ro15; Co03; BS09]. Als erster international bekannter Verbund von Künstlerinnen und Künstlern trat “Toplap”4 2004 in Erscheinung. Bekannte Künstler und Wissenschaftler dieser Szene wie Alex McLean, Julian Rohrhuber und andere verfolgten mit diesem Zusammenschluss das Ziel, Live -Coding bekannter zu machen, mit anderen Künstlern und Künstlerinnen in Austausch zu treten und diese Form der Kunst wissensch aftlich zu erforschen und künstlerisch zu reflektieren. Mittlerweile hat sich die Live -Coding -Community international stark vergrößert und versucht, auch außerhalb des akademischen Kontextes ein breitere s Publikum anzusprechen. Auf so genannten “Algoraves”  soll die typische Konzertsaalatmosphäre aufgebrochen werden und gemeinsam zu algorithmisch erzeugter Musik getanzt werden [CM14].  Die Autorinnen erwarten, dass Live -Coding einen neuen Zugang zum Programmieren, Komponieren, Performen und Rezipieren von Mu sik schafft. Erste Veröffentlichungen zum Musikprogrammieren mit Sonic Pi [Bu14; Aa16] sowie die Ergebnisse aus den ersten Feldversuchen im Rahmen dieser Studie bestätigen diese Annahme. Schülerinnen und Schüler können den Computer neuartig als kreatives I nstrument erleben und dabei ihre Konzepte von Musik, Klang, Musiker_in und Programmierer_in überdenken und neu ordnen [Gu13, S.136]. Auch Lernende ohne musikalische Vorbildung haben die Möglichkeit, einen Einstieg in die Musik zu finden. Schüler_innen mit Vorbehalten gegenüber der Informatik bekommen die Möglichkeit eines neuen “Türöffners” zur Informatik.  3 Entwicklung der Unterrichtseinheit  3.1 Planungsvoraussetzungen  Die Erprobung der Unterrichtseinheit wird im Rahmen des regulären Musikunterrichts durchgeführt. Dies ist zum einen darin begründet, dass es keinen Pflichtunterricht in Informatik und vielfach auch kein freiwilliges Angebot an den Schulen gibt, den Autorin nen aber das Erreichen aller Schüler_innen wichtig ist. Zum anderen schafft der Kontext des Musikunterrichts einen anderen Zugang zur Informatik, der eine große Offenheit insbesondere bei den Mädchen erkennen lässt.  Die Erprobung findet im Teamteaching st att. Grundsätzlich ist die Einheit aber so konzipiert, dass sie auch von musikaffinen Informatiklehrkräften unterrichtet werden kann, da der inhaltliche Fokus auf informatischen Konzepten liegt und die Musik hier hauptsächlich als Kontext dient.                                                             4 https://toplap.org  [07.06.2017]  Musikprogrammierung mit Sonic Pi 193ii“proceedings” — 2017/9/17 — 20:19 — page 194 — #194iiiiiiDer inhal tlichen Planung voran ging eine Analyse der Musik -, Physik - und Informatikbildungspläne im Forschungsumfeld. Die Projektschulen sind zunächst Gymnasien und Realschulen in Baden -Württemberg, sodass für die ersten drei Durchführungen die hier gültigen Bildun gspläne betrachtet wurden. Die Entwicklung der Einheit wurde im Dialog mit Lehrkräften der drei Fächer erarbeitet.  3.2 Vorwissen und fachliche Ziele  Im Bereich der Informatik wird keinerlei Vorwissen vorausgesetzt, da es zumindest an den meisten Schulen keine n Pflichtunterricht in der Unter - und Mittelstufe gibt. Die zentralen Informatikkonzepte, die in der Unterrichtseinheit behandelt werden sollen , sind Wiederholungen, Parameter, Variablen sowie einfache Datenstrukturen. Insgesamt soll bei den Schüler_innen d as Bild von Programmierung als ein kreativer Prozess neu verankert und somit das Interesse an der Informatik geweckt werden. Der Umgang mit dem Raspberry Pi ist innerhalb dieser Einheit den affektiven Lernzielen zuzuordnen, da das Ziel ausschließlich in de r Nutzung für Sonic Pi und dem Abbau der Vorbehalte gegenüber alternativen Betriebssystemen liegt. Hierfür sind zunächst keine tieferen fachlichen Kenntnisse über die Plattform notwendig. Eine nähere Behandlung des Systems im Nachgang der Einheit ist siche r sinnvoll, aber nicht Teil dieser Studie.  Im Physikunterricht wird im Anfangsunterricht das Thema Akustik eingeführt. Der Aufbau einer Schwingung ist den Schüler_innen daher bekannt, ebenso Fachbegriffe wie Amplitude und Frequenz sowie deren Bedeutung. In  Sonic Pi sind dies zentrale Parameter, sodass das Vorwissen aus dem Physikunterricht zum einen hilfreich ist, zum anderen aber auch wiederholt und angewendet wird und so zu einer Festigung führt. Gleichzeitig bietet dies den Schüler_innen eine konkrete un d motivierende Anwendung des erlernten Physikwissens.  Im Musikunterricht wurde n in der Unter - und Mittelstufe die klassische Musik und ihre Formen und Strukturen behandelt, ebenfalls der Aufbau von Popsongs sowie Blues - und Jazz-Stücken. Grundzüge der Compu termusik und die MIDI -Notation werden zwar thematisiert, diese Inhalte sollten jedoch im Rahmen der Unterrichtseinheit aufgefrischt werden.  Ebenfalls sollte nochmals der Unterschied zwischen elektronisch verstärkten und elektronischen Musikinstrumenten th ematisiert werden. Die Schüler_innen bringen außerdem Vorwissen aus dem Bereich der Harmonielehre und Rhythmik mit. Ebenfalls haben sie gelernt, über Musik zu sprechen und Klänge zu beschreiben. Innerhalb der Sonic Pi Einheit werden diese Kenntnisse angewe ndet. Inhaltlich neu ist das Mittel des Live-Coding.   3.3 Aufbau der Unterrichtseinheit  Die Unterrichtseinheit ist für fünf Doppelstunden konzipiert. Sie gliedert sich in einen festen Einführungsteil über zwei Doppelstunden, einen flexiblen Erarbeitungs - und Projektteil, der auch sehr gut auf einen längeren Zeitraum ausgedehnt werden kann und 194 Esther Alzate Romero, Leonore Dietrichii“proceedings” — 2017/9/17 — 20:19 — page 195 — #195iiiiiieinen Präsentations - und Reflexionsteil. Neben dieser linearen Struktur ist auch ein iterativer Aufbau mit mehreren Projektphasen sinnvoll, sofern mehr Unterrichtszeit zur  Verfügung steht.  Den Schüler_innen wird freigestellt, Sonic Pi auf ihrem Rechner zu Hause zu installieren. Die Hausaufgaben wurden bewusst so gestaltet, dass diese unplugged bearbeitet werden und die Arbeit mit Sonic Pi in der Schule vorbereiten. Dies sol l zum einen sicherstellen, dass Jugendliche ohne entsprechenden Zugang zu einem Rechner nicht benachteiligt werden, zum anderen auch den im Anfangsunterricht schwierigen Umgang mit Fehlern und Debugging in eine Umgebung verlegen, in der direkter Zugriff auf Hilfe durch die Lehrkraft möglich ist.  Die erste Stunde dient der Einordnung der Einheit in die historische Entwicklung der Musik und Informatik sowie dem ersten Kontakt mit unplugged Musikprogrammierung in Pseudocode. Der unplugged -Teil ist wichtig für einen niederschwelligen Einstieg in die textuelle Programmierung und die spätere Umsetzung in Sonic Pi, da die Schüler_innen keinerlei Vorwissen aus der Programmierung mitbringen. In den Materialien5 wird daher auch großer Wert auf die farblichen und graph ischen Entsprechungen der Arbeitsblätter im unplugged -Teil zu der späteren Programmierumgebung gelegt. In der zweiten Doppelstunde werden eng angelehnt an die unplugged Ergebnisse die ersten Schritte in Sonic Pi unternommen. Schüler_innen lernen die Kernko nzepte Codierung eines Tones, Wiederholung und Parameter sowie die Kommentierung ihres Codes kennen. Ebenso findet hier der in der Regel erste Umgang mit dem Raspberry Pi statt, der aber intuitiv und zweckorientiert erfolgt und keinen eigenen Unterrichtsge genstand darstellt. In den folgenden Stunden werden dann in Teams eigene Stücke erstellt, Methoden, Variablen, Datenstrukturen und Zufallsbedingungen eingeführt. Wichtig ist bei der Teamarbeit die Steuerung der Programmiertätigkeit. Hier bietet sich Pair P rogramming an, um sicherzustellen, dass beide Teammitglieder aktiv mit der Umgebung und Programmiersprache arbeiten. Über Cheatsheets und gestufte Hilfen zu einzelnen Programmierelementen in Sonic Pi stehen binnendifferenzierende Materialien zur Verfügung.  Die letzte Sitzung dient der Präsentation des eigenen Stückes als Live -Coding Performance, einer inhaltlichen Diskussion der eingesetzten Konzepte sowie einer kurzen Reflexion über die Unterrichtseinheit aus Sicht der Schüler_innen .  4 Erste Durchführungsph ase und Erkenntnisse   Die erste Durchführungsphase fand an einem Gymnasium am Ende der achten Klasse statt. Die Schüler_innen hatten großenteils keine informatische Vorbildung, einige hatten                                                            5 Sämtliche Unterrichts - und Planungsmaterialien stehen zum Zeitpunkt der Konferenz als Entwicklungsfassung zur Verfügung und werden im Rahmen des Workshops  ([AD17b] , ebenfalls in diesem Band)  vorgestellt. Nach Abschluss des Forschungsvorhabens werden die Unterrichtsmaterialien zusammen mit Stundenverlaufsplänen und anderen Handlungsempfehlungen veröffentlicht.  Musikprogrammierung mit Sonic Pi 195ii“proceedings” — 2017/9/17 — 20:19 — page 196 — #196iiiiiiin Klasse fünf erste Programmiererfahrungen mit Scratch gemacht, seitdem aber keinen weiteren Kontakt mit Informatik in der Schule. Viele Jugendliche brachten musikalisches Vorwissen aus Instrumentalunterricht mit, das über die Inhalte des schulischen Musikunterrichts hinausging. Die Musiklehrerin hat die Entwicklung de r Einheit aus musikalischer Sicht mit begleitet. Die Durchführung lag groß enteils bei der Informatiklehrkraft und wurde an einzelnen Stellen von der Musiklehrerin unterstützt.  4.1 Beobachtungen   Die Einheit lief für alle Beteiligten vielversprechend ab. Die Sc hüler_innen waren zunächst vor allem neugierig und gingen offen auf das Thema zu. Der Einstieg in die Programmierung fiel den meisten Schüler_innen leicht und von Beginn der Arbeit in Sonic Pi an zeigten sie sich hoch motiviert. Über die im Unterricht expl izit vorgestellten Fachkonzepte hinaus stellten sie Fragen zur Umsetzung ihrer Ideen in Sonic Pi und recherchierten teilweise selbständig Möglichkeiten, um ihre Ideen in der Programmiersprache auszudrücken. Hierbei stellte das deutschsprachige Tutorial, da s innerhalb Sonic Pi zur Verfügung steht, eine hervorragende Unterstützung dar. Die Schüler_innen haben während ihrer Programmierung ausnahmslos die Pausen missachtet und zum Teil zu Hause ihre Stücke freiwillig weiter entwickelt. In der Abschlusspräsentat ion wurden teilweise sehr komplexe Stücke als Ergebnis6 vorgestellt und als Live -Coding präsentiert.  Die Rückmeldungen der Schüler_innen und Lehrer_innen bestätigen die insgesamt sehr vielversprechenden Beobachtungen der Lehrkräfte und Autorinnen. Das Feed back zur ersten Doppelstunde fiel durchweg positiv aus. Der unplugged Einstieg als Methode war für die Lerngruppe neu, wurde aber gut angenommen und von Schüler_innen und Lehrkräften als sehr positiv und hilfreich bewertet. Die eigenen Stücke bzw. kurzen Performances der Schülerinnen und Schüler und deren Präsentation stellten den Abschluss der Projekteinheit dar. Die Ergebnisse übertrafen die Erwartungen: die künstlerische Vielfalt, die Komplexität der Stücke und auch die Programmierfähigkeiten wurden auf eindrückliche Weise dargestellt.  In den Interviews, die im Nachgang der Einheit durchgeführt wurden, wünschten sich die Schüler_innen eine  klarere Zielsetzung und äußerten, schneller mit einem eigenen Stück anfangen zu wollen.  4.2 Erwartete und tatsächliche S chwierigkeiten  Viele Bedenken erwiesen sich als unbegründet. So wurde bspw. der Unterschied zwischen traditioneller Notation und Sonic Pi -Notation sehr schnell verstanden und stellte im Umgang mit Sonic Pi kein Problem dar.                                                             6 Ergebnisse aus den Durchführungen werden im Rahmen des Workshops  ([AD17b], ebenfalls in diesem Band) sowie im Vortrag vorgestellt.  196 Esther Alzate Romero, Leonore Dietrichii“proceedings” — 2017/9/17 — 20:19 — page 197 — #197iiiiiiAls problematisch erwies sich d ie Stabilität der Software auf Windows -Rechnern. Neben Abstürzen des Ruby -Interpreters kam es vor, dass die Audioausgabe nicht funktionierte und mehrere Dienste über den Taskmanager beendet werden mussten. Diese ist zwar mittlerweile vom Sonic Pi Entwickle rteam verbessert worden, dennoch nahmen die Autorinnen diese Erfahrung zum Anlass, auf Raspberry Pi umzusteigen, da dies eine schulunabhängige Evaluation ermöglicht und sie sich darüber hinaus den Abbau von Berührungsängsten mit anderen Plattformen und Bet riebssystemen bei den Lernenden erhoffen.  Ein großes Problem stellten für alle Schüler_innen die Fehlermeldungen dar. Diese sind nicht kindgerecht dargestellt, sondern werden direkt von der zugrundeliegenden Sprache Ruby gesandt. Die Meisten gaben an, nach  der Einheit zu Hause nicht weiter mit Sonic Pi arbeiten zu wollen, da sie sich nicht befähigt fühlten, selbst Fehlermeldungen zu lesen und den Programmcode entsprechend zu ändern. Dies ist insbesondere angesichts der hohen Motivation innerhalb der Einheit  von Bedeutung: Das Interesse ist da, die Umsetzung scheitert aber an der Hürde des Debugging. Hier soll in nachfolgenden Durchführungen unterstützt werden, indem häufig auftretende Fehlermeldungen evaluiert und gezielte Erklärungen und Lösungshinweise in den Unterricht und die Materialien eingearbeitet werden. Insgesamt muss der Umgang mit Fehlern in Code und Software als Unterrichtsinhalt und Lernziel stärker berücksichtigt werden.  Einigen Schüler_innen war die Aufgabe, ohne einen programmatischen Inhalt frei zu kompo nieren, zu komplex.  Hier wird es in den nächsten Durchführungen ein konkretes Projektthema vorgegeben. Dieses kann je nach Lerngruppe auch als Angebot genutzt werden, das eigene Ideen weiterhin zulässt. Die Vertonung eines Kurzfilms gibt d aher als Rahmen für die zweite Erprobung ein klareres Ziel und  eine klare Aufgabenstellung vor. Da die Schüler_innen meist eine rein klassische Musikausbildung in der Schule erhalten, möchten sie natürlich ihnen bekannte musikalische Strukturen umsetzen. Fragen, wie  eine klassische Songstruktur, der zeitlich versetzte Einsatz verschiedener Instrumente, ein Crescendo o.ä. in Sonic Pi umzusetzen sind, tauchen während der Arbeit an der eigenen Komposition auf. Hier müssen von der Lehrkraft im Vorfeld selbst einige klein e Kompositionen angefertigt und die Beispiele, die in Sonic Pi abrufbar sind, bearbeitet werden, um die Schülerfragen gezielt beantworten zu können. Dieser Punkt wird ebenfalls im Zuge der weiteren Evaluation berücksichtigt und mit Material unterstützend vorbereitet werden.  Aus Sicht der Informatik kann mit Sonic Pi sehr einfach ein intuitiver Umgang mit Schleifen, Methoden, Parametern und Variablen erreicht und damit der Einstieg in eine textuelle Programmiersprache niederschwellig erreicht werden. Die Umg ebung differenziert beispielsweise sehr gut zwischen Variablen und Konstanten, setzt Syntax Highlighting reduziert und zielführend ein und wird von den Lernenden problemlos bedient. Das direkte auditive Feedback stellt sich im Unterricht als hoch motiviere nd dar. Im Vergleich zu den Erfahrungen mit visuellem Feedback beispielsweise in Greenfoot Musikprogrammierung mit Sonic Pi 197ii“proceedings” — 2017/9/17 — 20:19 — page 198 — #198iiiiiizeigte sich eine höhere Motivation insbesondere bei den Mädchen.  Problematisch ist die Umsetzung des Konzeptes Verzweigung. In Sonic Pi gibt es nur zufallsbedingte V erzweigungen, sodass hier einer Fehlvorstellung im Rahmen des Unterrichts entgegengewirkt werden muss. Dies ist keine Schwachstelle der Programmiersprache, sondern vielmehr der Tatsache geschuldet, dass das Ziel die Ausgabe von Musik ist, was Sensorik in d en Hintergrund stellt.  5 Ausblick  In der zweiten und dritten Durchführungsphase wird das überarbeitete Konzept erprobt, verbessert und angepasst. Folgende Änderungen wurden für die erneute Durchführung auf Basis der Ergebnisse aus teilnehmender Beobachtung u nd Interviews vorgenommen:  x Sonic Pi stürzt e unter Windows leider häufig ab. Dieses  Problem ist  den Entwicklern bekannt und wurde versucht in der aktuellsten Sonic Pi -Version zu verbessern.  Wir empfehlen d ennoch  eine Nutzung von Sonic Pi mit Raspberry  Pis (für die es entwickelt wurde). Ein positiver Nebeneffekt  ist zudem der Konta kt mit einer alternativen Plattform. Die Schülerinnen und Schüler können somit ganz nach dem Motto “Technik zum Anfassen” Berührungsängste mit unbekannter Hard - und Software,  insbesondere auch mit Linux als Betriebssystem, abbauen.  x Für Klassen, in denen viel Unruhe herrscht , wurde das Konzept dahingehend überarbeitet, dass der Theorieinput deutlich kürzer und auf mehrere Sitzungen verteilt wurde.  x Das Projektziel wird zukünftig enger vorgegeben.  Einige Schüler_innen waren mit der Aufgabenstellung , frei zu komponieren , überfordert. Daher wird als Rahmen zukünftig die gemeinsame Vertonung eines Kurzfilms oder eines Bildes  vorgegeben. Denkbar wäre ebenfalls die Vertonung von Jahresz eiten oder Wochentagen. Wichtig ist hierbei, dass zum Abschluss der Unterrichtseinheit eine gemeinsame Reflexion über die entstandenen Werke geführt wird. Ebenfalls werden zukünftig Kompositionshilfen in Form von Genrevorlagen an die Schüler_innen bei Beda rf ausgegeben. Diese Vorlagen können Beispiele für typische rhythmische Patterns, Melodieführungen und Basslinien eines bestimmten Musikgenres o.ä. enthalten.  x Die Übungsphase mit traditionellen, einfachen Liedern wurde verkürzt, so dass mehr Zeit für das f reiere Ausprobieren und Komponieren bleibt. Im Zuge dessen wurde die Unterrichtseinheit um eine Doppelstunde (also insgesamt 6 Doppelstunden) verlängert.  x Um Live -Coding und die damit verbundene Performance für Schüler auditiv und visuell greifbarer zu mach en, werden innerhalb der Einheit künftig mehrere kurze Videoausschnitte eingebaut.  198 Esther Alzate Romero, Leonore Dietrichii“proceedings” — 2017/9/17 — 20:19 — page 199 — #199iiiiiix Das Debugging wird als Unterrichtsgegenstand stärker berücksichtigt. Die häufigsten Fehlermeldungen werden im Rahmen der nächsten Durchführung erhoben und auf dieser Basis u nterstützendes Material erarbeitet.  6 Fazit  Zusammenfassend kann gesagt werden, dass die Ergebnisse der ersten Erprobungen des Zugangs zur Informatik über die Musikprogrammierung vielversprechend sind. Die Schülerinnen und Schüler arbeiteten mit großer Begeisterung und hoher Motivation in Sonic Pi an ihren eigenen Kompositionen. Sie suchen eigenständig nach eleganten Lösungen für musikalische Elemente und nutzen die erlernten Programmierelemente sinnvoll und zielführend. Die Arbeitsergebnisse waren auch aus künstlerischer Sicht komplex und vielseitig. Die Autorinnen sehen in Sonic Pi eine reizvolle Alternative zum Einstieg in die textuelle Programmierung, der nach ersten Beobachtungen insbesondere Mädchen anspricht und für Informatik begeistern kann.  Literaturverzeichnis  [Aa16]  Aaron, S., Blackwell, A.F.; Burnard, P.: The development of Sonic Pi and its use in educational partnerships: co -creating pedagogies for lea rning computer programming. Journal of Music, Technology and Education 9(1) /16, S. 5-94, 2016 . [AD17b]  Alzate Romero, E.; Dietrich, L.: Workshop: Musikprogrammierung mit Sonic Pi. In (Ira Diethelm, Hrsg.): Informatische Bildung zum Verstehen un d Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017.     [BS09]  Brown, A. R.; Sorensen, A.: Interacting with Generative  Music through Live Coding. Contemporary Music Review, 28(1), S.17–29, 2009.  [Bu14]  Burnard , P. et.al. (Hrsg): Sonic Pi. Live and Coding. Research Report, 2014.  [CM14]  Collins, N.; McLea n, A.: Algorave: A Survey of the History, Aesthetics and Technology of  Live Performance of Algorithmic Electronic Dance Music. In  (Baptiste Caramiaux, K. et.al. Hrsg.) : Proc . International Conference on New Interfaces for Musical Expression, S.355–358, 201 4. [Co03]  Collins, N.; McLean, A.; Rohrhuber, J.; Ward, A.: Live coding in laptop performance. In: Organised Sound, 8(3)/03, S.321 –329, 2003.  [GI08]  Gesellschaft für Informatik (GI) (Hrsg. ): Grundsätze und Standards für die Informatik in der Schule. Bildungsst andards Informatik für die Sekundarstufe I. In: LOG IN 28/08, Nr.150/151/08 , http://informatikstandards.de, Stand 07.06.2017.  [Gu13] Guzdial, M.: Live -Coding in Education. In ( Blackwe ll, A.; McLean, A.; Noble, J.;  Rohrhuber, J. , Hrsg.) : Collabor ation and learning through live codi ng (Dagstuhl Seminar 13382).  Dagstuhl Reports, 39/13, S. 135 -136, 2013.  Musikprogrammierung mit Sonic Pi 199ii“proceedings” — 2017/9/17 — 20:19 — page 200 — #200iiiiii[IWK16]  Institut der deutschen Wirtschaft Köln  (Hrsg.) (2016) : MINT -Herbstreport 2016 , https://www.iwkoeln.de/studien/gutachten/beitrag/christina -anger -oliver -koppel -axel-pluennecke -mint-herbstreport -2016 -bedeutung -und-chancen -der-zuwanderung -315792, Stand 20.03.2017.  [Me16]  Medienpädagogischer Forschungsver bund Südwest (Hrsg.) (2017):  KIM -Studie 2016. Kindheit, Internet, Medien. Basisstudie zum Medienumgang 6 - bis 13 -Jähriger in Deutschland,   https://www.mpfs.de/studien/kim -studie/2016/, Stand 07.06.2017.  [Ro15]  Rohrhuber, J.: Lehre als Forschung: Grundlagen der Musikinformatik  im künstleris chen Kontext. Zeitschri ft für Hochschulentwicklung, 10(1)/15 , S.79-91, 2015.  [Sc12]  Schinzel, B. : Geschlechtergerechte Informatik -Ausbildung an Universitäten. In  (Kampshoff, M.; Wiepcke, C. Hrsg.): Handbuch Geschlechterforschung und Fachdidaktik. VS Verlag , Wiesbaden, S. 331-344, 2012.  [Va06]  Van den Akker, J. et.al. (Hrsg.): Educational Design Research, Routledge, London, 2006.  [Ze07]  Zendler,  A., Spannagel, C. & Klaudt, D. : Zentrale Prozesse im Informatikunterricht: eine empirische Grundlegung. In: Notes on Educ ational Informatics - Section A: Concepts and Techniques, 3(1) /07, S.1-19, 2007.  [ZS06]  Zendler, A. & Spannagel, C.: Zentrale Konzepte im Informatikunterricht. Eine empirische Grundlegung. In: Notes on Educational Informatics — Section A: Concepts and Techniques, 2(1) /06, S.1–21, 2006.   200 Esther Alzate Romero, Leonore Dietrichii“proceedings” — 2017/9/17 — 20:19 — page 201 — #201iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017    15 Entwicklung eines HTML-Editors unter didaktischen Gesichtspunkten Dominik Heun1 Abstract: Im Kerncurriculum Informatik des Landes Hessen für die gymnasiale Oberstufe wird die Umsetzung eines HTML-Projekts gefordert. Dabei stellt sich regelmäßig die Frage, mit welchen Werkzeugen und Editoren eine HTML-Seite geschrieben werden soll. Viele frei verfügbare Editoren stellen weitreichende Funktionen zur Verfügung, die in vielen Fällen zu weit gehen oder Informatikdidaktisch interessante Aspekte außen vorlassen.  In diesem Paper werden didaktische Anforderungen an einen Editor formuliert, die anschließend mit einem selbst entwickelten Editor erfüllt werden sollen. Es werden Grundfunktionen des Editors (HTML, CSS, JavaScript, Dokumentenbaum) vorgestellt, Hilfen in der Erstellung von HTML-Dokumenten diskutiert und Erfahrungen aus dem Einsatz im Unterricht der Einführungsphase vorgestellt. Keywords: Gymnasium, Oberstufe, Einführungsphase, HTML, CSS, Webseiten 1 Einleitung Innerhalb der Einführungsphase (zwei Jahre vor dem Abitur) können Schülerinnen und Schüler an Gymnasien in Hessen das Fach Informatik wählen. Darin erhalten sie nach dem Kerncurriculum der gymnasialen Oberstufe2 eine informatische Grundbildung in verschiedenen Themenbereichen, die im ersten Halbjahr um das Thema Internet aufgebaut ist. Nach der Behandlung des Themenbereichs Internetprotokolle wird ein HTML-Protokoll angesetzt. Für das HTML-Projekt werden drei grundlegende Inhalte beschrieben: die Hypertext Markup Language selbst (HTML), die Struktur von HTML-Dokumenten sowie Cascading Style Sheets (CSS). 2 Kriterien für einen HTML-Editor Für die Lehrenden ist zu Beginn der Unterrichtsreihe die Auswahl eines geeigneten Editors nötig, der von den Schülerinnen und Schülern genutzt werden soll. Diese Suche gestaltet sich schwierig, da einige Editoren wie bspw. die Standard-Editoren von Windows oder Mac reine Texteditoren sind und keine Unterstützung in Bezug auf HTML-Dokumente geben. Phase 53 bietet genauso wie Notepad++4 eine rudimentäre                                                              1 Justus-Liebig-Schule Darmstadt, Julius-Reiber-Straße 3, 64293 Darmstadt, heu@lio-darmstadt.de 2 [Hes15] 3 Für Schulen und Privatanwender kostenlos unter http://www.phase5.info (nur Windows) 4 Kostenlos verfügbar unter https://notepad-plus-plus.org I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 201ii“proceedings” — 2017/9/17 — 20:19 — page 202 — #202iiiiii 16    Dominik Heun  Unterstützung durch Hervorhebung der Syntax (Syntax-Highlighting) und automatisches Einrücken zur Strukturierung. Der Funktionsumfang dieser Editoren ist nicht nur auf HTML eingeschränkt, weswegen die Unterstützungen auch nicht HTML-spezifisch sind. Ein vollständiger „What you see is what you get“-Editor (WYSIWYG), der ohne Kenntnis von HTML genutzt werden kann, ist nicht im Sinne des Kerncurriculums. Welche Unterstützungen sind für den Informatikunterricht mit HTML wünschenswert? Dazu ist ein Blick auf Schwierigkeiten von Schülerinnen und Schülern im Bereich von HTML hilfreich. Im bisherigen Unterricht des Autors zeigten sich unter anderem folgenden Probleme der Schülerinnen und Schüler (die nummerierte Aufzählung gibt keine Gewichtung vor, sondern dient dem späteren Referenzieren): 1. Korrekte Syntax von HTML-Elementen 2. Bezug zwischen HTML-Quelltext und entstehendem Dokument bleibt unklar 3. Arbeit in drei Fenstern zeitgleich (HTML, CSS und Browser) 4. Korrekte Verknüpfung von HTML- und CSS-Dateien 5. Identifizierung von HTML-Knoten, die durch CSS-Regeln formatiert werden 6. Zusammenhang zwischen Inhalt, Struktur und Aussehen Des Weiteren gestalten sich gestufte Hilfen schwierig, da diese in einem erneuten (evtl. analogen) Format angeboten werden und damit ein weiterer Arbeitsbereich für die Schülerinnen und Schüler entsteht. Diese Vielzahl kann einige Lernende überfordern und sollte deshalb von einem HTML-Editor besser gelöst werden. Aus dem ersten Punkt wird deutlich, dass ein Syntax-Highlighting eine mögliche Unterstützung darstellt. Dies unterstützt Lernende aber lediglich dann, wenn diese schon eine Ahnung davon haben, wie sie ein HTML-Element schreiben können. Der zweite und dritte Punkt bedingen sich gegenseitig. Durch die Arbeit in vielen verschiedenen Fenstern oder Tabs sind die Auswirkungen von Änderungen an den Dokumenten nicht direkt sichtbar, sondern werden erst über Umwege sichtbar gemacht. Dies stört den Arbeitsfluss der Lernenden durch zusätzliche Routinen, die bei jeder Änderung ausgeführt werden müssen. Punkt vier stellt gerade zu Beginn des Themenbereichs ein großes Problem dar, das viele Schülerinnen und Schüler vor eine zusätzliche Hürde stellt. Die Lernenden sollten am Ende der Unterrichtsreihe selbst eine solche Verknüpfung herstellen können, für die erste Begegnung mit Unterrichtsgegenstand ist dies jedoch ein vermeidbares Hindernis. Die beiden letzten Punkte hängen ebenfalls zusammen, da die Identifizierung von HTML-Knoten, die durch eine CSS-Regel verändert werden, über die Struktur erfolgt, die den Lernenden jedoch nicht zu jeder Stelle klar ist. Zwar können sie einen Strukturbaum zu ihrem HTML-Dokument erstellen, nach einer Änderung am Dokument 202 Dominik Heunii“proceedings” — 2017/9/17 — 20:19 — page 203 — #203iiiiii HTML-Editor    17 muss dieser aber überarbeitet werden, so dass der Strukturbaum parallel weitergepflegt werden muss. Im Zuge der Differenzierung wäre es ebenfalls hilfreich, wenn der HTML-Editor direkt die Aufgabenstellung und zusätzliche Hilfen anzeigen könnte, damit alle nötigen Arbeitsmaterialien an einem Platz sind. 3 Vorbilder 3.1 Codefights Auf der Online-Plattform codefights.com können Nutzer sich anmelden und verschiedene tägliche oder wöchentliche Herausforderungen lösen.   Abbildung 1: Beispielhafte Herausforderung bei Codefights Dabei wird im Browser die Aufgabenstellung und ein Code-Editor angezeigt. Die Herausforderung lässt sich in einer Sprache der Wahl lösen und kompilieren. Glaubt man die Herausforderung gelöst zu haben, kann man Tests laufen lassen, deren Ergebnis angezeigt wird. Dieses HTML-fremde Beispiel zeigt einen Ansatz für Editoren innerhalb von Web-Browsern auf. Dieser Ansatz bietet einige Vorteile gegenüber der einfachen Editorlösung. Eine Aufgabenstellung wird dauerhaft angezeigt, die Programmierung erfolgt direkt im gleichen Fenster. Es werden Tests angezeigt, mit denen Lösungen überprüft werden können. Zusätzlich bietet die Umsetzung in HTML und JavaScript einen Vorteil für die Plattformunabhängigkeit des Editors. Entwicklung eines HTML-Editors unter didaktischen Gesichtspunkten 203ii“proceedings” — 2017/9/17 — 20:19 — page 204 — #204iiiiii 18    Dominik Heun  3.2 Mozilla Thimble Verfolgt man diesen Ansatz weiter, wird man auf das Projekt Thimble von Mozilla Firefox aufmerksam, das einen ähnlichen Ansatz verfolgt und für HTML umsetzt.  Abbildung 2: Mozilla Thimble In einem Editor (Bereich in der Mitte) können HTML-Elemente eingegeben werden, die direkt in die Vorschau auf der rechten Seite übernommen werden. Man kann die Entstehung des Dokuments verfolgen und Auswirkungen von HTML-Elementen direkt beobachten. In der linken Liste kann zwischen HTML und CSS gewechselt werden. Auch innerhalb der CSS-Codes werden Auswirkungen unmittelbar in der Vorschau angezeigt. Thimble wirkt einigen der angesprochenen Probleme entgegen. Dennoch ist der Einsatz in der Schule nicht ohne Weiteres umsetzbar, da für die Nutzung ein Nutzerkonto jeder Schülerin und jedes Schülers vorhanden sein muss. Zusätzlich liegen die Daten der Lernenden auf einem Cloud-Server außerhalb Deutschlands. Beide Argumente konnten datenschutzrechtlich für die Schule nicht restlos geklärt werden, so dass diese Möglichkeit nicht in Betracht gezogen wurde. 4 Eigenentwicklung 4.1 Überblick Aus den beiden vorgestellten Editoren ergab sich eine grobe Richtung, in die eine Eigenentwicklung gehen sollte. Basierend auf HTML und JavaScript wurde ein eigener HTML-Editor geschrieben. 204 Dominik Heunii“proceedings” — 2017/9/17 — 20:19 — page 205 — #205iiiiii HTML-Editor    19  Abbildung 3: HTML-Editor Die Anleihen zum Thimble sind erkennbar. Auch dieser Editor bietet die Aufteilung in Quelltext und Vorschau und genau wie Thimble werden Änderungen im HTML-Quelltext direkt in der Vorschau umgesetzt. Der HTML-Editor weist ein rudimentäres Syntax-Highlighting auf und macht auf nicht geschlossene HTML-Tags aufmerksam. Eine Syntax-Vervollständigung wird nicht zur Verfügung gestellt. Oberhalb des Editors werden drei Tabs angezeigt, mit denen Schülerinnen und Schüler zwischen HTML und CSS wechseln können. Änderungen im CSS-Editor werden ebenfalls live in der Vorschau angepasst. Die Verknüpfung von HTML und CSS wird implizit vom Programm vorgenommen.   Abbildung 4: Strukturbaum des HTML-Dokuments Der Editor bietet einen dritten Tab Struktur. Damit kann der aktuelle Strukturbaum des HTML-Dokuments angezeigt werden. Wird der HTML-Quelltext geändert, wird diese Änderung dynamisch am Strukturbaum vorgenommen.  Entwicklung eines HTML-Editors unter didaktischen Gesichtspunkten 205ii“proceedings” — 2017/9/17 — 20:19 — page 206 — #206iiiiii 20    Dominik Heun  4.2 Bereitstellen der Aufgabenstellung Eine Aufgabenstellung kann den Schülerinnen und Schüler auf unterschiedliche Weise präsentiert werden. Die einfachste Variante ist das Einblenden oberhalb des Editors. So haben die Schülerinnen und Schüler den Editor, die Vorschau und die jeweilige Aufgabenstellung direkt auf einen Blick. Die verschiedenen Editoren können mit unterschiedlichen Quelltexten vorbelegt werden, um den Lernenden ein Template zum Arbeiten vorzugeben. Die stärker leitende und damit für den Anfang besser geeignete Variante setzt auf kontextabhängige Aufgabenstellungen. Ein Beispiel: die Schülerinnen und Schüler erhalten zu Beginn ein leeres HTML-Dokument mit der übergreifenden Aufgabe, das HTML-Grundgerüst zu erstellen. Dazu erhalten sie den weiteren Hinweis einen öffnenden und einen schließenden Tag mit dem Namen html zu erstellen. Nachdem sie dies ausgeführt haben, wird der Schritt abgehakt und der nächste Schritt (Erstellung eines head-Elements) angezeigt. Somit wissen die Schülerinnen und Schüler jederzeit, was ihr nächster Schritt ist und können so zu einem vollständigen HTML-Grundgerüst gelangen. Es ist ebenfalls ein Hybrid aus diesen beiden Varianten möglich, so dass die Schülerinnen und Schüler selbständig entscheiden können, welche Hilfen sie in Anspruch nehmen. 4.3 Bereitstellung von Hilfen Um einem differenzierenden Unterricht gerecht zu werden, wurde der Editor erweitert, so dass gestufte Hilfen ermöglicht werden. Über verschiedene Buttons können die Schülerinnen und Schüler Hilfen zur Aufgabenstellung einblenden. Dies lässt sich ebenfalls an den Kontext anpassen, so dass den Schülerinnen und Schülern an verschiedenen Abschnitten ihrer Lösung auch verschiedene Hilfen angeboten werden. Speziell für den Beginn der Behandlung von HTML ist das Grundgerüst zunächst eine Hürde. Deshalb lässt es sich ausschalten, so dass es für die Schülerinnen und Schüler unsichtbar ergänzt wird. Ebenfalls für den Anfang kann eine Unterstützung bei der Erstellung von HTML-Elementen helfen. Dazu wurde ein Formular implementiert, das die Eigenschaften des gewünschten Elements abfragt und dann in den Quelltext einfügt. 206 Dominik Heunii“proceedings” — 2017/9/17 — 20:19 — page 207 — #207iiiiii HTML-Editor    21  Abbildung 5: Formular zur Erstellung von HTML-Elementen Damit lassen sich ebenfalls die Fachbegriffe der Bestandteile eines HTML-Elements festigen. Dieses Formular ist auch für CSS-Regeln verfügbar. Um die Anwendung von CSS-Regeln zu visualisieren, können Schülerinnen und Schüler den Strukturbaum verwenden. Um die angewandten Regeln besser deutlich zu machen, werden Veränderungen am Attribut color auf Wunsch im Strukturbaum angezeigt. Dies fördert das Verständnis des Zusammenhangs zwischen den Bereichen Inhalt, Struktur und Aussehen.   Abbildung 6:Visualisierung der CSS-Regeln am Strukturbaum 5 Einsatz im Unterricht Der vorgestellte HTML-Editor wurde zu Beginn des Themenbereichs HTML-Projekt eingesetzt. Um ein generelles Verständnis für die Beschreibungssprache zu fördern, erhielten die Schülerinnen und Schüler den HTML-Editor ohne die Tabs Aussehen und Struktur. Innerhalb des HTML-Editors befand sich reiner Text eines Wikipedia-Artikels. Das HTML-Grundgerüst wurde automatisch vom Editor ergänzt, so dass die Lernenden direkt mit dem Text arbeiten konnten. In einem Unterrichtsgespräch wurden die Formatierungen gemeinsam erarbeitet und direkt im Text umgesetzt. So konnten die Schülerinnen und Schüler den direkten Zusammenhang zwischen dem ursprünglichen Text und der Erweiterung durch die HTML-Tags erkennen. Ferner wurden die Auswirkungen der HTML-Elemente den Lernenden direkt deutlich und sie konnten es von sich aus beschreiben. Entwicklung eines HTML-Editors unter didaktischen Gesichtspunkten 207ii“proceedings” — 2017/9/17 — 20:19 — page 208 — #208iiiiii 22    Dominik Heun  Nach diesem Einstieg wurde den Schülerinnen und Schülern erläutert, dass in HTML-Dokumenten ein Grundgerüst nötig sei. Dies sollten die Schülerinnen und Schüler über die in 4.3 beschriebene, kontextabhängige Hilfe erarbeiten. Im nächsten Schritt wurde die Struktur von HTML-Dokumenten behandelt. Die Lernenden erhielten einen neuen Editor, bei dem der Tab Struktur freigeschaltet war. Über den Vergleich von HTML-Dokument und erstelltem Dokumentenbaum war es den Schülerinnen und Schülern möglich, Regeln zur Erstellung eines Dokumentenbaums aufzustellen. Die Auswirkungen von Veränderungen am HTML-Dokument konnten direkt im Dokumentenbaum untersucht werden. In einem nächsten Schritt wurde der Tab Aussehen (CSS) freigeschaltet. Über die Vorbelegung des CSS-Editors mit einer Regel konnten die Schülerinnen und Schüler die Folgen der CSS-Regel direkt im Dokument beobachten. Analog entwickelten sie eigene Regeln, die sich zunächst nur auf Tag-Namen bezogen. Der Bezug zwischen Dokumentenbaum und den CSS-Regeln konnte durch die eingeblendeten Hilfen hergestellt werden. Die Schülerinnen und Schüler konnten durch die Beobachtungen, die sich immer auf ihre eigenen Beispiele bezogen, selbst formulieren, wann eine CSS-Regel auf ein HTML-Element angewandt wird.  Abbildung 7: Komplette Lernumgebung Nachdem die Grundlagen mit dem Editor gelegt wurden, sollten die Schülerinnen und Schüler in Gruppen eine eigene HTML-Seite erstellen. Dazu wurden die traditionellen 208 Dominik Heunii“proceedings” — 2017/9/17 — 20:19 — page 209 — #209iiiiii HTML-Editor    23 Editoren (siehe 2) zur Verfügung gestellt, die von einigen Lernenden genutzt wurden. Ungefähr die Hälfte der Lerngruppe verblieb aber in dem vorgestellten Editor und kopierte anschließend den Text aus den Dokumenten und fügten ihn im Windows-Editor ein. Die Schülerinnen und Schüler hatten keine Schwierigkeiten mit dem Editor zu arbeiten und fanden sich in den verschiedenen Stufen gut zurecht. Es traten jedoch Probleme mit dem Internet-Explorer auf, die während der Durchführung nicht behoben werden konnten, so dass auf einen anderen Browser zurückgegriffen werden musste. Die kontextabhängige Hilfe erwies sich ebenfalls als fehleranfällig, was aber behoben werden konnte. So zeigte die Hilfe fälschlicherweise nicht den Abschluss einer Zwischenaufgabe an, wenn mehrere Tags des gleichen Namens vorhanden waren. Des Weiteren trat einmal ein Absturz des Browsers auf, bei dem der bisherige Fortschritt der Schülerinnen und Schüler verloren war. Über die Cache-Möglichkeiten von HTML5 wurde ein Zwischenspeicher eingerichtet, der regelmäßig die Zwischenergebnisse der Schülerinnen und Schüler speichert, so dass die bisherige Arbeit nach einem Absturz verfügbar bleibt. 6 Ausblick Der vorgestellte Editor stellt eine gute Möglichkeit dar, einen Editor im Unterricht zu verwenden, der die Schülerinnen und Schüler durch geeignete Maßnahmen beim Erlenen von HTML und CSS unterstützt. Er gibt für den Einstieg verschiedene Darstellungsformen, um einen explorativen Ansatz bei der Arbeit mit HTML zu ermöglichen. In der Erprobung zeigten sich die Einsatzfähigkeit im Unterricht sowie kleinere Probleme, die behoben wurden. Schon während des Einsatzes wurden Erweiterungen umgesetzt, wie bspw. ein weiterer Tab, in dem JavaScript geschrieben werden kann.  Für die Zukunft sind noch Erweiterungen des Editors geplant. So soll es eine Export-Funktion geben, die aus den aktuellen Inhalten der Editoren HTML- und CSS-Dateien erstellt und zum Download anbietet. Die Visualisierung der CSS-Regeln wird im Dokumentenbaum nur beim Attribut color angezeigt. Bei der Weiterentwicklung sollen alle Regeln über ein Mouse-Over angezeigt werden. Dies ermöglicht eine noch intensivere Umsetzung mit dem Zusammenhang zwischen CSS und der Struktur des HTML-Dokuments. Des Weiteren soll die Erstellung von Aufgaben für Lehrende vereinfacht werden. Aktuell wird der Editor direkt in der JavaScript-Programmierung von Aufgabe zu Aufgabe angepasst, was sehr zeitintensiv ist.  Der Autor schreibt ein Konfigurations-Tool, mit dem Aufgaben, sichtbare Tabs, Hilfen usw. festgelegt werden können und daraus eine HTML-Datei generiert wird, die den Editor entsprechend umsetzt. Speziell die kontextabhängigen Hilfen haben sich in der Erprobung als sehr hilfreich erwiesen, beanspruchen in der Vorbereitung aber sehr viel Zeit. Mit dem einfacheren Konfigurations-Tool würde diese Hilfe einfacher umsetzbar. Entwicklung eines HTML-Editors unter didaktischen Gesichtspunkten 209ii“proceedings” — 2017/9/17 — 20:19 — page 210 — #210iiiiii 24    Dominik Heun  Diese Erweiterung würde es ebenfalls ermöglichen, dass dieser Editor von anderen Lehrenden verwendet werden kann und auf deren jeweilige Unterrichtssituation angepasst werden kann. Momentan erfordert die Anpassung eine intensive Einarbeitung in die Programmierung des Editors. Literaturverzeichnis [Hes15] Hessisches Kultusministerium: Kerncurriculum gymnasiale Oberstufe – Gymnasium. Informatik (2015).  210 Dominik Heunii“proceedings” — 2017/9/17 — 20:19 — page 211 — #211iiiiiiInformatische Bildung in der Sekundarstufe I an nordrhein -westfälischen Schulen  Eine explorative Studie  zum Einfluss der GI -Bildungsstandards  in NRW Johanna Borsch1, Marco Thomas2 Abstract:  Um fundiertere Informationen zur Situation einer informatischen Bildung in Nor drhein -Westfalen zu gewinnen, we rden von unserem Arbeitsbereich seit 2013 vorwiegend quantitativ Daten im Kontext von  Informatikunterricht  bei Schülern -, Lehrern - und S chulleitern erhoben sowie vergleichend ausgewertet. Unsere aktuelle Studie zur Sekundarstufe I ist auf das Angebot der Schulen zur informatischen Bildung  und die Akzeptanz der GI -Bildungsstandards beziehungsweise die an den Standards orientierten neuen SI -Kernlehrpläne , aber auch  den Fortbildungsbedarf , fokussiert.  Wir erhielten Rückmeldungen von mehr als  200 Schulen. Im Rahmen des Vorhabens wurde erneut deutlich, wie schwierig  sich die Durchführung universitärer  Studien  für den Schulbereich gestaltet . Keywords:  Informatik, Unterricht, Didaktik, Standards, Bildung, Sekundarstufe, Schule  1 Einleitung  In Ermangelung bundesweiter Bildungsstandards zum Fach Informatik hat die Gesellschaft für Informatik e.  V. (GI) Empfehlungen [GI08] erarbeitet, die sich zu -nehmend als Standard für eine informatische Bildung und einen Informatikunterricht etablieren3. Mit den neuen Kernlehrplänen (KLP) zur Informatik für die Sekundarstufe I (SI) an Realschulen [ KR15] und an Gesamtschulen /Sekundarschulen  [KG15] für die Wahlpflic htbereiche hat Nordrhein -Westfalen (NRW) als eines der ersten Bundesländer die GI-Empfehlungen curricular nahezu vollständig verankert. Für die Gymnasien sind SI-Kernlehrpläne für den Wahlpflichtbereich in der Entwicklung4. Der Kernlehrplan Informatik für die Oberstufe ist ebenfalls stark an den GI -Bildungsstandards orientiert und für die Grundschule n werden in NRW diverse Konzepte sowie erste Empfehlungen für Informatikstandards diskutiert . Diese Entwicklungen sollten gute Voraussetzungen für eine drin gend erforderliche informatische Bildung in allen Jahrgangsstufen bieten ,                                                            1 Westfälische Wilhelms -Universität Münster , Didaktik der Informatik, Fliednerstrasse 21, 48149 Münster, johanna.borsch @uni -muenster.de  2 Anschrift s. o. , marco.thomas@uni -muenster.de  3 Im Folgenden sprechen wir verkürzend von GI -Bildungsstandards, da sich diese Empfehlungen quasi als Standard etabliert haben und derzeit keine bundesweiten  Standards für das Fach Informatik existieren.  4 Allerdings könnten diese aufgrund der geringen verf ügbaren Stundenanzahl im gymnasialen Wahlpflichtbereich möglicherweise in einer reduzierteren Form verfasst werden als die bisherigen KLP s. I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 211ii“proceedings” — 2017/9/17 — 20:19 — page 212 — #212iiiiiiwobei einschränkend betont werden muss, dass Informatik bisher in NRW in keiner Jahrgangsstufe verpflichtend vorgesehen ist . Sofern Informatik als Wahl (pflicht )fach angeboten wird, s teht es in starker Konkurrenz zu anderen Angeboten.  Auf schulpolitischer Ebene wird die Notwendigkeit einer informatischen Bildung für alle Schülerinnen und Schüler5 offenbar weiterhin als gering eingeschätzt  – auch in NRW. Es wird den Schulen überlassen, welche Angebote sie mit den verfügbaren Ressourcen durchführen . Gerade mit Blick auf die derzeitigen bundes - und landesweiten Anstrengungen  im Rahmen einer eher medienpädagogisch ausgerichteten , so genannten »digitalen Bildung« , erscheint es uns erforderli ch, die Situation der informatisch en Bildung an den Schulen spezifischer  zu beschreiben6. Diesem Anliegen dienen unsere  Umfragen, die wir seit 2013 im Rahmen des Projekts KISS7 einmal im Jahr durchführen.   2 Ziele der Studie  Die Gegebenheiten (Personal, Schulprofil etc.) bezüglich einer informatischen Bildung an den Schulen der SI in NRW sind offenbar recht  unterschiedlich . Es erscheint  uns daher auch  interessant , die Ausstattung  an den Schulen für eine informatische Bildung  zu explorieren.  Vielfach ist bereits darauf hingewiesen worden, dass an den Schulen ein eklatanter Mangel an Informatikfachkräften existiert und sich diese Situation eher verschlechtern wird (s.  z. B. [DM16], S. 17). In der aktuellen Studie ermitteln wir zudem  die Zufriedenh eit mit den Rahmenbedingungen für das Fach  Informatik, da die Daten aus den qualitativen Fragen  einer Lehrer - und Schulleiterumfrage im Jahr  2015  auf Kritik , insbesondere an den verfügbaren Ressourcen , hinweisen.  Gerade im Kontext einer Schulprofilierung sind die Sichtweisen von Entscheidungs -träger n, die vermutlich eher selten universitär -informatisch geprägt sind , von Bedeutung . Dass es Aufklärung sbedarf  zu den Elementen einer informatischen Bildung  gibt, haben wir bereits mittels  einer  Studie auf dem Münsteraner Wor kshop 2016 aufgezeigt ([BTY16]). Erneut versuchen wir  Aussagen zu den Angeboten für eine informatische Bildung zu gewinnen, wobei wir die Medienerziehung in die Untersuchung einbeziehen . Unsere Studie untersucht  die Bekannthe it und Akzeptanz der GI -Bildungsstandards  bzw.  der neuen Kernlehrpläne sowie den Stand einer  Umsetzung an den Schulen.  Die Realisierung der Kernlehrpläne steht und fällt mit dem Einsatz von Informatik -Fachkräften an den Schulen und mit den Möglichkei ten zu r Fort - und Weiterbildung, sodass wir auch zu diesen Rahmenbedingungen in unserer Studie Fragen  stellen . Zur Planung von gezielten Fortbildung sangeboten ist es hilfreich zu wissen, welche der eigene n Kompetenzen von den Lehrkräften als fortbildungsbedürfti g angesehen werden.                                                            5 Aus Gründen der Übersichtlichkeit verzichten wir im Folgenden auf die Nennung unterschiedlicher Gender, sofern der  Sachverhalt dieses nicht erfordert.  6 Problematisch an den Schulstatistiken NRWs [NW16] ist beispielsweise, dass die Schulen weitestgehend entscheiden können, ob Angebote der Informatik zugerechnet werden oder nicht.  7 Kriterien zum Informatikunterricht von Schülerinnen und Schülern  212 Johanna Borsch, Marco Thomasii“proceedings” — 2017/9/17 — 20:19 — page 213 — #213iiiiiiFür Fortbildungen stehen an deutschen Schulen – unserer Ansicht nach – zu wenig Arbeitsstunden und Mittel zur Verfügung , obwohl Fortbildungen immanenter Bestandteil der schulischen Lehre sein sollten . Inwieweit sich E -Learning in Inform atik-Lehrerfortbildungen integrieren lässt, wird mit d em verwendeten Frage bogen  ebenfalls untersucht .  3 Untersuchungsmethodik  Die Erhebung der Daten erfolgt quantitativ mit einem standardisierten Fragebogen, der Online auszufüllen ist. Abhängig von den Eingaben werden  relevante Frageblöcke ein - oder ausgeblendet. Als Druckfassung betr ägt die durchschnittliche Länge des Frage -bogens ca. sieben Seiten. Die geschätzte Bearbeitungszeit liegt bei ca. 20  Minuten.  Der Online -Fragebogen8 umfas st acht Blöcke  zu den Themen „Allgemeines “, „Informatikangebot “, „Bewertung des Kernlehrplans Informatik “, „Bewertung der Bildungsstandards “, „Fortbildungsbedarf “, „Bereitschaft zu E -Learning “, „Anforderungen an Lehrerfortbildungen “ und „Zeiteinteilung für  Fortbildungen “9. Der erste Teil  des Fragebogens  fokussiert auf allgemeine Angaben zur Schule und zur Person der Teilnehmer. Informatiklehrern werden dabei vier zusätzliche Fragen zum beruflichen Werdegang und zur aktuellen Tätigkeit als Informatiklehrer gestellt. Der zweite Teil erfasst, wie zufrieden die Teilnehmer mit dem Angebot und der Ausstattung an ihrer Schule sind und ob es Ang ebote zur Medienerziehung oder informatisch en Bildung in der S I gibt. Wird angegeben, dass es im Wahlpflichtbereich kein Angebot zur Informatik gibt oder  wird zu dieser Fr age „Sonstige“ angekreuzt, so w ird jeweils eine zusätzliche Frage  eingeblendet, die diese Angaben konkretisieren sollen. Teil 3 und 4 decken sich im  Aufbau nahezu. Teilnehmer von Real -, Sekundar - und Gesamtschulen werden in Teil 3 zum Kernlehrplan befragt,  während  alle übrigen Schulformen, für die aktuell kein Kernlehrplan existiert, in Teil 4 in ähnlicher Weise zu den GI -Bildungsstandards befragt werden. Diese Unterscheidung findet auch im zweiten Teil von Block fünf statt, der erfasst, welchen Fortbildung sbedarf die Lehrer für sich in Bezug auf die Kernlehrpläne bzw.  die GI -Bildungsstandards sehen. Durch dieses kontextabhängige Vorgehen wird auch der Gesamtumfang der Umfrage deutlich reduziert.   4 Datenerhebung  Gegenstand der Untersuchung sind Lehrer, die In formatik (im weitesten Sinne) unterrichten, und (stellvertretende) Schulleiter.  Der Aufruf zur Umfrage wurde ab                                                            8 Fragebogen und Auswertung sind online verfügbar unter http://ddi.uni -muenster.de/ab/pu  9 Die letzten drei Themen  (Block 6 -8) werden in einem gesonderten Beitrag unseres Arbeitsbereichs ausgewertet  (s. a. K. Akao in diesem Ba nd). Informatische Bildung in der Sekundarstufe I an nordrhein-westfälischen Schulen 213ii“proceedings” — 2017/9/17 — 20:19 — page 214 — #214iiiiiiSeptember 2016 zunächst über alle Bezirksregierungen NRWs gestartet und sollte an alle Haupt -, Real -, Gesamt - und Sekundarschulen sowie Gymnasie n gehen. Im Dezember ist deutlich  geworden , dass dieses Vorgehen dieses Mal  nur teilweise unterstützt wurde, so dass wir einen erneuten Aufruf an diese Schulen via Faxversand gestartet haben . Die Umfrage ist Anfang Februar 2017 beendet  worden .  Insgesamt h aben wir 247 Rückmeldungen erhalten, aus denen wir die Teilnahme von 211 verschiedenen Schulen abgeleitet haben. Leider konnten wir auch mit dem aufwändigen Faxversand keine hohen Rückmeldequoten erzielen.  Schulform10 H R S Ge Gym  Gesamt  456 559 114 314 625 Rückmeld ungen (in %) 5 8 9 10 16 Tabelle 1: Anzahl Schulen bzgl. intendierten Population nach Schulformen . Quelle: [NW16 ] Wie auch schon in den vergangenen Umfrage n liegt die Rückmeldequote bei Gymnasien höher als bei den an deren Schulformen. Am niedrigsten ist die Rückmeldequote bei den Hauptschulen.   Schulform  H R S Ge Gym  Gesamt  Anzahl Informatiklehrer11 119 532 46 337 1383  2417  Rückmeldungen  11 41 7 22 117 202 in % 9 8 15 7 8 8 Tabelle 2: Rückmeldung von Lehrern  für das Fach Informatik . Quelle: [NW16]                                                             10 H = Hauptschule, R = Realschule; S = Sekundarschule, Ge = Gesamtschule, Gym = Gymnasium,  11 Inkl. der Lehrer in der SII, da die amtlichen Schuldaten für das Schuljahr 2015/16 [NW16] keine diesbezügliche Unterscheidung machen.  214 Johanna Borsch, Marco Thomasii“proceedings” — 2017/9/17 — 20:19 — page 215 — #215iiiiiiSchulform  H R S Ge Gym  Sonstige  Gesamt  bin Lehrer für das Fach Informatik  11 41 7 22 117 4 202 unterrichte Informatik oder Fächer mit informatischen Inhalten  17 48 9 30 118 5 22712 unterrichte keine Fächer mit informatischen Inhalten  4 4 3 4 4 1 20 bin Schulleiter  3 9 3 3 5 1 24 bin s tellvertreten der Schulleiter  2 11 0 2 7 0 22 Tabelle 3: Teilnehmer der Umfrage nach Funktion(en) an der Schule  Gut 80% der Teilnehmer geben an, dass sie Lehrer für das Fach Informatik sind . 25 Lehrer  unterrichten „Fächer mit informatischen Inhalten“, ohne dass sie angeben, Informatiklehrer zu sein . Des Weiteren können wir festhalten, dass 46 (stellvertreten de) Schulle iter teilgenommen haben  (14%), von denen 6 Schulleiter und 16 stellvertreten de Schulleiter ang eben, dass sie Informatiklehrer sind . Insgesamt gesehen passt unsere Stichprobe auf die intendierte Population.  5 Ergebnisse und Auswertung  Aufgrund der recht geringen Rückmeldequoten der Umfrage sind die erhaltenen Daten sehr vorsichtig zu interpretieren und keinesfalls als „repräsentativ“ anzusehen. Allerdings lassen sich durchaus interessante Trends erkennen und Fragen initiieren .  5.1 Schulausstattung  Während di e amtliche Schuls tatistik NRWs [NW16] zeigt, dass im Durchschnitt 1,2 Lehrer für das Fach Informatik pro Schule zur Verfügung stehen, erg ibt sich in unserer Umfrage ein Durchschnitt von ca. drei  Informatiklehrer n pro Schule.  In der Studie lag der Schnitt f ür jede Schulform über dem Schnitt aus der NRW -Statistik:                                                             12Bei den informatiknahe n Lehrern ist das Geschlechterv erhältnis ca. 75 zu 25 für die Männer. Bei den Teilnehmern ohne informatische Fächer ist es eher anders herum: 40 zu 60 für die Frauen.  Informatische Bildung in der Sekundarstufe I an nordrhein-westfälischen Schulen 215ii“proceedings” — 2017/9/17 — 20:19 — page 216 — #216iiiiiiSchulform  H R S Ge Gym13 Schulen gesamt  456 559 114 314 625 Informatiklehrer  119 532 46 337 1383  Informatiklehrer  pro Schule  nach amtlichen Schuldaten  0,3 1,0 0,4 1,1 2,2 Mittelwert in der Studie  bzgl. Lehrer, die ein Fach mit informatischen Schwerpunkten unterrichten können (auch fachfremd)  2,6 2,6 2,4 2,9 2,8 Tabelle 4: Informatiklehrer an den Schulen . Quelle:  [NW1 6] Dies kann dahingehend interpretiert werden, dass vor allem informatikaffine Sc hulen an der Umfrage teilgenommen haben. Nur vier Teilnehmer geben an, dass sie keine Lehrer an ihrer Schule haben , die ein Fach mit informatischen Schwerpunkten unterrichten können . Auch in unserer Umfrage wird deutlich , dass Informatiklehrer relativ spät  in den Lehr erberuf einsteigen : Basierend auf dem Alter der Teilnehmer und der Zeitspanne der bisherigen Unterrichtstätigkeit für das Fach Informatik, ergibt sich die These, dass Informatiklehrer mit ca. 35 Jahren mit dem Unterrichtsfach  starten. Zudem unterrichtet  ein hoher Anteil an Lehrer n fachfremd14 Informatik . Dies geht einher mit einem  hohen Anteil von 34,2% an Nachqualifikationen ( i. d. R. „ Zertifikatskurse “ der Bezirks -regierungen , die zu einer Unterrichtserlaubnis führen ) im Fach  Informatik , was direkte Auswirkungen auf den Unterricht und den Stellenwert  des Fachs Informatik an den Schulen haben dürfte . Dieser Wert deckt sich in etwa mit dem Wert , den wir bereits 2015 mit einer  Lehrerumfrage ermittelt haben. 2015 lag der Anteil be i 30,2 % (N=96).  5.2 Schul ische A ngebote  Um die Angebot e zu einer informatischen Bildung an den Schulen präziser erfassen zu können, haben wir differenziert  nach dem Angebot einer Medienerziehung, einer verbindlichen informatischen Grundbildung (VIG), einer fächerintegrierten informationstechnischen Grundbildung (FIG) und einem  Informatikunterricht (IU) gefragt.  Überraschenderweise haben 35% der Schulen der U mfrageteilnehmer kein festes Stundenkontingent für eine Medienerziehung eingeplant. Die anderen Schulen bieten                                                            13 In den Zahlen für die Gymnasien und Gesamtschulen sind in den amtlichen Schuldaten auch die SII -Lehrer enthalten.  14 Fachfremd bedeutet Unterrichten ohne Lehrbefähigung, d. h. ohne Staatsexamen in dem Fach. Dorothee Müller [DM16] hat in ihrer Dissertation lesenswert die Situation des Fachs Informatik in NRW dargestellt und Gründe für den Lehre rmangel untersucht.  Von schulpolitischer Seite wird der Lehrermangel im Fach Informatik als ein Argument gegen die Einrichtung eines Pflichtfachs Informatik in der Sekundarstufe I benannt (mündliche Überlieferung einer Stellungnahme der Schulministerin, 20 16). 216 Johanna Borsch, Marco Thomasii“proceedings” — 2017/9/17 — 20:19 — page 217 — #217iiiiiiMedienerziehung zumeist über mehrere Stufen verteilt an, vornehmlich in den Stufen 5 bis 7. An Realschule n ist das Angebot zur Medienerziehung über die Schulstufen tendenziell schwächer ausgeprägt, während Sekundarschulen  eher ein größeres Angebot zu haben scheinen.  Eine verpflichtende informatische Grundbildung basierend auf einem schulinternen Konzept findet sich an immerhin 40% der Schulen, wi ederum vorwiegend in den Stufen 5 bis 7.  Das Angebot ist jedoch deutlich geringer als zur Medienerziehung.  Es kann ein stati stisch signifikanter Zusammenhang zwischen dem Angebot von Medienerziehung und verpflichtender informatischer Grundbildung in den unterschiedlichen Jahrgangsstufen festgestellt werden.15 Dies könnte darauf hindeuten, dass Schulen beide Bildungsziele  in ein Pflichtfach integrieren  oder der Begriff „Medienerziehung“ nicht klar von dem Begriff „verpflichtende informatische Grundbildung“ ab gegrenzt wird.16 Ein ähnlich starker signifikanter Zusammenhang kann ebenfalls auch zwischen dem Angebot von VIG und verpflichtendem Informatikangebot festgestellt werden.  Erstaunlich ist  (erneut) , dass 41% der Schulen der Ansicht sind, keine fächerintegrie rte informationstechnische Grundbildung (FIG) an zubieten.  Es lässt sich ebenfalls ein stati stisch signifikanter Zusammenhang zwischen Medienerziehung und fächerintegrierter informationstechnischer Grundbildung erkennen.17 Erwartungsgemäß gibt es an  nahezu 8 0% der Schulen kein Pflichtfach Informatik  in der Sekundarstufe I . Im Wahlpflichtbereich der Sekundarstufe I wird Informatik an fast 50% der Schulen als „reiner“ Informatikunterricht angeboten. 18% der Schulen bieten Informatik im Wahlpflichtbereich  nicht an und begründen dies zumeist mit dem Vorrang „traditioneller“ Fächer wie z.  B. Französisch (49%) und dem Lehrermangel (es gibt bei uns keine Lehrer: 24%; nicht genug Lehrer für den Wahlpflichtbereich: 32%). Durchschnittlich werden 2 -3 Stunden Informatik im Wahlpflichtbereich  der Stufen 7 -10 angeboten (die Stufen hängen von der jeweiligen Schulform ab) . In je einer Schulleiter - und einer Informatiklehrerumfrage 2015 haben wir die Frage gestellt: „Welche Verbesserungsvorschläge oder Anregungen fallen Ihnen zur Schulinformatik in NRW ein?“. Eine qualitative Analyse nach Mayring ergab die These, dass der geringe Anteil an verpflichtenden Informatikunterricht in der SI sowohl von Schulleitern als auch von Informatiklehrern kritisiert wurde. Ein Drittel der teilnehmenden Lehrer bzw. 50% der Lehrer, die die Frage beantwortet haben, wünschen sich eine verpflichtende SI -Informatik (Schulleiter : 13% der Teilnehmer; 32% der beantworteten Fragen) . Ebenfalls kritisiert wurde in dieser Auswertung die Ausstattung der Schu len bzgl. Hardware und Software (Schulleiter: 11% / 28%; Lehrer: 13% / 20%).  In der aktuellen Umfrage sind über 50% der befragten Lehrer mit dem Informatik -                                                           15 Für die Jahrgangstufen 5 -8 ist der p -Wert für den Chi -Quadrat -Test und dem Test nach Fischer bei 0,000 und die erwartete Häufigkeit des Chi -Quadrat -Test in jeder Zelle größer als 5. In Stufe 9 und 10 ist die erwartete Häufigkeit in einer Zelle jewei ls kleiner als 5 (25%). In Jahrgangsstufe 9/10 ist der p -Wert für den Chi -Quadrat -Test bei 0,007/0,005 und für den exakten Fischer Test bei 0,014/0,021. Man kann also immer noch von einem signifikanten Zusammenhang ausgehen.   16 Obwohl wir bei der Formulier ung der Fragen sehr auf eine Unterscheidung in den Begrifflichkeiten geachtet haben.  17 Für Interessierte stellen wir die statistischen Kennzahlen mit der Auswertung der Daten wieder online auf unseren Webseiten bereit.  Informatische Bildung in der Sekundarstufe I an nordrhein-westfälischen Schulen 217ii“proceedings” — 2017/9/17 — 20:19 — page 218 — #218iiiiiiangebot an ihrer Schule, den curricularen Vorgaben (s.   a.  u.) und der technischen Ausstattung zufr ieden18. Darüber hinaus haben wir die Teilnehmer  der oben genannten Umfragen gebeten, die informatischen Schwerpunkte ihrer Schule zur informatischen Bildung (Projektthemen, Wettbewerbsteilnahmen) kurz zu beschreiben. Häufig g enannt wurden: AGs ( z. B. zur Robotik), Informatikbiber, Bundeswettbewerb Informatik und Projekttage. Letztlich zeigt sich hier, dass die Lehrer bzw. die Schulen auf vielfältige Art und Wei se Freiräume nutzen, um ihren Schülerinnen und Schülern  eine informatische Bildung zu ermöglichen.  5.3 Kernlehrplan/Bildungs standards  Ein Viertel  der Teilnehmer von Real-, Gesamt - und Sekundarschulen geben an, dass sie die neue n Ke rnlehrpläne  nicht gelesen haben (N=95 ). Nur 14% der teilnehmenden Schulen dieser Schulformen geben an, dass die Kernlehrpläne bereits in schulinterne Lehrpläne umgesetzt wurden. An  ca. 55% der Schulen der Teilnehmer dieser Schulformen  seien die seit 2015 gültigen Kernlehrpläne zur Informatik noch nicht umgesetzt worden . Die verbleibenden Teilnehmer geben an, dass er teilweise umg esetzt wurde. Man kann zwischen der geplanten Umsetzung und dem Stand der Umsetzung an den genannten Schulformen einen signifikanten Zusammenhang feststellen19. Eine These hierzu könnte sein, dass die Schulen, die den Kernlehrplan bisher noch nicht umgesetz t haben, kein informatisches Angebot im Wahlpflichtbereich haben und daher den Kernlehrplan auch nicht umsetzen.  An den Gymnasien kennen nur 46% diese SI -Kernlehrpläne  ganz oder teilweise . Insgesamt  lässt sich in der Studie  die Tendenz erkennen, dass die T eilnehmer an Gesamt -, Real - und Sekundarschulen mit dem neuen Kernlehrplan , der an den Bildungsstandards orientiert ist,  zufrieden sind. Sie stimmen den Aussagen „Der Kernlehrplan deckt meine inhaltlichen/kompetenzbezogenen Erwartungen“, „Der Kernlehrplan ist grundlegend für eine zeitgemäße Medienbildung“ und „Der Kernlehrplan lässt genügend Freiräume für Schwerpunktsetzungen“ tendenziell zu20. Sie sind größtenteils  (46%  zu 40%)  der Meinung, dass die Umsetzung in die Unterrichtspraxis relativ problemlos funktioniert. Darüber, ob es genügend Unterrichtsmaterialien gibt, sind sie sich eher uneinig  (über 50% negieren diese Frage) . Abschließend lässt sich eine starke Tendenz (65%) dahingehend  feststellen , dass der Umfang an Fortbildungen bzgl. des neuen Kernl ehrplans als nicht angemessen erachtet wird.  Die GI -Empfehlungen zu Bildungsstandards wurden von 66% der Befragten (teilweise)                                                             18 Die Zufriedenheit ist sogar so groß, dass ganz unzufriedene Personen statistisch als Ausreißer erfasst werden. In der qualitativen Studie werden vermutlich eher die unzufriedenen Teilnehmer ihre Kritik bekundet haben.  19 Chi-Quadrat Test/ Test na ch Fisch er p=0,000. 24 der 26 Schulen die den Kernlehrplan bereits teilweise umgesetzt haben, planen dies auch weiterhin zu tun. Bei den Schulen, die den Kernlehrplan bisher nicht umgesetzt haben, planen ca. 50% die Umsetzung.  20 Über 50% stimmen teilweise oder vollk ommen zu.  218 Johanna Borsch, Marco Thomasii“proceedings” — 2017/9/17 — 20:19 — page 219 — #219iiiiiigelesen  (36% geben „Ja“ an; 30% „teilweise“) . Für die Hauptschulen und Gymnasien  existieren derzeit keine Kernlehrpläne für die S I-Informatik. An 23% diese r Schulen  wurden die Bildungsstandards in einem schulinternen Lehrplan umgesetzt21, aber 53%  der anderen 77%  geben auch an, diese nicht umsetzen zu wollen.  Es lässt sich darüber hinaus signifikant nachweisen, dass es einen Zusammen hang zwischen der Bekanntheit der Bildungsstandards an den Schulen und dem Willen zur Umsetzung gibt. Dabei deuten die statistischen Ergebnisse darauf hin, dass d er Umsetzung swille  von der Bekanntheit abhängt.22 Generell ist die Zustimmung zu den Bildungsst andards deutlich geringer als die der anderen Schulformen zu den Kernlehrplänen ( vgl. o.). 5.4 Fortbildungen  Auffällig bei informatik affinen  Befragte n ist vor allem der hohe Anteil (30 %) von denen, die keine Fortbildungen gehabt haben . Im Mittel ergibt sich ein Schnitt von ca. drei Fortbildungstagen  (Median 2 Tage)  in den letzten 3 Jahren bei den Teilnehmern, die Informatik oder Fächer mit informatischen Inhalten unterrichten. Dies deckt sich auch mit den Angaben, wie oft Fo rtbildungen stattfinden sollten  (1-2 Mal im Jahr)23.  Generell scheint ein Bedarf an Fortbildungen in Bezug auf den neuen Kernlehrplan vorhanden zu s ein. Dies geben immerhin fast 70 % der Teilnehmer mit informatischen Fächern an Real -, Sekundar - und Gesamtschulen an. Zu den Bildungsstandards  sind es 57% der Befragten . Zu allen Inhaltsbereichen  des Kernlehrplans  geben mehr als 50% der Teilnehmer mit „informatischen Fächern“  der Real -, Sekundar - und Gesamtschulen  einen zumindest teilweisen Fortbildungsbedarf für sich an.  Bezogen auf die Bildungsstandards (Gym, H , Sonstige ) wird insbesondere für die Inhaltsbereiche „Algorithmen“ sowie „Sprachen und Automaten“ ein hoher Fortbildungsbedarf gesehen . Während für den Kernlehrplan (R, S, Ge) die Inhaltsbereiche eher gleichgewichti g hinsichtlich einer Fortbildung gesehen werden , variieren  die Einschätzungen  zu den Inhaltsfeldern  der GI-Bildungsstandards stärker.  6 Fazit und Ausblick  Die GI -Bildungsstandards und deren Implementierung in Kernlehrpläne sind in NRW auf einem guten Weg und  finden in der Lehrerschaft deutliche Akzeptanz , obwohl  zu einigen Kompetenzerwartungen ein Fortbildungsbedarf seitens der Lehrkräfte signalisiert wird . Allerdings kann – aus unserer Sicht – nicht akzeptiert werden, dass                                                            21 Die Frage zur Umsetzung der Bildungsstandards wurde nur Teilnehmern von Hauptschulen, sonstigen Schulen und Gymnasien gestellt . Die zur Kenntnis der Bildungsstandards wurde allen Teilnehmern der Umfrage  gestellt . 22 Chi-Quadrat Test p=0,005 . la mbda = 0,250 bei „Umsetzung “ abhängig (asymptotisch signifikant), lambda=0,071 bei „gelesen “ abhängig.  23 Es zeigt sich eine Tendenz, dass der Wunsch nach Fortbildungstagen vergleichbar zur Realität durchgeführte r Fortbildungstage ist (kein signifikanter Z usammenhang).  Informatische Bildung in der Sekundarstufe I an nordrhein-westfälischen Schulen 219ii“proceedings” — 2017/9/17 — 20:19 — page 220 — #220iiiiiiSchulen keine Angebote zur informat ischen Bildung machen. Es fehlen für den Informatikunterricht in der Sekundarstufe I in NRW ausreichend  Ressourcen in den Bereichen Fachpersonal, Fort - und Weiterbildung und zuletzt auch  bei der entsprechenden Ausstattung von Schulen.  Sicherlich sind diese Mängel kein Alleinstellungsmerkmal der Informatik, aber bei einem wenig er etablierten Fach dürften sich diese gravierend er als in anderen Schulf ächern  auswirken . Auch die Universitäten müssten sich stärker für Informatik -Lehramtsstud iengänge der Sekundarstufe I engagieren und nicht zuletzt – gemeinsam mit der KMK – Konzept e entwickeln, um mehr Studierende  für Studiengänge zu gewinnen, die auf das Unterrichten von Informatik in der Schule vorbereiten.  Es bleibt leider festzuhalten, das s das Erheben von Daten zu Forschungszwecken im Schulbereich durch schulpolitische Entscheidungen massiv erschwert  wird. Eine  Unterstützung von Umfrage n durch die zuständigen Behörden könnte  zu „repräsentativeren“ Ergebnissen führen , die für alle Beteiligt en nützlich sind.  Es wäre zu wünschen, dass in konstruktiven Gesprächen nach Lösungen gesucht wird, die für den Schulalltag verkraftbar sind.  Die Tür zum Informatikunterricht  sollte nicht verschlossen werden.  Literaturverzeichnis  [BTY16]  Borsch, Johanna; T homas, Marco; Yomayuza, Angélica (2016): Informatisches Bildung in den frühen Klassen der Sekundarstufe I. Eine explorative Studie in den Regeriungsbezirken Münster und Detmold. In: Marco Thomas und Michael Weigend (Hg.): Infor matik für Kinder . 7. Münstera ner Workshop zur Schulinformatik. 1. Aufl. Norderstedt: Books on Demand, S. 93 –102. [DM16]  Müller, Dorothea: Der Berufswahlprozess von Informatiklehrkräften. Dissertationsschrift, Wuppertal 2016.  Online verfügbar unter http://elpub.bib.uni -wuppertal.de/edocs/dokumente/fbc/mathematik/diss2016/mueller  (09.02.2017).  [GI08]  Gesellschaft für Informatik (Hg.) (2008): Grundsätze und Standards für die Informatik in der Schule. Bildungsstandards Informatik für die Sekundarstufe I . Empfehlungen erarbeitet vom Arbeitskreis Bildungsstandards. Online verfügbar unter (20.03.2014) https://www.gi.de/fileadmin/redaktion/empfehlungen/Bildungsstandards_2008.pdf.  [KR15] Ministerium für Schule und Weiterbildung des Landes Nordrhein -Westfalen (2015): Kernlehrplan für die Realschule in Nordrhein -Westfalen - Wahlpflichtfach Informatik . Online unter http://www.schulentwicklung.nrw.de/lehrplaene/lehrplannavi gator -s-i/realschule/index.html  verfügbar (06.01.2017) . [KG15]  MSW NRW  (2015): Kernlehrplan für die Gesamtschule /Sekundarschule  in Nordrhein -Westfalen - Wahlpflichtfach Informatik . S. [KR15]  [NW16]  Ministerium für Schule und Weiterbildung des Landes Nordrhein -Westfalen : Amtliche Schuldaten zum Schuljahr 2015/16. Online verfügbar unt er (09.02.2017) https://www.schulministerium.nrw.de/docs/bp/Ministerium/Service/Schulstatistik/Amtliche -Schuldaten/index.html     220 Johanna Borsch, Marco Thomasii“proceedings” — 2017/9/17 — 20:19 — page 221 — #221iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 11Hochschule als außerschulischer Lernort für Schülerinnenund Schüler: Ein pragmatisches AngebotLars Prädel1, Gerlinde Schreiber2Abstract: Der vorliegende Beitrag stellt das Konzept und die Arbeiten im Informatik-Lernlabor vor,das Jugendliche unterschiedlicher Altersstufen anspricht und in verschiedensten Formaten (von 2hSchnuppern bis hin zum einjährigen Praktikum) einen praktischen Einstieg in informatikbezogeneAlltagsthemen bietet. Exemplarisch wird die Konzeption und Durchführung von drei Angebotenausführlicher ausgeführt: Ein Kompaktkurs im Rahmen einer Kinderferienakademie auf der InselWangerooge, ein mehrstündiges Schnupperangebot für Schulklassen sowie die Entwicklung vonFacharbeiten der gymnasialen Oberstufe. Die Arbeiten im Lernlabor setzen auf frei verfügbarenLernmodulen, frei verfügbarer Software sowie günstiger Hardware auf, die ﬂexibel an unterschiedlicheBedürfnisse und Einsatzbedingungen angepasst werden können. Der Beitrag schließt mit den bishergesammelten Erfahrungen zu den Erfolgsfaktoren dieser außerschulischen Angebote.Keywords: Lernlabor; informatische Bildung; Bild der Informatik; Programmiereinstieg; persönlicheLernumgebung1 EinleitungWarum studieren Sie Informatik? Diese Frage wird den Erstsemestern jedes Jahr beimStudiumseingang gestellt. Die Antworten darauf sind vielfältig. Viele geben an, dass sie sichaus wirtschaftlichen Aspekten für das Studium entschlossen haben, einige geben die vageAussage an, dass sie sich sehr viel mit Computern auseinandersetzen und mehr über dieFunktionsweise lernen wollen. Wenige hingegen geben an, dass sie bereits Vorkenntnisseaus der Schule mitbringen oder Informatik aus dem familiären Bereich kennen und somitBerührungspunkte haben. Die Schlüsse, die daraus gezogen werden, sind einfach: DieStudierenden haben ein di  uses Bild, was in dem Studium auf sie zukommt und werdenoftmals enttäuscht, wobei die hohen Abbruchquoten ein Beleg dafür sind. Auf der anderenSeite liegt der Verdacht nahe, dass es Personen gibt, die sich für ein Informatikstudiumbegeistern würden, wenn sie nur wüssten, was das bedeutet. Hier setzt das Informatik-Labor an. In unterschiedlichen Angeboten können Schülerinnen und Schüler mit oderohne Lehrkräfte ebenso wie Studieninteressierte in die Informatik und insbesondere in dieProgrammierung hineinschnuppern.1Hochschule Bremen, Flughafenallee 10, 28213 Bremen lars.praedel@hs-bremen.de2Hochschule Bremen, Flughafenallee 10, 28213 Bremen gerlinde.schreiber@hs-bremen.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 221ii“proceedings” — 2017/9/17 — 20:19 — page 222 — #222iiiiii12 Lars Prädel, Gerlinde SchreiberZiel des Lernlabors ist es, mehr Begeisterung für MINT-Fächer zu wecken, ihren Alltagsbe-zug deutlich zu machen und die Abbruchquote im Studium durch eine bessere vorhergehendeOrientierung zu senken. Alle Angebote des Lernlabors orientieren sich an didaktischenLeitlinien, die in ähnlicher Form auch aus anderen Lernlaboren [ In17,UF17 ] bekannt sind:• Alle Themen sind praxisorientiert und haben einen klaren Anwendungshintergrundmit Bezug zum Umfeld der Jugendlichen.• Die Jugendlichen arbeiten möglichst eigenständig in kleinen Teams.• Die Arbeitsgruppen können selbst inhaltliche Schwerpunkte setzen, die ihren Interes-sen und ihrer Vorbildung angemessen sind.• Die Betreuung erfolgt ﬂexibel in Abhängigkeit von Bedarf und Nachfrage der Teams.2 Umfeld und AusstattungDas Informatik-Lernlabor richtet sich an Schülerinnen und Schüler (mit oder ohne Lehr-kräfte) ebenso wie an Studieninteressierte. Eine besondere Herausforderung stellen dieunterschiedlichen Vorkenntnisse und die zeitliche Einschränkung dar. Die Teilnehmerinnenund Teilnehmer sollen mit einer neuen Aufgabenstellung konfrontiert werden, bei derzentrale Aspekte der Informatik, beziehungsweise der Programmierung, behandelt werden,die aber auch bei Interesse zu Hause weiter verfolgt werden können, ohne großen ﬁnanziellenAufwand und teurem Equipment. Daher werden kostengünstige Mikrocomputer RaspberryPi [Ra17 ] verwendet, die sich durch eine transportable Größe und vielseitige Möglichkeitenauszeichnen. So können diverse kostenlose Programme verwendet werden, die den Einstiegin die Programmierung erleichtern oder aber auch elektronische Schaltungen angeschlossenund mit einer Programmierschnittstelle verknüpft werden. Mikrocontroller, wie Arduino[Ar17 ], bieten auch einen Einstieg in elektronische Schaltungen und zentrale Aspekte derProgrammierung.Durch die Einbindung in die Fakultät für Elektrotechnik und Informatik besteht darüberhinaus die Möglichkeit, auf die im akademischen Lehrbetrieb genutzten Ressourcenzuzugreifen (beispielsweise Virtual Reality/Augmented Reality-Ausstattung, 3D-Scannerund 3D-Drucker). Als Ausblick auf das Studium können mit dem kostenfreien ProgrammBlender [Bl17] 3D- Animationen erstellt und bearbeitet werden.3 Ausgewählte AngeboteIm folgenden sind einige exemplarische Angebote angegeben, die kontinuierlich durchgeführtwerden.222 Lars Prädel, Gerlinde Schreiberii“proceedings” — 2017/9/17 — 20:19 — page 223 — #223iiiiiiHochschule als außerschulischer Lernort für Schülerinnen und Schüler 133.1 KompaktkurseIn einem Kompaktkurs wird eine Gruppe von Jugendlichen eine Woche lang mehrere Stundenpro Tag betreut. Ziel bei diesem Konzept ist, anhand einfacher Aufgaben einen Einstiegin die Programmierung zu erhalten und anschließend eigene Ideen der Teilnehmerinnenund Teilnehmer umzusetzen und sie dabei zu unterstützen. Dieses Konzept wird zumBeispiel in der Kinderferienakademie auf der Nordseeinsel Wangerooge umgesetzt. Dabeihaben sowohl Jugendliche, die mit ihren Eltern Urlaub auf der Insel machen, als auchJugendliche, die auf der Insel wohnen, die Möglichkeit daran teilzunehmen. In einer Gruppevon bis zu 15 Teilnehmerinnen und Teilnehmern im Alter von 12 - 16 Jahren werden inden Räumlichkeiten der Inselschule Wangerooge verschiedene kurze Projekte durchgeführt.Nicht nur aufgrund der Transportfähigkeit der Raspberry Pis und der Arduinos bietensich Angebote mit diesen Geräten an. Nach einer Einführung in die Funktionsweise derHardware und des Linuxsystems können unterschiedliche Projekte durchgeführt werden.Zum Beispiel kann ein Programm in der Programmiersprache Python [ Py17 ] erstelltwerden, welches die Möglichkeit unterstützt, die virtuelle Welt von dem Spiel Minecraft[Mi17a ] zu verändern. In der Raspberry Pi Version [ Mi17b ] dieses Spieles ist es möglich,verschiedene Gebäude oder Landschaften aus unterschiedlichen Würfeln zu erstellen. Durchdie Programmierschnittstelle zu Python können diese auch algorithmisch verändert werden.Da dieses Spiel bei Jugendlichen populär und somit das Spielprinzip von vornherein klar ist,wird ein einfacher Einstieg ermöglicht. Es entsteht der Eindruck, dass die Teilnehmerinnenund Teilnehmer ein neues Feature in dem Spiel erforschen, auf der anderen Seite abermit ernsthafter Programmierung konfrontiert werden. Die Jugendlichen lernen einfacheKonzepte der Programmierung und können die Ergebnisse direkt in dem Spiel verfolgen. Sokann eine Schleife in Python dazu verwendet werden um eine Mauer zu erstellen. Auch dieVerwendung von Variablen und anderen Kontrollstrukturen wird erlernt, indem die Positiondes Spielers abgefragt oder verändert wird. Nachdem kleinere Aufgaben gestellt werden,können die Teilnehmerinnen und Teilnehmer eigene Ideen verwirklichen und so eigeneSpiele innerhalb der Minecraft-Welt erstellen.3.2 FacharbeitenIn Zusammenarbeit mit der gymnasialen Oberstufe von Schulen werden jährlich Projekt-arbeiten vergeben. Diese Projektarbeiten werden je von zwei bis vier Schülerinnen undSchülern in dem Abiturjahrgang über einen Zeitraum von 2 - 3 Wochen bearbeitet. Beidiesen Facharbeiten bekommen die Teilnehmerinnen und Teilnehmer eine Aufgabe gestelltund bearbeiten diese nach einer kurzen Einführung selbstständig. Das Lernlabor fungiertals Kunde, der ein Projekt in Auftrag gibt, aber auch mithilft, dieses umzusetzen. Dabeiwerden die Schülerinnen und Schüler in den Hochschulkontext aufgenommen und könnenam Hochschulleben teilnehmen. Als Beispiel sei unter anderem ein ferngesteuertes Autogenannt, das zunächst aus Lego-Bauteilen konstruiert wird. Ein Arduino steuert zweiMotoren des Fahrzeugs an. Über eine Bluetooth-Verbindung wird eine Verbindung zu einemHochschule als außerschulischer Lernort für Schülerinnen und Schüler 223ii“proceedings” — 2017/9/17 — 20:19 — page 224 — #224iiiiii14 Lars Prädel, Gerlinde SchreiberAndroid-Smartphone erstellt und eine App, die in dem kostenfreien Programm App Inventor[MI17c ] erstellt wird, steuert dieses Auto. Dabei werden vielseitige Konzepte vermittelt:die elektronische Schaltung zum Ansteuern der Motoren und des Bluetooth-Chips, dasProgrammieren von Microcontrollern inklusive Schleifen, Variablen und Kontrollstrukturen,das Erstellen einer Android-App innerhalb von App Inventor und die Herstellung einerBluetooth-Verbindung. Die Teilnehmerinnen und Teilnehmer werden bewusst mit derAufgabe alleine gelassen und müssen sich selbst das benötigte Wissen aneignen, habenaber kontinuierlich die Gelegenheit Fragen zu stellen. Der Vorteil ist, dass mit einfachenkostengünstigen Mitteln ein abgeschlossenes Projekt erstellt werden kann, das eindrucksvollund vorzeigbar ist.3.3 SchnupperangebotEinen Tag die Hochschule kennenlernen und sehen, was Informatik bedeutet: Dieses Angebotrichtet das Lernlabor an Schulklassen, aber auch an einzelne Schülerinnen und Schüler.Dabei wird eine Übersicht über die Möglichkeiten eines Studiums an der Hochschulevorgestellt, gefolgt von einer praktischen Arbeit. Damit wird ein Einblick in die Hochschulegewährt, aktuelle Projekte werden vorgestellt, aber es wird auch programmiert.Dabei wird unter anderem eine Alarmanlage in Python programmiert, die ein Foto macht,sobald eine Lichtschranke passiert wird, und ein Alarmsignal ertönt. Dabei wird einRaspberry Pi verwendet, bei dem eine elektronische Schaltung mit einem Fotowiderstand,einer LED und einem Summer angeschlossen ist. Mit einer entsprechenden Bibliothekvon Python [ Gp17 ] können diese Bauteile einzeln angesteuert werden. Der Wert von demLichtwiderstand wird in Variablen abgespeichert und abhängig von diesem Wert wird einAlarm ausgelöst. So kann ein Blinken der LED in einer Schleife realisiert werden, diedie LED ein- und ausschaltet, oder der Summer kann für eine bestimmte Zeit einen Tonerzeugen. Auch hier werden grundlegende Inhalte der Informatik und insbesondere desProgrammierens in einer authentischen Entwicklungsumgebung einfach vermittelt.Ein anderer Workshop widmet sich der 3D-Visualisierung. Dieser Workshop richtet sich eheran Schulklassen, die bereits einen Background in Informatik haben und einen Ausblick aufdas Studium erlangen wollen. Dabei können auf die Ressourcen der Hochschule zugegri  enund 3D-Objekte in dem kostenfreien Programm Blender erstellt und animiert werden. DieseObjekte können dann mit einem 3D-Drucker ausgedruckt werden, oder es können Objekteund Personen mit dem 3D-Scanner erfasst werden. Auch hier liegt der Fokus darin, dasseinfache Grundlagen der Computer-Graphik vermittelt werden, die aber auch zu Hauseweiterverfolgt werden können.224 Lars Prädel, Gerlinde Schreiberii“proceedings” — 2017/9/17 — 20:19 — page 225 — #225iiiiiiHochschule als außerschulischer Lernort für Schülerinnen und Schüler 154 Erfahrungen„Im Informatikunterricht erhalten Schülerinnen und Schüler vielfältige Gelegenheiten zurEntwicklung und Ausbildung von Kompetenzen, die sie befähigen, ihr Leben in einer Infor-mationsgesellschaft selbstbestimmt zu führen und zu gestalten“[ GI16 ]. Dieser Präambelder von der Gesellschaft für Informatik verabschiedeten Bildungsstandards ist unbedingtzuzustimmen - aber was ist mit der informatischen Bildung derjenigen Schülerinnen undSchüler, die auf ihrem schulischen Weg keinen Informatikunterricht durchlaufen? Hiersetzen außerschulische Bildungsangebote wie das Vorgestellte an. Nach unseren Erfahrun-gen (Befragung am Ende der Angebote) sind folgende Aspekte der Angebotsgestaltungfür die Jugendlichen besonders wichtig und bestätigen unsere didaktischen Leitlinien:Voraussetzung für die Teilnahme sind nicht konkrete Fachkenntnisse, sondern Interesse undEngagement. Die Themen sind unmittelbar verständlich und als praktische alltagsbezogeneAufgabenstellung einleuchtend. Die Betreuung im Lernlabor bietet Unterstützung beimEinstieg in das jeweilige Thema, begleitet danach kontinuierlich, geht auf individuelleFragen ein und gibt Feedback zum Projektfortschritt. Die Betreuung drängt sich nichtauf, sondern schaltet sich auf Initiative der Jugendlichen ein. Sie wird als Unterstützungwahrgenommen und nicht als Kontrollinstanz. Aufgaben werden in selbst gewählten Teamsbearbeitet. Zu beobachten ist, dass die Teilnehmerinnen sich bevorzugt zu reinen Mädchen-teams zusammenschließen. Im Team kann die inhaltliche Schwerpunktsetzung individuellin Abhängigkeit von Interessen und Vorkenntnissen festgelegt werden. Die Zuständigkei-ten können sich im Verlauf verändern und weiterentwickeln. Im Lernlabor ﬁndet keineLeistungsbewertung nach dem Motto ”wer ist wie weit gekommen” statt, sondern es gibtAnerkennung für Fortschritte und Wertschätzung für kreative eigene Ideen. Die Arbeitenﬁnden an einem authentischen Lernort statt (innovative Hochschulumgebung mit Kontaktenzu Lehrenden und Studierenden).5 FazitDas Schülerlabor proﬁtiert von der engen Kooperation mit einzelnen Schulen und Lehrkräftenund von besonderen Rahmenbedingungen: Die Angebote werden von den Teilnehmerinnenund Teilnehmern freiwillig ausgewählt aus Interesse an Thema und Umgebung. Damitentfallen im Lernlabor die klassischen schulischen Motivationsprobleme. Die Angeboterichten sich vor allem an kleinere Gruppen, deren eigene technische Ausstattung (nach demMotto ,,Bring your own Device‘) in die Aufgabenbeschreibung mit einbezogen werden kann.Die private Fortsetzung und Vertiefung von im Lernlabor durchgeführten Projekten wirddadurch erleichtert. Das Lernlabor besitzt nicht die Ressourcen zur Neuentwicklung vonAngeboten oder der homogenen Ausstattung von Arbeitsgruppen mit aufwendiger Hard-oder Software. Stattdessen werden frei zugängliche Lernumgebungen und Aufgabensamm-lungen (wie [ Re17 ], [Fr17]) gesichtet, ausgewählt und an die Vorkenntnisse und zeitlichenRahmenbedingungen der jeweiligen Teilnehmerinnen und Teilnehmer angepasst. DamitHochschule als außerschulischer Lernort für Schülerinnen und Schüler 225ii“proceedings” — 2017/9/17 — 20:19 — page 226 — #226iiiiii16 Lars Prädel, Gerlinde Schreiberleistet das Lernlabor auf pragmatische Weise einen Beitrag, Schülerinnen und Schüler beimAufbau einer persönlichen Lernumgebung zu unterstützen.Literaturverzeichnis[Ar17] Arduino AG, http://www.arduino.cc, Stand: 14.02.2017.[Bl17] Blender Foundation, http://www.blender.org, Stand: 14.02.2017.[Fr17] Friends-of-Fritzing Foundation, http://fritzing.org/projects/, Stand: 14.02.2017.[GI16] GI Bildungsstandards Sek2, http://informatikstandards.de/docs/Bildungsstandards_SII.pdf,Stand: 14.02.2017.[Gp17] Gpiozero - Raspberry Pi Foundation, http://gpiozero.readthedocs.io/, Stand: 14.02.2017.[In17] Info-Sphere - Schülerlabor Informatik der RWTH Aachen,http://schuelerlabor.informatik.rwth-aachen.de, Stand: 14.02.2017.[Mi17a] Minecraft (Mojang Synergies AB), http://minecraft.net, Stand: 14.02.2017.[Mi17b] Minecraft: PI Edition (Mojang Synergies AB), http://minecraft.net/en-us/edition/pi/, Stand:14.02.2017.[MI17c] MIT App Inventor - Massachusetts Institute of Technology, http://appinventor.mit.edu/,Stand: 14.02.2017.[Py17] Python Software Foundation, http://www.python.org, Stand: 14.02.2017.[Ra17] Raspberry Pi Foundation, http://www.raspberrypi.org, Stand: 14.02.2017.[Re17] Resources - Raspberry Pi Foundation, http://www.raspberrypi.org/resources/, Stand:14.02.2017.[UF17] UFZ-Schülerlabor - Helmholtz Zentrum für Umweltforschung,http://www.ufz.de/schuelerlabor/ Stand: 14.02.2017.226 Lars Prädel, Gerlinde Schreiberii“proceedings” — 2017/9/17 — 20:19 — page 227 — #227iiiiii Aller Anfang ist schwer!  Wie gelingt der Einstieg  in den Informatikunterricht ?  Dieter Engbring1 Abstract:  Dieser Aufsatz befasst sich mit dem Umstand, dass nicht allen SchülerInnen  mit der erwünschten Geschwindigkeit und den erwarteten  Erfolgen der Einst ieg in den Informatiku nter-richt gelingt. Zu den Gründen  werden in diesem Aufsatz Hypothesen vorgelegt, die sich aus Be-obachtungen im Informatikunterricht sowie aus Gesprächen mit LehrerInnen  und SchülerInnen  ergeben. Zusätzlich we rden alternative Vorgehens weise n vorgestellt, die nicht nur einen anderen Informatik anfangs unterricht beschreiben , sowie  der Überprüfung der Hypothesen  dienen .  Keywords: Anfangsunterri cht, Programmierumgebungen und -sprachen, Objektorientierung  1 Einleitung  Nicht nur hinter vorgehal tener Hand , sondern ganz offen reden Informatik -LehrerInnen darüber, wie schwer es einigen ihrer SchülerInnen  fällt, selbst die einfach en und grund-legen den Begriffe zu lernen und leichte  Aufgaben zu lösen. In der fachdidakt ischen Literatur gibt es bislang  keine Untersuchungen, die den Gründen und dem Ausmaß die-ser Befunde nachgehen . Auch dieser Aufsatz kann  hierzu allenfalls erste Hypothesen liefern, aus denen dann eine s ystematische Untersuchung  entwickelt werden soll (2).  Diese Hypothesen werden  durch ein en Alternativvorschlag für den Einstieg (3) und einem  Forschungsansatz zur Überprüfung der Hypothesen und zur Evaluation des alter-nativen Zugangs ergänzt  (4). In einem Fazit mit Ausblick wird auf die jetzt anstehenden Forschungsarbeiten hingewiesen (5).  2 Befunde zum Informatikunterricht  in der Einführungsphase  Das Implementieren und damit auch die Programmiersprache sowie die Entwicklung s-umgebungen spielen eine große Rolle in der alltäglichen Praxis des Informatikunterricht s in der Einführungsphase der gymn asialen Oberstufe, die immer noch für viele  Schüler -Innen  der Informatik -Anfangsunterricht ist. Zwar ist es das weiterreichende  Ziel, die da -hinterstehenden Techniken und Denkweisen der informatischen Modellierung  zu vermit-teln, die auch – siehe Computatio nal Thinking [Wi06] oder ähnliche  Ansätze – über die Informatik hinaus anwendbar sind. Ansätze , diese  Kompetenzen ohne Implementierung, frei von einer Programmiersprache und einer dedizierten ggf. auch einer für unterrichtli-che Zwecke gestaltete (Entwicklu ngs-)Umgebung  zu erreichen , greifen  allerdings  wohl                                                            1 Institut für Informatik, Univer sität Bonn, Römerstr. 164, 5311 7 Bonn  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 227ii“proceedings” — 2017/9/17 — 20:19 — page 228 — #228iiiiii zu kurz . Dafür gibt es eine Reihe von lernpsyc hologischen und fachlichen Gründen, auf die hier nicht g esondert eingegangen werden kann . Denn es ist das Anliegen dieses Auf-satzes,  die alltägliche Praxis de s Informatikunterrichts , die das Implementieren im erheb-lichen Umfang beinhaltet , zu analysieren . Denn Beobachtungen der alltäglichen Praxis haben ergeben, dass dem Implementieren sehr viel Zeit eingeräumt wir d, ohne dass die Lernenden  dabei zusätzliche Ko mpetenzen erwerben . Mehr noch: In d er Phase des Im-plementieren s wird die ohnehin schon erhebliche  Heterogenität größer, weil insbesonde-re viel Zeit dafür ver (sch) wendet wird, syntaktisch korrekten Code zu erzeugen , und  dabei die nicht intrinsisch motiviert en SchülerInnen sehr vorsic htig und langsam agier en. Darüber hinaus befassen diese sich außerhalb des Unterrichts kaum bis gar nicht mit den Inhalten. Diese Unterschiede scheinen  durch den nun vollzogenen Wechsel zur Objekto-rientierung größer geworden zu s ein.  Im Folgenden wird die dahinter stehende komplexe Gemengelage in (untersuchbare) Teilaspekte zerlegt . Dies geschieht , wie in der Einleitung schon betont, in Form von Hypothesen, die anhand von Symptomen oder Befunden aus dem Informatiku nterricht herge leitet werden. Dazu wird zunächst dem Aspekt der Objektorientierung nachgegan-gen, von dem man sich einen einfacheren Zugang versprochen hatte, weil sie „der natür-lichen Den kweise am nächsten kommt“ [Sc95,  S. 186] und der möglichst dem imperati-ven Paradigma  vorangehen sollte [Di07]. In diesem Zusammenhang hat es in den letzten Jahren eine ganze Reihe von Untersuchungen und Publikationen gegeben, die den Nut-zen der Objektorientierung in ihrer Ambivalenz diskutieren  (2.1). Danach  wird auf popu-läre Entwicklungs umgebungen  für den Informatikunterricht  eingegangen , die u.  a. das Ziel haben , den vielleicht zunächst nicht so motivierten SchülerInnen  den Zugang zum Programmieren einfacher bzw. überhaupt schmackhaft zu machen . Es zeigt sich, dass diese Herausforderunge n mit Technik (allein) nicht zu lösen sind (2.2). Zusätzlich wird auf grundsätzliche Schwierigkeiten des Informatik -Anfangsunterrichts hingewiesen, die sich daraus ergeben, dass man systematisch in einige Bausteine  algorithmische r Sprache einführt  (2.3) . Ein Zwischenfazit beendet diesen Abschnitt (2.4).  2.1 Objektorientierung im Anfangsunterricht  Im Jahr 2009 erschien ein Aufsatz von Kortenkamp, Modrow, Oldenburg, Poloczek und Rabel [KM09], in dem sie sich kritisch mit der Objektorientierung im Informatikunter-richt auseinandersetzen. Er endet mit diesem Satz:  „Die geringe Zahl von SchülerInnen , die Informatik in der Qualifikationsphase belegt, ist mög-licherweise nicht nur den Zwängen des Zentralabiturs geschuldet, sondern auch eine Reaktion darauf, dass der Un terricht (immer noch) nicht an den Bedürfnissen  der SchülerInnen  orientiert ist.“ [KM09, S.  47]  Sie argumentieren in dem Aufsatz, dass OO nicht nur an den Bedürfnissen der Schüler -Innen  vorbeigeht , sondern auch an denen der  Fachwissenschaftler, da auch die Vorberei-tung auf ein Hochschulstudium nur unzureichend geleistet wird. Letzteres ist ein Aspekt, auf den Börstler schon zwei Jahre zuvor hingewiesen hat te [Bö07].  Außerdem schreiben 228 Dieter Engbringii“proceedings” — 2017/9/17 — 20:19 — page 229 — #229iiiiii Kortenkamp und anderen :  „Die Behandlung von OOM ohne OOP steht vor eine m Problem, das dem der Mengenlehre in der „Neuen Mathematik“ in den Siebziger Jahren des vorigen Jahrhunderts ähnelt: Die SchülerInnen  lernen neue Wörter zur Beschreibung von Dingen, die sie schon kennen; sie erschließen sich damit aber keinen neuen Möglic hkeiten, etwas z u tun oder zu verstehen.“ [KM09, S.  43]  Diese Analogie zur Mengenlehre erscheint insofern statthaft, da es vielen SchülerInnen  in der Tat nicht gelingt, die Informatikb egriffe Klasse, Unterklasse, Objekt , Attribute und Attributwerte  zu def inieren und sinnvoll in ihre unterrich tlichen Äußerungen einzu-bauen. Dies scheint  auch Folge des Zugangs ; dies ist zugleich Inhalt von Hypothese 1 : Es wird  versucht , ohne Anschauung an einem Programm nur durch Bezug auf Fahrzeuge oder Tiere diese Begriffe (insbesondere unter Einbeziehung der Vererbung ) vorab zu klären . Dass eine Klasse Teil des Programm -Code s ist, der diesen strukturiert  und das s die Objekte ( vielleicht sollte man besser von Instanzen  sprechen) zur Laufzeit erzeugt werden, wird dabei zu wen ig deutlich hervorgehoben. Insbesondere wird kaum  darauf eingegangen, wie der Programm -Code im Computer  verarbeitet wird.   Viele, die in der Objektorientierung eine Hoffnung auf einen Informatikunterricht gese-hen haben, der besser zugänglich ist, beziehen sich auf einen Aufsatz von Schwill, der 1995 Programmierstile im Anfangsunterricht analysiert  hat. Er schlussfolgert:  „Wir favorisieren für die Einführung in die Informatik den objektorientierten Ansatz vor allem aus drei Gründen: Erstens erfüllt dieses P aradigma unbestrittenermaßen informatisch orientie rte Forde-rungen nach zeitgemäßem  Unterricht mit mächtigen Konzepten … Zweitens ist dieser Ansatz im Sinne des didaktischen Prinzips der Fortsetzbarkeit, ein zentrales Merkmal eines nach dem Spiral-pinzip org anisierten Curriculums, auf höheren Niveau beliebig ausbaufähig. … Drittens – dies scheint aus pädagogischer Sicht der wichtigste Pluspunkt – ordnet sich der objektorientierte Stil in besonderer Weise harmonisch den elementaren kognitiven Prozessen unter, die beim Denken, Erkennen und Problemlösen im menschlichen Gehirn ablaufen.“ [Sc95, S. 183]  Letztlich beruht seine dritte Schlussfolgerung darauf , dass er ein kognitionspsychologi-sches Experiment zur Problemlösung (von Duncker aus den 1930er Jahren) einer  Deu-tung zuführt, die Aspekte der Ob jektorientierung enthält . Einer dieser Aspekte, den Duncker funktionale Bindung  nennt, behindert  jedoch  den Problemlöseprozess . Diese muss  durch eine alternative Sicht auf die Objekte, durch eine andere  funktional e Bin-dung, im Problemlöseprozess überwunden werden . Damit  erscheint  die Schlussfolgerung  weit weniger zwingend , da o bjektorientier tes Denken den Widerspruch,  dass die funktio-nale Bindung  den Problemlöseprozess  ggf. behindert, eigentlich nicht auflösen kann .  Die Vorteile der Objektorientierung ergeben sich , den Beobachtungen im Informatikun-terricht folgend, vielmehr aus einem anderen Umstand. Dies ist dann Hypothese 2:  Den SchülerInnen  fällt es leichter die Objekte und deren Aufgaben in einem Anwendungs-kontext zu benennen und zu beschreiben  als von Beginn an Algorithmen zu beschreiben.  Damit wird die Zerlegung der Aufgabenstellung 'einfacher' , als wenn sie direkt algo-rithmisch  z. B. durch stepwise refinement  erfolgen würde . Um d ieses zu erreichen , müs-sen die Beispi ele jedoch sinnvoll gewählt werden ('Hello World' oder mathematische Aller Anfang ist schwer! Wie gelingt der Einstieg in den Informatikunterricht? 229ii“proceedings” — 2017/9/17 — 20:19 — page 230 — #230iiiiii Aufgaben sind dann wohl kein sinnvoller Einstieg).  Zugleich  muss man sich eingestehen, dass Algorithmen und imperative Programmierung nicht obsolet sind . Die Einführung der Objektorienti erung hat dazu geführt, dass die SchülerInnen  ein M ehr an Begrif fen und Konzepten lernen müssen . Denn Objektorien-tierung ist – so wie sie in den Schulen am Beispiel der  Sprache Java unterrichtet wird  – vor allem  eine imperative Programmierung ++.2 Aus diese r Erkenntnis ergibt sich  ein pragmatischerer Zugang wie er 2008 von Hu vorgeschlagen wurde . Er überschreibt sei-nen Aufsatz mit „Just say 'a class defines a Data Type' “ [Hu08] . Objektorientierung wird in diesem Sinne eine andere, vielleicht sogar elegantere  bzw. eine größere Vielfalt zulas-sende Methode , Datentypen zu strukturieren und miteinander in Beziehung zu setzen.  Insofern ergibt sich  Hypothese 3 : Die Vorteile von OOM und OOP werden  wohl insbe-sondere dann  erkennbar , wenn man tatsächlich a) Vererbung b enötigt  wird, da durch eine Klassenhierarchie wie z.  B. im Bereich der Komponenten für GUIs ein erheblicher Rationalisierungseffekt eintritt, b) die Algorithmen als Methoden sehr viel enger und auch in kompakterer Schreibweise (die Punktschreibweise) an di e Datenobjekte gekop-pelt werden können sowie c) in komplexeren Kontexten, an denen eine Vielzahl3 von Objekten beteiligt ist und dadurch das Problem/die Aufgabe zerlegt werden kann.  Damit ist die ideologisch geführte Diskussion um „Objects later“ bzw. „Ob jects first“  für die Praxis weniger interessant. V or allem die Untersuchungen von Ehlert (zum Teil mit  Schulte) zeigen , dass letztlich keine Präferenzen an gegeben  werden  können  (vgl. hie rzu die Zusammenfassung in [Eh12, S. 184ff ]) Man kann zwar beobachten , dass Objektori-entierung einen anderen Zugang zur Problemlösung erfordert als ein en rein imperativen . Letztlich werden auch bei der Nutzung objektorientierter Sprachen Algorithmen entwo r-fen. Dies verweist dann auf  die Hypothese 4 : In der imperativen Modell ierung und Pro-grammierung sozialisierte Personen lassen sich deswegen weniger auf objektorientiertes Modellieren ein, weil sie darum wissen, dass am Ende doch noch  algorithmisiert werden muss . Diese durchaus schw ierige Arbeit wollen sie so schnell  wie mögl ich erledigen . Außerdem vermuten sie in der Suche nach Objekten und der Zuordnung von Aufgaben einen Overhead , der bei kleinen und bereits sehr gut mathematisierten bzw. algorithmi-sierten Kontexten , die oftmals  für den Einsti eg genutzt werden, auch vorhand en ist.  2.2 Programmierumgebungen für Anfänger  In den letzten 30 Jahren sind immer wieder  neue Programmierumgebung en für den In-formatik (anfangs) unterricht vorgestellt wo rden. Oftmals  werden d en SchülerInnen  grafi-sche Objekte zur Verfügung gestellt, die vorpro grammierte Funktionen enthalten, die dann weiter genutzt werden sollen. Anhand von zwei Beispielen wird im Folgenden kurz erläutert, dass hierdurch die Lernprozesse zum einen in Bezug auf die Mensch -Ma-schine -Interaktion  erleichtert werden soll en und zum a nderen Motivation geschaffen                                                            2 Vgl. C und C++. M. a. W.: Der Umfang des Lernstoffes wurde erhöht.  3 Für Anfänger erscheinen drei unterschiedliche Objekte eine V ielzahl, die aber zugleich erschließbar ist.   230 Dieter Engbringii“proceedings” — 2017/9/17 — 20:19 — page 231 — #231iiiiii werden soll, sich überhaupt mit dem Programmieren zu befassen. Hypothese 5 : Die Vielzahl solcher Umgebungen scheint ein Indiz für den Bedarf zu sein und für die wei-terhin vorhandene Unzufriedenheit mit den bisherigen Umgebungen . Hier gibt es Pro-zesse, die man technisch unterstützt haben möchte, ggf. sind diese Wünsche auf didakti-schen Kontext bezogen. Die Anforderungen sind im Anfangsunterr icht andere als später. Daher wird immer wieder versucht  eine „eierlegende Wollmilchsau “ zu erstellen.  Die beiden Beispiele, die im Folgenden näher betrachtet  werden, sind Alice , das kaum eine Rolle (mehr ) spielt und zum anderen Greenfoot , das derzeit auch unterstützt durc h ein in 2.3 zu thematisierendes  Schulbuch gerade eine große Rolle spiel t.  Zu Alice:  Pausch ist sozusagen der Vater von Alice. Da man  darum wusste, dass er nicht mehr lange  zu leben hat, wurde ihm  die Gelegenheit gegeben , eine Last Lecture  zu hal-ten, in der er u.  a. auf Alice einging. Sein Ziel war es , die Lernenden zu überli sten.  „So Alice is a project that we worked on for a long, long time. It's a novel way to teach computer programming. Kids make movies and games. The head fake, again, we're back to the head fakes. The best way to teach somebody something is to have them think they're learning something else. … the head fake here is that they're learning to program but they just think they're making movies and video games.” 4  Ein solcher head f ake kann nur ein kurzfristig wirksamer  Lern anreiz  sein. Da Alice zu-dem nur vord ergründig objektorienti ert ist, sollte man sich an ihr nicht weiter orientieren  (vgl. hierzu auch [DM09, En11]). In Alice (ähnlich wie z.  B. in Scratch ) wird das Coden  durch Bau - bzw. Puzzlesteine un terstützt, so dass man schneller zu syntaktisch korrektem Code kommt. Dies schafft zwar ein wenig Raum für Kreativität, die jedoch mit den typischen Vorgehensweisen im Informa tikunterricht im Konflikt steht  (siehe 2.3).  Greenfoot  ist hingegen eine Plattform, die in vielen Kursen (erfolgreich ) genutzt wird. Dieser  Aufsatz auf BlueJ , der auch von Kölling und Co entwickelt wurde, setzt letztlich den Ansatz von Mini -Welten fort, wie er durch Logo -Turtle, durch Karol, the robot , den Käfer Kara  und viele mehr propagiert wird. In Greenfoot  sind viele  Implementation en in den Basisklassen World  und Actor  versteckt, wodurch die dahinterstehende Komplexität , mit der Anfänger auch nicht konfrontiert werden sollten , auch nicht erkennbar ist. Diese miteinzubeziehen würde wohl auch dazu führen, dass die SchülerInnen  demotiviert w er-den. Die Implementation der Basisklassen der Szenarien  (Roboter, Rover, Spinnen etc.) sind jedoch nicht versteckt, was im unterrichtlichen Geschehen u. a. dazu führe n kann , dass gerade von pfiffigeren SchülerInnen  die Szenarie n manipuliert werden und korrekte Aufgabenlösungen nicht funktionieren. Zudem  muss man Greenfoot  irgendwann verlas-sen und auf eine andere Umgebung wechseln. Hier zeigt sich , wie sehr die gewonnenen Kenntnisse an die Umgebung gekoppelt sind und in andere Umgebung en, selbst wenn man nu r zu BlueJ  wechselt, nicht übertragen werden  können  (vgl. hierzu [En13]).  Hypothese 6:  Der Versuch , mit Technik Motivation zu stiften , hat seine Grenzen . Letzt-lich werden die SchülerInnen  mit nicht sonderlich kognitiv  anspruchsvollen Aufgaben                                                            4  Vgl. z.B. http://theoncologist.alphamedpress.org/content/12/11/1374?trendmd -shared=1   Aller Anfang ist schwer! Wie gelingt der Einstieg in den Informatikunterricht? 231ii“proceedings” — 2017/9/17 — 20:19 — page 232 — #232iiiiii (komplexerer ) objektorientierter und algorithmischer Modellierungen und Implementie-rungen konfrontiert, d eren direkter Sinn sich nicht jedem erschließt. Der Sinn dieser Vorgehensweise liegt wohl insbesondere  darin, in die Elemente einer Programmierspra-che einzuführen,  was sich auch im Folgenden zeigt.  2.3 Typische Vorgehenswiesen im Anfangsunterricht  Greenfoot  wird derzeit  von vielen benutzt, da es anders als seine Basi s BlueJ  Anfänger besser  unterstützt. Für NRW sind zur Nutzung von Greenfoot  Schulbücher (z. B. [KL14 ] für die Einführungsphase) erschienen, die von vielen genutzt werden . Hier kann und soll keine ins Detail gehende kritische Bestandsaufnahme dieses Werkes erfolgen. Es soll  nur kurz darauf hingewiesen werden, dass das Vorgehen in diese m Buch , wie zuvor auch i m Einführungsband von Schriek  [Sc05]  („Stifte und Mäuse“, ähnlich wie das in NRW  aktuell diskutierte GLOOP , ein grafischer Aufsatz auf BlueJ ) oder auch anderen Bü-chern, die Reihenfolge der Sachlogik der Programmiersprache folgt. Die Inhalte Blockstrukturen , Schleifen, Verzweigung en, Variablen, Datenstrukturen werden in eine sachlogisch korrekte Reihenfolge gebracht. Hypothese  7: Im Informatikunterricht steht weniger  das Erl ernen bzw. Einüben des algorith mischen Probl emlösens oder von infor-matischem Denken, vielmehr das Erlernen einer Programmiersprache im Vordergrund. Die SchülerInnen lösen nicht wirklich Probleme , sondern nur Aufgaben, die in ihrer Reihenfolge der Logik des Erlernens der Programmiersprache untergeordnet sind. Die Zusammenhänge zum Problemlö sen werden nicht erkannt. Denning, Tedre und Young-pradit haben erst kürzlich in einem  'Viewpoint‘ in der CACM darauf hingewiesen, dass dieser Transfer bisher lediglich behauptet , aber nie nachgewiesen wurde. [DT17]  Außerdem müssen die SchülerInnen konstru ierend vorgehen. Dies hat sicher lernpsycho-logische Vorteile, hat aber mit Blick auf die zu verwendenden Instrumente (die Entwick-lungsumgebungen) auch Nachteile, da nicht zu hundert Prozent syntaktisch korrekte Lö -sungen zurückgewiesen werden. Aber selbst wenn das nicht geschieht, kommt es auch weiterhin zu Fehlern zur Laufzeit ( Stack overflow , Null pointer exception  …) bzw. zu unerwünschten Systemverhalten, deren Korrektur nicht nur ein profundes Verständnis der internen Datenvera rbeitungsprozesse erforder n, das  (s. o.) nicht unbedingt zuvor entwickelt wurde . Hypothese 8:  Dieser Wechsel zwischen den Ebenen  ist eine Abstrak-tionsfähigkeiten  abnötigende kognitive Leistung , die sich wiederum in einem Kontext stattfindet, der nur dem Erlernen einer Programmiersp rache und weniger dem Erwerb von P roblemlösekompetenzen dient. Die SchülerInnen werden lediglich gefordert , aber nicht notwendigerweise gefördert.  2.4 Zwischenfazit  Programmieren L ernen ist nicht nur der heimliche , sondern der offensichtliche Lehrplan zu Begi nn der Einführungsphase. Darüber hinaus gehende Lernziele werde n kaum er-reicht. Dieser Lehrplan soll durch didaktische Tricks oder bunte Animationen schmack-232 Dieter Engbringii“proceedings” — 2017/9/17 — 20:19 — page 233 — #233iiiiii haft oder besser zugänglich gemacht werden. Diese Effekte sind jedoch nicht nachhaltig, auch weil es  nicht  das Bedürfnis der allermeisten SchülerInnen  zu sein scheint, Pro-grammieren lernen zu wollen. Dass sie dabei auch konstruktiv tätig werden müssen, aber von dem Instrument, mit dem sie arbeiten , immer wieder zurecht oder garzurückgewie-sen werden, trägt nicht zur Motivation bei; im Gegenteil! Erfolgserleb nisse und Sinnstif-tung fehlen g leichermaßen. Zumindest eine solche Sinnstift ung wir d durch den im F ol-genden da rzustellenden Zugang versucht .  3 Ein a lternativ er Zugang  Vergleicht man diese Schwierigkeiten  des Informatikunterrichts mit anderen Fächern, ist der konstruktive Zugang ungewöhnlich. In vielen anderen Unterrichtsfächern steht eher die Analyse von Gegenständen, Phänomene n und Situationen der Natur, der Kultur oder der Zivilisation im Vordergrund. I m naturwissenschaftlichen Unterricht setzt man dabei im besten Fall auf entdeckendes Lernen in Form von Experimenten. Auch im Musikun-terricht wird eher analysiert denn komponiert, ggf. wird musiziert, aber auch das wohl seltener, da man hier auf Probleme d er Vorbildung und der starken Differenzierung stößt (Begabung).5 Aber selbst, wenn man im Fach Musik 'konstruktiv' vorgeht; die Instru-mente würden den Versuch nicht zurückweisen. Allenfalls sind Disharmonien vernehm-bar. Im Kunst - und – so es ihn gibt – im Technikunterricht wird konstruktiv gearbeitet, allerdings auch dort ohne grundsätzliche Zurückweisungen durch die Instrumente. Also eher rekonstruktiv bzw. analytisch vorzugehen, ist eine Facette dieses Zugangs.  Die andere Idee ist, die  Aufgaben in ein So ftware -Projekt einzubetten. Das ist nicht neu  und orientiert sich grob an  den Vorstellungen  von Magenheim [Ma08]. Zugleich wir d der Versuch unternommen , diesen hochkomplexen und bislang nicht wirklich operatio-nalisierten Ansatz für den Anfangsunterricht zu  adaptieren. Verschiedene Versionen bzw. Entwicklungsstufen einer Software werden zyklisch analysiert und dann weiter-entwickelt. Es wird mit der Analyse eines sehr einfachen und kurzen Programm -Code s gestartet . Es werden mithin zuerst die Bes tandteile im P rogramm -Code aufgespürt  und mit den korrekten Begriffen benannt , ähnlich wie man es Fach Deutsch mit Prosa, Lyrik aber auch Sachtexten macht, wobei dort der Vokabelapparat ein viel größerer ist. Erst nach Klärung der Begriffe, Konzepte und der Verarbeitung smechanismen wird dann selbst implementiert.  Als Kontext für das Software -Projekt dient ein Brettspiel. Die Befragung von Rabel und Oldenburg [RO09] verweist darauf, dass dies durchaus an die Bedürfnisse der Schüle-rInnen  anschließt, obschon die sich sicher  eine hippere Spieleentwicklung wünschen würde n.6 Am Beispiel des Spiels Kniffel (Knobeln, Yathzee) wird im Folgenden dieser Ansatz konkretisiert,  wobei Kniffel nur ein Beispiel unter vielen möglichen ist. Hier erscheint Zugänglichkeit für die SchülerInnen  (einfache Regeln, wenige aber unter-                                                           5 … auch eine Analogie zur In formatik?  6 . Auch Diethelm konkretisiert ihre Vorstellungen an einem Gesellschaftsspiel [Di07].  Aller Anfang ist schwer! Wie gelingt der Einstieg in den Informatikunterricht? 233ii“proceedings” — 2017/9/17 — 20:19 — page 234 — #234iiiiii scheid bare Objekte, die zum Teil baugleich sind) jedoch in besonderer Weise gegeben.  Man startet zunächst mit der Implementation eines Würfels , der als Klasse (als Pro-gramm -Code und als UML -Klassendiagramm)  den SchülerI nnen gegeben wird . Code wie auch Diagramm werden auf ihre Bestandteile hin analysiert . Diese für jede Klasse gleiche Struktur wir d ausführlich erarbeitet und die Beziehungen zwischen Code und Klassendiagramm können entdeckt werden. Der Code wird instanziie rt und damit kann  der Würfel auch „gerollt“ werden . Da die Klasse eine Grafikkomponente enthält (hier mit werden also auch Ideen der Mini -Welten aufgegriffen) sehen die SchülerInnen, das s etwas passiert und auch was. An dieser Stelle sind  Experimente mit de m Code (nicht nur Sechser -Würfel , andere GUI  …) erwünscht. In dieser Phase  sollte man sich Zeit lassen, die Beziehungen von Code und Programm mit den dazugehörigen Begrifflichkeiten zu klären, ohne dass man den SchülerInnen auch noch ein konstruktives Vorg ehen abver-langt. Die Begriffe  Objekt, Klasse etc.  werden in ihren  informatischen  Kontext gestellt .   In einem zweiten Schritt soll der  Übergang zum Würfelbecher stattfinden, der auf der Grundlage der Erkenntnisse der ersten Phasen von den SchülerInnen  selbst modelliert und dann implementiert werden soll. An dieser Stelle können verschiedene Varianten der 'Kooperation' der Objekte Becher und Würfel diskutiert werden. Die SchülerInnen  wer-den erkennen, dass die Klas se Würfel erweitert werden muss, um den wechs elseitigen Bezug von Würfel und Becher zu implementieren. Am Ende d ieser zweiten Phase, wenn die SchülerInnen den Würfelbecher implementiert haben, der dann nur die Würfel rollt, die auch im Würfelbecher sind, können sie bereits viele  der z.  B. in dem  Lehr plan NRW genannten  Kompetenzen erworben haben, da sie Teil des Unterrichts waren .7  Es wäre  dann  zu überprüfen, inwie weit diese Kompetenzen entwickelt wurden . Außer-dem wäre zu untersuchen, wie SchülerInnen  mit Vorkenntnissen mit diesem  Zugang umgehen und w ie motiviertere  und begabtere SchülerInnen  mit der Intensität des zu-nächst analytischen Vorgehens umgehen . Das Szenario scheint jedoch genügend viele Möglichkeiten zur Binnendifferenzierung zu bieten, bei der sich die 'Besseren' z.  B. schon der Auswertung von Würfelergebnissen (ist es eine Straße , Full House  …) wid-men oder einen digitalen Notizzettel erstellen (der alle Einträge zulässt , wie sein Vorbild aus Papier oder nur korrekte bzw. mit dem Würfelergebnis konsistente) . Als besondere Herausforderung könnte ein  „Computerspieler“ implementiert  werden .  4 Alltagspraxis: Ein Forschungsansatz  zur Prozessbeobachtung  Es wurde schon mehrfach betont, dass es hier nur Hypothesen  (begründet oder plausibel) formuliert wurden  und dass auch der gerade vorgestellte alternative Ansatz noch der Evaluation bedarf. Evaluation bedeutet – wie gerade ausgeführt – Kompetenzmessung , aber nicht nur . In de m hier vorzustellenden Ansatz der Alltagspraxis  geht es um die                                                            7 Diese können hier aus Platzgründen nicht aufgezählt werden. Vgl. http://www.schulentwicklung.nrw.de/ lehrplaene/upload/klp_SII/if/KLP_GOSt_Informatik.pdf  S. 21 -23 234 Dieter Engbringii“proceedings” — 2017/9/17 — 20:19 — page 235 — #235iiiiii Erforschung der (alltäglichen) Prozesse im Unterricht, für die vie le der Hypothesen  noch genauer zu Forschungsfragen  zu verdichten wären . Dazu gehört d ie Beobachtung der Aktivität der  SchülerInnen  (der Unterrichtsprozesse)  als wichtige  zu ergänzende  Kom-ponente . Da einige der Tätigkeiten an bzw. mit den Rechnern erfolgen,  könnten via Eye -Tracking oder der Aufzeichnung von Tastatur und Mausevents Daten erhoben werden, die zwar keine absolute Bedeutung haben, aber möglicherweise durch begleitende quali-tative Forschung mit relativen Bedeutungen ver sehen werden können. Zu dies em Ansatz gehören  auch freie Beobachtungen, in denen man versucht  weitere Phänomene aufzu-spüren und dann in anderen Beobachtungen mit anderen Personen wiederzuentdecken  (ethnografische Studien) . Begleitet werden sollte das Ganze durch Interviews mit Lehre-rInnen sowie SchülerInnen , die dann q ualitativ  analysiert w erden und mit deren Ergeb-nissen  die Hypothesen und Forschungsfrage n weiter präzisiert  werden .  5 Fazit mit Ausblick  In diesem Aufsatz wurde n auf der Grundlage von einer ganzen Reihe von Beobachtun-gen zum Informatikunterricht – auch im Vergleich  zu anderen Fächern – Hypothesen  zu den besonderen didaktischen Herausforderungen des Informatikunterricht s auf gestellt. Dazu wurde ein  Ansatz  vorgestellt , der nun evaluiert werden kann . Eine möglichst große Anza hl von LehrerInnen sowie SchülerInnen  sollten damit konfrontiert werden . Deren Umsetzungen sollten mit den Prozessen und Erträgen  konventionellen Informatikunter-richts verglichen werden, sofern sie vergleichbar sind. Alle anderen Informatik -Didaktik erInnen  werden hiermit aufgefordert , sich an diesen Studien zu beteiligen.  Insgesamt wird damit  ein empirischer  Forschungsansatz vorgelegt, der dazu dienen soll, die durchaus widersprüchlichen Phänomene (sehr motivierte und ganz wenig motivierte SchülerInnen, gr oße sowie ausbleibende Lernerfolge …) zu systematisieren und über alternative Vorgehensweisen nachzudenken . Auch weitere neuralgische  Stellen, wie z. B. die Behandlung von Algorithmen mit (dynamischen) Datenstrukturen e rfordern einen eher analytisches  und weniger konstruktives (= modellierendes und implementie-rendes) Vorgehen. Der Platz in diesem Beitrag reicht dafür nicht aus , dieses darzustellen.   6 Literatur  [Bö07]  Börstler, J.: Objektorientiertes  Programmieren  – Machen wir irgendwas falsch?  In: Sigrid Sc hubert (Hrsg.):  Didaktik der Informatik in Theorie und Praxis . INFOS 2007, 12. GI -Fachtagung Informatik und Schule GI -Edition - Lecture Note s in Informatics (LNI), P -112. Bonner Köllen Verlag (2007)  [Di07]  Diethelm, I.: "Strictly models and objects first"  - Unterrichtskonzept und -methodik für objektorientierte Modellierung im Informatikunterricht, Dissertation, Universität Kas-sel, Fachbereich Elektrotechnik/Informatik, 2007  http://kobra.bibliothek.uni -kas-sel.de/bitstream/urn:nbn:de:hebis:34 -2007101119340/1/DissIraDruckfassungA5.1.pdf   Aller Anfang ist schwer! Wie gelingt der Einstieg in den Informatikunterricht? 235ii“proceedings” — 2017/9/17 — 20:19 — page 236 — #236iiiiii [DM09]  Dohmen, M., Magenheim, J., Engbring, D.: Kreativer Einstieg in die Programmierung - Alice im Informatik -Anfangsunterricht. In: Peters, I. (Hrsg.): Informatische Bildung in Theorie und Praxis, Beiträge zur INFOS 2009, 13. GI -Fachtagung - Informatik und Schule, S.69 -80, Berlin (LOG IN Verlag) 2009  [DT17]  Denning, P.J.; Tedre, M.; Youngpradit,  P.: The Profession of IT. Misconception about Compu ter Science. Communications of t he ACM. March 2017/Vol. 60, No. 3, S. 31 – 33. doi:10.1145/3041047  [Eh12 ] Ehlert, A.: Empirische Studie: Unterschiede im Lernerfolg und Unterschiede im sub-jektiven Erleben  des Unterrichts von Schülerinnen und Schülern im Informatik -Anfangsunterricht (11. Klasse Berufliches Gymnasium) in Abhängigkeit von der zeit-lichen Reihenfolge der Themen (OOP -First und OOP -Later), Dissertation, FU Berlin, 2012  http://www.diss.fu -berlin.de/diss/receive/FUDISS_thesis_000000035764   [En11]  Engbring, D.: Untersuchungen und Bewertungen zum Einsatz von Alice im Informa-tikunterricht. In: M. Weigend, M. Thomas, F.  Otte (Hrsg.): Informatik mit Kopf, Herz und Hand. Praxisbeiträge zur INFOS 2011. ZfL -Verlag. Münster, S. 81 - 90  [En13]  Erst nehmen wir Greenfoot. Und dann BlueJ? In: Breier, N., Stechert, P., Wilke, T. (Hg.): INFOS 2013. 15. GI -Fachtagung Informatik und  Schule. Praxisband. Kiel Computer Science Series. 2013/3. S. 29 – 39 [Hu08]  Hu, C.: Just say ' A class defines a Data Type'. In: Communications of the ACM, Vol. 51 No. 3, Pages 19 -21 doi: 10.1145/1325555.1325560   [KL14 ] Kempe, T.; Löhr, A.: Informatik 1. Schoeningh -Verlag. Paderborn. 2014  [KM09]  Kortenkamp,  U; Modrow, E.;  Oldenburg, R.; Poloczek, J; Rabel, M .: Objektorientierte Modellierung - aber wann und wie? Zur Bedeutung der OOM im Informatikunterricht.  LOG IN 160/161 , 2009. S.  41-47 [Ma08]  Mage nheim,  J.: Systemorientierte Didaktik der Informatik Sozio -technische Informa-tiksysteme als Unterrichtsgegenstand? In Kortenkamp; U.; Weigand; H.G.; Weth, T. (Hrsg.): Informatische Ideen im Mathematikunt erricht, Franzbecker Hildesheim 2008 . S. 17 - 36  [RO09]  Rabel, M; Oldenburg, R.:Konzepte, Modelle und Projekte im  Informatikunterricht – Bewertungen und Erwartungen von Schülern und Studenten . In: Bernhard Koerber (Hrsg.):  Zukunft braucht Herkunft. 25 Jahre »INFOS – Informatik und Schule« INFOS 2009, 13. GI -Facht agung »Informatik und Schule« GI-Edition - Lecture Note s in In-formatics (LNI), P -156. Bonner Köllen Verlag (2009 ), S. 146 -155 [Sc95]  Schwill, A.:  Programmierstile im Anfang sunterricht. In: S. Schubert (Hrsg.) .: Innova-tive Konzepte für die Ausbildung 6. GI-Fachtagung Informatik und Schule. Springer. Berlin Heidelberg. S. 178-187   [Sc05]  Schriek, B.:  Informatik mit Java: Eine Einführung mit BlueJ und der Bibliothek Stifte und Mäuse. Band 1. Nili -Verlag. Werl  [Wi06 ] Wing, J.: Computation al Thinking. Communic ations of t he ACM. March 2006/ Vol. 49, No. 3, 33 -35 236 Dieter Engbringii“proceedings” — 2017/9/17 — 20:19 — page 237 — #237iiiiii Fünf Argumente für einen grafischen Programmiereinstieg - eine Studie über vier Jahrgangsstufen  Nadine Bergner1, Thiemo Leonhardt1 und Ulrik Schroeder1 Abstract:  Grafische Programmierwerkzeuge sind ein beliebter Weg mit Kindern und Jugendlichen in die Prog rammierung einzusteigen. Ein grafischer Einstieg soll die Schülerinnen und Schüler altersgerecht ansprechen und ihnen aufgrund der Vermeidung von Syntaxfehlern erleichtern, eigene Projekte schnell und kreativ umzusetzen und dadurch motivierend wirken. In diesem Artikel werden die vermu teten Chancen und auch mögliche  Gefahren eines grafischen Programmiereinstiegs wissenschaftlich untersucht. Dazu werden fünf Argumente beleuchtet: Begeisterungsfähigkeit, Vermittlung eines interessanten Bildes der Disziplin, E rwartungen der Programmiereinsteiger, Einfluss auf die wahrgenommene Schwierigkeit der Disziplin und Vermittlung eines kreativen Berufsbildes “Informatiker -in”. Um diese Argumente wissenschaftlich zu untersuchen, wurden in 2015 und 2016 über 700 Kinder und  Jugendliche vor und nach einem Einstiegsworkshop mit den Werkzeugen “Scratch” und “App Inventor” mittels Online -Fragebögen befragt. Die Ergebnisse decken auf, welche Auswirkungen die Workshops auf das Bild der Informatik sowie die Vorstellungen über Infor matikerinnen und Informatiker haben.  Keywords: Grafische Programmierung, quantitative Evaluation, Scratch, App Inventor, Fragebogenstudie, Schülerlabor, Bild der Informatik, Berufsbild.  1 Motivation  Der Einstieg in die Programmierung kann inner - und außerhal b der Schule sowie in unterschiedlichen Altersstufen stattfinden. Den unterschiedlichen Gegebenheiten gemein ist, dass ein Weg gefunden werden muss, Kindern und Jugendlichen die Grundlagen der Programmierung zielgruppengerecht zu vermitteln.  Ein auch in D eutschland weit verbreiteter Ansatz ist die grafische Programmiersprache bzw.  -umgebung Scratch . Scratch lässt den Lernenden Freiheiten mittels grafischer Programmierbausteine eigene interaktive Geschichten oder Spiele zu entwickeln, in denen Objekte beweg t werden können , Musik abgespielt und sogar mit dem Nutzer interagiert werden kann. Besonders durch das  umfangreiche  Angebot an ansprechenden und kindgerechten Grafiken werden Kinder der Klassenstufen 4 bis 8 mittels Scratch motiviert ihre eigenen Ideen in  kleinen Programmen selbstständig zu verwirklichen. Das Werkzeug Scratch ist didaktisch sehr gut reduziert, kann  durch das kindliche Design allerdings für ältere Jugendliche demotivierend  wirken  (vgl. [Ma10], [Ut10]) .                                                            1RWTH Aachen, Informatik 9  - Lerntechnologien und Fachdidaktik Informatik , 52074 Aachen, { bergner, leonhardt, schroeder }@informatik.rwth -aachen.de  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 237ii“proceedings” — 2017/9/17 — 20:19 — page 238 — #238iiiiii Eine weniger spielerische Möglichkeit des grafischen Programmiereinstiegs stellt der App Inventor  des MIT bereit. Hier werden keine Katzen in bunten Unterwasserwelten, sondern Android -Apps für Smartphones und Tablets programmiert. Durch den Alltagsbezug der mobilen Geräte können Kinder und Jug endliche in einem sehr breiten Altersspektrum an gesprochen und motiviert werden  (vgl. [Wo11]) . Insbesondere durch den Bedeutungsgewinn der Programmierung für die Allgemeinbildung der Kinder  könnte sich der Einsatz dieser Werkzeuge zukünftig verstärken. Off en bleibt dabei die Frage nach den Effekte n solch grafischer Programmiereinstiege, welche Untersuchungsgegenstand dieses Artikels sind.  2 Forschungsfragen & -design  Beim Einsatz von Lernwerkzeuge n stellt sich immer die Frage des Effekts sowie des Erfolgs bei  der Zielgruppe, also den Lernenden. Dazu werden in diesem Paper die folgenden fün f Argumente, welche sich aus der  oben genannten Literatur wie aus den Erfahrungen im Schülerlabor InfoSphere ableiten lassen, mittels einer Fragebogenstudie zu Einstiegsworks hops mit den Werkzeugen “Scratch” und “App Inventor” diskutiert : 1. Ein grafischer Programmiereinstieg kann die Lernenden für die Informatik begeistern.  2. Grafische Programmierung vermittelt das Bild einer interessanten und spannenden Wissenschaft Informatik.  3. Grafische Programmierung trifft die Erwartungen der Programmiereinsteiger.  4. Der grafische Programmiereinstieg hat Einfluss auf die wahrgenommene Schwierigkeit der Disziplin.  5. Grafische Programmierung vermittelt ein kreatives Berufsbild “Informatiker -in”.  Um Kinder und Jugendliche an die Informatik und speziell  den Bereich der Programmierung heranzuführen, werden im Informatik -Schülerlabor InfoSphere an der RWTH Aachen seit 2010 über 30 verschiedene (in der Regel eintägige) Workshops angeboten, an denen Schulk lassen und K urse kostenfrei teilnehmen. Das Themenangebot beinhaltet Module für den Erstkontakt in der Grundschule und Unterstufe wie auch Module zur Vertiefung bzw. Anknüpfung an den bestehenden Informatikunterricht in der Mittel - und Oberstufe. Die Theme n umfassen Facetten und Aspekte der theoretischen (z. B. zu Kryptographie -Verfahren), technischen (z. B. Schaltungen mit Mikrocontrollern) und praktischen (z. B. Erwerb von Programmierkompetenzen in unterschiedliche n Altersstufen) Informatik.  Damit das punktuell angestoßene Interesse weiter ausgebaut werden kann, werden Kindern und Jugendlichen privat (an Wochenenden, in den Ferien) Möglichkeiten der tiefe rgehenden Einarbeitung geboten.  In dieser Auswertung  bilden drei Module zum grafischen Programmiereinst ieg für die Zielgruppe der Programmieranfänger der Klassenstufen 6 bis 9 den Fokus.  238 Nadine Bergner, Thiemo Leonhardt, Ulrik Schroederii“proceedings” — 2017/9/17 — 20:19 — page 239 — #239iiiiii Das Forschungsdesign zur Evaluation der obigen fünf Argumente besteht aus einer quantitativen Forschungsmethod ik mittels Online -Fragebögen2, wobei der Pretest etwa ein bis zwei Wochen vor dem Besuch des Workshops in der Schule ausgefüllt wird und der Posttest direkt im Anschluss erhoben wird. Im Folgenden wird erläutert, mit welchen Fragen die fünf Aspekte beleuchtet werden.  Argument 1 - Begeisterungsfähigkeit  In dem Online -Fragebogen werden die Teilnehmerinnen und Teilnehmer explizit gefragt, wie ihnen d er Einstieg in die (grafische) Programmierung gefallen hat und ob sie wieder an einem solchen Workshop teilnehmen möchten. Dazu steht den Lernenden eine fünfstufige Skala von  „trifft gar nicht zu” bis „trifft voll zu” zur Beantwortung zur Verfügung. Analog wird ihre Zustimmung zur Aussage „Ich werde mich in Zukunft verstärkt mit Themen der Informatik beschäftigen.” abgefragt.  Argument 2 - Vermittlung eines interessanten Bildes  der Disziplin  Die Kinder und Jugendlichen werden vor und nach dem Besuch im InfoSphere dazu befragt, welches Bild der Disziplin Informatik sie haben. Dies geschieht zum einen , indem sie im Freitext drei Begriffe zur Informatik notieren. Zum anderen halten  sie ihre Einstellung  zu verschiedenen vorgegebenen Aussagen über die Informatik fest, indem sie einen Schi eberegler zwischen zwei Gegenposition en platzieren. Die hier relevanten Gegenpole sind „Informatik ist langweilig versus spannend.”, „Informatik ist interessant versus uninteressant.” und „Informatik ist eintönig versus abwechslungsreich.”.  Argument 3 - Passung zu den Erwartungen der Programmiereinsteiger  Hier werden die Schülerinnen und Schüler auf einer fünfstufigen Skala danach befragt, wie exakt d er Workshop ihren Erwartungen entsprochen hat. Darüber hinaus werden die Freitextangaben zu den Erwartungen im Pretest und die Verbesserungsvorschläge zum Workshop und die Themenwünsche für die Zukunft im Posttest ausgewertet.  Argument 4 - Einfluss auf die  wahrgenommene Schwierigkeit der Disziplin  Für dieses Argument werden Angaben vor und nach dem Workshop verglichen. Relevant ist die Einschätzung zur Aussage „Informatik ist schwierig versus einfach.”.  Argument 5 - Vermittlung eines kreativen Berufsbildes “Informatiker -in” Nach derselben Methodik wird die Vorstellung über Informatikerinnen bzw. Informatiker vor und nach dem Workshop erhoben. So können die Befragten den Schieberegler zur Aussage „Informatiker -innen müssen kreativ sein.” nahezu stufenlos von „stimme gar nicht zu” bis „stimme voll zu” platzieren. Gleiches gilt für die Aussage „Informatiker -innen kreieren viel Neues.”.                                                             2 Weitere Deta ils zum Forschungsdesign un d dem  konkreten Fragebogen können eingesehen werden unter [Be15].  Fünf Argumente für einen graﬁschen Programmiereinstieg 239ii“proceedings” — 2017/9/17 — 20:19 — page 240 — #240iiiiii 3 Umsetzung der Workshops  Um eine wissenschaftliche Reflexion der Antworten der Teilnehmerinnen und Teilnehmer zu ermöglichen, wer den in diesem Abschnitt die beiden verwendeten Werkzeuge „Scratch” und „App Inventor” wie auch die Ausgestaltung  der Workshops im Schülerlabor InfoSphere beleuchtet . 3.1 Vergleich der Tools Scratch & App Inventor  Beide Werkzeuge zum grafischen Programmiereinst ieg werden kostenlos, browserbasiert angeboten. Eine wichtige Gemeinsamkeit für diesen Forschungsansatz sind die optisch ähnlichen Programmierblöcke (siehe Abb. 1  für den Vergleich grundlegender Programmierbausteine), wobei speziell für jüngere Lernende di e Option der breiten Sprachwahl (inklusive Deutsch) im Werkzeug „Scratch“ einen Vorteil gegenüber dem „App Inventor“ darstellt, welcher nicht in Deutsch verfügbar ist.   Abb. 1: Vergleich der grafischen  Programmierbausteine  (links Scratch, rechts App Inventor)  Im Gegensatz zu Scratch, welches 2007 speziell für Kinder entwickelt wurde, sollte der App In ventor ursprünglich Informatikk urse an Universitäten unterstützen und startete dort 2009 seine Pilotphase. Ein weiterer Unter schied ist, dass bei Scratch Objekte in einer Mikrowelt programmiert werden, welche direkt neben d er Programmierfläche sichtbar ist , so dass die Lernenden stets in der gleichen Ansicht arbeiten. Im App Inventor gibt es dagegen zwei getrennte Ansichten: Designer und Blocks . Der Designer dient der Gestaltung des User Interface und der Auswahl aller Komponenten (Buttons, Grafiken, Töne, Timer , GPS). Darauf aufbauend stehen im Blocks Editor allgemeine und komponentenspezifische Blöcke (abhängig von den eingefüg ten Elementen im Designer) zur Programmierung der Funktionalität zur Verfügung. Eine Besonderheit bei der Arbeit mit dem App Inventor ist das Live -Testing, welches über einen integrierten Emulator oder auch direkt auf einem Android -Smartphone bzw. -Tablet möglich ist. Die von den Lernenden entwickelten Apps können somit in die Realität (auf das Smartphone) überführt werden und sind nicht auf eine künstliche Mikrowelt im Browser beschränkt. Dieser Unterschied muss bei der späteren Auswertung insbesondere hin sichtlich des Bildes der Disziplin berücksichtigt werden.  3.2 Beschreibung  der Schülerlabor -Module  Nachdem die beiden Werkzeuge beschrieben und verglichen sind, werden hier die konkreten Workshops im Rahmen des InfoSphere vorgestellt, anhand derer die Effekte grafischer Programmierwerkzeuge evaluiert wurden.  240 Nadine Bergner, Thiemo Leonhardt, Ulrik Schroederii“proceedings” — 2017/9/17 — 20:19 — page 241 — #241iiiiii Das Modul zu  Scratch nennt sich „ Spielend Programmieren lernen mit Scratch ”3 und wird für Klassen der Unter - und Mittelstufe angeboten. Das didaktische Konzept hinter diesem Workshop ist ein Gruppenpuzzle. Dies bedeutet, dass jeweils vier Kinder ein Team bilden, dessen Ziel es ist, am Ende des Tages gemeinsam ein Spiel zu programmieren. Noch vor dem Start wird allen Teilnehmerinnen und Teilnehmern gemeinsam die Webseite Scratch präsentiert und gezeigt, wie d ie Bausteine zusammen -gesetzt werden, ohne vertieft auf die Bedeutung einzelner Befehle einzugehen. In der ersten Phase des Gruppenpuzzle s teilen sich die Teams auf, so dass jedes Teammitglied gemeinsam mit Mitgliedern anderer Teams Experte auf einem bestim mten Gebiet wird. Dabei entstehen Expertengruppen für die Themenbereiche „Bewegung und Zeichnen”, „Fühlen und Variablen”, „Grafik und Aussehen” und „Klang und Kommunikation”. In diesen Expertenteams lernen sie mit Hilfe kleinschrittiger Anleitungen und anhand konkreter Beispiele eine  Auswahl  der Befehle kennen. In der zweiten Phase des Gruppenpuzzles entwickeln die vier Teammitglieder gemeinsam ein Sp iel, zu dem  die grobe Spielidee und mögliche Erweiterungsansätze gegeben sind. Dabei trägt jedes Teammitglie d eine Verantwortung, da jede Expertin bzw. jeder Experte für ein bestimmtes Thema zuständig ist, welches für die Umsetzung des Spiels benötigt wird. In dieser Phase können die Kinder sehr kreativ arbeiten, da Scratch zahlreiche grafische und auch akustisc he Optionen zur Ausgestaltung des Spiels bietet. Zum Abschluss präsentieren alle Teams ihre Spiele vor der Gruppe und können diese anschließend gegenseitig austesten. Darüber hinaus ist es möglich, dass die Teilnehmerinnen und Teilnehmer ihre Spiele zur we iteren Bearbeitung mitnehmen.  Zum App Inventor gibt es im Schülerlabor InfoSphere zwei unterschiedliche Module. Das Modul „ Erste App programmieren ”4 ist als Einstieg für Klassen der Stufen 6 bis 8 konzipiert, wohingegen das Modul „ InfoSphere goes Android ”5 als Fortsetzung oder für Anfänger der Stufen 8 bis 10 angeboten  wird. Der Unterschied liegt im Detailgrad  der Anleitungen wie auch in der Übersetzung aller englischen Begriffe. Die Sozialform in beiden Modulen ist die Partnerarbeit an einem Laptop u nd mit  einem Smartphone. A uch hier starten beide Module mit einer kurzen Präsentation des Werkzeugs.  Im Modul „ Erste App programmieren ” wird in drei Schritten eine Zeichen -App mit Foto-Funktion entwickelt. Mittels des  Arbeitsblatt es „Zeichnen für Anfänger” wird programmiert, wie ein Foto aufgenommen und als Hintergrund gespeichert werden kann. Im Blatt „Zeichnen für Fortgeschrittene” wird die App um Buttons erweitert, so dass die Stiftfarbe aus den vier Grundfarben gewählt werden kann und auch bereits Punkte und Linien in unterschiedliche n Strichstärken gezeichnet werden können. In dem optionalen Zusatzblatt „Zeichnen für Profis” wird die App um eine komplette Farbpalette erweitert.  Das Modul „ InfoSphere goes Android ” hingegen startet nach der Einführung mit einer  ersten Phase, in der alle Zweierteams eine einfache „Hallo InfoSphere” -App entwickeln,                                                            3 Modulbeschreibung “Scratch”: http://schuelerlabor.informatik.rwth -aachen.de/module/scratch   4 Modulbeschrei bung “Erste App ”: http://schuelerlabor.informatik.rwth -aachen.de/module/erste -app  5 Modulbeschreibung “InfoSphere goes Android”: http://schuelerlabor.informatik.rwth -aachen.de/module/is -goes-android   Fünf Argumente für einen graﬁschen Programmiereinstieg 241ii“proceedings” — 2017/9/17 — 20:19 — page 242 — #242iiiiii die kleinschrittig angeleitet wird und den Umgang mit dem App Inventor übt. Anschließend hat jedes Team die Wahl zwischen den vier Spielideen „AngryBlob”, „Asteroids”, „FlappyBird” und „MoleMash”, welche alle an existierende  Apps  angelehnt und daher den Schülerinnen und Schülern unter Umständen bereits bekannt sind. Hierbei wird der Schwierigkeitsgrad der Apps auf den Anleitungen angegeben, so dass die Teams nach der „Ha llo InfoSphere” -App diesen selbst auswählen können. Die Anleitungen sind hier weniger kleinschrittig, so dass den Lernenden mehr Verantwortung über den  eigenen Lernprozess übertragen wird. Auch haben die Lernenden die Möglichkeit ihre App nach eigenen Idee n weiterzuentwickeln.  4 Auswertung der Evaluation  In den Jahren 2015 und 2016 wurden für die vorgestellten drei Module zum grafischen Programmiereinstieg 694 Pre - und 720 Posttestdatensätze erhoben. Da die Vorbefragung in der Regel im Vorfeld in der Schule a usgefüllt wird, kommt es vor, dass Kinder (z. B. aufgrund von Krankheit) nicht an beiden Erhebungszeitpunkten einen Fragebogen ausfüllen. Aus dieser Problematik heraus ergibt sich, dass nur 564 Pre -Post-Datensätze korrekt zugeordnet werden konnten. Da zur Beforschung der fünf Argumente Informatikeinsteiger im Fokus stehen, wurde die Stichprobe für die Auswertung auf Schülerinnen und Schüler der Klassenstufen 6 bis 9 eingeschränkt. Dies ergibt ein en Stichprobenumfang von N = 471  (siehe auch Abb. 2) .  Abb. 2 : Stichichprobenbeschreibung  Argument 1 - Begeisterungsfähigkeit  Im Schnitt werden alle drei Module von den Teilnehmerinnen und Teilnehmern positiv bewertet  (siehe Abb. 3  a)). Die Antworten hängen dabei signifikant vom Geschlecht der Kinder (p<.05), jedoch  nicht vom Alter, der Klassenstufe und dem besuchten Modul ab. Die Daten der  Mädchen zeigen  mit einem M ittelwert von M=2,44 (s=1,380) , dass den Mädchen  das Modul signifikant besser gefallen hat als den Jungen mit M=2,53 (s=1,598)6. Obwohl die Differenzen n icht signifikant sind, zeigt ein Vergleich der Mittelwerte, dass das Modul „Scratch” am beliebtesten und „InfoSphere goes Android” am unbeliebtesten ist, was möglicherweise mit dem unterschiedlichen                                                            6 Die Kodierung geschieht mittels „ trifft voll zu “ (1) bis „trifft gar nicht zu “ (5). 242 Nadine Bergner, Thiemo Leonhardt, Ulrik Schroederii“proceedings” — 2017/9/17 — 20:19 — page 243 — #243iiiiii Schwierigkeitsgrad der Module oder der tendenziell ältere n Zielgruppe zusammenhängen könnte.   Abb. 3 Auswertung bezüglich Begeisterungsfähigkeit  Bezüglich der Aussage, ob sie sich in Zukunft verstärkt mit Themen der Informatik beschäftigen möchten, ergibt sich die Verteilung  aus Abb. 3 b) . Auch die Antwort auf diese Frage ist wieder signifikant vom Geschlecht abhängig (p<.0 1). Entgegen der obigen Aussage  wollen sich hierbei die Jungen mit M=2,87 (s=1,326)  eher zukünftig mit der Informatik beschäftigen als die Mädchen mit M=3,12 (s=1,135). Hier wird deutlich wie stark der, im Vorfeld generierte, Wunsch der Kinder bereits ausgeprägt ist und wie begrenzt dabei eine punktuelle Maßnahme wirkt. Darüber hinaus ist die Bewertung diese r Aussage signifikant abhängig von der Klassenstufe (p<.05). Schülerinnen und Schüler ni edriger Klassenstufen geben deutlicher  an, sich verstärkt mit Informatik beschäftigen zu wollen. Dies könnte in den geringeren Vorerfahrungen der jungen Zielgruppe begründet sein, so dass diese erst durch das Modul einen Einblick in die Informatik erhalten  und durch ihre Erfolgserlebnisse bestärkt wurden.  Als Antwort auf die dritte Aussage „Ich würde gerne an weiteren Modulen des InfoSphere teilnehmen.” ergibt sich eine nahezu Gleichverteilung zwischen den fünf Antwortalternativen  (siehe Abb. 3 c)) . Auch hi er konnten wieder geschlechtsspezifische Unterschiede festgestellt werden (p<.01). Obwohl ihnen der Modulbesuch weniger gut gefallen hat, haben Jungen (M=2,88, s=1,397) ein signifikant größeres Interesse am Besuch weiterer Module im Schülerlabor als Mädche n (M=2,99, s=1,255).  Auch hier zeigt sich wieder wie gefestigt der vorher ausgeprägte Wunsch einer möglichen Beschäftigung mit der Informatik ist und wie eingeschränkt ein eintägiges Modul dahingehend wirken kann.  Argument 2 - Vermittlung eines interessant en Bildes der Disziplin  Als erstes wurde hier die persönliche Einschätzung zwischen den beiden Extrema „Informatik ist interessant (1) versus uninteressant (100).” erhoben. Dabei zeigen sich signifikante Differenzen zwischen den Angaben vor und nach dem Mo dulbesuch (p<.05). Dabei liegt der Mittelwert vorher bei M=24,98 (s=26,427) und nachher bei M=27,29 (s=27,661). Aus dieser Verschiebung lässt sich ablesen, dass die Informatik im Schnitt nach dem Modul leicht „uninteressanter” wahrgenommen wird. Spannend s ind die signifikanten Geschlechterunterschiede (p<.05). Bei Jungen hat sich die Bewertung Fünf Argumente für einen graﬁschen Programmiereinstieg 243ii“proceedings” — 2017/9/17 — 20:19 — page 244 — #244iiiiii um 3,90 Punkte Richtung „uninteressant” verschoben, wohingegen sie sich bei Mädchen um 0,10 Punkte Richtung „interessant” verändert hat, was unter anderem darin zu begründen ist, dass das Interesse von den Jungen im Vorfeld bereits extrem hoch angegeben wurde (Jungen vorher M=19,11, Mädchen vorher M=33,89). Obwohl dies nicht beabsichtigt war, kann der Rückgang des Interesses bedeuten, dass das vorherige Bild der Diszip lin positiv verzerrt war und nun ein realistisches Bild entstanden ist.  Bei der zweiten Aussage ging es darum, ob die Informatik eher langweilig (1) oder spannend (100) ist. F ür die gesamte Stichprobe konnten keine signi fikanten Veränderungen durch die  Mod ule bemessen wer den. Allerdings zeigte sich , dass die Antworten signifikant vom Geschlecht der Befragten abhängen (p<.05). Bei Jungen veränderte sich der Mittelwert um 2,33 Punkte Richtung „langweilig”, bei Mädchen entgegengesetzt um 2,29 Punkte Richtung „spannend”. Dabei gaben die Jungen im Pretest  wesentlich positivere Werte (M=77,51) an als die Mädchen (M=60,25).  Auch bezüglich der Aussage „Informatik ist eintönig (1) versus abwechslungsreich (100).” ergaben sich insgesamt keine signifikanten Differenzen  zwischen den beiden Erhebungszeiträumen. Allerdings zeigte sich hier eine signifikante Abhängigkeit vom besuchten Modul. Durch den Besuch des Moduls „Scratch” veränderte sich der Mittelwert um 2,19 Punkte in Richtung „abwechslungsreich”, nach dem Modul „Erste App” um 0,39 Punkte ebenfalls  in Richtung  „abwechslungsreich”, nach dem Modul „InfoSphere goes Android” jedoch um 0,29 Punkte in Richtung „eintönig”.  Argument 3 - Passung zu den Erwartungen der Programmiereinsteiger  Bezüglich dieses dritten Argumentes  sollte die Zustimmung zu der expliziten Aussage „Das Modul entsprach meinen Erwartungen.” angegeben werden. Hierbei ergab sich folgende Verteilung in der gesamten Stichprobe: 115x „trifft voll zu” (1), 102x „trifft zu” (2), 130x „weder noch” (3), 70x „trifft eher nicht zu” (4), 54x „trifft gar nicht zu” (5). Auch hier ergaben sich wieder signifikante Geschlechterunterschiede (p<.05). Dabei wurde die Erwartung der Mädchen mit M=2,59 (s=1,180) stärker erfüllt als diese der Jungen M=2,73 (s=1,377).  Weiter wur de analysiert, welche Erwartungen diejenigen  mit ins Schülerlabor brachten, welche  die deutlichsten Verschiebungen hin zu „Informatik ist uninteressant.”, „Informatik ist langweilig.” und „Informatik ist eintönig” verzeichneten. Die Erwartungen dabei entsp rechen inhaltlich dem besuchten Modul, also beinhalteten z. B.  „App-Programmierung”, „etwas Neues lernen” und „Spaß haben”. Eine Vermutung für die negative Interessenentwicklung könnte sein, dass diejenigen enttäuscht wurden, die erwarteten, dass ihnen der  Freiraum einer komplett eigenen Idee für die App bzw. das Spiel gelassen würde, was mehrfach in den Durchführungen als Kritik geäußert wurde.  Die Auswertung der Verbesserungsvorschläge ist leider wenig zielführend, da meist „keine” oder unklare Angaben w ie „interessanter gestalten” genannt wurden.  Argument 4 - Einfluss auf die wahrgenommene Schwierigkeit der Disziplin  244 Nadine Bergner, Thiemo Leonhardt, Ulrik Schroederii“proceedings” — 2017/9/17 — 20:19 — page 245 — #245iiiiii Mittels der im Pre - sowie im Posttest zu wertenden Aussage „Informatik ist schwierig (1) versus einfach (100).” wird das vierte Argument be leuchtet. Hier zeigt sich eine signifikante Veränderung zwischen den beiden Erhebungszeitpunkten (p<.05). Die Informatik wird nach dem Modul mit M=48,2145 (s=24,91) schwieriger eingeschätzt als im Vorfeld M=51,3316 (s=25,00). Auch wenn es keine signifikant en Unterschiede zwischen den Teilgruppen gibt, zeigt ein Blick in die Daten, dass diese Veränderung bei Mädchen deutlicher stattfindet. Dieses Ergebnis bestärkt den Verdacht, dass einige Jugendliche mit einem positiv verzerrten Bild der Informatik das Schü lerlabor besuchen und von den Herausforderungen der Programmierung überrascht wurden.  Argument 5 - Vermittlung eines kreativen Berufsbildes „Informatiker -in” Mit Blick auf das fünfte Argument wird die Zustimmung zu zwei Aussagen auf einer Skala von „stimme  gar nicht zu“ (1) bis „stimme voll zu” (11) erhoben. Dabei zeigt sich ein signifikanter Unterschied bei der Aussage „Informatiker -innen müssen kreativ sein.” (p<.05). Nach dem Modul wird dieser Aussage mit M=7,9427 (s=2,66) signifikant stärker zugestimmt als vorher M=7,4268 (s=3,05). Mittels eines grafischen Programmiereinstiegs gelingt es den Schülerinnen und Schülern zu verdeutlichen, dass Softwareentwicklung ein kreativer Prozess sein kann. Dabei sind die Veränderungen von keiner trennenden Variablen si gnifikant abhängig. Auch bei der Auswertung der Pre -Test-Daten zeigten sich keine spezifischen Unterschiede unter den Teilgruppen.  Zum Abschluss wurde die Aussage „Informatiker -innen kreieren viel Neues.” evaluiert. Hierbei zeigten sich im Vorfeld wie auch  im Vergleich zwischen den beiden Erhebungszeiträumen keine signifikanten Unterschiede.  5 Reflexion & Ausblick  Insgesamt hat die quantitative Auswertung der 471 Pre -Posttest -Datensätze gezeigt, dass die Module im Schülerlabor zum Einstieg in die grafische Pr ogrammierung mittels Scratch und dem App Inventor nicht unbedingt zu einem positiveren Bild der Informatik beitragen, aber vermutlich ein realistischeres Bild erzeugen.  Argument 1 - Begeisterungsfähigkeit: Die Auswertung zeigt, dass die Module den Mädchen signifikant besser gefallen haben, dennoch sind es die Jungen, die angeben sich in Zukunft eher mit Informatik beschäftigen zu wollen. Weiter zeigt sich, dass das anspruchsvollste Modul am schlechtesten bewertet wird, was ein Indiz dafür ist, dass Überford erung zur Abnahme der Begeisterung führt.  Argument 2 - Vermittlung eines interessanten Bildes der Disziplin: Bei einem Teil der Jungen, veränderte sich das Bild der Informatik teils negativ. Dieser Rückgang des Interesses kann auch in einem im Vorfeld extr em positiven, unter Umständen gar verzerrten Bildes der Informatik  begründet sein. Das Bild der Informatik veränderte sich bei Jungen in Richtung „langweilig”, bei Mädchen jedoch exakt entgegengesetzt in Fünf Argumente für einen graﬁschen Programmiereinstieg 245ii“proceedings” — 2017/9/17 — 20:19 — page 246 — #246iiiiii Richtung „spannend”. Somit kann davon ausgegangen we rden, dass sich die eigene Vorstellung mancher Besucherinnen und Besucher hin zu einer realistischeren Einschätzung entwickelt hat.  Weiter haben sich die zuvor stark ausgeprägten Unterschiede zwischen den Geschlechtern leicht angeglichen.  Argument 3 - Passung zu den Erwartungen der Programmiereinsteiger: Die Auswertung des Pretests zeigte, dass die Erwartungen zu den Inhalten der Module passen, es jedoch Enttäuschungen bezüglich der gewünschten Freiheit sgrade innerhalb  der Projekte gab. Insgesamt gaben Mädc hen deutlicher als Jungen an, dass die Module ihre Erwartungen erfüllt hätten. Dies könnte eine Begründung für die negativen Verschiebungen bzgl. der wahrgenommenen Interessantheit der Disziplin bei den Jungen sein.  Argument 4 - Einfluss auf die wahrgenomm ene Schwierigkeit der Disziplin: Die Tatsache, dass die Informatik nach einem Programmiereinstieg als schwieriger bewertet wird, legt nahe, dass einige Lernende mit einem verzerrten Bild der Informatik das Schülerlabor besuchten und von den Anforderungen ü berrascht wurden.  Argument 5 - Vermittlung eines kreativen Berufsbildes „Informatiker -in”: Der grafische Programmiereinstieg zeigt die Softwareentwicklung als kreativen Prozess und führt zur signifikanten Überzeugung, dass Informatiker -innen kreativ sein müssen.  Da der Einstieg in die Programmierung dank passender Werkzeuge zukünftig bereits im Grundschulalter stattfinden kann , soll die Evaluation auf diese jünger e Zielgruppe ausgeweitet werden.  Dazu werden  auch Apps zum grafischen Programmiereinstieg wie „Scratch Junior” und Hardware wie LEGO Wedo, Ozobot und Calliope hinsichtlich ihres Potentials bezüglich der Schülervorstellungen über Informatik beleuchtet . Literaturverzeichnis  [Be15]  Bergner, N.:  Konzeption eines Informatik -Schülerlabors und Erforschu ng dessen Effekte auf das Bild der Informatik bei Kindern und Jugendlichen. Dissertation, Aachen, 2015.  [Ma10]  Maloney, J. et al.:  The Scratch Programming Language and Environment. In ACM Transactions on Computing Education, 2010, 10; 16: 1 –15. [Ut10]  Utting, I. et al.:  Alice, Greenfoot, and Scratch -- A Discussion. In ACM Transactions on Computing Education, 2010, 10; S. 1 –11. [Wo11]  Wolber, D.:  App inventor and real -world motivation. In (Cortina, T. J. Hrsg.):  Proceedings of the 42nd ACM technical symposi um on Computer science education. ACM, New York, NY, 2011; S. 601.   246 Nadine Bergner, Thiemo Leonhardt, Ulrik Schroederii“proceedings” — 2017/9/17 — 20:19 — page 247 — #247iiiiiiIra Diethelm(Hrsg.): INFOS 2017 – Informatische Bildung zum Verstehen und Gestalten,Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 1Modularisierung im Informatikunterricht auslernpsychologischer PerspektiveJohannes Fischer, Arno Pasternak1Abstract: Objektorientiertes Modellieren und Programmieren ist eine weitverbreitete Technik, uminformatische Prinzipien wie Abstraktion, Automation und Modularisierung umzusetzen. Letztge-nannte Begriffe geh ¨oren zweifelsohne zu den wichtigsten Konzepten des Informatischen Denkensnach Jeannette Wing [Wi06], und ihre Vermittlung ist aus einem allgemeinbildenden Informatik-unterricht nicht wegzudenken. Unklar ist nur der zu beschreitende Weg, um diese Kompetenzen zuerlangen. K ¨olling und Rosenberg [KR01] geben hierf ¨ur einige Ratschl ¨age, die sich insbesonderedurch die Verwendung großer Projekte von Anfang an auszeichnen. In diesem Beitrag wird daf ¨urpl¨adiert, statt einer konkreten Technik wie der Objektorientierung die Konzepte Abstraktion, Auto-mation und insbesondere Modularisierung in den Fokus zu nehmen und diese altersgerecht mit einergeeigneten Sprache zu unterrichten.Keywords: Informatikunterricht, OOM, OOP, Module, Lernpsychologie, Cognitve Load Theory1 Informatische Bildung an SchulenHeymann hat 1996 ¨uberzeugend dargelegt, was unter Allgemeinbildung heute verstandenwerden soll [He96]. Entsprechend ist der Allgemeinbildungscharakter der Informatik un-ter Fachdidaktikern unbestritten [Wi03, SS11, Pa13]. Diese Bedeutung wird zus ¨atzlichdurch die Darstellung von Jeannette Wing deutlich, die 2006 in einem kurzen Beitrag dieBesonderheit des informatischen Denkens dargestellt hat [Wi06].Es versteht sich dabei von selbst, dass in der Informatik im Schulunterricht als Allge-meinbildung in erster Linie grundlegende Strukturen und Konzepte anstatt die Nutzungbestimmter aktueller Werkzeuge in Form konkreter Informatiksysteme wie beispielswei-se eine Textverarbeitung oder eine konkrete Datenbankimplementierung vermittelt wer-den sollen. Ebenso gilt, dass auch bei der Verwendung informatikinterner Werkzeuge derSchwerpunkt auf die Vermittlung von Konzepten und Prinzipien und nicht auf beispiels-weise die Anwendung einer oder mehrerer Programmiersprachen und mit denen in diesenSprachen realisierbaren Ideen gelegt werden muss.1.1 Konzepte der InformatikWelches sind die grundlegenden Konzepte der Informatik? Ausgehend von ihren ers-ten Feststellungen schreibt Wing 2008 [Wi08]:”Abstraction and automation“ und etwassp¨ater in anderer Formulierung:1TU Dortmund, Fakult ¨at f¨ur Informatik, Otto-Hahn-Str. 14, 44227 Dortmund,{Johannes.Fischer,Arno.Pasternak }@cs.tu-dortmund.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 247ii“proceedings” — 2017/9/17 — 20:19 — page 248 — #248iiiiii2 Johannes Fischer und Arno Pasternak”Computing3is the automation of our abstractions“. Diese kurze und knappe Beschrei-bung verlangt nat ¨urlich nach einer genaueren Begriffsanalyse. Erst die Kombination ausabstrakter Betrachtung und Modellbildung der realen Welt und deren Umsetzung in einedurch Maschinen ausf¨uhrbare Implementierung macht den besonderen Charakter der In-formatik aus und hat durch die daf ¨ur notwendigen geistigen Vorstellungen und Bem ¨uhun-gen den intellektuellen Horizont der Menschen wesentlich erweitert und durch die dadurcherzeugten Produkte die Welt real ver ¨andert.Der Kerngedanke der Aussagen von Wing l ¨asst sich als Konzept folgendermaßen beschrei-ben: Durch Abstraktion wird als Abbild der realen Welt ein Modell erschaffen. Dies stelltaber erst eine statische Beschreibung der (Modell-)Welt dar. Erst durch die Beschreibungvonabstrakten Handlungen wird erm ¨oglicht, dass bei Vorhandensein einer entsprechendenImplementierung ein Ergebnis erzielt werden kann, das (hoffentlich) bei der L ¨osung einesProblems hilft. Durch das Ausf ¨uhren dieser Implementierung wird aus dem statischen eindynamisches Modell.Dieses dynamische Modell wird auf einer (konkreten) Maschine ausgef ¨uhrt. Diese Ma-schine”versteht“ leider keine nat ¨urlichen Sprachen. Die k ¨unstlichen Sprachen der Ma-schinen sind eine Anpassung an technische Gegebenheiten und stellen eine eigene intel-lektuelle Struktur dar. Diese Programmiersprachen m ¨ussen erlernt und durch ¨Ubungengefestigt werden. Es ist eine intellektuell hoch zu wertende Leistung, ein Modell in ei-ner konkreten Programmiersprache zu”kodieren“ und dieses Programm zu testen und zukorrigieren. Bei der Umsetzung eines Modelles in eine derartige Sprache sind gerade so-genannte Novizen erheblich intellektuell gefordert. Entsprechend ist der Aufwand nicht zuuntersch ¨atzen, der im Unterricht beim Erlernen einer Programmiersprache n ¨otig ist. Dieserhohe Aufwand darf aber nicht dazu f ¨uhren, auf die Automatisierung durch Programmie-rung im Unterricht zu verzichten.Die beiden Aspekte des informatischen Denkens —Abstraktion und Automation —m ¨ussenin einem Schulfach Informatik (mit didaktischer Reduktion) gleichermaßen abgebildetwerden, wenn es seinem Charakter gerecht werden will. Betrachten wir also die beidenAspekte etwas genauer.2 AbstraktionUm ein Problem der realen Welt mit einer Maschine — dem Computer — zu bearbeiten,muss das Problem in seine Bestandteile zerlegt und strukturiert analysiert werden. Darausfolgt im Endeffekt eine Modularisierung und eine strukturierte Programmierung.Diese Modellierung zu einer reduzierten abstrakten Welt erhalten wir durch EntwicklungvonModulen . ImInformatik-Duden werden derartige Module beschrieben als:•”Er4ist logisch oder funktional in sich abgeschlossen.3MitComputing ist in der englischen Fachsprache Informatik gemeint.4gemeint ist hier: das Modul als derBaustein248 Johannes Fischer, Arno Pasternakii“proceedings” — 2017/9/17 — 20:19 — page 249 — #249iiiiiiModularisierung im Informatikunterricht aus lernpsychologischer Perspektive 3•Wie er arbeitet oder implementiert ist, braucht außen nicht bekannt zu sein [. . . ].•Er besitzt klar deﬁnierte Schnittstellen nach außen.[. . . ] Ein System ist modular aufgebaut, wenn es aus abgrenzbaren Einheiten zusam-mengesetzt ist und wenn diese Einheiten einzeln ausgetauscht, ver ¨andert oder hin-zugef ¨ugt werden k ¨onnen, ohne dass andere Teile des Systems hierdurch beeinﬂusstwerden oder das System arbeitsunf ¨ahig wird.“ [CS03, S.414]Abstraktion der Daten Diese Deﬁnition macht deutlich, wie zentral die Idee der Modula-risierung in der Informatik ist. Beschreibt ein derartiges Modul Daten aus der Realit ¨at, sosprechen wir von einer abstrakten Datenstruktur oder einem abstrakten Datentyp [Po84,S.85ff,S.154ff]5Da die Beschreibung von Daten eine zentrale Aufgabe im Rahmen derModellierung ist, ist das Erlernen der Entwicklung von derartigen Modulen ein wichtigerTeil im Rahmen von Lehrpl ¨anen f ¨ur das Schulfach Informatik.Abstraktion der Abl ¨aufe Eine systematische Abstraktion der Abl ¨aufe f ¨uhrt zur struktu-rierten Programmierung , die im Informatikduden beschrieben wird als:”Programmierme-thode, bei der das vorgegebene Problem in Teilprobleme und die Beziehungen zwischendiesen Teilproblemen(Schnittstellen) zerlegt wird. [. . . ]“ [CS03, S.643] Je nach Program-mierparadigma werden bei der imperativen Programmierung Kontrollstrukturen oder beider funktionalen Programmierung rekursive Funktionen und Prozeduren verwendet.Abstraktion im Unterricht Beide Formen der Abstraktion m ¨ussen im Informatikun-terricht gleichermaßen f ¨ur eine Probleml ¨osung vermittelt werden. Eine ausschließlicheAbstraktion der Daten f ¨uhrt zu einer Beschreibung der statischen Welt, vergleichbar mitdem Kunstunterrricht, eine ausschließliche Abstraktion der Abl ¨aufe f ¨uhrt de fakto zu ei-ner Variante des Mathematikunterrichtes. Schubert undSchwill machen daher bei ihrerbeispielhaften Vorstellung des objektorientierten Vorgehens deutlich:”Es soll deutlichwerden, dass die traditionellen, grundlegenden Konzepte der strukturierten Programmie-rung unverzichtbarer Lerngegenstand sind, auch wenn objektorientierte L ¨osungen von denSch¨ulern konstruiert werden. Folgende Teilziele werden angestrebt: Die Sch ¨uler k ¨onnendas Konzept der Modularisierung anwenden. . . .“ [SS11, S.157] Sie berufen sich dabeiaufB¨osz¨orm´enyi, der richtigerweise feststellt, dass”das Konzept der Modularisierungviel grundlegender [ist] als das Konzept der Objektorientierung“ [B ¨o01, S.15]. Folgt manWirth , handelt es sich dabei noch nicht einmal um ein neues, eigenst ¨andiges Konzept, son-dern nur um eine neue Technik:”Noch ein Wort zur Objektorientierung: [. . . ] Man lerntneue Programmiertechniken – aber auf dem Boden des bisher Mitgebrachten.“ [Wi91,S.60,61]Objektorientierte Technologie im Unterricht In der Ausbildung werden heute h ¨auﬁgobjektorientierte Sprachen verwendet. Dass modulare Modellierung und ProgrammierungObjektorientierung nicht voraussetzt, wird damit den Lernenden nicht immer deutlich. Wirhaben beobachtet, dass selbst Informatik-Studierende nur die objektorientierte Darstel-lung kennen und daher glauben, dass modulares Programmieren mit Objektorientierunggleichzusetzen ist. So verwundert es nicht, dass dieser Eindruck auch in einem Schulbuchvertreten wird:5Eine abstrakte Datenstruktur deﬁniert nur ein Exemplar, ein abstrakter Datentyp deﬁniert eine Menge vongleichen abstrakten Datenstrukturen. [Po84, S.100]Modularisierung im Informatikunterricht aus lernpsychologischer Perspektive 249ii“proceedings” — 2017/9/17 — 20:19 — page 250 — #250iiiiii4 Johannes Fischer und Arno Pasternak”Vor allem in Zeiten des Internets und der Verbreitung von Software in allen Lebens-bereichen bietet die OOP große Vorteile:•Wiederverwendbarkeit von schon programmierten Elementen•Aufteilung ¨uberschaubarer Einzelteile•Erweiterung durch Schnittstellen“ [KT10, S.15]Diese unvollst ¨andige fachliche Beschr ¨ankung der Modularisierung auf Objektorientierungverf¨uhrt leicht zu fragw ¨urdigen didaktischen Entscheidungen6.3 AutomationAus der abstrakten Beschreibung von Daten und Abl ¨aufen soll ein Programm in einer kon-kreten Programmiersprache erstellt werden, das auf einer Maschine ablauff ¨ahig ist. Die Er-stellung eines solchen Programmes ist aber mitnichten einfach oder trivial. Die gew ¨ahlteProgrammiersprache stellt entsprechend der Syntax bestimmte grunds ¨atzliche Datentypenund Ablaufstrukturen als Bausteine zur Verf ¨ugung. Um vom abstrakten Modell zum kon-kreten Programm zu gelangen, muss ein Graben zwischen den abstrakten Ideen und denkonkreten Strukturen der jeweiligen Programmiersprache ¨uberwunden werden.Der Modellierungsgraben Dieser Graben wird am Beispiel des Kernlehrplanes f ¨ur diegymnasiale Oberstufe in NRW [MS13, S.21] deutlich, wenn die (verk ¨urzte) Aufz ¨ahlungum die Darstellung dieses Grabens erweitert wird:”Die Sch ¨ulerinnen und Sch ¨uler•ermitteln bei der Analyse einfacher Problemstellungen Objekte, ihre Eigen-schaften, ihre Operationen und ihre Beziehungen (M),•modellieren Klassen mit ihren Attributen, ihren Methoden und Assoziations-beziehungen (M),GRABEN•ordnen Attributen, Parametern und R ¨uckgaben von Methoden einfache Daten-typen, Objekttypen oder lineare Datensammlungen zu (M)“Beispielhaft ist es f ¨ur Sch ¨uler¨uberhaupt nicht selbstverst ¨andlich, das Sortieren einer Men-ge von Karten mit einem Feld oder einer Liste zu modellieren. Die Darstellung in denmeisten Schulb ¨uchern suggeriert allerdings diese scheinbare Selbstverst ¨andlichkeit, dievon vielen Lehrern auch ohne große didaktische Reﬂexion den Sch ¨ulern ¨ubergest ¨ulptwird. Beeinﬂusst der Lehrer die Sch ¨ulerinnen und Sch ¨uler nicht, so modellieren dieseohne Kenntnis der Datenstruktur Feld oder Liste wahrscheinlich einzelne Karten.Ebenso wie in der obigen Darstellung f ¨ur die Daten angegeben, ist auch ein entsprechen-der Graben f ¨ur die algorithmische Abstraktion zur Programmiersprache vorhanden. JederLehrer weiß, wie lange es dauert, bis die Sch ¨ulerinnen und Sch ¨uler beispielsweise dieIteration ¨uber ein Feld als geeignetes programmiersprachliches Konstrukt einer Problem-stellung erkennen und auch anwenden k ¨onnen.6In der Ausgabe von 2014 ist die obige Darstellung so nicht mehr enthalten [KL14, S.20]250 Johannes Fischer, Arno Pasternakii“proceedings” — 2017/9/17 — 20:19 — page 251 — #251iiiiiiModularisierung im Informatikunterricht aus lernpsychologischer Perspektive 5Ein Graben kann ¨uberwunden werden, wenn man von der einen Seite auf die andere Seitespringen kann. Dieses muss aber erlernt werden. Dabei ist ein Sprung ¨uber einen Gra-ben von der einen Seite zumeist genauso kompliziert wie von der anderen Seite. Dasbedeutet hier: Wenn es mir als Sch ¨uler gelingt, die Wirklichkeit zu modellieren, mussich zus ¨atzlich lernen, wie diese Modelle in der gew ¨ahlten Programmiersprache abgebildetwerden k ¨onnen. Kann ich mich zuerst in dieser Programmiersprache f ¨ur kleine Problem-stellungen ad ¨aquat bewegen, muss ich zus ¨atzlich lernen, die Wirklichkeit in diese mirbekannten Strukturen”herunterzubrechen.“Unterrichtliches Vorgehen Notwendig sind also Kenntnisse der Datenrepr ¨asentation undAblaufsteuerung. Beide Aspekte m ¨ussen erlernt und ge ¨ubt werden. Welcher davon im un-terrichtlichen Verlauf sinnvollerweise wann im Vordergrund steht, ist nicht offensichtlich.Diese Einsch ¨atzung wird durch die Untersuchung von Ehlert gest¨utzt, der in seiner Studieverglichen hat, ob eine objektorientierte Sichtweise geben ¨uber der prozedural-imperativenVorgehensweise im Anfangsunterricht Vorteile hat:”Es kann das Vorgehen gew ¨ahlt wer-den, welches der Lehrer bzw. Dozent f ¨ur das richtige h ¨alt.“ [Eh12, S.218]4 Erfahrungen aus der SchulpraxisIn den letzten Jahren hat sich in der Schule die Sprache Java gegen ¨uber beispielsweise(Objekt-)Pascal durchgesetzt. Java verlangt das Arbeiten mit Klassen. Die Technik derObjektorientierung und damit auch die Sprache Java ist zweifelsohne f ¨ur die Implemen-tierung großer Programmsysteme sehr gut geeignet. Daraus kann abgeleitet werden, auchin der Schule mit diesen Ideen und Techniken der Praxis zu beginnen. Entsprechend for-mulieren Schubert und Schwill richtigerweise:”Die Einf ¨uhrung in die Informatik kann mitobjektorientiertem Modellieren (OOM) und Programmieren (OOP) [. . . ] beginnen. Zwin-gend ist das nicht.“ [SS11, S.157] Eine derartige Entscheidung hat allerdings auch Nach-teile. Klassen repr ¨asentieren Datenkapseln .”Programmsysteme, die mit Datenkapseln ar-beiten, enthalten deshalb fast immer mehr Prozeduren als konventionelle Programmsyste-me.“ [Po84, S.99] Gerade bei kleineren Programmen, die im Anfangsunterricht vermehrtauftreten, stellen diese oft einen Overhead dar.OO-Guidelines Diese Grundproblematik objektorientierter Systeme und zus ¨atzlich spe-ziell f ¨ur Anf ¨anger schwer durchschaubare syntaktische Strukturen der Sprache Java ver-leiten K ¨olling und Rosenberg zu Vorschl ¨agen, wie ein Anfangsunterricht mit der SpracheJava erfolgversprechend sein k ¨onnte [KR01]. Der relative Overhead sei kleiner, je gr ¨oßerdas System ist. Also folgern sie, daß der Unterricht mit einem großen System beginnensollte.Einige dieser von K ¨olling und Rosenberg empfohlenen guidelines beziehen sich auf dieIdeen der Objektorientierung (z.B.”use ’large’ projects“,”objects ﬁrst“ ), andere auf dieProblematik der konkret verwendeten Sprache Java (z.B.”don’t start with ’main’“,”becareful with the user interface“ ). Es werden damit zwei v ¨ollig unterschiedliche didaktischeFragestellungen in diesen Vorschl ¨agen vermischt.Modularisierung im Informatikunterricht aus lernpsychologischer Perspektive 251ii“proceedings” — 2017/9/17 — 20:19 — page 252 — #252iiiiii6 Johannes Fischer und Arno PasternakUmsetzung im Unterricht Wir haben uns gefragt, ob die sprachspeziﬁschen Aspekte vonJava tats ¨achlich das Erlernen der Objektorientierung erschweren und haben in einem klei-nen Unterrichtsprojekt von ca. 10 Stunden eine erste dahingehende Analyse versucht. Ineinem 12. Jahrgang einer Gesamtschule wurden zwei etwa gleich große Kurse eingerichtet(je ca. 15 Sch ¨uler). In einem Kurs wurde mit Java unterrichtet, in dem anderen Kurs mitder Scriptsprache Groovy7, die die sprachspeziﬁschen Probleme von Java teilweise umge-hen l ¨asst. Wie weiter unten beschrieben wird, erwiesen sich hier die Sprachunterschiedeaber nicht als problematisch.In beiden Kursen wurde ein Sch ¨ulerverwaltungsprogramm in der jeweiligen Sprache mitca. 500 Zeilen verwendet. Entsprechend den Vorstellungen von K ¨olling und Rosenbergwaren in diesem Programm mehrere Klassen enthalten, zumindest teilweise wurden meh-rere Instanzen dieser Klassen verwendet. Die Sch ¨uler haben diesen Programmtext gelesen,getestet, kleine Ver ¨anderungen vorgenommen, neue Instanzen erzeugt und auch einzelneOperationen zielgerichtet ver ¨andert.Erwartungen Erwartet hatten wir, dass sich die Sch ¨ulerinnen und Sch ¨uler in der Groovy-Gruppe aufgrund der einfacheren Syntax leichter tun w ¨urden. Dies spielte allerdings indieser Phase kaum eine Rolle, da das Programm als Ganzes vorlag und nur an einzel-nen Stellen, die sich in Java und Groovy textuell kaum unterschieden, ver ¨andert wurde.Allerdings zeigte sich bei der Analyse eine andere, viel bedeutsamere Problematik.Das Ziel des Ansatzes von K ¨olling und Rosenberg ist es, dass die Lernenden durch das ex-plorative Erarbeiten eines nicht zu kleinen Programmes die Vorteile des objektorientiertenVorgehens selbst erkennen und die Begrifﬂichkeiten anhand des Beispieles deutlich wer-den. Um dies zu ¨uberpr ¨ufen, fragten wir zu Beginn des Schuljahres und nach dieser Unter-richtsphase schriftlich die Sch ¨uler, was sie sich unter Begriffen wie beispielsweise Klasseundobjektorientierter Programmierung vorstellen. Es muss dabei angemerkt werden, dassdie Begriffe im Lauf des Unterrichts bei der Analyse selbstverst ¨andlich erl ¨autert, erarbeitetund auch verschriftlicht wurden. Daher gingen wir davon aus, dass bei diesen rein repro-duktiven Fragen zumindest die erlernten Deﬁnitionenen angegeben werden w ¨urden.Erste Ergebnissse Das Ergebnis hat uns v ¨ollig ¨uberrascht. Nicht eine einzige Antwortin beiden Gruppen war zielf ¨uhrend. Eine Anwort wie”Eine Klasse wird mit Attributengef¨ullt“ kann dabei noch als Ansatz einer korrekten Idee angesehen werden, aber Ant-worten wie”Das ist das Programmieren mit Hilfe von Datenbanken“ oder”Unter ob-jektorientierter Programmierung kann man mit speziellen Objekten programmieren“ wa-ren h ¨auﬁger. Entsprechend der von uns gestellten Anspr ¨uche an den Lernzuwachs derSch¨ulerinnen und Sch ¨uler war das Ergebnis vernichtend. Die Ideen des Konzepts der Mo-dularisierung – hier mit der Technik der Objektorientierung realisiert – waren offensicht-lich nicht erlernt und verstanden worden, sodass selbst eine einfache reproduktive Wieder-gabe der Begriffe von den Sch ¨ulern nicht geleistet werden konnte.Da keine Vergleichsdaten aller Sch ¨uler wie in dieser Befragung von fr ¨uheren Kursen mitJava bzw. Groovy mit einem anderen didaktischen Vorgehen vorliegen, ist es nicht ausge-7http://www.groovy-lang.org , letzter Zugriff: 6.1.2017252 Johannes Fischer, Arno Pasternakii“proceedings” — 2017/9/17 — 20:19 — page 253 — #253iiiiiiModularisierung im Informatikunterricht aus lernpsychologischer Perspektive 7schlossen, dass auch in der Vergangenheit keine besseren Ergebnisse erzielt worden sind.Dagegen spricht allerdings folgende Beobachtung: In der folgenden Klausur, an der al-lerdings nur sechs der insgesamt 28 Sch ¨ulerinnen und Sch ¨uler teilgenommen haben, wur-den wie in vergleichbaren Klausuren der vergangenen Jahre diese Begriffe erneut erfragt.Diese Aufgabe ist normalerweise als reproduktive Aufgabe ein”Punktelieferant“ f ¨ur dieKlausurteilnehmer. Bis auf eine L ¨osung waren die Antworten wieder nicht ausreichend.Die Kurse in den fr ¨uheren Jahren sind didaktisch mit deutlich kleineren Beispielen an dieThematik herangef ¨uhrt worden. Die Antworten der Sch ¨uler, die vor einem Jahr an derKlausur teilgenommen haben, waren deutlich besser.Da wir immerhin noch auf 8 der damals geschriebenen 22 Klausuren Zugriff hatten, konn-ten wir die Antworten an diesen Klausuren veriﬁzieren. Zus ¨atzlich liegen ¨ahnliche Da-ten aus einem Kurs des 11.(!) Jahrganges aus dem Jahre 2010 vor. Dieser Kurs hatte al-lerdings ein etwas anderes Curriculum (und wurde in (Objekt-)Pascal unterrichtet). DieSch¨ulerantworten stellten den Lehrer im Gegensatz zu den Antworten der beiden Kurseim aktuellen Jahr im Wesentlichen zufrieden.Spekulativer Vergleich dieser Ergebnisse Es handelt sich bei diesen Zahlen nicht umeine systematische Untersuchung. Die Ergebnisse und der Vergleich mit fr ¨uheren Kursenzeigen trotzdem, dass die Sch ¨ulerinnen und Sch ¨uler beim Vorgehen nach K ¨olling und Ro-senberg die Modularisierung und deren konkrete Umsetzung mit der Objektorientierungnicht verstanden haben. Selbst die unter Groovy niedrigere Syntax-H ¨urde konnte dies nichtverhindern. Die Sch ¨ulerinnen und Sch ¨uler aus den Kursen vor einem Jahr und dem Jahre2010 konnten die Begriffe der OOP im Wesentlichen wiedergeben.Aufgrund der schwierigen Vergleichbarkeit der Materialien und der unterschiedlichen Kurs-verl¨aufe d ¨urfen diese Ergebnisse nicht ¨uberbewertet werden. Deutlich wird aber, dass drin-gender Bedarf nach empirischen Untersuchungen besteht.5 Lernpsychologische SichtDie aus fachlicher Sicht ¨uberzeugende Position von K ¨olling und Rosenberg hatte uns an-geregt, in diesem Schuljahr nach dieser Konzeption vorzugehen. Das Ergebnis war ern ¨uch-ternd. Es erscheint uns naheliegend, dass hier lernpsychologische Gr ¨unde f ¨ur das Scheiternverantwortlich sind.In den letzten ca. zwanzig Jahren hat es erhebliche Fortschritte in der Lernpsychologie ge-geben. Mit diesen ist es m ¨oglich, die Funktionsweise des Lernens im menschlichen Gehirnzu verstehen. Eine wesentliche Theorie stellt die Cognitive Load Theorie (CLT) [PRS03]dar, die in inzwischen vielf ¨altigen Untersuchungen best ¨atigt wurde. Nach dieser Theoriel¨asst sich die Arbeitsweise des Gehirns als das Zusammenspiel zwischen einem Arbeits-ged¨achtnis und einem Langzeitged ¨achtnis vorstellen. Das nur gering belastbare Arbeits-ged¨achtnis nutzt dabei das Langzeitged ¨achtnis als Wissens- und Kompetenzspeicher. Eslassen sich aber nur wenige neue Eindr ¨ucke mit diesem Speicher gleichzeitig verarbei-ten. Daher ist es sinnvoll, in einen Lernprozess zu einem bestimmten Zeitpunkt nur we-Modularisierung im Informatikunterricht aus lernpsychologischer Perspektive 253ii“proceedings” — 2017/9/17 — 20:19 — page 254 — #254iiiiii8 Johannes Fischer und Arno Pasternaknige neue Elemente einzugliedern. Die empirischen Untersuchungen von Hattie [HBZ13]und die neurowissenschaftlichen Begr ¨undungen von ihm und Yates best¨atigen dies aufeindrucksvolle Weise [Ha15, S.107ff]. F ¨ur die Informatik bedeutet dies, dass gerade imAnfangsunterricht das bottom-up -Prinzip oft dem top-down -Prinzip vorzuziehen ist.Mit diesen neurowissenschaftlichen ¨Uberlegungen k ¨onnen die Theorien von Piaget undvan der Hiele aus der Mitte des letzten Jahrhunderts begr ¨undet werden [PI93, HHG78].Entsprechend dieser Erkenntnisse hat die Gruppe der Neo-Piagisten wie beispielsweiseLister [Li16] diese Theorien weiterentwickelt. F ¨ur den Informatikunterricht speziell fol-gertLister [Li16, S.9ff] ein intensives Arbeiten an und mit dem Quellcode eines Program-mes. Entsprechendes wurde auch einige Jahre zuvor von Shaffer, Doub undTuovinen ausder CLT-Theorie gefolgert [Sh03]. Eigene Untersuchungen aus dem Anfangsunterricht miteiner Programmiersprache best ¨atigen dies [Pa16].Nach der CLT-Theorie ist das aus Sicht der Objektorientierung sinnvolle Vorgehen mitdem Erarbeiten eines gr ¨oßeren Softwareprojektes als Einf ¨uhrung in die Modellierung undProgrammierung eine ¨Uberlast des lernenden Gehirns und muss daher im Allgemeinenscheitern. Es ist daher nach einem anderen Vorgehen zu suchen.6 Eine m ¨ogliche AlternativeDatenabstraktion bleibt das Ziel. Die objektorientierte Programmierung ist eine M ¨oglich-keit, die offensichtlich im Unterricht der allgemeinbildenden Schulen nicht auf jedem Weg— wie gezeigt — zum Ziel f ¨uhrt. Auch wenn die OOM und die OOP als programmier-technisches Vorgehen angestebt wird, ist es sinnvoll, den Weg dorthin anders zu gestalten.Das l ¨asst sich nur mit Programmiersprachen realisieren, die verschiedene Umsetzungender Datenabstraktion erm ¨oglichen. Gut ist es, wenn die verschiedenen Techniken in derDarstellung sich nicht groß unterscheiden, sodass ein Wechsel der Darstellung aus didakti-scher Sicht keine unn ¨otigen syntaktischen Schwierigkeiten bereitet. Hierzu sind allerdingsnoch empirische Untersuchungen n ¨otig.Module und Klassen in einer geeigneten Sprache Im Folgenden wird ein Beispiel be-z¨uglich der Datenabstraktion in der Programmiersprache Tcl[Fl12] vorgestellt. Es gehthier nicht um diese konkrete Sprache, sondern um das Prinzip. In Tclsind alle Formender Datenabstraktion m ¨oglich. Die Nutzung der entsprechenden Techniken weist in derDarstellung kaum Unterschiede auf.Als Beispiel diene das Einf ¨ugen in bin¨are B ¨aume . Ohne Nutzung von Modulen bzw. mitimportierten Modulen lautet der Aufruf: fuege ein mein baum $info . Bei der Nut-zung von Klassen ¨andert sich beim Aufruf mein baum fuege ein $info nur die Rei-henfolge in der Anweisung. Bei Verwendung einer abstrakten Datenstruktur statt einesabstrakten Datentypes vereinfacht sich die Anweisung sogar noch: fuege ein $info .Die fast gleichartige Darstellung bei der Verwendung von Modulen oder Klassen f ¨urabstrakte Typen macht deutlich, dass das Denken in diesen Strukturen sich program-miersprachlich ohne große Br ¨uche in der jeweils gew ¨unschten Form umsetzen l ¨asst. Das254 Johannes Fischer, Arno Pasternakii“proceedings” — 2017/9/17 — 20:19 — page 255 — #255iiiiiiModularisierung im Informatikunterricht aus lernpsychologischer Perspektive 9erm¨oglicht die Umsetzung einer abstrakten Struktur in die technische Form einer Program-miersprache, die zu dem unterrichtlichen Zeitpunkt entsprechend dem Stand der Sch ¨ulerangemessen ist und kann eine ¨Uberforderung an technischem und begrifﬂichem Overheadim Anfangsunterricht verhindern helfen. Auf diese Weise k ¨onnen die Sch ¨ulerinnen undSch¨uler sanft ohne intellektuelle ¨Uberforderung von der Strukturierung der Abl ¨aufe mitProzeduren ¨uber die Gestaltung von Modulen bis zur objektorientierter Programmierunggef¨uhrt werden und damit die Gedanken und Ideen der Modularisierung auf vielf ¨altigeWeise erfahren und erlernen. Das erfordert allerdings die Auswahl einer Programmier-sprache f ¨ur den Unterricht, die verschiedene Darstellungsm ¨oglichkeiten gleichberechtigterm¨oglicht.Mit einem derartigen Vorgehen wird auch einem weiteren wichtigen Prinzip gefolgt, dasnicht nur, aber auch in der Informatik G ¨ultigkeit besitzt, das Kiss-Prinzip [Ri95]: Keep itsmall and simple . Eine Hoffnung aus der Anwendung dieses Prinzip in der Modellierungund vor allem in der Umsetzung in eine konkrete Programmiersprache ist, die H ¨urden f ¨urdie Sch ¨uler so niedrig wie m ¨oglich zu setzen, sodass diese auch außerhalb des Unterrichtsund im sp ¨ateren Leben f ¨ur sich selbst nicht ausschließen, ein konkretes Problem durch eininformatisches Vorgehen selber programmieren und l ¨osen zu wollen.7 ZusammenfassungEin wesentliches”Denkwerkzeug“ der Informatik ist die Modularisierung , die mit ver-schiedenen Techniken durchgef ¨uhrt werden kann. Eine davon ist die objektorientierte Mo-dellierung und Programmierung . Diese hat allerdings oft einen erheblichen Overhead zurFolge.Bei einem Vergleich von Sch ¨ulerleistungen verschiedener Jahrg ¨ange zeigte sich, dass vorein Vorgehen nach den”guidelines“ von K ¨olling und Rosenberg vielen Sch ¨ulerinnen undSch¨ulern große Schwierigkeiten macht. Es ist daher zu ¨uberlegen, ob es zweckm ¨aßig ist,den Schulunterricht nicht von Beginn an mit objektorientierten Sprachen zu beginnen. ImRahmen der didaktischen Reduktion k ¨onnte ein Vorgehen, dass den Aufbau der Elemen-te der Modularisierung stufenweise erm ¨oglicht, geeigneter sein. Dieser Weg realisiert dieIdeen, wie sie von Kortenkamp u.a. unter dem Begriff genetischer Unterricht [Ko09] be-schrieben sind. Ein solches Vorgehen verlangt eine didaktisch begr ¨undete Auswahl derProgrammiersprache, mit der diese Ideen sukzessive im Unterricht vermittelt werden.Literaturverzeichnis[B¨o01] B¨osz¨orm´enyi, L ´aszl´o: Java f ¨ur Anf ¨anger? LOG IN, (1/2001):14–19, 2001.[CS03] Claus, Volker; Schwill, Andreas: Duden Informatik. Dudenverlag, Mannheim, 2003.[Eh12] Ehlert, Albrecht: Empirische Studie: Unterschiede im Lernerfolg und Unterschiede imsubjektiven Erleben des Unterrichts von Sch ¨ulerinnen und Sch ¨ulern im Informatik-Anfangsunterricht (11. Klasse Beruﬂiches Gymnasium) in Abh ¨angigkeit von der zeitlichenReihenfolge der Themen (OOP-First und OOP-Later) . Dissertation, Freie Universit ¨at Ber-lin, Berlin, 2012.Modularisierung im Informatikunterricht aus lernpsychologischer Perspektive 255ii“proceedings” — 2017/9/17 — 20:19 — page 256 — #256iiiiii10 Johannes Fischer und Arno Pasternak[Fl12] Flynt, Clif: Tcl/Tk: A Developer’s Guide. The Morgan Kaufmann Series in Software En-gineering and Programming. Amsterdam, 2012.[Ha15] Hattie, John; Yates, Gregory C.R.; Beywl, Wolfgang; Zierer, Klaus: Lernen sichtbar ma-chen aus psychologischer Perspektive. Schneider Verlag GmbH, Baltmannsweiler, 2015.[HBZ13] Hattie, John; Beywl, Wolfgang; Zierer, Klaus: Lernen sichtbar machen. Schneider VerlagGmbH, Baltmannsweiler, 2013.[He96] Heymann, Hans Werner: Allgemeinbildung und Mathematik. Studien zur Schulp ¨adagogikund Didaktik ; 13. Beltz, Weinheim [u.a.], 1996.[HHG78] Hiele, Pierre Marie van; Hiele-Geldorf, Dina van: Die Bedeutung der Denkebenen imUnterrichtssystem nach der deduktiven Methode. Wege der Forschung. WissenschaftlicheBuchgesellschaft, Darmstadt, 1978.[KL14] Kempe, Thomas; L ¨ohr, Annika: Informatik 1. Sch ¨oningh, Paderborn, 2014.[Ko09] Kortenkamp, Ulrich; Modrow, Eckart; Oldenburg, Reinhard; Poloczek, J ¨urgen; Rabel, Ma-gnus: Objektorientierte Modellierung - aber wann und wie? LOG IN, (160/161):41–47,2009.[KR01] K¨olling, Michael; Rosenberg, John: Guidelines for Teaching Object Orientation with Java.In: Proceedings of the 6th Annual Conference on Innovation and Technology in ComputerScience Education. ITiCSE ’01, ACM, New York, NY, USA, S. 33–36, 2001.[KT10] Kempe, Thomas; Tepaße, David: Informatik 1 * Softwareentwicklung mit Greenfoot undBlueJ. Sch ¨oningh, Paderborn, 2010.[Li16] Lister, Raymond: Toward a Developmental Epistemology of Computer Programming.In: Proceedings of the 11th Workshop in Primary and Secondary Computing Education.WiPSCE 2016, ACM, New York, NY, USA, S. 5–16, 2016.[MS13] MSW NRW: Kernlehrplan f ¨ur die Sekundarstufe II, Gymnasium/Gesamtschule inNordrhein-Westfalen, Informatik. D ¨usseldorf, 2013.[Pa13] Pasternak, Arno: Fach- und bildungswissenschaftliche Grundlagen f ¨ur den Informatikun-terricht in der Sekundarstufe I. Dissertation, Westf ¨alische Wilhelms-Universit ¨at, M ¨unster,2013.[Pa16] Pasternak, Arno: Contextualized Teaching in the Lower Secondary EducationLong-termEvaluation of a CS Course from Grade 6 to 10. In: Proceedings of the 47th ACM TechnicalSymposium on Computing Science Education. SIGCSE ’16, ACM, New York, NY, USA,S. 657–662, 2016.[PI93] Piaget, Jean; Inhelder, B ¨arbel: Die Psychologie des Kindes. dtv-Taschenb ¨ucher dialog undpraxis. Dt. Taschenbuch-Verlag, Stuttgart, 1993.[Po84] Pomberger, Gustav: Softwaretechnik und Modula 2. Hanser Fachbuchverlag, M ¨unchen,1984.[PRS03] Paas, Fred; Renkl, Alexander; Sweller, John: Cognitive Load Theory and InstructionalDesign: Recent Developments. Educational Psychologist, 38(1):1–4, 2003.[Ri95] Rich, Ben R.: Clarence Leonard (Kelly) Johnson, A Biographical Memoir. National Aca-demies Press, Washington DC, USA, 1995.[Sh03] Shaffer, Dale; Doube, Wendy; Tuovinen, Juhani; Sturt, Charles; Wagga, Wagga; Wales,New South: In (Petre, M.; Budgen, D., Hrsg.): Proceedings of the Joint Conference EASE& PPIG 2003. 2003.[SS11] Schubert, Sigrid; Schwill, Andreas: Didaktik der Informatik. Spektrum Akademischer Ver-lag, Heidelberg, 2. Auﬂage, 2011.[Wi91] Wirth, Niklaus: Die Dinge beim Namen nennen. In: Erstes European Software Festival.Chip – Vogel-Verlag, W ¨urzburg, S. 60–64, 1991.[Wi03] Witten, Helmut: Allgemeinbildender Informatikunterricht? Ein neuer Blick auf H. W. Hey-manns Aufgaben allgemeinbildender Schulen. INFOS 2003, GI, Bonn, S. 59–75, 2003.[Wi06] Wing, Jeannette M.: Computational Thinking. Commun. of the ACM, 49(3):33–35, 2006.[Wi08] Wing, Jeannette M.: Computational thinking and thinking about computing. PhilosophicalTransactions of The Royal Society, (366):3717–3725, 2008.256 Johannes Fischer, Arno Pasternakii“proceedings” — 2017/9/17 — 20:19 — page 257 — #257iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 11Von Eingebetteten Systemen zu Physical Computing:Grundlagen für Informatikunterricht in der digitalen WeltMareen Przybylla1, Ralf Romeike2Abstract: Der digitale Wandel basiert neben der zunehmenden Durchdringung des täglichen Lebensmit digitalen Systemen auch auf der parallel stattﬁndenden Entwicklung von untereinander vernetztenallgegenwärtigen, sogenannten cyber-physischen Systemen. Diese sind in der Lage, mit Sensorik ihreUmwelt zu erfassen und mittels Aktorik in die menschliche Erfahrungswelt zurückzuwirken. Für dieSchulinformatik wird das Potenzial dieser Innovationen häuﬁg noch unzureichend umgesetzt, wasnicht zuletzt in Ermangelung eines geeigneten fachlichen Rahmens und daraus resultierend fehlenderLehr-Lern-Materialien begründet ist. Dieser Beitrag untersucht daher die fachlichen Grundlagendes Themenkomplexes und identiﬁziert für die Schulinformatik relevante Inhalte und stellt siestrukturiert dar. Anhand einer interaktiven Modellstadt wird exemplarisch gezeigt, wie die Inhalte imInformatikunterricht verankert werden können.Keywords: Eingebettete Systeme; Physical Computing; Fachstruktur; Unterrichtsbeispiel1 EinleitungImmer weniger technische Entwicklungen der heutigen Zeit nutzen klassische Computer mitBildschirm, Tastatur und Maus. Wir sind vorwiegend von mobilen Geräten und reaktivenSystemen umgeben, die anhand von Sensoren und Aktoren kontinuierlich mit ihrer Umweltkommunizieren. Mikrocontroller dominieren in Gestalt von eingebetteten Systemen unserenAlltag. Im Schulunterricht werden hingegen meist klassische Desktop-PCs als Beispielherangezogen, die nur einen Bruchteil aller Informatiksysteme ausmachen. Der Umgang miteingebetteten Systemen erfordert neues Wissen und neue Kompetenzen, die im traditionellenUnterricht nicht erworben werden. Damit Schüler am gesellschaftlichen Diskurs teilhaben,der Medienberichterstattung folgen und informiert Urteile fällen können, ist es notwendig,die relevanten Aspekte im Unterricht zu thematisieren. Um ihnen darüber hinaus einenproduktiven und kreativ-gestalterischen Umgang mit modernen Informatiksystemen zuermöglichen, muss Unterricht sich an den Gegebenheiten der realen Welt orientierenund entsprechende Kompetenzen ausbilden. Zwar gibt es bereits zahlreiche Beispielezur Verwendung von Mikrocontrollern im Unterricht, jedoch werden diese häuﬁg rein alsWerkzeug und nicht als Unterrichtsgegenstand thematisiert. Hierzu fehlt bisher ein geeigneterfachlicher Rahmen. Dieser Beitrag untersucht daher Literatur der Fachwissenschaft mit1Universität Potsdam, Didaktik der Informatik, Augut-Bebel-Straße 89, 14482 Potsdam przybyll@uni-potsdam.de2Friedrich-Alexander-Universität Erlangen-Nürnberg, Didaktik der Informatik, Martensstraße 3, 91058 Erlangen,ralf.romeike@fau.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 257ii“proceedings” — 2017/9/17 — 20:19 — page 258 — #258iiiiii12 Mareen Przybylla, Ralf Romeikedem Ziel, für den Informatikunterricht relevante Inhalte zu extrahieren und geeignetzu strukturieren. Die Ergebnisse können dann genutzt werden, um in diesem Bereichangesiedelten Unterricht zu strukturieren, geeignete Unterrichtsmethoden zu etablieren oderLern- und Lehrmaterialien zu erstellen, die auf die entsprechende Zielgruppe zugeschnittensind. Anhand einzelner Beispiele aus einem Projekt zur Gestaltung einer interaktivenModellstadt wird schließlich gezeigt, wie sich ausgewählte Probleme dieses Fachbereichsim Rahmen von Physical Computing im Informatikunterricht thematisieren lassen.2 Eingebettete Systeme in der informatischen SchulbildungUnter anderem durch die immer stärkere Präsenz unzähliger Mikrocontroller in autonomenFahrzeugen, „Smart“-Entwicklungen und Alltagsgegenständen sind eingebettete Systemeseit einiger Zeit einer der wichtigsten und innovativsten Forschungs- und Entwicklungs-schwerpunkte der Informatik. Auch die Schulinformatik beschäftigt sich grundsätzlich seitlangem mit diesem Themenbereich. Baumann zeigte beispielsweise in einem historischenAbriss zu Entwicklungen in der Schulinformatik im Forschungsgebiet Eingebettete Systeme ,dass seit etwa 30 Jahren regelmäßig Artikel zu den Themen Messen – Steuern – Regeln ,Prozessdatenverarbeitung undAutomatisierung verö entlicht wurden [Ba11]. Im kürzlicherschienenen LOGIN-Themenheft „Eingebettete Systeme“ [Fa16] werden zahlreiche Unter-richtsbeispiele und verschiedenste Ansätze und Werkzeuge für den Unterricht vorgestellt.Aus fachdidaktischer Sicht analysiert z. B. Stechert ausführlich den Informatiksystembe-gri und schlussfolgert, dass es zur Kompetenzentwicklung in diesem Bereich nötig sei,„Informatiksysteme in ihrer Einheit aus Hardware, Software und Vernetzung anhand ihresnach außen sichtbaren Verhaltens, der inneren Struktur und Implementierungsaspektenzu analysieren“ und typische Repräsentanten von Informatiksystemen mit Schülern zuuntersuchen und sie zu erklären [St09]. In den GI-Bildungsstandards Informatik für dieSekundarstufe II wird empfohlen, zur Entwicklung von Informatiksystemen maschinellverarbeitbare Sachverhalte der realen Welt zu identiﬁzieren und modellieren. Als typischeEinsatzbereiche werden u. a. Robotik ,Prozesssteuerung undProzessregelung genannt [Ar16].Auch in den neueren Curricula einiger Bundesländer wird diese Entwicklung ersichtlich. Soempﬁehlt der Berlin-Brandenburger Rahmenlehrplan beispielsweise die Realisierung eineseigenen Physical-Computing-Projektes und die Verwendung externer Hardware innerhalbdes Themenfeldes Informatiksysteme [BM15]. Im Wahlthemenfeld Physical Computingwird die Charakterisierung eingebetteter Systeme , die Verarbeitung elektrischer Größenoder auch die Verwendung von Mikrocontrollern in verschiedenen Kontexten verlangt[BM15]. Lehrkräfte zeigen immer wieder reges Interesse an Fortbildungen, Bausätzen undUnterrichtsmaterialien. Verfügbare Ressourcen beschränken sich jedoch häuﬁg auf dieVerwendung von Werkzeugen zur motivierenderen Gestaltung des traditionellen Unterrichtsund gehen nur selten über die Grundlagen der Sensor-Aktor-Ansteuerung hinaus (z. B.[Ba11; NW16; PR12]), sodass Phänomene des Ubiquitous Computing mit den bisherigenAnsätzen im Unterricht nicht ausreichend erklärt werden.258 Mareen Przybylla, Ralf Romeikeii“proceedings” — 2017/9/17 — 20:19 — page 259 — #259iiiiiiVon Eingebetteten Systemen zu Physical Computing 133 Phänomene der digitalen Welt: Ubiquitous ComputingInformatiksysteme entwickelten sich in den letzten Jahrzehnten immer mehr entsprechendder Vision des Ubiquitous-Computing -Pioniers Mark Weiser, der bereits Anfang der 1990erJahre allgegenwärtige, e  ziente und gleichzeitig unsichtbare Computer vorhersagte [We93].Diese Vision ist durch entsprechende Technologien heute alltäglich und wird durch dasInternet der Dinge (engl. Internet of Things, IoT) und Internet von Allem (engl. Internetof Everything, IoE) noch ausgeweitet. Im IoT werden „Dinge“, die eingebettete Systemeenthalten, untereinander und mit Diensten im Internet vernetzt. Geräte und Maschinenerfassen mit Sensorik ihre Kontexte und übermitteln diese Daten. Insbesondere durch denZusammenﬂuss der Daten vieler Dinge entstehen neue Möglichkeiten der Informationsge-winnung, die physikalische Welt verschmilzt mit der virtuellen. Für die Industrie ist dies vorallem im Bereich intelligenter Maschinen von Bedeutung, aber auch in der Heimanwendungﬁnden sich Beispiele: Autos, Haushaltsgeräte oder beliebige Einrichtungsgegenständekönnen mit Diensten aus dem Internet verknüpft werden. Die Daten werden beispielsweisezur Fahrzeugnavigation, automatisierten Ersatzteilbestellung oder Marktanalyse genutzt.Die Einbindung solcher Dienste ermöglicht schließlich dank Echtzeitanalysen, Einﬂussauf die reale Welt zu nehmen. Durch das stetige Anwachsen der Informationsvielfalt imInternet und über das Vernetzen der Dinge mit Personen und Prozessen, wird aus demIoT immer mehr das IoE [BHV14]. Um hierzu inhaltlich fundierten Unterricht anbietenzu können, bedarf es einer fachlichen Klärung unter didaktischen Gesichtspunkten. DieSichtung von Lehr- und Lernmaterialien zu den genannten Themen zeigte, dass es einegroße Fülle an Lehrbüchern der Fachwissenschaft gibt, die jedoch für eine gänzlich andereZielgruppe konzipiert worden sind (oft Studierende der Ingenieurswissenschaften undInformatik, Hard- und Software-Entwickler in der Praxis). Diese können nicht unmittelbarfür den allgemeinbildenden, wissenschaftspropädeutischen Einsatz im Schulunterrichtgenutzt werden. Es stellt sich die Frage, wie die Fachstruktur zu beschreiben ist, sodass ihrezentralen Inhalte im Unterricht adäquat vermittelt werden können. Daher wurden vorhandeneLehrbücher mit dem Ziel analysiert, die Grundlagen herauszuarbeiten und Inhalte für dieGestaltung entsprechender Unterrichtseinheiten im Informatikunterricht zu extrahieren undgeeignet zu strukturieren. Hierzu wurde in einem ersten Analyseschritt aus der Literaturzunächst zusammengetragen, welche informatischen Inhalte zu den jeweiligen Fachgebietenallgemein thematisiert werden. Im zweiten Schritt wurde der daraus entstandene Kataloghinsichtlich zentraler Aspekte analysiert, also solcher Inhalte, Methoden und Konzepte, diein allen Werken als charakteristische Merkmale des betre  enden Gebietes beschrieben undfür das Verständnis erforderlich sind. Diese wurden auf ihre wesentlichen Eigenschaftenreduziert. Im letzten Schritt wurden Gemeinsamkeiten zusammengefasst. In den folgendenAbschnitten werden die einzelnen Forschungsgebiete näher charakterisiert.3.1 Eingebettete SystemeEingebettete Systeme (ES) vereinen Hard- und Softwarekomponenten, werden im Gegensatzzu Mehrzweckcomputern in größere Produkte eingebettet und erfüllen in der Regel genauVon Eingebetteten Systemen zu Physical Computing 259ii“proceedings” — 2017/9/17 — 20:19 — page 260 — #260iiiiii14 Mareen Przybylla, Ralf Romeikeeinen Zweck. Sie sind meist mit physischen Prozessen in ihrer Umgebung durch Sensorenund Aktoren verbunden und erfordern oft keine menschlichen Eingaben (vgl. [VG02]).Beispiele für ES ﬁnden sich in allen denkbaren Bereichen unseres Lebens: im Straßen- undBahnverkehr, in medizinischen Geräten oder im „Smart Home“. Der Verband BITKOMdeﬁniert ES insbesondere unter Einbezug ihres typischen Zwecks, Systeme zu steuern, regelnoder überwachen. ES erfüllen vordeﬁnierte Aufgaben, oft unter Echtzeit-Anforderungen[BI10]. Sensor- und Aktor-Schnittstellen ermöglichen es, Veränderungen in der Umwelt zuerfassen und Änderungen an der Umwelt vorzunehmen. Im Gegensatz zu transformationellenSystemen, die Eingabe, Verarbeitung und Ausgabe linear durchlaufen und dann ihr Programmbeenden, laufen ES kontinuierlich und interagieren stetig mit ihrer Umgebung. TypischeHardware für den Informatikunterricht stellen Mikrocontroller, wie z. B. Arduino dar.3.2 RobotikEin spezielles Anwendungsgebiet von ES ist die Robotik. Roboter sind insbesondereautonom agierende Maschinen, die in einen Bewegungsapparat eingebunden sind undbeispielsweise Arme, Beine oder Räder zur Fortbewegung oder für Greiftätigkeiten nutzen.Sie unterstützen und ersetzen Menschen durch physische Aktivität beim Ausführen konkreterAufgaben und können ihre Umwelt modiﬁzieren [Si10]. Hertzberg et al. betonen zudemdie mit der Autonomie von mobilen Robotern verbundene Schwierigkeit, vorhersehbareProgramme zu erstellen. Dadurch, dass all ihre Aktionen von ihrer Umgebung abhängigsind, die erst zur Ausführungszeit bekannt ist, müssen Roboter diese mit Sensoren erfassen,die Daten bewerten und passende Handlungsweisen initiieren [HLN12]. Robotik befasstsich eingehend mit Themen wie Kinetik, mechanischen Bewegungsabläufen, Wahrnehmung,Navigation und Hindernisvermeidung. Roboter können auch dort eingesetzt werden, wo esfür Menschen schwierig ist zu arbeiten, z. B. im All, in der Wüste oder im Meer. Sie werdenzur E  zienzsteigerung in der Lebensmittel- und Güterherstellung, Land- und Forstwirtschaftoder Medizintechnik verwendet. Immer häuﬁger ﬁnden sie sich beispielsweise in Form vonStaubsauger- oder Bodenwischrobotern auch in Haushalten wieder. Unterrichtsbeispiele mitLEGO Mindstorms sind überwiegend der Robotik zuzuordnen.3.3 Cyber-Physische SystemeCyber-physische Systeme (CPS) haben viele Gemeinsamkeiten mit ES und werden inder Literatur oft synonym behandelt. In CPS überwachen und steuern untereinander undmit dem Internet vernetzte ES physische Prozesse. Dies geschieht üblicherweise mitRegelungstechnik, indem Daten aus der Umwelt die Berechnungsprozesse beeinﬂussenund umgekehrt. Neben der physischen Umgebung (z. B. mechanische Teile, chemischeProzesse, menschliche Bediener, also die direkte Umgebung des Systems) bestehen CPS ausRechnerplattformen, die neben den Mikrocontrollern auch Sensorik und Aktorik bereitstellenund Netzwerkkomponenten, die die Kommunikation der Teilsysteme untereinander undüber das Internet ermöglichen [LS14].260 Mareen Przybylla, Ralf Romeikeii“proceedings” — 2017/9/17 — 20:19 — page 261 — #261iiiiiiVon Eingebetteten Systemen zu Physical Computing 153.4 Gemeinsamkeiten von ES, Robotern und CPSObwohl die beschriebenen Systemarten jeweils in verschiedene Richtungen spezialisiertsind, gibt es eine Reihe an Eigenschaften und Anforderungen, die übergeordnet als zen-tral angesehen werden können und aus denen sich zentrale Konzepte und Ideen ableitenlassen. Grundsätzlich werden in allen Systemen Sensoren verwendet, um Eingangssignaleauszuwerten, zu verarbeiten und entsprechend der darauf basierenden und durch Softwarebestimmten Entscheidungen Aktoren angesteuert, um etwas zu kontrollieren, zu steuern, zubewegen – also ein Signal in die Außenwelt zu geben. Man unterscheidet hinsichtlich derDatenerfassung allgemein zwischen zeitkontinuierlichen Systemen , die, meist als Regelungs-systeme, ununterbrochen Signalströme verarbeiten und diskreten Systemen , die ereignis- oderzeitgesteuert diskrete Signale verarbeiten. Je nach Anwendungsbereich müssen ES, Roboterund CPS strengen Anforderungen genügen, wie beispielsweise Echtzeit-Anforderungen ,innerhalb eines vordeﬁnierten Zeitraums korrekte Ergebnisse zu liefern [VG02, pp. 69-74].Dies ist vor allem in sicherheitskritischen Bereichen von Bedeutung, wie in automatisiertenZugsystemen oder in der computergestützten Chirurgie. Bei Echtzeitsystemen wird zwischenweicher ,moderater undharter Echtzeit unterschieden, also danach, ob ein Überschreiteneiner Zeitschranke als Systemfehler gewertet wird oder in gewissem Maß tolerabel ist.Während im ersten Fall ein Versagen katastrophale Folgen haben kann, beeinﬂusst es inletzterem lediglich die Qualität des Systems. Die Laufzeit kann daher kritisch werden undEinﬂuss auf die Korrektheit nehmen, statt nur auf Performanz oder Bedienkomfort [LS14].Die meisten ES und CPS lassen die Ausgabe eines physischen Systems einer gegebenenReferenzeingabe folgen (z. B. Thermostat). Im deutschsprachigen Raum werden hierbeiweiter Steuern und Regeln unterschieden: Im Steuersystem wird z. B. das Heizungsventilanhand der Temperatureingabe 22 °C entsprechend der Berechnung für die Referenzein-gabe geö  net. In Regelungssystemen wird entsprechend der gemessenen Realtemperaturnachreguliert, sollte die erreichte Temperatur nicht 22 °C betragen. Solche Systeme sollensich sinnvoll verhalten und die Referenzeingabe auch bei Rauschen, Modellfehlern oderStörungen verfolgen. Auch hier gibt es wieder spezielle Anforderungen (vgl. [LS14; VG02]):• Stabilität: Ausgangssignale sollen bei gleichbleibenden Eingangssignalen ihre Wertemöglichst nicht verändern• Performanz: gewünschte Ausgabe wird möglichst exakt in möglichst kurzer Zeit anReferenzeingabe angepasst• Störungsabwehr : Minimaler Einﬂuss von Störungen auf das System• Robustheit: Minimaler Einﬂuss von Modellfehlern auf Stabilität und PerformanzIn aller Regel unterliegen ES, Roboter und CPS in der Entwicklung strengen Vorgaben(sogenannten Entwurfsmetriken ) bezüglich Kosten ,Stromverbrauch ,Formfaktor undPer-formanz . Auch die Entwicklungszeit spielt in der Wirtschaft eine große Rolle. Unterschiedenwird hierbei zwischen Time-to-Prototype (TTP) undTime-to-Market (TTM) , die häuﬁgausschlaggebend für den Erfolg oder Misserfolg eines Produktes sind. Alle genanntenVon Eingebetteten Systemen zu Physical Computing 261ii“proceedings” — 2017/9/17 — 20:19 — page 262 — #262iiiiii16 Mareen Przybylla, Ralf RomeikeMetriken stehen gegenseitig in Konkurrenz [VG02]. So hat erhöhte Performanz z. B. oftauch einen höheren Stromverbrauch und damit sinkende Energiee  zienz zur Folge. DerEntwurf von ES, CPS und Robotern bringt eine Reihe an Problemstellungen mit sich, ausdenen sich typische Methoden und Konzepte zur Problemlösung ableiten lassen. Dazugehören u. a. Nebenläuﬁgkeit ,Trade-O  sundHeterogenität :• Nebenläuﬁgkeit: Prozesse in der realen, physischen Welt ﬁnden parallel statt, müssenaber in einer sequentiellen Semantik abgebildet werden. Daher werden Konzepte wieInterrupts ,Multitasking oder Semaphore genutzt, um beispielsweise Nachrichtenaus-tausch zu ermöglichen und Deadlocks zu vermeiden [LS14].• Trade-O  s:Es muss bei der Gestaltung solcher Systeme abgewogen werden zwischenschnell berechneten, aber weniger genauen und langsamer berechneten, aber akkuratenErgebnissen [Wo09].• Heterogenität: ES, Roboter und insbesondere CPS sind schwieriger zu analysierenund entwerfen als homogene Systeme, da sie neben der Kombination aus Netzwerk-kommunikation und der eigentlichen Berechnung zusätzlich dynamische, physischeProzesse einbeziehen, die nie vollumfänglich vorhersehbar sind [LS14].3.5 Zusammenfassung der FachstrukturEs zeigt sich, dass die beschriebenen Forschungsgebiete stark verzahnt sind und dass dasVerständnis bestimmter Inhalte und Konzepte Voraussetzung ist, um andere Gebiete zuerschließen. Da sie die fachliche Grundlage für das gesamte Fachgebiet bilden, sollten dievorgestellten Eigenschaften, Anforderungen und Problemstellungen sowie daraus resultieren-de Methoden und Konzepte eingebetteter Systeme auch im Informatikunterricht thematisiertwerden. Die in Abb. 1 dargestellte Struktur des Fachgebietes verortet die einzelnen For-schungsgebiete im größeren Zusammenhang und stellt ihre Unterscheidungsmerkmale dar.Neben den oben beschriebenen Bereichen gibt es noch zahlreiche weitere Technologien imKontext der Mensch-Maschine-Interaktion , beispielsweise Interaktive Systeme ,WearableComputer oder auch Elektronische Textilien , die sich aus weniger technischen Perspektivenmit dem Gegenstandsbereich eingebetteter Systeme auseinandersetzen.4 Fachdidaktische AufarbeitungDie vorgestellte Struktur kann herangezogen werden, um notwendige Vorkenntnisse derSchüler und Zusammenhänge zwischen den Teilgebieten herstellen und sichern zu können.Zentrale Inhalte und Konzepte eingebetteter Systeme werden zur Entwicklung verschiedens-ter interaktiver Systeme benötigt, sodass je nach Zielgruppe und Interessen unterschiedlicheThemengebiete mit verschiedenen Schwerpunkten als Kontexte im Unterricht genutzt werdenkönnen. Auf diese Weise können Kompetenzen zur Analyse, Modellierung und Umsetzungvon ES schrittweise entwickelt werden. Das Gestalten eingebetteter Systeme stellt zunächst262 Mareen Przybylla, Ralf Romeikeii“proceedings” — 2017/9/17 — 20:19 — page 263 — #263iiiiiiAbb. 1: Überblick über die verschiedenen Forschungsgebiete im Bereich eingebetteter Systemeeine große Herausforderung dar, die die Beachtung und Bearbeitung zahlreicher Teilaspektebeinhaltet. Daher ist es wichtig, den Lernenden neben der inhaltlichen Auseinandersetzungmit dem Thema auch Werkzeuge und Methoden zur Verfügung zu stellen, die Arbeitsschrittestrukturieren und so erfolgreiches Lernen ermöglichen. Eine Möglichkeit hierzu bietetPhysical Computing : Programmierbare Mikrocontroller bieten als Werkzeug eine attraktiveund vielversprechende Heranführung an die Gestaltung eingebetteter Systeme.4.1 Umsetzung mit Physical ComputingPhysical Computing hat sich mit einer stetig wachsenden Gemeinschaft aus Künstlern, De-signern und Hobby-Bastlern entwickelt, die Mikrocontroller nutzen, um interaktive Objekteherzustellen. Hierfür werden Sensoren, wie Lautstärke- oder Temperatursensoren und Akto-ren, wie Servomotoren oder Lautsprecher verwendet, um kontinuierlich mit ihrer Umwelt zuinteragieren. Je nach Ziel des jeweiligen Projektes, werden bestimmte Problemstellungen,Anforderungen und Entwurfsmetriken aus den in Abschnitt 3 analysierten Fachgebietenrelevant. Zusammenfassend betrachten wir Physical Computing als die kreative Gestaltungund Entwicklung interaktiver, physischer Objekte und Systeme , die als programmierte,greifbare Medien über Sensoren und Aktoren mit ihrer Umwelt kommunizieren [PR12].Physical Computing nutzt Methoden und Ideen eingebetteter Systeme, derer Spezialgebieteund Anwendungen. Es überträgt die traditionell virtuellen kreativen Möglichkeiten derInformatik durch Einbezug von Aspekten aus Kunst und Design in die reale Welt und kanndas Fach vielfältiger und damit attraktiver erscheinen lassen. Auch der hohe Motivationswertselbst kreierter Produkte lässt sich für den Informatikunterricht positiv nutzen.4.2 Beispielumsetzung: Projekttag Smart CityDie nachfolgenden Beispiele von einem Projekttag, der mit 22 Schülerinnen und Schülernder achten bis elften Jahrgangsstufen durchgeführt wurde, illustrieren exemplarisch, wieVon Eingebetteten Systemen zu Physical Computing 263ii“proceedings” — 2017/9/17 — 20:19 — page 264 — #264iiiiiiInhalte aus den Bereichen ES, CPS und Robotik in Informatikprojekten verankert wertenkönnen. Ziel des Projektes war der Bau einer interaktiven LEGO-Stadt („Smart City“). Ineiner solchen Stadt gibt es zahlreiche eingebettete Systeme. Diese erfassen an verschiedenenStellen ihre Umwelt (z. B. Wettereinﬂüsse, Verkehrsaufkommen, Müllstand) und steuerndiese (z. B. Markisen einfahren, Ampelsteuerung anpassen, Müllabholung regulieren).Abb. 2: Schüler beim Bau einer „Smart City“ mit LEGO, Arduino TinkerKit und Snap4ArduinoIn kleinen Projektgruppen arbeiteten die Teilnehmer jeweils an Teilprojekten einer inter-aktiven LEGO-Stadt (siehe Abb. 2). Alle Schüler kamen unabhängig von ihrer konkretenAufgabe mit gewissen Grundkonzepten eingebetteter Systeme in Berührung, wie beispiels-weise der Kalibrierung undAnsteuerung vonSensoren undAktoren oder zeitkontinuierlichenunddiskreten Signalen. Darüber hinaus lernten sie an konkreten, nicht konstruierten Beispie-len typische Probleme des Entwurfs eingebetteter Systeme kennen und mit ihnen umzugehen.Durch das Projektziel, die „Smart City“ noch am selben Tag zu präsentieren, wurde eineSituation gescha  en, in der die Time-to-Market , wie auch in industriellen Projekten, unaus-weichlich festgelegt war. Das Projekt wurde mit agilen Methoden umgesetzt, sodass auchdieTime-to-Prototype begrenzt war, indem die Schüler nach vorab deﬁnierten Zeiträumenihre Prototypen den „Bürgermeistern“ (Betreuern) vorstellen mussten.Unsere früheren Erfahrungen zeigten, dass es für Schüler häuﬁg eine besondere Herausfor-derung darstellt, physikalische Prozesse der Umgebung dem Ziel entsprechend zu erfassen.Dies lässt sich mit Physical Computing gut bewerkstelligen, indem sich Unterricht anLeitfragen von O’Sullivan und Igoe [OI04] orientiert, z. B. Was soll das Produkt aus Sichtdes Benutzers tun? ( Planung aus Nutzersicht ), Was sind Eingaben, Verarbeitungsschritte undAusgabe des Produktes aus nicht-technischer Sicht? Welche Ein- und Ausgaben sind diskret,welche zeitkontinuierlich? ( Planung aus Entwicklersicht ). Im Projekt umfasste die Planungaus Nutzersicht eine Beschreibung der Ziele derart, dass sie für die „Bürgermeister“ der Stadtverständlich sein sollte, da von ihnen keinerlei Technikverständnis vorausgesetzt werdendurfte. Auch die Bürgermeister selbst konnten Wünsche äußern und an das Projektboardheften. Die Planung aus Entwicklersicht wurde gruppenintern in der Kürze der Zeit nurrudimentär umgesetzt. Die Betreuer regten in den Gruppen entsprechende Diskussionen an.Während harte Echtzeit in Schulprojekten meist keine Rolle spielen wird, sind weiche264 Mareen Przybylla, Ralf Romeikeii“proceedings” — 2017/9/17 — 20:19 — page 265 — #265iiiiiiVon Eingebetteten Systemen zu Physical Computing 19Echtzeitanforderungen an die zu erstellenden ES häuﬁg zu erfüllen. Typische Problemetauchen immer dann auf, wenn Verzögerungen für die Nutzer wahrnehmbar werden.Insbesondere bei gezielten Nutzerinteraktionen ist dies der Fall. In einem Teilprojekthatten Schüler beispielsweise das Problem zu lösen, dass die Rathausbeleuchtung in derStadt drahtlos aktiviert werden sollte, jedoch die Übertragungsverzögerung über WLANdeutlich spürbar war. Die Vorhersehbarkeit von Umwelteinﬂüssen ist ein typisches Problemheterogener Systeme . In der Stadt sollten zum Beispiel Fahrzeuge gezählt werden, dieeinen Parkplatz befahren. Bei der Verwendung eines Helligkeitssensors in der Bodenplattewurde schnell deutlich, dass Umwelteinﬂüsse die Zählung verfälschen können. Die Schülermussten daher eine Lösung für das Problem ﬁnden, dass Schwankungen in der Helligkeitüber dem Sensor nicht immer bedeuteten, dass ein Fahrzeug die Stelle überfuhr. In Bezugauf Zuverlässigkeit ist Störungsabwehr einer der zentralen Aspekte neben Robustheitim Entwurf eingebetteter Systeme. So sollte in der Stadt zum Beispiel ein beschrankterBahnübergang zuverlässig sensorgesteuert schließen und nach Zugdurchfahrt wieder ö  nen.Dabei war es besonders wichtig, keine Fehler in der Durchfahrterkennung zuzulassen.5 DiskussionAllgemeinbildender Informatikunterricht steht vor der Herausforderung, zeitbeständigeIdeen und Konzepte zu vermitteln und Kompetenzen zu schulen, die in der digitalen Welt vonBedeutung sind. Einige Innovationen der letzten Jahrzehnte und damit zusammenhängendeIdeen und Konzepte sind bisher im Schulunterricht jedoch nicht ausreichend verankert:Moderne Informatiksysteme sind immer häuﬁger eingebettete Systeme, die hochgradigvernetzt und überall zu jeder Zeit verfügbar sind. In diesem Beitrag wurde begründet, dassThemen aus den Bereichen eingebettete Systeme, cyber-physische Systeme und Robotik mitall den dazugehörigen Konzepten (wie z. B. Steuern und Regeln, Nebenläuﬁgkeit oder Trade-O s) im Informatikunterricht geeignet sind, Schüler dazu zu befähigen, produktiv und kreativsolche Systeme zu gestalten und kompetent mit ihnen umzugehen. Anhand der Erkenntnisseaus den Forschungsgebieten wurde deutlich, dass es zahlreiche gemeinsame Merkmale gibt,die für den Unterricht relevant sind und somit eine fachlich-inhaltliche Grundlage liefern.Die dargestellte Struktur des Fachgebietes kann genutzt werden, um eine inhaltlich logischaufgebaute Unterrichtsplanung vorzunehmen, Teilgebiete im größeren Zusammenhang zuverorten und geeignete Lehr-Lernszenarien und -materialien für die Schule zu entwerfen.Mit den zugrundeliegenden Konzepten lassen sich auf sehr motivierende und kreativeWeise interaktive Objekte und Systeme gestalten, wie z. B. Arbeiten aus der Maker-Kulturzeigen. Es wurde am Beispiel einer Modellstadt aufgezeigt, wie solche Inhalte im Rahmenvon Physical Computing kontextualisiert werden können. Unsere Unterrichtserfahrungenzeigen, dass Physical Computing eine attraktive Herangehensweise ist, sich den Inhaltennicht nur auf theoretischer Ebene zu nähern, sondern mit geeigneten Werkzeugen auchpraktisch umzusetzen. Beim Entwurf interaktiver, physischer Objekte und Systeme werdenInteraktionen zwischen Teilsystemen mit allen dazugehörigen Problemen thematisiert.Diese Inhalte werden mit Physical Computing für den Informatikunterricht auf einer sehrkonkreten Ebene zugänglich gemacht.Von Eingebetteten Systemen zu Physical Computing 265ii“proceedings” — 2017/9/17 — 20:19 — page 266 — #266iiiiii20 Mareen Przybylla, Ralf RomeikeLiteratur[Ar16] Arbeitskreis »Bildungsstandards SII« der Gesellschaft für Informatik e.V.:Bildungsstandards Informatik für die Sekundarstufe II, 2016.[Ba11] Baumann, R.: Eingebettete Systeme verstehen. Teil 1: Kreatives Experimentierenmit Arduino. LOG IN 171/, S. 33–45, 2011.[BHV14] Bojanova, I.; Hurlburt, G.; Voas, J.: Imagineering an Internet of Anything.Computer 47/6, S. 72–77, 2014.[BI10] BITKOM: Eingebettete Systeme – Ein strategisches Wachstumsfeld für Deutsch-land, 2010.[BM15] Berliner Senatsverwaltung für Bildung Jugend und Familie; Ministerium fürBildung Jugend und Sport des Landes Brandenburg: Teil C Informatik, 2015.[Fa16] Eingebettete Systeme. LOG IN - Informatische Bildung und Computer in derSchule/185/186, hrsg. von Fachbereich Erziehungswissenschaft und Psychologieder Freien Universität Berlin, 2016.[HLN12] Hertzberg, J.; Lingemann, K.; Nüchter, A.: Mobile Roboter - Eine Einführungaus Sicht der Informatik. Springer-Verlag, Berlin Heidelberg, 2012.[LS14] Lee, E. A.; Seshia, S. A.: Introduction to Embedded Systems - A Cyber-PhysicalSystems Approach. 2014.[NW16] Neutens, T.; Wy  els, F.: Teacher professional development through a physicalcomputing workshop. In: Proceedings of the 11th Workshop in Primary andSecondary Computing Education (WiPSCE ’16). S. 108–109, 2016.[OI04] O’Sullivan, D.; Igoe, T.: Physical Computing: Sensing and Controlling thePhysical World with Computers. Thomson Course Technology, Boston, 2004.[PR12] Przybylla, M.; Romeike, R.: My Interactive Garden - A Constructionist Approachto Creative Learning with Interactive Installations in Computing Education. In:Proceedings of Constructionism 2012. Athen, S. 395–404, 2012.[Si10] Siciliano, B.; Sciavico, L.; Villani, L.; Oriolo, J.: Robotics: Modeling, Planningand Control. 2010.[St09] Stechert, P.: Fachdidaktische Diskussion von Informatiksystemen und derKompetenzentwicklung im Informatikunterricht, Diss., Universität Siegen,2009, 45  ., 309.[VG02] Vahid, F.; Givargis, T. D.: Embedded System Design: A Uniﬁed Hardware/Soft-ware Introduction. Wiley, 2002.[We93] Weiser, M.: Some Computer Science Issues in Ubiquitous Computing. Com-munications of the ACM 36/7, S. 75–84, 1993.[Wo09] Wolf, W.: Cyber-physical systems. IEEE Computer 42/3, S. 88–89, 2009.266 Mareen Przybylla, Ralf Romeikeii“proceedings” — 2017/9/17 — 20:19 — page 267 — #267iiiiiiQuadrologik  – Modellbildung und Modularisierung auf Basis von Rechnertechnik  Tobias Jördens1, Jens Gallenbacher2  Abstract:  Auf der Abstraktionsebene oberhalb von Transistoren sind für den Computerentwurf Logikgatter wichtige Grundbausteine. Die Behandlung  von Logikgattern im Unterricht gehört aber nicht nur zu einer vertieften Beschäftigung mit dem Aufbau von Informatiksystemen.  Anhand des Entwurfs mit Logikgattern kann man Kompetenzentwicklung in Modellbildung fördern und die fundamentale Idee der Modula risierung adressieren. Eine Vorentlastung oder Rückbindung an die notwendige Einführung boolescher Ausdrücke im Rahmen der Einführung der algorithmischen Grundbausteine ist möglich. Für die Beschäftigung von Logikgattern im Unterricht entwickelten wir ein neues Logikgatterstecksystem, welches in diesem Artikel vorstellt wird und dessen erste Einsätze im Unterricht erläutert werden. Schwerpunkt sind hier Unterrichtsstunden mit Schülerinnen und Schülern  der Jahrgangsstufe n 4 und 5.  Keywords:  Modularisierung, Modellbildung, Technische Informatik, Digitaltechnik, Logikgatter, Logikstecksystem, Logische Schaltungen, Rechnertechnik  1 Einleitung  Andreas Schwill hat in seiner Erläuterung der fundamentalen Ideen der Informatik [Sc93 ] als eine von drei Masterideen die s trukturierte Zerlegung begründet und diese aufgefächert in Hie rarchisierung,  Modularisierung  und Orthogonalisierung. Wie kann man diese im Unterricht adressieren ? Unser Ansatz ist es , insbesondere Modularisierung  im Kontext von Rechnertechnik zu vermitteln .  Auch die wichtige Kompetenz der Modellierung kann darüber gefördert werden. Logikgatter auf Papier, in Simulatoren oder in Logikstecksystemen sind Modelle realer elektronischer Bauteile. Die Erstellung von Schaltungen aufgrund einer Problemstellung ist an sich bereits  ein Modellierungsprozess. Geht man auf höhere Abstraktionsebenen des Rechnerentwurfs, so wird dies er Aspekt noch verstärkt . Warum wir Rechnertechnik als Unterrichtsgegenstand zur Vermittlung von Modularisieru ng und Modellierung als sinnvoll  erachten, erläutern wir  in Kapitel 2 dieses Beitrags . Für die Frage nach dem wie des Unterrichts ist für uns die Beachtung der enaktiven Ebene wichtig. Eine kurze Vorstellung und Bewertung bisher vorhandener Möglichkeiten erfolgt daher in Kapitel 3, bevor  dort das aktuell bei uns in der                                                            1 Schuldorf Bergstraße und Technische Universität Darmstadt, Didaktik der Informatik, Hochschulstraße 10, 64289 Darmstadt, tj @di.tu -darmstadt.de  2 Technische Universität Darmstadt, Didaktik der Informatik, Hochschulstraße 10, 64289 Darmstadt, jg@di.tu -darmstadt.de  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 267ii“proceedings” — 2017/9/17 — 20:19 — page 268 — #268iiiiiiEntwicklung befindliche System Quadrologik vorges tellt und erläutert wird. Die bisherigen Unterrichtsversuche mit diesem System werden wir im Kapitel 4 vorstell en, bevor in Kapitel 5 der Ausblick gegeben wird.  2 Motivation und Legitimation für Rechnertechnik  als Unterrichtsthema  Computer sind heute allgegenwärti g. Für Schülerinnen und Schüler ist es  selbstverständlich, dass sie sich nicht nur für die in Software realisierten Konzepte der Informatik interessieren , sondern auch für die Wirk - und Gestaltungsprinzipien der darunterliegenden Informat iksysteme.   Wenngleich die Motivation für die Schülerinnen und Schüler also einfach geklärt ist, so existieren für  die Frage der Behandlung spezifischer Inhalte im Informatikunterricht i n der Literatur verschiedene Legitimationsgrundlagen.  In den Bildungsstandards Informa tik [GI08] wird für den Inhaltsbereich Informatiksysteme als Kompetenz formuliert: „Schülerinnen und Schüler aller Jahrgangsstufen verstehen die Grundlagen des Aufbaus vo n Informatiksystemen und deren Funktionsweise“  [ebd. S.37] . Bei der Präzisierung dieser Kompetenz verbleibt die Behandlung jedoch, fast ausschließlich, auf der Ebene der mit dem bloßen Auge sichtbaren Hardwarekomponenten  [vgl. ebd.] .  In Lehrplänen3 findet  man allerdings auch die Behandlung von Abstraktionsebenen unterhalb der sichtbaren Hardware . Entsprechend gibt es auch Unterrichtseinheiten  zu diesem Thema . So stellt Urs Lautenbach eine Unterrichtseinheit vor, die „Vom Gatter zum Compiler“ als „Durchstic h durch viele Abstraktionsebenen“ dien en soll  [La15 ]. Jens Gallenbacher stellt ganz ähnlich einen Unterrichtsgang durch die verschiedenen Abstraktionsebenen vor [ vgl. Ga16]  und in seinem Buch Abenteuer Informatik [Ga17]  beschäftigt er sich mit der Funktion sweise von Computern auf der Ebene von Transistoren und Gattern.  Auch di e Plattform www.inf -schule.de  beschäftigt sich mit Digitaltechnik  [vgl. Pä16] . Passend zu diesen Unterrichtseinheiten findet man im Internet eine Reihe von Simulatoren für Logikgatter  (vgl. etwa [DB05], [Te09] , [Bu11]).  Digitaltechnik wird also durchaus in bestehendem Informatikunterricht thematisiert.  In Kapitel 1 wurde schon Andreas Schwills Ansatz  erwähnt,  Bruners Idee der fundamentalen Ideen auf die Informatik zu übertragen [vgl. K apitel 1] . Bei der Konkretisierung dieser Ideen  führt  er bzgl. der Hierarchisierung „Ebenenmodelle der Rechnerarchitektur“ [Sc93 , S.20] und „boolesche Funktionen “ bei der Orthogonalität [ebd. , S.21] auf. Auch die Modularisierung sehen wir bei der Thematik  der Rechnertechnik/Rechnerarchitektur gut thematisierbar.  Daher dient  die Behandlung dieser Thematik als übersichtliches, eingängiges Beispiel dieser fundamentalen Ideen.                                                             3 Vgl. etwa: Hessen [He16 S.40 ff.]  und [He05 S. 24f.] , Rheinland -Pfalz [Rh17a S.16]   und [Rh17b  S.24], ansatzweise  Thüringen [Th12 S. 18f.]  und Berlin [Se06  S.20] 268 Tobias Jördens, Jens Gallenbacherii“proceedings” — 2017/9/17 — 20:19 — page 269 — #269iiiiii„Der Prozess der Modellierung ist nicht nur Lerninhalt, sondern auch durchgängige Methode des Informatikunterrichts.“ , lautet es in den Bildungsstandards Informatik [GI08 , S.45]. Auch wenn Modellierung eigentlich durchgängige Methode des Informatikunterrichts sein soll, so ist sie das in der Praxis nicht immer und bei jeder Thematik  gege ben, evtl. auch aufgrund der weiteren Anforderungen und Randbedingungen, die in den Bildungsstandards aufgestellt werden: so sei die Implementierung beim informatischen Modellieren „unverzichtbar , um das Ergebnis der Modellbildung erlebbar zu machen.“ [ebd.  S.46]. Für die Jahrgangsstufe 5 -7 wird aber erklärt: „In diesen Jahrgangsstufen kann der Prozess der Modellierung nicht vollständig durchlaufen werden, da die Fähigkeit zur Abstraktion bei Schülerinnen und Schülern noch nicht hinreichend ausgeprägt ist. I nsbesondere wird es kaum möglich sein, in dieser Alter sstufe Modelle selbst zu implementieren.“  [ebd.].  Modellierung im Bereich Rechnertechnik , insb esondere  auf der Ebene der Logikgatter kann  nach Meinung der Autoren des vorliegenden Beitrags diese Problem atik umgehen: Digitale Simulatoren oder Stecksysteme für Logikgatter bieten , anders als bei vielen anderen Modellen, die Möglichkeit einer „Quasi -Implementierung“ dieser Modelle, als dass die Funktionsweise des Modells ausprobiert werden kann.  Für die Them atisierung von Hierarchisierung ist der Gang durch mehrere Abstraktionsebenen der Rechnerarchitektur notwendig, bei der Modularisierung hilfreich.  Betrachtet man nur die Ebene der Logikgatter, so kann ein weiterer Kompetenzbereich gefördert werden. Die mathematische Entsprechung für die Logikgatter ist die boolesche Algebra.  Boolesche Operatoren  sind notwendig  zur Ko nstruktion komplexer Bedingungen in algorithmischen Grundbausteinen.  Im Inhaltsbereich Algorithmen der Bildungsstandards wird die Arbeit mit d en algorithmischen Grundbausteinen als zentraler Aspekt identifiziert [vgl. GI08 , S. 30]. Entscheidungen und Schleifen, außer Zählschleifen, benötigen Bedingungen, welche boolesche Ausdrücke darstellen. Zur Behandlung komplexer Bedingungen werden keine Aus sagen gemacht.  In vielen Unterrichtszenarien des Anfangsunterrichts mag es auch nicht notwendig sein , den Aufbau dieser Bedingungen intensiv zu thematisieren, weil etwa durch die Blöcke einer visuellen Programmiersprache Vergleiche implizit benutzt werden , oder Rückgabe werte  von Methoden direkt einen booleschen Wert darstellen . Auch können  durch Schachtelung oder Reihung von if -Strukturen AND und OR -Terme implizit umgesetzt werden.  Andererseits kennen selbst kindgerechte Programmiersprachen wie Scratch oder die Lego Mindstorms -Software logische Operatoren.  Komplexe logische Bedingungen sind somit auch rein im Kontext der Arbeit mit einer Programmiersprache erlernbar . Auch mittels eines Spieles wie Erkennungsdienst  können die logischen Funktionen erarbeitet werden [vgl. Ga17].  Über die Arbeit mit Logikgattern kann darüber hinaus eine Vorentlastung für die Einführung von Bedingungen bei a lgorithmischen Grundbausteinen oder eine Rückbindung /Wiederholung erfolgen.  Quadrologik - Modellbildung und Modularisierung auf Basis von Rechnertechnik 269ii“proceedings” — 2017/9/17 — 20:19 — page 270 — #270iiiiii3 Quadrologik  Behandelt man Rechnertechnik  im Unte rricht, sowohl die Ebene einfacher Schaltnetze aus Lo gikgattern  als auch Schaltwerke oder komplexere Strukturen wie ALU, Steuerwerk und Rechenwerk, stellt sich die Frage des wie. Wie in Kapitel 2 aufgezeigt, existi eren eine Reihe von Simulatoren für Logik gatter.  Werner Hartmann hat zur INFOS2005 erläutert, dass Informatik geprägt sei durch Abstraktion und „[v]ielleicht müssten auch im Informatikunterricht vermehrt die drei klassischen Repräsentationsebenen eingesetzt werden. […] Abstraktes im wahrsten Sinne des Wortes begreifbar machen […]“ [Ha05] . Auch die Autoren des vorliegenden Textes sind der Meinung, dass der Unterrichtsgegenstand, wenn möglich, im wörtlichen Sinne begriffen werden sollte.  Im Bereich der Rechnertechnik, insb. der Logikgatter, ist es m öglich nicht nur die ikonische Repräsentationsebene mittels Simulatoren anzusprechen, sondern eben auch die enaktive Repräsentationsebene durch haptische Systeme. Hierfür existieren verschiedene käuflich zu erwerbende Systeme.  3.1 Vorführsysteme aus der Physik  und Steuerungstechnik  Für den Physikunterricht existieren umfangreiche Stecksysteme für Analog - und Digitaltechnik, etwa LOGITRON [ GR17 ], welches aufgrund von Größe und Kosten jedoch eher zur Vorführung durch die Lehrkraft geeignet scheint.  3.2 littleBits  littleBits [sic] ist das Pro dukt eines New -Yorker Start -Ups. Dabei handelt es sich um modulare Elektronikbauteile, als Bits bezeichnet, welche durch magnetische Konnektoren  (bitSnaps) zusammengesteckt werden  (vgl. Li17] . Zu diesem System gehören auch Logikga tter, die bei littleBits in der Kategorie WireBits  zusammen mit anderen Verbin dungselementen  geführt werden.  Gegenüber Schaltungssymbolen haben diese Bits jedoch ihre Eingänge nicht an der linken Seite, sondern oben und unten anliegend.   3.3 Quadrologik  Die au f dem Markt vorhandenen Systeme konnten die Autoren des vorliegenden Artikels nicht überzeugen. Daher entwickelt die Arbeitsgruppe ein eigenes  Logikstecksystem : Quadrologik .  Für dieses System gilt:  270 Tobias Jördens, Jens Gallenbacherii“proceedings” — 2017/9/17 — 20:19 — page 271 — #271iiiiiix Logikgatter werden , wie allgemein üblich, mit (zwei)  Eing ängen auf der linken Seite und einem Ausgang auf der rechten Seite eines Bausteines realisiert.4  x Verbindungen zwischen Logikgattern  werden nicht mit Kabeln gelegt, sondern mit speziellen Verbindungselementen, welche Verbindungen von links nach rechts und oben nach unten implizierten  (vgl. u nten). Die „Verkabelung“ kann dadurch nicht „kreuz und quer“ erfolgen, sondern muss geplant werden. Darüber hinaus wäre ein derart gelegtes Verbindungsnetz immer auf einer zweilagigen Platine abbildbar.  x Zur Verbindung de r Bausteine dienen die Steckverbindungen (bitSnaps) von littleBits . Die Stromversorgu ng erfolgt über USB (5V). Beides sind Maßnahmen, welche die  Kompatibilität zum littleBits -System ermöglichen.  x Die Logikgatter mit zwei Eingängen einerseits und die Verbindu ngselemente, Taster und das Not -Gatter andererseits werden jeweils durch eine generische Platine realisiert. Erst durch Bestückung bzw. Lötpunkte werden die konkreten Steckelemente festgelegt.  In der bisherigen Entwicklungsstufe sind Schaltnetze möglich.   Abb. 1: Halbaddierer mit Quadrologik  4 Erster Einsatz im Unterricht  Der erste Satz Prototypen wurde bisher in unterschiedlichen Unterrichtssituationen getestet.                                                              4 Das Not -Gatter besitzt selbstverständlich nur einen Eingang.  Quadrologik - Modellbildung und Modularisierung auf Basis von Rechnertechnik 271ii“proceedings” — 2017/9/17 — 20:19 — page 272 — #272iiiiiiMit mehreren Lerngruppen aus einem fünften Schuljahr (Gymnasium) sowie einer Lerngruppe eines vierten Schuljahres wurde jeweils eine Doppelstunde mit Quadrologik gearbeitet.  Aufgrund der bisher begrenzten Anzahl an Quadrologik -Bausteinen  wurden jeweil s nur 6 S chülerinnen und Schüler  aus verschiedenen  Klassen „ausgeliehen “. In der Regel wurden dafür von Mathematikkollegen Schülerinnen und Schüler ausgewählt , für die aufgrund ihrer Leistungsstärke die verpasste Mathematik -Einheit  entbehrlich war. Für sie stellten diese Stunden ihre ersten Informatikstunden überhaupt dar.  Ziel wa r somit auch , auszuprobieren, was in diesem Anfangsunterricht möglich ist  –auch vor dem Hintergrund, dass in dieser Altersstufe noch kein Physikunterricht zu Elektrik stattgefunden hat.  Als Rahmen für die Stunde wurde ein Anchored Instruction -Szenario gewä hlt [vgl.  GH13 ]: in der Rolle eines  Indiana Jones auf einem fremden Planeten erkundeten die Schülerinnen und Schüler eine alte Ruine, bei der die Funktionsweise von „komischen“ Schalttafeln verstanden werden musste , um die Lampen am Ende der Schaltungen zu m Leuchten zu bringen, um dadurch sinnbildlich die Türen einer Ruine zu öffnen.   Abb. 2: Aufgabe mit „heruntergefallenen“ Leitungsmodulen   Im Laufe dieser interaktiven Geschichte haben sie sich die Funktionsweise des Stecksystems mit seinen Komponenten und insbesondere de r Logikbausteine erschlossen. Bei der ersten Aufgabe gaben wir den Schülerinnen und Schülern  eine fertige Schaltung vor. Sie mussten dann die beiden Lampen an den Ausgängen zum Leuchten bekommen. Bei der zweiten mussten sie „heruntergefal lene“ Leitung smodule korrekt  in eine teilweise vorgegebene Schaltung einfügen  (s. auch Abb. 2) . Es folgten  Übungen  zur Funktionsweise der Logikbausteine wie e twa: „Der Taster lässt sich nicht 272 Tobias Jördens, Jens Gallenbacherii“proceedings” — 2017/9/17 — 20:19 — page 273 — #273iiiiiidrücken“, was die Verwendung eines NOT -Gatters erzwang, um die L ampe am Ausgang leuchten zu lassen  (s. auch Abb. 3) . Auf v ier Aspekte für die oben benannte Kompetenzentwicklung (vgl. Kapitel 2) wurde geachtet und in den verschiedenen Lerngruppen variiert, auch da in einer Doppelstunde  nicht alles behandelbar war.  Mit a llen Gruppen gelang die Konstruktion von Wahrheitsta feln (als „An-Aus-Tabelle “). Den leistungsstärksten Gruppen gelang es , die vollständigen Tafeln selbständig aufzu stellen . Andere vergaßen zunächst die Variante  (Eingang1 aus, Eingang2 aus) mit zu benennen . Spätestens nach der gemeinsamen , exemplarischen  Konstruktion einer Tabelle konnten die anderen Tabellen selbstständig hergeleitet werden. Zweimal gab es beim NOT das Problem,  dass zunächst auch zwei Eingänge angesetzt wurden.  Die Reihenfolge der Zeilen e ntsprach, erwartungsgemäß, noch nicht der üblichen Konvention.    Abb. 3: Spielkarten vom Erkennungsdienst[Ga17] und Aufgabe zum Not  Die Analyse von Schaltungen ist eine Vorstufe zum Erstellen eigener Schaltungsmodelle (vgl. [GI08 , S.46]). Durch Nachbau d er Schaltungen und Ausprobieren aller Kombinationen konnten die Schülerinnen und Schüler selbstständig vollständige Wahrheitstabellen für drei Eingänge aufstellen. Der theoretische Nachvollzug anhand des Schaltungsplans wurde mit einer Gruppe versucht. Hie r zeigte sich, dass das Verständnis des Schaltungsaufbaus noch nicht vollständig durchdrungen war. So konnten die Schülerinnen und Schüler zwar benennen, wie in einer mehrstufigen Logik die Signalleitungen verlaufen, sie erkannten aber nicht selbstständig,  dass die Eingänge eines späteren Logikgatters nicht direkt von den Eingängen /Tastern  abhängen, sondern dass sie an den Ausgängen der ersten Logikelemente Zwischenergebnisse ermitteln müssen.  Um den Zusammenhang mit logischen Aussagen zu bekommen, wurde mi t Spielkarten Quadrologik - Modellbildung und Modularisierung auf Basis von Rechnertechnik 273ii“proceedings” — 2017/9/17 — 20:19 — page 274 — #274iiiiiides Spiels Erkennungsdienst [vgl. Ga17] gearbeitet  (s. auch Abb. 3) . Zunächst wurden logische Aussagen über die Merkmale der Personen vorgegeben (etwa: rothaarig UND grüne Augen) , die S chülerinnen und Schüler  mussten  dann  die entsprechende(n)  Karte(n) benennen. Ein Teil hatte anfangs Probleme , mehr als eine Karte zu benennen, wenn eine Teilmenge von mehr als einer Karte gefordert war. Dieses Problem war allerdings schnell behoben. Der Umgang mit dem UND -Operator war erwartungsgemäß unproblemat isch. Aber auch Aussagen mit der NICHT -Operator und das inklusive ODER funktionierten gut. Im Rahmen der Wahrheitstabellen wurde thematisiert, dass ein Unterschied zwischen mathematischer Logik und Alltagssprache besteht . Im zweiten Schritt durften die S chülerinnen und Schüler  logische Aussagen für Teilmengen der Karten formulieren (z.B.: „Erstelle eine Aussage, welche nur auf K evin und Felix zutrifft “). Dies k lappte erstaunlich gut. Einzelne Schülerinnen und Schüler kamen auf Ausdrücke , die mathematisch nu r mit Klammerung formulierbar wären . Dies wurde im Einzelgespräch erfolgreich thematisiert . Die Schülerinnen und Schüler waren danach in der Lage, gegebenen logischen Aussagen die entsprechenden korrekten Teilmengen an Personenkarten zuzuordnen.  Das eigent lich mit Quadrologik  verfolgte Ziel , die Konstruktion einer eigenen Schaltung, wurde zuletzt erprobt . Bei einer Lerngruppe wurde die Konstruktion einer Schaltung gefordert, für welche nur eine Wertetabelle vorgegeben war. Einer Gruppe gelang es NAND und NO R Schaltungen sowie eine weitere Funktion ( ein Und-Gatter  mit einem negierten Eingang) zu konstruieren, scheiterten dann jedoch am XOR , allerdings auch aus Zeitgründen . Bei drei weiteren Lerngruppen wurde im Rahmen de s Rollenspiels die Aufgabe gestellt, da ss ein bestimmter Roboter in Menschengestalt durch eine Einlasskontrolle passieren darf  und die anderen Roboter nicht. Dazu wurde eine aus acht Erkennungsdienstkarten gezogen. Sämtlichen Gruppen gela ng es , diese Aufgabe zu meistern. In der Menge der acht Karten waren die Merkmale so verteilt, dass für die Selektion einer Karte alle drei Merkmale entweder regulär oder negiert abgefragt und mit UND verknüpft werden mussten. Aufgrund dessen  der lediglich  zweiwertige n Logikbausteine  bei Quadrologik  mussten also  alle eine mehrstufige Logik  mit geschachtelte r Aussage realisieren.  Auch auf der subjektiven Ebene  waren die Unterrichtsversuche erfolgreich. So erklärten alle SuS , dass der Unterricht ihnen Spaß gemacht hätte , fanden d as Quadrologik -System sehr toll und  wollten mehr Unterricht dazu.  Im Wahlunterricht Informatik im Jahrgang 9 wurde Digitaltechnik „klassisch“ unterrichtet. Der Teil mit Logikgattern wurde diesmal jedoch mit Quadrologik ausgeführt. Die Schüler5 besaßen vertieftes Vorwissen, und alle nahmen a uch schon an der Juniorliga des BWInf teil. In 2,5 Doppelstunden wurde die Thematik von der Einführung von Logikgattern, über die Analyse komplexer Schaltung bis zum Entwurf eigener Schaltungen behandelt. Für die  Modellierung verschiedener Schaltungen  beka men die Schüler eine Sammlung diverser Textaufgaben zu Logikgattern, von                                                            5 Der Kurs besteht leider nur aus männlichen Individuen.  274 Tobias Jördens, Jens Gallenbacherii“proceedings” — 2017/9/17 — 20:19 — page 275 — #275iiiiiiTresorsteuerungen über Gurtkontrollen im Auto bis hin zu Multiplexern und Halb -/Volladdierer n. Die Bearbeitung dieser Problembeschreibungen gelang gut bis sehr gut, entsprechend den a llgemeinen Leistungsunterschieden im Kurs. Beim Entwurf des Volladdierers war die Analyse der Problemstellung schnell erfolgt , eigene Wahrheitstafeln aufgestellt  und der Baustein mit Quadrologik  gesteckt  (s. auch Abb. 1)   5 Ausblick  Rechnertechnik  sollte  im Informatikunterricht behande lt werden, um  dabei Modellbildungskompetenz und Verständnis von Modularisierung zu fördern. Da s gelingt mit dem  Logikstecksystem Quadrologik  auf motivierende Art und Weise. Erste  Tests mit Schülergruppen sind sehr vielverspreche nd. Es zeigte sich, dass der erhoffte Kompetenzzuwachs erreicht wird.  Wir möchten  die Weiterentwicklung von Quadrologik betreiben. Dazu gehört die Realisierung von Schaltnetzen und die Unterstützung der  Modularisierung durch ein eigenes Bauteil, sodass ko nstruierte Schaltungen in diese Bauteile einprogrammiert werden können.  Wir erhoffen uns Impulse für die konkrete Ausgestaltung der Weiterentwicklung aus der Diskussion auf der INFOS  und danach.  Sofern diese Entwicklungsprozesse abgeschlossen sind, können eine größere Anzahl an Bauteilen produziert werden, sodass Test s in Klassenstärke und über unterschiedliche Kompetenzstufen  sowie eine wissenschaftliche Evaluation möglich sind.   Literaturverzeichnis   [Bu11]  Burch, C .: Logisim v.2.7.1., http://www.cburch.c om/logisim/ , Stand 05.02.2017.  [DB05]  Damm, M; Brauner, O.: LogiFlash v3.03, 2005      http://tiweb.hsu -hh.de/  LogiFlash/index.html , Stand 05.02.2017.   [Ga16]  Gallenbacher, J.: Rechnerorganisation – Vom Relais zum Prozessor. Vortrag beim Schweizer Tag für d en Informatikunterricht.  Zugriff über: http://www.abz.inf.ethz.ch/schweizer -tag-fur-den-informatikunterricht/stiu -2016 -7-schweizer -tag-fuer-den-informatikunterricht/stiu -2016 -workshops/ , Stand  09.02.2017  [Ga17]  Gallenbacher, J: Abenteuer Informatik: IT zum  Anfassen für alle von 9 bis 99 – vom Navi bis Social Media, 4. Auflage, 2017.  [GH13]  Gallenbacher, J.,  Heun, D.: Ein moderner Ansatz für Anchored Instrucion im Informatikunterricht. In (Breier, N., Stechert, P., Wilke, T. Hrsg.): Proc. Informatik erweiter t Horizonte, INFOS2013, 15. GI -Fachtagung Informatik und Schule, 2013.  [GI08] Gesellschaft für Informatik e.V.: Grundsätze und Standards für die Informatik in der Schule: Bildungsstandards Informatik für die Sekundarstufe I, 2008.  [GR17]  GRS Lehrgeräte KG:  Logitron – Digitalbausteine mit starken Eigenschaften, Quadrologik - Modellbildung und Modularisierung auf Basis von Rechnertechnik 275ii“proceedings” — 2017/9/17 — 20:19 — page 276 — #276iiiiiihttp://www.grs -physik -shop.de/index.php?option=com_content&task=view&id=37  &Itemid=60 , Stand 05.02.2017.  [Ha05]  Hartmann, W.: Informatik – EIN/AUS – Bildung. In (Friedrich, Sreffen Hrsg.): Proc. Unter richtskonzepte für informatische Bildung,  INFOS2005,  11. GI -Fachtagung Informatik und Schule, 2005.  [He05]  Hessisches Kultusministerium: Berufliche Schulen des Landes Hessen. Lehrplan Berufliches Gymnasium. Fachrichtung Technik. Schwerpunkt Daten -verarbeit ungstechnik, 2005.   https://kultusministerium.hessen.de/sites/default/files/  media/hkm/lp_bg_fr_technik_sp_datenverarbeitungstechnik_05.pdf ,  Stand 09.02.2017  [He16]  Hessische s Kultusministerium: Kerncurricula Gymnasiale Oberstufe – Informatik, 2016. https ://kultusministerium.hessen.de/schule/kerncurricula/gymnasiale -oberstufe/  informatik , Stand: 05.02.2017 . [La15]  Lautebach, U.: Vom Gatter zum Compiler: Im Unterricht durch sieben Abstraktionsebenen.  In (Gallenbacher, J. Hrsg.): Proc. Informatik allgemeinbi ldend begreifen, INFOS2015, 16. GI -Fachtagung Informatik und Schule, S.239 -246. [Li17]  LittleBits Electronics Inc.: What is littleBits? http://littlebits.cc/how -it-works, Stand 05.02.2017.  [Pä16]  Pädagogisches Landesinstitut Rheinland -Pfalz: Digitaltechnik , 2016, http://www.inf -schule.de/rechner/digitaltechnik , Stand: 05.02.2017.  [Rh17a]  Rheinlan d-Pfalz Mini sterium für Bildung, W issenschaft, Jugend und Kultur. Lehr plan Informatik Wahlfach und Wa hlpflichtfach an Gymnasien und Integrierten Gesamtschulen (Seku ndarstufe I), ohne Jahresangabe. Zugriff über: http://lehrplaene.bildung -rp.de/gehezu/startseite.html?keyword=informatik , Stand 09.02.2017.  [Rh17b]  Rheinland -Pfalz Ministerium für Bildung, Wissenschaft, Jugend und Kultur. Lehrplan Informatik  Grund - und Lei stungsfach, ohne Jahresangabe. Zugriff über: http://lehrplaene.bildung -rp.de/gehezu/startseite.html?keyword=informatik ,  Stand 09.02.2017.  [Sc93]  Schwill, A..: Fundamentale Ideen der Informatik, 1993. http://ddi.cs.uni -potsdam.de/Forschung/Schriften/ZDM.pd f, Stand 09.02.2017  [Se06]  Senatsverwaltung für Bildung, Jugend und Sport Berlin: Rahmenlehrplan für die gymnasiale Oberstufe – Informatik, 2006 .    https://www.berlin.de/imperia/md/content/sen -bildung/unterricht/lehrplaene/sek2_  informatik.pdf?start&ts=14 50262874&file=sek2_informatik.pdf  Stand: 10.02.2017.  [Te09]  Tetzl, A.: LogicSim, 2009, http://www.tetzl.de/java_logic_simulator.html , Stand 05.02.2017.  [Th12]  Thüringer Ministerium für Bildung, Wissenschaft und Kultur: Lehrplan für den Erwerb der allgemein en Hochschulreife – Informatik, 2012. Zugriff über: https://www.schulportal -thueringen.de/media/detail?tspi=3657  Stand 09.02.2017   276 Tobias Jördens, Jens Gallenbacherii“proceedings” — 2017/9/17 — 20:19 — page 277 — #277iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft fr Informatik, Bonn 2017 1Integration des Erwerbs von Basiskonzepten derInformatik in den mathematisch-naturwissenschaftlichenUnterricht der Sekundarstufe IMarlene Lindner1, Sandra Schulz1und Niels Pinkwart1Abstract: Als Beitrag zu einer ﬂchendeckenden informatischen Bildung kann sich eine Verknpf-ung der Informatik mit anderen Schulfchern gewinnbringend auswirken. Mit UnterrichtseinheiteninPhysical Computing ist es mglich den Erwerb von Basiskonzepten und -kompetenzen der In-formatik in den mathematisch-naturwissenschaftlichen Unterricht zu integrieren. In diesem Beitragwerden unter Ber ¨ucksichtigung der Bildungsstandards der Kultusministerkonferenz und der Gesell-schaft f ¨ur Informatik Verkn ¨upfungsm ¨oglichkeiten f ¨ur die Sekundarstufe I aufgezeigt, die sich ausden Bildungsstandards ergeben. Anschlieend werden zwei entwickelte Unterrichtseinheiten mit LE-GO Mindstorms detailliert vorgestellt.Keywords: MINT-Unterricht, Bildungsstandards, Physical Computing , LEGO Mindstorms.1 Einleitung1.1 F ¨acher ¨ubergreifender MINT-UnterrichtIm Allgemeinen kann ein fcherbergreifender Unterricht genutzt werden, um verschiedeneZugnge zu einer Thematik zu ermglichen. Damit knnen bisher bestehendes Wissen gefes-tigt sowie zusammengehrige Inhalte miteinander verknpft werden.Kompetenzen in Mathematik, Informatik, Naturwissenschaft und Technik (MINT) sind inden letzten Jahren zunehmend als Schl ¨usselqualiﬁkationen f ¨ur den Einstieg in vielf ¨altigeBerufsm ¨oglichkeiten identiﬁziert worden und eine grundlegende Scientiﬁc Literacy istmittlerweile ein erkl ¨artes Bildungsziel f ¨ur Sch ¨ulerInnen aller Schulformen [OE99, NG13].Obwohl MINT-F ¨acher Gemeinsamkeiten in Bezug auf Probleml ¨osung, Erkenntnisgewin-nung und lebensweltliche Anwendung haben, werden sie in den meisten Curricula-Doku-menten der Welt getrennt aufgef ¨uhrt [BB14]. Betrachtet man jedoch die Bildungsstandardsder Kultusministerkonferenz (KMK) f ¨ur die Mathematik und die Naturwissenschaftenbzw. die Standards der Gesellschaft f ¨ur Informatik (GI) und des Vereins Deutscher Inge-nieure (VDI) f ¨ur die Informatik und die Technik, ergeben sich viele Verkn ¨upfungsm ¨oglich-keiten sowohl in Bezug auf den Erwerb von Basiskonzepten als auch Basiskompetenzen.Im Folgenden wird nun speziell auf inhaltliche und konzeptuelle ¨Uberschneidung der In-formatik mit den mathematisch-naturwissenschaftlichen F ¨achern eingegangen und Unter-richtseinheiten in Physical Computing pr¨asentiert, die sowohl einen Lernzuwachs bzgl.1Humboldt-Universit ¨at zu Berlin, Institut f ¨ur Informatik, Unter den Linden 6, 10099 Berlin,marlene.lindner@hu-berlin.de; saschulz@informatik.hu-berlin.de; niels.pinkwart@hu-berlin.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 277ii“proceedings” — 2017/9/17 — 20:19 — page 278 — #278iiiiiiInformatik als auch einem der weiteren F ¨acher erm ¨oglichen sollen. Physical Computingbesch ¨aftigt sich mit interaktiven, physischen Objekten, in denen mithilfe von Sensoren undAktuatoren ein Bezug zwischen virtueller und realer Welt hergestellt wird [OI04]. Zustz-lich bietet es die M ¨oglichkeit, Informatik in den MNT-Unterricht zu integrieren [SP15].F¨ur Mathematik, Physik und Technik gibt es viele Unterrichtsbeispiele, die eine Ver-kn¨upfung zur Informatik herstellen und ¨uber die bloße Anwendung von Software hinaus-gehen. Es wurden jedoch keine Unterrichtsbeispiele gefunden, die explizit die deutschenBildungsstandards ber ¨ucksichtigen. LEGO Education bietet ausgearbeitete Unterrichtsein-heiten f ¨ur LEGO Mindstorms EV3-Roboter zum Verkauf an, die Inhalte aus Mathematik,Physik und Technik aufgreifen [Th16]. Vernier Software & Technology [Ve16] bietet eineVielzahl an Sensoren an, um den Roboter fr den mathematisch-naturwissenschaftlichenUnterricht durch Inhalte wie z. B. Messungen des pH-Werts oder eines magnetischenFelds zu erweitern. Zusammenfassend l ¨asst sich feststellen, dass frei verf ¨ugbare, deutsch-sprachige Unterrichtseinheiten, die als Ziel haben Informatik fcherbergreifend mit denMNT-Disziplinen zu unterrichten und die Bildungsstandards bercksichtigen, bisher kaumvorliegen. Daher werden im Folgenden m ¨ogliche Verknpfungspunkte diskutiert und ent-sprechende Unterrichtseinheiten exemplarisch vorgestellt.1.2 Bildungsstandards und Rahmenlehrpl ¨ane der MINT-F ¨acherSeit 2003 liegen von der KMK”Bildungsstandards im Fach Mathematik f ¨ur den MittlerenSchulabschluss“ vor [KMc] und seit 2004 gibt es auch Bildungsstandards f ¨ur Biologie,Chemie und Physik [KMa, KMb, KMd]. Sie ﬁnden starke Ber ¨ucksichtigung in den je-weiligen Rahmenlehrpl ¨anen der Bundesl ¨ander. F ¨ur den Informatikunterricht an deutschenSchulen gibt es keine von der KMK verfassten Bildungsstandards. Bisher wurde ein ersterAnsatz im Strategiepapier”Bildung in der digitalen Welt“ formuliert, das jedoch nicht kon-kret auf den Informatikunterricht eingeht [KM16]. Die GI hat 2008 unter”Grunds ¨atze undStandards f ¨ur die Informatik in der Schule“ [Ge08] sogenannte Mindeststandards f ¨ur dieSekundarstufe I ver ¨offentlicht, die als methodische und inhaltliche Empfehlung f ¨ur den In-formatikunterricht z. B. in dem aktuellen Rahmenlehrplan von Berlin ber ¨ucksichtigt sind[Se06]. Da die KMK auch keine Bildungsstandards f ¨ur das Fach Technik ver ¨offentlichthat, hat der Verein Deutscher Ingenieure (VDI) 2007”Bildungsstandards Technik f ¨ur denMittleren Schulabschluss“ konzipiert [VD07]. Bisher konnte sich in den Bildungsstan-dards und Rahmenlehrpl ¨anen der MINT-F ¨acher noch keine einheitliche Terminologie f ¨urgrundlegende Konzepte und Kompetenzen durchsetzen. Im Folgenden wird der Begriff”Basiskonzepte“ f ¨ur Inhaltsbereiche, inhaltsbezogene Kompetenzen, KompetenzbereichFachwissen und Leitideen verwendet, wohingegen mit”Basiskompetenzen“ Prozessberei-che, allgemeine Kompetenzen und die Kompetenzbereiche Erkenntnisgewinnung, Kom-munikation und Bewertung beschrieben werden. Im Rahmen dieses Beitrags kann jedochnicht n ¨aher auf die Verkn ¨upfungspunkte in den Bildungsstandards bzgl. der Basiskompe-tenzen eingegangen werden.278 Marlene Lindner, Sandra Schulz, Niels Pinkwartii“proceedings” — 2017/9/17 — 20:19 — page 279 — #279iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft fr Informatik, Bonn 2017 32M ¨ogliche Verkn ¨upfungspunkte in den Bildungsstandards bzgl. derBasiskonzepteAls Basiskonzepte der Informatik hat die GI folgende f ¨unf Bereiche identiﬁziert:”Infor-mation und Daten“ (C1),”Algorithmen“ (C2),”Sprachen und Automaten“ (C3),”Informa-tiksysteme“ (C4) und”Informatik, Mensch und Gesellschaft“ (C5). Im Folgenden werdenexemplarisch berschneidungspunkte zu MN-Fchern aufgezeigt, die in Tab. 1 zusammen-gefasst sind. Fr den Mathematik -Unterricht lassen sich die Konstruktion und Berech-nung von geometrischen Strukturen und das kartesische Koordinatensystem in”Raum undForm“ (L3) mit C1 vernetzen. Dies sind Grundlagen f ¨ur das Erfassen von Daten und Infor-mationen in Graﬁken und Graphen. Dafr kann ein Graﬁkprogramm Anwendung ﬁnden. InderBiologie ist ein wesentlicher Aspekt des Basiskonzepts”System“ (F1) die Steuerung,Regelung und Informationsverarbeitung in lebenden Systemen. Es lsst sich mit (C3) z. B.durch das EV A-Prinzip und Zustnde der Automatentheorie verknpfen.”Entwicklung“ (F3)beinhaltet die Auseinandersetzung mit artspeziﬁscher Individualentwicklung und evoluti-on¨arer Entwicklung, wobei Mutation, Selektion und Variabilit ¨at behandelt werden. DasBeschreiben der Eigenschaften bedeutsamer Stoffe in der Chemie ist ein Kernthema von”Stoff-Teilchen-Beziehungen“ (F1), wohingegen in”Struktur-Eigenschafts-Beziehungen“(F2) das Ableiten von Stoffeigenschaften aus dessen Struktur betrachtet wird. In”Che-mische Reaktion“ (F3) verlangt das Erstellen von ausgeglichenen Reaktionsgleichungen(F3.4) quantitatives Verst ¨andnis, was auch f ¨ur die daraus abgeleiteten Handlungsvorschrif-ten f ¨ur Experimente relevant ist.”Energetische Betrachtung bei Stoffumwandlung“ (F4)betrachtet Energieformen und Energieaustausch mit der Umgebung. Energieumwandlungund die Abh ¨angigkeit von Reaktionsbedingungen und Katalysatoren (F4.3) ist auch re-levant f ¨ur einige Komponenten in Informatiksystemen (C4), wie z. B. Sensoren oder Ele-mente zur K ¨uhlung von Rechneranlagen. Das Materiekonzept in Physik l¨asst sich lediglichmit C4 in Bezug auf Hardwarekomponenten von Informatiksystemen und deren Kenn-gr¨oßen verbinden. Das Wechselwirkungskonzept l ¨asst sich hingegen mit fast allen Basis-kompetenzen der Informatik verkn ¨upfen. Die newtonsche Mechanik, Optik, sowie elek-trische und magnetische Felder sind f ¨ur die Eingabe-, Verarbeitungs- und Ausgabeger ¨atevon Informatiksystemen (C4) von Bedeutung, beeinﬂussen aber auch Wechselwirkungenzwischen Informatik, Mensch und Gesellschaft (C5).3 Exemplarische Unterrichtseinheiten im Physical ComputingAufgrund der herausgearbeiteten berschneidungen erscheint Physical Computing als ge-eigneter Lerngegenstand, um eine Verknpfung sinnvoll umzusetzen. Folgende Beispie-le f¨ur Unterrichtseinheiten im Physical Computing sollen es erm ¨oglichen, den Erwerbvon Basiskonzepten und -kompetenzen der Informatik in den naturwissenschaftlichen Un-terricht zu integrieren. Dabei geht es nicht darum, besonders vielschichtige, komplexeAufgaben zu stellen, sondern vielmehr Beispiele aufzuzeigen, die sowohl in den norma-len Fachunterricht als auch in den Projektunterricht eingebunden werden k ¨onnen und inBezug auf Zeit und Material keine großen Herausforderungen darstellen. Auf Sensoren,die nicht in der Standardverkaufseinheit der LEGO Mindstorms EV3-Robotor enthaltenIntegration des Erwerbs von Basiskonzepten 279ii“proceedings” — 2017/9/17 — 20:19 — page 280 — #280iiiiiiInformatik Mathematik Biologie Chemie PhysikInformation undDaten (C1)Zahl (L1), Messen(L2), Raum undForm (L3),FunktionalerZusammenhang(L4), Daten undZufall (L5)System (F1),Struktur undFunktion (F2),Entwicklung (F3)Energie (F4),Stoff-Teilchen-Beziehungen (F1),Struktur-Eigenschafts-Beziehungen(F2)Wechselwirkung,EnergieAlgorithmen (C2) Zahl (L1), Raumund Form (L3),FunktionalerZusammenhang(L4), Daten undZufall (L5)System (F1),Struktur undFunktion (F2)Stoff-Teilchen-Beziehungen (F1),Struktur-Eigenschafts-Beziehungen (F2),ChemischeReaktion (F3)Wechselwirkung,SystemSprachen undAutomaten (C3)Zahl (L1),FunktionalerZusammenhang(L4)System (F1),Struktur undFunktion (F2)ChemischeReaktion (F3)SystemInformatiksys-teme (C4)FunktionalerZusammenhang(L4)System (F1),Struktur undFunktion (F2),Entwicklung (F3)Energie (F4),Stoff-Teilchen-Beziehungen (F1),Struktur-Eigenschafts-Beziehungen(F2)Materie,Wechselwirkung,System, EnergieInformatik,Mensch undGesellschaft (C5)Raum und Form(L3), FunktionalerZusammenhang(L4), Daten undZufall (L5)System (F1),Struktur undFunktion (F2),Entwicklung (F3)Energie (F4),Stoff-Teilchen-Beziehungen (F1),Struktur-Eigenschafts-Beziehungen (F2),ChemischeReaktion (F3)Wechselwirkung,EnergieTab. 1: Verkn ¨upfung der Basiskonzepte (Inhaltsbereiche) der Bildungsstandards Informatik f ¨ur dieSekundarstufe I [Ge08] mit Basiskonzepten (inhaltsbezogenen Kompetenzen, KompetenzbereichFachwissen (F), Leitideen (L)) der Bildungsstandards im Fach Mathematik, Biologie, Chemie undPhysik f ¨ur den Mittleren Schulabschluss [KMc, KMa, KMb, KMd].280 Marlene Lindner, Sandra Schulz, Niels Pinkwartii“proceedings” — 2017/9/17 — 20:19 — page 281 — #281iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft fr Informatik, Bonn 2017 5sind, wird bewusst verzichtet. Auch wird auf die Umsetzbarkeit jeder Unterrichtsein-heit in einer Doppelstunde (90 min) geachtet, wobei jeweils insgesamt 10 min f ¨ur Un-terrichtsbeginn und -abschluss veranschlagt werden, da die Organisation von Gruppenund Material ber ¨ucksichtigt werden muss. Es wird davon ausgegangen, dass gen ¨ugendRoboter vorhanden sind um jeweils zu zweit mit einem Roboter zu arbeiten. Bei denmeisten Aufgaben bietet es sich an, mit bereits zusammengebauten Robotern zu arbeiten.F¨ur einen selbstst ¨andigen Zusammenbau m ¨ussten zustzlich ca. 30 min eingeplant werden.Weitere Unterrichtsbeispiele der MINT-Fcher sowie Unterrichtsmaterialien werden unterhttps://cses.informatik.hu-berlin.de/de/for schools/ zur Verfgung gestellt.3.1 Unterrichtseinheit in der Biologie: InformationsverarbeitungKlassenstufe: 9 (abh ¨angig von der Schulform)Vorwissen in Informatik: Kenntnisse von algorithmischen GrundstrukturenInformatische Inhalte: Roboter als Informatiksysteme, Implementieren von Algorithmen,Verarbeitung elektrischer Gr ¨oßen ( Physical Computing )Robotortyp: Standardfahrgestell der LEGO Mindstorms EV3-Roboter mit zweiLichtsensorenZus¨atzliches Material: TaschenlampenTab. 2: Aufgabenproﬁl der Unterrichtseinheit”Informationsverarbeitung“F¨ur alle Organismen ist die Verarbeitung von Informationen aus ihrer Umwelt von zentra-ler Bedeutung f ¨ur Nahrungs- und Partnersuche. Sogenannte Reiz-Reaktions-Zusammen-h¨ange sind mitunter sehr komplex, abh ¨angig von vielen Faktoren und somit schwer zuverstehen (vgl. EV A-Prinzip der Informatik). Braitenberg-Vehikel hingegen haben einesehr einfache Struktur (Abb. 1), verdeutlichen aber die Vielfalt, die schon mit einfachenneuronalen Strukturen erzeugt werden kann. Zwei Sensoren werden auf unterschiedlicheWeise (inhibitorisch oder exzitatorisch) mit zwei Motoren gekoppelt und erzeugen somitein”Verhalten“, das unterschiedlichen Emotionen bzw. Verhaltensstrategien zugeordnetwerden kann. Mit LEGO Mindstorms EV3-Robotern k ¨onnen Braitenberg-Vehikel nach-gebaut und beobachtet werden. Der Fokus dieser Unterrichtseinheit bzgl. Biologie liegtsomit auf der Erkl ¨arung der Variabilit ¨at von Lebewesen (Basiskonzept”Entwicklung“(F3)) durch den Einsatz eines Modells (Basiskompetenz E10). Innerhalb der Informa-tik wird insbesondere das Verstehen und Anwenden von Informatiksystemen adressiert.Schleifen und Schalter werden als bekannt voraus gesetzt. Bei Aufgabe 1 ist abh ¨angigvom Umgebungslicht ein geeigneter Schwellwert f ¨ur den Lichtsensor zu ﬁnden. Als Pro-grammierblock f ¨ur den Motor sollte Hebelsteuerung mitAn f¨ur n Sekunden undAm EndeBremsen: Falsch gew¨ahlt werden. Rauschen ist ein wichtiger Aspekt bei der Informati-onserfassung und -verarbeitung, sowohl in der Technik als auch in lebenden Organismen.In diesem Zusammenhang sollte kurz auf das Nervensystem des Menschen eingegangenwerden und erl ¨autert werden, dass Synapsen auch zuf ¨allig feuern, wodurch sich ein Rau-schen bei der Reiz ¨ubertragung ergibt. Des Weiteren kann bei der Verarbeitung elektrischerGren auf Messunsicherheiten eingegangen und Algorithmen zur Fehlerminimierung ent-wickelt werden. Im Rahmen von Aufgabe 2 kann Rauschen mit dem ProgrammierblockIntegration des Erwerbs von Basiskonzepten 281ii“proceedings” — 2017/9/17 — 20:19 — page 282 — #282iiiiiiAbb. 1: Braitenberg-Vehikel als Modellkonstrukte f ¨ur die Informationsverarbeitung in einfachen Or-ganismen: Zwei Sensoren werden auf unterschiedliche Weise (inhibitorisch oder exzitatorisch) mitzwei Motoren gekoppelt und erzeugen somit ein”Verhalten“, das unterschiedlichen Emotionen zu-geordnet werden kann. 2a) Angst b) Aggression; 3a) Liebe b) Entdeckungslust [Br84].Zufall simuliert werden. Bei der Chemotaxis z. B. peritrich begeißelter Bakterien wechselnsich Vorw ¨artsbewegung entlang eines Stoffkonzentrationsgradienten und zuf ¨allige Tau-melbewegungen ab, die eine Richtungs ¨anderung erm ¨oglichen, wenn die Stoffkonzentra-tion sinkt. Die Geschwindigkeit bei der Phototaxis soll bei Aufgabe 3 proportional zu derLichtintensit ¨at steigen – dies ist ein Braitenberg-Vehikel vom Typ I [Br84]. F ¨ur eine ef-Aufgabe Zeit1. Lasst euren Roboter geradeaus auf euch zufahren, wenn ihr ihn mit einer Taschen-lampe anstrahlt. Sobald die Taschenlampe aus ist, soll er anhalten und warten. Ver-wendet zun ¨achst nur einen der Lichtsensoren.10 min2. Lasst euren Roboter sich zuf ¨allig leicht nach rechts und links bewegen, wenn er wieunter 1. auf euch zu f ¨ahrt.10 min3. Lasst euren Roboter nun schneller auf euch zufahren, wenn ihr ihn direkt anstrahltund langsamer werden, wenn die Lichtquelle weiter entfernt ist. Vergleicht das Ver-halten eures Roboters mit der Chemotaxis von Bakterien. Was muss f ¨ur eine effek-tive Phototaxis des Roboters ver ¨andert werden?15 min4. Baut euer Programm nun so um, dass beide Lichtsensoren gleichzeitig messen undjeweils einen der Motoren ansteuern. Testet, ob sich eurer Roboter nun Lichtquellenzuwendet, die nicht direkt vor ihm sind.15 min5. Schreibt nun ein Programm f ¨ur ein weiteres Braitenberg-Vehikel und testet seineReaktion auf eine Lichtquelle. Von welchen Tieren w ¨urdet ihr eine vergleichbareReaktion erwarten?15 min6. Dunkelt den Raum nun ab und schafft eine große freie Fl ¨ache, auf der ihr eureBraitenberg-Vehikel aussetzt. Erzeugt einen Lichtkegel etwa in der Mitte der Fl ¨acheund beobachtet das Verhalten aller Roboter. Ordnet ihr Verhalten jeweils Typen vonBraitenberg-Vehikel zu und diskutiert Verbesserungsm ¨oglichkeiten bei der Umset-zung. ¨Andert ggf. das Programm eures Roboters und setzt ihn erneut auf die Frei-ﬂ¨ache.15 minTab. 3: Unterrichtseinheit”Informationsverarbeitung“: Arbeitsaufgaben und Durchf ¨uhrungsdauerfektive Phototaxis fehlt noch die Implementation einer Bewegungsrichtungs ¨anderung.F¨ur Aufgabe 4 gibt es mehrere L ¨osungsm ¨oglichkeiten. Zwei parallele Schleifen mit je-weils einem einzelnen Motor lassen sich hierbei gut umsetzen. Dies ist nun das”aggres-sive“ Braitenberg-Vehikel (Typ 2b). Die Braitenberg-Vehikel sollten mit Abb. 1 kurz vor-282 Marlene Lindner, Sandra Schulz, Niels Pinkwartii“proceedings” — 2017/9/17 — 20:19 — page 283 — #283iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft fr Informatik, Bonn 2017 7gestellt werden und bei Aufgabe 5 sollte jeder Vehikel-Typ von mindestens einer Gruppebearbeitet werden, wobei der Typ 2a) sehr einfach aus 2b) ableitbar ist. Durch die inhi-bitorische oder exzitatorische Verkn ¨upfung der zwei Sensoren mit den beiden Motorenk¨onnen vier unterschiedliche Verhaltensmuster erzeugt werden: einige Roboter ﬂiehen vordem Licht, andere greifen den Lichtkegel an, einige bleiben darin stehen und wieder ande-re betrachten den Lichtkegel kurz und ziehen dann weiter. Diese Verhaltensmuster werdenmitunter Emotionen zugeordnet. Hier ist jedoch f ¨ur einen sprachbewussten Biologieunter-richt wichtig, den Unterschied zwischen Verhalten und Emotionen zu verdeutlichen undim Ausdruck auf das Vermeiden von Begriffen zur Vermenschlichung der Roboter zu ach-ten. Tiere, die mitunter vergleichbares Verhalten zeigen, sind z. B. Kellerassel (2a), Motte(2b), Eidechse (3a) und Katze (3b). Bei Aufgabe 6 werden sich Zusammenst ¨oße nichtganz vermeiden lassen und die Typen 2a) und 3b) m ¨ussen eingefangen werden, bevor siein dunklen Ecken des Raumes verschwinden bzw. gegen die Wand fahren.3.2 Unterrichtseinheit in der Chemie: PhotometrieKlassenstufe: 9 (abh ¨angig von der Schulform)Vorwissen in Informatik: Kenntnisse von algorithmischen Grundstrukturen, Variablen und ArraysInformatische Inhalte: Roboter als Informatiksysteme, Arrays in der Messwerterfassung,Implementieren von Algorithmen, Physical ComputingRobotortyp: LEGO Mindstorms EV3-Stein mit zwei LichtsensorenZus¨atzliches Material: K ¨uvetten und K ¨uvettenhalterung, Lebensmittelfarbe (z. B. E132), Wasser,Pipetten, Bechergl ¨aserTab. 4: Aufgabenproﬁl der Unterrichtseinheit”Photometrie“Die Absorption von Licht durch farbige L ¨osungen ist ein Alltagsph ¨anomen, das mit Hilfevon photometrischen Untersuchungen quantiﬁziert werden kann. Der Transmissionsgradtergibt sich aus dem Quotienten der Intensit ¨at des Lichtstrahls vor ( I0) und nach ( I1) demDurchtritt durch die L ¨osung. Die Extinktion Eergibt sich aus dem Logarithmus des Kehr-werts von tund ist proportional zu der Konzentration cdes lichtabsorbierenden Stoffesund der Wegl ¨ange ddes Lichtstrahls in der L ¨osung. Der Proportionalit ¨atsfaktor ewird alsstoffspeziﬁscher, molarer Extinktionskoefﬁzient bezeichnet. So ergibt sich das Lambert-Beersche Gesetz mit:E=log✓I0I1◆=e·c·d (1)Der LEGO Mindstorms EV3-Stein kann verwendet werden um photometrische Messun-gen durchzuf ¨uhren. Hierbei wird die duale Eigenschaft des Lichtsensors ausgenutzt, dersowohl Lichtintensit ¨aten detektieren, als auch rotes Licht einer Wellenl ¨ange von 632 nm ±3 nm erzeugen kann. Diese Unterrichtseinheit orientiert sich an dem Artikel”Using LEGOMINDSTORMS NXTTMRobotics Kits as a Spectrophotometric Instrument“ [KWB10],in dem Messungen mit dem Lichtsensor der LEGO Mindstorms mit denen eines HitachiU-2000 Spektrophotometer verglichen wurden. LEGO Mindstorms k ¨onnen nicht verwen-det werden um ekorrekt zu bestimmen, jedoch k ¨onnen Stoffkonzentrationen relativ ge-nau ermittelt und somit das Lambert-Beersche Gesetz im Experiment verdeutlicht werden.Integration des Erwerbs von Basiskonzepten 283ii“proceedings” — 2017/9/17 — 20:19 — page 284 — #284iiiiiiDer Fokus dieser Unterrichtseinheit bzgl. Chemie liegt somit auf der Durchf ¨uhrung einfa-cher qualitativer und quantitativer experimenteller Untersuchungen (Basiskompetenz E3)und der Modellnutzung zur Deutung der Lichtabsorption eines Farbstoffs (Basiskonzept”Struktur-Eigenschafts-Beziehungen“ (F2)). Indigocarmin ist als LebensmittelfarbstoffAufgabe Zeit1. Nehmt euch 10 ml der Indigocarmin-Stamml ¨osung, 10 K ¨uvetten, destilliertes Was-ser, eine Pipette und ein leeres Becherglas. Setzt eine Verd ¨unnungsreihe an undf¨ullt jeweils 1 ml in eine K ¨uvette. Notiert euch die Mischungsverh ¨altnisse! Eine derK¨uvetten soll als Leerprobe nur mit destilliertem Wasser gef ¨ullt werden.10 min2. Baut aus LEGO-Steinen eine K ¨uvettenhalterung mit zwei Lichtsensoren undschließt die Sensoren an euren LEGO Mindstorms EV3-Stein an.5 min3. Schreibt ein Programm, bei dem die Intensit ¨at des Umgebungslichts von einem derLichtsensoren mehrfach gemessen, in einem Array gespeichert und auf dem Stein-Display angezeigt wird. Verwendet die Steintasten um euch die Werte nacheinanderanzeigen zu lassen.15 min4. Ver ¨andert euer Programm nun so, dass der zweite Lichtsensor permanent rotes Lichtausstrahlt. Notiert euch die gemessenen Intensit ¨atswerte ohne Probe und messt nuneine Probe mit mittlerer Verd ¨unnung.10 min5. Vergleicht eure Messwerte mit denen der anderen Gruppen und diskutiert in An-betracht der Messwertschwankungen ¨uber eine geeignete Zahl von Wiederholungs-messungen.5 min6. Erweitert euer Programm nun so, dass ihr alle Proben nacheinander mehrfach ver-messen k ¨onnt, ohne das Programm neu starten zu m ¨ussen. Verwendet die Steintastenum die jeweils n ¨achste Messung zu starten und euch die Messwerte nacheinanderanzeigen zu lassen. Das Einbauen von Signalt ¨onen hilft, das Ende einer Messrei-he zu erkennen. Ihr bekommt zus ¨atzlich eine Probe mit einem euch unbekanntenMischungsverh ¨altnis.20 min7. Rechnet eure Messwerte mithilfe des Lambert-Beerschen Gesetzes in Extinktions-werte um, subtrahiert den Wert der Leerprobe und stellt die Endergebnisse graﬁschdar. Legt eine Ausgleichsgerade durch eure Messwerte und bestimmt deren Stei-gung. Berechnet das Mischungsverh ¨altnis eurer zus ¨atzlichen Probe und diskutierteure Ergebnisse.15 minTab. 5: Unterrichtseinheit”Photometrie“: Arbeitsaufgaben und Durchf ¨uhrungsdauerzugelassen und somit in der Handhabung unbedenklich. Er eignet sich f ¨ur dieses Expe-riment, da sein Absorptionsmaximum bei 608 nm liegt und so das rote Licht des EV3-Lichtsensors stark absorbiert. Der Farbstoff ist in vielen Formen erh ¨altlich. Im Rahmendieses Beispiels wurde eine Tablette Heitmann IRIS-Eierfarbe in 250 ml heißem Wassergel¨ost und daraus eine Verd ¨unnungsreihe angesetzt. Idealerweise sind Carbons ¨auren schonaus dem Chemieunterricht bekannt, damit ein geeignetes Strukturmodell zur Deutung derLichtabsorption erarbeitet werden kann. Dieses Experiment k ¨onnte jedoch auch auf reinph¨anomenologischer Ebene durchgef ¨uhrt werden, ohne dass der Aufbau und die Ursachef¨ur die Lichtabsorption von Indigocarmin im Detail erl ¨autert werden. Der Zusammenhangvon Informationen und Daten sollte als Dimension der Informatik thematisiert werden. F ¨urden Umgang mit Variablen und Arrays in der EV3-Software ist ggf. eine kurze Einf ¨uhrungn¨otig. Lichtsensoren und Steintasten sind hingegen durch erkl ¨arte Wahlm ¨oglichkeiten re-lativ verst ¨andlich implementiert. Unter Messen muss einer der Lichtsensoren auf St¨arkedes Umgebungslichts und der auf St¨arke des reﬂektierten Lichts eingestellt werden. Hier284 Marlene Lindner, Sandra Schulz, Niels Pinkwartii“proceedings” — 2017/9/17 — 20:19 — page 285 — #285iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft fr Informatik, Bonn 2017 9Abb. 2: Aufbau des Experiments mittels Stein, zwei Lichtsensoren und Kvettenhalterung fr photo-metrische Messungensollten aus informatischer Sicht Sensorik, Mglichkeiten der Informationsaufnahme und dieFunktionsweise des konkreten Sensors besprochen werden. Die Programmver ¨anderung inAufgabe 6 ist fakultativ, jedoch l ¨asst sich der Messablauf dadurch beschleunigen und derUmgang mit einer weiteren Variable und verschachtelten Schleifen ¨uben. Das Lambert-Beersche Gesetz und das Umrechnen der Messwerte sollte erl ¨autert werden, da das Rech-nen mit Leerprobe und Logarithmus ggf. Schwierigkeiten bereitet. Die Steigung der Mess-werte war in einem Kontrollversuch ann ¨ahernd linear bis zu einem Verh ¨altnis von 1:3.Wenn die Verwendung eines Tabellenkalkulationsprogramms bereits ge ¨ubt wurde, kanndie Steigung der Ausgleichsgeraden nat ¨urlich auch von dem Programm bestimmt werden.¨Uber die Geradengleichung kann nun das Mischungsverh ¨altnis der zus ¨atzlich ausgeteiltenProben ermittelt werden.4 Zusammenfassung und AusblickFrei verf ¨ugbare, deutschsprachige Unterrichtseinheiten, die als Ziel haben, Informatikf¨acher ¨ubergreifend mit den MNT-F ¨achern zu unterrichten sowie die konkrete Einbettungin Rahmenlehrplne, sind rar. Neben den pr ¨asentierten Unterrichtseinheiten wurden auchEinheiten zu rationalen Zahlen, ebenen Figuren (Dreiecken und Vierecken), Steuerungund Regelung (Hom ¨oostase durch negative R ¨uckkopplung) der thermischen Zustandsglei-chung idealer Gase, gleichf ¨ormiger Bewegung und ged ¨ampften mechanischen Schwin-gungen ausgearbeitet. Ob sich diese Unterrichtseinheiten positiv auf die Motivation unddie Kompetenzentwicklung von SuS auswirken, ist zu ¨uberpr ¨ufen. Sie bieten in jedem Falldie M ¨oglichkeit, erste Pilot-Studien durchzuf ¨uhren und werden interessierten LehrerInnenals OER frei zur Verf ¨ugung gestellt. Zur berprfung der Einsetzbarkeit der vorgeschlagenenAufgaben sollten diese zunchst in kleinen Gruppen z. B. an Projekttagen mit SchlerInnengetestet und anschlieend ihr Einsatz im Regelunterricht erprobt werden. Im Frhling 2017wurde das Beispiel zur Biologie (Abschnitt 3.1) mit 7 Schlerinnen der 9. Klasse durch-gefhrt. Diese gaben anschlieend an, dass sie dem Kurs gut folgen konnten und sich wn-schen wrden, diese Inhalte mit Robotern in der Schule zu behandeln.Unser Dank gilt dem Humboldt-ProMINT-Kolleg fr anregende Gesprche und inhaltlicheUntersttzung bei der Entwicklung der Unterrichtseinheiten.Integration des Erwerbs von Basiskonzepten 285ii“proceedings” — 2017/9/17 — 20:19 — page 286 — #286iiiiiiLiteraturverzeichnis[BB14] Banks, Frank; Barlex, David: Teaching STEM in the Secondary School. Taylor & FrancisLtd, 2014.[Br84] Braitenberg, Valentio: Vehicles: Experiments in Synthetic Psychology. MIT UniversityPress Group Ltd, 1984.[Ge08] Gesellschaft f ¨ur Informatik e.V.: Grunds ¨atze und Standards f ¨ur die Informatik in der Schu-le. https://www.gi.de/ﬁleadmin/redaktion/empfehlungen/Bildungsstandards 2008.pdf. –Zugriffsdatum: 31.12.16, 2008.[KMa] KMK: Bildungsstandards im Fach Biologie f ¨ur den Mittleren Schulabschluss (Beschlussder Kultusministerkonferenz vom 16.12.2004).[KMb] KMK: Bildungsstandards im Fach Chemie f ¨ur den Mittleren Schulabschluss (Beschlussder Kultusministerkonferenz vom 16.12.2004).[KMc] KMK: Bildungsstandards im Fach Mathematik f ¨ur den Mittleren Schulabschluss (Be-schluss der Kultusministerkonferenz vom 04.12.2003).[KMd] KMK: Bildungsstandards im Fach Physik f ¨ur den Mittleren Schulabschluss (Beschluss derKultusministerkonferenz vom 16.12.2004).[KM16] KMK: Bildung in der digitalen Welt. Strategie der Kultusministerkonferenz. htt-ps://www.kmk.org/ﬁleadmin/Dateien/pdf/PresseUndAktuelles/2016/Bildung digitale -Welt Webversion.pdf – Zugriffsdatum: 31.12.16, 2016.[KWB10] Kocanda, Martin; Wilke, Bryn M.; Ballantine, David S.: Using LEGO MINDSTORMSNXTTMRobotics Kits as a Spectrophotometric Instrument. International Journal on SmartSensing and Intelligent Systems, 3(3), 2010.[NG13] NGSS Lead States: Next Generation Science Standards. http://nextgenscience.org. – Zu-griffsdatum: 31.12.16, 2013.[OE99] OECD: Measuring Student Knowledge and Skills – A New Framework for Assessment.http://www.oecd.org/edu/school/programmeforinternationalstudentassessmentpisa/33693997.pdf – Zugriffsdatum: 31.12.16, 1999.[OI04] O’Sullivan, Dan; Igoe, Tom: Physical Computing: sensing and controlling the physicalworld with computers. Course Technology Press, 2004.[Se06] Senatsverwaltung f ¨ur Bildung, Sport und Jugend Berlin: Rahmenlehrplan f ¨ur die Sekun-darstufe I. Jahrgangsstufe 7–10. ITG Informatik als Wahlpﬂichtfach. 2006.[SP15] Schulz, Sandra; Pinkwart, Niels: Physical Computing in STEM Education. In: Proceedingsof the Workshop in Primary and Secondary Computing Education. WiPSCE ’15, ACM,New York, NY, USA, S. 134–135, 2015.[Th16] The LEGO Group: LEGO MINDSTORMS Education EV3; Aufgaben f ¨ur den MINT-Unterricht. https://le-www-live-s.legocdn.com/sc/media/ﬁles/curriculum/le ev3aufga-benfuer unterricht-30d0cec3ed3ce82fe35811eed0b42a2e.pdf. – Zugriffsdatum: 31.12.16,2016.[VD07] VDI: Bildungsstandards Technik f ¨ur den Mittleren Schulabschluss.https://www.vdi.de/ﬁleadmin/vdi de/redakteur dateien/sk dateien/V-DI%20Bildungsstandards 2007.pdf. – Zugriffsdatum: 31.12.16, 2007.[Ve16] Vernier Software & Technology: Vernier Engineering Projects with LEGO MIND-STORMS Education EV3. http://www.vernier.com/products/books/ep-ev3/. – Zugriffsda-tum: 31.12.16, 2016.286 Marlene Lindner, Sandra Schulz, Niels Pinkwartii“proceedings” — 2017/9/17 — 20:19 — page 287 — #287iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017    15 Ein Framework zur Einordnung programmierbarer Baukästen in interdisziplinäre Bildungskontexte Eva-Sophie Katterfeldt1, Nadine Dittert2  Abstract: Aktuell gibt es eine große Anzahl verschiedener programmierbarer Baukästen mit Mikrocontroller für den Bildungsbereich und ständig kommen neue hinzu – das jüngste Beispiel ist Calliope. Sie ermöglichen es nicht nur, informatische und elektrotechnische Themen in kreati-vem Umgang zu vermitteln, sondern bieten im Sinne einer umfassenden digitalen Bildung An-knüpfungspunkte an eine Vielzahl von Schulfächern. In unserer langjährigen Erfahrung mit dem Einsatz solcher Kits in informellen Bildungskontexten mit diversen interdisziplinären Themen-schwerpunkten hat sich gezeigt, dass die jeweiligen Kit-Designs unterschiedliche Eignung aufwei-sen. Wir präsentieren ein Framework mit Taxonomie, das Lehrende in formellen und informellen Bildungskontexten bei der Wahl passender Baukästen für ihren Anwendungsfall leitet.  Keywords: Construction Kits; programmierbare Baukästen; Framework; Interdisziplinarität. 1 Einleitung und Hintergrund Programmierbare Baukästen kamen in den 1990er Jahren am MIT auf. Es handelt sich um programmierbare Mikrocontroller für junge Anwender*innen, die mit Sensoren und Aktuatoren erweitert werden. Mittlerweile gibt es eine unglaubliche Vielzahl solcher ‘Kits’ die verschiedene Designs aufweisen [Bl15]. Um eine Orientierungshilfe ihrer Eignung für interdisziplinäre Projekte zu bieten, haben wir ein Framework entwickelt. 2 Framework und Taxonomie Das Framework wurde in einem Diskurs wöchentlicher Diskussionen über einen Zeit-raum von drei Monaten anhand langjähriger praktischer Erfahrungen mit programmier-baren Baukästen (‚Construction Kits’) mit jungen Menschen im Alter von 9-18 Jahren [Ka15] sowie Literaturrecherchen entwickelt. Gegenstand dieses Artikels ist eine Taxo-nomie innerhalb des Frameworks, die Merkmale von Kits auf interdisziplinäre Anwen-dungen bezieht: ‘Welche Merkmale programmierbarer Baukästen sind für bestimmte Anwendungsgebiete relevant?’ Für die ersten „programmable bricks“ wurden Projekt-ideen in verschiedenen Anwendungsbereichen vorgeschlagen: das Tracking des eigenen Körpers, die Überwachung von Räumen, das Kreieren ‘intelligenter’ Gegenstände, na-turwissenschaftliche Experimente oder das Erschaffen autonomer Wesen [Re96]. Zwar                                                              1 Universität Bremen, FB3/dimeb, Bibliothekstr. 5, 28359 Bremen, evak@tzi.de 2 Universität Bremen, FB3/dimeb, Bibliothekstr. 5, 28359 Bremen, ndittert@tzi.de I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 287ii“proceedings” — 2017/9/17 — 20:19 — page 288 — #288iiiiii Ein Framework für programmierbare Baukästen    16 sind bei aktuellen Kits neue Möglichkeiten hinzugekommen (z.B. IoT), die genannten sind aber nach wie vor gültig, wie Literaturrecherchen belegen [Pa17]. Basierend darauf wurden folgende Anwendungsfälle für die Taxonomie festgelegt: ● Geschichtenerzählen: Projekte, bei denen Artefakte (auch als autonome Wesen) am Rollenspiel beteiligt sind, z.B. einer interaktiven Theateraufführung. ● Spieldesign: Entwicklung von Computerspielen, die mit einem Kit (oder Artefakt, in das dies eingebettet ist) als Eingabegerät gesteuert werden.  ● ‘Intelligente’ Gegenstände: Erfinden und Gestaltung intelligenter Objekte, z.B. durch ‘Hacken’ bestehender oder Basteln neuartiger Artefakte. ● Autonome Wesen: Roboter oder Fahrzeuge, die sich autonom bewegen können. ● Erfassung körperlicher Aktivität: ‘Tracking’ von Bewegungen und Aktivitäten des menschlichen Körpers. Erfordert das Verbinden von Komponenten mit dem Körper.  ● Naturwissenschaftliche Experimente: Das Erstellen von Messgeräten, die Sensorda-ten z.B. von Temperatur, Luft, Wasserqualität erfassen und ggf. auswerten. Diesen Anwendungskategorien werden Merkmale zugeordnet, die erforderlich sind, um entsprechende Projekte möglichst erfolgreich umzusetzen, und die sich auf äußerliche Designmerkmale, technische Schnittstellen und Programmiermöglichkeiten beziehen. ● Alleinstehend: Das Kit kann ohne dauerhaften Anschluss an einen Rechner verwen-det werden. Wichtig für Projekte, bei denen das Artefakt herumgetragen werden soll. Bspw. nicht erfüllt von LEGO Wedo1.0, im Gegensatz zu Wedo2.0 [LW17].  ● All-in-one: Sensoren und Aktuatoren sind auf dem Mainboard integriert, so dass es ohne Anschluss weiterer Komponenten einsatzbereit ist. Z.B. [Ca17], [En17]. ● Möglichkeit der Einbettung: Inwiefern das Kit oder einzelne Komponenten in ande-re physische Objekte integrierbar sind, z.B. durch flexible Kabellängen, Anschlüsse für nicht-technische Materialien [LM17, PC17] oder geringe Größe ([AB17] Nano).  ● Wearable: Unterkategorie von ‘Einbettung’. Erfüllt von Kits, die sich mit dem Kör-per verbinden lassen z.B. über Kleidung [BE08].  ● Sensorenvielfalt: Verfügbarkeit mehrerer verschiedener Sensortypen, die Projekt-vielfalt und -komplexität unterstützen. Kits mit Breadboards [AB17] oder [AT17]  unterstützen durch Erweiterbarkeit viele, LEGO Wedo2.0 nur zwei Sensortypen. ● Motorik: Die Anschlussfähigkeit von Motoren, die das Artefakt beweglich machen, z.B. [LW17, LM17]. [AB17] erfordern i.d.R. Erweiterungsshields, die sich auf Ein-bettung und Tragbarkeit negativ auswirken. ● Zahlreiche I/O-Schnittstellen: Relevant für den Anschluss vieler externer Sensoren, Aktuatoren oder zusätzlicher Shields. Z.B. hat [AB17] Mega viele, [Ca17] wenige.  ● USB-Client: Das Kit wird als Eingabemedium von einem Rechner erkannt, um z.B. 288 Eva-Sophie Katterfeldt, Nadine Dittertii“proceedings” — 2017/9/17 — 20:19 — page 289 — #289iiiiii Ein Framework für programmierbare Baukästen    17 Maus und Tastatur zu ersetzen, z.B. [MM17]. Relevant für Game-Controller-Bau.  ● Kabellose Vernetzbarkeit: Kits können miteinander oder mit anderen Geräten draht-los kommunizieren. Relevant für Theateraufführungen oder IoT, z.B. [LM17] EV3. ● Programmierbarkeit: Inwiefern Kits programmierbar sind. Z.B. sind [LB17] origi-när nicht programmierbar, daher ist ihr Verhalten begrenzt. Erhöht sich bei Kits, die umfangreiche textuelle Programmiersprachen (z.B. Arduino IDE) unterstützen. ● Datenspeicherung: Das Board kann größere Datenmengen speichern. Relevant u.a. bei naturwissenschaftlichen Experimenten. Z.B. [En17] mit SD-Kartensteckplatz. Tabelle 1 ordnet relevante Kit-Merkmale den Anwendungsfällen zu.  Merkmal erWünscht o. erForderlich für Anwen-dungsfall Ge-schich-tenerz. Spielde-sign Intel. Objekte Auton. Wesen Erf. körperl. Akt. naturw. Exp. Alleinstehend F  F W F W All-in-one  W     Einbettung   F  F W Wearable W    F  USB-client  F     Sensorvielfalt W  W W F F Motorik F   F   Zahlreiche I/O   W  W W kabellose Konnektivität W  W  W W Programmierbarkeit W W W W F F Datenspeicherung      W Tab. 1: Taxonomie der Objekt-Perspektive: Kit-Eigenschaften nach Anwendungsfall. 3 Anwendung und Diskussion des Frameworks Unser Framework konzentriert sich darauf, Kits mit Anwendungsgebieten in Verbindung zu bringen, für die sie sich anhand ihrer baulichen Merkmale am ehesten eignen. Für ein Projekt können mehrere Anwendungsfälle der Taxonomie relevant sein. Z.B. ein Thea-terstück mit Robotern (Geschichtenerzählen und Autonome Wesen) oder Messung und Auswertung eigener Bewegungen (Naturwiss. Experimente und Erfassung körperlicher Aktivität). Ebenso kann die Taxonomie genutzt werden, um geeignete Anwendungen für vorrätige Kits zu identifizieren. Mitunter ist kein klares Ergebnis hinsichtlich der Eig-nung eines Kit-Typs zu erwarten und weitere kontextuelle Aspekte sind abzuwägen (z.B. Vorkenntnisse). Beispielsweise hängt eine ausreichende Vielfalt an Sensoren ab von der Ein Framework zur Einordnung programmierbarer Baukästen im Bildungskontext 289ii“proceedings” — 2017/9/17 — 20:19 — page 290 — #290iiiiii Ein Framework für programmierbare Baukästen    18 angestrebten Artefaktkomplexität, vom Vorwissen der Beteiligten und Projektdauer. 4 Fazit und Ausblick Dieser Beitrag liefert ein Framework, das Merkmale programmierbarer Baukästen typi-schen interdisziplinären Anwendungsfällen zuordnet und Orientierung bei der Wahl passender Kits im Bildungsbereich bietet. Zukünftig wollen wir das Framework um Perspektiven auf beteiligte Akteur*innen und Lernumgebung und -kontext erweitern.  5 Danksagung Diese Forschung war Teil des Projekts PELARS innerhalb des 7. Rahmenforschungs-programms der Europäischen Union unter Förderkennzeichen 619738.  Literaturverzeichnis [AB17] Arduino Boards, https://www.arduino.cc/en/Main/Products, Stand: 26.05.2017. [AT17] Arduino TinkerKit, http://arduino.org/products/tinkerit, Stand: 11.02.2017.  [Bl15]  Blikstein, P.: Computationally Enhanced Toolkits for Children: Historical Review and a Framework for Future Design. Foundations and Trends® in HCI. 9, 1, 1–68, 2015. [BE08] Buechley, L., Eisenberg, M.: The LilyPad Arduino: Toward Wearable Engineering for Everyone. IEEE Pervasive Computing. 7, 2, 12–15, 2008.  [Ca17] Calliope, http://www.calliope.cc, Stand: 11.02.2017. [En17] Engduino, http://www.engduino.org, Stand: 11.02.2017. [Ka15] Katterfeldt, E.-S. et al.: Designing digital fabrication learning environments for Bil-dung: Implications from ten years of physical computing workshops. International Journal of Child-Computer Interaction. 5, 3–10, 2015. [LB17] LittleBits. https://littlebits.cc, Stand: 26.05.2017. [LM17] LEGO Mindstorms, https://www.lego.com/de-de/mindstorms, Stand: 11.02.2017. [LW17]  LEGO WeDo, https://education.lego.com/de-de/grundschule/shop, Stand: 11.02.2017. [MM17] MakeyMakey, http://makeymakey.com, Stand: 11.02.2017.1. [Pa17] Papavlasopoulou, S. et al.: Empirical studies on the Maker Movement, a promising approach to learning: A literature review. Entertainment Computing. 18, 57–78, 2017. [PC17] PicoCricket, http://picocricket.com, Stand: 11.02.2017. [Re96] Resnick, M. et al.: Programmable Bricks. IBM Sys. Journal. 35, 3.4, 443–452, 1996. 290 Eva-Sophie Katterfeldt, Nadine Dittertii“proceedings” — 2017/9/17 — 20:19 — page 291 — #291iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017     Das EduFab-Kit – Ein modularer FabLab-Baukasten für Lehrer*innen Nadine Dittert1, Eva-Sophie Katterfeldt2 Abstract: Das digitale Herstellen von Produkten – oder Making – ist in den Bildungsbereich vorgedrungen. Die Idee des konstruktiven Arbeitens mit digitalen Medien ist nicht neu, erhält aber durch FabLabs und Makerspaces und dem damit geschaffenen Zugang zu 3D-Druckern, Laser-Cuttern, etc. neuen Nährboden für das Lernen. Neue Anwendungsmöglichkeiten allein genügen jedoch nicht: es braucht Konzepte, Materialien und konkrete Ideen, wie Technologie Teil eines Lernprozesses werden kann. Wir präsentieren das EduFab - Kit, das Lernaktivitäten im FabLab für Anfänger*innen unterstützt. Das Kit hilft Lehrer*innen dabei, Lernumgebungen zu schaffen, in denen Schüler*innen ausgehend von ihren eigenen Ideen Produkte mit dem 3D-Drucker, dem Laser-Cutter, Mikrocontrollern o.ä. entwickeln. Das Kit besteht aus Materialien in einem modularen Koffer, einem generellen Konzept zur Arbeit mit jungen Menschen im FabLab im Bildungskontext und Beispielworkshops, die mit dem Kit durchgeführt werden können. Weiterhin beinhaltet das Kit Anleitungen und Listen für zusätzlich notwendiges Material und Maschinen des FabLabs.  Keywords: FabLab; Kit; außerschulischer Lernort; Informatik; Digitale Medien; Lernen; Schüler*innen; Konstruktionismus. 1 Einleitung Fabrication Laboratories (FabLabs) ermöglichen Menschen verschiedenen Hintergrunds den Zugang zu High-Tech-Maschinen, die zuvor einem eher begrenzten Teil der Bevölkerung vorbehalten war. Technologien wie Mikrocontroller, 3D-Drucker, 3D-Scanner, Laser-Cutter und CNC-Fräsen bieten grundlegend neue Möglichkeiten zur kreativen Gestaltung von (digital entwickelten) Produkten. Genutzt wird dies von Menschen, die aus verschiedenen persönlichen und auch beruflichen Interessen heraus Dinge herstellen. Dieses Herstellen – Englisch making – rückt nicht ohne Grund mehr und mehr in den Mittelpunkt von Lernprozessen: es macht digitale Modelle „be-greifbar“.  2 Hintergrund Der Begriff „Be-greifbarkeit“ verdeutlicht das Zusammenspiel von Anfassen und Verstehen, von Fühlen und Denken [RS12], was der aktive Umgang mit FabLab-                                                             1 Universität Bremen, FB3/dimeb, Bibliothekstr. 5, 28359 Bremen, ndittert@tzi.de 2 Universität Bremen, FB3/dimeb, Bibliothekstr. 5, 28359 Bremen, evak@tzi.de I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 291ii“proceedings” — 2017/9/17 — 20:19 — page 292 — #292iiiiii 16 Nadine Dittert und Eva-Sophie Katterfeldt  Technologien grundsätzlich in sich birgt. Im FabLab steht das Erschaffen von Objekten im Mittelpunkt. In einem konstruktionistischen Lernprozess ist ein solches Objekt der sogenannte „Gegenstand-mit-dem-man-denkt“ – es ist Ausdruck gedanklicher Modelle, die reflektiert und angepasst werden können [Pa80]. Nicht jede Konstruktionstätigkeit im FabLab bedeutet gleichzeitig, dass konstruktionistisches Lernen stattfindet. Neben der Notwendigkeit der Reflexion des Prozesses verlangt dieses Lernparadigma einen wesentlichen Aspekt: die persönliche Bedeutsamkeit des erschaffenen Produkts.  Aus diesem Blickwinkel betrachtet das Projekt EduFab das FabLab als Lernort für Schüler*innen. Die Möglichkeiten, die die Maschinen an sich bieten, müssen didaktisch aufbereitet werden, um einen konstruktionistischen Lernprozess zu ermöglichen. Die Schüler*innen müssen dabei begleitet werden, aus einer Idee mit der vorhandenen Technologie ein Produkt zu entwickeln. Gleichzeitig soll die persönliche Bedeutsamkeit berücksichtigt werden. Dazu soll der Prozess um die Ideenfindung und die Präsentation des Produkts erweitert werden. Um ein FabLab – oder ähnlich ein Makerspace oder Hackerspace – zu einer Lernumgebung nach diesen Kriterien zu machen, braucht es passende Konzepte und Materialien.  Für diesen Zweck haben wir das EduFab-Kit entwickelt. Es ist eine Zusammenstellung von Materialien, Werkzeugen und Listen, die die Nutzung des FabLabs als Lernort für und mit jungen Menschen fördert. In einem didaktischen Konzept werden Anfänger*innen zu Aktivitäten angeregt und dazu befähigt, zum Maker oder zur Makerin zu werden. In unterschiedlichen von uns ausgearbeiteten Szenarien geht es darum, dass Schüler*innen fantasieren, explorieren, kreieren, modellieren, programmieren, drucken und cutten. Schlussendlich halten sie ein Produkt in der Hand, das ausgehend von ihrer Lebenswelt und nach ihren Ideen entsteht.  Als Arbeitsgruppe „Digitale Medien in der Bildung“ (dimeb) blicken wir auf langjährige Forschungs- und Entwicklungserfahrung zum Einsatz Digitaler Medien im Bildungskontext zurück. Das Aufkommen von FabLabs und deren Nutzen für das Lernen ist in den letzten Jahren ins Zentrum unserer Forschung gerückt. Dabei haben wir unsere Erkenntnisse, die vor allem aus dem Bereich des Umgangs mit Mikrocontroller-Baukästen in Lernkontexten stammen, auf die neuen Technologien angewandt und in diesem erweiterten Bereich geforscht und entwickelt. Ein Ergebnis ist das hier dargestellte EduFab-Construction Kit.  3 Das EduFab-Kit Das EduFab-Construction Kit (kurz: EduFab–Kit) wurde entwickelt, um Schüler*innen die FabLab-Umgebung und deren Technologien konkret anhand von Beispielen erfahrbar zu machen. Eingebettet in ein didaktisches Konzept können die Technologien erkundet und mit ihnen experimentiert werden, um zu Grunde liegende Funktionsweisen zu „be-greifen“. Das EduFab-Kit soll Lehrer*innen Wege eines geeigneten Zugangs zur Arbeit mit Kindern und Jugendlichen im FabLab zeigen und zur Vermittlung und 292 Nadine Dittert, Eva-Sophie Katterfeldtii“proceedings” — 2017/9/17 — 20:19 — page 293 — #293iiiiii Das EduFab - Kit   17 produktiven Nutzung von FabLab-Technologien für Kinder und Jugendliche anregen. Es richtet sich zunächst an Menschen ohne Vorerfahrung mit FabLab-Technologien und soll dabei helfen, deren Neugier zu wecken. Es kann jedoch auch erweitert und darüber hinaus genutzt werden. Das EduFab-Construction Kit besteht aus verschiedenen Teilen: • einem (Material-) Koffer mit „Tools“ zum Arbeiten,  • einem (Workshop-) Konzept als Vorschlag für die Arbeit mit jungen Menschen im FabLab, • ausgearbeiteten Beispielworkshops, bei denen Anfänger*innen im FabLab mit verschiedenen Technologien in Berührung kommen sowie • Anleitungen, wie einer Bauanleitung zum Koffer, und Listen über weitere benötigte (Arbeits-) Materialien, Software und Anregungen für weitere Arbeiten im FabLab. Zusätzlich wird zu diesem Kit ein Materiallager benötigt, in dem beispielsweise Filament für den 3D-Drucker sowie Holz-, Acryl- oder Pappplatten für die Arbeit mit dem Laser-Cutter in ausreichenden Mengen vorhanden sind. Dies ist meist in FabLabs vorzufinden. Vorschläge für eine Mindestausstattung an Material, das für die spezifischen Workshops zur Verfügung stehen sollte, sind in den Anleitungen enthalten und dienen als Grundlage für Absprachen mit dem FabLab, in dem gearbeitet wird.  Das EduFab-Construction Kit selbst folgt der Idee des „Learning-by-doing“. Lehrer*innen werden selbst aktiv, bevor sie mit den Schüler*innen arbeiten. Ihre Arbeit beginnt „Hands on“ mit dem Bau eines eigenen EduFab-Koffers. Dieser liegt als digitales Modell zur eigenständigen Produktion vor. Der Inhalt des Koffers steht (zunächst) in Form von Materiallisten zur Verfügung, Handreichungen und Materialien stehen in Papierform oder als druckfertige Dateien bereit. Der Koffer „wächst“ mit den Erfahrungen der Lehrenden – je mehr Workshops durchgeführt wurden, umso mehr Ebenen existieren für den Koffer. Seine Modularität lädt zusätzlich dazu ein, eigene Workshops zu entwickeln und dafür eigene Ebenen zu erstellen.  3.1 Der EduFab-Koffer Der EduFab-Koffer ist ein im FabLab mit dem Laser-Cutter hergestellter modular gestalteter Kasten (siehe Abbildung 1). Er enthält die „Tools“, die für die Arbeit im FabLab benötigt werden. Unter anderem ist damit seine eigene Produktion bzw. die weiterer Koffer möglich – der Koffer selbst ist ein autoreplikatives System. Der Grundgedanke ist dabei, mit dem Bauen des Koffers die erste eigene praktische Arbeit im FabLab umzusetzen, sozusagen ein „Hello World“ mit dem Laser-Cutter. Bei Das EduFab-Kit – Ein modularer FabLab-Baukasten für Lehrer*innen 293ii“proceedings” — 2017/9/17 — 20:19 — page 294 — #294iiiiii 18 Nadine Dittert und Eva-Sophie Katterfeldt  der Konzeption des Koffers wurde darauf geachtet, eine möglichst vielfältige Bandbreite an Arbeitstechniken mit dem Laser-Cutter abzudecken (Schnitt und Gravur, Steckmechanismen, Flexibilität) um eine aktive Auseinandersetzung mit diesen Techniken anzuregen.    Abb. 1: Der EduFab-Materialkoffer  Der EduFab-Koffer besteht aus verschiedenen Ebenen, die aufeinander stapelbar sind. Diese Bauweise ermöglicht es, individuell Inhalte zu verändern, auf verschiedene Bedürfnisse anzupassen und sie selbst zu erweitern.  Die unterste Ebene beinhaltet das Basiskit, das grundsätzlich für die Arbeit im FabLab hilfreich ist und vorwiegend für die Anfertigung des Koffers selbst notwendig ist. Sie ist, im Gegensatz zu den weiteren Ebenen, ständiger Bestandteil des Materialkoffers und personalisierbar. Die Grundebene besteht aus einem Sortierkasten mit einem nach oben herausragenden Griff und einem Deckel. Die Größe wird durch ein darunter liegendes Fach bestimmt, in das Papier der Größe DIN A4 passt. Zusätzlich gibt es für verschiedene Workshops weitere Ebenen, die das spezifische Material für ein konkretes Workshopszenario enthalten (siehe Abbildung 2). Diese Sortierkästen ähneln der Grundebene, haben jedoch statt des Griffs eine Öffnung und 294 Nadine Dittert, Eva-Sophie Katterfeldtii“proceedings” — 2017/9/17 — 20:19 — page 295 — #295iiiiii Das EduFab - Kit   19 können so auf die Grundebene aufgesetzt werden. Sie enthalten herausnehmbare Elemente, so dass die Größe der jeweiligen Fächer anpassbar ist. Auf die oberste Ebene wird der Deckel gepackt und der Kasten lässt sich als geschlossener Materialkoffer transportieren. Auf diese Weise ist der EduFab-Materialkoffer modular gehalten. Für einen speziellen Workshop werden Grundebene und Workshop-spezifische Ebene zusammengesteckt. Gleichzeitig ist der Materialkoffer flexibel erweiterbar: Nutzende sind eingeladen, Teile des bestehenden Systems auf eigene Bedürfnisse anzupassen oder auch weitere Ebenen und Materialien zu entwickeln und mit der Community der Maker*innen und Fabber*innen zu teilen.   Abbildung 2: Die Schmuckebene des EduFab-Materialkoffers Aktuell existieren fünf verschiedene Ebenen, die den diversen Möglichkeiten der Digitalen Fabrikation im FabLab – orientiert an den Geräten des FabLab Bremen – zugeordnet sind und in dem Dokument „Der EduFab-Koffer :: Der Inhalt“3 näher erläutert werden. Für jede dieser Ebenen stehen zusätzlich zu den „Tools“ Materialien zur Erläuterung bzw. zum Umgang im Workshop zur Verfügung.                                                              3 http://www.dimeb.de/edufab/wordpress/wp-content/uploads/2016/11/edufab_koffer_inhalt.pdf Das EduFab-Kit – Ein modularer FabLab-Baukasten für Lehrer*innen 295ii“proceedings” — 2017/9/17 — 20:19 — page 296 — #296iiiiii 20 Nadine Dittert und Eva-Sophie Katterfeldt  3.2 Das Workshopkonzept Das Workshopkonzept dient als Vorschlag für den Einstieg in die Arbeit mit jungen Menschen im FabLab. Es beschreibt, wie die digitale Fabrikation mittels FabLab-Technologien (z.B. 3D-Drucker, Laser-Cutter, Plotter, Arduino) in einem Workshop mit Kindern und Jugendlichen didaktisch begleitet werden kann. Es ist angelehnt an das TechKreativ-Konzept [Di12], das nun seit mehr als 10 Jahren angewandt und weiterentwickelt wird, um es (jungen) Menschen ohne Vorkenntnissen zu ermöglichen, selbst Technologie zu konstruieren und gleichzeitig einen Bildungsbeitrag zu leisten [Ka15]. In diesem Rahmen wird Informatik „gemacht“ – von einer Problemstellung über eine praktische Lösung (inklusive eines Programmierteils) zur Präsentation. Die Kinder und Jugendlichen werden dazu in ihrer Erlebniswelt „abgeholt“ und dabei begleitet, eigene Ideen umzusetzen und am Ende zu präsentieren. Der Prozess verläuft in fünf Phasen, die im Folgenden beschrieben werden.  Ziel der ersten Phase, der Fantasiephase, ist eine freie Idee, die aus der Lebenswelt der Teilnehmenden kommt. Sie wird mittels Kreativmethoden, beispielsweise durch ein Brainstorming, generiert. Die Teilnehmenden sollen sich mit der Aufgabe identifizieren und ihre eigenen Ideen einbringen können, da die persönliche Bedeutsamkeit eine wichtige Grundlage für das Lernen im Workshop darstellt.  Im Anschluss an die Fantasiephase wird die Technologie vorgestellt (Phase 2: Technologieeinführung). In kleinen Gruppen werden den Teilnehmenden an Stationen die verschiedenen zur Verfügung stehenden Technologien erklärt. Dies geschieht so praktisch wie möglich, ohne jedoch konkrete Beispiele zu benennen, die im Workshop nachgebaut werden können. Eine kleine Hands-on–Aufgabe, bei der die Teilnehmenden erfolgreich aktiv werden, beendet die Technologieeinführung. An dieser Stelle wird auch das zu verwendende Material gezeigt.  Das Wissen über Technologie und Material und die Ergebnisse der Fantasiephase dienen als Ausgangspunkt zur Entwicklung konkreter Ideen (Phase 3: Ideenfindung). Aufgabe der Tutorin oder des Tutors ist es, gemeinsam mit den Teilnehmenden eine im Rahmen des Workshops umsetzbare Idee pro Kleingruppe zu entwickeln. Diese hat am Ende dieser Phase eine wahrnehmbare Form, z.B. als Beschreibung oder Zeichnung.  In der vierten Phase (Konzeptentwicklung, Konstruktion und Programmierung bzw. Modellierung) beginnt nun die genauere Konzeption des Objekts sowie dessen Umsetzung. Die Teilnehmenden setzen aktiv ihre Ideen um und werden dabei von den Tutor*innen unterstützt, jedoch nicht instruiert. Am Ende der vierten Phase steht der „finale Prototyp“ – das Produkt.  Zuletzt wird das Produkt präsentiert (Phase 5: Präsentation) und durch die Verbalisierung reflektiert. Der Workshop endet mit einem positiven Erlebnis.  Im Laufe des Workshops ist es wichtig, kontinuierlich Bezüge der aktuellen Arbeit zur Erlebniswelt der Teilnehmenden, zum Alltag und zur Welt herzustellen. Dabei wird auf 296 Nadine Dittert, Eva-Sophie Katterfeldtii“proceedings” — 2017/9/17 — 20:19 — page 297 — #297iiiiii Das EduFab - Kit   21 ähnliche Anwendungen sowie auf Anwendungsbereiche wie Forschung, Medizin, Kunst und Hobby eingegangen.  3.3 Drei ausgearbeitete Beispielworkshops Im Rahmen des Projekts sind drei beispielhafte Workshops, bei denen Anfänger*innen im Alter von 13 bis 19 Jahren im FabLab mit verschiedenen Technologien in Berührung kommen, entstanden. Mit diesen konkreten Anleitungen können Lehrer*innen oder Tutor*innen die Workshops durchführen4. Dabei wird das zuvor beschriebene Konzept angewandt. Das notwendige Material befindet sich in der dazu gehörenden Ebene des Koffers.  Der Kurzworkshop ,,Stoffdrucke programmieren” bietet Anfänger*innen einen praktischen Einstieg in textuelle Programmierung mit Processing und setzt das Programmierte künstlerisch um. In drei Stunden programmieren die Teilnehmenden aus einfachen Formen eine Figur oder ein Muster, die sie mit dem Plotter ausschneiden und dann auf einen Stoffbeutel aufbügeln können. Inhaltlich sehr ähnlich ist der Kurzworkshop „Programmierte Schmuckstücke” in dem ebenso ein Muster in Processing programmiert wird. Hierbei entstehen jedoch Muster für Kettenanhänger oder Ohrringe, die mit dem Laser-Cutter ausgeschnitten und – wenn gewünscht – graviert werden. In dem Workshop „Analytische Geometrie am Beispiel von Gebäuden“ werden Grundelemente der analytischen Geometrie am Beispiel des Modellbaus von Gebäuden eines zentralen Platzes im Lebensraum der Lernenden erarbeitet. Arbeitsteilig in Kleingruppen werden einzelne Gebäudemodelle erstellt und dann auf dem Modellplatz gemäß ihrer exakten Position aufgestellt. 3.4 Weitere Anleitungen Als weitere Anleitungen stehen u.a. eine Bauanleitung zum Koffer, die Schnittdatei und der Inhalt des Koffers einschließlich Listen über weitere benötigte (Arbeits-) Materialien online zur Verfügung. 4 Erfahrungen im Umgang mit dem EduFab-Kit Besonders viel Arbeit und Überlegungen sind in die Anpassung des  bewährten TechKreativ-Konzeptes auf die „neuen“ Maschinen geflossen. Dabei waren uns zwei Aspekte besonders wichtig: der Anschluss an die Lebenswelt der Teilnehmenden und die Nutzung der Produktionsmaschinen für einen konstruktiven Einblick in die Informatik. Die im Folgenden beschriebenen Erfahrungen beziehen sich insbesondere auf die                                                              4 Alle Anleitungen zu den Workshops sowie zum Koffer sind unter http://www.dimeb.de/edufab/material zu finden. Das EduFab-Kit – Ein modularer FabLab-Baukasten für Lehrer*innen 297ii“proceedings” — 2017/9/17 — 20:19 — page 298 — #298iiiiii 22 Nadine Dittert und Eva-Sophie Katterfeldt  Workshops „Stoffdrucke programmieren“ und „Programmierte Schmuckstücke“5.  Um an die Interessen der Kinder und Jugendlichen anzuschließen, suchten wir nach Szenarien, in denen Dinge entstehen, die sie im Alltag nutzen können und die gleichzeitig eine persönliche Note zulassen. Die Wahl von Schmuckstücken und Stoffbeuteln hat sich hierbei als geeignet und darüber hinaus als interessantes Thema für diverse Zielgruppen (u.a. Mädchen, Programmierinteressierte, Geflüchtete) erwiesen. Die Teilnehmer*innen waren stolz auf ihre Produkte, deren Nutzung im Alltag sie in den Workshops angekündigt hatten. Persönliche Bezüge zeigten sich in den entworfenen Mustern und Formen: zwei Teilnehmerinnen, die in der Fantasiephase einen Fisch zeichneten, weil sie gerne schwimmen, setzten diesen um, ebenso wie zwei Mädchen, die gerne Eis essen und in der Fantasiephase eine Eiswaffel zeichneten. Beides wurde programmiert und geplottet (siehe Abbildung 3). Zahlreiche weitere umgesetzte Beispiele dieser Art zeigen, dass der Umgang mit dem EduFab-Kit einschließlich der Anwendung des Konzeptes die Konstruktion persönlich bedeutsamer Objekte fördert.  Das Ziel, mit dem EduFab-Kit einen aktiven Einblick in die Informatik zu geben, wurde umgesetzt, indem einerseits der Prozess der Problemlösung aktiv durchlaufen wird und andererseits darin Formen und Muster programmiert werden, statt sie mit einem Grafikprogramm zu erzeugen. Diese Szenarien sind nur ein kleiner Einblick und zeigen lediglich allererste Programmierschritte. Nichtsdestotrotz wurde durch Programmierung, also durch „dem Computer in einer seiner Sprachen zu sagen, was er tun soll“, ein Objekt erschaffen, statt den Computer als Zeicheninstrument zu nutzen. Die Szenarien sind durchaus erweiterbar, was bereits teilweise erfolgreich getestet wurde.  Das eigenständige Konstruieren eines EduFab-Koffers durch Lehrer*innen konnte aus Zeitgründen bisher nicht getestet werden. Ein Testlauf mit zwei Teilnehmerinnen hat jedoch gezeigt, dass es sinnvoll ist, die Konstruktion eines Koffers durch Tutor*innen zu begleiten, die an einigen Stellen hilfreiche Tipps geben können. Für Workshops mit mehreren Lehrer*innen sollten einige Teile des Koffers aus zeitlichen Gründen bereits im Vorfeld gecuttet werden. Das Design des Koffers fand bisher viel Lob und Zustimmung, ebenso wie die Idee, darin Workshopmaterialien aufzubewahren. In unseren Workshops nutzen wir gerne diese Gelegenheit, uns ist jedoch nicht bekannt, ob Lehrer*innen tatsächlich mit dem entworfenen Koffer und ihrer Klasse ins FabLab gehen.  Ein nicht zu verschweigender Aspekt ist der Kostenaufwand der beschriebenen Aktivitäten. Die Produkte selbst, die Nutzung der Maschinen und das (zusätzlich notwendige) Personal müssen berücksichtigt werden. Im Rahmen des Projekts haben wir teilweise versucht, Kostenfaktoren gering zu halten. Das Stoffdrucke-Szenario gleicht inhaltlich bewusst dem Schmuckszenario, weil ein Plotter wesentlich günstiger zu                                                              5 Im Geometrie-Workshop steht das Anwendungsfeld Geometrie im Vordergrund, nicht die Informatik. Die persönliche Bedeutsamkeit ist nicht vergleichbar mit den beiden genannten Workshops. Dennoch wurde bewusst der heimische Marktplatz als Szenario ausgewählt, um einen persönlichen Bezug zuzulassen. 298 Nadine Dittert, Eva-Sophie Katterfeldtii“proceedings” — 2017/9/17 — 20:19 — page 299 — #299iiiiii Das EduFab - Kit   23 betreiben ist bzw. aufgrund seiner vergleichsweise geringen Anschaffungskosten eventuell sogar Teil der Schulausstattung sein könnte. Nichtsdestotrotz ist ein EduFab-Workshop nicht vergleichbar mit einer Klassenraumsituation, in der eine Lehrkraft mit 25 Schüler*innen an Rechnern arbeitet.  Abb. 3: Skizze, Quellcode, Processing-Ergebnis und Stoffdruck einer Eiswaffel 5 Fazit und Ausblick Das EduFab-Kit bietet Lehrer*innen einen Zugang zum FabLab bzw. zu Technologien des FabLabs und Ideen für Workshops mit jungen Menschen. Die dargestellten Beispiele zeigen, dass es möglich ist, FabLab-Technologien zu nutzen, um jungen Menschen einen praktischen Zugang zur Informatik zu bieten, in dem ein (persönlich bedeutsames) Produkt entwickelt wird.  Am Ende eines EduFab-Workshops steht ein Produkt, das i.d.R. den Teilnehmenden am Ende gehört. Dieses Produkt kann getragen und gezeigt werden, wodurch wieder und wieder Anerkennung für die verrichtete Arbeit erfahren wird. Dennoch steht in EduFab- Workshops der Prozess im Vordergrund. Es wäre durchaus weniger kompliziert, fertige Designs aus dem Netz zu laden, oder mit Zeichenprogrammen zu modellieren und diese auf Taschen zu drucken. Mit hoher Wahrscheinlichkeit wären diese sogar ästhetischer Das EduFab-Kit – Ein modularer FabLab-Baukasten für Lehrer*innen 299ii“proceedings” — 2017/9/17 — 20:19 — page 300 — #300iiiiii 24 Nadine Dittert und Eva-Sophie Katterfeldt  als die programmierten Werke, die (insbesondere im vorgeschlagenen Zeitrahmen) einen eher stilistischen Charakter haben. Sie wären nur eben nicht selbst programmiert. Das EduFab-Kit hat den Anspruch, Wege und Möglichkeiten zu zeigen, mit heute zugänglichen Produktionsmaschinen Informatik „zu machen“.  Die bisherigen Beispielworkshops sind lediglich Einstiegworkshops, die bezüglich der Informatik das Potential der Maschinen im FabLab nicht ausreizen. Die Szenarien sind erweiterbar. So eignen sich Schleifen zur Erzeugung von sich wiederholenden Mustern, die hervorragende Taschen- oder Schmuckdesigns darstellen können. Für das Entwickeln interaktiver Gadgets befindet sich Mikrocontroller-Material in der SmartFab-Ebene. Schlussendlich sind die bisher vorhandenen Ebenen und Konzepte Vorschläge, die auch als Anregung für eigene Entwicklungen dienen sollen. Aus diesem Grund ist der Koffer modular gehalten. Das allgemeine Workshopkonzept lässt sich in diversen Settings anwenden und darf und soll für eigene Zwecke angepasst und verändert werden.  6 Danksagung Das Projekt EduFab wurde vom Bundesministerium für Bildung und Forschung gefördert. An der Implementierung und dem Design des Koffers war Marvin Lange maßgeblich beteiligt. Es basiert auf einer Arbeit unseres Kollegen Florian Lütkebohmert. Literaturverzeichnis [Di12] Dittert, N. et al.: TechKreativ: Tangible Interfaces in Lernwelten. In Robben, B. & Schelhowe H., eds. Be-greifbare Interaktionen  - Der allgegenwärtige Computer: Touchscreens, Wearables, Tangibles und Ubiquitous Computing. Bielefeld: transcript. 2012. [Ka15] Katterfeldt, E.-S. et al.: Designing digital fabrication learning environments for Bildung: Implications from ten years of physical computing workshops. International Journal of Child-Computer Interaction. 5, 3–10, 2015. [Pa80] Papert, S.: Mindstorms: children, computers, and powerful ideas. Basic Books, Inc. New York, NY, 1980.  [RS12] Robben, B.; Schelhowe, H.: Be-greifbare Interaktionen - Der allgegenwärtige Computer: Touchscreens, Wearables, Tangibles und Ubiquitous Computing. Transcript, Bielefeld, 2012. 300 Nadine Dittert, Eva-Sophie Katterfeldtii“proceedings” — 2017/9/17 — 20:19 — page 301 — #301iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017     15 3D-Druck als Motivation für die Einführung in die  Programmierung in der Realschule  Oliver Krisch1, Petra Kastl2 und Ralf Romeike3  Abstract:  3D-Drucker gehören derzeit zu den Informatiksystemen, die für die Schüler noch neu sind, Neugier hervorrufen und sich somit gut einsetzen lassen, um sie zu motivieren. Erschöpft sich die Nutzung eines 3D -Druckers allerdings allein im Herunterladen und Ausd rucken vorgeferti gter Modelle, haben die Schüler  aber wenig über Informatik gelernt. In diesem Beitrag wird eine Unter-richtssequenz von 7 Doppelstunden zum Erlernen grundlegender Programmierkenntnisse vorge-stellt , die die Programmierung dreidimensionaler O bjekte mithilfe von Turtle -Grafiken in Beetle  Blocks zum Ziel hat . Zudem sollte noch eine fächerübergreifende Verbindung zu den im Mathema-tikunterricht kennengelernten Funktionen geknüpft werden. Als Motivation diente das Erstellen ei-nes 3D -Körpers, der am  Ende der Sequenz mit Hilfe eines 3D -Druckers ausgedruckt werden sollte . Die dargestellten Erfahrungen zeigen, dass s ich die Schüler von der Idee begeistern lassen, die Ver-knüpfung mit mathematischen Grundlagen allerdings eine Herausforderung darstellt.   Keywords:  3D-Druck , Realschule, Programmierung , Beetle Blocks  1 Einleitung  Nachdem lange Zeit der wahrnehmbare technische  Fortschritt vor allem durch bessere Grafikleistungen bestimmt war, die in der Schule im Bereich der Computergrafik Schüle-rinnen und Schüler  motiviere n konnten, sind 3D-Drucker eine jüngere technische Ent-wicklung, die i.d.R. (noch) nicht im typischen Schülerhaushalt zu finden ist, aber durch erstaunliche  Ergebnisse Schüler, Kollegen und Eltern zu faszinieren weiß . An verschiede-nen Schulen werden deshalb  3D-Drucker angeschafft, um Schülern die beeindruckenden  Möglichkeiten des 3D -Drucks zu eröffnen. In der Praxis beschränkt sich die Verwendung von 3D -Druckern allerdings häufig auf das Konfigurieren des Druckers und das Ausdru-cken von aus dem Internet heru ntergeladenen vorgefertigten Modellen. Für die Nu tzung des fachübergreifenden Potenz ials im Informatiku nterricht wurden  bisher wenig überzeu-gende Beispiele publiziert. Im Folgenden  stellen wir ein Beispiel vor, in dem von Schülern algorithmisch erzeugte 3D -Modelle und deren 3D -Ausruck als Gegenstand und Motivie-rung der Einführung in die Programmierung herangezogen  werden . Dabei experimentie-1 Friedrich -Alexander -Universität Erlangen -Nürnberg, Didaktik der Informatik, Martensstr. 3, 91058 Erlangen,  oliver.krisch@fau.de  2 Friedrich -Alexander -Universität Erlangen -Nürnberg, Didaktik der Informatik, Martensstr. 3, 91058 Erlangen,  petra.kastl@fau.de  3 Friedrich -Alexander -Universität Erlangen -Nürnberg, Didaktik der Informatik, Martensstr. 3, 91058 Erlangen,  ralf.romeike@fau.de                                                             I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 301ii“proceedings” — 2017/9/17 — 20:19 — page 302 — #302iiiiiiren die Schüler mit ihnen aus dem Mathematikunterricht bekannte n Konzepte n, deren Ver-wendung in Verbindung mit einfachen algorithmischen Grundstrukturen erst die beein-druckenden Figuren ermöglicht und damit den Anwendungskontext außerhalb der Mathe-matik eröffnet.  2 Geometrische Formen und algorithmische 3D -Modelle  2.1 Turtlegrafik a ls Basis für algorithmische 3D -Modelle  Seymour Papert stellte  in den 1980 er Jahren mit Logo eine Programmierumgebung  vor, mit der Kinder geometrische Formen erkunden können , indem sie diese mit einfachen Programmieranweisungen  am Bildschirm selbst zeichnen . Papert [Pa82] unterstreicht mit dem von ihm gleichzeitig als Konstruktionismus vorgestellten Ansatz die Rolle des Schaf-fens konk reter Artefakte, die persönlich bedeutungs voll sind und  anderen gezeigt, erprobt und auch bewunde rt werden können . Der  als Tur tle-Grafik bek annte Ansatz liegt auch den folgenden Beispielen zugrunde, allerdings erweitert auf den dreidimensionalen  Raum: Die Ausgabe des 3D -Druckers bzw. deren virtuelle Darstellung entspricht dem nachgezeich-neten Weg der Schildkröte in Logo oder dem Stift eines Objekts in Scratch.  Viele Gegenstände des alltäglichen Lebens  lassen sich  aus mathematischen Körpern und Formen aufbauen , welche sich sehr gut als Grundlage für Turtle -Grafiken eignen . Aus-gangspunkt in unserem Beispiel war ein Salzstreuer, dess en Form einem Hyperboloid mit der Formel x²5,5²−y22,52=1 ähnelt (vgl. Abb. 1) und die zugrundeliegende Idee, Körper aus mathematischen Funktionen  zu erstellen und  mit einem 3D -Drucker auszudrucken. Zur Umsetzung wurde die blockorientierte Programmiersprache Beetle Blo cks [KR12] ver-wendet.   Abb. 1: Salzstreuer – Hyperboloid als Vorlage für 3D -Objekte.   302 Oliver Krisch, Petra Kastl, Ralf Romeikeii“proceedings” — 2017/9/17 — 20:19 — page 303 — #303iiiiii 3D-Druck als Motivation für die Einführung in die Programmierung in der Realschule     17 Für den vorliegenden Salzstreuer diente der Kreis als Ausgangsfigur. Die Schülerinnen und Schüler erzeugten die K reislinie mit Hilfe der Formel 𝑟𝑟2=𝑥𝑥2∙𝑦𝑦2. Diese stellten sie zuerst um zu 𝑦𝑦=±√𝑟𝑟2−𝑥𝑥2 und teilten das Zeichnen des Kreises auf in das Zeichnen zweier Halbkreise. Damit konnten die Schülerinnen und Schüler nun einen Zylinder zeich-nen, indem sie die Höhe z langsam erhöhten. In einem zweiten Schritt lernten sie dann den Radius der einzelnen Kreise in Abhängigkeit von der Höhe zu verändern. Dies geschah exemplarisch erst durch einfache mathematische Operationen, die dann im Verlauf der Stunde durch komplexere  ersetzt wurden. Der Vorteil, den Körper aus einzelnen Schichten aufzubauen, liegt darin, dass der 3D -Drucker seine Objekte auch durch Hinzufügen ein-zelner Schichten aufbaut. Die Schülerinnen und Schüler konnten so im Vorfeld sehen, wie aus einzelnen Schic hten der Gesamtkörper entsteht.  2.2 Visuelle Programmierung mit Beetle  Blocks  Mit der Einführung von Scratch [MRR10] wurde die Einstiegshürde für Programmieran-fänger deutlich gesenkt, was insbesondere den Schülerinnen und Schülern an der Real-schule sehr entgeg en kommt. Durch die visuelle Darstellung der programmierten Objekte auf der Bühne wird die Programmierung im Sinne Paperts ‘ Konstruktionism us unmittelbar erfahrbar, die multimediale Bandbreite ermöglicht de n Schülerinnen und Schülern persön-lich bedeutsame Ideen umzusetzen und die Folgen ihrer Programmierentscheidungen un-mittelbar nachzuvollziehen. Durch die Repräsentation der Anweisungen als Blöcke wer-den zudem Syntaxfehler vermieden und die zur Verfügung stehen den Programmierkon-strukte sind unmittelbar zur  Auswahl präsent. So wie Strecker [St15] auf der INFOS 2015 über den Einsatz grafischer Programmiersprachen im Abitur berichtete, überzeugt der vi-suelle Zugang aufgrund seiner Intuitivität und leichten Bedienung auch in der Realschule. Koschitz und Rosenba um [KR12] übertragen nun die Konzepte und Bedienung von Scratch und die Idee der Turtle -Grafik unter Verwendung von Snap [HM10] in den drei-dimensionalen Raum. Mit Beetle Blocks4 können mit Hilfe der algorithmischen Grund-strukturen dreidimensionale Objekte programmiert  werden, die anschießend als 3D -Mo-dell exportierbar sind und mittels eines 3D -Druckers ausgedruckt werden können. Algo-rithmische, mathematische und künstlerische Objekte können somit unmittelbar „erfass-bar“ werden. Im Unterricht haben wir gute Erfahrungen gemacht mit Schmuck, Alltags-gegenständen wie Vasen und Schalen und künstlerischen Figuren  (vgl. Abb. 7). Das Po-tenzial eines an solchen Zielen orientierte n Unterrichts liegt darin, dass auch vordergrün-dig nicht an der Programmierung interessierte Schülerinnen und Schüler durch die krea-tive Erstellung von Produkten, die so erstmal nicht im Informatikunterricht erwartet wird, motiviert  werden können.  4 http://beetleblocks.com/                                                             3D-Druck als Motivation für die Einführung in die Programmierung in der Realschule 303ii“proceedings” — 2017/9/17 — 20:19 — page 304 — #304iiiiii 18    Oliver Krisch, Petra Kastl und  Ralf Romeike    Abb. 2: Beetle  Blocks.  3 Umsetzung  3.1 Kontext und Einordnung  Spätestens i n der zehnten Klasse an bayerischen Realschulen lernen die Schüler im Modul „Modellierung und Codierung von Algorithmen“ des Lehrplans für das Fach Informati-onstechnologie die Grundstrukturen Sequenz, Auswahl und Wiederholung kennen und anzuwenden. Ein wei terer Punkt ist die Implementierung von Algorithmen mit einem ge-eigneten Programmierwerkzeug. Die Motivierung der Schüler ist  hierbei  ein wesentliches Anliegen des U nterricht s. Entsprechend haben sich d ie zum Erlernen verwendeten Pro-grammiersprachen im Lau fe der Zeit gewandelt. So wurde an unserer  Schule zuerst die Programmiersprache Pascal verwendet. Um einen größeren Anreiz zu schaffen, sind wir dann auf Delphi umgestiegen. Mit Delphi haben die Schüler am Ende der Unterrichtss e-quenz einen Taschenrechner o der Getränkeautomaten programmiert und dabei die neu er-worbenen Fähigkeiten in einem komplexeren Kontext angewandt . So ein selbst program-mierter Taschenrechner motivierte schon etwas, weckte aber in der Schülergruppe auch keine Begeisterungsstürme. Grund d afür war zum einen  die doch sehr statische Interaktion mit selbige m und zum anderen  die hohe Fehlerquote wegen syntaktischer Fehler. Geändert 304 Oliver Krisch, Petra Kastl, Ralf Romeikeii“proceedings” — 2017/9/17 — 20:19 — page 305 — #305iiiiiihat sich das Ganze mit der Einführung der visuellen Programmiersprache Scratch. Mit dieser Programmiersprache konn ten die Schüler sehr schnell und ohne syntaktische Fehler zu einem ansprechenden Ergebnis kommen. Die ersten kleinen Spiele waren sehr schnell programmiert und konnten mit nach Hause genommen werden. Mit Beetle Blocks verhielt es sich ebenso wie mit Scratc h. Mit ein paar Befehlen konnten die Schülerinnen und Schü-ler sehr schnell den Käfer über den Bildschirm bewegen. Dies sorgte für Erheiterung in der Gruppe.  3.2 Unterrichtsziele  und -gliederung  Ziel des Unterrichts war es, aus einfachen mathematischen Grundfor men, wie z.  B. Kreis, Quadra t oder gleichseitigem  Dreieck, dreidimensionale Objekte zu entwickeln und diese zu programmieren. Als Vorlage konnten die Schüler sich an bekannten Gegenständen des täglichen Lebens orientieren, gleichfalls durften sie ihre 3D-Körper frei wählen , da sie unterschiedliche Vorstellungen hatten, welchen Gegenstand sie gern kreieren wollten . Ein Ziel hierbei  war auch, dass den Schülerinnen und Schülern die Möglichkeit gegeben werde sollte, selbständig ihre eigene Kreativität zu nutzen  und eigene Vorstellungen umzusetzen.  Hierzu  mussten die Schüler ihre Kenntnisse aus der Geometrie heranziehen. Für die Grundformen kamen neben dem allseits bekannten Satz des Pythagoras auch weitere grundlegende Kenntnisse, wie z. B. das Teilungsverhältni s der Höhen in einem gleichsei-tigen Dreieck, zum Einsatz. Mit diesem Wissen waren dann die Grundformen sehr schnell erstellt.  Für die dritte Dimension kamen mathematische Funktionen zum Einsatz: Mit Hilfe von Sinus, Kosinus und anderen Funktionen wurd e die Größe der Grundformen in Abhängig-keit von der Höhe verändert, um den Objekten eine schöne geschwungene Form zu geben.  In Abb. 3 sieht man eine eingefärbte Schnecke, die aus gleichseitigen Dreiecken aufgebaut ist. Bei der Schnecke wurde die Seitenlänge sukzessive konstant verkleinert.    Abb. 3: Schnecke aus gleichseitigen Dreiecken.  3D-Druck als Motivation für die Einführung in die Programmierung in der Realschule 305ii“proceedings” — 2017/9/17 — 20:19 — page 306 — #306iiiiii 20    Oliver Krisch, Petra Kastl und  Ralf Romeike   Der Unterricht gliedert  sich in 3 Phasen:  1. Kennenlern en der algorithmischen Grundstrukturen Sequenz und Wiederholung  und Anwendung/Übung mit der Programmiersprache Beetle  Blocks. Hierbei erstellen die Schülerinnen und Schüler einfache geometrische Figuren , wie z. B. Rechtecke oder Quadrate  (3 Doppelstunden)   2. Erweiterung in die dritte Dimension , indem  die Schüler die einfachen geomet rischen Figuren als Turm aufbau en (1 Doppelstunde)   3. Mathematische  Veränderung  des Turms  (3 Doppelstunden)  3.3 Unterrichtsverlauf und Beobachtungen  Bei der 10. Klasse handelte es sich um Schülerinnen und Schüler aus dem wirtschaftlichen Realschulzweig. Daher  war die  anfängliche  Begeisterung der Schülerinnen und Schüler Programmieren zu lernen nicht gerade sehr groß. Dass das Ganze dann auch noch mit dem allseits geliebten Fach Mathemati k verknüpft werden sollte , trug  auch  erstmal nicht gerad e zur Motivationssteigerung bei. Dies zeigte sich  z. B. in der  Aussage der Schülerin C.: „Ich kann eh kein Mathe und jetzt muss ich auch noch damit Programmieren lernen.“ Entspre-chend  gestalteten sich  die Anfangsstunden etwas zäh. Die Schülerinnen und Schüler soll-ten zuerst einmal den Begriff „Sequenz“ kennen und anwenden lernen. Dazu program-mierten wir einfache geometrische Figuren, wie z.  B. ein Rechteck. Etwas aufwändiger war die Programmierung eine s gleichseitigen Dreiecks, da hier mit Hilfe des Satzes von Pythagoras die Koordinaten des dritten Eckpunkt s erst einmal berechnet werden mussten.  Die vierte Doppelstunde war für di e Schülerinnen und Schüler etwas leichter, da h ier nur die bis dahin nicht  verwendete Variable z  neu hinzukam . Bis zu diesem Zeitpunkt sind sie noch ohne die Wiederholung ausgekommen. Bei der Erstellung des Turms haben die Schülerinnen und Schüler die Höhe ihres Turms durch wiederholte Erhöhung der Variable z mit einer Zählersch leife realisiert.  306 Oliver Krisch, Petra Kastl, Ralf Romeikeii“proceedings” — 2017/9/17 — 20:19 — page 307 — #307iiiiii Abb. 4: Ausdruck eines Beetle Block -3D-Modells mit einem Ultimaker 2.  Ab der fünften Doppels tunde stieg die Motivation der Schülerinnen und Schüler  deutlich an. Ich habe einen von mir mit dem 3D -Drucker ausgedruc kten Körper mitgebracht und den Schülerinnen und Schülern versprochen, ihre Objekte  auch mit dem 3D -Drucker aus-zudrucken. Nach dem konstruierenden Einstieg im Sinne des bottom -up verfolgte der wei-tere Unterricht nun einen experimentell -dekonstruierenden An satz. Hierzu wurden  den Schülerinnen und Schülern verschiedene Methoden in Form von Beetle  Blocks -Blöcke n zum Experimentieren  zur Verfügung gestellt, die zusätzlich zu den  von den Schülerinnen und Schülern entwickelten Blöcke n die Möglichkeit bereitstellten, dass die geometrischen Figuren noch um einen Winkel α gedreht werden konnten  (vgl. Abb. 5).    Abb. 5: Program mierung des Turms unter Verwendung eines vorgegeben Blocks (rechts).  Der Grund für die Bereitstellung war, dass die Schülerinnen und Schüler die zugrunde  liegende mathematische Modellierung noch nicht im Ma thematikunterricht behandelt hat-ten. Außerdem ist die Zeit mit sieben Doppelstunden knapp bemessen und es sollte den Schülerinnen und Schülern die Möglichkeit gegeben  werden , mehr Zeit auf die Entwick-lung ihrer eigenen 3D -Objekte  zu verwenden.  Dabei vertieften sie die bis dahin erlernte Vorgehensweise übe r den Aufbau der einzelnen Körper aus Schichten.  Im Laufe der Zeit 3D-Druck als Motivation für die Einführung in die Programmierung in der Realschule 307ii“proceedings” — 2017/9/17 — 20:19 — page 308 — #308iiiiiiänderte sich auch die Einstellung der Schülerin C. Mit Aussagen wie  „Welche mathema-tische Funktion gibt es noch, die ich ausprobieren kann ?“ wollte C. immer weitere  Varia-tionen ihres Turms ausprobieren. So kamen nicht nur einfach gedrehte Türme heraus, son-dern auch z.  B. kleine Schalen.  Andere Schülerinnen und Schüler bauten ineinander  ge-schachtelte Körper.     Abb. 6: Schüler ergebnisse: Vari ationen der Türme.  Das in meinen Augen schönste Modell kreierte Schülerin C. Ein Schneckenhaus, welches aus gedrehten, gleichseitigen Dreiecken besteht, die nach oben immer eine kleinere Sei-tenlänge besitzen  (vgl. Abb. 3). Alle Ergebnisse wurden dann mit einem 3D -Drucker aus-gedruckt und konnten von den Schülerinnen und Schülern mit nach Hause genommen werden . 4 Fazit und Ausblick  Als Resümee lässt sich  feststellen, dass die Motivation der Schülerinnen und Schüler stieg, als klar wurde, dass die 3D -Objekte, die sie programmierten, dreidimensional ausgedruckt werden sollten. Ihr Engagement, sich mit dem Erlernen von Programmierstrukturen zu beschäftigen, war vor diesem Zeitpunkt vergleichbar mit  dem einer Gruppe, die mit Scratch das Programmieren erlernt. Auch in der Geschwindigkeit des Erlernens konnte kein Unters chied zu Scratch  festgestellt werden.  Bei den ersten geometrischen Grundfiguren wurde es schwieriger. Die Sc hülerinnen und Schüler konnten zwar noch ohne Probleme die Koordinaten der Ecken eines Quadrates berechnen, aber bei einem gleichseitigen Dreieck ergaben sich gravierende Probleme. Hier muss für die Zukunft eine andere Vorgehensweise, mit einfacheren mathe matischen Mit-teln gefunden und erprobt werden. Die Anwendung der Mathematik wich hier doch von dem gewohnten Umgang im Mathematikunterricht ab. Vielleicht haben an dieser Stelle Schülerinnen und Schüler aus dem mathematischen Zweig oder am Gymnasium wenige r Schwierigkeiten. Eine Gruppe aus zwei Schülern ist hier etwas anders vorgegangen. An-statt die Koordinaten zu berechnen, haben sie ein gleichseitiges Dreieck auf einem Blatt Papier konstruiert, ungefähr in den Schwerpunkt des Dreiecks den Ursprung des Koo rdi-natensystems gelegt und die Koordinaten des gleichseitigen Dreiecks abgelesen. In der 308 Oliver Krisch, Petra Kastl, Ralf Romeikeii“proceedings” — 2017/9/17 — 20:19 — page 309 — #309iiiiiidritten Dimension konnten die beiden Schüler  dann aber nicht mehr die Größe der Seite verändern.   Abb. 7: Vase, Kunstobjekt und Schnecke aus d em 3D -Drucker.  Der Weg in die dritte Dimension war hingegen wieder einfacher. Da die Grundfiguren so programmiert waren, dass ihr e Größe von der Seitenlänge abhängt, konnte diese sehr leicht mit Hilfe von mathematischen Funktionen verändert werden. Die Sch ülerinnen und Schüler ließen hier ihrer Kreativität freien Lauf. Sie konnten dabei die Funktionen, die sie bis jetzt kennengelernt hatt en, anwenden. In diesem Schritt variierten ein paar Schüler die Dicke der Linien, die vom Käfer gezeichnet wurden. Eine a ndere Schülergruppe verän-derte mit der Höhe auch die Farbe der gezeichneten Linien. Zwei Schülerinnen haben ihr e 3D-Körper mit einer Bodenplatte versehen, um eine Vase zu erhalten. Dieser Teil hat den Schülerinnen und Schülern besonderen Spaß gemacht. Eine  Verknüpfung mit anderen Modulen aus dem Lehrplan, z. B. mit Arduinos (Modul: Mikrocontroller)  als Steuerung für eine Leuchte  (vgl. Abb. 7), wäre gut vorstellbar.  Für die Wiederholung der Unterrichtssequenz empfiehlt es sich,  die Erstellung der Grund-figuren zunächst mit einfacheren mathematischen Mitteln aus zuprobieren. Die Verknüp-fung der Höhe mit mathematischen Funktionen hat sich bewährt . Hier seh en die Schüle-rinnen  und Schüler , dass die Mathematik nicht nur trocken ist, sondern auch eine Anwen-dung hat, um der eigenen Kreativität Raum zu geben und neue Gegenstände zu entwickeln. Ein weiterer neuer Ansatzpunkt wäre, reale Gegenstände (vgl. Salzstreuer) in mathemati-sche Grundkörper zu zerlegen und diese nachzuprogrammieren. In diesem Ansatz wäre wieder eine Verknüpfung zum Modul  „Technisch Zeichnen “ gegeben.  3D-Druck als Motivation für die Einführung in die Programmierung in der Realschule 309ii“proceedings” — 2017/9/17 — 20:19 — page 310 — #310iiiiii 24    Oliver Krisch, Petra Kastl und  Ralf Romeike   Literaturverzeichnis  [HM19]  Harvey, B.  and Mönig , J.: Bringing “no ceiling” to scratch: Can one language serve kids and computer scientists. Proc. of Constructionism Paris, 2010.  [KR12]  Koschitz , D., and Rosenbaum, E.: Exploring algorithmic geometry with “beetle blocks:” a graphical programming la nguage for g enerating 3d forms.  15th International Confer-ence on Geometry and Graphics Proceedings, Montreal. 2012.  [MRR10]  Maloney, J., Resnick,  M., Rusk, N., Silverman, B., Eastmond, E. : The scratch program-ming language and environm ent. ACM Transactions on Comput ing Education (TOCE), 10(4), 16, 2010.  [Pa82]  Papert, S.: Mindstorms: Kinder, Computer und Neues Lernen. Birkhäuser Verlag, Basel, 1982.   [St15]  Strecker, K.: Grafische Programmiersprachen im Abitur. In: Gallenbacher, J. (Hrsg.): INFOS 2015: Informatik allgemeinbildend begreifen (16. GI -Fachtagung Informatik und Schule, Darmstadt). Bonn: Köllen, 2015 .   310 Oliver Krisch, Petra Kastl, Ralf Romeikeii“proceedings” — 2017/9/17 — 20:19 — page 311 — #311iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 1Nutzung eines Robotiksystems zur Förderung derBerufssprache DeutschMichael Brinkmeier1, Stanislav Pisarenko2Abstract: Schulen und Lehrkräfte stehen vor der Aufgabe, jugendlichen Flüchtlingen sowohl sprach-liche als auch beruﬂiche Kompetenzen zu vermitteln. Im Projekt Berufssprache Deutsch wurdenMethoden und Konzepte entwickelt, die beides miteinander verknüpfen. Darauf basierend entstand eineUnterrichtsreihe, die informatische Inhalte mit Sprachunterricht verbindet, und in einer Lerngruppepraktisch erprobt wurde. Die Verwendung des Roboters Thymio II und einer visuellen Program-miersprache ermöglichte dabei die explorative Vermittlung von Prinzipien der Programmierungund Automaten. Durch die gezielte Koppelung von fachlichen Aufgaben mit sprachlichen Aufgabenund Plenumsdiskussionen zu den erarbeiteten Lösungen konnten die Schülerinnen und Schüler ihrefachlichen und sprachlichen Kompetenzen koppeln und als Experten miteinander kommunizieren.Problem- und handlungsorientierte Aufgaben förderten zudem die Kommunikation zwischen denTeilnehmern.Keywords: Roboter, Thymio, Robotik im Unterricht, Sprachlernklassen, Mealy-Automaten, VisuelleProgrammiersprachen, Berufssprache Deutsch1 EinführungDie erhöhte Anzahl von jugendlichen Flüchtlingen, die in den letzten Jahren nach Deutsch-land kam, stellt das Bildungssystem und konkret die Schulen und Lehrkräfte vor großeHerausforderungen. Einerseits müssen die Schülerinnen und Schüler die deutsche Spracheerlernen. Zum anderen sollen sie möglichst schnell fachlich und beruﬂich qualiﬁziertwerden. Letzteres ist aber aufgrund der geringen Sprachkenntnisse und der gebrochenenBildungsbiographien besonders schwierig. Integrative Konzepte, wie das des ProjektesBerufssprache Deutsch [Be13 ], bieten hier Ansätze, um parallel fachliche und sprachlicheKompetenzen zu vermitteln.Die hier beschriebene Einheit verwendet diesen Ansatz, um in einer Sprachlernklasse 3einerseits Inhalte der Informatik und Technik zu vermitteln und gleichzeitig den fachlichenBezug für Sprachübungen zu nutzen. Ein besonderer Schwerpunkt soll dabei auf derErzeugung von fachbezogenen Anlässen zur verbalen Kommunikation liegen, indem die1Universität Osnabrück, Institut für Informatik, Wachsbleiche 27, 49040 Osnabrück, mbrinkmeier@uni-osnabrueck.de2BBS Technik Cloppenburg, Lankumer Feldweg, 49661 Cloppenburg, Stanislav.Pisarenko@bbst-clp.de3Details dazu in Abschnitt 4.I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 311ii“proceedings” — 2017/9/17 — 20:19 — page 312 — #312iiiiiiSchülerinnen und Schüler gemeinsam an Problemlösungen arbeiten. Dabei ist es von großerBedeutung, dass sie sich die fachlichen Aspekte ohne große sprachliche Barrieren erschließenkönnen. Um dies zu erreichen, wird der Roboter Thymio II [ th17b ] verwendet. Er kann mittelsder rein ikonographischen und visuellen Programmiersprache VPL programmiert werden,wodurch ein sehr leichter Einstieg ermöglicht wird. Dadurch können die Schülerinnen undSchüler sich im ersten Schritt auf die Aneignung der fachlichen Kompetenzen konzentrieren.Im Anschluss erfolgt jeweils eine sprachliche Fixierung und Vertiefung der gelerntenInhalte, entweder in Form kurzer Texte, einer verbalen Diskussion oder Übungen zugrammatikalischen Strukturen, wie z. B. Konditionalgefügen. Durch die Bearbeitung o  enerund experimenteller Aufgabestellungen ergeben sich für die Schülerinnen und SchülerGelegenheiten zur fachbezogenen, verbalen Kommunikation. Daher ist ein Schwerpunktder Evaluation die Beobachtung, ob diese tatsächlich genutzt werden, und ob sie zu eineraktiven Verwendung von Fachbegri  en beiträgt.Die Einheit wurde in drei Tagesblöcken von jeweils sechs Stunden an einer berufsbildendenSchule durchgeführt. Zur Evaluation wurden verschiedene qualitative Methoden herangezo-gen. Neben Beobachtungsbögen zur Häuﬁgkeit der verbalen Kommunikation, die von zweiLehrkräften ausgefüllt wurden, wurde an jedem Tag das Feedback der Schülerinnen undSchüler sowie eine abschließende Beurteilung eingesammelt. Ergänzt wurde die Evaluationdurch ein Kurzinterview mit einer über die gesamte Zeit anwesenden, beobachtendenLehrkraft.2 Berufssprache DeutschDas Projekt Berufssprache Deutsch des Staatsinstituts für Schulqualität und Bildungsfor-schung München (ISB) beschäftigt sich mit der berufsspeziﬁschen Sprachförderung vonJugendlichen (16-20 Jahre) in der Ausbildung oder in Klassen der Berufsorientierungund Berufsvorbereitung [ Be13 ,SRG13 ]. Im Rahmen des Projektes wurde eine Reihe vonMaterialien und Konzepten entwickelt, die die Grundlage der hier dargestellten Unterrichts-sequenz bilden [ St15,Le10 ]. Ihre vier Hauptkomponenten sind in Tab. 1 dargestellt (vgl.[Be13, S.2].DasSprachhandeln basiert auf einer beruﬂichen oder fachlichen Handlungssituation inKombination mit sprachlichen Anforderungen. Die Lerngruppe soll sich durch die moti-vierend wirkende, beruﬂich orientierte Aufgabenstellung sprachlich ausdrücken. Über dieUnterrichtsgestaltung unterstützt die Lehrkraft die Lernenden mit eine bedarfsgerechten,kontinuierlichen und zielgerichteten Methodik. Die Formulierung von Aufgaben, Rück-meldungen und Lösungen muss in einer sprachsensiblen Unterrichtssprache erfolgen.Dies wird unter anderem durch einheitliche Arbeitsaufträge, Verwendung kurzer Sätze undalltagssprachlicher Wendungen erreicht [ St15, S. 10]. Die Identiﬁkation von Förderschwer-punkten ermöglicht an die Lerngruppe angepasste Hilfestellungen. Im Fokus stehen hierbeidie Art der Aufgabenstellung, das Lerntempo und Formen des kooperativen Lernens.312 Michael Brinkmeier, Stanislav Pisarenkoii“proceedings” — 2017/9/17 — 20:19 — page 313 — #313iiiiiiIntegrierte SprachbildungSprachhandeln: Handlungs- undRealitätsbezugSprachsensible Unterrichtsgestaltung durchangepasste Methodik(sprachliches Wissen und kommunikativesHandeln)(Methoden, Strategien, Arbeitstechniken)Konzentration auf Förderschwerpunkte Sprachsensible Unterrichtssprache(Umgang mit Heterogenität,Binnendi  erenzierung)(Aufgabenstellung, Rückmeldung)Tab. 1: Unterrichtskonzept Berufssprache DeutschIn [St15] werden zusätzliche Aspekte thematisiert, die im Rahmen der vorliegenden Arbeitvon Bedeutung sind. Streinz weist darauf hin, dass in Fällen von Flüchtlingen Traumatavorliegen können, die ein konzentriertes Lernen erschweren [ St15, S. 8]. SpielerischeHerangehensweisen können dies durchbrechen und die Kreativität der Lerner gezielt fördern.Hinzu kommt, dass ein nicht zu vernachlässigender Anteil der Jugendlichen bislang nochnie beschult worden ist oder nur Frontalunterricht kennengelernt hat. Dadurch ergeben sichbesondere Probleme bei der selbstständigen Arbeit und o  eneren Aufgaben.In [Le10 ] wird eine Reihe von Methoden zur Kombination von Fach- und Sprachlernenvorgestellt. Leisen formuliert dort auch drei Grundthesen für sprachsensiblen Fachunterricht[Le10, S. 6, 22]:• Die Lerner werden in fachlich authentische, bewältigbare Sprachsituationen gebracht.• Die Sprachanforderungen liegen knapp über dem individuellen Sprachvermögen.• Die Lerner erhalten so wenige Sprachhilfen wie möglich, aber so viele, wie individuellzum erfolgreichen Bewältigen der Sprachsituationen nötig.Im informatischen Bereich ist außerdem der Wechsel zwischen sprachlichen, symbolischenund mathematischen Darstellungen von fachlichen Sachverhalten von Bedeutung:Die Methode Wechsel der Darstellungsform 4, hilft den Anschauungsgrad über verbalsprach-liche Texte zu erhöhen und die Nutzung wird aus fachlichen, didaktischen, methodischen,lernpsychologischen und pädagogischen Gründen zwingend empfohlen (vgl. [ Le10 , S.37]).3 Der ThymioDie Behandlung informatischer Themen ist in der Regel sehr sprachlastig. Dies beruht zumeinen auf der Verwendung von textuellen Programmiersprachen, als auch der notwendigenBeschreibung von algorithmischen Abläufen oder Funktionsweisen informatischer Systeme.Daher erscheint eine möglichst sprachunabhängige Einführung schwierig. Dies ist auch fürdie meisten graﬁschen Programmiersprachen der Fall.4Damit ist der Übergang zwischen der sprachlichen, symbolischen und mathematischen Darstellung gemeint.Nutzung eines Robotiksystems zur Förderung der Berufssprache Deutsch 313ii“proceedings” — 2017/9/17 — 20:19 — page 314 — #314iiiiiiAbb. 1: Der Thymio II und eine Regel in VPL: Wenn „links“gedrückt wird, dann leuchte rot.Abb. 2: Umsetzung einer VPL-Regel in den Übergang eines Mealy-AutomatenIm Rahmen der hier vorgestellten Einheit wird der Thymio II [ th17b ] – ein für didakti-sche Zwecke entworfener Roboter – verwendet, der bereits erfolgreich eingesetzt wurde[Ma15 ,Ma14 ,Ro15 ]. Insbesondere die für ihn entworfene graﬁsche ProgrammierspracheVPL [ th17a ] zeichnet sich dadurch aus, dass sie vollständig auf Schriftsprache verzichtet.Die Programmierung des Roboters erfolgt in der einfachsten Variante in Form von Konditio-nalgefügen, die aus einer Bedingung und einer sich daraus ergebenden Aktion bestehen (vglAbb. 1). Auch wenn diese Form der Programmierung als sehr einfach erscheint, bietet siebereits eine Vielzahl von Möglichkeiten. Durch die Verwendung eines internen Speichersund LEDs zur Visualisierung werden die Möglichkeiten deutlich erweitert und es wirdmöglich, das Verhalten des Thymio durch Mealy-Automaten zu modellieren [ Wi16 ] (vgl.Abb 2).4 LerngruppeDie Lerngruppe bestand im Untersuchungszeitraum aus neun jugendlichen Flüchtlingen,vier Mädchen und fünf Jungen, aus verschiedenen Ländern. Vier von ihnen waren seitungefähr einem halben Jahr in der Gruppe, vier seit ca. zwei Monaten und einer erstseit wenigen Wochen. Die schulische Vorbildung war sehr inhomogen, ebenso wie dieAltersstruktur (16-20 Jahre). Der Unterricht fand in wöchentlichen Blöcken von je sechsSchulstunden statt. Ziel war es, den Schülerinnen und Schülern praktische Erfahrungen imBereich der technischen Berufe und die Berufs- und Fachsprache Deutsch zu vermitteln. DieLerngruppe wurde regulär von zwei Lehrkräften unterrichtet. Die beschriebene Sequenzwurde von einer der Lehrkräfte (dem zweiten Autor) in einem Zeitraum von drei aufeinanderfolgenden Wochen durchgeführt, während die andere Lehrkraft nur als Beobachter fungierte.314 Michael Brinkmeier, Stanislav Pisarenkoii“proceedings” — 2017/9/17 — 20:19 — page 315 — #315iiiiiiAlle Schülerinnen und Schüler waren nicht in der Lage, ﬂüssig auf Deutsch zu kommu-nizieren oder frei zu sprechen. Sie konnten einfache alltägliche Ausdrücke und Sätzeverstehen und formulieren. Fach- und Berufssprache war ihnen weitgehend unbekannt.Das Erkennen und Verwenden von grammatikalischen Strukturen ﬁel ihnen sehr schwer.Außer grundlegenden Anwenderkenntnissen hatten alle Schülerinnen und Schüler keinerleiErfahrung mit Informatiksystemen. Keiner von ihnen hatte vorher programmiert oder mitRobotern gearbeitet.5 Methodik der EvaluationAufgrund der geringen Zahl der Teilnehmer wurden bei der Evaluation der Interventionqualitative Methoden verwendet. Im Rahmen einer teilnehmenden Beobachtung [ DBP16 , S.323] durch die zwei Lehrkräfte wurde dabei ein besonderer Fokus auf die Häuﬁgkeit und dieQualität der Kommunikation gelegt. Beide Beobachter protokollierten ihre Beobachtungenauf einem Erfassungsbogen. Dabei wurde aufgaben- bzw. phasenweise erfasst, ob einefachbezogene Kommunikation stattfand, ob Fachbegri  e benutzt wurden oder ob fachfremdeThemen erörtert wurden. Um eine Beeinﬂussung des Ergebnisses durch die Beobachtungauszuschließen, wurde den Schülerinnen und Schülern nicht mitgeteilt, wo der Schwerpunktder Beobachtung lag [At08, S. 101].Am Ende jedes der drei Tage war geplant, die Meinung der Schülerinnen und Schüler mittelsKartenfeedback abzufragen [ Me15 ]. Dabei sollten sie kurze, schriftliche Antworten zuvorformulierten Fragen geben. Bei der ersten Durchführung wurde jedoch festgestellt, dasslediglich kurze, nicht wesentlich von vorgegebenen Phrasen abweichende Formulierungen,wie z.B. „weil ich gut ﬁnde“, genutzt wurden. Ausführlichere Antworten wurden nicht gege-ben. Da die Verbalisierung Sprachanfängern deutlich leichter fällt als das Verschriftlichen[Le10 , S. 22], wurden daher an den beiden folgenden Tagen die Fragen projiziert und dieSchülerinnen und Schüler nacheinander befragt. Am dritten Tag wurde diese Befragungdurch eine Gruppendiskussion über die gesamte Einheit ergänzt und die Äußerungenprotokolliert.Im Anschluss an die Einheit wurde ein Experteninterview mit der zweiten, beobachtendenLehrkraft geführt [ DBP16 , S.365]. Da diese Lehrkraft – gemeinsam mit der durchführendenLehrkraft – die Klasse regulär unterrichtet, konnte so eine unabhängige Beurteilung dererzielten E  ekte erreicht werden. Es handelte sich um ein halb-strukturiertes Interview[DBP16, S. 372], bei dem zwei Fragen gestellt wurden:• Wie ist der Gesamteindruck hinsichtlich der Motivation?• Eignet sich der Thymio, um in einer sprachinhomogenen Schülergruppe eine anlass-und themenbezogene Kommunikation zu fördern?Nutzung eines Robotiksystems zur Förderung der Berufssprache Deutsch 315ii“proceedings” — 2017/9/17 — 20:19 — page 316 — #316iiiiiiProblemstellungentdeckenVorstellungentwickelnLernmaterialbearbeitenLernproduktdiskutierenLernzugewinndefnierenSicher werdenund¨ubenSprachliche&Fachliche KompetenzenLernumgebungThymioVideo zeigen (Problem- bzw.Aufgabenstellung)Hypothesenbildung bzw.ProblemformulierungLernaufgabeFormulierungKompetenzzuwachs¨Ubungs- bzw.VertiefungsaufgabenAufgabenstellung)Video zeigen (Problem- bzw.Abb. 3: Schrittfolge im Lernprozess basierend auf Leisen [Le10, S. 74]6 Der UnterrichtsaufbauJede der drei evaluierten Sitzungen, im Umfang von jeweils sechs Schulstunden, wurdeentlang der von Leisen (vgl. [ Le10 , S. 74]) entwickelten, lernpsychologisch begründetenSchrittfolge geplant und durchgeführt (Abb. 3). 5Damit wird beabsichtigt, den fachlichenund den sprachlichen Kompetenzzuwachs miteinander zu verbinden. In der ersten Phasesollen die Schülerinnen und Schüler die Problemstellung entdecken 6. Dabei wird gezieltdas nonverbale Medium des Videos genutzt. Es wird eine Problemsituation gezeigt, die vonden Schülern gelöst werden. Das Video endet in allen Fällen mit einer kurzen, schriftlichenFrage, die als Impuls für die folgenden Arbeitsphasen dient. Im Anschluss daran wird derArbeitsauftrag von den Schülern selbst schriftlich ausformuliert. Um dies zu unterstützen,erhielten die Schülerinnen und Schüler gestufte Hilfestellungen in Form von Wortlisten oderBlockdiagrammen (vgl. Abb. 4). Die in Einzelarbeit erarbeiteten Beschreibungen werdenmit einem Partner abgeglichen und anschließend im Plenum vorgestellt.Durch die Verschriftlichung wird die Entwicklung von Vorstellungen und eine erste Hypo-thesenbildung hinsichtlich der Problemlösung gefördert. Diese wird in den ersten SchrittenderBearbeitung des Lernmaterials fortgeführt und um praktische Tätigkeiten erweitert.Die Lernaufgaben sind dabei entdeckend, experimentell und handlungsorientiert gestaltet.Sie orientieren sich zum Teil an den in [ Ro15 ] vorgestellten Aufgaben. Entsprechend derStruktur der graﬁschen Programmiersprache VPL werden dabei häuﬁg Konditionalgefüge(Wenn-dann-Sätze) genutzt (vgl. Abb. 5). Im Anschluss an die Bearbeitung der Lernaufgabewerden die erarbeiteten Lösungen im Plenum diskutiert und mit dem ursprünglichen Videoabgeglichen.5Die Materialien stehen unter http://inf-didaktik.rz.uos.de/thymio/unterricht/sprachlernklassen.php zurVerfügung.6Vgl. in Abb. 3 dargestellte Schrittfolge316 Michael Brinkmeier, Stanislav Pisarenkoii“proceedings” — 2017/9/17 — 20:19 — page 317 — #317iiiiiigrün. - Bei - Boden - leuchten - der - hellen - Roboter - leuchten - der - Bei - Boden - dunklen - Roboter - rot.Abb. 4: Beispiel für Blockdiagramme und WortgeländerAbb. 5: Auszug aus dem Arbeitsmaterial des ersten TagesAuf fachlicher Ebene wird das Sicher werden und üben durch sich anschließende, o  enereAufgaben realisiert. Diese greifen die vorher gelernten neuen Aspekte auf und nutzen Siezur Lösung des eingangs vorgestellten oder eines neuen Problems. Die Kommunikationuntereinander bildet den – für die Schülerinnen und Schüler nicht expliziten – Schwerpunkt.Der Aspekt Sichern und Üben ist daher nur zum Teil auf den fachlichen Anteil bezogen.Ergänzend soll insbesondere gesprochene Sprache als Werkzeug während des Problemlöse-prozesses genutzt werden. Die fachlichen Inhalte bieten die Gelegenheit zum Experten zuwerden und anschließend das eigene Handeln zu reﬂektieren und die eigenen Lernzugewinneund Problemlösungen zu formulieren. Dadurch sollen gezielt sprachliche Einzelkompeten-zen, wie z.B. Texte planen, umstrukturieren und schreiben, sowie Lesekompetenz gefördertwerden.7 Die Ergebnisse der EvaluationEines der Hauptziele der Einheit war es, die Schülerinnen und Schüler dazu zu motivieren,über fachliche Inhalte zu kommunizieren. Die von der durchführenden und der beobachtetenLehrkraft ausgefüllten Beobachtungsbögen 7zeigen, dass dieses Ziel erreicht wurde. Dabeivariierte die Anzahl der Gruppen, in denen über die Inhalte gesprochen wurde, mitder Art der Aufgabe. Bei solchen, die eine Verschriftlichung erforderten, war der E  ektschwächer, während insbesondere die experimentellen, explorativen und o  eneren Aufgabendie Kommunikation deutlich förderten. Es wird auch deutlich, dass die Nutzung vonFachbegri  en anfänglich Schwierigkeiten bereitete. So wurden sie am ersten Tag innerhalbkeiner Gruppe verwendet, am zweiten und dritten Tag aber durchgängig in ein bis dreiGruppen. Die Beobachter stellten auch fest, dass Gespräche über inhaltsfremde Themen nurstattfanden, wenn eine Gruppe die Arbeit bereits beendet hatte und auf die anderen wartete.Dies trat nur am dritten Tag ein.7Die Beobachtungsbögen stehen unter http://inf-didaktik.rz.uos.de/thymio/unterricht/sprachlernklassen.php zurVerfügung.Nutzung eines Robotiksystems zur Förderung der Berufssprache Deutsch 317ii“proceedings” — 2017/9/17 — 20:19 — page 318 — #318iiiiiiTag Kurzcharakteristik Aufgabe(n)Erkunden der Verhaltensweisen des Roboters, Konditionalgefüge Aufgaben 1-41. Tag Einführung in die Programmierung, Ereignisse Aufgaben 5 & 6Erstellen eines textuell beschriebenen Programms Aufgabe 7Entfernungs- und Bodensensoren Aufgaben 1-42. TagImplementieren im Video gezeigten und textuell beschriebenen Verhaltens (Bodensen-soren)Aufgabe 5Implementierung eines Linienfolgers Aufgabe 6Beschreibung von Vorgängen mit Zuständen (Schranke und Farbwechsel) Aufgaben 1-23. TagProgrammierung einer Sequenz von Farben unter Verwendung von Zuständen undDarstellung als ÜbergangsgraphAufgabe 3, 4 & 7Implementieren des Programms für die Schranke Aufgabe 8Tab. 2: Der inhaltliche Verlauf der InterventionNachdem am ersten Tag festgestellt wurde, dass die Befragung in schriftlicher Form wenigergiebig war, wurde auf eine mündliche Form gewechselt, bei der die Fragen der Gruppevorgelesen und anschließend die Antworten abgefragt wurden. Die Verwendung von Videoszur Beschreibung der Aufgabenstellung wurde dabei einhellig als sehr positiv empfunden.Auch die explorativen Aufgaben, bei denen das Verhalten des Roboters durch Experimentenmit kleinen Programmen erkundet wurde, wurden als sehr positiv bewertet. Der dafürgenannte Grund war der geringe Schwierigkeitsrad der Aufgaben auf technischer Seite.Aufgaben, die eine Verschriftlichung erforderten, wurden insgesamt als sinnvoll aber sehrschwer empfunden. Die Schülerinnen und Schüler nutzten dabei häuﬁg die angebotenenLernhilfen. Dies betraf insbesondere Aufgaben, bei denen nicht nur das beobachtbareVerhalten des Roboters beschrieben werden sollte, sondern auch inhaltliche Aspektebehandelt wurden. So ﬁel es den Schülerinnen und Schülern besonders schwer, Hypothesenüber die Funktionsweise von Sensoren zu entwickeln. Dies kann zum einen auf dieSchwierigkeit der Verschriftlichung, zum anderen auf fachliche Unsicherheit zurückgeführtwerden. In allen Fällen konnte durch Gespräche im Plenum allerdings gemeinsam einesinnvolle und korrekte Antwort formuliert werden. Dadurch war eine Konzentration auf diesprachlichen Aspekte möglich.O eneren Aufgaben (beschriebenes Verhalten implementieren, Linien folgen, Schrankeimplementieren) wurden insgesamt als sehr schwer empfunden. Der erste Fall, der Umsetzungeines Textes in ein Programm, ﬁel den Schülerinnen und Schülern anfänglich besondersschwer, da die Konditionalgefüge dort nicht in der bisher verwendeten Wenn-dann-Formverwendet wurden, sondern in Soll-wenn-Form (Der Thymio soll ..., wenn ...). Nachdemdas Prinzip erläutert wurde, wurde die Aufgabe hingegen als sehr einfach betrachtet.Die entsprechende Aufgabe des zweiten Tages wurde ebenfalls wieder als sehr schwerempfunden, jedoch gelang es einer Gruppe, sie ohne Hilfestellung erfolgreich zu bearbeiten.Die Implementierung des Linienfolgers war den Schülerinnen und Schülern nur mitHilfestellung möglich. Dennoch erschienen sie hochgradig motiviert und testeten häuﬁgihre Programme. Ähnlich verhielt es sich mit der Realisierung eines Schrankenrobotersam dritten Tag. Die Umsetzung in eine Abfolge von Zuständen ﬁel den Schülerinnenund Schüler sehr schwer und wurde gemeinsam im Plenum entwickelt und anschließendumgesetzt.318 Michael Brinkmeier, Stanislav Pisarenkoii“proceedings” — 2017/9/17 — 20:19 — page 319 — #319iiiiiiIn der abschließenden Gruppendiskussion äußerten sich die Schülerinnen und Schüler sehrpositiv über die Beschreibungen der Verhaltensweisen des Thymios. Dabei empfanden siees als besonders nachhaltig, erst selbstständig zu formulieren und dies anschließend imPlenum vorzustellen und an einer gemeinsamen, grammatikalisch und semantisch korrektenVerschriftlichung zu arbeiten. Die Frage ob der Thymio sich als Kommunikationsanlass undals Werkzeug zum Erlernen der deutschen Sprache eignen würde, äußerten sich alle achtanwesenden Teilnehmer der Gruppe positiv. Fünf empfanden die Verwendung eines solchenWerkzeugs als sehr motivierend und besser als den „üblichen“ Sprachunterricht. Sie führtendies insbesondere auf den explorativen und spielerischen Charakter des Thymios zurück,sowie auf die Motivation etwas über Programmierung lernen zu wollen. Die drei anderenGruppenmitglieder empfanden die Arbeit mit dem Thymio als mindestens so gut wie einenabwechslungsreichen Grammatik- und Spielunterricht. Alle empfanden die Einheit aber alsdeutlich nachhaltiger als reinen Theorieunterricht.Der insgesamt positive Eindruck wurde durch das Interview der beobachtenden Lehrkraftbestätigt. Die Verwendung des Thymios und von Videos führte ihrer Ansicht nach zu einerdeutlich spürbaren Steigerung der intrinsischen Motivation. Diese konnte zwar nicht überdie gesamte Zeit aufrechterhalten werden, das wäre aber angesichts der Länge eines Tages(sechs Schulstunden, unterbrochen durch die üblichen Pausen) nicht anders zu erwarten. Diebeobachtende Lehrkraft bewertete die Eignung des Thymios, um Kommunikationsanlässezu scha  en und Sprachübungen inhaltlich zu verankern, als durchweg positiv. Besonderserstaunt äußerte sie sich darüber, dass die Schülerinnen und Schüler ihren aktiven Wortschatzsehr schnell um Fachbegri  e erweiterten und sie sowohl in der verbalen und schriftlichenKommunikation verwendeten. Zum Abschluss äußerte die beobachtenden Lehrkraft dieAbsicht, künftig auch weiterhin mit ähnlichen Methoden, anderen Robotiksystemen undProgrammierung in der Lerngruppe arbeiten zu wollen.8 FazitDer Ansatz, ein Robotiksystem wie den Thymio im Sprachunterricht zu verwenden, erscheintim Anschluss an die hier beschriebene Einheit als tragfähiges und vielversprechendesKonzept. Er ermöglicht die sinnvolle inhaltliche Einbettung von Sprachübungen in eineninformatisch-technischen Kontext. Dabei wurde allerdings im Vorfeld die Schwierigkeit,relativ kurze, fachbezogene Texte zu verstehen, unterschätzt. Auch die Bearbeitung vono eneren Aufgaben erforderte in der Regel zusätzliche Unterstützung, die bislang über eineGruppendiskussion oder verbal über die Lehrkraft erfolgte. Insbesondere die Plenumsrundenwurden von den Schülerinnen und Schülern, auch im Zusammenhang mit anderen Aufgaben,wie z.B. der Verschriftlichung von Beobachtungen, als besonders nachhaltig erachtet. Diebeobachtende Lehrkraft hob insbesondere die häuﬁge Verwendung von Fachbegri  enhervor. Insgesamt wurde die Einheit von allen Beteiligten als motivierend und zielführendbeschrieben.Nutzung eines Robotiksystems zur Förderung der Berufssprache Deutsch 319ii“proceedings” — 2017/9/17 — 20:19 — page 320 — #320iiiiiiDurch die kleine Anzahl an Teilnehmern können die Ergebnisse der Evaluation nur einegrundsätzliche Tendenz beschreiben. Um belastbare Resultate zu erzielen, müssen weitereVersuche mit angepassten Materialien durchgeführt werden. Zudem fand keine objektiveErhebung der vermittelten informatischen und sprachlichen Kompetenzen statt.Literaturverzeichnis[At08] Atteslander, Peter; Cromm, Jürgen; Grabow, Busso; Klein, Haral d; Maurer, Andrea; Siegert,Gabriele: Methoden der empirischen Sozialforschung. Erich Schmidt Verlag, Berlin, 2008.[Be13] Berufssprache Deutsch. Online unter: http://www.isb.bayern.de/schulartspezifisches/materialien/berufssprache-deutsch/ (Zuletzt aufgeru-fen am 14.09.2016), 2013.[DBP16] Döring, Nicola; Bortz, Jürgen; Pöschl, Sandra: Forschungsmethoden und Evaluation in denSozial- und Humanwissenschaften. Springer, Berlin & Heidelberg, 2016.[Le10] Leisen, J.: Handbuch Sprachförderung im Fach: Sprachsensibler Fachunterricht in derPraxis. Varus, 2010.[Ma14] Magnenat, Stéphane; Shin, Jiwon; Riedo, Fanny; Siegwart, Roland; Ben-Ari, Morderchai:Teaching a Core CS Concept Through Robotics. In: Proceedings of the 2014 Conferenceon Innovation & Technology in Computer Science Education. ITiCSE ’14, ACM, NewYork, NY, USA, S. 315–320, 2014.[Ma15] Magnenat, S.; Ben-Ari, M.; Klinger, S.; Sumner, R. W.: Enhancing Robot Programming withVisual Feedback and Augmented Reality. In: Proceedings of the 2015 ACM Conference onInnovation and Technology in Computer Science Education. ACM, New York, NY, USA,S. 153–158, 2015.[Me15] Meyer, H.: Praxisbuch: Leitfaden Unterrichtsvorbereitung. Cornelsen Scriptor, Berlin,2015.[Ro15] Roy, Didier; Gerber, Gordana; Magnenat, Stéphane; Riedo, Fanny; Chevalier, Morgane;Oudeyer, Pierre-Yves; Mondada, Francesco: IniRobot : a pedagogical kit to initiate childrento concepts of robotics and computer science. In: RIE 2015. 2015.[SRG13] Sogl, P.; Reichel, P.; Geiger, R.: „Berufssprache Deutsch“ - Ein Projekt zur berufsspeziﬁschenSprachförderung im Unterricht an der Berufsschule bzw. Berufsfachschule in Bayern. bwp@Spezial, 6, 2013. Online unter: http://www.bwpat.de/ht2013/ft18/sogl_etal_ft18-ht2013.pdf (Zuletzt aufgerufen am 28.05.2017).[St15] Streinz, A.: Berufsschulpﬂichtige Asylbewerber und Flüchtlinge. ISB - Staatsinstitut fürSchulqualität und Bildungsforschung, 2015. Online unter: https://www.isb.bayern.de/berufliche-schulen/materialien/baf_beschulung/ (Zuletzt aufgerufen am 26.09.2016).[th17a] thymio.org: Anleitung zum visuellen Programmieren. 2017. Online unter: https://www.thymio.org/de:thymiovpl (Zuletzt aufgerufen am 28.5.2017).[th17b] thymio.org: Thymio & Aseba. 2017. Online unter: https://www.thymio.org/de:thymio(Zuletzt aufgerufen am 28.5.2017).[Wi16] Winterboer, S.; Zilke, R.: Zustandsbasierte Modellierung und Implementierung vonSchwarmverhalten im Unterricht. Masterarbeit, 2016. Masterthesis, Universität Osnabrück.320 Michael Brinkmeier, Stanislav Pisarenkoii“proceedings” — 2017/9/17 — 20:19 — page 321 — #321iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 11Schülerinteresse an Informatik und InformatikunterrichtTorsten Brinda1, David Tobinski2, Stefan Schwinem3Abstract: Bislang ist noch relativ wenig empirisch erforscht, was das Interesse von Schülerinnen undSchülern an Informatik und Informatikunterricht weckt bzw. beeinﬂusst. In Betracht kommen dazubspw. didaktische Entscheidungen seitens der Lehrkraft zu informatischen Kontexten, betrachtetenPhänomenen, Situationen, beteiligten informatischen Inhaltsfeldern, erforderlichen Schülertätig-keiten und vielem mehr. Der vorliegende Beitrag berichtet von einer explorativen empirischenStudie, welche das Ziel hatte, ein Instrument zur Erhebung des Interesses von Lernenden amFach Informatik, an informatischen Alltagserscheinungen, Situationen und Kontexten sowie denvorgesehenen Unterrichtsinhalten in den Sekundarstufen zu entwickeln und zu erproben. Weiterhinsollten erste Hinweise auf Unterschiede zwischen verschiedenen Schülergruppen herausgearbeitetwerden. Dazu wurden Lernende verschiedener Schulformen und Jahrgangsstufen mittels einesstandardisierten Online-Fragebogens schriftlich befragt. Ein insgesamt stärker ausgeprägtes Interessezeigte sich bei männlichen Schülern sowie Lernenden, die angaben, einen informatikbezogenenBerufswunsch zu verfolgen, dass Informatik ihr Lieblingsfach sei oder gute bis sehr gute Mathematik-oder Informatiknoten zu haben.Keywords: Schülerinteresse; Informatikinteresse; Interessensforschung; Sachinteresse; Fachinteresse;Fragebogen; empirische Studie; explorative Studie1 EinleitungAllgemeinbildender Schulunterricht hat u. a. das Anliegen, Lernende jeweils für die Ausein-andersetzung mit fachlichen Gegenständen zu motivieren, zu interessieren – idealerweisesogar zu begeistern und darüber ein längerfristiges Domäneninteresse zu entfalten undzu festigen. Krapp und Prenzel geben einen Überblick über das Forschungsfeld Interesseim Bereich der Pädagogischen Psychologie [ KP11 ]. Interesse kann aus der Interaktioneines Individuums mit seiner Umwelt entstehen und wird durch Werte und Gefühle desIndividuums beeinﬂusst. Unterschieden werden dabei individuelles Interesse, das in derPersönlichkeitsstruktur des Individuums verankert ist, sowie situationales, durch externeFaktoren generiertes Interesse. Aus schulischer Perspektive möchte man erreichen, dassSchülerinnen und Schüler sich für ein Unterrichtsfach, dessen Inhalte und das Geschehen inder jeweiligen Unterrichtsstunde interessieren. Da Interesse in der Informatik bislang kaumempirisch untersucht wurde, verfolgte die vorliegende Arbeit (s. a. [Sc16]) das Ziel, einenBeitrag zur Beschreibung und zur Erhebung von Informatikinteresse zu leisten.1Univ. Duisburg-Essen, Didaktik der Informatik, Schützenbahn 70,45127 Essen torsten.brinda@uni-due.de2Univ. Duisburg-Essen, Fak. f. Bildungswissensch., Universitätsstr. 2, 45127 Essen david.tobinski@uni-due.de3Univ. Duisburg-Essen, ICB, Schützenbahn 70, 45127 Essen stefan.schwinem@stud.uni-due.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 321ii“proceedings” — 2017/9/17 — 20:19 — page 322 — #322iiiiii12 Torsten Brinda, David Tobinski, Stefan Schwinem2 Verwandte ArbeitenEine bedeutende Arbeit aus dem Bereich der Interessensforschung stammt aus demUnterrichtsfach Physik. In der sogenannten IPN-Interessensstudie Physik wurden das Sach-und Fachinteresse an Physik in verschiedenen Jahrgangsstufen der Sek. I über einen längerenZeitraum mittels eines umfangreichen Fragebogens erhoben und analysiert [ HHL98 ]. Basisder Untersuchung bildete ein dreidimensionales Interessensmodell mit den DimensionenFachinhalte ,Kontexte undTätigkeiten . Dieses Modell wurde auch für die vorliegende Arbeitzugrunde gelegt. In der internationalen Relevance of Science Education (ROSE) -Studie[HB07 ] wurden Ranglisten der interessantesten und uninteressantesten Themen mit Bezugzu den Naturwissenschaften erstellt – aus Informatikperspektive bemerkenswert ist derBefund, dass das Thema „Wie Computer funktionieren“ das für Jungen drittinteressantesteThema in dieser naturwissenschaftsbezogenen Untersuchung war. Für die Informatik liegteine umfangreichere Studie zu „Schülerwünschen im Informatikunterricht“ vor (vgl. [ Ba10 ]),die ebenfalls am IPN entstand. Die Wünsche von Schülerinnen und Schülern zum Unterrichtwurden basierend auf dem zum Zeitpunkt der Studie gültigen Informatiklehrplan des LandesSchleswig-Holstein sowie den Empfehlungen zu Bildungstandards Informatik für die Sek. Ider Gesellschaft für Informatik e. V. (GI) [ Ge08 ] erhoben. Weitergehende Untersuchungenzu einer topologischen Struktur von Informatikinteresse (wie in der IPN-InteressensstudiePhysik) waren nicht enthalten.3 Erhebung von InformatikinteresseObige Vorüberlegungen bildeten den Ausgangspunkt für die Entwicklung und Pilotie-rung eines Online-Fragebogens zur explorativen Erhebung von Informatikinteresse. EinOnline-Fragebogen wurde gewählt, um im Wesentlichen ortsunabhängig eine potenziellgrößere Gruppe von Teilnehmenden erreichen zu können. Der Aufbau des Fragebogensorientierte sich an [ HHL98 ], Informatikinteresse wurde analog dazu in Fach- und Sach-interesse di  erenziert. Neben soziodemographischen Fragen und Fragen zur Belegungvon Informatikunterricht war der Fragebogen strukturiert in Blöcke mit Aussagen zumFachinteresse, zur etwaigen Wahlentscheidung für das Unterrichtsfach, zum Stellenwertvon Informatik in der eigenen Freizeit, zum Interesse an lebensweltlichen Situationen undKontexten mit Informatikbezug sowie zum Interesse an Gegenständen und Tätigkeiteninnerhalb der Informatik. Diese waren jeweils jeweils mittels vierstuﬁger Ratingskala („tri  tzu“ bis „tri  t nicht zu“) hinsichtlich des damit verbundenen Interesses zu bewerten. DerOnline-Fragebogen wurde mittels LimeSurvey erstellt (www.limesurvey.org). Zur Gewin-nung von Teilnehmenden wurden über bestehende E-Mail-Verteiler für Informatiklehrkräftein Nordrhein-Westfalen, Baden-Württemberg und Rheinland-Pfalz ein Anschreiben miteiner Erläuterung der geplanten Untersuchung, eine pdf-Fassung des Fragebogens sowie derLink zur Teilnahme verteilt. Weiterhin wurden regionale Schulen einbezogen, zu denenpersönliche Kontakte bestanden. Die Erhebung fand dann in der zweiten Junihälfte 2016statt. Insgesamt wurden dabei 172 Datensätze erfasst, von denen N=141auswertbar waren.322 Torsten Brinda, David Tobinski, Stefan Schwinemii“proceedings” — 2017/9/17 — 20:19 — page 323 — #323iiiiiiSchülerinteresse an Informatik und Informatikunterricht 134 Ergebnisse einer ersten PilotierungIm Bereich Fachinteresse an Informatik wurden sechs von acht Items zwischen 56% und 73%mit „tri  t zu“ oder „tri  t eher zu“ beantwortet. Im Folgenden angegebene Prozentzahlenbeziehen sich immer auf die Summe der Werte der beiden zustimmenden bzw. ablehnendenKategorien. Zur Fächerwahl wurde Items (eher) zugestimmt, die Hilfe zur Selbsthilfefokussierten (55%), das Verständnis informatischer Zusammenhänge adressierten (58%)oder den Erwerb von Softwarenutzungskompetenzen in den Blick nahmen (54%). Aussagenzur Auseinandersetzung mit Gefahren im Internet, Berufs- oder Studienentscheidungen,Fachbelegungen durch Geschwister, im Informatikbereich tätige Freunde oder Verwand-te oder für andere Fächer erho  te Vorteile wurden mehrheitlich (eher) abgelehnt oderergaben ein uneinheitliches Bild. Eine Beschäftigung mit Informatik im Alltag war fürdie Teilnehmenden eher von untergeordneter Bedeutung – alle dsbzgl. Items wurden von60% bis 86% der Teilnehmenden (eher) abgelehnt. Bzgl. der Situationen und Kontextebewerteten Lernende in der Sek. I (n=73) die Auseinandersetzung mit Schadsoftware (imMittel der Summe aller zugeordneten positiven Aussagen: 57%), Computerspielen (62%)sowie Smartphones und Tablets (53%) mehrheitlich als (eher) interessant, die entsprechendeBeschäftigung mit Textverarbeitung (entsprechend negative Aussagen: 60%) sowie sozialenNetzwerken (54%) jedoch als (eher) von geringem Interesse. Das erfragte Vorwissen hatteauf diese Bewertungen keinen erkennbaren Einﬂuss: das Vorwissen zu Textverarbeitung,Computerspielen sowie Smartphones und Tablets wurde als eher hoch eingeschätzt, das zuden übrigen Themen als eher gering. Explizit gefragt nach verschiedenen Einﬂussfaktorenauf das jeweilige Interesse zeigte sich, dass im Zusammenhang mit Textverarbeitung dievermutete Relevanz für die eigene beruﬂiche Zukunft (53%) und bei Computerspielender Stellenwert im Freundeskreis (66%) sowie diesbezügliches Freizeitinteresse (59%)positiv auf das Interesse wirkten. Dass dsbzgl. Interesse durch die Thematisierung imInformatikunterricht oder Medienberichte induziert worden wäre, wurde mehrheitlich (eher)abgelehnt – das gilt auch analog für die Sek. II . Diese Teilnehmenden ( n=68) bewertetenihr Interesse an den Kontexten Computerspiele (im Mittel der Summe aller zugeordnetenpositiven Aussagen: 66%), Suchmaschinen (55%), Clouds (51%), Smartphones und Tablets(62%), Hausautomatisierung (48%, ca. 8% der Teilnehmenden gaben hierzu keine Antwort;bei den übrigen Kontexten ca. 1%-3%) insgesamt (eher) als groß, lediglich einige Items mitanwendungsbezogenen und gesellschaftlich-kulturellen Bezug (Kontexte Suchmaschinen,Clouds, Hausautomatisierung) zeigten ein unentschiedenes oder leicht negatives Bild.Gefragt nach verschiedenen Inhalten und Tätigkeiten im Informatikunterricht zeigte sichbei den Lernenden der Sek. I folgendes Bild: das Modellieren und Implementieren vonAlgorithmen und Programmen zur Lösung von Problemen – allein oder in Kooperationmit anderen –, das Verständnis der Funktionsweise von Informatiksystemen sowie diekorrekte Verwendung informatischer Fachbegri  e wurden als (eher) interessant bewertet,Aussagen mit Bezug zum Inhaltsfeld Informatik, Mensch und Gesellschaft, z. B. zu sicherenPasswörtern, zum Verhalten in sozialen Netzwerken und zur Entwicklung der Informatikals (eher) wenig interessant eingestuft. Bei den Teilnehmenden in der Sek. II zeigte sich imKern die gleiche Tendenz.Schülerinteresse an Informatik und Informatikunterricht 323ii“proceedings” — 2017/9/17 — 20:19 — page 324 — #324iiiiii14 Torsten Brinda, David Tobinski, Stefan SchwinemLernende in der Sek. I zeigten sich insgesamt interessierter als Lernende in der Sek.II. Ein stärker ausgeprägtes Interesse hatten auch Lernende mit informatikbezogenemBerufswunsch, Lieblingsfach Informatik sowie (sehr) guten Mathematik- oder Informatik-noten. Bezüglich der Geschlechter war die Interessensbewertung häuﬁg nicht signiﬁkantunterschiedlich. Weiterhin zeigte sich bei den Teilnehmenden ein insgesamt eher geringesInteresse, sich in der Freizeit mit informatischen Themen zu befassen, es sei denn, hierbeiwar ein persönlicher Nutzen o  ensichtlich (Bedienung von Smartphones, Suchmaschinen).5 Fazit und AusblickWenn das eigene lebensweltliche Interesse im Vordergrund stand, beantwortete ein höhererAnteil Lernender die entsprechenden Items positiv. Gegenstände, die in der alltäglichenLebenswelt der Lernenden keine besonders große Bedeutung besaßen, standen ebenfallsweniger in deren Interesse. Gesellschaftlich-kulturelle Aspekte trafen – im Gegensatz zutechnischen und anwendungsbezogenen Aspekten – auf geringes Interesse. Mit der Studieliegt nun ein einmalig erprobtes Instrument vor, das im Weiteren bearbeitet und verfeinertwerden muss. Die Auswahl der Situationen und Kontexte bedarf der weiteren Entwicklung,ebenso sollten zu bewertende Aussagen zu Unterrichtsinhalten noch systematischer variiertwerden. Es wäre wünschenswert, zukünftig noch mehr über die Interessen von Schülerinnenund Schülern zu erfahren, um diese stärker bei didaktischen Entscheidungen berücksichtenzu können. Das in dieser Untersuchung eher geringe Interesse an gesellschaftlich-kulturellenAspekten sollte zur Prüfung und ggfs. Überarbeitung der zugeordneten Items führen,weiterhin zu der Erkenntnis, dass eine interessante Unterrichtsgestaltung hier besonderswichtig sein könnte.Literaturverzeichnis[Ba10] Barthel, Hannelore: Informatikunterricht. Wünsche und Erwartungen von Schülerinnen undSchülern. Dissertation, Philosophische Fakultät, Christian-Albrechts-Universität, Kiel, Januar2010.[Ge08] Gesellschaft für Informatik e.V.: Grundsätze und Standards für die Informatik in der Schule –Bildungsstandards Informatik für die Sekundarstufe I. LOG IN, 28(150/151):Beilage, 2008.[HB07] Holstermann, Nina; Bögeholz, Susanne: Interesse von Jungen und Mädchen an natur-wissenschaftlichen Themen am Ende der Sekundarstufe I. Zeitschrift für Didaktik derNaturwissenschaften, 13:71–86, 2007.[HHL98] Ho mann, Lore; Häusler, Peter; Lehrke, Manfred: Die IPN-Interessenstudie Physik. IPN,Kiel, 1998.[KP11] Krapp, Andreas; Prenzel, Manfred: Research on Interest in Science: Theories, methods, andﬁndings. International Journal of Science Education, 33(1):27–50, January 2011.[Sc16] Schwinem, Stefan: Schülerinteresse im Informatikunterricht. Masterarbeit, UniversitätDuisburg-Essen, Essen, August 2016.324 Torsten Brinda, David Tobinski, Stefan Schwinemii“proceedings” — 2017/9/17 — 20:19 — page 325 — #325iiiiiiWorkshopsii“proceedings” — 2017/9/17 — 20:19 — page 326 — #326iiiiiiii“proceedings” — 2017/9/17 — 20:19 — page 327 — #327iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 1Willkommen im Programmierzirkus –Ein Programmierkurs für GrundschulenKatharina Geldreich1, Alexandra Funke2, Peter Hubwieser3Abstract: Informatik soll in den kommenden Jahren immer stärker in die frühe Bildung integriertwerden und somit den Weg in die Grundschulen sowie die Kindergärten ﬁnden. Dafür ist es erforderlich,Methoden und Inhalte zu erforschen, die für Schülerinnen und Schüler der Primarstufe geeignet sind.Auf dieser Basis haben wir einen dreitägigen Kurs, den Programmierzirkus, für Dritt- und Viertklässlerentwickelt, der den Kindern einen Einblick in die Programmierung geben soll. Die Kinder sindzwischen acht und zehn Jahren alt und beﬁnden sich kurz vor dem Übergang an die weiterführendeSchule. Im Jahr 2016 nahmen 58 Schülerinnen und Schüler erfolgreich an dem Kurs teil. WeitereDurchführungen sind im Juni und Juli 2017 mit 63 Dritt- und Viertklässlern geplant. Dieser Beitragbeschreibt den Aufbau der einzelnen Kurstage und die verwendeten Lehr-Lern-Methoden. Weiterhinwerden die Aufzeichnungen und Auswertungen des Programmierzirkus beschrieben, bei dem eineVielzahl an Methoden zum Einsatz kam.Keywords: Programmieren; informatische Bildung; Grundschule; CS unplugged; Scratch1 EinleitungDas Fach Informatik wird an Schulen und Universitäten mit verschiedenen Herausforde-rungen konfrontiert. Beispielsweise haben Schülerinnen und Schüler sowie Studentinnenund Studenten unterschiedliche Fehlvorstellungen und Vorurteile bezüglich des Faches[FBH16 ], die sich zum Großteil bereits in der Kindheit entwickeln und manifestieren [ Pr14].Um zu verhindern, dass die Lernenden solche meist negativen Einstellungen entwickeln,ist ein aktueller Forschungsansatz, informatische Konzepte wie Programmierung bereitsin die Grundschule zu integrieren. Dies ermöglicht den Kindern, eigene Erfahrungen mitInformatik und neuen digitalen Medien zu sammeln. Sie lernen, den Computer nicht nurals Benutzer einzusetzen, sondern mit dessen Hilfe kreativ zu werden [ AGE14 ]. DieserRollenwechsel in Kombination mit interessanten Erfahrungen könnte die Selbstwirksamkeitder Schülerinnen und Schüler im Allgemeinen und speziell bezüglich der Informatik undProgrammierung erhöhen [ To15 ]. Zeitgleich dazu steigt die Diskussion über die Notwendig-keit der Informatik in der frühen Bildung stetig. Während mehrere Länder bereits das Fach1Technische Universität München, School of Education, Professur für Didaktik der Informatik, Arcisstr. 21,80333 München, katharina.geldreich@tum.de2Technische Universität München, School of Education, Professur für Didaktik der Informatik, Arcisstr. 21,80333 München, alexandra.funke@tum.de3Technische Universität München, School of Education, Professur für Didaktik der Informatik, Arcisstr. 21,80333 München, peter.hubwieser@tum.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 327ii“proceedings” — 2017/9/17 — 20:19 — page 328 — #328iiiiii2 Katharina Geldreich et al.Informatik in die Grundschulcurricula integriert haben (z. B. Großbritannien [ Br14 ] undAustralien [ FVF14 ]), hat Deutschland noch keine verbindlichen Richtlinien für den Umgangmit diesen Themen entwickelt. Um herauszuﬁnden, welche Lehrmethoden und Inhalte fürKinder im Grundschulalter geeignet wären, haben wir einen einführenden Programmierkursfür Schülerinnen und Schüler der Grundschule entworfen.2 KurskonzeptDer Kurs wurde zunächst für die vierte Klasse konzipiert und hat das Ziel, den Schülerinnenund Schülern innerhalb von drei Tagen einen Einblick in die Programmierung zu geben.Dabei sollen sie ganz grundsätzlich verstehen, wie ein Computerprogramm funktioniert, unddarüber hinaus befähigt werden, sich in der Programmierumgebung Scratch zurechtzuﬁndenund dort eigene multimediale Projekte zu programmieren.Das Thema „Zirkus“ zieht sich aus mehreren Gründen als durchgängiges Motiv durchden Kursablauf, die Aufgaben und die Materialien. Ein wichtiger Aspekt bei der Wahldieses Themas war die Motivation der Schülerinnen und Schüler. Da die meisten Kinderpersönliche Erfahrungen mit einem Zirkusbesuch verbinden können, ist die Themenwahl einerster Schritt, um die Kursinhalte lebendig und interessant zu vermitteln und dabei an dieLebenswirklichkeit der Schülerinnen und Schüler anzuknüpfen. Des Weiteren ho  ten wir,Mädchen und Jungen mit diesem Thema gleichermaßen anzusprechen, da weder Mädchennoch Jungen vorrangig damit assoziiert werden. Zusätzlich bietet ein Zirkus vielfältigeAufgabenanlässe, in denen die Handlungen von Tieren und Personen simuliert werdenkönnen.An jedem der drei Kurstage haben wir vier Stunden mit der Klasse verbracht, die nachund nach ein detaillierteres Bild vom Programmieren erhalten sollte. Am Ende des Kursessollten alle Schülerinnen und Schüler dazu fähig sein, mit der ProgrammierumgebungScratch zu arbeiten und algorithmische Kontrollstrukturen anzuwenden und zu kombinieren.Da man in der Grundschule prinzipiell mit einer hohen Variabilität von Schülerleistungen,Lernvoraussetzungen und Lerntypen konfrontiert ist, haben wir uns für eine Kombinationverschiedener Lehr- und Arbeitsmethoden entschieden. Einen schematischen Überblicküber den Ablauf, die Inhalte und die Ziele des Kurses zeigt Abb. 1.Abb. 1: Ablauf, Inhalte und Ziele des Kurses328 Katharina Geldreich, Alexandra Funke, Peter Hubwieserii“proceedings” — 2017/9/17 — 20:19 — page 329 — #329iiiiiiWillkommen im Programmierzirkus – Ein Programmierkurs für Grundschulen 3Stets im Vordergrund stand durchgängig das Prinzip des aktiven Lernens [ PI69][Vo97 ]. DieSchülerinnen und Schüler sollten die Möglichkeit haben, sich eigentätig und aktiv mit denLerngegenständen auseinanderzusetzen. Des Weiteren sollte die Möglichkeit gegeben sein,den informatischen Konzepten auf unterschiedliche Art und Weise zu begegnen [ Br66 ].2.1 Aufbau des KursesTag 1. Da die meisten Schülerinnen und Schüler keinerlei Vorwissen im Bereich Program-mierung oder allgemein in Informatik mitbrachten, war das Ziel des ersten Tages, ihneneine Grundidee über die Funktionsweise eines Computerprogramms zu geben. Sie solltenbegreifen, dass Programme eine bestimmte Aufgabe bewältigen, indem sie präzisen undklaren Anweisungen folgen. Um die Kinder nicht zu überfordern, wurden diese grundlegen-den algorithmischen Konzepte „unplugged“ [ CS17 ], das heißt ohne die Verwendung vonComputern, eingeführt. Um zu lernen, komplexe Aufgaben in kleinere Teile zu zerlegen,bearbeiteten die Kinder eine Vielzahl von Übungen, in denen Vorgänge in eindeutige Anwei-sungen umgewandelt werden mussten. Verschiedene einfache Aufgaben wurden zunächstgemeinsam im Plenum gelöst, im Anschluss daran wurden verhältnismäßig komplexereAufgaben in Kleingruppen bearbeitet. Dabei „programmierten“ die Schülerinnen undSchüler zuerst die Lehrkraft und im Anschluss daran sich gegenseitig. Um das Zirkusthemaaufzugreifen, mussten in den Aufgaben beispielsweise vermisste Gegenstände gefundenoder entlaufene Tiere eingefangen werden. Sobald eine Aufgabe gelöst wurde, konnte mandie Lösung in einem im Zimmer aufgebauten Spielfeld überprüfen (Abb. 2, rechts). Für dieBearbeitung der Aufgaben fertigten wir haptische Programmierblöcke an, die optisch denProgrammierbefehlen in Scratch entsprechen (Abb. 2, links).Abb. 2: Ein Schüler arbeitet mit den haptischen Scratchblöcken (links); die fertigen Programmewerden im Parcours getestet (rechts)Da die ausgedruckten und laminierten Blöcke mit Magneten und Klettverschlüssen versehensind, kann mit ihnen sowohl an der Tafel als auch auf großen Filzbahnen gearbeitet werden.Zum einen konnten die Kinder auf diesem Wege ihre Programme ohne Probleme verändernWillkommen im Programmierzirkus - Ein Programmierkurs für Grundschulen 329ii“proceedings” — 2017/9/17 — 20:19 — page 330 — #330iiiiiiund im Raum transportieren, zum anderen erho  ten wir uns, den Übergang zur Weiterarbeitin Scratch zu erleichtern.Tag 2. Am zweiten Tag sollten die Schülerinnen und Schüler lernen, einfache Programmeam Computer zu erstellen. Da wir eine kinderfreundliche Programmierumgebung verwendenwollten und um mögliche Frustrationen durch syntaktische Fehler zu vermeiden, entschiedenwir uns für die visuelle Programmiersprache Scratch [ Ma10 ]. Wir entwickelten einenLernzirkel mit zunehmend schwierigen Stationen, in dem die Grundfunktionen von Scratchnacheinander behandelt wurden und die jedes Kind in seinem eigenen Tempo bearbeitenkonnte. Ausgehend von Fragen der Bedienung führten die erstellten Zirkelkarten (Abb. 3)über einfachen Sequenzen hin zu Kontrollstrukturen wie Wiederholungen und bedingteAnweisungen. An jeder Station wurde die entsprechende Funktion zunächst schrittweiseerklärt und die Schülerinnen und Schüler wiederholten jeden Schritt an ihrem eigenenRechner. Im Anschluss daran bearbeiteten sie eine dazu passende Aufgabe, bei der dieeingeführte Funktion in einem anderen Kontext oder leicht abgewandelt verwendet werdenmusste. Um die heterogene Gruppe gleichermaßen zu unterstützen, standen zusätzlicheAufgaben sowie hilfreiche Tipps für die komplexeren Aufgabenstellungen bereit.Abb. 3: Vorderseite (links) und Rückseite (rechts) einer Karte des ScratchzirkelsTag 3. Ziel des dritten Tag war es, herauszuﬁnden, was die Schülerinnen und Schülergelernt hatten und ob sie das Gelernte auch in einer o  eneren Aufgabe anwenden können.Darüber hinaus wollten wir den Kindern eine Möglichkeit bieten, kreativ und selbstbestimmtzu arbeiten. Jedes Kind sollte seine eigene Zirkusgeschichte in einem kurzen Drehbuch(Abb. 4, links) beschreiben und daraufhin in Scratch umsetzen. Da wir trotz der o  enenAufgabenstellung eine Vergleichbarkeit der Schülerprojekte gewährleisten wollten, legtenwir einige Anforderungen fest, die erfüllt werden mussten. Die Programme sollten a) mehrals eine Figur beinhalten, b) die Figuren bei der Ausführung bewegen, c) mindestens eine330 Katharina Geldreich, Alexandra Funke, Peter Hubwieserii“proceedings” — 2017/9/17 — 20:19 — page 331 — #331iiiiiiWiederholung ausführen und d) mindestens eine bedingte Anweisung enthalten. Nach demErfüllen dieser Anforderungen konnten die Schülerinnen und Schüler ihre Arbeit ohneweitere Richtlinien fortsetzen. Ihnen stand es frei, mit Scratch zu experimentieren undihre eigenen Zirkusgeschichten zu erﬁnden sowie diese im Anschluss umzusetzen (Abb. 4,rechts). Am Ende des Tages präsentierte jedes Kind seine Zirkusgeschichte der Klasse undhatte Gelegenheit, das Vorgehen und mögliche Schwierigkeiten zu kommentieren.Abb. 4: Drehbuch für die Projekte (links) und das Projekt eines Kindes (rechts)2.2 Aufzeichnung des KursesUm das Kurskonzept und die E  ektivität des Kurses zu testen, wurden alle Kursdurch-läufe mit einem Mixed-Methods Ansatz aufgezeichnet. Dafür kamen folgende Methodenkombiniert zum Einsatz:Videograﬁe. Um die Interaktionen der Kinder untereinander und mit der Lehrkraft sowie dasVerhalten der Kinder allgemein zu untersuchen, wurden die kompletten Kurse mit vier Ka-meras aufgezeichnet. Für die entsprechende Tonaufzeichnung kamen ein Ansteckmikrophonfür jede Lehrkraft und Richtmikrophone zum Einsatz.Gruppeninterviews und Fragebögen. Wir nutzten eine Vielzahl an Interview- und Reﬂek-tionsmethoden, um einen Einblick in das Vorwissen der Schüler zu bekommen, darüber,welche Vorstellungen sie vom Programmieren haben und wie sie sich vor bzw. nach denKurstagen fühlten.Willkommen im Programmierzirkus - Ein Programmierkurs für Grundschulen 331ii“proceedings” — 2017/9/17 — 20:19 — page 332 — #332iiiiii6 Katharina Geldreich et al.Bildschirm- und Audioaufzeichnung. An den Kurstagen zwei und drei wurden dieBildschirme der Kinder mitgeschnitten. Die Sprache wurde über die internen Mikrophoneder Laptops aufgenommen. Mit dieser Methode kann ein Einblick in die Arbeitsweise derKinder erhalten werden.Scratch-Ergebnisse. Alle Programmierergebnisse der Kinder vom zweiten und dritten Tagwurden gespeichert, um sie im Nachhinein genauer analysieren zu können.3 Beobachtungen und AuswertungenBasierend auf der Vielzahl an Daten, die bei der Kursdurchführung erhoben wurden, führtenwir verschiedene Auswertungen durch, um einen tieferen Einblick in die Arbeit der Kinderzu erlangen.Mithilfe eines weiterentwickelten Code-Systems wurden alle 127 Scratch-Ergebnisse derKinder des dritten Kurstages analysiert [ FGH17 ]. Dabei fanden wir heraus, dass die Projektevorrangig in drei Projekttypen unterteilt werden können: Spiel, Geschichte und Animation.Diese unterscheiden sich nicht nur in Art und Anzahl der verwendeten Blöcke, sondernauch in der Verwendung der Figuren im Programm. Annähernd alle Kinder erfüllten inihren Projekten die von uns vorgegebenen Pﬂichtelemente (siehe 2.1 Tag 3).Mit Hilfe von Reﬂektionsbögen, die am Ende jedes Kurstages von den Kindern ausgefülltwurden, erhielten wir Einblicke, wie sie den Kurs empfanden. Die Bögen dienten zudemdem Erfassen des Vorwissens sowie den aufgetretenen Schwierigkeiten. Alles in allem hatteder Großteil der Kinder an allen Tagen viel Freude – vor allem an den Tagen, an denen mitden Computern gearbeitet wurde. Bei den CS unplugged Aufgaben empfanden die Kinderes als schwierig, den Kursleiter zu "programmieren". Doch nachdem diese erste Hürdegemeistert wurde, ﬁel den Kindern das Programmieren immer leichter. Dies lässt sich auchgut anhand der Videoaufzeichnungen beobachten. Am meisten Spaß hatten die Kinder amersten Tag beim Ausprobieren der Lösungen im Spielfeld. Die Antworten des zweiten Tageswaren deswegen für uns interessant, weil diese aufzeigen, welche Zirkelaufgaben besondersherausfordernd für die Kinder waren. Anhand dessen kann der Kurs entsprechend verändertwerden. Alle Kinder würden gerne weiterhin in der Schule mit Scratch programmieren undetwa 90% wollen dies auch zuhause tun.Die Bildschirm- und Tonaufzeichnungen der Laptops ermöglichen die Untersuchung desVorgehens beim Programmieren. In Kombination mit den Videoaufzeichnungen lassen sichStellen identiﬁzieren, an denen die Kinder auf Probleme gestoßen sind. Diese sind bei denKindern sehr individuell. Im nächsten Schritt folgt die Untersuchung, ob man verschiedeneProgrammiertypen unterscheiden kann.332 Katharina Geldreich, Alexandra Funke, Peter Hubwieserii“proceedings” — 2017/9/17 — 20:19 — page 333 — #333iiiiiiWillkommen im Programmierzirkus – Ein Programmierkurs für Grundschulen 74 Ausblick und zukünftige ArbeitenAnhand der Beobachtungen und Auswertungen wurden die Materialien, das Kurskonzeptund die Aufzeichnungsmethodik evaluiert und überarbeitet. Am Ende des Schuljahres2016/17 werden mit dem überarbeiteten Kurskonzept vier weitere Durchläufe mit drittenund vierten Klassen durchgeführt. Anschließend sollen die erhaltenen Daten, wie amBeispiel der Daten aus 2016, ausgewertet und mit denen des Vorjahres verglichen werden.Parallel arbeiten wir an einem Fortbildungskonzept, das Grundschullehrerinnen und -lehrernohne einschlägiges Vorwissen ermöglichen soll, den Kurs an ihrer Schule zu halten. Fernzielist hierbei, allen Viertklässlern des Landkreises Berchtesgadener Land die Teilnahme aneinem Programmierkurs und somit das Erlernen grundlegender Programmierprinzipien zuermöglichen.5 Inhalte des WorkshopsNach einer kurzen thematischen Einführung in das Themengebiet „Programmieren in derGrundschule“ können sämtliche Kursmaterialien selbstständig ausprobiert werden. Darüberhinaus werden verschiedene Schülerergebnisse ausgestellt, anhand derer die Auswertungdes Kurses aufgezeigt wird.Literaturverzeichnis[AGE14] Armoni, Michal; Gal-Ezer, Judith: Early computing education. ACM Inroads, 5(4):54–59,2014.[Br66] Bruner, Jerome: Toward a theory of instruction. Harvard University Press, Cambridge,1966.[Br14] Brown, Neil C. C.; Sentance, Sue; Crick, Tom; Humphreys, Simon: Restart: the resurgence ofcomputer science in UK schools. ACM Transactions on Computing Education, 14(2):1–22,2014.[CS17] CSUnplugged.org: , Computer Science Unplugged. csunplugged.org , March 2017.[FBH16] Funke, Alexandra; Berges, Marc; Hubwieser, Peter: Di  erent Perceptions of ComputerScience. In: 2016 International Conference on Learning and Teaching in Computing andEngineering (LaTICE). IEEE, S. 14–18, 2016.[FGH17] Funke, Alexandra; Geldreich, Katharina; Hubwieser, Peter: Analysis of Scratch Projects ofan Introductory Programming Course for Primary School Students. In: Proceedings of the2017 IEEE Global Engineering Education Conference (EDUCON). IEEE, S. 1233–1240,2017.[FVF14] Falkner, Katrina; Vivian, Rebecca; Falkner, Nickolas: The Australian Digital TechnologiesCurriculum: Challenge and Opportunity. In: Proceedings of the Sixteenth AustralasianComputing Education Conference - Volume 148. ACE ’14, Australian Computer Society,Inc, Darlinghurst, Australia, Australia, S. 3–12, 2014.Willkommen im Programmierzirkus - Ein Programmierkurs für Grundschulen 333ii“proceedings” — 2017/9/17 — 20:19 — page 334 — #334iiiiii8 Katharina Geldreich et al.[Ma10] Maloney, John; Resnick, Mitchel; Rusk, Natalie; Silverman, Brian; Eastmond, Evelyn:The Scratch Programming Language and Environment. ACM Transactions on ComputingEducation, 10(4):16:1–16:15, 2010.[PI69] Piaget, Jean; Inhelder, Bärbel: The psychology of the child. Basic Books, 1969.[Pr14] Prottsman, Kiki: Computer science for the elementary classroom. ACM Inroads, 5(4):60–63,2014.[To15] Topi, Heikki: Gender imbalance in computing. ACM Inroads, 6(4):22–23, 2015.[Vo97] Vollmers, Burkhard: Learning by doing - Piagets konstruktivistische Lerntheorie und ihreKonsequenzen für die pädagogische Praxis. International Review of Education, 43:73–85,1997.334 Katharina Geldreich, Alexandra Funke, Peter Hubwieserii“proceedings” — 2017/9/17 — 20:19 — page 335 — #335iiiiiiIra Diethelm (Hrsg.): INFOS 2017 – Informatische Bildung zum Verstehen und Gestalten derdigitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 1Der Hamster hat das Programm erfolgreich beendet –Grundschulkinder lernen ProgrammierenOtto Thiele1, Petra J ¨uckstock2Abstract: Seit 2014 f ¨uhrten die Autoren des Praxisbeitrags jedes Schuljahr eine Arbeitsgemein-schaft Informatik f ¨ur Kinder der Klassenstufe vier durch. Die Kinder wurden mittels des Hamster-Struktogrammeditors”HaSE“ an das Programmieren herangef ¨uhrt. Dies erfolgte, indem die Kinderf¨ur die Probleme des Hamsters L ¨osungsalgorithmen entwickelten und als Hamster-Struktogrammeimplementierten. Da die Struktogramme als Programme interaktiv visuell ablaufen, konnten die Kin-der testen, ob der Hamster ausf ¨uhrte, was sie sich vorgestellt und gedacht hatten.Begleitet wurde das Lernen der Kinder unter Ber ¨ucksichtigung des lerntheoretischen Ansatzes”Ver-st¨andnisintensives Lernen“ und des professionstheoretischen Ansatzes”Verstehen zweiter Ordnung“.Keywords: Arbeitsgemeinschaft Informatik f ¨ur Viertkl ¨assler, Algorithmen entwickeln, Hamster-Struktogramme, Hamster-Strukogrammeditor”HaSE“, Programmieren,”Verst ¨andnisintensives Ler-nen“,”Verstehen zweiter Ordnung“1 Die ArbeitsgemeinschaftAnfang des Jahres 2014 wurde das Konzept zur Durchf ¨uhrung einer schul ¨ubergreifendenArbeitsgemeinschaft Informatik f ¨ur Jenaer Kinder der vierten Klassen erstellt. Danacherfolgte die Ausschreibung.”Mein Name ist Bommel3. Ich bin ein kleiner Hamster. Kein richtiger Hamster – denn ichlebe nicht in der Natur und auch nicht in einem K ¨aﬁg mit Laufrad. Am liebsten hamstereich nach Herzenslust in Fantasiewelten des Computers. Diese Welten kannst Du Dir f ¨urmich ausdenken und am Computer gestalten. Mir wird es dort bestimmt gefallen. Wenn Duauch noch meine Sprache lernst, dann werde ich auf Dich h ¨oren und mit Freude und Spaßausf¨uhren, was Du mir sagst.“ [wi16]F¨ur die Eltern wurde in der Ausschreibung erg ¨anzt, dass das Konzept der Arbeitsgemein-schaft darauf ausgerichtet ist, das analytische, logische und algorithmische Denken derKinder altersgerecht und spielerisch anzuregen und zu f ¨ordern. Das heißt, die Kinder sol-len bef ¨ahigt werden, algorithmische Probleme am Computer mit dem an der Universit ¨atOldenburg entwickelten Hamster-Struktogrammeditor4”HaSE“ zu l ¨osen [wi16].1Verst ¨andnisintensives Lernen e. V ., L ¨obstedter Straße 67, 07749 Jena, otto.thiele@verstehenlernen.de2witelo e. V ., L ¨obstedter Straße 67, 07749 Jena, p.jueckstock@witelo.de3F¨ur die Kinder war es wichtig, dass der Hamster einen Namen hatte.4Der Hamster-Struktogrammeditor”HaSE“ verf ¨ugt¨uber eine f ¨ur die Kinder leicht bedienbare graﬁscheBenutzeroberﬂ ¨ache, die aus der gestaltbaren virtuellen Welt des Hamsters und dem Editor f ¨ur Hamster-Struktogramme besteht [Bo16].I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 335ii“proceedings” — 2017/9/17 — 20:19 — page 336 — #336iiiiiiDie Resonanz auf die Ausschreibung war groß, so dass die Arbeitsgemeinschaft im Schul-jahr 2014/15 erstmals durchgef ¨uhrt werden konnte. Wie die Kinder seitdem lernten undbeim Lernen begleitet wurden, wird nachfolgend beschrieben.2 Mit dem Hamster lernenIn der Arbeitsgemeinschaft waren die Aufgaben in Geschichten verpackt, die die Fantasieder Kinder anregten. Eine solche Aufgabe war beispielsweise die vom”Hamster Bommelals Nachtw ¨achter“.Jena war im Mittelalter eine kleine Stadt (Abb. 1) mit einer Stadtmauer und vier Stadt-toren. Die Stadtmauer war der Schutz vor r ¨auberischen Angriffen. Das Johannistor, derPulverturm und Teile des Anatomieturms sowie der Stadtmauer sind bis heute erhaltengeblieben.Abb. 1: Das mittelalterliche Jena mit Hamster BommelJena hatte damals immer einen Nachtw ¨achter. Der W ¨achter lief nachts innerhalb von Jenadie Stadtmauer ab. Ein Zauberer hat Bommel in das mittelalterliche Jena gebeamt. Dortmuss Bommel die Aufgabe des Nachtw ¨achters ¨ubernehmen und die Stadtmauer ablaufen.Als Belohnung darf er nach dem Rundgang das leckere Korn verspeisen.Um diese und andere Aufgaben l ¨osen zu k ¨onnen, lernten die Kinder Algorithmen zu ent-wickeln. Dazu eigneten sie sich die Hamster-Befehle, Testbefehle, zusammengesetztenBedingungen, Grundstrukturen (Sequenz, Selektion, Zyklus) und parameterlose Prozedu-ren an [Bo16].336 Otto Thiele, Petra Jückstockii“proceedings” — 2017/9/17 — 20:19 — page 337 — #337iiiiiiIra Diethelm (Hrsg.): INFOS 2017 – Informatische Bildung zum Verstehen und Gestalten derdigitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 32.1 L ¨osen der Einstiegsaufgabe”Hamster Bommel und das leckere Korn“Bommel schaut aus seinem Bau aufs Feld (Abb. 2). Pl ¨otzlich erblickt er am Feldrand einleckeres Korn. Bommel w ¨are kein Hamster, w ¨urde er das Korn nicht hamstern wollen.Abb. 2: Die Welt des Hamsters Bommel- Baue Bommels Welt am Computer.- Hilf Bommel, das Korn zu hamstern.- Pr¨ufe, ob Bommel die Aufgabe l ¨ost.Als hilfreich erwies sich, dass die Kinder die Aufgabe zun ¨achst in einem Rollenspiel aufden Fliesen zwischen den W ¨anden des Schulﬂurs l ¨osten (Abb.3).Abb. 3: Erfahrungen geh ¨oren zum Lernen (Foto: Thomas Corbus)Im Spiel ¨ubernahm jedes Kind die Rolle des Hamsters. Dabei galt es zu beachten, dass derHamster beim Laufen jeden Schritt nur von einer zur n ¨achsten Fliese ausf ¨uhren kann. Ob-wohl alle Kinder den k ¨urzesten Weg zur gegen ¨uberliegenden Wand beschritten, ben ¨otigtensie unterschiedlich viele Schritte. ¨Uber die Ursachen nachdenkend fanden sie heraus, dassmanche von ihnen die Schritte nicht immer”hamsterkonform“ ausf ¨uhrten. Das lag zumeinen daran, dass es schwierig war, Fliese f ¨ur Fliese in kleinen Schritten zu durchlaufenund zum anderen an mangelnder Konzentration. Beim Wiederholen achteten die Kinderuntereinander darauf, dass alle mit gleich vielen Schritten zur Wand gelangten. An derWand angekommen, nahm jedes Kind das Korn in Form eines Papierschnipsels auf. Mitdem korrekten Ausf ¨uhren der Handlungsfolge, Schritt f ¨ur Schritt bis zur Wand zu laufenDer Hamster hat das Programm erfolgreich beendet 337ii“proceedings” — 2017/9/17 — 20:19 — page 338 — #338iiiiiiund das Korn aufzunehmen, hatten die Kinder die Aufgabe im Rollenspiel gel ¨ost.Zum Rollenspiel sei bemerkt, dass die Kinder insbesondere durch das eigene Handelnund Erleben lernten. Das Rollenspiel hat sich zudem als geeignete Methode erwiesen, dieKinder an die Hamster-Befehle und Grundstrukturen der Algorithmen heranzuf ¨uhren.Nach einer kurzen Einf ¨uhrung war es den Kindern problemlos m ¨oglich, die virtuelle Weltdes Hamsters am Computer zu bauen. Danach ging es damit weiter, einen Algorithmuszu entwickeln. Dazu ¨uberlegten sich die Kinder, dass der Hamster in der virtuellen Welt,analog zum Rollenspiel, eine Folge von Schritten ausf ¨uhren muss, um von seinem Bauzur gegen ¨uberliegenden Wand zu gelangen. Es ergab sich die Frage, wie der Hamsteram Computer zum Laufen gebracht werden kann. Als Antwort auf die Frage lernten dieKinder die Notation vor() des Hamster-Befehls, sich einen Schritt vor zu bewegen, unddie Darstellung im Hamster-Struktogramm kennen. Im Rollenspiel entsprach vor() , ge-nau einen Schritt vor zur n ¨achsten Fliese zu laufen. Letztlich mussten die Kinder nochwissen, wie der Hamster am Computer ein Korn”hamstern“ kann. Dazu lernten sie dieNotation nimm() des Hamster-Befehls, ein Korn aufzunehmen, und die Darstellung imHamster-Struktogramm kennen. Mit den Erfahrungen aus dem Rollenspiel, der Kenntnisder Hamster-Befehle und deren Notationen entwickelten die Kinder Handlungsfolgen zumL¨osen der Aufgabe am Computer (Abb. 4).Abb. 4: Ein Hamster-Struktogramm erstellen (Foto: Thomas Corbus)Die Handlungsfolgen stellten sie als Struktogramme (Abb. 5) mithilfe des Hamster-Struk-togrammmeditors dar. Da Hamster-Struktogramme auf graﬁsche Weise Hamster-Program-me repr ¨asentieren, die interaktiv ausf ¨uhrbar sind, konnten die Kinder ¨uberpr ¨ufen, ob derHamster tats ¨achlich von seinem Bau zur gegen ¨uberliegenden Wand l ¨auft und das Korn”hamstert“.Es kam vor, dass Hamster-Struktogramme mancher Kinder nicht zu den von ihnen er-warteten Programmabl ¨aufen f ¨uhrten. Beispielsweise, wenn der Hamster die Wand nichterreichte, weil er zu wenige Schritte ausf ¨uhrte und die Fehlermeldung”Hamster versuchtein Korn aufzunehmen, das nicht da ist. :-(“ ausgegeben wurde oder er zu viele Schritteausf¨uhren sollte und die Fehlermeldung”Hamster l ¨auft gegen eine Mauer! :-(“ ausgegebenwurde. Solche Erfahrungen stimmten die Kinder nachdenklich. Sie suchten die Ursachen,weshalb der Hamster nicht tat, was sie sich vorgestellt hatten.338 Otto Thiele, Petra Jückstockii“proceedings” — 2017/9/17 — 20:19 — page 339 — #339iiiiiiIra Diethelm (Hrsg.): INFOS 2017 – Informatische Bildung zum Verstehen und Gestalten derdigitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 5Abb. 5: Algorithmus aus einer Sequenz von Hamster-BefehlenBeginnend mit dem Rollenspiel, dem Bauen der Hamster-Welt, dem Erstellen der Hamster-Struktogramme am Computer sowie dem Testen des Programmablaufs und den sich even-tuell daraus ergebenden Nachbesserungen gelang es allen Kindern, die Aufgabe zu l ¨osen.Das L ¨osen belohnte das Programm mit der Ausgabe”Hamsterprogramm erfolgreich be-endet! Herzlichen Gl ¨uckwunsch, der Hamster hat das Hamsterprogramm erfolgreich be-endet. :-)“.Das Hamster-Struktogramm ließ sich durch das Einf ¨uhren der while-Anweisung und desHamster-Testbefehls vornFrei() modiﬁzieren (Abb. 6).Abb. 6: Modiﬁziertes Hamster-StruktogrammBevor die Kinder allerdings das Struktogramm mit dem Hamster-Struktogrammeditor mo-diﬁzierten, f ¨uhrten sie auf den Fliesen des Schulﬂurs im Rollenspiel die Handlungsfolge”solange vorn frei, laufe Schritt f ¨ur Schritt vor und hamstere danach das Korn“ aus.Die Aufgabenstellung wurde dar ¨uber hinaus noch dadurch erweitert, dass der Hamstermit dem Korn in seinen Bau zur ¨uckkehren, das Korn dort ablegen und wieder aus demBau schauen sollte. Das L ¨osen dieser und weiterer Aufgaben sowie das damit verbundeneLernen f ¨uhrte die Kinder zu einem”intuitiven Algorithmusbegriff“, der sich auf Hand-lungsabl ¨aufe bezieht, die als Programme auf dem Computer ausf ¨uhrbar sind.Nach und nach zeigte sich, dass die Kinder beim Entwickeln von Hamster-Struktogrammennicht mehr auf Rollenspiele angewiesen waren, weil sie sich die vom Hamster auszuf ¨uhren-den Handlungen immer besser vorstellen konnten.Der Hamster hat das Programm erfolgreich beendet 339ii“proceedings” — 2017/9/17 — 20:19 — page 340 — #340iiiiii2.2 L ¨osen fortgeschrittener AufgabenDie Aufgabe”Hamster Bommel als Nachtw ¨achter“ (Abb. 1 in Abschn. 2) l ¨osten die Kinderaufgrund der Erfahrungen, die sie bereits in den Rollenspielen und beim Entwickeln vonAlgorithmen gemacht hatten. Sie ¨uberlegten sich, dass der Hamster entlang der Stadtmauerzum Korn gelangt, indem im Hamster-Struktogramm viermal nacheinander die while-Anweisung und der Befehl linksUm() (Abb. 7) angeordnet und abschließend noch dieBefehle vor() undnimm() anf¨ugt werden. Am Computer verfolgten die Kinder mit, wiedas Programm ablief und der Hamster entlang der Stadtmauer zum Korn gelangte und esaufnahm. Damit war die Aufgabe gel ¨ost.Abb. 7: Schleife gefolgt von einem Hamster-BefehlLeistungsstarke Kinder wurden angeregt, sich weiter mit der Aufgabe zu besch ¨aftigen. MitHilfestellungen fanden sie heraus, dass das Wiederholen der while-Anweisung und des Be-fehls linksUm() im Hamster-Struktogramm durch eine ¨außere Schleife realisiert werdenkann. Allerdings ergab sich dabei beispielsweise das Problem, dass der Hamster Runde f ¨urRunde lief, nicht zum Stehen kam und dadurch auch nicht seine Belohnung bekam. Jetztwurde es schwierig, denn die Frage ergab sich, wie der Hamster zum Stehenbleiben ge-bracht werden kann. In diesem Zusammenhang lernten die Kinder die zusammengesetzteBedingung !(kornDa()) kennen (Abb. 8).Abb. 8: L ¨osungsalgorithmus mit hohem AnspruchIm Laufe der Zeit lernten die Kinder immer besser, analytisch und algorithmisch zu den-ken. Sie waren in der Lage, in den umrahmenden Geschichten der Aufgaben die Problemezu erfassen und L ¨osungsalgorithmen zu entwickeln. Ebenso waren einige Kinder in derLage, gegebene Aufgaben zu erweitern oder zu modiﬁzieren.340 Otto Thiele, Petra Jückstockii“proceedings” — 2017/9/17 — 20:19 — page 341 — #341iiiiiiIra Diethelm (Hrsg.): INFOS 2017 – Informatische Bildung zum Verstehen und Gestalten derdigitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 7Spaß und Freude bereitete den Kindern, sich zu gegebenen Hamster-Welten (Abb. 9) Ge-schichten und Aufgabenstellungen auszudenken, wie z. B. die folgende Geschichte.Abb. 9: V orgegebene Hamster-Welt”Heute hat der kleine Hamster Bommel Lust auf einen Spaziergang. Er steckt seinen Kopfaus dem Bau. Da erblickt er die drei K ¨orner, die verteilt auf dem Feld rumliegen. HamsterBommel folgt den K ¨ornern. Nehmen tut er sie aber nicht. Bommel l ¨asst sie lieber f ¨ur dieV¨ogel ¨ubrig. Am Ende sitzt der kleine Hamster Bommel wieder in seinem Bau, als ob nichtsgewesen w ¨are. :-)“Die Kinder dachten sich auch eigene fantasievolle Hamster-Welten und dazugeh ¨orige Auf-gaben aus, die sie in Geschichten einbanden.Außerdem lernten die Kinder parameterlose Prozeduren kennen und wendeten sie an. Bei-spielsweise erwies es sich als zweckdienlich, mithilfe einer Prozedur aus drei Hamster-Befehlen linksUm() den Befehl rechtsUm() zu erstellen.Abb. 10: Eine parameterlose ProzedurNach einem halben Jahr konnten die Kinder bereits anspruchsvolle Aufgaben mit demHamster-Struktogrammeditor l ¨osen. Beispielsweise entwickelten sie Algorithmen, mit de-nen der Hamster aus gegebenen Bildnegativen (Abb. 11) die Bildpositive machte. Nat ¨urlichbot es sich an, dass die Kinder ihre V ornamen in Bildnegativen versteckten. Dann sollteder Hamster die V ornamen schreiben.Der Hamster hat das Programm erfolgreich beendet 341ii“proceedings” — 2017/9/17 — 20:19 — page 342 — #342iiiiiiAbb. 11: Aus dem Bildnegativ das -positiv erstellen3 Das Lernen begleiten3.1 Verst ¨andnisintensives LernenBei der p ¨adagogischen Arbeit mit den Kindern in der Arbeitsgemeinschaft wurde der lern-theoretische Ansatz”Verst ¨andnisintensives Lernen“ [Fa03, Fa08] ber ¨ucksichtigt.MetakognitionSelbstreflexive Begleitung und Optimierung des Lernens ErfahrungEigenes Erleben und HandelnVorstellungSinnesnahe, erfahrungs -analoge Formen des DenkensBegreifenDenken in Kategorien und ZusammenhängenAbb. 12: Tetraedermodell des”Verst ¨andnisintensiven Lernens“ [Vi17]Der Ansatz geht davon aus, dass die Qualit ¨at des Lernens zum einen durch das Verste-hen bestimmt wird. Verstehen ist grundlegend f ¨ur das Lernen und l ¨asst sich als kogni-tiver Modellierungsprozess beschreiben, in dem Erfahrung, V orstellung, Begreifen5undMetakognition dynamisch zusammenwirken. In der Abb. 12 sind die vier Dimensionendes Verstehens graﬁsch veranschaulicht6. Zum anderen bestimmen die Autonomie, sozia-le Eingebundenheit und Kompetenzen der Lernenden die Lernqualit ¨at [Fa08, DR93].Der lerntheoretische Ansatz erwies sich als hilfreich, die Verstehensprozesse der Kindermitverfolgen, die individuellen Unterschiede beim Lernen genauer erfassen und besserber¨ucksichtigen sowie die Ursachen f ¨ur Verstehensprobleme anlysieren zu k ¨onnen. Dazueinige erl ¨auternde Beispiele.5Begreifen wird im lerntheoretischen Ansatz als eine Dimension des Verstehens aufgefasst.6Erfahrung, V orstellung und Begreifen sind dem Denken und Metakognition ist dem Nachdenken zuordbar.342 Otto Thiele, Petra Jückstockii“proceedings” — 2017/9/17 — 20:19 — page 343 — #343iiiiiiIra Diethelm (Hrsg.): INFOS 2017 – Informatische Bildung zum Verstehen und Gestalten derdigitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 9Wie wichtig eigenes Erleben und Handeln beim Lernen waren, zeigte sich u. a. in denRollenspielen, die mit den Kindern im Rahmen des L ¨osens von Aufgaben durchgef ¨uhrtwurden (Abschn. 2.1).Interessant war zu beobachten, wie die Kinder erlebten, was der Hamster bei den Pro-grammabl ¨aufen ausf ¨uhrte oder auch nicht (Abschn. 2.1). F ¨uhrte der Hamster nicht dasErwartete aus, wurden die Kinder angeregt, ¨uber ihre Algorithmen nachzudenken, nachden Ursachen, weshalb die Algorithmen nicht das Erwartete leisteten, zu suchen und dieAlgorithmen nachzubessern.Verstehensprobleme ergaben sich beispielsweise, wenn in Wortlauten von Aufgaben Be-griffe verwendet wurden (wie etwa Feldrain), deren Bedeutung die Kinder nicht kanntenoder mit denen sie andere V orstellungen verbanden. Deshalb mussten Formulierungen vonAufgaben ge ¨andert werden.Das logische Denken der Kinder war u. a. bei den zusammengesetzten Bedingungen ge-fordert. Formale Notationen, wie z. B. !vornFrei() oder vornFrei() && !kornDa() ,bereiteten Probleme und mussten insbesondere ge ¨ubt werden.Die Kinder lernten selbstbstimmt (”aus sich selbst heraus“) aus Interesse an den Geschich-ten und den vom Hamster zu bew ¨altigenden Problemen. Wenn Kinder einmal nicht lernten,am Computer in der Welt des Hamsters versanken und keine Probleme l ¨osen wollten, lages oft am anstrengenden Schultag, den sie bereits hinter sich hatten. Dann ließ man dieseKinder auch einmal in der Welt des Hamsters spielen.Die Kinder f ¨uhlten sich stets in die Arbeitsgemeinschaft eingebunden. Zu keiner Zeit fehltees einem Kind an Akzeptanz bzw. Anerkennung innerhalb der Lerngemeinschaft.Das auf Verstehen ausgerichtete Lernen trug mit dazu bei, dass die Kinder folgende fach-liche Kompetenzen erwarben:- Analysieren von Aufgaben, um zu l ¨osende Probleme zu erfassen- Entwickeln von L ¨osungsalgorithmen unterschiedlicher Schwierigkeitsgrade- Darstellen der L ¨osungsalgorithmen in Hamster-Struktogrammen- Suchen von Fehlern und Korrigieren fehlerbehafteter Algorithmen- Lesen und Verstehen gegebener Hamster-Struktogramme- Erweitern und Modiﬁzieren gegebener Aufgaben- Erstellen und Verwenden von parameterlosen Prozeduren- Konstruieren von Aufgaben, Schreiben umrahmender Geschichten f ¨ur diese Aufga-ben und Erstellen von Musterl ¨osungen3.2 Verstehen zweiter OrdnungNeben dem lerntheoretischen Ansatz fand der professionstheoretischen Ansatz”Verstehenzweiter Ordnung“ [Fa08] Ber ¨ucksichtigung. Das heißt, es wurde ein professionell kontrol-lierter Perspektivwechsel zum Lernen der Kinder vollzogen, der ein ko-konstruierendesDer Hamster hat das Programm erfolgreich beendet 343ii“proceedings” — 2017/9/17 — 20:19 — page 344 — #344iiiiiiBegleiten des Lernens erm ¨oglichte. Durch Ko-Konstruktion fand ein Lernen statt, dassdurch Interaktion und Zusammenarbeit mit den Kindern bestimmt war. Beispielsweisewurden beim Ko-Konstruieren immer wieder Differenzerfahrungen bzgl. des eigenen Ver-stehens und dem der Kinder gemacht, wenn Kinder Aufgaben und Probleme auf unerwar-tete und teils bemerkenswerte Art und Weise l ¨osten. Diese Erfahrungen waren ausschlag-gebend daf ¨ur, den Kindern die Denkwege offen zu halten. F ¨uhrten die Gedankeng ¨ange beiKindern zu inkorrekten oder keinen L ¨osungen, erwies sich Ko-Konstruktion ebenso alshelfend. Dabei wurde in der Interaktion mit diesen Kindern anerkannt, dass sie sich bei ih-ren L ¨osungsversuchen etwas dachten. Was sie sich gedacht hatten, ließ man sich von ihnenerkl¨aren. Keinesfalls wurde gegen ¨uber den Kindern ge ¨außert, dass das, was sie gemachthatten, falsch sei. Stattdessen wurden die Kinder angeregt, ¨uber ihre Gedankeng ¨ange nach-zudenken und Korrekturen vorzunehmen oder andere Wege hin zu den L ¨osungen einzu-schlagen.4 FazitEin Journalist der Ostth ¨uringer Zeitung, der ¨uber die Arbeitsgemeinschaft den Artikel”In-formatik kommt bei Viertkl ¨asslern gut an“ verfasste, stellte die Frage, ob Grundschul-kinder ¨uberhaupt die V oraussetzungen mitbringen, sich mit informatischen Problemen zubefassen [Zi15]. Die Frage kann aufgrund der guten Erfahrungen aus der Arbeitsgemein-schaft, der erzielten Lernergebnisse und -qualit ¨at sowie dem Spaß und der Freude derKinder beim Lernen bejaht werden.Literaturverzeichnis[Bo16] Boles, D.: HaSE-Hamster-Struktogrammeditor. http://www.boles.de/hamster/hase.html , 2016. Stand: 09.03.2017.[DR93] Deci, E.; Ryan, R.: Die Selbstbestimmungstheorie der Motivation und ihre Bedeutung f ¨urdie P ¨adagogik. Zeitschrift f ¨ur P¨adagogik 39, S. 223–237, 1993.[Fa03] Fauser, P.: Lernen als innere Wirklichkeit. ¨Uber Imagination, Lernen und Verstehen. In(Rentsch, I.; Madelung, E.; Fauser, P., Hrsg.): Bilder im Kopf. Texte zum ImaginativenLernen, S. 201–213. Kallmeyer, Seelze-Velber, 2003.[Fa08] Fauser, P.: Theorie des Verst ¨andnisintensiven Lernens. In (Fauser, P.; Prenzel, M.; Schratz,M., Hrsg.): Was f ¨ur Schulen! Proﬁle, Konzepte und Dynamik guter Schulen in Deutschland,S. 5–26. Kallmeyer, Seelze-Velber, 2008.[Vi17] ViL e.V .: Das Tetraeder im ViL. http://www.verstehenlernen.de/?page_id=2788 ,2017. Stand: 09.03.2017.[wi16] witelo e.V .: Hamster Bommel und der Computer. http://witelo.de/lernorte/projekt/hamster-bommel-und-der-computer , 2016. Stand: 10.03.2017.[Zi15] Zippel, T.: Informatik kommt bei Viertkl ¨asslern gut an. Ostth ¨uringer Zeitung, 14. Februar2015.344 Otto Thiele, Petra Jückstockii“proceedings” — 2017/9/17 — 20:19 — page 345 — #345iiiiiiInfos 2017 - Informatische Bildung zum Verstehen und Gestalten    1  Workshop: Ein Durchgang durch das Grundfach Informatik (nur) mit dem elektronischen Schulbuch inf-schule.de  Heiko Jochum1, Klaus Becker2, Martin Zimnol3, Daniel Jonietz4, Oliver Schneider5, Manuel Froitzheim6 Abstract: Anhand eines möglichen Durchgangs durch das Grundfach Informatik wird in einem ersten Teil ein Überblick über die Inhalte des elektronischen Schulbuchs inf-schule.de vermittelt. Der Umfang des Schulbuchs ist dabei so groß, dass er alle Inhalte des Grundfachs (zumindest in einigen Bundesländern) abdeckt. Innerhalb des Workshops wird neben diesen Inhalten auch ein Ausblick auf alternative Heransgehensweisen und optionale Inhalte gegeben. In einem zweiten Teil entwickeln die Teilnehmenden einen möglichen Durchgang durch das Grundfach Informatik für ihr Bundesland. Die Teilnehmenden benötigen nur ein Endgerät mit Internetzugang. Keywords: Elektronisches Schulbuch, Digitales Schulbuch, Informatikunterricht, Lernen, Didaktik der Informatik, Web-Applikation, Grundfach 1 Das Schulbuchprojekt inf-schule Das Schulbuchprojekt inf-schule.de (vgl. https://www.inf-schule.de/) wurde 2008 initiiert und inzwischen ist ein elektronisches Schulbuch für den Informatikunterricht entwickelt worden, das fast die gesamten Unterrichtsinhalte des Faches Informatik abdeckt. Bezüglich des Umfangs (mit mehr als 2000 Webseiten) und der Nutzerzahlen (mit mehr als 100.000 Zugriffen pro Schulwoche) hat sich inf-schule.de inzwischen zum akzeptierten Lehrwerk für den Informatikunterricht entwickelt. Genau wie gedruckte Schulbücher orientiert es sich an den Lehrplänen und den Bildungsstandards und bietet vielfältiges Material zum Lernen und Lehren. ([F+17], ebenfalls in diesem Band) Das Schulbuch inf-schule.de wird als digitales Schulbuch im Internet angeboten. In der nach Sanguo, Xuehai und Chenglin [Sa12] vorgeschlagen Entwicklungshierarchie für digitale Schulbücher ist es der Stufe 2.0 (Schulbücher ohne analoge Vorlage) zuzurechnen. In weiten Teilen erreicht es inzwischen auch die Stufe 3.0, die eine Mitgestaltung durch die Nutzer vorsieht.                                                               1 Werner-Heisenberg-Gymnasium Bad Dürkheim, Kanalstr. 19, 67098 Bad Dürkheim, jom@whgonline.de 2 BurgGymnasium Kaiserslautern, Burgstraße 18, 67659 Kaiserslautern, beckerkp@web.de 3 Pädagogisches Landesinstitut Rheinland-Pfalz, Butenschönstraße 2, 67346 Speyer, martin.zimnol@pl.rlp.de 4 BurgGymnasium Kaiserslautern, Burgstraße 18, 67659 Kaiserslautern, daniel@jonietz.de 5 Sickingen-Gymnasium Landstuhl, Philipp-Fauth-Straße 3, 66849 Landstuhl, o.schneider@mac.com 6 Universität Siegen, Zentrum für ökonomische Bildung in Siegen (ZöBiS), Kohlbettstraße 15, 57068 Siegen, froitzheim@zoebis.de I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 345ii“proceedings” — 2017/9/17 — 20:19 — page 346 — #346iiiiii 2    Manuel Froitzheim et al.  2 Workshopbeschreibung Durch den recht großen Umfang des Schulbuchs inf-schule.de können nahezu alle Unterrichtsinhalte des Grund- und auch des Leistungsfachs Informatik abgedeckt werden. Darüber hinaus gibt es etliche optionale Themenbereiche (wie z.B. Messwert-Erfassung mit dem RaspberryPi), die zusätzlich in den Unterricht integriert werden können.   Abbildung 1: Startseite mit der Übersicht über die verschiedenen Themenbereiche auf inf-schule.de (vgl. https://inf-schule.de/) Innerhalb des Workshops wird ein Überblick über den Aufbau und die verschiedenen Themenbereiche vermittelt. Dazu soll zunächst ein möglicher Durchgang durch das Grundfach Informatik skizziert werden, der vollständig durch das Schulbuch inf-schule.de abgedeckt wird und dem rheinland-pfälzischen Lehrplan entspricht. Des Weiteren werden die darüber hinausgehenden Themenbereiche skizziert. Durch die Vielzahl der zusätzlichen Optionen innerhalb des Schulbuchs sind verschiedene Wege durch das Schulbuch denkbar. Deshalb sollen in einem zweiten Teil die Teilnehmenden einen eigenen Durchgang durch das Grundfach Informatik für ihr Bundesland erarbeiten und überprüfen, inwieweit dieser sinnvoll durch das Schulbuch inf-schule.de abgedeckt wird. Da es sich bei inf-schule.de um ein kostenloses online-Schulbuch handelt, benötigen die Teilnehmenden nur ein Endgerät mit Internetzugang. 346 Heiko Jochum et al.ii“proceedings” — 2017/9/17 — 20:19 — page 347 — #347iiiiiiFörderung digitaler Bildung mit elektronischen Schulbüchern      3  Literaturverzeichnis [Da16]  Dagstuhl-Erklärung: Bildung in der digitalen vernetzten Welt, www.gi.de/fileadmin/redaktion/Themen/dagstuhl-erklaerung-bildung-in-der-digitalen-welt-2016.pdf,  Stand: 23.01.2017. [F+17] Froitzheim, M.; Becker, K.; Zimnol, M.; Jonietz, D.; Schneider, O.; Jochum, Heiko: Förderung digitaler Bildung mit digitalen Schulbüchern. (ebenfalls in diesem Band) [Sa12]  Sanguo, C.; Xuehai, M.; Schenglin, L. (2012). The Pace of Ebook Development in China. IN:  LOGOS: The Journal of the World Book Community, 23(2), 14-20. [ScFr14]  Schuhen, M.; Froitzheim, M. (Hrsg.): Das Elektronische Schulbuch. Fachdidaktische Anforderungen und Ideen treffen auf Lösungsvorschläge der Informatik. Münster: LIT Verlag. [ScFr15]  Schuhen, M.; Froitzheim, M. (Hrsg.): Das Elektronische Schulbuch 2015. Fachdidaktische Anforderungen und Ideen treffen auf Lösungsvorschläge der Informatik. Münster: LIT Verlag. [ScFr16]  Schuhen, M.; Froitzheim, M. (Hrsg.): Das Elektronische Schulbuch 2016. Fachdidaktische Anforderungen und Ideen treffen auf Lösungsvorschläge der Informatik. Münster: LIT Verlag. [Wi03]  Wiater, W. (2003): Schulbuchforschung in Europa. Bestandsaufnahme und Zukunftsperspektive. Bad Heilbrunn: Klinkhardt. Ein Durchgang durch das Grundfach Informatik 347ii“proceedings” — 2017/9/17 — 20:19 — page 348 — #348iiiiiiii“proceedings” — 2017/9/17 — 20:19 — page 349 — #349iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017     15 Analogien für Programmierkonzepte: Ein Weg zum Computational Thinking Barbara Wieczorek1, Liz Ribe2, Christina B. Class3 und Michael Brinkmeier4 Abstract: Im Rahmen einer Informatikausbildung ist das Erlernen einer Programmiersprache für Schüler und Studenten ein wichtiger Zugang, um Computational Thinking zu erlernen. Jedoch stellen die Grundlagen der Programmierung häufig eine schwer überwindbare Hürde dar, die Lernende vom eigentlichen Ziel abhält, Programmierkonzepte als Problemlöseoperatoren einzusetzen. In diesem Beitrag wird untersucht, inwieweit Analogien als Brücke zwischen dem Vorwissen des Lernenden und Programmierkonzepten dienen können. Es wird ein anschauliches Modell zur Verdeutlichung von Beziehungen und Wechselwirkungen von Lerner, Analogien und Fachkonzepten vorgestellt. In einem Workshop werden in Arbeitsgruppen Praxisbeispiele von Analogien für konkrete Programmierkonzepte zusammengestellt und deren Vor- und Nachteile sowie Grenzen und resultierende Herausforderungen diskutiert. Keywords: Computational Thinking, Programmierung, Informatikunterricht, Analogien, Problemlösen, duale Kodierung 1 Einleitung Computational Thinking wurde bereits in den 1950er und 60er Jahren als Teil der Informatik, unter dem Begriff algorithmic thinking (Algorithmisches Denken) gesehen [De09]. 2006 forderte Jeannette Wing, dass Computational Thinking neben Lesen, Schreiben und Rechnen als grundlegende Fähigkeit erlernt werden soll [Wi06]. Hierunter versteht sie eine Reihe von mentalen Werkzeugen, um Probleme zu lösen, Systeme zu entwerfen und menschliches Verhalten zu verstehen [Wi06]. Grundlagen des Computational Thinking sollen daher in die Curricula der Schule integriert werden [BS11]. Hierzu wurde eine Matrix mit Konzepten und verschiedenen Schulfächern entwickelt, in denen diese Konzepte angewandt und trainiert werden. Auch wenn Aspekte des Computational Thinking auf verschiedenste Wege gelehrt werden können, ist es zutiefst mit Programmieraktivitäten verbunden.  Das Erlernen einer Programmiersprache kann die Ausbildung von Computational-                                                             1 Ernst-Abbe-Hochschule Jena, Grundlagenwissenschaften, Carl-Zeiss-Promenade 2, 07745, Jena, Barbara.Wieczorek@eah-jena.de 2 Ernst-Abbe-Hochschule Jena, Grundlagenwissenschaften, Carl-Zeiss-Promenade 2, 07745, Jena, Elizabeth.Ribe-Baumann@eah-jena.de 3 Ernst-Abbe-Hochschule Jena, Grundlagenwissenschaften, Carl-Zeiss-Promenade 2, 07745, Jena, Christina.Class@eah-jena.de 4 Universität Osnabrück, Institut für Informatik, Albrechtstr. 28, 49076, Osnabrück, Michael.Brinkmeier@uni-osnabrueck.de I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 349ii“proceedings” — 2017/9/17 — 20:19 — page 350 — #350iiiiii 16    Vorname1 Nachname1 und Vorname2 Nachname2  Thinking-Fähigkeiten unterstützen, indem das automatisierte Lösen von Problemen geschult wird [Wo17]. Die Einführung in eine Programmiersprache findet häufig bereits zu Beginn einer Informatikausbildung statt.  Um genauer beleuchten zu können, wie Fachkonzepte der Programmierung so erschlossen werden können, dass sie letztendlich zur Lösung von Problemen eingesetzt werden können, betrachten wir die kognitive Psychologie des Lösens von Problemen. In diesem Kontext ist unser Ziel die Verankerung von Fachkonzepten in Wissensstrukturen, sodass sie als Operatoren im Sinne der Problemlösetheorie eingesetzt werden können. Hierbei gehen wir von folgender Begriffsbildung aus [Sp03]: • Problem als Zustand: Ein Problem kann aufgefasst werden als ein Ausgangszustand. Die Lösung des Problems entspricht einem Zielzustand.  • Lösungsprozess als Transformation: Um den Ausgangszustand in den Zielzustand zu transformieren, müssen Problemlöseoperatoren angewendet werden. Eine Transformation besteht aus einer konkreten Reihenfolge von Operationen unter Einsatz geeigneter Operatoren und kann mehrere Übergangszustände beinhalten. Wir können diese Begriffe auf die Programmierung übertragen: Ein zu lösendes Ausgangsproblem kann durch eine geeignete Repräsentation [An13] als Ausgangszustand eines Programmes betrachtet werden. Die Durchführung von Operationen, die durch das Programm festgelegt sind, stellt den Lösungsprozess dar. Der Zustand des Programms wird während seiner Durchführung transformiert, bis ein definierter Endzustand erreicht ist. Der Endzustand ist eine Repräsentation der Lösung des Problems. Um geeignete Operationen für den Lösungsprozess zu finden, müssen entsprechende Fachkonzepte aus der Programmierung als Problemlöseoperatoren eingesetzt werden. Ein zentrales Problem in der Ausbildung von Programmieranfängern ist also der Erwerb von entsprechenden Problemlöseoperatoren. Nach der Theorie des Problemlösens gemäß Anderson [An13] erfolgt dieser Erwerb durch Entdecken, direkte Instruktion oder den Einsatz von Analogien. Im Abschnitt 2 werden Probleme diskutiert, die bei der allgemeinen Vermittlung von Programmierkonzepten auftreten. Danach richten wir den Fokus auf den Einsatz von Analogien, denen eine möglichst große Bildhaftigkeit innewohnt. Im Abschnitt 3 werden unsere Erwartungen an bildhafte Analogien und die Voraussetzungen für deren Verwendung erläutert. Anschließend werden im Abschnitt 4 spezifische Aspekte, die bei der Verwendung von bildhaften Analogien auftreten können, anhand von Beispielen geschildert.  Die Inhalte dieses Beitrags sollen in einem Workshop vertieft werden. Dazu werden in Arbeitsgruppen Praxisbeispiele von Analogien für konkrete Programmierkonzepte zusammengestellt. Deren Vor- und Nachteile sowie Grenzen und resultierende Herausforderungen werden anschließend diskutiert. 350 Barbara Wieczorek, Liz Ribe, Christina B. Class, Michael Brinkmeierii“proceedings” — 2017/9/17 — 20:19 — page 351 — #351iiiiii Der Kurztitel des Beitrags    17 2 Herausforderungen bei der Vermittlung von Programmierkonzepten Trotz der Tatsache, dass einige Lernende auch ohne Vorkenntnisse zum Bereich der Programmierung einen leichten Zugang finden und die vermittelten Konzepten schnell einsetzen können, stellen Inhalte, die bereits am Anfang der Programmierausbildung stehen (z.B. Variablen, Datentypen, Verzweigung, Iteration), für einen erheblichen Teil der Studierenden oft schwer überwindbare Hürden dar. Diese Beobachtung wird in Abbildung 1 illustriert durch die Auswertung von Prüfungen des ersten Semesters im Bereich Informatik von Studierenden einer Ingenieurwissenschaft. Während man möglicherweise andere Verteilungen der Noten erwarten würde, tritt ein in der landläufigen Meinung von Lehrenden als typisch angesehenes Phänomen auf: Es gibt eine Häufung von guten und sehr guten ebenso wie von schlechten und sehr schlechten Noten bei vergleichsweise wenigen mittelmäßigen Noten. Nach Meinung der Autoren deutet diese Notenverteilung auf eine große Anzahl an Studierenden hin, die keinerlei oder fast keinen Zugang zu den entsprechenden Konzepten finden konnten. Insbesondere gibt es recht wenige Studierende, deren Leistungen im Mittelfeld liegen und die recht passabel mit dem Stoff und damit den Konzepten zurechtkommen.  Wir führen dies darauf zurück, dass Fachkonzepten aus dem Bereich der Programmierung oft ein hoher Grad an Abstraktion innewohnt. Um Konzepte erfolgreich einsetzen zu können, müssen in hohem Ausmaß formale Denkoperationen durchgeführt werden. Bereits der Entwurf einfacher Programme geht oft mit einem Prozess der Hypothesenbildung einher, zum Beispiel um Nutzereingaben, die vor Ausführung des Programmes unbekannt sind, zu verarbeiten oder Iterationen, deren Häufigkeit vom Zustand des Programmes abhängt, zu realisieren. Auch die Verwendung von Abbildung 2: Notenspiegel von zwei Informatik-Prüfungen im ersten Studiensemester 0510151,01,31,72,02,32,73,03,33,74,05,0StudentenanzahlErreichte NoteNotenspiegel -Einführung in die InformatikKurs 1Kurs 2Abbildung 1: Notenspiegel von zwei Informatik-Prüfungen im ersten Studiensemester Analogien für Programmierkonzepte: Ein Weg zum Computational Thinking 351ii“proceedings” — 2017/9/17 — 20:19 — page 352 — #352iiiiii 18    Vorname1 Nachname1 und Vorname2 Nachname2  Hilfsvariablen, zum Beispiel für die Bildung einer Summe über die Elemente einer Liste, geht über das konkret-operative Denken hinaus, auf welches der Lernende hinsichtlich des Problemlöseprozesses zurückgreifen kann. Hinsichtlich der Hilfestellung für Lernende mit Schwierigkeiten haben die Autoren wenig Erfolg mit schrittweisem, ausführlichem Erläutern von einfachen Quelltextbeispielen beobachtet. Wesentlich bessere Erfahrungen wurden hingegen mit bildhaften Vergleichen gemacht, um betroffene Konzepte anschaulich zu machen. Bei der Veranschaulichung wird entweder Bezug auf Objekte aus der Lebenswelt der Lernenden genommen oder auf Prozesse, die aufgrund der Erfahrung der Lernenden bekannt oder leicht zugänglich sind. Somit werden Verstehensprozesse hinsichtlich deklarativen oder prozeduralen Wissens unterstützt. 3 Erwartungen und Voraussetzungen an die Verwendung bildhafter Analogien Schwierigkeiten beim Zugang zu Fachkonzepten sollen also durch den Einsatz von bildhaften Analogien gemindert werden. Die Nutzung von bildhaften Analogien hat folgende Vorteile: • Ist eine Analogie ausreichend bildhaft und aus dem Erfahrungsbereich des Lernenden gegriffen, so kann eine Einbindung an die Wissensstrukturen des Lernenden erleichtert werden. Dies stellt wichtige Dimensionen im verständnisintensiven Lernen dar [ViL17]. Betrachten wir das Vorwissen des Lerners und das zu vermittelnde Fachwissen als Objekte, so kann mit einer bildhaften Analogie eine Verknüpfung zwischen Vorwissen und Fachwissen wie in Abbildung 2 hergestellt werden. • Die Anknüpfung an vorhandenes Wissen kann beim Lernenden bereits zu einer positiven Selbsteinschätzung hinsichtlich des Lernprozesses führen und damit zu einer Erhöhung der Lernmotivation [DR13].  • Im fortgeschrittenen Lernprozess, nachdem das Fachwissen und das Verständnis für die Analogie sich gefestigt haben, kann eine duale Kodierung des Wissens erreicht werden: Das erworbene verbale Wissen wird durch die nonverbale Bildhaftigkeit der Analogie ergänzt. Es ist anzunehmen, dass dual kodiertes Wissen besser abgerufen werden kann [Ma01] und dadurch ebenso besser auf andere Situation übertragen und somit als Problemoperator eingesetzt werden kann. • In umgekehrter Richtung kann ein Fachkonzept Einzug in alltägliche Situationen 352 Barbara Wieczorek, Liz Ribe, Christina B. Class, Michael Brinkmeierii“proceedings” — 2017/9/17 — 20:19 — page 353 — #353iiiiii Der Kurztitel des Beitrags    19 erhalten, wenn ein Objekt als Analogon verwendet wird, welchem ein Lernender häufig begegnet. Somit kann eine Veränderung der Betrachtungsweise alltäglicher Gegenstände und Prozeduren hinsichtlich des Computational Thinking möglich sein. Wird z.B. ein Snackautomat als Analogon für eine Funktion verwendet (siehe Abschnitt 4.4), erinnert sich der Lernende ggf. bei künftigen Snackautomaten-Einkäufe an den Funktionsbegriff. Analogien werden in der Lehre und in Lehrbüchern schon lange eingesetzt, und bereits im letzten Jahrtausend gab es umfangreiche Untersuchungen zu deren Einsatz in den Naturwissenschaften. In einer Literaturstudie stelle Duit die Ergebnisse verschiedenster Untersuchungen zusammen und wies auf diverse Probleme hin [Du91]. Bereits 1982 wurde vor dem unbedachten Einsatz von Analogien in der Informatikbildung gewarnt, da diese das Lernen erschweren könnten [HM82]. Voraussetzung für den Einsatz einer Analogie ist daher eine hohe Passgenauigkeit. Hierzu müssen die Elemente eines Fachkonzeptes, die durch den Einsatz einer Analogie abgedeckt werden, identifiziert werden. Um die erfolgreiche Verknüpfung der Analogie zum Fachkonzept herzustellen, ist laut Anderson sicherzustellen, dass bei „jedem Akt des Analogiebildens“ die „Elemente von der Quelle auf das Ziel […] übertragen“ werden [An13]. Eine bloße Nennung eines Bildes im Umfeld der Vorstellung eines Fachkonzeptes ist demzufolge nicht ausreichend. Studien haben gezeigt, dass oft eine Anleitung notwendig ist, um die Analogien richtig in die Denkprozesse zu integrieren [Du91]. Auch ist wichtig, auf die Unterschiede zwischen Analogie und der Quelle hinzuweisen, um deutlich zu machen, wo die Gemeinsamkeiten nicht helfen. Hier kann es hilfreich sein, verschiedene Analogien für die einzelnen Aspekte zu verwenden [Du91].  Das Verständnis von Konzepten ist im Bereich der Programmierung oftmals nicht ausreichend.  Weinberg [We98] stellte in seiner Beobachtung von Lernen von Programmiersprachen fest, dass ein Wissenserwerb über Fachkonzepte möglicherweise nicht stattfinden kann ohne handlungsorientierte Auseinandersetzung mit dem Abbildung 2: Vorwissen und Fachwissen mit Analogien zusammenführen und mithilfe handlungsorientierten Auseinandersetzungen zum dual-kodierten Wissen des Lerners führen. Analogien für Programmierkonzepte: Ein Weg zum Computational Thinking 353ii“proceedings” — 2017/9/17 — 20:19 — page 354 — #354iiiiii 20    Vorname1 Nachname1 und Vorname2 Nachname2  entsprechenden System. Entscheidend ist also die Verzahnung der Wissensvermittlung durch den Lehrenden und des eigenständigen Handelns durch den Lernenden. Hierbei kann die Verwendung von Analogien zum Einstieg in ein Programmierkonzept hilfreich sein, ein handelnder Bezug zum Programmieren muss dennoch hergestellt werden. Für den Wissenserwerb soll ein Lernender jedes neue Konzept aktiv anwenden und entsprechende Programme am Rechner implementieren. Der Bezug zur Analogie kann während dieses Prozesses immer wieder unterstützend hergestellt werden.  Dies ist jedoch nur so lange sinnvoll, wie die relevanten Gemeinsamkeiten der Analogien zum Tragen kommen und Lernende nicht verwirrt werden. Aus diesem Grund kommen Auswahl und zielführendem Einsatz von Analogien eine große Bedeutung zu. Hierbei gilt es sowohl die Frage nach der Wahl der Analogien zu betrachten, als auch zu entscheiden, wann von der Verwendung der Analogie abgesehen werden und der Lernende auf relevante Unterschiede hingewiesen werden soll. 4 Probleme und Fragen hinsichtlich des Einsatzes von bildhaften Analogien Um zu verdeutlichen, wie ein Programm einen Problemlöseprozess im Sinne von Anderson darstellt, soll das folgende Beispiel betrachtet werden. Es soll für eine Menge von Zahlen in einem Programm das Minimum dieser Zahlen bestimmt werden. Eine Automatisierung des Lösungsprozesses in der Programmiersprache Python könnte folgendermaßen aussehen:  liste = [2,4,6,3,5] minimum = liste[0] zaehler = 1 while zaehler<len(liste): if minimum > liste[zaehler]: minimum = liste[zaehler]  zaehler = zaehler + 1 print(minimum)   Die Repräsentation des Problems beinhaltet die Variablen liste, zaehler und minimum mit ihren anfänglich definierten Werten. Der Zielzustand ist erreicht, wenn die Variable minimum das tatsächliche Minimum der Zahlen bezeichnet. Um durch geeignete Operationen zum Zielzustand zu gelangen, wird eine Reihe von Transformationen angewendet: • zaehler wird in jeder Iteration inkrementiert. • Ein Vergleich von aktuellem Listenelement und aktuellem Minimum findet statt, falls nötig, wird minimum angepasst. 354 Barbara Wieczorek, Liz Ribe, Christina B. Class, Michael Brinkmeierii“proceedings” — 2017/9/17 — 20:19 — page 355 — #355iiiiii Der Kurztitel des Beitrags    21 • Ein Abbruchkriterium wird überprüft. Notwendige Konzepte für die Operationen sind hierbei die Wertzuweisung, die Auswertung logischer Ausdrücke sowie die Iteration. 4.1 Funktionale Fixierungen  Unter funktionaler Fixierung wird verstanden, dass für einen Problemlöseoperator nicht der volle Umfang seiner Möglichkeiten erkannt wird, sondern er nur in ausgewählten (bekannten) Kontexten eingesetzt wird. Der von Anderson [An12] beschriebene Effekt der funktionalen Fixierung im Zusammenhang mit Problemlöseoperatoren hat womöglich auch Bedeutung für die Verwendung von bildhaften Analogien.  Während Programmierkonzepte allgemeingültigen Charakter haben, sind bildhafte Analogien häufig in einer konkreten Situation verankert. Für jede bildhafte Analogie muss untersucht werden, inwieweit die Gefahr der Einschränkung des Operators im Sinne einer funktionalen Fixierung durch fehlende allgemeingültigen Charakter der Analogie besteht.  Mit der Vielfalt an Ausprägungen von Programmierkonzepten stellen sich daher beim didaktischen Einsatz von Analogien immer die Fragen:  • Wie lange kann diese als übergangsweise Veranschaulichung dienen, um später zu einer Abgrenzung zu gelangen? • Wie sehr ist eine Vereinfachung eines entsprechenden Programmierkonzeptes möglich und wie wird diese später korrigiert? 4.2 Deklarative Analogie: Schachtel als Analogie für Variablenkonzept Unter einer deklarativen Analogie verstehen wir eine Analogie, welche Verstehensprozesse unterstützt, die auf deklaratives Wissen bezogen sind. Häufig wird z.B. das Bild eines beschrifteten Gefäßes (oder Schachtel) verwendet, um das Konzept einer Variablen einzuführen. In obigem Bespiel könnte man mit einer Schachtel darstellen, welche Rolle minimum im Algorithmus hat.  Aber auch wenn hierfür die von Anderson geforderten Passgenauigkeit einer Analogie erfüllt ist, repräsentiert das Bild der Schachtel das Konzept der Variable als Ganzes noch nicht völlig korrekt:  • In der Realität kann eine Schachtel leer sein. Dies trifft auf Variable nicht zu, da sie als Speicherbereich immer einen, wenn auch zufälligen, Wert enthalten. In Sprachen wie C, welche das Lesen einer Variable ohne vorherige Initialisierung ermöglichen, ist dies ein relevanter Unterschied. Dies kann also zu einer falschen Vorstellung einer Variablenzuweisung führen.  Analogien für Programmierkonzepte: Ein Weg zum Computational Thinking 355ii“proceedings” — 2017/9/17 — 20:19 — page 356 — #356iiiiii 22    Vorname1 Nachname1 und Vorname2 Nachname2  • In der Realität kann eine Schachtel durchaus mehrere Elemente enthalten. Eine Zuweisung eines Wertes an eine Variable führt aber dazu, dass der vorherige Wert unwiderruflich überschrieben wird.   • In der Realität hat eine Schachtel eine gegebene Größe. In C/C++ wird zwar durch Deklaration einer Variablen ein bestimmter Speicherbereich bezeichnet, in welchem Daten des deklarierten Typs gespeichert sind. In Python kann das Bild der Schachtel aber zu einer fehlerhaften funktionalen Fixierung führen, da die gleiche Variable im Laufe der Zeit Werte unterschiedlichen Typs und unterschiedlicher Größe speichern kann. Eine Variable in Python stellt lediglich den Namen eines Objektes im Speicher dar - durch Zuweisung eines anderen Wertes bezeichnet die Variable meist ein anderes Objekt im Speicher.  Hat sich die Vorstellung einer Schachtel als Analogon zu einer Variable manifestiert, können Probleme auftreten, wenn weitere Konzepte eingeführt werden, z.B.  statische und dynamische Variablen oder Listen. Diese sind mit dem Schachtelmodell nicht unmittelbar zugänglich und bei Einführung dieser muss Abstand von der bisher verwendeten Analogie genommen werden oder weitere Analogien hinzugefügt werden, um die anderen Eigenschaften aufzuzeigen. Solche multiplen Analogien können notwendig sein, um einen Konzept umfassend zu erlernen [Du91].  4.3 Deklarative Analogie: Snackautomat als Analogie für  Funktionskonzept Die Kapselung von Quelltext in Funktionen ist ein wichtiges Konzept in der Programmierung. Funktionen stellen bereits ein relativ hohes Abstraktionsniveau dar und bereiten Lernenden häufig Schwierigkeiten. Ein grundlegendes Problem ist die Trennung von Definition und Ausführung von Funktionen. Lernenden fällt es oft schwer zu verstehen, dass Funktionen erst durch einen Funktionsaufruf ausgeführt werden und Parameter erst durch den Funktionsaufruf konkrete Werte erhalten. Als bildhafte Analogie für eine Funktion mit Rückgabewert, unter Verwendung zweier Parameter, kann ein Snackautomat dienen. Ein Funktionsparameter steht für den Geldbetrag, der in den Automaten eingeworfen wird, ein weiterer für die Nummer, die zur Auswahl des Produktes über eine Tastatur eingegeben wird. Während der Funktionsabarbeitung werden verschiedene Operationen von dem Snackautomaten durchgeführt und als Rückgabewert erhält man das gewünschte Produkt. Das Ausgabefach kann als Analogie für das return-Statement in der Funktionsdefinition betrachtet werden.  Das Beispiel knüpft an die Vorstellungswelt der Lernenden an und ist hilfreich, um das Konzept von Funktion, Funktionsaufruf und Aufrufer zu verdeutlichen. Dennoch kann auch hier eine funktionale Fixierung erfolgen, wenn der Lernende zu einer der folgenden Schlussfolgerungen gelangt: 356 Barbara Wieczorek, Liz Ribe, Christina B. Class, Michael Brinkmeierii“proceedings” — 2017/9/17 — 20:19 — page 357 — #357iiiiii Der Kurztitel des Beitrags    23 • Eine Funktion hat immer zwei Parameter. • Eine Funktion muss immer einen Rückgabewert liefern. • Der Rückgabewert einer Funktion muss immer von allen Parametern abhängen. Um eine Manifestation dieser Fixierung zu verhindern, müssen gezielt Verallgemeinerungen anhand geeigneter Programmieraufgaben stattfinden, z.B. von:  • Einer Funktion mit nur einem Argument. • Einer Funktion ohne Parameter. • Einer Funktion ohne Rückgabewert. • Einer Funktion, deren Rückgabewert nur von einer Teilmenge ihrer Parameter abhängt. 4.4 Operative Analogie: Finden der kürzesten Spielzeit aus einer CD-Regal als Analogie für Bestimmung des Minimums Unter einer operativen Analogie verstehen wir eine Analogie, welche Verstehensprozesse unterstützt, die auf prozedurales Wissen bezogen sind. Das Abarbeiten eines Rezepts kann z.B. als operative Analogie für das Abarbeiten eines Algorithmus dienen. Mit Hilfe einer operativen Analogie kann der Prozess zur Entwicklung des obigen Algorithmus zur Minimumbestimmung unterstützt werden. In diesem Zusammenhang wird folgende analoge Aufgabe gestellt: Die kürzeste Spieldauer von CDs in einem Regal soll gefunden werden. Durch eigene Überlegungen kommen Lernende schnell auf die Idee, dass es sinnvoll ist, alle CDs der Reihe nach zu betrachten und sich die bisherige kürzeste Spieldauer zu merken. Wenn das Problem des Minimums mehrerer Zahlen gestellt wird, muss der Lernende Gemeinsamkeiten mit der Analogie identifizieren, um einen Transfer des Lösungsprozesses vorzunehmen: Das Regal ist eine Liste; die CDs sind die Zahlen; die gemerkte kürzeste Spielzeit ist eine Variable. Durch die Analogie werden die Lernenden dabei unterstütz, eigene Algorithmen mithilfe ihrem prozeduralen Vorwissen zu entwickeln.  5 Zusammenfassung Die Nutzung von bildhaften Analogien für Fachkonzepte, die im Rahmen der Programmierausbildung vermittelt werden sollen, dient als Hilfsmittel, um anfängliche Verständnisschwierigkeiten zu überwinden. Wichtig hierbei ist eine wiederholte Auseinandersetzung mit der Analogie während der Bearbeitung von Programmieraufgaben, welche im Zusammenhang mit dem zu lernenden Fachkonzept Analogien für Programmierkonzepte: Ein Weg zum Computational Thinking 357ii“proceedings” — 2017/9/17 — 20:19 — page 358 — #358iiiiii 24    Vorname1 Nachname1 und Vorname2 Nachname2  stehen, um Fehlvorstellungen durch mangelnde Passgenauigkeit und Effekte funktionaler Fixierung zu vermeiden. Analogien sollen helfen, Programmierkonzepte besser in Wissensstrukturen zu verankern, um Problemlösefähigkeiten in Bezug auf Programmierung zu verbessern. Ebenso sollen Analogien es ermöglichen, vermehrt alltägliche Situationen aus dem Blickwinkel des Computational Thinking zu betrachten.  Literaturverzeichnis [An13] Anderson, J.R.: Kognitive Psychologie. VS Verlag für Sozialwissenschaften, S. 165, 249, 2013.  [BS11] Barr, V; Stephenson, C.: Bringing Computational Thinking to K-12: What is Involved and What ist he Role of the Computer Science Education Commmunity?. acm Inroads, 2/1, S. 48, 2011. [De09] Denning, P.J.: The Profession of IT Beyond Computational Thinging, Communcations of the ACM, 52/6, S. 28-30, 2009. [DR93] Deci, E.L.; Ryan, R.M.: Die Selbstbestimmungstheorie der Motivation und ihre Bedeutung fuer die Paedagogik. Zeitschrift für Pädagogik, 39/2, S. 223-238, 1993. [Du91] Duit, R.: On the Role of Analogies and Metaphors in Learning Science, Science Education, 75/6, S. 649-672, 1991. [HM82] Halasz, F.; Moran, T.: Analogy Considered Harmful, CHI '82 Proceedings of the 1982 Conference on Human Factors in Computing Systems, S. 383-386, 1982. [Ma01] Martschinke, S.: Aufbau mentaler Modelle durch bildliche Darstellungen. Waxmann Verlag, Münster [u.a.], S. 61, 2001. [Sp03] Spering, M.: "Praktisches Problemlösen", 2003, http://www.psychologie.uni-heidelberg.de/ae/allg/mitarb/ms/PH_Einfuehrung.pdf, zuletzt besucht am 9.6.2017. [ViL17] Verein für Verständnisintensives Lernen e.V., http://www.verstehenlernen.de/?page_id=672, zuletzt besucht am 6.6.2017.  [We98] Weinberg, G.M.: The Psychology of Computer Programming. Silver Anniversary ed, Dorset House Publ., 1998. [Wi06] Wing, J.: Computational Thinking, Communications of the ACM, 49/3, S. 33-35, 2006. [Wo17] Stephan Wolfram Blog, http://blog.stephenwolfram.com/2016/09/how-to-teach-computational-thinking/, zuletzt besucht am 9.3.2017. [YSH17] Yadav, A; Stephenson C.; Hong, H.: Computational Thinking for Teacher Education, Communications of the ACM, 60/4, S. 55-62, 2017.  358 Barbara Wieczorek, Liz Ribe, Christina B. Class, Michael Brinkmeierii“proceedings” — 2017/9/17 — 20:19 — page 359 — #359iiiiiiInfos 2017 - Informatische Bildung zum Verstehen und Gestalten    1  Workshop: Datenbank-Anfragen mit SQL und dem elektronischen Schulbuch inf-schule.de   Heiko Jochum1, Klaus Becker2, Martin Zimnol3, Daniel Jonietz4, Oliver Schneider5, Manuel Froitzheim6 Abstract: Anhand einer konkreten Unterrichtseinheit zum Thema Datenbanken wird exemplarisch die Arbeit mit dem elektronischen Schulbuch inf-schule.de vorgestellt. Die Unterrichtseinheit beruht auf der Verwendung einer auch online verfügbaren Datenbank und wird anhand vieler Übungsphasen nachvollzogen. Die Teilnehmenden benötigen nur ein Endgerät mit Internetzugang. Für die Datenbankabfragen kann alternativ auch ein bereits installiertes XAMPP-Paket verwendet werden. Keywords: Elektronisches Schulbuch, Digitales Schulbuch, Informatikunterricht, Lernen, Didaktik der Informatik, Web-Applikation, Datenbank 1 Einleitung und Motivation Digitale Bildung wird inzwischen als unverzichtbar in einer immer stärker digital geprägten und vernetzten Welt angesehen. Die Aneignung grundlegender Konzepte zum Verständnis dieser Welt und die Entwicklung von Kompetenzen zur Mitgestaltung einer solchen Welt sollte in einem eigenständigen Lernbereich erfolgen – so die einhellige Forderung aller mit digitaler Bildung befassten Fachdidaktiker [Da16]. Nur in einem fundierten Informatikunterricht kann die anwendungsbezogene Perspektive (Wie nutze ich das?) und die gesellschaftlich-kulturelle Perspektive (Wie wirkt das?) um die zum Verständnis der digitalen Welt erforderliche technologische Perspektive (Wie funktioniert das?) erweitert werden ([F+17], ebenfalls in diesem Band). Der Erwerb digitaler Bildung wird im Informatikunterricht gezielt gefördert. Das Schulbuch als Leitmedium bei der Unterrichtsplanung und Unterrichtsgestaltung spielt dabei eine zentrale Rolle [Wi03], weil hier „Lerninhalte eines Faches oder Lernbereichs in systematischer, didaktischer und methodischer Form“ bereitgestellt werden [Sa10].                                                                1 Werner-Heisenberg-Gymnasium Bad Dürkheim, Kanalstr. 19, 67098 Bad Dürkheim, jom@whgonline.de 2 BurgGymnasium Kaiserslautern, Burgstraße 18, 67659 Kaiserslautern, beckerkp@web.de 3 Pädagogisches Landesinstitut Rheinland-Pfalz, Butenschönstraße 2, 67346 Speyer, martin.zimnol@pl.rlp.de 4 BurgGymnasium Kaiserslautern, Burgstraße 18, 67659 Kaiserslautern, daniel@jonietz.de 5 Sickingen-Gymnasium Landstuhl, Philipp-Fauth-Straße 3, 66849 Landstuhl, o.schneider@mac.com 6 Universität Siegen, Zentrum für ökonomische Bildung in Siegen (ZöBiS), Kohlbettstraße 15, 57068 Siegen, froitzheim@zoebis.de I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 359ii“proceedings” — 2017/9/17 — 20:19 — page 360 — #360iiiiii 2    Manuel Froitzheim et al.  Schulbücher wurden bisher in Buchform erstellt. Mit der Entwicklung digitaler bzw. elektronischer Schulbücher ist ein neues Forschungsfeld entstanden, das der Entwicklung von Lernumgebungen neue Impulse verleiht [ScFr14][ScFr15][ScFr16].  2 Workshopbeschreibung Innerhalb des Workshops wird die Arbeit mit dem Schulbuch inf-schule.de anhand einer Unterrichtseinheit zu dem Thema „Datenbanksysteme“ vorgestellt. Ziel ist es, die Unterrichtseinheit durch eigenständige Arbeit am Computer nachzuvollziehen. Die Unterrichtseinheit [Mo16] beruht auf der sukkzessiven Normalisierung und Erweiterung einer vorhandenen Datenbank für Geodaten. Durch die Verwendung einer vorhandenen Datenbank müssen die Schülerinnen und Schüler keinen Datenbankentwurf vornehmen, bevor sie nicht die Arbeit mit einer Datenbank kennengelernt haben. Durch verschiedene Versionen erkennen die Schülerinnen und Schüler zum einen die Notwendigkeit der Vermeidung von Redundanz und können sich zum anderen durch Verfolgung des didaktischen Prinzips der Isolation von Schwierigkeiten zunächst auf wenige Tabellen (z.B. Länder, Orte)  innerhalb der Datenbank konzentrieren, bevor diese nach und nach durch weitere Tabellen (z.B. Flüsse) ergänzt werden.  Abbildung 1: Datenbankschema der vollständigen Geodatenbank "terra" (vgl.: https://inf-schule.de/information/datenbanksysteme/terra/selbstreferenz/uebungen)   360 Heiko Jochum et al.ii“proceedings” — 2017/9/17 — 20:19 — page 361 — #361iiiiiiFörderung digitaler Bildung mit elektronischen Schulbüchern      3  Die Durchführung der SQL-Anfragen an die Datenbank kann zum einen durch online-Anfragen innerhalb des Schulbuchs inf-schule.de erfolgen, zum anderen ist es auch möglich, die verschiedenen Datenbank-Versionen auf einem eigenen Server bzw. einem lokalen Computer zu installieren und auf diesem Wege die Anfragen zu stellen. Literaturverzeichnis [Da16]  Dagstuhl-Erklärung: Bildung in der digitalen vernetzten Welt, www.gi.de/fileadmin/redaktion/Themen/dagstuhl-erklaerung-bildung-in-der-digitalen-welt-2016.pdf,  Stand: 23.01.2017. [F+17] Froitzheim, M.; Becker, K.; Zimnol, M.; Jonietz, D.; Schneider, O.; Jochum, Heiko: Förderung digitaler Bildung mit digitalen Schulbüchern. (ebenfalls in diesem Band) [Mo16]  Mohr, T.: Datenbanksysteme, www.inf-schule.de/information/ datenbanksysteme, Stand: 10.02.2017.  [Sa12]  Sanguo, C.; Xuehai, M.; Schenglin, L. (2012). The Pace of Ebook Development in China. IN:  LOGOS: The Journal of the World Book Community, 23(2), 14-20. [ScFr14]  Schuhen, M.; Froitzheim, M. (Hrsg.): Das Elektronische Schulbuch. Fachdidaktische Anforderungen und Ideen treffen auf Lösungsvorschläge der Informatik. Münster: LIT Verlag. [ScFr15]  Schuhen, M.; Froitzheim, M. (Hrsg.): Das Elektronische Schulbuch 2015. Fachdidaktische Anforderungen und Ideen treffen auf Lösungsvorschläge der Informatik. Münster: LIT Verlag. [ScFr16]  Schuhen, M.; Froitzheim, M. (Hrsg.): Das Elektronische Schulbuch 2016. Fachdidaktische Anforderungen und Ideen treffen auf Lösungsvorschläge der Informatik. Münster: LIT Verlag. [Wi03]  Wiater, W. (2003): Schulbuchforschung in Europa. Bestandsaufnahme und Zukunftsperspektive. Bad Heilbrunn: Klinkhardt. Datenbank-Anfragen mit SQL und dem elektronischen Schulbuch inf-schule.de 361ii“proceedings” — 2017/9/17 — 20:19 — page 362 — #362iiiiiiii“proceedings” — 2017/9/17 — 20:19 — page 363 — #363iiiiii Online kooperieren im Informatikunterricht  Thomas Rohde1, Kolja Strauss2, Gregor Alexander Benedikt3, René Levens4, Lina Haji5, Olaf Müller6 Abstract:  Der Verzicht auf kooperative Lernformen in Rechnerräumen mit der Begründung, dass diese au fgrund der meis t unveränderlichen Tischanordnung und ortsfest montierten Rechner nur schwer zu realisieren seien, ist üblich – wird aber der Forderung nach kompetenzorientiertem Unterricht nicht gerecht. Die Begründung ist dennoch nachvollziehbar, da es an Konzepten mang elt, die aus der räumlich und technisch bedingten Not eine Tugend machen. Daher wird hier anhand der bekannten  Methode n „Placemat“, „Kartenabfrage “, „Evaluationszielscheibe“ und „Lerntempoduett“ beispielhaft gezeigt, wie das Potenzial der im Raum befindlic hen Rechner genutzt werden kann, um auf Basis von Weba nwendung en Kooperation zu ermöglichen . Darüber hinaus wird ein „Methodenkoffer“ vorgestellt, mit dem sich die Onl inekooperation unter Einsatz von schülereigenen Smartphones/Tablets in jedem Klassenraum realisieren lässt, der über einen  WLAN -fähigen PC mit Beamer verfügt.  Die vorgestellten Lernwe rkzeuge bieten weitere Vorteile  wie hohe Flexibilität  im Einsatz , Unabhängigkeit von kostspieligen und umweltschädlichen Materialien  (insb. Papier) sowie  Möglichk eiten einer unkomplizierten dauerhaften Sicherung  und Wiederverwendbarkeit  der Arbeitsergebnisse.  Keywords: Kooperative Lernform , Think -Pair-Share, Informatikunterricht, Webanwendung,  BYOD, Raspberry Pi, Placemat, Lerntempoduett, Kartenabfrage, Metaplanka rten, Brainstorming, Evaluationszielscheibe . 1 Einleitung  Die Realisierung von Methodenvielfalt im Informatikunterricht ist eine besondere Herausforderung, da Tische und Hardware im Rechnerraum meist ortsfest aufgestellt sind und ohne unverhältnismäßig große n Aufwand nicht verändert werden können. Häufig stehen die Tische zusätzlich in engen Reihen oder U -Form, so dass gemeinsames Arbeiten um einen Gruppentisch herum unmöglich wird. Kleine Tafeln oder Whiteboards limitieren die Menge der anschreibbaren Inform ationen und für gewöhnlich fehlen Pinnwände oder Magnetleisten an den Wänden. Weiterhin zwingt der Nachhaltigkeitsgedanke zum schonenden Umgang mit Ressourcen wie Papier, Stiften, Klebstoff usw. Andererseits verfügen die Schülerinnen und Schüler (SuS) über  vernetzte                                                            1 BBS Lingen – Agrar und Soziales , Beckstraße 23, 49809 Lingen , rohde@bbs -lingen -as.net  2 GBS Grafschaft Bentheim, Denekamper Str. 1, 48529 Nordhorn, strauss@gbs -grafschaft.de  3 Berufskolleg Lübbecke, Rahdener Str. 1, 32312 Lübbecke, benedikt@berufskolleg -lk.de  4 BBS Gesundheit und Soziales, Am Bölt 5, 48527 Nordhorn, rene.levens@bbs -gs-nordhorn.de  5 BBS Brinkstraße, Brinkstraße 17, 49080 Osnabrück, haji@bbs -os-brinkstr.de  6 Studienseminar für das Lehramt an BBS Osnabrück, Blumenthalstraße 32, 49076 Osnabrück, o.mueller@s tudienseminar -os.de  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 363ii“proceedings” — 2017/9/17 — 20:19 — page 364 — #364iiiiii und universell einsetzbare Werkzeuge in Form von Standrechnern oder Smartphones bzw. Tablets. Diese Konstellation ist vor dem Hintergrund der in (niedersächsischen) Curricula geforderten Förderung der Sozialkompetenz inakzeptabel.  Werkzeuge zur  Online -Kollaboration gibt es bereits einige , siehe  z.B. [St14] . Leider sind sie entweder kostenpflichtig7 und/oder sie unterstützen die gewünschte Phasierung ( z.B. Think -Pair-Share) des Unterrichts nicht.  Daher wurden im Fachseminar Informatik am Studiens eminar für das Lehramt an Berufsbildenden Schulen in Osnabrück  einige bekannte Unterrichtsmethoden in Form von Webanwendungen in Online -Versionen überführt . Alle Online -Versionen der Methoden sind zum direkten Einsatz im Unterricht unter http://www.oncoo.d e erreichbar.  2 Die Methoden  Im Folgenden werden die bisher als Webanwendung realisierten Methoden jeweils unter Nennung  der Nachteile der klassischen offline bzw. tafel -/papierbasierten  Variante sowie Skizzierung der Vorteile der Online -Version dargestellt . Alle Webanwendungen sind in Standardbrowsern lauffähig. Die Anforderungen unterscheiden sich nur geringfügig und der Einsatz kann z.T. in verschiedenen Unterrichtsphasen erfolgen (s. Tab. 1). Methode  Lehrer -Client  SuS-Clients  Java-Script im SuS-Client  Unterrichtsphase  Placemat  PC PC, Tablet  ja Erarbeitung  Evaluations -zielscheibe  PC PC, Tablet, Smartphone  nein Reflexion  Kartenabfrage  PC PC, Tablet, Smartphone  ja Planung, Erarbeitung  Lerntempoduett  PC PC, Tablet, Smartphone  ja Erarbeitung  Tab. 1: Anforderungen und Einsatzmöglichkeiten der einzelnen Methoden  2.1 Das Placemat  Einsatzzweck, Ablauf und Vorteile der Placemat -Methode wurden z.B. in [Re14] oder [GG06] bereits ausführlich beschrieben.  Die Nachteil e der klassischen Variante der Methode auf Papier sind:  • Es wird pro Gruppe ein Tisch benötigt , um den die M itglieder gemeinsam sitzen können.                                                             7 Es wird z.B. entweder Geld oder  die Herausgabe personenbezogener Daten (z.B. Telefonnummer) verlangt.  364 Thomas Rohde et al.ii“proceedings” — 2017/9/17 — 20:19 — page 365 — #365iiiiii • Rechteckige Blätter lassen sich bei drei Gruppenmitgliedern nicht in drei gleichgroße Bereiche teilen.  • Während der  Think -Phase ist „Spicken“ möglich.  • Das sukzessive Lesen/Betrachten/Erfassen der Einzellösungen zu Beginn der Pair -Phase g elingt den einzelnen  Schülerinnen und Schülern  unterschiedlich schnell. Einige müssen warten, bis das Placemat weiter gedreht werden k ann. • Während der Diskussion in der Pair -Phase ist der Großteil der Teillösungen für jedes Gru ppenmitglied verdreht.  • Am Ende der Pair -Phase ist das Gruppenergebnis für alle SuS verdreht, die gerade nicht daran schreiben.  • Das Gruppenergebnis muss von einem G ruppenmitglied mit leserlicher Handschrift komplett neu auf geschrieben werden , obwohl es zum größten Teil aus Formulierungen der Teilergebnisse besteht.  • Die Präsentation des Gruppenergebnisses durch Aufhängen des Plakates i n der Share -Phase ist in manchen  Klassen - und vielen Fachräumen problematisch.  • Das Plakat kann in Fachräumen häufig nicht bis zur nächsten Stunde verbleiben.  Die Webanwendung Online -Placemat wurde entwickelt, um die Methode Placemat im Rechnerraum unter Umg ehung der genannten räumlichen Probleme und Verbesserung der Nachteile der Papierversion zu re alisieren.   Abb. 1: Dauerhaft über den Beamer projizierte Gesamtansicht mit Informationen zu den verbleibenden Zeiten, Gruppenzusammensetzungen und Bearbeitungsstän den Die Lehrkraft legt auf ihrer  Startseite der Webanwendung zunächst di e Gruppengrößen sowie die Dauer der Think - und die der Pair -Phase fest. Dann erscheint die Online kooperieren im Informatikunterricht 365ii“proceedings” — 2017/9/17 — 20:19 — page 366 — #366iiiiii Gesamtansicht , die dauerhaft in der Projektion sichtbar bleibt und es erlaubt, sowohl die Gruppenzuordnung als auch den Bearbeitungsstand der SuS zu überblicken  (s. Abb. 1: Dauerhaft über den Beamer projizierte Gesamtansicht mit Informationen zu den verbleibenden Zeiten, Gruppenzusammensetzungen und Bearbeitungsstän den). Die einzelnen SuS registrieren sich auf der Schülerstartseite mit ihrem Namen und werden per Zufall einer Farbgruppe zugeordnet. In der Think -Phasen -Ansicht tippt jede Schülerin und jeder Schüler das eigene A rbeitsergebnis ein und schickt es spätestens am Phasenende ab. Zu Beginn der Pair -Phase trifft sich jede Farbgruppe am Rechner des Mitglieds A , wo anhand der Pair -Phasen -Ansicht (entspricht dem Papier -Placemat) die einzelnen Ergebnisse diskutiert werden und das gemeinsame Gruppenergebnis  durch Copy&Pas te beschleunigt erstellt und gespeichert wird  (s. Abb. 2).  Abb. 2: Online -Placemat mit Think -Phase -Ergebnissen links und Gruppenergebnis rechts.  In der abschließenden Share -Phase stellen eine oder meh rere Farbgruppen ihr jeweiliges Ergebnis am Lehrerrechner vor, indem sie es in der Gesamtansicht aufrufen. Abschließend kann die Lehrkraft alle Gruppenergebnisse in Form eines Zip -Archives herunterladen und den SuS zur Verfügung stellen.  2.2 Die Evaluationsz ielscheibe  Einsatzzweck, Ablauf und Vorteile der Zielscheiben -Methode wurden z.B. in [Be01] oder [Bp12] bereits ausführlich beschrieben.  Die Nachteile der klassischen Variante der Methode auf Papier /an der Tafel  sind:  • Es werden Papier und Klebepunkte benöt igt und verbraucht.  • Die Punkte müssen entweder zeitaufwändig sequenziell oder in einer Schülertraube parallel aufgeklebt werden . 366 Thomas Rohde et al.ii“proceedings” — 2017/9/17 — 20:19 — page 367 — #367iiiiii • Das Feedback geschieht nicht völlig anonym. Später aufklebende SuS können durch früher aufklebende SuS beeinflusst werden.  • Die Zielscheibe  kann aus Platzgründen und aufgrund von Manipulationsgefahr häufig nicht bis zur nächsten Stunde im Klassen -  bzw. Rechner raum  verbleiben.  Die Webanwendung Online -Zielscheibe wurde entwickelt, um die Methode Zielscheibe im Klassen - oder Rechnerr aum unter Umg ehung der genannten räumlichen Probleme und Verbesserung der Nachteile der Papierversion zu re alisieren.  Die Lehrkraft legt auf ihrer Startseite der Webanwendung zunächst die zu evaluierenden Aspekte  fest. Anschließend erscheint die Zielscheib e und darauf im Laufe der Zeit die Punkte der SuS.  Neben jedem Abschnitt wird der  entsprechende Aspekt  zusammen mit  dem Mittelwert und der Standardabweichung seines Feedbacks angezeigt. Die zusätzlich angezeigte Anzahl der SuS, die ihr Feedback abgegeben haben, erlaubt  der Lehrkraft, den Fortgang der  Feedbackabgabe  im Blick zu behalten  (s. Abb. 3). Um die Anonymität und einen fairen Ablauf zu gewährleisten, werden die IP -Adressen der teilnehmenden SuS unsichtba r im Hintergrund ges ammelt und a nhand dieser Sammlung werden versuchte Mehrfachteilnahmen abgewiesen. Die Diskussion der Feedbackergebnisse kann durch erneutes Aufrufen der Zielscheibe  jederzeit fortgesetzt werden.   Abb. 3: Online -Zielscheibe mit  Evaluationsergebnis von 27 SuS  Die Ansicht der Webanwendung für die SuS besteht aus einer Reihe von Radiobuttons neben jedem zu evalu ierenden Aspekt. Die SuS geben i hre Meinung durch die Auswahl der entsprechenden Buttons an und senden anschließend ihr Er gebnis zur Zielscheibe (s. Abb. 4).  Online kooperieren im Informatikunterricht 367ii“proceedings” — 2017/9/17 — 20:19 — page 368 — #368iiiiii  Abb. 4: SuS -Ansicht mit Evaluationsaspekten und einer zehnstufigen Skala zur Bewertung  2.3 Die Kartenabfrage  Die Kartenabfrage ist eine Methode, die im Unterricht zu u nterschiedlichen Zwecken eingesetzt werden kann. Dazu gehören u. a. das Planen weiterer Vorgehensweisen, das Strukturieren von Vorwissen und das Finden von Kompromissen , vgl. z.B. [Ma11 ] oder [Re07] .  Bei der Umsetzung sind einige Hürden und Nachteile zu b eachten: Es ist sicherzustellen, dass ausreichend Material zur rechten Zeit am rechten Ort vorrätig ist. Häufig werden die benötigten Materialien in Form von Methodenkoffern vorgehalten. Erfahrungen aus der Praxis zeigen jedoch, dass der Einsatz solcher Ko ffer nicht immer reibungslos funktioniert, insbesondere im Hinblick auf die Aspekte Vollständigkeit und Verfügbarkeit. Das benötigte Papier ist in der Regel nicht wiederverwendbar. Dadurch verursacht jede Kartenabfrage Materialkosten und belastet die Umwel t. Das Ergebnis einer Kartenabfrage ist nur über Umwege (z. B. Abfotografieren oder langwieriges Abschreiben) möglich. Das so gesicherte Ergebnis lässt sich im späteren Verlauf (z. B. in der folgenden Sitzung) nur unter großem Aufwand reproduzieren und weiterbearbeiten. Vor allem in Rechnerräumen ist das Angebot an ausreichend großen Flächen zur Sammlung und Clusterung der Karten häufig stark begrenzt8.  Abb. 5: Clustern und E ditieren von Karten  Die Webanwendung Kartenabfrage bi etet die Möglichkeit, Karten im Browser eines                                                            8  Siehe Kapitel 1.  368 Thomas Rohde et al.ii“proceedings” — 2017/9/17 — 20:19 — page 369 — #369iiiiii beliebigen Endgerätes9 zu erfassen. Analog zur papierbasierten Kartenabfrage besteht die Möglichkeit, Ideen zunächst zu sammeln und bei Bedarf zu verwerfen. Nach Abschluss der Sammlung können die Karten einzeln  oder als Gesamtpaket abgeschickt und damit an die Projektionsfläche gebracht werden (s. Abb. 6). Die Tafelansicht lässt sich an eine geeignete Stelle im Unterrichtsraum projizieren (s. Abb. 5). Am Präsentationsgerät lassen sich die gesammelten Karten beli ebig anordnen, editieren und farblich codieren. Die Anzahl der Nennungen der einzelnen Aspekte lässt sich erfassen. Es lassen sich Überschriften ergänzen. Das Ergebnis wird im Hintergrund automatisch gesichert und ist so - über die Angabe eines 4 -stelligen  Codes - auch zu einem späteren Zeitpunkt editierbar. Die Webanwendung bietet außerdem die Möglichkeit, die Tafelansicht als Bilddatei zu exportieren und so für die Unterlagen zu sichern .   Abb. 6: Erfassen von Karten  2.4 Das Lernt empoduett  Das Lerntempoduett ist eine Methode, bei der SuS Unterrichtsinhalte in mehreren Phasen - zunächst alleine und später in Partnerarbeit – und im eigenen Lerntempo erarbeiten , vgl. z.B. [Ma11] . Die Kombination des Lerntempoduetts mit einem Helfersys tem hat sich in der Praxis des Informatikunterrichts bewährt , vgl. z.B. [Re10] .   Das Lerntempoduett erfordert  – durch  seine verschiedenen Phasen und das gewollt ungleichmäßige Vorankommen der SuS  – eine gute Methodenkenntnis der SuS und eine wohl durchdac hte Begleitung durch die Lehrperson . Die besondere Herausforderung besteht darin, die Vorgehensweise so transparent und eindeutig zu gestalten, dass jedem Schüler und jeder Schülerin zu jedem Zeitpunkt bewusst ist, welche Schritte oder Aufgaben als nächste s zu erledigen sind. Sollen SuS eine helfende Rolle übernehmen, muss den arbeitenden SuS transparent gemacht werden, an wen sie sich wenden können. Aus der Perspektive der Lehrenden ist es im Rahmen des Lerntempoduetts häufig schwierig , das Vorankommen der  SuS einzuschätzen und zu beurteilen .                                                            9 Siehe Kapitel  2, Tabelle 1.  Online kooperieren im Informatikunterricht 369ii“proceedings” — 2017/9/17 — 20:19 — page 370 — #370iiiiii  Abb. 7: Tafelansicht des Online -Lerntempoduetts  Das Online -Lerntempoduett bietet einen Organisationsrahmen, in dem die SuS schrittweise durch die verschiedenen Phasen des Lerntempoduetts g eleitet werden und dazu entsprechende Hinweise erhalten. Gleichzeitig wird eine hohe Transparenz hinsichtlich des Vorankommens erreicht. Um das Online -Lerntempoduett zu nutzen, registrieren sich die SuS zunächst in der Webanwendung  und werden anschließend durch die verschiedenen Phasen der Methode gelotst. Die Partner für die Partnerarbeitsphase werden vom System automatisch zugewiesen und bekannt gegeben (s. Abb. 8). Das Vorankommen der SuS kann an eine geeignete Stelle im Klassenraum projiziert und damit transparent gemacht werden (siehe Abb. 7). Potenzielle Helfer werden farblich grün hervorgehoben. Um das Verunsicherungspotenzial („naming and shaming“) zu minimieren und die Manipulation der Partnerfindung durch Warten auf einen anderen Partner zu verhind ern, lassen sich die SuS in den Phasen „Arbeiten“ und „Warten“ in der Tafelansicht ausblenden .   Abb. 8: Verschiedene Phasen des Lerntempoduetts. Schüleransichten auf dem Smartphone  370 Thomas Rohde et al.ii“proceedings” — 2017/9/17 — 20:19 — page 371 — #371iiiiii 3 Ein digitaler Methodenkoffer auf Basis eines Raspberry Pi  Der Einsatz der vorgestellten Webanwendungen setzt  voraus, dass die Geräte10 mit dem Internet verbunden werden. Der Zugriff auf die Anwendungen kann - ohne dass ein Internetzugang von der Schule zur Verfügung gestellt wird - zwar über das mobil e Datennetz erfolgen, allerdings wird hierdurch das Datenvolumen der SuS belastet und es entstehen direkte oder indirekte Kosten. Darüber hinaus geht mit dem Einsatz von schülereigenen Smartphones ein nicht zu unterschätzendes Ablenkungspotenzial einher . Im Rahmen eines Modellprojektes an der BBS Lingen – Agrar und Soziales konnte erfolgreich ein digitaler Methodenkoffer für die Kartenabfrage auf der Basis eines  Raspberry Pi , siehe [Ra17a],  entwickelt und getestet werden. Der Raspberry Pi dient als WLAN -Accesspoint und Webserver, auf welchem  die Anwendung bereitgestellt we rden kann . Dazu muss zunächst eine WLAN -Schnittstelle mittels eines entsprechenden USB -Adapters mit Accesspoint -Unterstützung nachgerüstet werden. Nach der Installation muss das System „Ras pbian“, siehe [Ra17b],  um einen Webserver erweitert werden11. Mittels  der Softwaremodule Hostapd und Dnsmasq lässt sich der Raspberry Pi als mobiler WLAN -Hotspot einrichten , siehe [El16], [MF10] und  [Me14] .  Der Einsatz des digitalen Methodenkoffers auf der  Basis eines Raspberry Pi b ietet verschiedene Vorteile: Die Betriebskosten und der  Anschaffungspreis der eingesetzten Hardware ist gering12. Das Netzwerk des Methodenkoffers ist unabhängig vom Schulnetzwerk , wodurch  keine Gefahr des Missbrauchs der schulisc hen Infrastruktur besteht . Eine Verbindung zum Internet besteht nicht , wodurch das Ablenkungspotenzial durch Internetdienste verringert wird . Durch die Nutzung des WLAN entstehen keine Kosten für die Nutzung des Mobilfunknetzes. Der Raspberry Pi ist durch seine geringe Größe höchst transportabel im Vergle ich zu gängigen Methodenkoffern . 4 Fazit und Ausblick  Die Hoffnung, dass die hier vorgestellten rechnergestützten Realisierungen der vier Methoden die in Kapitel  2 genannten Probleme lösen, hat sich bei der E rprobung durch die Autoren und zusätzlicher Lehrkräfte im Informatik unterricht  und im Unterricht in weiteren Fächern an berufsbildenden Schulen in und um Osnabrück erfüllt.  Eine ausführliche Darstellung aller beobachteten Aspekte würde den Rahmen sprengen.  Zusammenfassend lässt sich sagen, dass die Webanwendungen von den Lerngruppen motiviert genutzt wurden. Sie ließen sich problemlos und gewinnbringend in den Unterrichtsablauf integrieren und die verwendete Technik zeigte sich sowohl in Rechnerräumen als a uch in normalen Klassenräumen unter Einsatz von BYOD -Szenarien stabil. Bis heute haben die Webanwendungen etliche Veränderungen in                                                            10 Siehe Kapitel  2. 11 Im Modellversuch wurde der Apache HTTP -Server  genutzt  [Ap16 ]. 12 Unter Einsatz  eines Raspberry Pi Zero etwa 25€.  Online kooperieren im Informatikunterricht 371ii“proceedings” — 2017/9/17 — 20:19 — page 372 — #372iiiiii Aussehen und Ablauf erfahren und es ist davon auszugehen, dass die se Entwicklung sich bis zu r Tagung  fortsetzt.  Literaturverze ichnis  [Ap16]  apache.com: Apache HTTP Server Project. https://httpd.apache.org/, Stand: 7.2.2017.  [Be01 ] Becker, G.: Qualität entwickeln: evaluieren . Friedrich Verlag, Seelze, 2001.  [Bp12 ] Bundeszentrale für politische Bildung (Hrsg.): Auswertungszielsche ibe, Evaluationszielscheibe . http://www.bpb.de/lernen/formate/methoden/62269/  methodenkoffer -detailansicht?mid=3,  Stand: 09.02.2017.  [El16]  elinux.org: RPI -Wireless -Hotspot. http://elinux.org/RPI -Wireless -Hotspot, Stand: 07.02.2017.  [GG06 ] Green, N.; Gre en, K.: Kooperatives Lernen im Klassenraum und Kollegium, Kallmeyersche Verlagsbuchhandlung GmbH, 2. Auflage, Seelze -Velber,  2006.  [Ma11]  Mattes, W.: Methoden für den Unterricht. Bildungshaus Schulbuchverlage, Paderborn, 2011.  [Me11] Menzerath, M.: Raspbe rry Pi als WLAN Access Point nutzen. https://menzerath.eu/artikel/raspberry -pi-als-wlan -access -point -nutzen/, Stand: 07.02.2017.  [MF10]  Merkel, H. -P.; Feilner, M.: Mobile WLAN -Accesspoints mit Hostapd. Linux -Magazin 06/2010. http://www.linux -magazin.de/Au sgaben/2010/06/Macht -Schule, Stand: 07.02.2017.  [Ra17a]  Raspberry PI Foundation: Raspberry PI Model B. https://www.raspberrypi.org/products/model -b/, Stand: 03.02.2017.  [Ra17b]  Raspberry PI Foundation: Downloads. https://www.raspberrypi.org/downloads/, St and: 07.02.2017.  [Re07]  Reich, K. : Unterrichtsmethoden im konstruktiven und systemischen M ethodenpool - Brainstorming. www. methodenpool.uni -koeln.de/download/brainstorming.pdf, Stand: 10.02.2017. [Re10]  Reich, K.: Unterrichtsmethoden im konstruktiven und  systemischen M ethodenpool – Partnerarbeit . http://methodenpool.uni -koeln.de/download/partnerarbeit.pdf, Stand: 10.02.2017.  [Re14 ] Reich , K.: Unterrichtsmethoden im konstruktiven und systemischen M ethodenpool - Placemat -Methode.  www.methodenpool.uni -koeln. de/download/placemat.pdf ,  Stand: 04.02.2017 . [St14]  Stommel, J. ; Morris, S. M. : Tools for Collaborative Writing, www. jessestommel.com/ tools -for-collaborative -writing, Stand: 04.02.2017.   372 Thomas Rohde et al.ii“proceedings” — 2017/9/17 — 20:19 — page 373 — #373iiiiiiWorkshop: M usikprogrammierung mit Sonic Pi  Esther Alzate Romero1, Leonore Dietrich2  Abstract:  Die Musikprogrammiersprache Sonic Pi3 , die an der University of  Cambridge speziell für Kinder und Jugendliche entwickelt wurde, eröffnet einen kreativen, kontextbasierten Zugang zur Informatik. Ganz nach dem Motto „Technik zum Anfassen“ können durch den Einsatz der günstigen Hardwarelösung Raspberry Pi Berührungsängst e zu Informatiksystemen abgebaut werden. Mithilfe des Design -Based -Research -Ansatzes wird eine Unterrichtseinheit zum Thema Musikprogrammieren unter gendersensiblen Aspekten entwickelt und untersucht. In  diesem Workshop werden vor allem die Unterrichtsein heit zu m Einstieg in die Programmierung sowie erste Ergebnisse aus der Praxisphase, die daraus resultierenden Erkenntnisse und damit verbundenen Verbesserungs - bzw. Überarbeitungsschritte thematisiert. Hierbei stehen vor allem die Gestaltungsaspekte der Un terrichtseinheit im Vordergrund, ebenso die Frage, welche zentralen Inhalte und Konzepte der Informatik in diesem Rahmen vermittelt werden können Die Workshopteilnehmer _innen  erhalten einen Einblick in die Umgebung und Sprache Sonic Pi, den Unterrichtsgang  sowie Materialien und die praktische Umsetzung in der Schule. Zum Abschluss wird ein Ausblick auf die empirische Studie gegeben.  Keywords: Informatikdidaktik, Genderforschung, Unterrichtsforschung, Musikinformatik, Live  Coding, Sonic Pi, Design -Based -Rese arch, Programmiereinstieg, Informatik im Kontext, Raspberry Pi  1 Einleitung  Der Workshop stellt eine Unterrichtseinheit vor, die im Rahmen eines Dissertationsvorhabens zur Entwicklung und Untersuchung einer gendersensiblen Einführung in die Programmierung en twickelt und erprobt wurde.  Der Zugang zur Programmierung über eine Musikprogrammiersprache soll insbesondere Mädchen ansprechen. Die Durchführung im Musikunterricht wurde gewählt, da Pflichtunterricht Informatik in der Mittelstufe im Evaluationsgebiet nic ht existiert. Die Erprobung im Rahmen einer Arbeitsgemeinschaft oder Wahlunterricht hätte dem Ziel, insbesondere Mädchen für Programmierung zu begeistern, widersprochen. Darüber hinaus bestätigen erste Erfahrungen die Erwartung der Autorinnen, dass die Ein bettung in einen künstlerischen Kontext mit geringeren Berührungsängsten nicht -technikaffiner Schüler_innen einhergeht.                                                             1 Heidelberg School of Education, Voßstraße 2, Geb. 4330, 69115 Heidelberg, romero@heiedu.ph -heidelberg.de  2 Universität Heidelberg, Didaktik der Informatik, INF 205, 69120 Heidelberg, leonore.dietrich@uni -heidelberg.de  3 http://sonic -pi.net/ [15.1.2017]  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 373ii“proceedings” — 2017/9/17 — 20:19 — page 374 — #374iiiiiiDa es im Wesentlichen um informatische Konzepte geht, die an einem musikalischen Kontext erarbeitet werden, ist die informatische Fachli chkeit der Lehrkraft ein wichtiger Faktor. Ideal ist der Unterricht als Teamteaching -Ansatz mit Informatik als Leit - und Musik als Anwendungsfach umgesetzt. Muss auf eine der Fachlehrkräfte verzichtet werden, dann kann die Einheit auch gut von einer Inform atiklehrkraft mit musikalischem Interesse umgesetzt werden.  2 Entwicklung der Unterrichtseinheit  Die Unterrichtseinheit wurde fächerübergreifend von den Autorinnen als Musikinformatikerin und Informatiklehrerin gemeinsam mit einer Musiklehrerin entwickelt. S ie orientiert sich am Mittelstufenunterricht des Faches Musik in Baden -Württemberg und ist ab Klasse 8 geeignet, einen Programmiereinstieg zu erarbeiten.  Die Fachkonzepte wurden sowohl nach informatischen als auch nach musikalischen und den jeweiligen dida ktischen Konzepten aufbereitet und die Fachsprache  in der Unterrichtsvorbereitung auf beide beteiligten Fächer abgestimmt.  Die Einheit wurde erstmals in einer achten Klasse im Rahmen des Musikunterrichts erprobt – unterrichtet wurde sie zum Großteil von e iner der Autorinnen als Informatiklehrkraft. Die Musiklehrkraft gestaltete dabei die Verankerung im musikalischen Kontext und übernahm kleinere musikalische und musikdidaktische Anteile des Unterrichts. Bei der ersten Erprobung wurden mehrere kleinere Stüc ke in Sonic Pi umgesetzt. Die ersten Stunden orientierten sich an bekanntem Liedgut, das neu arrangiert wurde.  Da die Schüler_innen den Teil der eigenen Kompositionen am Ende der Unterrichtseinheit als zu kurz, aber besonders motivierend empfanden, wurde dieses Ergebnis in die Anpassung der Einheit für die zweite Praxisphase übernommen und es wird früher zu eigenen Kompositionen übergegangen. Darüber hinaus wurde ab der zweiten Erprobung als Plattform der Raspberry Pi eingesetzt, da auf diesem Sonic Pi zuverlässiger läuft als auf den in den Schulen vorhandenen Windows -Systemen.  Dieser Workshop stellt den aktuellen, stärker an den eigenen Kompositionen orientierten Unterrichtsverlauf vor.  374 Esther Alzate Romero, Leonore Dietrichii“proceedings” — 2017/9/17 — 20:19 — page 375 — #375iiiiii3 Vorwissen der Lernenden  Da die Einheit für den Mittelstufenunterricht  entwickelt wurde, waren bei den bisher erprobten Lerngruppen Vorkenntnisse in den Fächern Musik und Physik vorhanden.  3.1 Physik  Die Vorkenntnisse aus dem Physikunterricht im Bereich Akustik sind hilfreich bei dem Verständnis der Parameter einiger Befehle in Sonic  Pi, müssen aber nicht vorausgesetzt werden. Sie können ebenso im Rahmen des Unterrichts erarbeitet und auf die Begriffe Amplitude und Phase beschränkt werden.   3.2 Musik  Für die praktische Umsetzung der eigenen Kompositionen in Sonic Pi sind musiktheoret ische Grundkenntnisse  hilfreich. Notenlesen muss keine Voraussetzung sein, ist jedoch gerade in der Einstiegsphase, in der ein bekanntes Stück in Sonic Pi nachprogrammiert wird, hilfreich. Auch sind Kenntnisse über den Aufbau musikalischer Stücke hilfreic h. In der Praxis zeigte sich, dass vor allem Analogien zu Pop - und Rocksongs und der klassischen Bandstruktur für die Schüler_innen hilfreich waren. So konnte beispielsweise die Synchronisation mehrerer Loops auf einen Loop, der das Metrum vorgibt, gut mit  der Rolle des Schlagzeugers in einer Band verglichen werden. Sonic Pi eignet sich vor allem für die Umsetzung von loop -basierter, stark rhythmus -orientierter Musik wie Techno, House, Drum  'n' Bass  etc. oder für experimentelle Noise -Experimente und flächige Ambientmusik. Da sich die Umsetzung der Komposition ab der zweiten Erprobung mit der Vertonung eines Videos  oder Bildes  beschäftigt , ist es hilfreich, wenn im Musikunterricht bereits frei zu vorg egebenen Themen/Inhalten improvisiert oder komponiert wurde.  Auch die Thematisierung von programmatischer Musik und Filmmusik kann hilfreich sein. Wichtig in diesem Kontext ist die Reflexion des eigenen künstlerischen Schaffens. Das gemeinsame Beschreiben , das Sprechen und die Reflexion über die entstandene Musik, das Finden von geeigneten beschreibenden Adjektiven sind wichtig für den künstlerischen Gestaltungsprozess.  3.3 Informatik  Haben die Lernenden bereits Kontakt mit einer Programmiersprache gehabt, so ist davon auszugehen, dass ihnen der Umgang mit Sonic Pi anfangs leichter fällt, die Erprobungsklassen hatten aber  vorher  keinen Informatikunterricht. Fachwissen in Informatik wird daher nicht vorausgesetzt und die relevanten Konzepte werden alle als neu z u erarbeiten eingestuft.  Musikprogrammierung mit Sonic Pi 375ii“proceedings” — 2017/9/17 — 20:19 — page 376 — #376iiiiii4 Ablauf  Die  Unterrichtseinheit ist in sechs Doppelstunden angelegt und gliedert sich grob in eine Einführungs - und eine Projektphase.   Stunde  Thema  Bemerkungen  1-2 Einstieg Einheit  Geschichte der Computermusik, Live Coding, Unplugged Modul zu ersten Befehlen mit Parametern  3-4 Einstieg Sonic Pi  Synthesizer, Einzelnoten , Parameter (amp, release..), Schleifen,  Samples  5-6 Komposition  Vereinfachte Schreibweise mit Modulo -Operation (Datenstrukturen), Syntax -Highlighting , Debugging, Auskommentieren  7-8 Komposition  Variablen, Effekte, Zufallsfunktionen  9-10 Komposition  Freies Arbeiten  11-12 Präsentation  Freies Arbeiten und Präsentation  Tab. 1: Grobplanung der Unterrichtseinheit Sonic Pi  4.1 Einführungsphase   Nach einer kurzen Einführung in die Computermusikgeschichte  über zentrale Figuren der Geschichte der Informatik und der elektronischen Musik folgt eine kurze Demonstration und theoretische Einführung  in das Live -Coding, das Programmieren und Improvisieren in Echtze it von elektronischer Musik und audiovisueller Kunst  [Gu13], [BS09], [C o03], [Ro15].  Den ersten Kontakt mit Musikprogrammierung erfahren die Schüler_innen dann unplugged: Zunächst müssen sie herausfinden, welche  Parameter beim Musizieren an einem Instrum ent verändert werden können. Über vorgegebene Schablonen schreiben sie dann entsprechende Befehle an ihre Mitschüler, die von diesen an unterschiedlichen Instrumenten interpretiert werden.  Abb. 1: Musikprogrammierung unplugged – Vorlage für den Unterricht  376 Esther Alzate Romero, Leonore Dietrichii“proceedings” — 2017/9/17 — 20:19 — page 377 — #377iiiiiiHierbei kommen bereits mehrere zentrale informatische Konzepte zum Einsatz und werden benannt: Befehl oder Anweisung, Parameter, Konstante, Codierung und Interpretation.  Zentrale Aspekte von Sonic Pi können so erfahrbar gemacht werden: schreibt ein_e Schüler_in bspw. den Pseudocode „spiele auf dem Klavier Ton C1 leise für 20 Sekunden” bleibt ihm/ihr nichts anderes übrig, als die Taste 20 mal hintereinander zu drücken, da traditionelle Instrumente eine durch die Bauart festgelegte  Nachschwingzeit haben. Sonic Pi hat diese Begrenzung (außer es ahmt ein traditionelles Instrument nach) nicht. Daher unterscheidet das Programm zwischen der Nachschwingzeit ( release ), also der Klangdauer und der Dauer, bis der nächste Ton anfängt ( sleep ). Die Begrifflichkeiten werden an dieser Stelle eingeführt und gesichert. Ebenso werden die aus dem Physikunterricht meist bereits bekannten Begriffe der Amplitude und Phase eines Klanges besprochen. Durch den spielerischen Umgang mit der vorgegebenen Notat ion schreiben die Schüler_innen Pseudocode, der sehr nah an der späteren Umsetzung in Sonic Pi ist.   Abb 2: Arbeitsblatt Sonic Pi - Codieren von Noten, vom Pseudocode zum Code  In der zweiten Doppelstunde wird der Pseudocode in Sonic Pi -Code übertragen. W ichtig hierfür ist eine kurze Einführung in die MIDI -Notation. Die Schülerinnen und Schüler übertragen zunächst ein einfaches, ihnen bekanntes Stück in Sonic Pi. Zentrale Konzepte wie Befehl, Parameter, Codierung und Schleife werden hierbei thematisiert un d zugleich Musikprogrammierung mit Sonic Pi 377ii“proceedings” — 2017/9/17 — 20:19 — page 378 — #378iiiiiihörbar gemacht. Sonic Pi arbeitet für die Erzeugung der Töne mit Synthesizern – die Idee eines Synthesizers kann bereits in der Einführungsstunde vorgestellt und hier wieder aufgegriffen werden. Neben analogen Synthesizern (z.B. Korg Monotron4) dürfen die Schülerinnen und Schüler auch digitale Synthesizer (demonstrierbar über eine DAW5  mit Plugins) ausprobieren und sich so ein Bild von dieser Klangwelt machen. Die Schüler_innen finden den im unplugged -Teil genutzten Parameter Instrument  in der Funktion use_synth  wieder. Zu Beginn wird der Befehlssatz auf einfache Noten mit den Parametern Tonhöhe, Lautstärke, Länge und Metrum beschränkt, die alle bereits in der vorangegangenen Stunde real erlebbar waren.  Um Melodien leichter umzusetzen werden ein fache Schleifen in Form von loops  eingeführt und als informatisches Konzept herausgearbeitet.   Abb 3: Schleifen und ihre Umsetzung in Sonic Pi  Die für das Live -Coding erforderlichen live_loops  werden im Zusammenhang mit der sync -Funktion erarbeitet, da be ides dem synchronen Ablauf dient. Bei Einführung eines solchen Konzeptes werden immer die informatische Bedeutung und die Übertragbarkeit in andere Programmiersprachen hervorgehoben. So werden beispielsweise zunächst Zählschleifen ( x.times ) eingeführt – insbesondere 2.times  wird in Musikstücken häufig verwendet, da es der einfachen Wiederholung dient. Das Konzept wird aus informatischer Sicht besprochen und die musikalische Entsprechung thematisiert. Auch die in der Programmiersprache erweiterte  Flexibilitä t für eigene Kompositionen durch eine wählbare Anzahl von  Iterationen wird diskutiert. Mit loops werden anschließend Endlosschleifen als Konzept eingeführt. Erst nach dem Einüben dieser zentralen                                                            4 http://www.korg.com/us/products/dj/monotron/  [10.03.2017]  5 Digital Audio Workstation  378 Esther Alzate Romero, Leonore Dietrichii“proceedings” — 2017/9/17 — 20:19 — page 379 — #379iiiiiiinformatischen Konzepte folgt die Sonderfunktion benannter s ynchronisierter Schleifen als spezielle Live -Coding Funktion. Diese wird auch als Ausprägung einer spezialisierten Programmiersprache vorgestellt.  4.2 Projektphase  In den folgenden Sitzungen werden zentrale Funktionen inn erhalb von Sonic Pi erklärt (Samples, Zufallsfunktion, Effekte) und ein eigenes Stück erarbeitet. Dieses kann alleine oder in Zweierteams erarbeitet werden. Da die vollkommen freie Komposition eines Stückes für manche  Schüler_innen in der erst en Erprobungsphase schwierig war , ist eine  angeleitete, eher programmatische Komposition ratsamer. Hierfür eignet sich die Vertonung eines Bildes, einer Geschichte oder eines Kurzfilms. Sonic Pi eignet sich für sphärische Klänge und rhythmisc he Pattern besonders gut, daher ist eine Arbeit mit Klan gcollagen statt dem Erstellen eines „Songs“ empfehlenswert. Ob das erarbeitete Stück live performed und im Sinne des Live -Codings mit dem Programmcode improvisiert wird, oder ob ein fertiges Stück „nur“ abgespielt wird, kann zusammen mit den Schüler_innen entschieden werden.  In dieser Phase können Musiklehrer_innen und Informatiklehrer_innen sehr gut im Team -Teaching interagieren. Der/die Musiklehrer_in kann Fragen zu den künstlerischen Gestaltungsaspekten (wi e drücke ich das, was ich sagen, will musikalisch aus? Wie kann ich einzelne musikalische Ideen miteinander verbinden?) beantworten. Der/die Informatiklehrer_in kann bei komplexeren Umsetzungsideen innerhalb des Programms helfen, ebenso kann er/sie beim Debugging unterstützen.  Schüler_inn en fragen bald nach Schreibweisen für Akkorde und setzen einfache Datenstrukturen für Melodieschreibweisen ein – Sonic Pi bietet hier beispielsweise einen Ring an, der über einen synchronisierenden Zähler durchlaufen werden kann. Komplexere Indexoperatione n können mithilfe mehrerer solcher Ringe experimentell erarbeitet und durch das direkte auditive Feedback sehr einfach verstanden werden. Der Umgang mit gestuften Hilfen und dem in der Umgebung eingebauten Tutorial führen die Schüler_innen schrittweise zu immer selbständigerem Erarbeiten eines größeren Befehlsfundus für die Gestaltung ihrer eigenen Kompositionen.  Die letzte Sitzung dient der Präsentation und einer kurzen Reflexion. Die Schüler_innen präsentieren ihre Stücke und beschreiben, wie sie bei der Komposition vorgegangen sind und was sie mit ihrer Musik ausdrücken möchten. Die Mitschüler_innen geben Feedback, gemeinsam wird über die entstandenen Klänge reflektiert. Hierbei hilft die Übung zur Beschreibung elektronischer Klänge aus der ersten Stunde.   5 Erste Durchführungsphase und Erkenntnisse  Die ersten Ergebnisse des Forschungsvorhabens werden ausführlich im Praxisbeitrag Musikprogrammierung mit Sonic Pi 379ii“proceedings” — 2017/9/17 — 20:19 — page 380 — #380iiiiii([AD17a], ebenfalls in diesem Band) beschrieben. Die Schülerinnen und Schüler waren hoch motiviert und begeistert während des Proj ekts, die Pausen wurden regelmäßig vergessen, stattdessen wurde mit Begeisterung am eigenen Stück gearbeitet. Auch Monate nach Ende des Projektes sprachen Schüler_innen begeistert von der Arbeit mit Sonic Pi im Musikunterricht. Insbesondere die Mädchen der  Lerngruppe zeigten langfristiges Interesse. Als sie in der Schule Gelegenheit hatten, erneut Musik zu programmieren, nahmen sie diese begeistert an. Grundlegende Konzepte wie Schleifen und Datenstrukturen wurden von ihnen dabei ohne Unterstützung wieder e ingesetzt. Diese zentralen Konzepte waren bei den Schülerinnen also trotz der kurzen Projektdauer und langen Pause noch präsent.  Als problematisch stellte sich die Anwendung unter Windows heraus, da Sonic Pi hier teilweise sehr instabil war. Die Autorinnen  empfehlen daher die Anwendung mit einem Raspberry Pi, wie sie ab der zweiten Erprobung auch im Projekt umgesetzt wurde. Positiver Nebeneffekt der Nutzung des Raspberry Pis ist der Abbau von Berührungsängsten mit neuer Hardware. Ganz nach dem Motto „Techni k zum Anfassen“ wird der Umgang mit einem alternativen Hardwaresystem auf kreative Weise eingeführt.  Als schwierig empfanden die Schüler_innen zudem den Umgang mit den Fehlermeldungen in Sonic Pi. Aufgrund dessen wurde im überarbeiteten Unterrichtskonzept  das Debugging stärker in den Fokus gerückt. Künftig erhalten Schüler ein Cheatsheet mit den wichtigsten Fehlermeldungen und deren Erklärung sowie Lösungsvorschlägen dazu. Darüber hinaus wird der Umgang mit Fehlermeldungen im Unterricht stärker thematisier t. Dies soll auch zu einer weiteren Festigung des Verständnisses der informatischen Aspekte führen.  Trotz dieser Schwierigkeiten waren die Schüler_innen bis zum Projektende hoch motiviert.  Aus musikalischer Sicht schufen die Schüler_innen begeisternde, k omplexe und vielschichtige Klangerlebnisse mit einer abwechslungsreichen Auswahl an Klängen: von Techno bis hin zu sphärischen, naturnahen Kompositionen.  6 Workshopinhalt  Vorkenntnisse in Sonic Pi sind für diesen Workshop nicht erforderlich. Zunächst geben wir eine kurze Einführung in das Feld der Musikinformatik und des Live -Codings. In Anlehnung an den Verlauf der von den Autorinnen konzipierten Unterrichtseinheit werden im Workshop grundlegende Funktionen der Programmiersprache Sonic Pi gemeinsam Schritt für Schritt erarbeitet. Zunächst wird anhand eines bekannten, einfachen Stückes das Schreiben von Melodien erarbeitet. Danach wird eine kleine Klangcollage erstellt, bei der vor allem das Benutzen von Samples (im Programm enthaltene Klangaufnahmen) im Vord ergrund steht. Die von den Autorinnen erstellten Arbeitsmaterialien für den Schulunterricht (7. -10.Klasse, alle Schultypen) werden außerdem kurz vor - und den Teilnehmern in der aktuellen Fassung zur Verfügung 380 Esther Alzate Romero, Leonore Dietrichii“proceedings” — 2017/9/17 — 20:19 — page 381 — #381iiiiiigestellt. Anmerkungen und Verbesserungsvorschlä ge sind sehr willkommen. Nach Abschluss des Forschungsvorhabens werden sämtliche Unterrichtsmaterialien zusammen mit Stundenverlaufsplänen und anderen Handlungsempfehlungen veröffentlicht.  Den Abschluss bildet eine Diskussion der Unterrichtsvorschläge mit Fokus auf den informatischen Wert und die unterrichtliche Umsetzbarkeit.  7 Ausb lick: weitere Erprobung  und Forschungsvorhaben  In der zweiten und dritten  Durchführungsphase wird das überarbeitete Konzept erprobt und erneut verbessert und angepasst. Ebenfalls wird ein abschließender Wissenstest entworfen. Daran schließt sich ein weiterer Forschungsteil an, in dem die gendersensible Unterrichtsgestaltung thematisiert und reflektiert wird. Nach ausführlicher Datensichtung und -auswertung wird die Unterrichtseinhe it final überarbeitet.  Literaturverzeichnis  [AD17 a] Alzate Romero, E.; Dietrich, L.: Musikprogrammierung mit Sonic Pi. Entwicklung und Untersuchung einer gendersensiblen Unterrichtseinheit zum Programmieren in der Sekundarstufe I. In (Ira Diethelm, Hrsg.):  Informatische Bildung zum Verstehen un d Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 .     [BS09]  Brown, A. R.; Sorensen, A.: Interacting with Generative  Music through Live Coding. Contemporary Mu sic Review, 28(1), S.17–29, 2009.  [Co03]  Collins, N.; McLean, A.; Rohrhuber, J.; Ward, A.: Live coding in laptop performance. In: Organised Sound, 8(3) /03, S.321–329, 2003.  [Gu13]  Guzdial, M.: Live -Coding in Education. In (Blackwell, A.; McLean, A.; Noble, J.; Rohrhuber, J., Hrsg.): Collaboration a nd learning through live codi ng (Dagstuhl Seminar 13382).  Dagstuhl Reports, 39/13, S. 135 -136, 2013.  [Ro15]  Rohrhuber, J.: Lehre als Forschung: Grundlagen der Musikinformatik  im künstlerischen Kontext. Zeitschri ft für Hochschulentwicklung, 10(1)/15 , S.79-91, 2015.    Musikprogrammierung mit Sonic Pi 381ii“proceedings” — 2017/9/17 — 20:19 — page 382 — #382iiiiiiii“proceedings” — 2017/9/17 — 20:19 — page 383 — #383iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 11Herausforderungen durch neue Programmierkonzepte inblockbasierten ProgrammiersprachenSven Jatzlau1, Ralf Romeike2Abstract: Blockbasierte Programmiersprachen stehen für einen Zugang zur Programmierung, dervon Programmieranfängern erfolgreich genutzt wird und zunehmend auch als Möglichkeit gesehenwird, nicht-professionellen Programmierern das Gestalten von Informatiksystemen zu ermöglichen.Als Gründe hierfür werden u. a. die intuitive Bedienung, schnelle Erfolgserlebnisse und ein breites undkontextualisiertes Anwendungsspektrum genannt, die zu einer großen Beliebtheit unter jungen Pro-grammierern führen und sich als Kernmerkmale in den populären Programmierumgebungen Scratchund BYOB/Snap! wiederﬁnden. Diese graﬁsche, blockbasierte Programmierung unterscheidet sichjedoch von klassischer textbasierter Programmierung nicht nur auf der Bedienebene, sondern bringtgegenüber gängigen im Unterricht genutzten Programmiersprachen auch verschiedene konzeptuelleUnterschiede mit sich. Solche ergeben sich zum einen aus der visuellen Darstellung von Objekten aufder Bühne, zum anderen aus der historischen Genese sowie didaktischen und pragmatischen Entschei-dungen. Für Lehrerinnen und Lehrer ist ein konzeptuelles Verständnis wichtig, um Möglichkeiten undProbleme beim Programmierenlernen mit Scratch-ähnlichen Programmiersprachen zu erkennen unddidaktisch darauf einzugehen. Im vorliegenden Beitrag werden verschiedene zentrale Konzepte, wiez. B. Nesting von Graﬁkobjekten, herausgearbeitet und verdeutlicht. Es zeigt sich, dass der Ansatzdes „Programmierens für alle“ mit passenden Werkzeugen in greifbare Nähe rückt, eine didaktischeAufarbeitung zum Erreichen eines informatischen Grundverständnisses aber unerlässlich ist.Keywords: visuelle Programmierung, Scratch, Snap!, BYOB, GP, blockbasierte Programmiersprachen1 Motivation und ZieleBlockbasierte Programmierung ist spätestens seit Scratch ein relevantes Thema für Program-mieranfänger, ob in Schule oder Freizeit. Programmiersprachen, die sich auf das Konzeptder blockbasierten Programmierung stützen, unterscheiden sich von textbasierten Sprachensowohl auf konzeptioneller Ebene als auch in ihrer Interaktion mit dem Benutzer. Aufgrundihrer Einfachheit und niedrigen Einstiegshürde (u.a. durch wegfallende Syntaxfehler) sindbesonders die blockbasierten Sprachen, zu denen etwa Scratch undSnap! gehören, unterAnfängern und Einsteigern beliebt (vgl. [LKG17]).Aber auch abseits der Syntaxreduzierung wurden weitere Entscheidungen getro  en, diedas Verständnis der Schüler fördern: Im Folgenden soll herausgearbeitet werden, welche1Friedrich-Alexander-Universität Erlangen-Nürnberg, Didaktik der Informatik, Martensstr. 3, 91058 Erlangen,Germany sven.jatzlau@fau.de2Friedrich-Alexander-Universität Erlangen-Nürnberg, Didaktik der Informatik, Martensstr. 3, 91058 Erlangen,Germany ralf.romeike@fau.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 383ii“proceedings” — 2017/9/17 — 20:19 — page 384 — #384iiiiii12 Sven Jatzlau, Ralf RomeikeUnterschiede blockbasierte Programmiersprachen mit sich bringen und welche neuenKonzepte in diesem Zusammenhang wichtig sind. Zu diesem Zweck werden zunächst diehistorischen Ursprünge blockbasierter Programmierung analysiert und dann die wichtigstenneuen Konzepte anhand von Sprachen wie Scratch ,Snap! und einem neuen Vertreter derFamilie, GP, verdeutlicht. Die Konzepte nichtatomarer Interpreter, Klassen und Objekte,Nested Sprites, First-class-Strukturen, Entwickler-Modus, Block-to-Text-Slider und ClassBrowser wurden ausgewählt, da sie entweder in ihrer Darstellung neuartig oder aber fürNeulinge in der blockbasierten Programmierung noch gänzlich unbekannt sind, weshalb eswichtig ist, dass sie didaktisch behandelt und aufgearbeitet werden.2 ForschungsstandZum Thema Didaktik der blockbasierten Programmierung wurde bis heute nur relativwenig Forschungsarbeit geleistet. Mitchel Resnick, verantwortlich für die Entwicklung derSprache Scratch , kritisierte bereits 2002, dass Computer zwar einerseits immer zugänglicherund verbreiteter werden und dadurch eine Revolution der Lerngewohnheiten möglich ist,aber oftmals digitale Medien nur dazu verwendet werden, veraltete Herangehensweisenan den Lernprozess zu unterstützen [ Re02 ]. Resnick et al. [ RMMH09 ] machen daraufaufmerksam, dass digitale Kompetenz nicht nur Interaktion und Kommunikation beinhaltendarf, sondern auch das Erscha  en und die Weiterentwicklung von Inhalten. Durch Modrowet al. [ Mo11 , MMS11] wurden die Einstellungen von Schülern zu Scratch untersucht. Dabeiwar klar erkennbar, dass Sprachen wie Scratch an Schulen zwar gerne von ihnen verwendetwerden, jedoch als reine Einsteigerprogramme verstanden werden. Für komplexere Auf-gabenstellungen oder im Berufsleben wird Scratch etwa als nicht angemessen empfunden.Gleichzeitig jedoch sind beispielsweise alle untersuchten Abituraufgaben (Niedersachsen,2011) problemlos in Scratch oder Snap! lösbar, sodass eine Abwendung von textbasierterProgrammierung hin zu blockbasierter durchaus denkbar wäre. Die Forschungsergebnissevon Strecker [ St15] unterstützen diese These: Sie verglich die Leistungen von Schülern, diemitSnap! auf das Abitur vorbereitet wurden, mit denen, die reine Java-Kurse besuchten.Im Durchschnitt erbrachten Erstere bessere Leistungen, v.a. im Hinblick auf Teillösungen.Außerdem waren sie den Herausforderungen besser gewachsen, da ihnen weniger Konzepteoder Kompetenzen fehlten. Besonders im Bereich der Algorithmik konnten dadurch bessereErgebnisse erzielt werden. Price et al. [ PB15 ] erforschten das Verhalten von Schülernbei der Verwendung blockbasierter Programmiersprachen. Laut ihren Forschungen warendiese Schüler in der Lage, Programmieraufgaben deutlich schneller zu lösen als solche, dietextbasierte Programmiersprachen verwendeten. Dieses Ergebnis deutet darauf hin, dassblockbasierte Programmiersprachen und Benutzeroberﬂächen leistungsfördernd wirken.Dies könnte mit der Motivation der Lerner zusammenhängen: Ruf et al. [ RMH14 ] verglichenintrinsische Motivation und Programmierfähigkeiten von zwei Gruppen von Lernern. EineGruppe verwendete Scratch zum Erlernen der Programmierung, die andere die textbasierteProgrammiersprache Karol . Hierbei zeigte sich, dass sowohl Motivation als auch Program-mierkompetenz in der Scratch Klasse stärker vertreten waren. Die Forschungsergebnisse von384 Sven Jatzlau, Ralf Romeikeii“proceedings” — 2017/9/17 — 20:19 — page 385 — #385iiiiiiHerausforderungen durch neue Programmierkonzepte in blockbasierten Programmiersprachen 13Weintrop et al. [ WW15 ] zeigen ähnliche Ergebnisse: Schülern wurden Aufgaben vorgelegt,die sie bearbeiten sollten. Der zu bearbeitende Code wurde jeweils in Blöcken bzw. inTextform vorgelegt, doch die blockbasierten Aufgaben wurden deutlich häuﬁger korrektbeantwortet. Dwyer et al. [ DHH15 ] erforschten, wie Informationen in blockbasierten User-interfaces aufgenommen und verarbeitet werden und zeigten, dass die visuelle Natur solcherProgrammierumgebungen oftmals hilfreich für Lerner ist. Trotzdem besteht die Gefahr, dassNutzer Funktionen der Umgebung übersehen oder visuelle Hinweise falsch interpretieren(etwa wenn die Position oder das Aussehen der Objekte auf der Bühne fälschlicherweise alsHinweise für ihr Verhalten gedeutet werden). Aber auch auf motivationaler Ebene zeigensich nicht ausschließlich Vorteile: Lewis [ Le10 ] untersuchte die Wahrnehmung von Lernernbei der Verwendung von Scratch undLogo . Zwischen den Gruppen zeigten sich keinebedeutenden Unterschiede hinsichtlich ihrer Motivation, zukünftig zu programmieren.Es wird deutlich, dass blockbasierte Programmiersprachen besonders für Programmier-anfänger eine große Chance darstellen, schnell und sicher Kompetenzen im Bereich derAlgorithmik und Programmierung zu erlangen. Dies wirkt sich positiv auf deren intrinsischeMotivation und Selbsteinschätzung aus.3Meilensteine in der Entwicklung der blockbasierten Programmier-sprachenEin großer Teil der konzeptionellen Neuerungen, die sich in blockbasierten Programmier-sprachen ﬁnden, lassen sich auf die historische Entwicklung zurückführen. Daher ist esbedeutsam, die Meilensteine in der Entwicklung dieser Programmiersprachenfamilie zukennen. Hierzu sind drei essentielle Programmierumgebungen als Meilensteine zu nennen,die neben Scratch undSnap! die Genese visueller Sprachen beeinﬂussen: Morphic ,SmalltalkundGP. Diese sollen im Folgenden kurz erläutert und ihre Bedeutung für die blockbasierteProgrammierung herausgestellt werden. Diese Umgebungen wurden gewählt, da sich ihreKonzepte schließlich in den aktuellen Programmierumgebungen wiederﬁnden, sodass sie ih-re Entwicklung maßgeblich beeinﬂussten bzw. Ansätze der zukünftigen Weiterentwicklungaufzeigen ( GP).Morphic ist ein Framework, das es dem Benutzer ermöglicht, auf einfache Art und Weiseein graﬁsches Userinterface zu erstellen und mit diesem zu interagieren. Das Frameworkbasiert dabei sowohl auf einer direkten Manipulation der jeweiligen Objekte (anhand vonKontextmenüs) als auch einer Manipulation innerhalb von Programmen. Ursprünglichwurde es als Teil der Sprache Self bei Sun entworfen, die erstmals in den 80ern und90ern als experimentell verwendetes Testsystem für Sprachendesign eingesetzt wurde.Grundlegend für diese Umgebung ist, dass alle sichtbaren Objekte sog. „Morphs“ sind undsomit etwa auf Ereignisse reagieren (wie etwa Mausklicks), eine Überlappung mit anderenObjekten erkennen oder aus Teilobjekten bestehen können [ SWM13 ]. Dadurch besteht dieMöglichkeit, Objekte zu verschachteln, sodass diese in einer Teil-Ganzes-Beziehung stehen,wodurch jeder „Morph“ eine bestimmte Stelle in einer Hierarchie einnimmt (an deren SpitzeHerausforderungen durch neue Programmierkonzepte 385ii“proceedings” — 2017/9/17 — 20:19 — page 386 — #386iiiiii14 Sven Jatzlau, Ralf Romeikedie „World“ bzw. die Bühne steht). Einige der Konzepte ﬁnden sich etwa in Scratch wieder:So dürfte das Prinzip der Verschachtelung als Vorlage für „Nested Sprites“ in Snap! gedienthaben.Smalltalk ist das Resultat langwieriger Forschung, deren Ziel es war, dem Benutzer dieInteraktion mit einem Computer auf einer funktionalen Ebene möglich zu machen [ GR83 ,8]. Es handelt sich hier um eine objektorientierte Programmiersprache, die gezielt zumEinstieg in die Programmierung konzipiert wurde. Wichtig war laut Entwickler Alan Kaydie Bereitstellung einer Umgebung, in der Erkundung belohnt wird (nach Montessori), dieenaktives, ikonisches und symbolisches Lernen ermöglicht und fördert (nach Piaget undBruner), in der die Magie im Bekannten steckt (Negroponte) und die als verstärkenderSpiegel für die Intelligenz des Benutzers dient (Coleridge, [ Ka96 , 33]). Die Sprache basiertauf dem Kernkonzept „Alles ist ein Objekt“. Ausgehend von diesem Konzept geltenbestimmte Regeln für Objekte, wie etwa, dass sie untereinander mithilfe von Nachrichten(die Objekte sind) kommunizieren oder, dass Objekte über ein eigenes Gedächtnis verfügen(das wiederrum ein Objekt ist). Smalltalk und seine spätere Weiterentwicklung, bzw.Modiﬁkation Squeak sind in ihrer Entwicklungslaufbahn zur Basis von diversen visuellenProgrammierumgebungen geworden, wie z. B. Scratch oder Snap! . Die objektorientierteNatur dieser Sprache, in der mit graﬁschen Objekten anhand von Nachrichten kommuniziertwird (etwa eine Nachricht an eine Box, sich zu drehen oder zu vergrößern) wurde als sehrmotivierend aufgefasst, sodass bereits Kinder in der Lage waren, Malprogramme oderNotenblatt-Lesesysteme zu entwerfen. Diese Tatsache könnte ein Grund dafür sein, dasssich das Prinzip des Nachrichtenversands auch in Scratch oder Snap! wiederﬁndet.GP ist der neueste Vertreter der Sprachenfamilie von Scratch und beﬁndet sich momentannoch in der Entwicklungsphase. Es wird derzeit u.A. von Jens Mönig und John Maloneyentwickelt und basiert auf der Vision, dass dem Benutzer weniger Grenzen vorgegebenwerden sollen als etwa in Scratch . Das bedeutet, dass komplexe Programmierkonzepte,die in den verwandten Sprachen aus didaktischen Gründen fehlen, umsetzbar sein sollen.Außerdem war es das Ziel, eine erweiterbare Plattform zu erscha  en - der interne Code dergesamten Programmierumgebung ist einsehbar und manipulierbar, sodass Modiﬁkationeninhärent unterstützt werden. Die Programmierumgebung ist Scratch undSnap! sehr ähnlich,weist jedoch einige Unterschiede auf: Sie ist beinahe vollständig in sich selbst implementiert,d.h. wenn Codeblöcke untersucht werden, um deren interne Funktionsweise sichtbar zumachen, enthüllt sich wiederrum Code aus graﬁschen Blöcken. Dieses Konzept ﬁndet sichdurchgehend bis zur untersten Ebene, sog. „primitives“, also primitiven Funktionen, dienicht weiter einsehbar sind, da sie in C implementiert sind. Neben diesem Konzept ﬁndensich in GPjedoch noch weitere konzeptionelle Neuerungen: Wie in den anderen Vertreternder Sprachenfamilie verfügt es über einen nichtatomaren Interpreter. Außerdem ist es inder Lage, „Nested Sprites“ zu erscha  en, mit Dateisystemen zu interagieren und graﬁscheCodeblöcke als Text darzustellen. Alle diese Phänomene werden im folgenden Kapitel nähererläutert.386 Sven Jatzlau, Ralf Romeikeii“proceedings” — 2017/9/17 — 20:19 — page 387 — #387iiiiiiHerausforderungen durch neue Programmierkonzepte in blockbasierten Programmiersprachen 154 Neue Konzepte blockbasierter ProgrammierungIm Folgenden sollen nun fünf der wichtigsten konzeptionellen Unterschiede und Neuerungenaufgezeigt werden. Die Konzepte sind bedeutsam, da sie klare Neuerungen darstellen, diedurch visuelle, blockbasierte Programmiersprachen eingeführt wurden: Sie existieren indieser Form nicht in den bekannten textbasierten Programmierumgebungen, die momentannoch etwa in der Schule Verwendung ﬁnden. Daher ist es wichtig, dass Lehrer sich dieserNeuerungen bewusst sind, sodass sie didaktisch behandelt werden können. Diese Konzepteﬁnden sich in den aktuellen Vertretern blockbasierter Programmierumgebungen: Scratch ,Snap! undGP.Nichtatomare Interpreter und Debugging Die wichtigsten Neuerungen haben einsgemeinsam: Sie sind auf didaktische Gründe zurückzuführen, d.h. die Motivation war es,die Programmiersprache intuitiver zu gestalten. Hierzu gehört z. B. die Eigenschaft, dassCodeblöcke verzögert ausgeführt werden. Das bedeutet, dass bestimmte Skripte langsamerausgeführt werden als die Umgebung (und der Computer) es eigentlich zulassen würde(n).Ohne diese Verzögerung könnten z. B. Sprites sofort nach Programmstart die Grenzen derLeinwand verlassen, ohne dass für den Benutzer ersichtlich wäre, warum. Um Anfängervor diesem Phänomen zu bewahren, wurde die Verzögerung für bestimmte Block-Arteneingeführt: Alle Schleifen-, Warte- und Bewegungsblöcke haben diese Verzögerung. DieseVerzögerung kann etwa in Snap! mithilfe zweier verschiedener Maßnahmen umgangenwerden: Entweder durch die Verwendung eines speziellen „Warp“-Blocks oder durchAktivierung des “Turbo”-Modus.Dieser Unterschied in der Ausführung des Codes ist ein wichtiges Konzept, das fürfortgeschrittene Lerner u.U. zu großer Verwirrung führen kann. Daher ist es wichtig, bei derVermittlung der Programmierung auf die neuen Anforderungen einzugehen. Besonders fürDebugging ist das Konzept der verzögerten Ausführung nützlich: Snap! bietet beispielsweisedie Möglichkeit, die Ausführungsgeschwindigkeit von Blöcken manuell zu regeln. DieOption „visible stepping“ erweitert die Benutzeroberﬂäche um einen Schieberegler, der dieAusführungsgeschwindigkeit des Codes stufenlos reduziert, sodass der Programmablaufeinfach verfolgt und nachvollzogen werden kann. Der Verstehensprozess wird zusätzlichdurch Hervorhebung des momentan ausgeführten Codeblocks unterstützt. Hier wird deutlich,wie die Visualisierung des Codes (nicht nur auf der Leinwand, sondern auch in der direktenDarstellung) verständnisfördernd aufbereitet werden kann.Klassen-/Objekt-Darstellung Auch die Darstellung von Klassen und Objekten (alsInstanzen von Klassen) unterliegt einigen Änderungen im Kontext der blockbasierten Pro-grammierung: Hier wird der „Prototyping“-Ansatz verwendet, nach dem Objekte („Sprites“)geklont werden und dadurch neue Objekte erzeugt werden, die ihrerseits exakte Kopiensind und alle Codeblöcke und Attribute des ursprünglichen Objektes übernehmen. Dadurch„beschreibt“ der Benutzer ein Beispiel einer Instanz, keinen abstrakten Bauplan (Klasse).Dieser Prototyp kann dann weitere Instanzen von sich selbst erzeugen, die seinen Codeteilen. Diese Form der Darstellung wurde von der Arbeit von Henry Lieberman inspiriert,Herausforderungen durch neue Programmierkonzepte 387ii“proceedings” — 2017/9/17 — 20:19 — page 388 — #388iiiiiider verdeutlichte, dass durch das Prinzip von Prototypen „Standards“ und Abweichungenvon solchen intuitiv verständlich sind [ Li86]. Der verständnisfördernde Charakter desPrototypen-Konzepts wurde als didaktisch sinnvoll erfasst, sodass es in vielen blockba-sierten Programmiersprachen, wie etwa Scratch undSnap! , Verwendung ﬁndet. Modrowzeigt auf, wie hier das objektorientiete Konzept der Vererbung über das Delegations-Modellrealisiert werden kann [ Mo13 ]. Prinzipiell sind zwei Arten des Klonens zu unterscheiden:Das Klonen zur Laufzeit (durch Ausführung der entsprechenden Codeblöcke) und dasKlonen zur Programmierzeit (durch „duplicate“-Befehl im Kontextmenü eines Objekts).Ersteres erscha  t eine exakte Kopie des Originals, die bei Programmende entfernt wird,während Letzteres einen permanenten Klon erscha  t, dessen Aussehen und Verhaltendanach verändert werden können ohne das ursprüngliche Objekt zu beeinﬂussen (Abb. 1).Abb. 1: Visuelle Darstellung desKlon-Konzepts in Scratch [Sc17a]Abb. 2: Klasse und ihre Instanzen in GPAuch GP folgt der Idee des Prototyping, greift aber für die Darstellung auf das von Smalltalkbekannte und aus der textbasierten Programmierung verbreitete Klasse-Objekt-Konzeptzurück, wie es beispielsweise in Java oder C++ implementiert wird. Die Abb. 2 ist einAusschnitt aus der Programmieroberﬂäche. Es ist eine Auﬂistung aller Klassen zu sehen, dieim laufenden Projekt Verwendung ﬁnden und rechts davon eine Übersicht über die Instanzendieser Klasse (und ihrem momentanen Aussehen). Für beide Bereiche gibt es +-Knöpfe,deren Betätigung eine neue Klasse bzw. eine Instanz von ihr erzeugt. Objekte derselbenKlassen teilen sich alle den Code, der für diese Klasse deﬁniert wurde - sie reagieren aufdieselben Ereignisse und führen dieselben Codeblöcke aus. Jedes Objekt ist dadurch diegraﬁsche Instanz einer Klasse. Wird eine neue Klasse erzeugt, so wird gleichzeitig die ersteInstanz dieser Klasse auf der Leinwand erscha  en, die somit als Prototyp fungiert. Existiertnur eine Instanz pro Klasse, so ist das Verhalten der Programmierumgebung funktionalähnlich zu Scratch – mit dem Unterschied, dass eine explizite Auswahl des Klassennamensaus der Liste (vgl. Abb. 2) notwendig ist, um die konkrete Instanz anwählbar zu machen.Werden von einer Klasse mehrere Instanzen erzeugt, machen sich die Unterschiede zuScratch undSnap! bemerkbar: In GPbezieht sich der Code immer auf eine ganze Klasse.Wird dieser verändert, so ändert er sich für alle Instanzen dieser Klasse (analog zumLaufzeit-Klonen in Scratch/Snap! ).Scratch erlaubt hingegen zusätzlich, nach dem Klonenden Code eines Objektes zu ändern, ohne dabei den anderer Klone oder des „Originals“ zubeeinﬂussen (durch Klonen zum Programmierzeitpunkt).388 Sven Jatzlau, Ralf Romeikeii“proceedings” — 2017/9/17 — 20:19 — page 389 — #389iiiiiiHerausforderungen durch neue Programmierkonzepte in blockbasierten Programmiersprachen 17Es wird deutlich, dass die Frage, in welcher Form das Klassen/Objekt-Prinzip vermitteltwerden soll, zentral ist. Die Unterschiede in der Darstellung von Vererbung und Klas-sen/Objekten müssen für eine didaktisch wertvolle Vermittlung beachtet und reﬂektiertwerden.„Nested Sprites“ Das Konzept der „Nested Sprites“ ist ein gutes Beispiel dafür, dass visu-elle Programmiersprachen neue Problemlöseansätze erö  nen (die im Unterricht thematisiertwerden müssen). Es handelt sich hierbei um eine örtliche Verbindung von Objekten bzw.von „Sprites“ auf der Leinwand: Sie stehen in einer Teil-Ganzes-Beziehung zueinander undnehmen dadurch einen Platz in einer Objekthierarchie ein. Ein Objekt kann aus mehrerenTeilen bestehen und selbst Teil eines Objektes sein. Die Rotationen und Bewegungen derbeteiligten Objekte sind demnach voneinander abhängig (bewegt sich der Besitzer, sobewegen sich alle seine Teilobjekte mit ihm).Das Konzept ist charakteristisch für visuelle Sprachen, da es nur durch die visuelleRepräsentation von Objekten möglich gemacht wird (gäbe es keine Leinwand, um Objektezu visualisieren, gäbe es auch das Konzept der verschachtelten Objekte nicht). Es kannbeispielsweise verwendet werden, um Simulationen zu implementieren, wie etwa diemechanische Funktionsweise eines Verbrennungsmotors: Ein Teil bewegt sich, wodurch sichwiederrum andere Teile bewegen, sodass schließlich eine Verbrennung stattﬁndet (Abb. 3).Abb. 3: Vereinfachte Simulation eines Verbrennungsmotors aus GPInSnap! kann eine solche Beziehung zwischen Objekten durch Drag-and-drop erzeugtwerden, sodass Objekte an andere Objekte angefügt werden. In GPmuss hierzu ein Objektmit einem Anderen überlappen, woraufhin per Kontextmenü eine Zuweisung „attach“verfügbar wird.„First class Strukturen“ Smalltalk, Morphic, Snap! undGPsetzen ein aus der funk-tionalen Programmierung bekanntes und mächtiges Konzept um, das durch die visuelleProgrammierung intuitiv verständlich und damit gut handhabbar umgesetzt wird: Allevorhandenen Strukturen und Objekte sind „ﬁrst class“. Strukturen und Objekte werden als„First class objects“ bezeichnet, wenn sie folgende Eigenschaften erfüllen (vgl. [HM17]):• sie können Werte von Variablen sein,• sie können Parameter und Rückgabewerte von Funktionen sein,• sie sind anonym (werden bei Erstellung nicht benannt),• sie können Teil eines Aggregats sein.Geprägt wurde der Begri  von Christopher Strachey, der um 1960 forderte, dass jederHerausforderungen durch neue Programmierkonzepte 389ii“proceedings” — 2017/9/17 — 20:19 — page 390 — #390iiiiii18 Sven Jatzlau, Ralf RomeikeDatentyp einer Sprache „ﬁrst class data“ sein sollte [ Sc17b ], sodass jeder Datentyp völliguneingeschränkt benutzbar ist. Dies ist eines der fundamentalen Prinzipien von Snap! .Durch die daraus resultierenden Anwendungsmöglichkeiten (wie etwa Listen von Listen)bieten sich neue Herangehensweisen und Lösungsmöglichkeiten für bekannte Probleme an.Beispielsweise können mapping-Funktionen über Listen durchgeführt werden oder Blöckeals Eingabeparameter für andere Blöcke fungieren.Entwicklermodus, Block-to-Text-Slider, Class Browser Diese Konzepte stehen bislangnur in der Umgebung GPzur Verfügung. Der Entwicklermodus stellt eine optionalzuschaltbare Erweiterung der Funktionalität der Programmierumgebung dar. Bei aktivemEntwicklermodus werden einige Paletten erweitert, wie z. B. Variablen um den Typ scriptoder die „New Class“-Funktion um die „helper“-Variante. Auch der „Class Browser“ wirdzugänglich: Hier ﬁndet sich der Systemcode von GP(näheres hierzu weiter unten).Die wohl interesanteste Erweiterung o  enbart sich als Schieberegler in der Menüleiste:ein stufenloser Regler der Codedarstellung von Blöcken zu Text. Dieser soll die Brückezu textbasierten Programmiersprachen repräsentieren und die Äquivalenz der beidenRepräsentationen verdeutlichen – je nach subjektiver Präferenz kann der Benutzer seineBedienung entweder blockbasiert oder textbasiert einstellen (vgl. Abb. 4).Abb. 4: Beispielcode in Block- und in TextmodusFließende Übergänge ergeben sich aus der alternativen Bedienung mit der Tastatur. WieSnap! bietet GPdie Möglichkeit, Codeblöcke durch Tastatureingaben (mit Autovervoll-ständigung) zu erzeugen: Die Umgebung reagiert auf neu eingegebene Zeichen damit,dass alle verfügbaren Kategorien nach passenden Blöcken durchsucht und in einer Listedargestellt werden. Der passendste Block wird stets ganz oben in der Liste angezeigt, undeine Bestätigung per Enter-Knopf fügt diesen an die momentan ausgewählte Stelle im Skriptan. Die Kategorie, der der angefügte Block angehört, wird zudem direkt angewählt, sodassähnliche Blöcke sofort sichtbar sind – eine Funktionalität, die Scratch nicht bietet. Dadurchist eine vollständige Bedienung der Oberﬂäche durch die Tastatur möglich.Zweifellos ist dieser Eingabemodus, v.a. gepaart mit dem Block-zu-Text-Slider auch alsBrücke zu textbasierten Programmiersprachen intendiert. Wenn beide Modi aktiviertsind, gibt die Benutzung das Gefühl, eine textbasierte Programmierumgebung mit starkerSyntaxunterstützung zu verwenden (wie beispielsweise Strides in Greenfoot ). Hier zeigtsich erneut, dass GPals „Lösung“ dafür erscha  en wurde, dass das visuelle Programmieren390 Sven Jatzlau, Ralf Romeikeii“proceedings” — 2017/9/17 — 20:19 — page 391 — #391iiiiiiHerausforderungen durch neue Programmierkonzepte in blockbasierten Programmiersprachen 19nicht „echt“ erscheint, zu unprofessionell präsentiert wird und nicht wirklich übertragbarauf andere Programmiersprachen scheint.Das letzte Konzept, der Class Browser, verkörpert die Vision von GP, dass selbst komplexesteProjekte realisierbar sind – „high ceiling“ nach Seymour Papert. Im Class Browser sindalle Skripte gelistet, die in der Palette zu ﬁnden sind und darüber hinaus alle Skripte, diedas interne Verhalten der Umgebung beschreiben. Der Class Browser macht es möglichnachzuvollziehen, wie die Funktionsweisen der Programmierumgebung bis zur unterstenEbene hin implementiert sind (Abb. 5); so lässt sich die Implementierungshierarchie vonSkripten bis zur primitiven Ebene hin verfolgen. Nutzbar ist er dadurch beispielsweise, umvordeﬁnierte Skripte zu ändern, ergänzen oder zu löschen und somit eine eigene GP-Versionvöllig den eigenen Ansprüchen entsprechend zu erstellen.Abb. 5: Verwendung des Class Browsers: „implementations...“Bei diesen Konzepten ist eine besondere Bedeutung für Schüler sichtbar: Anfangs werdenkomplexe Funktionen und Blöcke verborgen, sodass eine niedrige Einstiegshürde gegebenist. Bei aktiviertem Entwickler-Modus wird dann die selbstständige Erkundung der Program-mierumgebung und ihres Codes durch den Class Browser möglich, sodass interessiertenSchülern kaum Grenzen gesetzt sind. Gleichzeitig ermöglicht der Block-zu-Text-Schaltereine subjektive Regelung der Programmieroberﬂäche, sodass Lerner sie je nach Präferenz,Kenntnisstand oder Programmierfähigkeit individuell anpassen können.5 FazitDie wachsende Präsenz blockbasierter Programmiersprachen kann für Schüler großeVorteile mit sich bringen. Dennoch birgt diese neuartige Form der Programmierungauch Herausforderungen durch neue Konzepte, die verstanden und erforscht werdenmüssen. Prinzipien wie der nichtatomare Interpreter, der Skripte verlangsamt ausführt,sodass diese intuitiver ablaufen oder Nested Sprites, die beinahe ausschließlich auf dervisuellen Repräsentation von Objekten basieren, sind neu und aus didaktischer Sicht nochpraktisch unerforscht. Trotz der intuitiven Natur visueller und insbesondere blockbasierterProgrammiersprachen ist hier also noch viel Forschungsarbeit zu leisten - bisher wurdenerst Ansätze für eine Didaktik visueller Programmiersprachen geliefert.Herausforderungen durch neue Programmierkonzepte 391ii“proceedings” — 2017/9/17 — 20:19 — page 392 — #392iiiiii20 Sven Jatzlau, Ralf RomeikeLiteraturverzeichnis[DHH15] Dwyer, H.; Hill, C.; Hansen, A. et al.: Fourth Grade Students Reading Block-BasedPrograms: Predictions, Visual Cues, and A  ordances. In: Proceedings of the eleventhannual International Conference on International Computing Education Research. ACM,S. 111–119, 2015.[GR83] Goldberg, A.; Robson, D.: Smalltalk-80: the language and its implementation. Addison-Wesley Longman Publishing Co., Inc., 1983.[HM17] Snap! Reference manual online, snap.berkeley.edu/SnapManual.pdf, Stand: 09.06.2017.[Ka96] Kay, A.: The early history of Smalltalk. In: History of programming languages—II.ACM, S. 511–598, 1996.[Le10] Lewis, C.: How programming environment shapes perception, learning and goals: logovs. scratch. In: Proceedings of the 41st ACM technical symposium on Computer scienceeducation. ACM, S. 346–350, 2010.[Li86] Lieberman, H.: Using prototypical objects to implement shared behavior in object-oriented systems. In: ACM Sigplan Notices. Jgg. 21. ACM, S. 214–223, 1986.[LKG17] Scratch: Statistics, scratch.mit.edu/statistics/, Stand: 09.06.2017.[Mo11] Modrow, E.: Visuelle Programmierung – oder: Was lernt man aus Syntaxfehlern? In(Thomas, M., Hrsg.): Informatik in Bildung und Beruf. Jgg. 14 in Lecture Notes inInformatics (LNI), Köllen, Bonn, S. 27–36, 2011.[Mo13] Informatik mit BYOB / Snap!, www.uni-goettingen.de/de/informatik-mit-byob/423680.html, Stand: 09.06.2017.[PB15] Price, T.; Barnes, T.: Comparing textual and block interfaces in a novice programmingenvironment. In: Proceedings of the eleventh annual International Conference onInternational Computing Education Research. ACM, S. 91–99, 2015.[Re02] Resnick, M.: Rethinking learning in the digital age. The Global Information TechnologyReport: Readiness for the Networked World. Oxford University Press, 2002.[RMH14] Ruf, A.; Mühling, A.; Hubwieser, P.: Scratch vs. Karel: impact on learning outcomes andmotivation. In: Proceedings of the 9th Workshop in Primary and Secondary ComputingEducation. ACM, S. 50–59, 2014.[RMMH09] Resnick, M.; Maloney, J.; Monroy-Hernández, A. et al.: Scratch: programming for all.Communications of the ACM, 52(11):60–67, 2009.[Sc17a] Scratch-Wiki: Cloning, wiki.scratch.mit.edu/wiki/Cloning, Stand: 09.06.2017.[Sc17b] Scratch-Wiki: Snap!, wiki.scratch.mit.edu/wiki/Snap, Stand: 09.06.2017.[St15] Strecker, K.: Graﬁsche Programmiersprachen im Abitur. In (Jens Gallenbacher, Hrsg.):INFOS 2015: Informatik allgemeinbildend begreifen. Jgg. 16 in Lecture Notes inInformatics (LNI), Köllen, Bonn, S. 293–300, 2015.[SWM13] Squeak-Wiki: Morph, wiki.squeak.org/squeak/1820, Stand: 09.06.2017.[WW15] Weintrop, D.; Wilensky, U.: Using Commutative Assessments to Compare ConceptualUnderstanding in Blocks-based and Text-based Programs. In: ICER. Jgg. 15, S. 101–110,2015.392 Sven Jatzlau, Ralf Romeikeii“proceedings” — 2017/9/17 — 20:19 — page 393 — #393iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017    1 Alltagsvorstellungen in der Informatik: Erhebungsmetho-dik und Implikationen für den Unterricht Michael T. Rücker1, Nils Pancratz2, Carolin Gold-Veerkamp3, Niels Pinkwart4, Torsten Brinda5 Abstract: Ein zentrales Konzept jeder konstruktivistisch geprägten Auffassung von Lernen ist, dass das Vorwissen, die Präkonzepte und ggf. Fehlvorstellungen der Lernenden einen direkten Einfluss auf den Lernprozess haben: sowohl negativ als auch positiv. Speziell für die Informatik gilt, dass Lernende heutzutage von Beginn an in einer Welt aufwachsen, die von informatischen Artefakten und Systemen nahezu vollständig durchdrungen ist. Sie beobachten sie, interagieren mit ihnen und formen so Vorstellungen über ihre Funktionsweisen und Eigenschaften. Sie bilden somit bereits im Alltag und vor dem Beginn jeglicher Schulbildung kohärente Konzeptionen über zentrale Gegen-stände und Inhalte der Informatik. Im Rahmen dieses Workshops werden zunächst verschiedene methodische Ansätze und erste Ergebnisse zu Erhebungen solcher Lernervorstel-lungen vorgestellt. Anschließend sollen diese anhand von drei Leitfragen verglichen und diskutiert werden: Welche Stärken und Schwächen haben die jeweils verwendeten empirischen Methoden bei der Erhebung von Lernervorstellungen in der Informatik? Wie können sie sich ggf. sinnvoll ergänzen? Welche Implikationen haben die erhobenen Vorstellungen für die Unterrichtspraxis? Keywords: Konstruktivismus, Lernervorstellungen, Alltagsvorstellungen, Forschungsmethodik, Unterrichtspraxis 1 Alltagsvorstellungen in der Informatik Informatische Artefakte, Produkte und Systeme sind heutzutage allgegenwärtig. Sie sind Teil der unmittelbaren sowie medialen Umwelt von Kindern und Jugendlichen. Sie be-obachten sie, interagieren mit ihnen und formen so mentale Modelle und Konzeptionen darüber, wie diese Artefakte und Systeme funktionieren, welche Eigenschaften sie haben und wie sie ggf. zusammenhängen. Mit anderen Worten, sie formen bereits im Alltag ko-härente Vorstellungen und Erklärungsmodelle für Dinge, die ihnen der Informatik-unter-richt vermitteln soll. Ein zentrales Konzept jeder konstruktivistisch geprägten Auffassung                                                              1 Humboldt-Universität zu Berlin, Institut für Informatik, Unter den Linden 6, 10099 Berlin, rueckerm@infor-matik.hu-berlin.de 2 Carl von Ossietzky Universität Oldenburg, Didaktik der Informatik, Uhlhornsweg 84, 26129 Oldenburg, nils.pancratz@uni-oldenburg.de 3 Hochschule Aschaffenburg, Fakultät Ingenieurwissenschaften, Würzburger Straße 45, 63743 Aschaffenburg, carolin.gold-veerkamp@h-ab.de 4 Humboldt-Universität zu Berlin, Institut für Informatik, Unter den Linden 6, 10099 Berlin, pinkwart@infor-matik.hu-berlin.de 5 Universität Duisburg-Essen, Didaktik der Informatik, Schützenbahn 70, 45127 Essen, torsten.brinda@uni-due.de I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 393ii“proceedings” — 2017/9/17 — 20:19 — page 394 — #394iiiiii 2    M. T. Rücker, N. Pancratz, C. Gold-Veerkamp, N. Pinkwart, T. Brinda  von Lehren und Lernen ist, dass derartige Alltags- und ggf. Fehlvorstel-lungen einen sig-nifikanten Einfluss auf den Lernprozess haben. Als „points of departure“ [Du07] bilden sie einerseits notwendige Voraussetzungen dafür, dass Lernen überhaupt stattfinden kann, können aber andererseits auch im Widerspruch zum Lernstoff stehen und den Lernprozess somit behindern. Es wird dann zwar gelernt, aber nicht unbedingt das, was beabsichtigt wurde.  Am ausführlichsten untersucht ist diese Thematik in der Didaktik der Naturwissenschaf-ten. Duit hat hier eine ausführliche Bibliographie zusammengestellt [Du09]. Aber auch in der Informatik existiert ein zunehmendes Interesse und somit eine wachsende Literatur-basis zu Alltags- und Fehlvorstellungen [Be15, DWZ12, Kn11, Ra13, RP16, Se13]. Da es sich bei derartigen Vorstellungen um latente – d.h. nicht direkt beobachtbare – Konstrukte handelt, ist die Frage nach geeigneten Erhebungsmethoden von zentraler Bedeutung. Die Ansätze und somit auch die generierten Daten, die dazu in verschiedenen Arbeiten zum Einsatz kommen, rangieren von rein quantitativen und statistischen Verfahren [Be15], über Freitextfragebögen [Ra13] bis hin zu rein qualitativen und hoch interpretativen Inter-viewanalysen [Se13]. Die allgemeinen Stärken und Schwächen quantitativer und qualita-tiver Forschung sind hinreichend bekannt. Sie werden jedoch selten im konkreten Kontext ihrer jeweiligen Anwendung diskutiert. Letztlich schafft der konkrete Untersuchungsge-genstand weitere Anforderungen an ein Erhebungsinstrument. Angesichts dessen wird die Entscheidung für oder gegen eine bestimmte Methode leider nur selten explizit begründet oder gar im Vergleich zu möglichen Alternativen evaluiert. Welche Einsichten und Aus-sagen ermöglichen ver-schiedene methodische Ansätze überhaupt im konkreten Kontext der Erhebung von Lernervorstellungen? Sind einige Ansätze eventuell inhärent ungeeig-net zur Erhebung derartiger latenter Konstrukte? Nicht zuletzt bleiben viele Arbeiten nach wie vor sehr vage bei der Frage, welche Konsequenzen ihre jeweils erhobenen Vorstel-lungen nun für die entsprechende Unterrichtspraxis haben. Ziel dieses Workshops ist es, die Fragen nach geeigneten Erhebungsmethoden sowie der unterrichtlichen Relevanz von Lernervorstellungen in der Informatik weiterführend zu er-örtern. Dazu sollen verschiedene methodische sowie inhaltliche Ansätze einander gegen-übergestellt werden. Es soll herausgearbeitet werden, welche Vor- und Nachteile die je-weils angewandten Methoden im konkreten Kontext der Erhebung von Lerner-vorstellun-gen in der Informatik haben und wie sie sich ggf. komplementieren können. Nicht zuletzt soll diskutiert werden, welche Implikationen die jeweils erhobenen Vorstellungen nun für die Praxis des Informatikunterrichts oder -studiums haben. 2 Methodische Ansätze und erste Ergebnisse Die im Folgenden vorgestellten Arbeiten wurden von den verschiedenen Co-Autor/innen dieses Beitrags bzw. innerhalb der jeweiligen Arbeitsgruppen an insgesamt vier verschie-denen deutschen Hochschulen unabhängig voneinander konzipiert und durchgeführt. 394 Michael T. Rücker et al.ii“proceedings” — 2017/9/17 — 20:19 — page 395 — #395iiiiii Workshop zu Alltagsvorstellungen in der Informatik    3 Ihnen liegen zwar einerseits sehr ähnliche Fragestellungen in Bezug auf Lernervorstellun-gen in der Informatik zugrunde. Sie verfolgen jedoch andererseits sehr unterschiedliche methodische Ansätze und ermöglichen daher verschiedene Perspektiven auf bzw. Einsich-ten in den Untersuchungsgegenstand. 2.1 Focus Interviews und Grounded Theory Der erste Ansatz basiert auf der Theorie der konzeptuellen Kategorisierung [Mu04] und verwendet Focus Interviews und Methoden der Grounded Theory [Ch11] zur Erhebung von Schülervorstellungen zu informatischen Artefakten bzw. Geräten. Die zentrale For-schungsfrage ist: Welche technischen Geräte kategorisieren Schülerinnen und Schüler als „informatisch“ und wie gehen sie dabei vor? Zur Beantwortung dieser Frage wurden 28 Schülerinnen und Schüler verschiedener Al-tersgruppen (Klasse 5 bis 13) und mit unterschiedlichem Wahlverhalten bzgl. des Infor-matikunterrichts individuell interviewt. In den Interviews wurden ihnen insgesamt 33 Bildkarten vorgelegt, auf denen verschiedene alltägliche und weniger alltägliche techni-sche Geräte abgebildet waren, u.a. ein Taschenmesser, eine Plasmalampe, ein Toaster, ein Smartmeter, eine Waschmaschine, ein modernes Auto, ein Smartphone und der Curiosity Mars-Rover. Die Bilder waren nicht beschriftet. Den Proband/innen wurden folgende drei Aufgaben in unterschiedlicher Reihenfolge gestellt: „Bitte lege all die Dinge zusammen in eine Gruppe, ... • ...von denen du sagen würdest, dass sie mit Informatik zu tun haben oder dass ein Informatiker oder eine Informatikerin Ahnung davon hat oder sich damit be-schäftigen würde. • ...von denen du sagen würdest, dass sie eine Art Computer sind oder einen klei-nen Computer enthalten. • ...von denen du sagen würdest, dass sie programmierbar sind.“ Die Teilnehmenden wurden zudem angehalten, ihre Gruppierungen zu erläutern und zu begründen, warum sie welche Dinge zur Gruppe dazu gelegt haben oder nicht. Die Inter-views wurden videographiert und anschließend transkribiert. Bei der Analyse und Inter-pretation der verschiedenen Gruppierungen und insbesondere der entsprechenden Argu-mentationsprozesse traten verschiedene Phänomene bzw. Vorstellungen hervor. Für die Eingruppierung eines Artefaktes als programmierbar mussten in der Regel Eigen-schaften wie Zeitmessung, Rechnen oder die Fähigkeit, auf bestimmte Bedingungen zu reagieren, vorhanden sein. Derartige Funktionen waren für die Lernenden häufig nicht unmittelbar transparent bzw. nachvollziehbar. Folglich musste irgendwas „dahinter ste-cken“ – eben ein Programm: „Ich weiß nicht, wie das sonst funktionieren soll.“ Simplere Funktionen wie das Drehen eines Rotors oder das Erhitzen eines Drahtes waren leichter Alltagsvorstellungen in der Informatik: Erhebungsmethodiken 395ii“proceedings” — 2017/9/17 — 20:19 — page 396 — #396iiiiii 4    M. T. Rücker, N. Pancratz, C. Gold-Veerkamp, N. Pinkwart, T. Brinda  nachvollziehbar: „Da sind keine großen Einstellungen dahinter. [...]  Du drückst es runter und dann geht durch die Mechanik irgendwie die Wärme an.“   Für die Eingruppierung als informatisch oder Computer reichten aber auch die oben ge-nannten Funktionen häufig nicht aus. Hier waren komplexere Fähigkeiten gefordert, wie Multifunktionalität, Adaptivität oder Netzwerkkommunikation. Die Funktionen einer Waschmaschine, die man nicht „umprogrammieren“ kann, „kann ein Steuerelektroniker machen, das muss jetzt kein Informatiker sein.“ Simple Programme, Schaltkreise, Platinen oder eingebettete Rechner wurden häufig als nicht mächtig genug wahrgenommen um als „echte“ Computer oder als informatisch angesehen zu werden. 2.2 Repertory Grid Interviews Ein weiterer Ansatz befasst sich mit der Entwicklung, Durchführung und Analyse von Repertory Grid Interviews, um Schülervorstellungen von der Funktionsweise und dem Aufbau des Internets zu untersuchen. Basierend auf den allgemeinen Grundlagen von Re-pertory Grid Interviews [Fr95, Be85, Ke55] und inspiriert von den wenigen fachdidakti-schen Untersuchungen, in denen die Methode bereits verwendet wurde [bspw. BLP03, Wi01, BJS98], befragten wir in einer ersten Untersuchung fünf 11- bis 13-jährige Schüler in Einzelinterviews. Dabei wurden den Versuchspersonen zwölf Elemente (Internet, Com-puter, Server, Webseite, IP-Adresse, E-Mail, Kabel, Google, Daten, Router, (Daten-)Pa-kete und (Chat-)Programm) vorgelegt, die zum einen das Grundgerüst an Begriffen aus-machen, die zu einer wissenschaftlichen Erklärung des Internets vonnöten sind, und zum anderen denjenigen Phänomenen und Artefakten entsprechen, die Jugendliche hauptsäch-lich mit dem Internet in Verbindung bringen. Zur Erhebung der Konstrukte wurden den Befragten iterativ je drei Elemente vorgelegt, mit der Aufforderung zu erörtern, inwiefern sich zwei dieser drei Elemente in einer Eigenschaft ähneln, in der sie sich vom dritten unterscheiden. Die Aussagen wurden auf Ton aufgezeichnet und in Matrizen (Grids), die zum Ende der Interviews von den Versuchsteilnehmern vervollständigt wurden, festge-halten. Im Zuge der Auswertung wurden zusätzlich Liniendiagramme erstellt, mit denen sich die Strukturen der Repertory Grids ohne nennenswerten Informationsverlust grafisch darstellen lassen und Ordnungsstrukturen und Zusammenhänge leichter zugänglich ge-macht werden können [He09, BLP03]. Ein Vergleich mit Ergebnissen vorheriger Untersuchungen [DWZ12, Se13] zeigte, dass es mit Hilfe der durchgeführten Repertory Grid Interviews möglich war, typische Fehl-vorstellungen und Misskonzepte vor allem von Servern, IP-Adressen und Google und zum Aufbau des Internets festzustellen. Dies zeigt, dass die Repertory Grid Methode durchaus eine interessante Alternative zu herkömmlichen Methoden zur Forschung nach Schüler-vorstellungen darstellt. Weitergehende Forschungen zur Analyse von kognitiven Ord-nungsstrukturen und – im Speziellen – Teil-Ganzes-Beziehungen, die Lernerinnen und Lerner von informatischen Artefakten herstellen, mit Hilfe der Repertory Grid Methode sind zum Zeitpunkt der Niederschrift dieses Artikels in Planung. 396 Michael T. Rücker et al.ii“proceedings” — 2017/9/17 — 20:19 — page 397 — #397iiiiii Workshop zu Alltagsvorstellungen in der Informatik    5 2.3 Halbstrukturierter Online-Fragebogen Aufgrund der Relevanz von Schlagworten wie „Big Data“ und „Datenschutz“ für die in-formatische Bildung in Schulen und deren Bezug zum Thema „Datenbanken“ wurden im Rahmen einer empirischen Untersuchung [Te16] im Jahr 2016 Schülervorstellungen von relationalen Datenbanken untersucht. Zur Erhebung wurde ein halbstrukturierter Online-Fragebogen eingesetzt, welcher zum einen Fragen zu Vorstellungen von Datenbanken und deren Anwendung, zum anderen Fragen zu informatischen Phänomenen mit indirektem Datenbankbezug enthielt. Im Einzelnen wurde gefragt: 1. Sicherlich hast du schon einmal etwas von „Datenbanken“ gehört. Wie stellst du dir so eine Datenbank eigentlich vor? Beschreibe deine Vorstellungen bitte in wenigen Sätzen. 2. Datenbanken speichern alle möglichen Arten von Daten. Welche Eigenschaften einer Datenbank hältst du für besonders wichtig? 3. Im Alltagsleben spielen Datenbanken eine wichtige Rolle. Nenne bitte einige Beispiele, wo dir in deinem täglichen Leben Datenbanken begegnen. 4. Im Folgenden werden dir sechs Situationen beschrieben, die du vielleicht selber schon erlebt hast. Erkläre bitte jeweils kurz, wie es dazu gekommen ist!  Exemplarisch werden zwei dieser Situationen angegeben: • Du möchtest dir bei einem Onlinehändler (z.B. Amazon) eine neue Smartphone-Hülle kaufen. Unten auf der Seite siehst du die Mitteilung: „Kunden, die diese Hülle kauften, haben auch …. gekauft.“ • Du bist auf einem Ausflug in einer fremden Stadt unterwegs. Dein Smartphone zeigt dir an, wo es in deiner unmittelbaren Umgebung die nächste Eisdiele gibt.  Die Auswertung der Fragebögen erfolgte mittels qualitativer Inhaltsanalyse nach Mayring und lieferte in induktiver Vorgehnsweise drei verschiedene Kategoriensysteme zu ver-schiedenen Aspekten der Betrachtung der Thematik. Besonders interessant ist das Kate-goriensystem zur ersten Frage, welches die Struktur des ANSI/SPARC 3-Ebenen-Modell von Datenbankmanagementsystemen widerspiegelt. Dabei werden interne, konzeptuelle und externe Aspekte unterschieden und zwar einmal aus informatisch-fachlicher Sicht und einmal aus Sicht deren lebensweltlicher Entsprechung. 2.4 Halbstrukturierte Interviews Gemäß den Ergebnissen der jährlichen JIM-Studien (www.mpfs.de) kann im Jahr 2017 von einer nahezu flächendeckenden Verbreitung und recht intensiven, täglichen Nutzung von Smartphones durch Jugendliche ausgegangen werden. Smartphones werden schon seit einiger Zeit in der informatischen Bildung sowohl als Medium, als auch als Unterrichts-gegenstand betrachtet. Entwicklungen wie der MIT App Inventor nutzen die große Popu-larität für die Initiierung von Informatikinteresse aus. Für entsprechenden Unterricht nach dem Modell der didaktischen Rekonstruktion ist es deshalb wünschenswert, genauere Alltagsvorstellungen in der Informatik: Erhebungsmethodiken 397ii“proceedings” — 2017/9/17 — 20:19 — page 398 — #398iiiiii 6    M. T. Rücker, N. Pancratz, C. Gold-Veerkamp, N. Pinkwart, T. Brinda  Kenntnisse über Schülervorstellungen in diesem Bereich zu erhalten. In einer empirischen Untersuchung [Br16] wurde deshalb eine explorative Studie zu Schülervorstellungen von Smartphones durchgeführt mit dem Ziel, einen ersten Überblick über bestehende Vorstel-lungen zu erhalten. Dazu fanden zwölf halb-strukturierte Interviews mit einer Reihe von Gymnasialschülern statt. Inhaltliche Schwerpunkte der Interviews waren: • drahtlose Netzverbindung (Netzwerkstruktur von Mobilfunknetzen, Adressie-rung in Mobilfunknetzen, Übertragungsmedium, Handover, Internetprotokoll) • Apps (Definition, Aufruf, Herkunft, Installation) • Steuerung mittels Touchscreens (Bedienelemente, Touchscreen, Programmar-chitektur) • kompakte Bauart (Kompaktheit der Hardware, technische Grenzen) Acht der Interviews wurden ausgewählt, transkribiert und einer strukturierenden, qualita-tiven Inhaltsanalyse nach Mayring unterzogen. Die Kategorienbildung erfolgte deduktiv, basierend auf den Schwerpunkten des Interviewleitfadens. Innerhalb der Kategorien wur-den inhaltlich zusammengehörige Vorstellungen zusammengefasst.  2.5 Spezielle Items Basierend auf einer Arbeit zur Untersuchung von Kategorisierungsstrategien in der Bio-logie wurde eine empirische Studie durchgeführt, in welcher Schülerinnen und Schüler verschiedener Altersgruppen dazu aufgefordert wurden, rund 20 Begriffe aus der Infor-matik (darunter: Computer, Internet, Roboter, Bildschirm, YouTube, Festplatte etc.) durch verschiedenfarbige Unterstreichung Kategorien zuzuordnen und diese Kategorien dann anschließend selbst zu benennen. Vorschläge für fünf Farben und damit fünf Kategorien waren angegeben, ferner Platz für eine weitere Kategorie. Darüber hinaus wurden die Teil-nehmenden gefragt, welche Begriffe ihrer Meinung nach in der Liste fehlten und welche ihrer Meinung nach nicht kategorisierbar waren. Insgesamt wurden über 400 Fragebögen erfasst und die erstellten Kategorien im Hinblick auf Begriffszuordnungen sowie erkennbare Kategorisierungsstrategien analysiert. Eine weiterführende Analyse mittels Clusteranalyse ist zum Zeitpunkt des Verfassens dieses Textes in Vorbereitung.  2.6 Pretest und Grounded Theory Betrachtet man die Hochschulbildung, könnte man vermuten, dass Lernende ein differen-zierteres Bild der Informatik besitzen, da sie sich – vermeintlich – bewusst für ein infor-matiknahes Studium entschieden haben. In diesen Studiengängen besitzt v. a. das Software Engineering (SE) einen hohen Stellenwert.  Das zunehmende wissenschaftliche Interesse an Schülervorstellungen in der Informatik 398 Michael T. Rücker et al.ii“proceedings” — 2017/9/17 — 20:19 — page 399 — #399iiiiii Workshop zu Alltagsvorstellungen in der Informatik    7 (vgl. Kap. 1) lässt sich kaum auf SE übertragen [Su10, Iv06]. Daher gilt es, eine explora-tive Grundlagenforschung basierend auf der Grounded Theory [Ch11] mit der Frage „Wel-che Vorstellungen haben Studierende zu Software Engineering?“ zu begründen. In einem Pretest wurden Erstsemester6 (N = 217) implizit gebeten zu unterscheiden: „Bitte beschreiben Sie die nachfolgenden drei Begriffe (Informatik, Programmieren und SE) so genau wie möglich mit Ihren eigenen Worten.“ Die handschriftlichen Freitexte wurden im Nachhinein digitalisiert und offen kodiert [Ch11]. Bei der anschließenden Analyse fällt auf, dass… … quantitativ gesehen, beim Begriff „SE“ die wenigsten Antworten – unabhängig vom Studienfach – gegeben wurden. So haben 18 %7 das Freitextfeld leer gelassen. … der Terminus Informatik mit dem Computer/Rechner/PC, der Tätigkeit des Program-mierens und mit der Daten-/Informationsverarbeitung assoziiert wurde. … der Begriff Informatik umschrieben werden kann als „Allgemein alles, was mit Soft-ware zu tun hat“ oder „Alles, was mit Computern zu tun hat“.  … die Beschreibung der Studierenden zu SE zeigt, dass damit ein Entwicklungsprozess gemeint ist, dessen Ergebnis eine Software ist, die programmiert wird. Vergleicht man dies mit der Erklärung zum Programmieren, fallen kaum Unterschiede auf: Hier ent-steht ebenfalls eine Software durch die Tätigkeit des Schreibens mittels einer Program-miersprache.8 Zudem wird hier ebenfalls eine Entwicklungstätigkeit einbezogen. Es lassen sich demnach einige Schlussfolgerungen ziehen: • Es scheint, dass viele Studierende keine konkrete Vorstellung von SE haben. • Außerdem scheinen die Studierenden, die über ein Bild von SE verfügen, keine großen Unterscheide zum Programmieren aufzeigen zu können. • Weiterhin könnte man inferieren, dass Informatik für viele Studierende ein Ober-begriff für Computer, Software etc. darstellt. Um validere Aussagen treffen zu können, sollten weitere Gruppen befragt werden, z. B. Studierende der Informatik/Ingenieurwissenschaften anderer Hochschulen. Somit wäre es möglich die bisherigen Daten in Form einer Querschnittstudie auszuweiten.                                                              6 Studiengänge: Mechatronik (N = 80), Elektro- und Informationstechnik (N = 48) und Informatik (N = 89).  7 Im Vergleich dazu haben 100 % der Befragten den Begriff Programmieren beschrieben und nur 6 % keine Antworten zum Fachwort Informatik gegeben. 8 Umfasst sowohl Nennungen des Überbegriffs wie auch einzelner konkreter Sprachen (z. B. C, C++, Java). Alltagsvorstellungen in der Informatik: Erhebungsmethodiken 399ii“proceedings” — 2017/9/17 — 20:19 — page 400 — #400iiiiii 8    M. T. Rücker, N. Pancratz, C. Gold-Veerkamp, N. Pinkwart, T. Brinda  3 Aufbau des Workshops Im Rahmen des Workshops sollen die oben angeführten Arbeiten zunächst in Form von etwa 10-minütigen Kurzvorträgen etwas genauer vorgestellt und vor allem auch mittels konkretem Datenmaterial illustriert werden. Der Workshop ist zudem offen für weitere Beiträge von anderen Teilnehmerinnen und Teilnehmern, die ihre eigenen Ansätze oder auch eigene Erfahrungen aus der Praxis präsentieren und zur Diskussion stellen wollen. Im Anschluss sollen alle präsentierten Beiträge hinsichtlich der bereits genannten Leitfra-gen verglichen und diskutiert werden: 1. Was sind allgemeine Stärken und Schwächen der verschiedenen Ansätze hin-sichtlich der Erhebung von Lernervorstellungen in der Informatik? 2. Wie unterscheiden sich die Ansätze hinsichtlich der Qualität der Aussagen, die auf ihrer Basis über Lernervorstellungen möglich sind und wie können sie sich gegebenenfalls ergänzen? 3. Welche Implikationen haben die vorgestellten Lernervorstellungen für die Praxis des Informatikunterrichts bzw. -studiums? Literaturverzeichnis [Be85] Beail, Nigel: Repertory Grid Technique and personal constructs: applications in clinical & educational settings. Croom Helm, London [et.al.], 1985. [Be15] Bergner, Nadine: Konzeption eines Informatik-Schülerlabors und Erforschung dessen Effekte auf das Bild der Informatik bei Kindern und Jugendlichen. Dissertation, RWTH Aachen, 2015. [BJS98] Baxter, Irene A.; Jack, Frances R.; Schröder, Monika J.A.: The use of Repertory Grid Method to elicit perceptual data from primary school children. Food Quality and Prefe-rence, 9(1 - 2): S. 73–80, 1998. [BLP03] Bruder, Regina; Lengnink, Katja; Prediger, Susanne: Wie denken Lehramtsstudierende über Mathematikaufgaben? Ein methodischer Ansatz zur Erfassung subjektiver Theo-rien mittels Repertory-Grid-Technik. Mathematica Didactica, 1(26): S. 63–85, 2003. [Br16] Braun, Friederike Victoria: Schülervorstellungen von Smartphones. Schriftliche Haus-arbeit im Rahmen der Ersten Staatsprüfung für das Lehramt an Gymnasien/Gesamtschu-len. Universität Duisburg-Essen, 2016. [Ch11] Charmaz, Kathy: Constructing Grounded Theory. SAGE Publication, 1. Aufl., 2011. [Du07] Duit, Reinders: Science education research internationally: Conceptions, research meth-ods, domains of research. Eurasia Journal of Mathematics, Science & Technology Edu-cation, 3(1), 3-15, 2007 400 Michael T. Rücker et al.ii“proceedings” — 2017/9/17 — 20:19 — page 401 — #401iiiiii Workshop zu Alltagsvorstellungen in der Informatik    9 [Du09] Duit, Reinders: Bibliography: Students’ and Teachers’ Conceptions and Science Educa-tion, 3 2009. Last accessed: 07.11.2016. [DWZ12] Diethelm, Ira; Wilken, Henning; Zumbrägel, Stefan: An investigation of secondary school students’ conceptions on how the Internet works. In: Proceedings of the 12th Koli Calling International Conference on Computing Education Research. ACM, S. 67–73, 2012. [Fr95] Fromm, Martin: Repertory Grid Methodik: ein Lehrbuch. Weinheim: Dt.-Studien-Verl., 1995. [He09] Helmerich, Markus Alexander: Liniendiagramme in der Wissenskommunikation - Eine mathematisch-didaktische Untersuchung. Dissertation, Technische Universität, Darm-stadt, 2009. [Iv06]  Ivins, Jim; von Konsky, Brian R.; Cooper, David; Robey, Michael: “Software Engineers and Engineering: A Survey of Undergraduate Preconceptions” In: Frontiers in Educa-tion. 36th Annual Conference, S. 6-11, 2006.  [Ke55] Kelly, George A.: The psychology of personal constructs. Norton, New York, 1955. [Kn11] Knobelsdorf, Maria: Biographische Lern- und Bildungsprozesse im Handlungskontext der Computernutzung. Dissertation, FU Berlin, 2011. [Mu04] Murphy, Gregory L.: The Big Book of Concepts. MIT Press, 2004. [Ra13] Rabel, Magnus: Grundvorstellungen zu Klassen und Objekten. In: Breier, Norbert; Ste-chert, Peer; Wilke, Thomas: Informatik erweitert Horizonte. Köllen, Bonn, S. 57–66, 2013. [RP16] Rücker, Michael T.; Pinkwart, Niels: Review and Discussion of Children’s Conceptions of Computers. Journal of Science Education and Technology, 25(2), 2016. [Se13] Seifert, Oliver; Sauck, Tony; Schwarzbach, Maximilian; Lerch, Christopher; Weinert, Martin; Knobelsdorf, Maria: “Ich glaube, Google ist so was wie eine Vorhalle des Inter-nets” – Erste Ergebnisse einer qualitativen Untersuchung von Schüler-vorstellungen von der Suchmaschine Google. In: Breier, Norbert; Stechert, Peer; Wilke, Thomas: Informa-tik erweitert Horizonte. Köllen, Bonn, S. 45–56, 2013. [Su10]  Sudol, Leigh Ann; Jaspan, Ciera: “Analyzing the Strength of Undergraduate Miscon-ceptions About Software Engineering” In: Sixth International Workshop on Computing Education Research, ser. ICER ’10. New York, NY, USA: ACM, S. 31–40, 2010. [Te16] Terjung, Torsten: Schülervorstellungen von relationalen datenbanken: Eine empirische Untersuchung. Masterarbeit. Universität Duisburg-Essen, Fakultät für Wirtschafts-wis-senschaften, 2016. [Wi01] Williams, Steven R.: Predications of the Limit Concept: An Application of Repertory Grids. Journal for Research in Mathematics Education, 32(4): S. 341–367, 2001. Alltagsvorstellungen in der Informatik: Erhebungsmethodiken 401ii“proceedings” — 2017/9/17 — 20:19 — page 402 — #402iiiiiiii“proceedings” — 2017/9/17 — 20:19 — page 403 — #403iiiiiiPosterii“proceedings” — 2017/9/17 — 20:19 — page 404 — #404iiiiiiii“proceedings” — 2017/9/17 — 20:19 — page 405 — #405iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017  Blended-Learning-Module für ein Lehrerfortbildungskonzept zum Informatikunterricht Kensuke Akao1 Abstract: Der Fortbildungsbedarf für Informatiklehrkräfte ist als hoch einzuschätzen, doch sehen viele Lehrkräfte Hürden, um an Fortbildungen teilzunehmen. Zwar ist die Flexibilität bezüglich Zeit und Ort eine Stärke von E-Learning, aber es ist noch ungeklärt, ob E-Learning einen wesentlichen Beitrag zur grundständigen Ausbildung von Informatiklehrkräften sein kann. Wir untersuchen das Potential von Blended-Learning für die Fortbildung von Informatiklehrkräften unter Verwendung von Prototyp-Modulen. Ziel ist die Entwicklung eines Lern-/Lehrdesigns für den Einsatz von E-Learning in Blended-Learning Szenarien, um höhere Teilnahmechancen an einer Informatik-Lehrerfortbildung zu schaffen. Keywords: Lehrerfortbildung, Informatikunterricht, E-Learning, Blended-Learning, Mediendidaktik, Backup, Datenschutz 1 Chancen und Probleme von E-Learning für Fortbildungen In Nordrhein-Westfalen (NRW) wurden viele Informatiklehrkräfte nachqualifiziert, besonders in der Sekundarstufe I (Sek-I). Oft reicht das Fachwissen nachqualifizierter Lehrkräfte für einen anspruchsvollen und professionellen Informatikunterricht, der wirklich den Vorgaben und Zielen des Kernlehrplans gerecht wird, nicht aus. Zusätzlich fällt es Lehrkräften oft aus organisatorischen Gründen schwer an Lehrerfortbildungen teilzunehmen, die ihren Unterricht verbessern könnten.  Die zeitliche und örtliche Flexibilität von E-Learning ist ein häufiger Vorschlag zur Lösung dieses Problems. Blended-Learning (Online-Module mit Präsenzterminen) bewahrt auch einen Face to Face Austausch [Ke13]. Einige Projekte, z. B. VLIN in Niedersachen [VL17] oder FLIEG in Bayern [Sp09], haben Informatiklehrkräfte mithilfe von Blended-Learning ausgebildet. Ein Ergebnis unserer Umfrage2 ist, dass sich die meisten Informatiklehrkräfte in NRW eine Fortbildung innerhalb der Dienstzeit wünschen (nur 4,5% können sich eine Fortbildung am Wochenende vorstellen und nur 1,2% am Abend). D. h. die Flexibilität von E-Learning oder Blended-Learning als 24 Std.-Lernumgebung scheint durch die Bereitschaft deutscher Lehrkräfte begrenzt.                                                  1 Westfälische Wilhelms-Universität(WWU) Münster, Didaktik der Informatik(DDI), Fliednerstrasse 21, 48149 Münster, kensuke.akao@uni-muenster.de 2 Online-Umfrage vom 5.Sep.2016 bis 9.Feb. 2017 in NRW zum Informatikangebot Sek-I und zum Fortbildungsbedarf: 247 Rückmeldungen (202 Informatiklehrkräfte; 25 Lehrkräfte, die Fächer mit informatischen Inhalte unterrichten; 20 stellvertretende- / Schulleiter)  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 405ii“proceedings” — 2017/9/17 — 20:19 — page 406 — #406iiiiii Kensuke Akao  2 Untersuchungsstrategie des erwogenen Fortbildungskonzepts  Wir stellen uns die Forschungsfrage, ob Blended-Learning im Bereich der Lehrerfortbildung für den Informatikunterricht wirkungsvoll eingesetzt werden kann. Zur Untersuchung der Akzeptanz von Blended-Learning erstellen wir zunächst ein neues Lehrerfortbildungsprojekt mit Prototyp-Modulen das Thema „Datensicherheit, Datenschutz und Datenbank“. Und das erste Lernmodul ist „Backup für Daten und Systeme“. Ziel ist die Schaffung höherer Teilnahmechancen für Lehrerfortbildungen, indem (a) die Anzahl der Präsenztermine möglichst verringert wird und (b) die benötigte Lernzeit durch eine effektive Präsentation der Lerninhalte verkürzt wird.  Die Fortbildungen bestehen aus Online-Modulen (Theorie-Phase), gefolgt von einer Praxis-Veranstaltung (Anwendungs-Phase). Für die Online-Module wurden Videos mit animierten Grafiken entwickelt, um komplizierte Inhalte möglichst kompakt darzustellen. Um die Akzeptanz verschiedener Medien vergleichen zu können, bieten wir die Inhalte auch als reine Audioversion oder reines Textdokument mit Grafiken an. Nach jeder Phase werden die Teilnehmer über das Konzept befragt, damit die Fortbildung in einem Verbesserungszyklus Design-Based-Research [DRC03] stetig weiterentwickelt werden kann. 3 Ausblick Aktuell planen wir zu untersuchen, inwiefern informelle Austauschmöglichkeiten die Anzahl der formellen Präsenztermine weiter reduzieren können. Beispielweise waren 40,9% der Lehrkräfte bei unserer Umfrage grundsätzlich an einem regelmäßigen Stammtisch interessiert. In den nächsten Monaten startet der erste Probelauf unseres Fortbildungskonzeptes. Wir arbeiten weiter daran, eine gehaltvolle, gern und gut besuchte Lehrerfortbildung anzubieten, welche gut auf die Bedürfnisse der Lehrkräfte abgestimmt werden kann. Literaturverzeichnis [DRC03] The Design-Based Research Collective: Design-Based Research: An Emerging Paradigm for Educational Inquiry, Educational Researcher Vol.32 No.1, S.5-8, 2003. [Ke13] Kerres, M.: Mediendidaktik – Konzeption und Entwicklung mediengestützter Lernangebote 4.Auflage, 2013. [Sp09]  Spohrer, M.: Konzeption und Analyse neuer Maßnahmen in der Fort- und Weiterbildung von Informatiklehrkräften, Dissertation an der Technische Universität München, 2009 [VL17] Virtuellen Lehrerweiterbildung Informatik in Niedersachsen (VLIN), vlin.de/ Stand: 5.1.2017.  406 Kensuke Akaoii“proceedings” — 2017/9/17 — 20:19 — page 407 — #407iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 11Unterschiede beim Memorieren von Quelltexten zwischenNovizInnen und ExpertInnen der objektorientiertenProgrammierungMike Barkmin1, Matthias Kramer2, David Tobinski3, Torsten Brinda4Abstract: Dieser Artikel befasst sich mit den unterschiedlichen Vorgehensweisen von ExpertInnen undNovizInnen der Programmierung beim Memorieren und Interpretieren von Quelltexten. ExpertInnenhaben die Quelltexte überwiegend auf einer semantischen Ebenen memoriert, NovizInnen hingegenzeilenweise.Keywords: Objektorientierte Programmierung, Arbeitsgedächtnis, Programmiererfahrung.1 EinleitungNovizInnen der Programmierung stehen oft vor dem Problem, mehrere Herausforderungenbewältigen zu müssen, wenn sie eine Programmieraufgabe lösen. Zum einen müssen sieeinen Problemlöseprozess durchlaufen und passende Algorithmen entwickeln, zum anderenmüssen sie die syntaktischen Elemente der verwendeten Programmiersprache beherrschenund richtig anwenden. Im Rahmen einer im Kontext des COMMOOP-Projekts [KHB16]durchgeführten Untersuchung wurden frühere Ergebnisse bestätigt, nach denen die Beherr-schung syntaktischer Elemente für NovizInnen eine Herausforderung darstellt. NovizInnenorientieren sich eher an gelernten Quelltextkonventionen als an der Semantik. Basierendauf diesen Ergebnissen und denen von Adelson [Ad81] wurde postuliert, dass ExpertInnenQuelltexte in semantischen Einheiten im Arbeitsgedächtnis ablegen, wohingegen NovizIn-nen syntaktische Einheiten verwenden. Um diese Hypothese zu überprüfen, wurde ein Testzum Memorieren von Quelltexten entwickelt.2 Methode, Ergebnisse und DiskussionDie ProbandInnen wurden gebeten, verdeckte Quelltexte und natürlichsprachliche Texte,welche nach Belieben aufgedeckt werden konnten, in ein Textfeld zu übertragen. Während1Univ. Duisburg-Essen, DDI, Schützenbahn 70, 45127 Essen, Deutschland mike.barkmin@stud.uni-due.de2Univ. Duisburg-Essen, DDI, Schützenbahn 70, 45127 Essen, Deutschland matthias.kramer@uni-due.de3Univ. Duisburg-Essen, Institut für Psychologie, Universitätsstr.2, 45141 Essen, Deutschlanddavid.tobinski@uni-due.de4Univ. Duisburg-Essen, DDI, Schützenbahn 70, 45127 Essen, Deutschland torsten.brinda@uni-due.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 407ii“proceedings” — 2017/9/17 — 20:19 — page 408 — #408iiiiiides Vorgangs wurden alle Schritte protokolliert. Zusätzlich wurden drei psychologischeTests durchgeführt, um die allgemeine Merkfähigkeit der ProbandInnen kontrollieren zukönnen. Anschließend sollten die ProbandInnen eine Selbsteinschätzung ihrer Programmier-erfahrung anhand validierter Likert-Skalen vornehmen (siehe [Ba17]). An der Studie haben42 Studierende (30: Informatik, 12: andere) teilgenommen. Die protokollierten Tastenan-schläge und Anschauphasen wurden genutzt, um Unterschiede zwischen NovizInnen undExpertInnen der objektorientierten Programmierung zu ermitteln. Die Überprüfung einesaus der Theorie abgeleiteten Strukturgleichungsmodells (siehe Abb. 1 links) mittels PLSPMhat gezeigt, dass die Programmiererfahrung (PE) die Fähigkeit in den Übertragungsaufgaben(F) am besten erklärt. Das Arbeitsgedächtnis (AG) und die Konzentrationsfähigkeit (K) sinddiesbezüglich schwächere Indikatoren. Eine Bootstrapping-Validierung ergab, dass nur diePfade von PE nach F und von K nach AG signiﬁkant sind. Damit sind quantitative Hinweisegefunden, dass mit mehr Programmiererfahrung wahrscheinlich mehr Informationseinheiteneines Quelltexts memoriert werden können. Dies ist wahrscheinlich auf das Zusammenfas-sen von Informationseinheiten zurückzuführen. Des Weiteren wurde untersucht, ob die0.61460.0790.06030.4899FPEAGKK>AGK>FAG>FPE>F0.20.00.20.40.60.81.0ExpertInnen NovizInnenAbb. 1: Strukturmodell und Gruppenunterschiede der Pfadkoe  zientenPfadkoe  zienten sich zwischen NovizInnen und ExpertInnen (operationalisiert durch diePE) unterscheiden. Die unterschiedlichen Pfadkoe  zienten (siehe Abb. 1 rechts) sind nurfür den Pfad PE nach F signiﬁkant. Daher ist der Einﬂuss der Programmiererfahrung beiNovizInnen deutlich größer als bei ExpertInnen.Literatur[Ad81] Adelson, B.: Problem solving and the development of abstract categories inprogramming languages. Memory & Cognition 9/4, S. 422–433, 1981.[Ba17] Barkmin, M.: Konstruktion und Erprobung eines Bausteins zur Kompetenzmes-sung im Bereich der objektorientierten Programmierung im den DimensionenSyntax und Semantik. Unversität Duisburg-Essen, 2017.[KHB16] Kramer, M.; Hubwieser, P.; Brinda, T.: A Competency Structure Model ofObject-Oriented Programming. In: 2016 International Conference on Learningand Teaching in Computing and Engineering (LaTICE). S. 1–8, März 2016.408 Mike Barkmin, Matthias Kramer, David Tobinski, Torsten Brindaii“proceedings” — 2017/9/17 — 20:19 — page 409 — #409iiiiiiIra Diethelm (Hrsg.): Informat ische Bildung zum Verstehen und Ge stalten der digitalen Welt,  Lecture Notes in Informatics (LNI),  Gesellschaft für Informatik, Bonn 2017  Wirkmodelle zum Computational Thinking in der Grundschule Christine Bescherer 1 und Andreas Fest 1 Abstract:  Im Rahmen des von der Telekom  Stiftung geförderten Projekts  „Digitales Lernen in der Grundschule Stuttgart/Ludwigsburg“ werden in Se minaren Unterrichtseinhe iten zur Förderung des „Computational Thinking“ entwickelt und von den Studierenden in einer Grundschule erprobt. Im Verlauf des Projekts wird über kontinuierlich  v e r f e i n e r t e  W i r k m o d e l l e  d i e  W i r k u n g  d i e s e r  Interventionen sowohl auf Ebene der Studierenden wie auch der Schülerinnen und Schüler erfasst und dargestellt. Keywords: Computational Thinking in der Grundschul e, Wirkmodelle, Interventionsprojekt 1 Einleitung und theoretischer Hintergrund Die Entwicklung digitaler Lehr-/Lernszenarien in der Grundschule ist das Ziel des von der Telekom Stiftung geförderten Projekts „Digitales Lernen in der Grundschule Stuttgart/Ludwigsburg“ (dileg-SL, https://www.ph-ludwig sburg.de/16553.html ) an der Pädagogischen Hochschule Ludwigsburg. Neben dem produktiven und kritischen Umgang mit digitalen Medien in verschiedenen Kontexten ist eines der wichtigen Ziele die Unterstützung der Grundschülerinnen und Grundschüler bei der Entwicklung informatischer und algorithmischer Grundkompetenzen. Dazu entwickeln Studierende des Lehramts Grundschule unter Anleitung Lehr-/Lernszenarien („halbgare Mikrowelten“ [Pa75], [Ky07]), die das „Computational Thinking“ [Gr13] von Schülerinnen und Schülern im Mathematikunterricht der 3. oder 4. Klasse unterstützen.  2 Methode und Durchführung In dem Projekt werden Lehramtsstudierende (Lehramt Grundschule) in einem Seminar nach dem Kennenlernen und eigenen Erfahrungen zum „Computational Thinking“ unter Anleitung „halbgare Mikrowelten“  [Ky07] zu  mathematischen Themen der Grundschule entwickeln, in denen die Schülerinnen und Schüler verschiedene Elemente des „Computational Thinking“ erlernen, erleben und reflektieren sollen. Diese Mikrowelten werden dann in einer Grundschule in passenden Lernsettings (Projektunterricht, Regelunterricht, Medien-AG) erprobt, videographiert und später im Seminar wieder                                                            1 Pädagogische Hochschule Ludwigsb urg, Institut für Mathematik und Informatik, Reuteallee 46, 71634 Ludwigsburg, bescherer@ph-ludwigsburg.de , fest@ph-ludwigsburg.de I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 409ii“proceedings” — 2017/9/17 — 20:19 — page 410 — #410iiiiii 16    Christine Bescherer und Andreas Fest  reflektiert. Die erwartete Wirkung bezieht sich v.a. auf den Zuwachs an Fähigkeiten im Umgang mit den Elementen des Computational Thinkings sowie z.B. auch Änderungen in der computerspezifischen Selbstwirksamkeitserwartung. Da durch die geringen Fallzahlen sowohl der Studierenden als auch bei den Schülerinnen und Schülern im Rahmen einer solchen Entwicklungs- und Machbarkeitsstudie kein experimentelles Design zum Nachweis der Wirksamkeit leistbar ist, wird die Wirkung anhand der iterativen Verfeinerung von Wirkmodellen (vgl. [Wa16]) dokumentiert. Das Ausgangsmodell umfasst den Input, die Maßnahme und den erwarteten Output noch in einer undifferenzierten Form: Abb. 1: Das undifferenz ierte Wirkmodell in seiner Ausgangsform.   Im Verlauf des Projekts wird das Wirkmodell immer weiter verfeinert und sowohl der theoretische Input, die verwendeten Lernszenar ien als auch die Instrumente zu Erfassung der Änderungen werden nach und nach konkretisiert. Literaturverzeichnis [Gr13]  Grover, S.; Pea, R.: Co mputational Thinking in K–12 A Revi ew of the State of the Field. In Educational Researcher, 42. Jg., Nr. 1, S. 38-43, 2013. [Ky07] Kynigos, C.: Half-baked logo microworlds as boundary objects in integrated design.  In Informatics in Education - An Interna tional Journal, Vol 6_2, S. 335-359. 2007. [Wa16] Wachsmuth, E. & Hens e, J.: Wirkmodelle zur Unterstützung der Evaluation komplexer Hochschulprojekte. In: Qualität in der Wi ssenschaft. 3+4/2016. Universitäts-Verlag Webler. Bielefeld. S. 80-87, 2016. 410 Christine Bescherer, Andreas Festii“proceedings” — 2017/9/17 — 20:19 — page 411 — #411iiiiii Schülervorstellungen von relationalen Datenbanken:  eine empirische Untersuchung  Torsten Brinda1 und Thorsten Terjung2 Abstract:  Als Beitrag zur didaktischen Rekonstruktion verknüpft die vorliegende empirische Untersuchung individuelle Schülervorstellungen zum Thema relationale Datenbanken mit den zugehörigen informatischen Fachkonzepten. Zur Erhebung wurde ein Online -Fragebogen einge-setzt, welcher  zum einen Fragen zu Vorstellungen von Datenbanken und deren Anwen dung, zum anderen Fragen zu informatischen Phänomenen mit indirektem Daten bankbezug enthielt . Die Auswertung der Fragebögen erfolgte mittels qualitative r Inhaltsanalyse nach Mayring und lief erte drei Kategoriensysteme, wobei die Kategorisierung der Schülervorstellungen analog zum AN-SI/SPARC 3 -Ebenen -Modell als wichtigstes Ergebnis zu nennen ist. Dieses Modell konnte dabei in zwei unterschiedlichen Ausprägungen in den Schülervorstellungen iden tifiziert werden  – einer-seits als Betrachtung von informatischen  Datenbankkonzepten, andererseits mit Blick auf die realweltliche, analoge Speicherung und Verarbeitung von Daten. Schlussfolgernd kann für die didaktische Strukturierung des Unterrichts empfohlen werden, die verschiedenen Ebenen des ANSI/SPARC -Modells von Beginn an zu thematisieren und deutlich voneinander zu unterschei-den. Keywords: Schülervorstellungen, Datenbanken, empirische Studie, Kategorisierung . 1 Einleitung  Als Umsetzung des Modell s der didaktischen Rekonstruktion (vgl. [Di11]) verknüpft die empirische Untersuchung individuelle Schülervorstellungen mit informatischen Fach-konzepten zum Thema relationale Datenbanken. Dabei wird beides im wechselseitigen Vergleich auf Gemeinsamkeiten u nd Unterschiede untersucht und daraus eine didakti-sche Strukturierung für den Unterricht abgeleitet. Zur Erhebung der Schülervorstellun-gen wurde ein Online -Fragebogen eingesetzt, welcher zum einen Fragen zu Vorstellun-gen von Datenbanken und deren Anwendung , zum anderen Fragen zu informatischen Phänomenen mit indirektem Datenbankbezug enthält.  2 Ergebnisse und Fazit  Die Auswertung der Fragebögen erfolgte mittels der qualitativen Inhaltsanalyse nach                                                          1 Didaktik der Informatik, Universität Duisburg -Essen, Schützenbahn 70, 451 27 Essen,  torsten.brinda@uni -due.de  2 Institut für Informatik u. Wirtschaftsinformatik, Universität Duisb urg-Essen,  Schützenbahn 70, 4512 7 Essen, thorsten.terjung@stud.uni -due.de  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 411ii“proceedings” — 2017/9/17 — 20:19 — page 412 — #412iiiiii Mayring [Ma10] und lieferte drei verschiedene Kategoriensyste me zu verschiedenen Aspekten der Betrachtung der Thematik. Zentral ist hier zunächst die Kategorisierung der Schülervorstellungen analog zum ANSI/SPARC 3 -Ebenen -Modell  [TS78] , welches bei Datenbankmanagementsystemen die interne Ebene der physischen Speiche rung der Daten, die konzeptuelle Ebene der Strukturierung der Daten und die externe Ebene der benutzer definierten Sicht auf die Daten  unterscheidet. Dieses Modell konnte in zwei Ausprägungen in den Schülervorstellungen identifiziert werden. Einerseits als Betrach-tung von digitalen Datenbankkonzepten, andererseits mit Blick auf die realweltliche, analoge Speicherung und Verarbeitung von Daten. Weiterhin zeigte sich, dass bei Schü-lerinnen und Schülern mit wenig bis keiner unterrichtlichen Erfahrung in der Dat en-bankthematik häufig eine Vorstellung auf der internen Ebene vorherrscht, während mit ansteigender Behandlung des Themas im Informatikunterricht ein Wechsel zur konzep-tuellen Ebene erkennbar ist.  Auch bei den genannten lebensweltlichen Begegnungen mit Datenbanken zeigte sich eine Abhängigkeit von der Thematisierung im Unterricht. Wäh-rend Anf änger eher abstraktere Facetten  wie Smartphone oder Laptop benennen, rücken bei den Schülerinnen und Schülern, die das Thema ausführlicher behandelt hatten, per-sönlic h erfahrene Anwendungen  wie etwa beim Online -Einkauf oder im Schulzusam-menhang in den Fokus. Die Erklärungsansätze der Schülerinnen und Schüler zu den vorgestellten Phänomenen offenbaren einen teils deutlichen Mangel an Wissen bezüg-lich der tatsächlichen Anw endungen von Datenbanken und der zugrundeliegenden Fach-konzepte. Insbesondere die Auswertung und Analyse von Nutzerprofilen (Data Wa-rehouse - und Data Mining -Konzept) ist den Schülerinnen und Schülerinnen nur wenig bekannt. Die Verbindung mehrerer Teilaspek te bei der Auswertung verschiedener Da-tenbanken konnte nicht zufriedenstellend erklärt werden.  Schlussfolgernd kann für die didaktische Strukturierung des Unterrichts empfohlen werden, die verschiedenen Ebenen des ANSI/SPARC -Modells von Beginn an zu themat isieren und deutlich voneinander zu unterscheiden. Der Schwerpunkt sollte dabei auf der Strukturierung und Ordnung von Daten liegen, wobei zur konkreten Umsetzung im Informatikunterricht lebensweltliche Phänomene mit Bezug zu Internetanwendung als geeignet  erscheinen.  Eine ausführliche Darstellung der Studie findet sich in [Te16].  Literaturverzeichnis  [Di11]  Diethelm, I., Dörge, C., Mesaros, A. M.,  & Dünnebier, M. : Die Didaktische Rekon-struktion für den Informatikunterricht. In : Thomas, M. (Hrsg.): Informatik in Bildung und Beruf. Köllen, Bonn, S . 77-86, 2011 . [Ma10 ] Mayring, P.: Qualitative Inhaltsanalyse. Grundlagen und Techniken. 11. Auflage . Beltz, Weinheim , 2010 . [Te16]  Terjung, T.: Schülervorstellungen von relationalen Datenbanken. Masterarbeit. Uni-versität Duisburg -Essen, Fakultät für Wirtschaftswissenschaften, 2016.  [TK78]  Tsichritzis, D.; Klug, A.: The ANSI/X3/SPARC DBMS framework report of the study group on database management systems. In: Inform . Systems 3 (3), S.173 -191, 1978.  412 Torsten Brinda, Thorsten Terjungii“proceedings” — 2017/9/17 — 20:19 — page 413 — #413iiiiiiDie Handykiste für die Grundschule  Wibke Duwe1 Abstract:  Auf Grundlage der Forderungen der Kultusministerkonferenz zur digitalen Bildung in der Grundschule wird vorliegend ein Unterrichtskonzept zum Thema „Handy in der Grundschule“ vorgestellt. Da Mobiltelefone als komplexe IT -Systeme zu verstehen sind, können a nhand dieser digitalen Grundkompetenzen , wie sie auch von der KMK gefordert werden, vermittelt werden.  Keywords: Digitale Bildung, Grundschule, Sachunterricht, Handy . 1 Einleitung  Mit der im Dezember 2016 beschlossenen Strategie „Bildung in der Digitalen We lt“ legt die Kultusministerkonferenz  (KMK)  ein neues Handlungskonzept für das Lernen im Kontext der zunehmenden Digitalisierung [KM 16] vor und erklärt dieses zu einem integralen Bes tandteil  des Bildungsauftrages bereits in den Schulen  der Primarstufe . Für die unmittelbare Lebensumwelt der Kinder in der Grundschule kommt insbesondere dem Mobiltelefon , bzw. in zunehmendem Maße dem Smartpho ne, eine wichtige Bedeutung zu. Zum Verstehen und Reflektieren der Funktionsweise von Mobiltelefonen gehören mittler weile auch  informatische Grundkompetenzen  wie das Kennen und Verstehen von grundlegenden Prin zipien der digitalen Welt. I m vorliegenden Beitrag  wird ein Konzept für ein Unterrichtskonzept zum Thema „Handy in der Grundschule“ vorgestellt.  2 Das Konzept der H andykiste  Bei der Handykiste in der Grundschule handelt es sich um eine Unterrichtskiste, die vielfältige Materialien rund um das Thema Handy und Mobilfunk enthält. Sie ist gedacht für einen handlungsorientierten Sachunterricht in der Grundschule. Die Lern ziele dieses Unterrichts bestehen dari n, die Schüler/innen  der dritten und vierten Klasse  dabei zu unterstützen, ein Verständnis für Mobiltelefone als Informatiksysteme und die Bedeutung dieser Informatik im Alltag zu entwickeln. Die Kiste enthält  didaktis ch aufbereitete Materialien für den Einsatz im Unterricht, die je nach Alter und Leistungsniveau der Schüler/innen ausgewählt und eingesetzt werden können, wie z.B. ein Mobiltelefon zum Auseinanderschrauben, Bastelanleitungen zum Basteln eines Dosentelefon s und                                                          1 Carl von Ossietzky Universität, Department für Informatik, Abt. Didaktik der Informatik, Uhlhornsweg 84, 26129 Oldenburg , wibke.duwe@uni -oldenburg.de  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 413ii“proceedings” — 2017/9/17 — 20:19 — page 414 — #414iiiiiiModellfiguren zum Erklären und Erfahrbarmachen eines Handyfunknetzes.  Der Inhalt der Handykiste ist in folgende Lehreinheiten gegliedert:  1. Die Geschichte des Mobiltelefons : Im erste n Kapitel der Handykiste wird die technische Entwicklung  von Mobiltelefonen  nachgezeichnet. D ie Kinder sollen eigenständig Vorgängermodelle wie z.B. ein Dosentelefon bauen und erfahren, wie es zu der Erfindung eines kabellosen Telefons kam.   2. Bestandteile eines Mobiltelefons : In der zweiten  Lehreinheit sollen Schüler/innen lernen , wie ein Mobiltelefon aufgebaut ist, welche Bestandteile es besitzt und diese auch benennen können. Praktisch erfahrbar wird dies u.a. durch das Aufschrauben eines Handys.  3. Funktionsweise eines Mobiltelefons : Im dritten Kapitel geht es um die Funktionsweise von Mobiltelefonen . Dabei stehen das Anrufen und das Versenden von Kurznachrich ten über den Mobilfunk im Fokus. Mithilfe von geeigneten Materialien wie wasserdichten Behältern, Alufolie, Tüten etc. könn en die Schüler/innen eigene Experimente zur Funktionsw eise von Mobilfunk durchführen.  4. Weitere Dienste beim Smartphone : Über den reinen Mobilfunk hinaus bieten Smartphones heute viele weitere Funktionen. Als besonderes wichtig ist hier die Internetverbindung hervorzuheben. Weitere insbesondere für Kinder wichtige und vielgenutzte Funktionen eines Smartphone stellen u.a. Han dyspiele, Apps, Instant Messenger, Musikplayer, Kamera oder Ortungsdienste/GPS dar [MP14].  5. Handysicherheit : Im fünften  Kapitel de r Handykiste sollen Schüler/innen unterschiedliche Möglichkeiten der Verschlüsselung von Nachrichten kennenlernen . Risiken und  Gefahren, die sich aus der Sammlung mobiler Daten (Stichwort Big Data) ergeben, sollen ebenfalls thematisiert werden.  6. Die Zukunft von Mobiltelefonen : Im abschließenden Kapitel soll die Zukunft der Handys daher thematisiert werden. Dieses Thema ermöglicht einen besonders kreativen Zugang, die Kinder können beispielsweise selbst aktiv werden und Handys der Zukunft und mögliche Funktionen erfinden und diese selbst basteln und präsentieren.  3 Literatur  [KM16] KMK - Kultusministerkonferenz (Hrsg.) 2016: Bildung in der digitalen Welt. Strate gie der Kultusministerkonferenz,  https://www.kmk.org/aktuelles/thema -2016 -bildung -in-der-digitalen -welt.html , 14.02.2017 . [MP14] mpfs - Medienpädagogischer Forschungsverbund Südwest 2014: KIM -Studie 2014. Kinder + Medien, Computer + Internet. Basisuntersuchung zum Medienumgang 6 – 13-Jähriger, https:/ /www.mpfs.de/fileadmin/files/Studien/KIM/2014/KIM_Studie_2014.pdf , 14.02.2017.  414 Wibke Duweii“proceedings” — 2017/9/17 — 20:19 — page 415 — #415iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017    15 „Informatik entdecken – mit und ohne Computer“  Mit ihrem Bildungsangebot unterstützt die Stiftung „Haus der kleinen Forscher“ informatische Bildung von drei- bis zehnjährigen Kindern Christine Günther1  Abstract: Die Stiftung „Haus der kleinen Forscher“ stellt ein Bildungsangebot zur Verfügung, das pädagogische Fach- und Lehrkräfte in Kita, Hort und Grundschule in ihrer pädagogischen Arbeit im MINT–Bereich unterstützt. Seit 2016 widmet sich die Stiftung der fachlichen Fundierung des Inhaltsbereichs Informatik und entwickelte darauf aufbauend ein eigenes Bildungsangebot. Die Basis für die inhaltliche Entwicklung des Themas bildeten Zieldimensionen informatischer Bildung im Elementar- und Primarbereich.2 Im Beitrag werden die Ziele der Stiftung, die den Themenbereich Informatik strukturierenden Inhalts- und Prozessbereiche, das Fortbildungskonzept, die pädagogischen Materialien sowie die Pilotierung des Angebots der Stiftung vorgestellt.  Keywords: Informatische Bildung, frühe informatische Bildung, Fortbildungskonzept, pädagogische Materialien  1 Ziele der Stiftung „Haus der kleinen Forscher“ Das Ziel der Stiftung „Haus der kleinen Forscher“ im Bildungsbereich Informatik ist es, Kindern zwischen drei und zehn Jahren erste Erfahrungen zum Thema Informatik zu ermöglichen. Mit ihren Angeboten möchte die Stiftung pädagogische Fach- und Lehrkräfte dabei unterstützen, Mädchen und Jungen in ihrer Auseinandersetzung mit informatischen Fragen, Problemen und Zielen zu begleiten.  2 Angebotsentwicklung Ausgehend von Zieldimensionen informatischer Bildung für den Elementar- und Primarbereich3 wurden folgende Inhaltsbereiche im Angebot „Informatik entdecken – mit und ohne Computer“, konkret im Fortbildungskonzept und den pädagogischen Materialien, integriert: Die Bedeutung von Informatik im Alltag, Informationen und Daten, Planung, Steuerung und Optimierung.                                                             1 Stiftung „Haus der kleinen Forscher“, Abteilung: Inhaltliche Entwicklung, Rungestraße 18, 10179 Berlin, christine.guenther@haus-der-kleinen-forscher.de 2 Bergner, N. et al., (in Vorbereitung) 3 ebd. I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 415ii“proceedings” — 2017/9/17 — 20:19 — page 416 — #416iiiiii 16    Christine Günther  Prozessbezogene Aspekte informatischer Bildung wurden als didaktisch-methodisches Material als „Informatikkreis“4 für die Pädagoginnen und Pädagogen entwickelt. Dort wird informatisches Denken und Handeln als exploratives und gestaltendes, zyklisches Vorgehen dargestellt.5 Die Fortbildung ist nach den Empfehlungen aus den Zieldimensionen informatischer Bildung für den Elementar- und Primarbereich6 so konzipiert, dass die Pädagoginnen und Pädagogen das Thema sowohl ganz ohne Computer („unplugged“), mit dem Computer (softwarebasiert) und am Beispiel von kindgerechten Robotersystemen (Robotik) selbst entdecken und erforschen können. Für die Zielgruppe entscheidend ist die Erkenntnis, dass Grundprinzipien und Vorgehensweisen der Informatik auch mit Papier und Stift, mit Alltagsmaterialien oder mit reinem Körpereinsatz für Kinder erfahrbar werden können.7 Die Pädagoginnen und Pädagogen erhalten in der Fortbildung vielfältige Anregungen zur Umsetzung des Themas mit den Kindern, die sie selbst sofort erproben können. Außerdem erhalten die Teilnehmenden das pädagogische Materialpaket. In diesem finden sie viele der Praxisideen aus der Fortbildung auf Entdeckungskarten für Pädagoginnen und Pädagogen, Entdeckungskarten für Kinder und in einer Themenbroschüre festgehalten. Letztere bietet zudem fachliches als auch didaktisch-methodisches Hintergrundwissen. Das Bildungsangebot wird durch zwei digitale Lernspiele für Kinder im Grundschulalter (Ronjas Roboter und Fabios Flächen) sowie einen Onlinekurs für Pädagoginnen und Pädagogen ergänzt. In der Pilotphase (März bis August 2017) wurden sowohl die Fortbildung als auch die Materialien durch pädagogische Fach- und Lehrkräfte getestet und Überarbeitungen vorgenommen. Literaturverzeichnis [BeiV] Bergner, N., Köster, H., Magenheim, J., Müller, K., Romeike, R., Schulte, C. & Schroeder, U.: Zieldimensionen informatischer Bildung im Elementar- und Primarbereich. In Stiftung Haus der kleinen Forscher (Hrsg.), Frühe informatische Bildung – Ziele und Gelingensbedingungen für den Elementar- und Primarbereich. Wissenschaftliche Untersuchungen zur Arbeit der Stiftung „Haus der kleinen Forscher“ (Band 9). Verlag Barbara Budrich, Opladen, Berlin, Toronto, (in Vorbereitung).  [In17]  Stiftung „Haus der kleinen Forscher“ Informatikkreiskarte, 2017. [Sc17] Schulte, C., Magenheim, J., Müller, K., Budde, L.: The Design and Exploration Cycle as Research and Development Framework in Computing Education. In: Beiträge zur EDUCON; Global Engineering Education Conference, IEEE, 2017. [BWF15] Bell, T., Witten, I., Fellows, M., 2015. cs unplugged, verfügbar unter http://csunplugged.org/books/                                                            4 Stiftung „Haus der kleinen Forscher“, 2017 5 Schulte, C. et al., 2017 6 Bergner, N., et al., (in Vorbereitung) 7 Bell, T. et al., 2015 416 Christine Güntherii“proceedings” — 2017/9/17 — 20:19 — page 417 — #417iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 1Informatische Grundbildung: Exploration desErstzugangszuLego®Wedo2.0undCubelets vonDrittklässler_innenLennart Goecke ,1Jurik Stiller ,2Detlef Pech,3Niels Pinkwart4Abstract: Dasvorgestellte Projekt gehtderübergeordneten Frage nach, wieKinder Algorithmen verstehen. Neben derdidaktischen Begründung informatischer Bildung imSachunterricht, werden ersteErgebnisse einer ersten Erhebung präsentiert. DieperVideo erhobenen Daten basieren aufExplorationen vonKindern, dieerstmals mitLego®WeDo 2.0undCubelets arbeiten.Keywords: Sachunterricht; Grundschule; Algorithmusverständnis; Lebensweltzugang1Einleitung &Stand derForschungErkenntnisleitend fürdashierskizzierte Projekt istdieübergeordnete Frage nachdemVerhältnis vonInformatik, informatischer Bildung undSachunterricht. ImFokus stehen dabei Fragen, diedietheoretisch undempirisch begründete Entwicklung undEvaluation vonUnterricht betre  en.M aterialien w ieL ego®WeDo2 .0u ndC ubelets adressieren tendenziell alleGrundschüler_innen undnicht nurInteressierte. Daher eignen siesichalseinZugang zumKonstrukt Algorithmusverständnis vonGrundschüler_innen .Fachdidaktisch lässtsichdieRelevanz vonInformatik -Themen alsTeilvonSachunterricht gutbegründen. Indessen Didaktik werden Klafkis allgemeindidaktische Aspekte zurBedeutung vonInhalten weitrezipiert, sodass sichbspw. Grundbildung zumAlgorithmusbegri  u.a.gutalszukunftsbedeutsam begründen lässt.Welche E ekteb eim U mgang m ita lgorithmischen P hänomenen ind erGrundschule auftreten undwiesichdiese Lernprozesse beschreiben lassen, wirdbislang nurwenig undnuranhand vonTeilaspekten untersucht [Is15, S.131f. SRV16; KG14; Se11] .Dies istjedoch eineVoraussetzung zurEntwicklung undEvaluation vonUnterricht. DieVerortung desAlgorithmusverständnis inderinformatischen (Grund-) Bildung begründet sichdurch deren alltägliche Relevanz.Daher lautet dieleitende Fragestellung dieser Untersuchung: Wieverstehen Grundschü-ler_innen Algorithmen? DerBeantwortung wirdsichineinem ersten Schritt mittels einer1Humboldt-Universität zuBerlin, Sachunterrichtsdidaktik undseine Didaktik, Friedrichstr. 194,10117 Berlin,lennart.goecke@hu-berlin.de2gleiche A liation, jurik.stiller@hu-berlin.de3gleiche A liation, detlef.pech@hu-berlin.de4Humboldt-Universität zuBerlin, Inst.f.Informatik, Rudower Chaussee 25,12489 Berlin, pinkwart@hu-berlin.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 417ii“proceedings” — 2017/9/17 — 20:19 — page 418 — #418iiiiii2 Lennart Goecke, Jurik Stiller, Detlef Pechexplorativen Analyse angenähert. Dazu wurden Unterrichtssituationen hergestellt, in denender hohe Au  orderungscharakter der Materialien genutzt wird um Explorieren anzuregen.Das Material ermöglicht dabei grundsätzlich, intuitiv Algorithmen zu entwickeln und zutesten. So wurden mehrere Drittklässler_innen bei dem ersten Umgang mit Lego®WeDo 2.0und Cubelets geﬁlmt. Aus der Analyse der Daten lassen sich verschiedene Erkenntnisse zuerreichbaren Kompetenzen und notwendigen didaktischen Entscheidungen ableiten. Diesekönnen für weitere Untersuchungen sowie didaktische Situationen grundlegend sein. ErsteErgebnisse weisen u. a. auf verschiedene Typen des Zugangs zu den Materialien hin. Ein zubeobachtendes Handlungsmuster ist die (technisch im Ergebnis irrelevante) wiederholteVerwendung eines Programmblockes, um ein Lego®Gefährt schneller werden zu lassen.Der unangeleitete Umgang mit Cubelets hingegen lässt daneben Rückschlüsse auf kindli-che Verständnisweisen von ihnen unbekannten technischen Systemen zu. Aus den Datenlässt sich dabei schließen, dass es Kindern gelingen kann, durch gezielte Manipulationenbelastbare Hypothesen über Funktionen der Cubelets aufzustellen.2 AusblickBei dem Projekt handelt es sich um eine Voruntersuchung im Rahmen eines Dissertations-vorhabens. Im weitere Verlauf werden präzisere Rückschlüsse auf genuin kindliche Zugängezu algorithmischen Phänomenen erarbeitet. Hierfür lässt sich auf die ersten Ergebnisseaufbauen, indem Unterrichtssettings gezielt typische Vorstellungen berücksichtigen, umKonzeptwechsel zu ermitteln. So lassen sich etwa erreichbare Kompetenzen beschreiben undauswerten. Perspektivisch könnte dazu auch der Frage Wie hängen Algorithmusverständnisund scientiﬁc literacy zusammen? nachgegangen werden, da es sich hierbei um ein inder Sachunterrichtsdidaktik zentrales Konzept handelt und hoher Bedarf besteht, einzelneFacetten konkreter zu operationalisieren.Literatur[Is15] Israel, M.; Pearson, J. N.; Tapia, T.; Wherfel, Q. M.; Reese, G.: Supportingall learners in school-wide computational thinking: A cross-case qualitativeanalysis. Computers & Education 82/, S. 263–279, 2015.[KG14] Kalelioglu, F.; Gülbahar, Y.: The E  ects of Teaching Programming via Scratchon Problem Solving Skills: A Discussion from Learners’ Perspective. Informaticsin Education 13/, 2014.[Se11] Seraﬁni, G.: Teaching Programming at Primary Schools: Visions, Experiences,and Long-Term Research Prospects. In (Kalas, I.; Mittermeir, R. T., Hrsg.).Springer, Berlin, Heidelberg, S. 143–155, 2011.[SRV16] Sáez-López, J.; Román-González, M.; Vázquez-Cano, E.: Visual programminglanguages integrated across the curriculum in elementary school: A two yearcase study using "Scratch" in ﬁve schools. Computers & Education 97/, 2016.418 Lennart Goecke, Jurik Stiller, Detlef Pech, Niels Pinkwartii“proceedings” — 2017/9/17 — 20:19 — page 419 — #419iiiiiiKindliche Modelle der digitalen Welt  Anja Gärtig -Daugs1, Katharina Weitz1, Ute Schmid1  Abstract:  Digitale Medien prägen heutzutage unser alltägliches Leben. Diesem Einfluss sind auch Kinder ausgesetzt, selbst wenn sie selbst noch keine Medien aktiv nutze n. Die Vermutung, dass Kinder sich gedanklich mit dem Thema beschäftigen, liegt daher nahe. Der vorliegende Beitrag untersucht , über welche mentalen Modelle zur Funktionsweise digitaler Medien Kinder im Grundschulalter verfügen.  Keywords: mentale Modelle, digitale Medien, Grundschule  1  Einleitung und Motivation  Technik begegnet Kindern in einer hochkomplexen Form, die einen aktiven und verstehenden Zugang erschwert [NH13] . Kinder konzipieren jedoch vereinfachte mentale Modelle, die ihnen als Grundlage zum  Verstehen von physikalischen oder technischen Prozessen  dienen [Ge02]. Die vorliegende Studie untersucht mentale Modelle von Grundschulkindern zur Digitalen Repräsentation und zu Algorithmen.  2  Empirische Studie  und Ergebnisse  Die Untersuchung wurde im Rahmen eines Informatikprojekts2 mit den  Klassen 2 bis 4 (Alter der Kinder zwischen 7 und 10 Jahren) einer Grundschule durchgeführt . Aus der 2. Klasse wurden 15 Kinder (10 Mädchen, 5 Jungen), aus der 3. Klasse 17 Kinder (8 Mädchen, 9 Jungen) und aus der 4.  Klasse 15 Kinder (6 Mädchen, 9 Jungen) einbezogen.  Im Zentrum der empirischen Untersuchung standen  die Fragen, welche informatischen Fachbegriffe Grundschulkindern bekannt sind und ob Kinder in diesem Alter über mentale Modelle zu den Funktionsprinzipien von digitalen Medien verfügen.  Von den Schülerinnen und Schülern  wurde erfragt, ob sie die Begriffe „Pixel“, „digital“ und „Algorithmus “ kennen . Zusätzlich wurde erhoben, ob die Kinder einen Unterschied zwischen dem Sortieren bei Menschen und bei Computer n kennen . Tab. 1  gibt einen Überblick über die Anzahl der Kinder, die glaubten, den Begriff bzw. die Antwort zu kennen, sowie eine Auswahl der genannten Beschreibungen .                                                            1  Otto-Friedrich -Universität Bamberg, Fakultät Wirtschaftsinformatik und Angewandte Informatik, Forschungs gruppe Elementarinformatik, An der Weberei 5, 9604 5 Bamberg, anja.gaertig -daugs@uni -bamberg.de, katharina -blandina.weitz@stud.uni -bamberg.de, ute.schmid@uni -bamberg.de  2  http://nachwuchs.wiai.uni -bamberg.de/i4kids.html  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 419ii“proceedings” — 2017/9/17 — 20:19 — page 420 — #420iiiiiiKlasse  Beiträge  Exemplarische Beschreibung en Pixel  2 6 Comp uterbilder bestehen aus 1.000/vielen Pixeln (3x) 3 5 beim Computerspielen, da ist es häufig pixelig  wenn man Fotos auf dem Computer speichert; ist sehr klein, nicht erkennbar ; ein großes Pixel enthält 100 Minipixel  4 4 minimal kleines Viereck (2x)  Pixel sind beim Computer / Fernseher ; bei schlechtem Empfang  Digital  2 3 digital ist, wenn man Fernsehen/Handy guckt (2x)  3 2 z. B. muss man den Ton am Laptop digitalisieren  4 2 weit entfernt  / nicht live gesendet  Algorithmus  2 3 Krankheit (2x)  3 2 ein Takt / hat etwas mit einer Uhr zu tun  4 1 Krankheit  Unterschied zwischen dem Sortieren bei Menschen und bei Computern  2 7 Computer sortiert schneller /sortiert mit Kamera  3 5 Computer wissen sehr viel und vergessen es nicht (2x)  Computer kann me hr Dinge vergleichen; kann Dinge ersetzen  4 5 Computer hat Speicher (2x); Zahlen/ABC/Spiele sind gespeichert  Computer sortiert blitzschnell, sortiert nach Daten, ABC  beim Computer ist das Sortieren leichter, weil er nicht so groß ist  Tab. 1: Ergebniss e der Grundschulerhebung  zum informatischen Vorwissen von Kindern  3  Diskussion  und Ausblick  Die Ergebnisse legen nahe, dass Kinder bereits in einem sehr jungen Alter mentale Modelle zur digitalen Welt aufbauen. Die Ausdifferenz ierung und Korrektheit scheint nicht unbedingt vom kognitiven Entwicklungsstand, sondern vom Interesse der Kinder am Thema abzuhängen. Es bleibt zu untersuchen, inwieweit informatische Bildungsangebote in Vor - und Grundschule zu einer korrekten Ausdifferen zierung mentaler Modelle beitragen können.  Literaturverzeichnis  [Ge02]  Gentner, D.: Me ntal models, Psychology of. In Smelser, N; Bates, P. (Hrsg.): International Encyclopedia of the Social and Behavioral Sciences, Elsevier Science, Amsterdam, S. 9683 -9687) , 2002.  [NH13]  Niggler, A.; Holl, P.: Perspektiven naturwissenschaftlicher Bildung in Kindergarten und Grundschule. Plus Lucis, 1 -2, S. 31 -33, 2013.  420 Anja Gärtig-Daugs, Katharina Weitz, Ute Schmidii“proceedings” — 2017/9/17 — 20:19 — page 421 — #421iiiiii Lernwelten verbinden - Coding und Making mit Minecraft  Mirek Hančl1  Abstract:  Minecraft ist ein populäres, mehrspielerfähiges Videospiel. Im Bildungskontext wird Minecraft verstärkt eingesetzt, um Fachinhalte und prozessbezogene Kompetenzen gleichermaßen und zielgruppengerecht zu vermitteln. Die Automatisierung virtueller Schildkröten und das Ansteuern virtueller Logikschaltungen in der mehrspiele rfähigen Lernumgebung vermitteln  den Schülern grundlegende Kenntnisse in der Programmierung. Die Ansteuerung re aler Hardware aus Minecraft heraus verbindet die virtuelle Lernwelt der Schüler mit ihrer realen Lebenswelt und fördert in kreativer Art und Weise das Machen. Die Schüler lernen dabei im Sinne einer interaktionistisch -konstruktivistischen Didaktik und des connected learning approach.  Keywords: Connected Learning, Konstruktivismus, Minecraft, Robotik, Algorithmik, Coding, Makin g 1 Das Videospiel Minecraft  Minecraft ist ein populäres , mehrspielerfähig es Videospiel, in dem in einer dreidimensionalen Welt aus Blö cken gebaut werden kann. Es gibt kein primäres Spielziel, da Minecraft dem Genre der o pen world games zuzuordnen ist.  2 Minecraft im Bildungskontext  Minecraft wird seit einigen Jahren verstärkt im Bildungsbereich eingesetzt. Nahezu jede Verwendung von Minecr aft im Unterricht macht sich den Vorteil des Mehrspielermodus zunutze, wodurch  die gesamte Lerngruppe gemeinsam in der virtuellen Welt interagiert. Dadurch werden die didaktis ch-methodischen Möglichkeiten aus  einer realen Lernumgebung wie einem Unterrichts raum  verlagert  in die virtuelle Lernumgebung [Ha16] . Unterricht  mit Minecraft  wird idealerweise durch eine interaktionistisch -konstruktivistische Didaktik inspiriert . Diese  sieht Lernprozesse nicht nur durch die individuelle Wahrnehmung der Welt durch den Lernenden beeinflusst, sondern auch durch sein soziokulturelles Umfeld, in dem der Lernprozess stattfindet  [Re12] . Insbesondere durch den Einsatz digitaler, vernetzter Medien  in der Projekt arbeit folgt                                                            1 Universität Osnabrück,  Institut für Informatik, AG Didaktik der Informatik,  Wachsbleiche 27, 49090 Osnabrück, mirek.hancl@uni -osnabrueck.de      I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 421ii“proceedings” — 2017/9/17 — 20:19 — page 422 — #422iiiiii Coding und Making mit Minecraft einem besonderen pädag ogischen Ansatz, dem connected learning [Co15]. Denn d igitale Medien ermöglichen erst das einfache, vielfältige Produzieren, Teilen und Konsumieren multimodaler Produkte, was sich im Sinne des connected learning besonders motivierend auf Lerner auswirkt [I t13].  3 Minecraft im Kontext der informatischen Bildung  3.1 Coding mit Minecraft  Schon mit dem klassischen Spiel Minecraft lassen sich die Themen Boolesche Algebra, Wahrheitswerte und Logikgatter anschaulich vermitteln. In Minecraft ist auch ohne Erweiterung ein  Set an Eingabe - und Ausgabeelementen verfügbar, mit denen einfache bis komplexe virtuelle Schaltkreise konstruiert werden können . Durch die Erweiterung des Spiels mit ComputerCraftEdu kann Schülern Algorithmik  in motivierender Weise  vermittelt werden. Com puterCraftEdu erweitert Minecraft um virtuelle Schildkröten, die sowohl mit einer visuellen  als auch textuellen  Programmiersprache programmiert werden können  (neudeutsch: Coding) .  3.2 Making  mit Minecraft  Zeitgemäßer Informatikunterricht tut gut daran, wenn e r das aktive Tun sowohl im realen (analogen) Raum als auch in der virtuellen  Welt der digitalen Medien fordert und fördert. Er fördert kritisches Lernen dann am besten, wenn er beide Welten im Sinne eines immersiven Lernprozesses , einer erweiterten Lernwel t, miteinander verknüpft und dem Lerner die Ankn üpfungspunkte bewusst aufzeigt . In Mi necraft können Projekte zu den Themenbereichen  Informatiksysteme sowie  Infor matik, Mensch und Gesellschaft mit den Erweiterungen RealRobots und bitCraft anschaulich umgese tzt werden. Die Ansteuerung realer Hardware  wie Arduino, Lego WeDo, RaspberryPi und littleBits  aus Minecraft heraus verbindet die virtuelle Lernwelt der Schüler mit ihrer realen Lebenswelt und fördert in kreativer Art und Weise das Machen  (Neudeutsch: Maki ng). Literaturverzeichnis  [Co15]  Connected learning through Minecraft, http://www.informatics.uci.edu/connected -learning -through -minecraft/ , geprüft am 12.02.2017 . [Ha16]  Hančl, M.: Minecraft als Lernumgebung. Computer+Unterricht 102, S. 28 -30, 2016.  [It13 ] Ito, M. et al: Connected Learning . An Agenda for Research and Design . Digital Media and Learning Research Hub, Irvine, CA, 2013.  [Re12]  Reich, K. : Konstruktivistische Didaktik . Das Lehr - und Studienbuch mit Online -Methodenpool. Beltz Pädagogik , Weinheim,  Bergstr., 2012 . 422 Mirek Hanclii“proceedings” — 2017/9/17 — 20:19 — page 423 — #423iiiiii Motivierung im  Informatik unterricht: eine quantitative Online-Studie zu Planungs grundlagen von Lehrpersonen  Stefanie  Jäckel1  Abstract:  Das didaktische Prinzip Motivierung erweist sich als besonders bedeutsam, weil  moti-vierte und interessierte Schülerin nen und Schüler leichter lernen [Br12] . Da Erkenntnisse über Aus-wahlfaktoren der Lehrpersonen für eine bestimmte Motivierung und die zur Entwicklung von Mo-tivierungen benutzten Informationsquellen und Materialien ein Desiderat informatikdidaktischer Forschung sind , widmet sich die vorliegende Studie diesem Untersuchungsgegenstand . Keywords: Motivie rung, Informatikunterricht, Unterrichtseinstieg , Lehrerhandeln  1 Design der Erhebung  und Beschreibung der Stichprobe  Mit Hilfe von Mehrfachauswahl -Fragetypen mit Ergänzungsmöglichkeit wurden sowohl Entscheidungsgrundlagen der Lehrpersonen als auch verwendete  Quellen und Materialien erfasst.2 Die in den Fragen vorgegebenen Items wurden aus einer explorativen Studie [Jä15], th eoretischen Modellen [Ke10 ] und von der Autorin zum Thema durchgeführten Workshops abgeleitet. An der Studie beteiligten sich  von 06 bis 09/2016 156 Informatik-lehrkräfte aus Deutschland , Österreich und der Sch weiz. Die Fachlehrerinnen (37,4 %) und -lehrer (62,6 %) unterrichten schwerpunktmäßig  in der Sekundarstufe II (54,2 %). Die häufigsten (kombinierten) Studienfächer sind Informatik (m:  71,4%, w:  69,2%); Mathe-matik (m:  65,3%, w:  67,3%) und Physik (m: 33,7%, w: 23,1%).  Bezüglich der Unter-richtserfahrung (inklusive Referendariat) ist die Zusammensetzung der Stichprobe sehr gemischt, woraus eine  gewisse  Repräsentativität hinsichtlich  der Zusammensetzung der Grundgesamtheit geschlussfolgert werden kann.  Die Art der Durchführung der Untersu-chung setzt bei den Lehrkräften Professions - und Reflexionswissen über ihr Lehrerhan-deln voraus.  2 Für Motivierungen benutzte Quellen und Materialien   Die teilnehmende Lehrerschaft benutzt für die Konzeption ihrer motivierenden Unter-richtseinstiege am häufigsten das Internet (n=123) als In formations - und Material quelle, gefolgt von selbst entwickelte n Mate rialien (n=106) sowie Ideen/ Konzepte n aus Fortbil-                                                           1 Friedrich -Schiller -Universität Jena , Fakultät für Mathematik und Informatik , Ernst -Abbe -Platz 2, 07743 Jena, stefanie.jaeckel @uni -jena.de  2 Detaillierte Untersuchungergebnisse unter : http:// www.informatikideen.de/motivierung .html  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 423ii“proceedings” — 2017/9/17 — 20:19 — page 424 — #424iiiiii dungsveranstaltungen (n=86) . Gruppiert  man die Items , kann  gezeigt w erden, dass Lehr-kräfte mit 47,6 % im Mittel am häufigsten durch Erfahrungswerte (eigene Materialien, Ideen /Konzepte  aus Fortbildungen, Tipps von Kollegen, an der Schule verfügbare Mate-rialien) zu ihren Mot ivierungen gelangen. Außerdem sind Medien allgemein (Internet, Software, Tageszeitungen/Zeitschriften) mit 35,5% für die Ideenfindung der Lehrkräfte noch ausschlaggebender als (fach) wissenschaftliche Forschung ( Informatikfachbücher und -zeitschriften, didaktische Literatur, pädagogische Literatur ). Je nach Unterrichtser-fahrung der Teilnehmer veränder n sich auch  Planungsgewohnheiten:  so benutzen Lehr-kräfte  mit über 15 Jahren Lehrtätigkeit  auch beim Motivieren an erster Stelle ihre eigenen Materialien, was vermu ten lässt, dass sich Lehrkräfte  ein Repertoire  an Motivierungen zulegen, da s sie in der Praxis testen,  erweitern  und regelmäßig nutzen . 3 Entscheidungsgrundlagen für motivierende Einstiege  Die meisten Lehrpersonen geben an, dass sie bei  Entscheidungen für oder gegen einen motivierenden Einstieg vor allem Problemstellungen aus der Lebenswelt (57,4% ) sowie Interessen der Schüler einbeziehen (50,3%) und sich an Informatikanwendungen im All-tag (51, 0%) sowie dem Vorwissen d er Schüler (44,5%) orientieren.  Die männlichen Teilnehmer berücksichtigen bei der Entscheidung für eine Motivierung stärker als die Frauen eigene fachliche Interes sengebiete (m: 36,7%, w: 20,7%) und  aktu-elle Ereignisse (m: 35,7%, w: 25,9%) . Lehre rinnen orientieren sich stär ker an räumlichen Gegebenheiten (m: 10,2%, w: 24,1%), der Vernetzung zu anderen Unterrichtsin halten (m: 26,5%, w: 34,5%) und  Informatikanwendungen im Alltag (m: 48,0%, w: 55,2%).  Um zu untersuchen, welche Grundlage n die Entscheidung für eine Moti vierung am stärks-ten beeinflussen,  wurden die  Items den Faktoren Schüler , Fach Informatik  und Organisa-torischem  zugeordnet. Bei der Entscheidung für einen motivierenden Einstieg richten sich Informatiklehrkräfte am meisten nach ihren Schülern  (45,3% ). Danach berücksichtigen sie fachliche Eigenheiten (30,7%) und organisatorische Gegebenheiten  (23,1% ). 4 Literaturverzeichnis  [Br12]  Brohm, M.:  Motivation lernen. Das Trainingsprogramm für die Schule. Beltz, Weinheim, 2012.  [Jä15]  Jäckel, S.:  Schüler für Fachthemen interessieren und motivieren - Informa-tikunterricht im Fokus Informatik un d Schule,  In (Jens Gallenbacher Hrsg.):  Informatik allgemeinb ildend begreifen, INFOS 2015 , Darmstadt, Germany. GI, 2015; S. 171 –180. [Ke10]  Keller, J. M.:  Motivational design for lea rning and performance. The ARCS model approach. Springer, New York, London, 2010 . 424 Stefanie Jäckelii“proceedings” — 2017/9/17 — 20:19 — page 425 — #425iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 1Entwicklung eines Online-Tools zur Bestimmungobjektorientierter ProgrammierkompetenzenMatthias Kramer1, Vahid Samimi2und Torsten Brinda3Abstract: Basierend auf einem theoretisch hergeleiteten Kompetenzmodell f ¨ur objektorientierteProgrammierung wird ein Prototyp eines Messwerkzeuges zur empirischen Bestimmung solcherKompetenzen vorgestellt. Erste Tests existieren bereits, zuk ¨unftige Tests werden skizziert.Keywords: Objektorientierung, Kompetenzmessung, Messinstrument.1 Einleitung und HintergrundBedingt durch die Ergebnisse internationaler Vergleichsstudien [MN13] sind die normati-ve Bestimmung und empirische ¨Uberpr ¨ufung von Kompetenzen Themen, denen sich dieForschung im Bereich der Erziehungswissenschaft und Psychologie in den letzten Jahrenausgiebig gewidmet hat [BGS15]. Im Bereich der objektorientierten Programmierung fo-kussiert sich das Projekt COMMOOP auf die Identiﬁkation ebensolcher Kompetenzen. Indessen Rahmen entsteht zurzeit ein Instrument, welches sich sowohl f ¨ur Vergleichsstudiengroßer Kohorten als auch f ¨ur individualdiagnostische Zwecke eignen wird.Basierend auf g ¨angigen Deﬁnitionen des Begriffs Kompetenz , siehe [Kl08], werden Kom-petenzen im Bereich der objektorientierten Programmierung in diesem Zusammenhangals dom ¨anenspeziﬁsche kognitive und metakognitive F ¨ahigkeiten und Fertigkeiten ver-standen, die Individuen in die Lage versetzen, Probleme im Bereich der objektorientiertenProgrammierung zu l ¨osen. Im Projekt COMMOOP ist im Rahmen einer intensiven Li-teraturrecherche dabei ein vierdimensionales Kompetenzmodell f ¨ur objektorientierte Pro-grammierung entstanden [KHB16], Testitems wurden auf dessen Basis beispielhaft ab-geleitet [KTB16a] und ein erster Subskalentest mit zw ¨olf Items erstellt [KTB16b]. DieDurchf ¨uhrung mittels Stift und Papier hat sich dabei jedoch bzgl. Auswertbarkeit und Er-reichbarkeit von Testpersonen als nachteilig erwiesen. Daher wurde damit begonnen, eineelektronische Version des Testinstrumentes zu erstellen, die im weiteren Verlauf des Pro-jektes sowohl zum summativen als auch zum formativen Assessment genutzt werden soll.1Universit ¨at Duisburg-Essen, Didaktik der Informatik, Sch ¨utzenbahn 70, 45127 Essen,matthias.kramer@uni-due.de2Universit ¨at Duisburg-Essen, Didaktik der Informatik, Sch ¨utzenbahn 70, 45127 Essen,vahid.samimi@stud.uni-due.de3Universit ¨at Duisburg-Essen, Didaktik der Informatik, Sch ¨utzenbahn 70, 45127 Essen,torsten.brinda@uni-due.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 425ii“proceedings” — 2017/9/17 — 20:19 — page 426 — #426iiiiii2 Matthias Kramer, Vahid Samimi und Torsten Brinda2 Implementierung, bisheriger Stand und AusblickUm eine Installation des Messwerkzeugs auf Schulrechnern zu vermeiden, ﬁel die Ent-scheidung auf eine skriptbasierte Webimplementierung. Nach Besuchen eines entspre-chenden Links werden die Probanden schrittweise durch die einzelnen Tests gef ¨uhrt. ZuBeginn geben sie entsprechende soziodemographische Daten ein (Alter, Geschlecht, Vor-erfahrungen etc.), welche am Ende mit der erhobenen Leistung korreliert werden. Diesewerden ¨uber eine HTTPS-Verbindung weitergeleitet und in einer Datenbank auf Servernder Universit ¨at Duisburg-Essen abgelegt. Anschließend werden die Testpersonen gebeten,die angezeigten Aufgaben nacheinander zu bearbeiten. Zeitgleich zur Bearbeitung werdenden bisherigen Ergebnissen Skalenwerte der vorher postulierten Kompetenzdimensionenzugeordnet. Am Ende erhalten die Testpersonen eine individuelle ¨Ubersicht ¨uber St ¨arkenund Schw ¨achen in den einzelnen Kompetenzdimensionen.Basierend auf dem vorher genannten Kompetenzmodell werden momentan schrittwei-se Tests entwickelt, die sich jeweils einzelnen Kompetenzfacetten zuordnen lassen. Esexistieren Implementierungen f ¨ur das Markieren objektorientierter Konzepte in Quell-texten sowie f ¨ur das Interpretieren von Quelltexten in Abh ¨angigkeit von der Leistungdes Arbeitsged ¨achtnisses. Diese wurden im Vorfeld bereits pilotiert. Im weiteren Ver-lauf werden diese schrittweise verbessert. Weitere Tests werden bspw. die F ¨ahigkeitendes mentalen Ausf ¨uhrens von Quellcode (Tracing), des l ¨uckenweisen Auff ¨ullens einzel-ner Schl ¨usselw ¨orter sowie des vollst ¨andigen Erg ¨anzens gr ¨oßerer Quelltextfragmente um-fassen.Literaturverzeichnis[BGS15] Bl ¨omeke, Sigrid; Gustafsson, Jan-Eric; Shavelson, Richard J: Beyond dichotomies. Zeit-schrift f ¨ur Psychologie, 2015.[KHB16] Kramer, Matthias; Hubwieser, Peter; Brinda, Torsten: A Competency Structure Modelof Object-Oriented Programming. In: Learning and Teaching in Computing and Engi-neering (LaTICE), 2016 International Conference on. IEEE, S. 1–8, 2016.[Kl08] Klieme, Eckhard; Hartig, Johannes; Rauch, Dominique; Hartig, J; Klieme, E; Leutner,D: The concept of competence in educational contexts. Assessment of competencies ineducational contexts, S. 3–22, 2008.[KTB16a] Kramer, Matthias; Tobinski, David A.; Brinda, Torsten: Modelling Competency in theField of OOP: From Investigating Computer Science Curricula to Developing Test Items.In: Stakeholders and Information Technology in Education. International Federation forInformation Processing, Springer, S. 37–46, 2016.[KTB16b] Kramer, Matthias; Tobinski, David A.; Brinda, Torsten: On the Way to a Test Instru-ment for Object-oriented Programming Competencies. In: Proceedings of the 16th KoliCalling International Conference on Computing Education Research. Koli Calling ’16,ACM, New York, NY, USA, S. 145–149, 2016.[MN13] Martens, Kerstin; Niemann, Dennis: When do numbers count? The differential impactof the PISA rating and ranking on education policy in Germany and the US. GermanPolitics, 22(3):314–332, 2013.426 Matthias Kramer, Vahid Samimi, Torsten Brindaii“proceedings” — 2017/9/17 — 20:19 — page 427 — #427iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017    15 Der Biber der Informatik in Österreich - Anmerkungen und Perspektiven  Peter Micheuz1, Gerald Futschek2    Keywords: Informatik, Biber der Informatik, Wettbewerb, Statistiken, Aufgaben.  Der „Biber der Informatik“-Bewerb [DS16] fand 2016 in Österreich zum 10. Mal statt und wurde von der Österreichischen Computergesellschaft organisiert [OCG16]. Die bei diesem Online-Bewerb generierten administrativen und aufgabenbezogenen Daten lieferten aufschlussreiche Ergebnisse.  Abb. 1: Schulstufen- und schultypenspezifische Übersicht   Abb. 2: Prozentuelle Lösungshäufigkeiten und korrespondierende absolute Teilnehmerzahlen    Beispielsweise zeigte sich auch auch 2016 wieder eine sehr heterogene quantitative Verteilung der „Biber der Informatik“-Teilnahme auf die österreichischen Schultypen Grundschule (VS), Sekundarstufe I und II (AHS, NMS, BHS), Schulen und Jahrgänge (Abb. 1). Mit diesem Wissen ist eine zielgerichtete Bewerbung in den kommenden Jahren möglich. Die ermittelten Lösungshäufigkeiten bei den Aufgaben legen den Schluss nahe, dass die Aufgaben im Schnitt schwierig waren (Abb. 2).                                                              1 Alpen-Adria-Universität Klagenfurt, Institut für Informatikdidaktik, Universitätsstraße 65-67, 9020 Klagenfurt , peter.micheuz@aau.at 2 Technische Universität Wien, Institut für Softwaretechnik und Interaktive Systeme, Favoritenstraße 9/188, 1040 Wien, gerald.futschek@tuwien.ac.at I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 427ii“proceedings” — 2017/9/17 — 20:19 — page 428 — #428iiiiii16    Vorname1 Nachname1 und Vorname2 Nachname2   Das Biber-Jubiläumsjahr 2016 wurde auch durch empirische Umfragen begleitet. Eine davon war an die Biber-Organisatoren an den Schulen gerichtet und lieferte interessante Aufschlüsse im Hinblick auf Aufgabenstellungen, Organisation, Durchführung und Verbesserungswünsche. Dabei zeigte es sich unter anderem, dass  • über 70% bereits dreimal oder öfter den Informatikbiber organisiert haben,  • in ca. 1/3 der Schulen der Biber der Informatik auch in Klassen ohne formellen Informatikunterricht angeboten wurde, • die niederländische Wettbewerbsplattform zu über 90% technisch gut funktio-niert hat und es auch kaum technische Probleme (weniger als 10%) an der Schule gab, • die Biber-Aufgaben 2016 zu über 90% als gut befunden wurden, • ca. 30% die Aufgaben im Schnitt als zu schwierig empfanden und sich die Hälfte im Schnitt leichtere Aufgaben wünschen.  Die Entwicklungsperspektiven für den Biber der Informatik sind mannigfaltig. Der große Fundus an öffentlich zugänglichen Biber-Aufgaben, die Daten im Rahmen der Biber-Organisation an den Schulen und die Ergebnisse stellen gute Ausgangspunkte für viele Unterrichtsszenarien dar. Diese decken das breite Spektrum Digitaler Bildung von der Kerninformatik über Anwendungsorientierung bis hin zur Computer Literacy ab.  Der Aussage „Ich habe schulbezogene Ergebnisdaten nach dem Biber-Bewerb im Unterricht auswerten lassen“ wurde von einem Viertel der organisierenden Lehrkräfte zugestimmt. Abb. 3 zeigt zwei diesbezügliche konkrete Auswertungen von Schülern.    Abb. 3: Schülerarbeiten (Rangliste, Visualisierung zweier Klassenergebnisse)  Der Zugriff auf den Biber-Datenbestand (sowohl auf Schulebene als auch anonymisiert  auf nationaler Ebene z.B. im Rahmen der Open Data Initiative) eröffnet ein weites praktisches und didaktisches Betätigungsfeld für viele Spielarten von Anwendersoftware. Literaturverzeichnis [DS16] Dagiene, V.; Sentance, S.: It’s Computational Thinking! Bebras Tasks in the Curriculum. In International Conference on Informatics in Schools: Situation, Evolution, and Perspectives, Springer International Publishing, S. 28-39, 2016. [OCG16] OCG, Österreichische Computergesellschaft, www.ocg.at/de/biber-der-informatik, Stand: 10.2.2017. 428 Peter Micheuz, Gerald Futschekii“proceedings” — 2017/9/17 — 20:19 — page 429 — #429iiiiii-Ira Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 11„Informatik im Unterricht – So geht’s“ – Informatik imPrimarbereichMartin Fricke, Kathrin Haselmeier, Ludger Humbert, Dorothee Müller, Daniel Siebrecht1Abstract: An Beispielen wird veranschaulicht, wie die Verzahnung von Prozess- und Inhaltsbereichender Bildungsstandards Informatik für Schülerinnen und Schüler des Primarbereichs gestaltet wird.Keywords: Informatik im Primarbereich, Grundschule, informatische Bildung, Bildungsstandards1 Informatik im PrimarbereichFür zwei aktuelle Projekten zur informatischen Bildung im Primarbereich ist die Kompe-tenzebene eine zentrale Analyse- und Konstruktionsebene der angestrebten informatischenBildung. In der Informatikdidaktik hat sich die Strukturierung der Bildungsstandards durchje fünf Prozess- und Inhaltsbereiche, die in den konkreten Kompetenzen verwoben sind,durchgesetzt. Dies wird in beiden Projekten für den Primarbereich adaptiert.Arbeitskreis „Bildungsstandards Primarbereich“ (   Primar) –   Der  Primar des Fachausschusses Informatische Bildung in Schulen (        ) der   erarbeitet Bildungsstandards Informatik für den Primarbereich [GI17]. Damit werdendie Anforderungen für informatische Allgemeinbildung für Schülerinnen und Schüler imPrimarbereich auf Kompetenzebene ausgewiesen.Projekt Informatik an Grundschulen (IaG) – Nordrhein-WestfalenIaG [MS17] ist ein Pilotprojekt zur Erprobung von Konzepten zur Förderung der infor-matischen Bildung an Grundschulen. Es wird in Kooperation der jeweiligen FachdidaktikInformatik der drei universitären Standorte RWTH Aachen , Universität Paderborn und Ber-gische Universität Wuppertal mit dem Schulministerium Nordrhein-Westfalen durchgeführt.An jedem Standort arbeiten zwei Grundschullehrkräfte. Gemeinsam mit den Fachdidaktikenerarbeiten sie themenspeziﬁsche Module (Unterrichtseinheiten), die den Schülerinnen undSchülern einen Einblick in die Informatik ermöglichen und sie bei der Entwicklung einesgrundlegenden Verständnisses von zentralen Gegenständen der Informatik unterstützen.1Grundschule Stübchen Solingen, O  ene Ganztagsschule Liegnitzerstr. Wuppertal, Bergische UniversitätWuppertal, Didaktik der Informatik – {mfricke,khaselmeier,humbert,dmueller,siebrecht}@uni-wuppertal.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 429ii“proceedings” — 2017/9/17 — 20:19 — page 430 — #430iiiiii12 Martin Fricke, Kathrin Haselmeier, Ludger Humbert, Dorothee Müller, Daniel Siebrecht2 Verzahnung von Prozess- und InhaltsbereichenInformatik im Primarbereich steht derzeit in den Anfängen der theoretischen und prakti-schen Umsetzung. Insbesondere ist Informatik derzeit kein verpﬂichtendes Element derLehrerbildung. Damit fehlt sowohl die informatische Expertise in der Grundschule wie auchdie Grundschulexpertise in der Informatik. Die Einbeziehung von Grundschullehrkräften indie Ausarbeitung der Bildungsstandards und die Vermittlung informatischer Grundlagenfür Grundschullkräfte sind zwei Seiten der selben Medaille. Der   Primar trägt dieserVerknüpfung Rechnung, dort wird gemeinsam fachwissenschaftlich und grundschuldidak-tisch diskutiert. Parallel erschließen im Projekt IaG Grundschullehrkräfte grundlegendeAspekte der Informatik und entwickeln Ideen für die Umsetzung in der Grundschule. Ausdiesen Arbeitsprozessen resultiert die Aufarbeitung der Prozess- und Inhaltsbereiche derInformatik in eine übersichtliche Darstellung für Lehrkräfte in der Primarstufe [Fr16].Aus der Verbindung der Prozess- und Inhaltsbereiche entsteht die Kompetenzebene. Die Zu-ordnung erfolgt nicht in einer Eins-zu-eins-Zuordnung, damit die Fehlvorstellung vermiedenwird, dass nur eine Kompetenz je Prozess- oder Inhaltsbereich konstruiert werden kann. Umzudem zu verdeutlichen, dass sich nicht in jeder der Kompetenzen genau ein Prozess- undein Inhaltsbereich verbinden, wurden auch Kompetenzen gewählt, denen mehrere Bereichezuzuordnen sind. Die Schülerinnen und Schüler erfahren die informatische Modellierung(inklusive der Implementierung), indem sie beispielsweise gemeinsam eine Steuerung füreinen Roboter entwickeln. Der Inhaltsbezug ist dabei der Bereich Information und Daten.Die Vielfalt der Möglichkeiten zur Verzahnung lässt den zukünftigen Lehrkräften denbenötigten Gestaltungsspielraum, um Kompetenzen in ihrem Unterricht anzubahnen und zuerreichen. Gleichzeitig werden die Prozess- und Inhaltsbereiche knapp dargestellt und mitBeispielen veranschaulicht, um den Zugang zu diesem – für die Lehrkräfte an Grundschulenmeist völlig fremden – Lerngegenstand zu ermöglichen.Literatur[Fr16] Fricke, M.; Haselmeier, K.; Humbert, L.; Müller, D.; Rumm, P.: Informatik imUnterricht – So geht’s, Plakatgraﬁk zu Informatik an Grundschulen, Wuppertal,2016,    :http://metager.to/0t0xl , Stand: 16. 08. 2017.[GI17] GI: Grundsätze und Standards für die Informatik in der Schule – BildungsstandardsInformatik für den Primarbereich, Erarbeitet vom Arbeitskreis „BildungsstandardsInformatik im Primarbereich“ –   – Gesellschaft für Informatik (GI) e. V., 18. Juli2017,    :http://metager.to/gibsppdf , Stand: 16. 08. 2017.[MS17] MSB NRW, Hrsg.: Informatik an Grundschulen, Pilotprojekt zur Erprobungvon Konzepten zur informatischen Bildung im Rahmen des Sachunterrichts anGrundschulen, MSB NRW – Ministerium für Schule und Bildung des LandesNordrhein-Westfalen, Juli 2017,    :http://IaG.nrw.de/ , Stand: 16. 08. 2017.430 Martin Fricke et al.ii“proceedings” — 2017/9/17 — 20:19 — page 431 — #431iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 1Jugendwettbewerb Informatik: BWINF f ¨ullt die L ¨uckeWolfgang Pohl, Robert Czechowski1Abstract: Durch Einf ¨uhrung des Jugendwettbewerbs Informatik (JwInf) mit begleitenden Lernan-geboten zu Informatik-Grundlagen und Programmierung schließen die Bundesweiten Informatik-wettbewerbe (BWINF) die L ¨ucke zwischen Informatik-Biber und Bundeswettbewerb Informatik.Keywords: Informatikwettbewerbe, Sch ¨ulerwettbewerbe, Talentf ¨orderungDas Projekt”Bundesweite Informatikwettbewerbe“ (BWINF) soll im Sinne der Vereini-gung von Breiten- und Spitzenf ¨orderung pyramidal organisiert sein [Poh16], mit Wettbe-werbsformaten, die einerseits aufeinander aufbauen, deren (potenzieller) Teilnahmekreissich andererseits durch steigende fachliche Anforderungen nach und nach verkleinert. Bis2016 gab es drei Stufen in dieser Wettbewerbspyramide:• Auf der Eingangsstufe steht der Informatik-Biber [PSH09]. Dieses Online-Formatwird seit 2007 j ¨ahrlich angeboten, bis 2015 f ¨ur die Sekundarstufe und seit 2016auch f ¨ur die Primarstufe (Jahrgangsstufen 3 und 4). In diesem Format k ¨onnen Teil-nehmende ihre Neigung f ¨ur das”digitale Denken“ (engl.: computational thinking)der Informatik entdecken und werden motiviert, sich n ¨aher mit der Disziplin aus-einanderzusetzen. Am Informatik-Biber nahmen im Jahr 2016 in Deutschland ¨uber290.000 Kinder und Jugendliche teil.• Die zentrale Stufe bildet der Bundeswettbewerb Informatik (BwInf) [Poh06]. 1980gegr¨undet, wird er seit 1984 j ¨ahrlich als Aufgabenwettbewerb durchgef ¨uhrt. EinErfolg in diesem Leistungswettbewerb setzt erste Fachkenntnisse wie Wissen ¨ubergrundlegende algorithmische Prinzipien und erste Programmierfertigkeiten voraus.Neben der fachlichen Vertiefung tr ¨agt der BwInf dazu bei, Jugendliche mit beson-derem Potenzial zu erkennen, und erm ¨oglicht den Teilnehmenden, ihre Begabungauszuloten.• Die besten Teilnehmenden des BwInf haben schließlich die Chance, sich ¨uber einAuswahlverfahren f ¨ur das deutsche Team bei der Internationalen Informatikolym-piade (IOI) zu qualiﬁzieren. Diese dritte Wettbewerbsstufe f ¨ordert Jugendliche mitaußerordentlichem Potenzial und vermittelt Fachkenntnisse auf Hochschulniveau.Dieser Aufbau weist aber noch eine deutliche L ¨ucke auf. Eine Teilnahme am Informatik-Biber ist ohne Fachkenntnisse und mit wenig Aufwand m ¨oglich. Wird durch die Biber-Teilnahme das Interesse an Informatik erfolgreich geweckt, m ¨ussen zur Teilnahme amBwInf erste Fachkenntnisse erworben werden; in der Schulbildung werden diese in der1BWINF (Bundesweite Informatikwettbewerbe), Reuterstr. 159, 53113 Bonn, {pohl|czechowski }@bwinf.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 431ii“proceedings” — 2017/9/17 — 20:19 — page 432 — #432iiiiiiAbb. 1: Die”BWINF-Wettbewerbskarriere“Regel erst in der Sekundarstufe 2 vermittelt. Außerdem ist die BwInf-Teilnahme mit ho-hem Aufwand verbunden. Um Biber-TeilnehmerInnen eine fr ¨uhere und weniger arbeits-reiche Wettbewerbsteilnahme zu erm ¨oglichen, f ¨uhrt BWINF ab 2017 ein neues Wettbe-werbsangebot ein: den Jugendwettbewerb Informatik (JwInf). In der ersten Runde wird dieTeilnahme in einer Online-Plattform realisiert; zu l ¨osen sind in Mikrowelten eingebetteteProbleme, in der Regel durch graﬁsche Programmierung mit kontextbezogener Semantik.In der zweiten Runde sollen dann Aufgaben wie im BwInf zu Hause bearbeitet werden,mit Hilfe frei w ¨ahlbarer Werkzeuge.Auch hierzu sind allerdings erste fachliche Kompetenzen n ¨otig oder zumindest hilfreich.Deshalb werden im Kontext des JwInf passende Lernangebote gemacht: etwa der seiteinigen Jahren erfolgreich erprobte Online-Programmierkurs CS Circles2oder der Kurs”Grundlagen der Informatik“ von code.org3, an dessen Lokalisierung sich BWINF betei-ligt hat. Mit dem neuen Wettbewerbsformat und den begleitenden Lernangeboten wird esm¨oglich, die BWINF-Wettbewerbsformate fast nahtlos zu durchlaufen (vgl. Abb. 1).Es wird zu beobachten sein, wie gut der L ¨uckenschluss zwischen Informatik-Biber undBundeswettbewerb Informatik gelingt. Wesentliches Maß f ¨ur den Erfolg wird die Reso-nanz auf die neuen Angebote und mittelfristig auch die Entwicklung der Teilnahme amBundeswettbewerb Informatik sein.Literatur[Poh06] Wolfgang Pohl. Wettbewerb im Silberglanz. LOG IN , 26(141/142):10–13, 2006.[Poh16] Wolfgang Pohl. BWINF: Informatik mit Begeisterung entdecken. In Heinrich C. Mayr,Martin Pinzger (Hrsg.): INFORMATIK 2016 , Seiten 1149–1152, Bonn, 2016. Gesellschaftf¨ur Informatik.[PSH09] Wolfgang Pohl, Kirsten Schl ¨uter und Hans-Werner Hein. Informatik-Biber: Informatik-Einstieg und mehr. In Bernhard Koerber, Hrsg., Zukunft braucht Herkunft: 25 Jahre IN-FOS – Informatik und Schule , Seiten 38–49, Bonn, 2009. Gesellschaft f ¨ur Informatik.2cscircles.cemc.uwaterloo.ca/de3studio.code.org/s/20-hour432 Wolfgang Pohl, Robert Czechowskiii“proceedings” — 2017/9/17 — 20:19 — page 433 — #433iiiiiiZur Berechnung  der Komplexität von einfachen objektorientierten Programmen  Marc Roßner1 Abstract:  Das Komplexitätsmaß nach Peter Rechenberg lässt sich auf einfache objektorientierte Programme übertragen. Solche Programme sind Gegenstand des Informatik -Unte rrichts . Dies stellt eine Grundlage dafür dar, unterschiedliche Programme zu einer Aufgabe zu vergleichen.  Keywords: Komplexitätsmaß, Objektorientierung, Abituraufgaben  1 Übertragen der Software -Metrik von Rechenberg auf einfache objektorientierte Programme  und C++  Unter  einfachen objektorientie rten Programmen sollen in dieser  Arbeit  solche Program -me verstanden werden, die sich ausschließlich auf die Grundkonzepte Objekt und Klasse beziehen. Diese Konzepte bieten die Möglichkeit des strukturierten Aufbaus vo n Softwareprojekten. Man kann Teillösungen in Klassen auslagern und diese in einem Hauptprogramm zur Gesamtlösung vereinen. Bei diesem Vorgehen kann die Implemen -tierung der Methoden als quasi -prozedural angesehen werden; die Methoden können in der Softwar e-Metrik wie gewöhnliche Prozeduren behandelt  werden.  Für das Berechnen der Anweisungs - und der Ausdruckskomplexität können die Regelungen aus [Re86] unmittelbar übernommen werden. Das Berechnen der  Datenkomplexität kann bei den Methoden so erfolgen, wie e s bei Rechenberg für die  modulare Programmierung beschrieben ist . Bei der Datenkomplexität werden Namen in Modulen  als lokal  und erst bei deren Verwendung im Hauptprogramm als global  bewertet. Sollten Module ineinander geschachtelt sein, greift die Bewert ung mit der Blocktiefendifferenz . Für Attribute soll gelten , dass sie im Sinne gekapselte r Zustandsdate n, auf die alle oder fast alle Methoden der Klasse zugreifen, als global  bewertet werden  – unabhängig davon, ob innerhalb der Implementierung der Klasse oder im Hauptprogramm.   2 Analysieren der A ufgabe „Plumpsack“  Das Spiel „Plumpsack“ [Ab08] ist mithilfe einer Ringliste zu realisieren. Die Ringliste wird per Array implementiert. In Tabelle 1  sind die Bewertungen der vollständigen  prozedural en und objektori entierten Programme zum Spiel „Plumpsack“ angegeben .                                                            1 Friedrich -Schiller -Universität Jena, Fakultät für Mathematik und Informatik, Ernst -Abbe -Platz 2, 07743 Jena, marc.rossner @uni -jena.de  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 433ii“proceedings” — 2017/9/17 — 20:19 — page 434 — #434iiiiii prozedural  objektorientiert  Anweisungskomplexität  121.75  112.75  Ausdruckskomplexität  118 110 Datenkomplexität  122 136 Gesamtkomplexität  361.75  358.75  Tab. 1: Bewertung von Programmen zur Aufgabe „P lumpsack“.  Die Gesamtkomplexitäten der erarbeiteten Programme sind praktisch gleich. Daraus  lässt sich ableiten, dass man es in der Abiturprüfung dem Pr üfungsteilnehmer überlassen kann, ob er eine Aufgabe prozedural ode r objektorientiert löst (bei Beschrän kung auf die Grundkonzepte Klasse und Objek t). 3 Analysieren der A ufgabe „Liste“  Eine einfach verkettete L iste ist mit Hilfe eines Arrays  zu realisieren [Ab07].  In Tabelle 2 sind die Bewertungen von drei  unterschiedlichen Lösungsmöglichkeiten der Aufgabe angegeben .  Zwei 1D -Arrays  Ein 2D-string -Array  Ein 1D -struct -Array  Anweisungskomplexität  339.5  377 338.5  Ausdruckskomplexität  200 258 221.5  Datenkomplexität  308 312 361 Gesamtkomplexität  847.5  947 921 Tab. 2: Bewertung von drei Musterlösungen zur Aufgabe  „Liste“. Wenn man dem Prüfungsteilnehmer die konkrete Realisierung der Datenstruktur überlässt , muss man damit rechnen, dass sich die Gesamtkomplexitäten der entwickelten Programme in der Größenordnung 10% voneinander unterscheiden. Diese Größenordnung er scheint auch in einer Abiturprüfung vertretbar.  Nachdenklich stimmt der Unterschied in den Gesamtkomplexität en von Programmen zu den beiden Abituraufgaben , obwohl mit beiden Aufgaben die gleiche Anzahl von Bewertungseinheiten erreichbar war (jeweils 30 BE v on 60 BE für die gesamte Abiturpüfung).  Literaturverzeichnis  [Ab07] Freistaat Thüringen: Abiturprüfung 2007 Leistungsfach Informatik (Haupttermin) . [Ab08 ] Freistaat Thüringen: Abiturprüfung 2008 Leistungsfach Informatik (Haupttermin) . [Re86]  Rechenberg, P eter: Ein neues Maß für die softwaretechnische Komplexität von Programmen. In: Informatik Forschung und Entwicklung (1986) 1: 26 -37. 434 Marc Roßnerii“proceedings” — 2017/9/17 — 20:19 — page 435 — #435iiiiiiWie stellen sich S chülerinnen und Schüler  informatische Konzepte vor und welche sprachlichen Bilder nutzen sie?  Arne Saathoff1 Abstract:  Viele Jugendliche wissen nicht, wie grundlegende Technologien der Informatik bzw. bestimmte informatische Konzepte funk tionieren. Die Kompetenzen jüngerer SuS2 beschränken sich oftmals auf das Benutzen bestimmter Hard - und Softwares, wodurch sie lediglich Produktwissen erlangen. Erstrebenswerter ist es aber, den SuS ebenfalls Konzeptwissen zu vermitteln, damit sie in der L age sind, Gelerntes in einen größeren Zusammenhang einzuordnen und früher erworbene Kompetenzen auf neue Situationen anzuwenden. In dieser Untersuchung werden Interviews mit SuS analysiert, um Kenntnisse darüber zu erlangen, wie sich SuS informatische Inha lte erschließen und welche Formen des Relational Reasoning dabei von ihnen genutzt werden.  Keywords: Relational Reasoning, Analogie, Anomalie, Antinomie, Antithese, Metapher  1 Einleitung  In der durchgeführten Studie sollen die Vorkenntnisse und Vorstellungen  von SuS bezüglich informatischer Sachverhalte, die insbesondere alltägliche Aktivitäten im Internet betreffen, untersucht werden. Das Erkenntnisinteresse liegt darin, die von SuS verwendeten Formen des Relational Reasoning zu ermitteln, damit Rückschlüsse  auf den Gebrauch von sprachlichen Konstrukten, wie Vergleiche mit bereits bekannten Sachverhalten oder die konkrete Abgrenzung von unzutreffenden Ko nzepten, gezogen werden können . Jablansky, Alexander, Dumas und Compton [JADC15] hypothetisierten im Jahr 2 015, dass die Analyse technologischer Objekte, vor allem solcher , die neuartig und unbekannt sind, Kindern und Jugendlichen die Möglichkeit bietet, vergleichend zu begründen („to reason relationally“ [JADC15], p. 3). Ein Teil des Ergebnisses war die Erkenn tnis, dass alle befragten SuS in irgendeiner Form das Relational Reasoning anwenden, wobei die Analogie die am häufigsten auftretende Form war. Analogien zeichnen sich durch das Heranziehen von Vergleichen aus. Gerade deshalb können sie genutzt werden, um komplexe Sachverhalte mithilfe von analogen Sprachbildern (Metaphern) zu verdeutlichen. Besonderes Augenmerk liegt daher auf der Frage, welche Rolle Metaphern dabei spielen könnten, informatische Inhalte zu versinnbildlichen. Somit dient diese Ausarbeitung  einerseits der Forschung im Bereich der Didaktik der Informatik, andererseits soll sie Lehrkräften einen Einblick in die Vorstellungen von SuS geben und diesbezüglich deren Verwendung von Sprache aufzeigen.                                                             1 Universität Oldenburg, Department für Informatik, Abteilung Informatik in der Bildung, 26111 Oldenburg, arne.saathoff@uni -oldenburg.de  2 Im Folgenden als Abkürzung für Schülerinnen und Schüler  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 435ii“proceedings” — 2017/9/17 — 20:19 — page 436 — #436iiiiii2 Auswertung der Interviews  Das Datenmaterial  dieser Untersuchung entstamm t einer im Jahr 2010 verfassten Masterarbeit. Dabei wurden 11 Interviews mit insgesamt 23 SuS geführt. Die Interviewpartner konnten damals durch eine Kooperation mit zwei Schulen gewonnen werden.  Daher handelt es sich um eine Sekund äranalyse, die  mithilfe der qualitativen Inhaltsanalyse nach Mayring [May15]  durchgeführt wurde. Dabei fiel auf, dass die SuS fast ausschließlich die Analogie heranzogen, indem sie einen unbekannten Sachverhalt bzw. eine unbekannte Funktionsweise des Inter nets mit einem ihnen vertrauten Sachverhalt verglichen. Im Zuge dieses Vergleichens wurde in allen Fällen ein sprachliches Bild (Metapher) verwendet.  Um einen Einblick in die vollständige Auswertung und die Datensätze zu erhalten, sei auf die Masterarbeit [Saa16] verwiesen.  3 Ergebnisse und Fazit  Analogien, wie d ie Männchen - bzw.  Post-Metapher , sind gut geeignet , um die allgemeinen Vorgänge und Abläufe im Internet zu versinnbildlichen. Einzelne Phänomene, wie Streaming, können durch den Vergleich mit dem Kurz zeitgedächtni s oder einem Kopierer erklärt werden. Die Geschwindigkeit der Da tenübertragung wird mithilfe von  Multitasking  oder dem Gespräch beschrieben. Die Klötzchen -Metapher dient dazu , die Paketierung im Zuge der Datenübertragung zu veranschaulichen.  Lehrkräfte könnten  die genannten Analogien  als Grundlag e für die Unterrichtsplanung nutzen. Dabei eigenen sich Metaphern insbesondere zur bildlichen Darstellung von komplexen informatischen Sachverhalten, die zum ersten Mal behandelt werden. Die Komplexitä t eines informatischen Konzepts kann durch ein analoges Konzept, welches SuS vertraut ist, reduziert werden . Auf Grundlage dieser Versinnbildlichung muss dann wiederum der Bezug zu der tatsächlichen wissenschaftlichen Sichtweise hergestellt werden. Dieser V organg birgt einerseits Gefahren, wenn sich SuS womöglich nicht ausreichend von einer Metapher distanzieren können. Andererseits birgt der Einsatz geeigneter Metaphern durchaus Potenzial, SuS eine Hilfestellung bzw. ein Gedankengerüst zu bieten, um inform atische Konzept e zu durchdringen . Literaturverzeichnis  [JADC15 ] Jablansky, S.; Alexander, P. A.; Dumas, D. & Compton, V. (2015). Developmental Differences in Relational Reasoning Among Primary and Secondary School Students. Journal of Educational Psychology , 108(4), pp. 592 –608. [May15 ] Mayring, P. (2015). Qualitative Inhaltsanalyse - Grundlagen und Techniken (12. Aufl.). Weinheim und Basel: Beltz Verlag.  [Saa16 ] Saathoff, A. (2016). Analyse der Verwendung von Relational Reasoning in Schülerinterviews über i nformatische Konzepte. Masterarbeit. Universität Oldenburg . 436 Arne Saatho  ii“proceedings” — 2017/9/17 — 20:19 — page 437 — #437iiiiii-Ira Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 11Sei selbst der Igel! – Umsetzung ausgewählter Elemente derphänomenorientierten InformatikDaniel Siebrecht1Abstract: In diesem Beitrag wird ein Konzept vorgestellt, das Bewegung bewusst als informatischenUnterrichtsgegenstand au  asst und ihn mit der Algorithmik verknüpft. Dadurch bieten sich nicht nurdie klassischen Formen der symbolischen oder ikonischen Visualisierung von Problemstellungenan: Naheliegend kann ebenso ein enaktiver Zugang gewonnen werden. Die Lernenden führen imvorliegenden Konzept die Algorithmen selbst durch, sodass sich schließlich das Ausführen algorithmi-sierter Bewegung als ergänzende Alternative zur gewohnten Implementation am Informatiksystemherausstellt.Keywords: Implementation; Bewegung; Algorithmik; enaktiv1 Bewegung als informatischer UnterrichtsgegenstandÜblicherweise wird Bewegung im Zusammenhang mit Informatikunterricht methodischassoziiert. Namhafte Arbeiten in der internationalen Informatikdidkatik legen nahe, dasssich die enaktive Erarbeitung informatischer Konzepte in Form größerer Motivationund ergiebigeren Lernerfolgs rentiert (z. B. [BWF15]). Rollenspiele und Aktivitäten sindeindeutig einer methodischen Aufwertung des Informatikunterrichts zuzurechnen. EinInformatikunterricht, der aber beispielsweise die Straßenüberquerung oder den „Tanz derBienen“ analysiert und modelliert, versteht Bewegung als Sachgegenstand .Als wesentliche Bezugsthematik ist die Algorithmik der Bewegung zuzuorden: Bei der Nota-tion von Bewegungsabläufen (Kinetographie) werden algorithmische Strukturen verwendet.Verkehrsnetze – etwa auch Labyrinthe – bergen vornehmlich „Weg-Problemstellungen“. Hüp-fekästchen und schrittmusterartiges Bewegen oder gar Tanzen bieten hingegen keine direkteProblemstellung, setzen sich aber aus Strukturen algorithmischer Elemente zusammen. Nichtkinetisch bedingte Algorithmen wären hingegen beispielsweise der Euklid-Algorithmus,String-Matching-Algorithmen oder Algorithmen zur Datenbankanalyse. Somit lässt sicheine Schnittmenge zwischen Algorithmik und Bewegung (Kinalgorithmik) ﬁnden, „die sichmit der Untersuchung, Lösung und Umsetzung von kinetographischen Problemstellungenauseinandersetzt“ ([Si15, S. 27]). Zieldimension ist das Analysieren und Modellierenkinetischer Strukturen und Probleme, deren Lösung perspektivisch zu einer Ausführunggebracht werden soll, sei es nun auf einem Informatiksystem oder durch einen Menschen.1Bergische Universität Wuppertal, Didaktik der Informatik – siebrecht@uni-wuppertal.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 437ii“proceedings” — 2017/9/17 — 20:19 — page 438 — #438iiiiii12 Daniel Siebrecht2 Alternative Implementation durch BewegungDer Vorschlag ist also eine Alternative zur „klassischen“ Implementation am Informatik-system in Form menschlicher Bewegungsausführung (anthropokinetische Implementati-onsalternative). Dabei mögen virtuelle Systeme, die vornehmlich den visuellen Lernkanalbedienen, in den Hintergrund treten, um durch Haptik und Motorik enaktiv Lernprozessezu initiieren und zu fördern, welche zur Aneignung informatischer Kompetenzen auf kon-zeptueller Ebene befähigen sollen. Statt einen Editor zu ö  nen, um Quelltext zu verfassen,und diesen anschließend kompilieren zu lassen oder interpretieren zu lassen , böte sichden Schülerinnen und Schülern die Möglichkeit, nach einer zeite  zienten Notation derProgrammsequenz mit Stift und Papier dieses Programm unmittelbar im Anschluss an dieEntwicklung selbst als Programm ausführende Instanz zu übersetzen und zwar in eigeneKörperbewegungen. Dies kann aber nur umgesetzt werden, wenn der modellierte Gegen-stand kinalgorithmischer Natur ist. „Die eigentliche Sprache, die es dabei zu lernen gilt, ist[nämlich] weniger eine beliebige Programmiersprache, sondern eher die Algorithmik selbst“([Si15, S. 28]). D       fordert in diesem Sinne eine zielgerichtete Handlungsfähigkeit„im Umgang mit den programmtechnischen Konzepten“ ([Di03, S. 226]); der „Einsatz dernatürlichen Fähigkeiten“ ([Di03, S. 228]) sei dabei besonders wichtig; er verweist darauf,dass die Lernenden bei einer Informatiksystem gestützten Implementation mit dem „trialand error“-Prinzip auf die Rückmeldungen des Compilers antworten. Bei der angedachtenAlternative zeigt sich ein eindeutiger Vorteil darin, dass die Lernenden dazu angehaltenwären, sich selbst hinsichtlich einer fehlerbehaftet notierten Programmsequenz korrigierenzu müssen – ohne dabei die Schuld auf „Dritte“ schieben zu können.Literatur[BWF15] Bell, T.; Witten, I. H.; Fellows, M.: Teaching Computer Science Unplugged.Teachers’ Edition. An enrichment and extension programme for primary-agedstudents. Computer Science Unplugged, 2015.[Di03] Dißmann, S.: Handlungsorientiertes Erlernen von Programmkonstruktionenanhand von Rollenspielen. In (Hubwieser, P., Hrsg.): Informatische Fachkon-zepte im Unterricht, INFOS 2003, 10. GI-Fachtagung Informatik und Schule,17.-19. September 2003 in Garching bei München. Bd. 32. Lecture Notes inInformatics, Gesellschaft für Informatik, Bonn, S. 225–235, 2003.[Si15] Siebrecht, D.: Einführung algorithmischer Elemente unter kinetographischenAspekten, 2015,    :http://bscw.ham.nw.schule.de/pub/bscw.cgi/6586882 , Stand: 17. 08. 2017.438 Daniel Siebrechtii“proceedings” — 2017/9/17 — 20:19 — page 439 — #439iiiiiiIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 Ergänzendes eLearning-Angebot für pädagogische Fachkräfte aus dem Vor- und Grundschulbereich zum leichten Einstieg in die Elementarinformatik Anke Steinhäuser1 Abstract: Um informatische Ansätze bereits in der Vor- und Grundschule zu etablieren, müssen gezielte eLearning-Konzepte entwickelt werden, die auch bei weniger medienaffinen pädago-gischen Fachkräften Freude und Interesse hervorrufen. Exemplarisch wird eLEx vorgestellt, ein eLearning-Angebot zum leichten Einstieg in die Elementarinformatik. Die digitalen Lerneinheiten bilden ein eigenes Konzept, das sich aus der Experimentierkiste Informatik [Sc16] begründet und dabei helfen soll, bei Lehrenden Synergien zwischen Elementarinformatik und Medienbildung zu erzeugen.  Keywords: Elementarinformatik, digitale Lerneinheiten, Medienbildung 1 Einleitung und Motivation Die digitale Bildungsoffensive ist eine große Herausforderung für alle Lehrkräfte, die weiterhin im „Anlogen“ verhaftet sind und digitalen Technologien skeptisch gegenüber-stehen [In14]. Um auch die Gruppe von medien- und informatikfernen Pädagoginnen und Pädagogen für die Grundlagen der Informatik zu begeistern, braucht es gezielte mo-tivationale Schulungskonzepte, um Ängste abzubauen, Verständnis zu fördern und praxisorientierte Grundlagen [Re05] zu vermitteln. Daraus entstand die Idee von eLEx, einem e-Learning-Angebot, aufbauend auf der Handreichung zur Experimentierkiste In-formatik [Sc16] unter Berücksichtigung multimedialer, mediendidaktischer und motiva-tionaler Grundlagen. 2 Projektziele und Vorgehen Die digitalen Lerneinheiten von eLEx haben hohen Praxisbezug und sollen Lehrkräfte zur reflexiven Auseinandersetzung anregen. Ziel ist es, Synergien zwischen digitaler Medienbildung und Einstellungsänderungen zur Informatik zu erzeugen. Mit eLEx wurde deshalb ein leicht zugängliches und anschauliches Fortbildungsangebot als Vorbereitung für den Einsatz der Experimentierkiste Informatik konzipiert.                                                              1Otto-Friedrich-Universität Bamberg, Fakultät Wirtschaftsinformatik und Angewandte Informatik, Forschungsgruppe Elementarinformatik, An der Weberei 5, 96045 Bamberg, ute.schmid@uni-bamberg.de, zgl. Friedrich-Alexander-Universität, Erlangen-Nürnberg, Philosophische Fakultät, Master Multimedia Didaktik, eLEx unveröffentlicht, erhältlich via E-Mail von anke-steinhaeuser@gmx.de. I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 439ii“proceedings” — 2017/9/17 — 20:19 — page 440 — #440iiiiii16    Anke Steinhäuser   3 Empirische Studie und Ergebnisse  Die qualitative Erhebungsmethode wurde mit einem teilstrukturierten Interviewleitfaden und der Auswertung durch MAXQDA an fünf Testpersonen durchgeführt. Produkt- und lernprozessbezogene Fragen zu Usability, Selbstwirksamkeit, Kompetenzerleben und die Teilnahme an weiteren ähnlichen Schulungen standen im Fokus. Die Zielgruppe schätzte die Darbietung praxisnaher Beispiele für ihren pädagogischen Kontext als relevant und praxistauglich ein, hatte Spaß an eLEx und traute sich infolgedessen auch den Einsatz der Experimentierkiste Informatik in der eigenen Einrichtung zu.  Die Abb. zeigt die Bedürfnisse der Zielgruppe in Bezug auf eLEx: Die helle Füllung wird als positiv, die zweifarbige als he-terogen und die dunkle als ver-besserungswürdig eingestuft. Der Wunsch nach kleinschrittigeren Anleitungen wurde mehrfach ge-äußert. Insgesamt wurde eLEx  als bereichernd empfunden. Zu-dem wurde vorgeschlagen, eLEx in der Arbeit mit jungen Flücht-lingen einzusetzen und die „Kis-te“ modifiziert für fünfte und sechste Klassen anzubieten. 4 Diskussion und Ausblick Medienbildung verknüpft mit informatischen Grundlagen fördern ein nachhaltiges Verständnis für Informatik in der digitalen Welt. Lehrkräfte aus dem Vor- und Grund-schulbereich ohne informatische und mit nur geringen digitalen Vorkenntnissen werden mit eLEx stärker in den Prozess miteinbezogen [Th16]. Weitere Studien sind in Planung. Literaturverzeichnis [In14] Initiative D21 (2014). Medienbildung an deutschen Schulen. Handlungsempfehlungen für die digitale Gesellschaft. URL: www.initiatived21.de (Stand 02.06.2017). [Sc16] Schmid, U., Weitz, K., Wolking, M. (2016). Handreichung zur Experimentierkiste Informatik, Otto-Friedrich-Universität Bamberg, unveröffentlicht, erhältlich via E-Mail von ute.schmid@uni-bamberg.de.  [Th16] Thomas, M., Weigend, M. (Hrsg.) (2016). Informatik für Kinder. 7. Münsteraner Workshop zur Schulinformatik – 20. Mai 2016. Universität Münster: BoD, S.113-119. 440 Anke Steinhäuserii“proceedings” — 2017/9/17 — 20:19 — page 441 — #441iiiiiiInformatik in der Elementarpädagogik – Herausforderung für die Professionalisierung pädagogischer Fachkräfte  Maarit Stierle1 Abstract:  Die Realisierung  und der Erfolg informatische r Frühförderangebote  in Kindertages -stätten sind hauptsächlich von der Quali fizierung der pädagogischen Fachkräfte abhängig. Dieser Beitrag betont notwendige Maßnahmen im Rahmen der Professionalisierung frühpädagogischer Fachkräfte. Abschließend führt er weitere relevante Vorarbeiten und Forschungsdesiderate für die Implementierun g des Bildungsbereichs Informatik an. Keywords: Elementarpädagogik, P rofessionalisierung, pädagogische Fachkräfte, informatische Frühförderung,  Kinder tagesstätte,  MINT, Informatikdidaktik in der beruflichen Bildung  1 Professionalisierung pädagogischer Fachk räfte für die  infor-matische  Frühförderung  MINT -Fächer  sind für viele ErzieherInnen mit negativen Emotionen besetzt . Nicht selten entschieden  sie sich mit ihrer Ausbildung bewusst gegen einen Beruf mit natur -wissenschaftlichen und technischen Inhalten. Es müssen daher dringend Maßnahmen ergriffen werden, um Vorurteile und Ängste zu überwinden sowie das generelle  Interesse an MINT -Themen  zu stimulieren . Angehenden pädagogischen Fachkräften ist die Angst zu nehmen , dass informatische Erziehung  zu komplex für sie sei. Außerdem sollten sie die informatische Frühförderung als Bestandteil ihres Berufs -bilds erkennen. Mit ersten Workshops im Rahmen der Forschungsgruppe Elementar -informatik konnten angehende  ErzieherInnen  an einer Fachakademie für Sozial -pädagogik bereits für die informatische Frühförderung sensibilisiert werden. Die ErzieherInnen zeigten sich anfangs zwar noch skeptisch , verstanden aber nach kurzer Zeit, warum Informatik schon im Kinder garten alter eine wichtige Rolle spielt . Sie entwicke lten nach  einer thematischen  Einführung sogar  eigene Ideen zur Umsetzung in der Praxis.  Die Integration informatischer Frühförderung in die schulische Ausbildung der pädagogischen Fachkräfte ist dringend erforderlich.  Sinnvoll erscheint es den MNE - durch die Etabli erung eines MINT -Unterrichts abzulösen, damit  auch die technische Bildung in die beruflichen Schulen Einzug hält  und die Naturwissenschaftliche Erziehung den Anforderungen des digitalen 21. Jahrhunderts angepasst wird . Der Unterricht sollte didaktisch so g estaltet werden, wie die Förderung  auch tat sächlich in                                                            1 Universität Bamberg/Forschungsgruppe Elementarinformatik (FELI), An d er Weberei 5, 96045 Bamberg, maarit.stierle@gmail.com  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 441ii“proceedings” — 2017/9/17 — 20:19 — page 442 — #442iiiiiiden frühkindlichen Institutionen  für Kinder durchgeführt w ird, die weder lesen noch schreiben können . Dement sprechend handelt es sich um eine kindgerechte Unterrichtsgestaltung , sodass den Auszubild enden  didaktische und methodische Kenntnisse für die Praxis vermittelt werden. Darüber hinaus benötigen  die SchülerInnen und Studierenden auch Hintergrundwissen . Grundprinzipien für den MINT -Unterricht als auch später für die informatische Erziehung in den  Kindertages -stätten sind handlungs orientiertes, problem lösendes und entdeckendes Lernen. Die Auszubildenden können sich im Unterricht in ihre späteren Kindergartenkinder hinein -versetzen und dabei u.a. mögliche aufkommende Fragen entwickeln, diese stell en und darauf angemessene Antworten oder Reaktionen finden. Die Lehrkraft nimmt  eine tendenziell begleitende Rolle im MINT -Unterricht ein und hält sich im Hintergrund des Geschehens. Die Auszubildenden  dürfen  möglichst viel selbst testen und dabei ihre kommunikativen Kompetenzen aus bilden, um in ihrem späteren Beruf ko -konstruktive Lernprozesse in den Kindertages stätten anregen zu können.  Die höhere Gewichtung der informatischen Frühförderung in der Ausbildung pädagogischer Fachkräfte setzt entsprechende Kenntnisse bei den Lehrkräften für berufliche Schulen voraus. Der doppelte pädagogische Bezug der Lehrkräfte er-fordert , dass diese über fachliche sowie fachdidaktische Kompetenzen verfügen und den Auszubildenden  praktisch vermit teln können, wie informatis che Frühf örderung in der Praxis  stattfinden kann. Auch hier gilt  es, die MINT -Hochschuldidaktik in der LehrerInnen -Ausbildung an die Umsetzung in den Kindertages stätten anzupassen.  2 Ausblick  Die informatische Frühförderung wird in den nächsten Jahren verst ärkt in den Fokus der Bildungsdiskussionen rücken. Für die Realisierung der Informatik als Bildungsbereich in Kindertagesstätten sind Maßnahmen bei der Ausbildung pädagogischer  Fachkräfte not -wendig. Daneben stehen weitere Aufgaben für die erfolg reiche Im plementierung informatischer Frühförderung aus: die Festlegung von Bildungsstandards und die Über -arbeitung der Bildungspläne der Länder, die Ent wicklung konkreter Materialien zur Frühförderung sowie Handreichungen für päda gogische Fachkräfte, Ausbau von  Fort- und Weiterbildungsangeboten, die Erar beitung von Instrumenten zur Messung informatischer Kompetenzen und der Effektivität von Förderangeboten, Untersuchungen , wie sich Angebote zur Förderung informatischer Kompetenzen in bestehende pädagogische Kon zepte von Kindertagesstätten integrieren lassen und viele weitere Handlungsschritte , die sich sowohl direkt als auch indirekt auf die Bildungsqualität der Kindertagesstätten auswirken.  442 Maarit Stierleii“proceedings” — 2017/9/17 — 20:19 — page 443 — #443iiiiii Förderung digitaler Bildung mit digitalen Schulbüchern  Manuel Froitzheim1, Klaus Becker2, Martin Zimnol3, Daniel Jonietz4, Oliver Schneider5, Heiko Jochum6 Abstract : Das elektronische Schulbuch inf -schule.de ist ein interaktives und multimediales Schulbuch für den Informatikunterricht. Im folgenden Beitrag werden die Idee des elektronischen Schulbuchs, sowie die Förderung der informatorischen Bildung durch inf -schule.de dargestellt und mit Hilfe einer umfangreichen Evaluierung belegt. Die Befragun g per Fragebogen von 1170 Lernen den und 175 Lehrenden gibt zum Beispiel Aufschluss über die Möglichkeiten , die für den Informatikunterricht durch den Einsatz des Schulbuchs entstehen.  Keywords: Elektronisches Schulbuch, Digitales Schulbuch, Informatikunterricht, Lernen, Didaktik der Informatik, Web -Applikation  1 Einleitung und Motivation  Digitale Bildung wird inzwischen als unverzichtbar in einer immer stärker digital geprägten und vernetzten Welt angesehen. Die Aneignung grundlegender Konzepte zum Verständnis dieser Welt und die Entwicklung von Kompetenzen zur Mitgestaltung einer solchen Welt sollte in einem eigenständigen Lernbereich erfolgen – so die einhellige Forderung aller mit digitaler Bildu ng befassten  Fachdidaktiker [Da16]. Nur in einem fundierten Informatikunterricht kann die anwendungsbezogene Perspektive (Wie nutze ich das?) und die gesellschaftlich -kulturelle Perspektive (Wie wirkt das?) um die zum Verständnis der digitalen Welt erforde rliche technologische Perspektive (Wie funktioniert das?) erweitert werden.  Der Erwerb digitaler Bildung wird im Informatikunterricht gezielt gefördert. Das Schulbuch als Leitmedium bei der Unterrichtsplanung und Unterrichtsgestaltung spielt dabei eine zen trale Rolle  [Wi03], weil hier „Lerninhalte eines Faches oder Lernbereichs in systematischer, didaktischer und methodischer Form“ bereitgestellt werden [Sa10]. Schulbücher wurden bisher in Buchform erstellt. Mit der Entwicklung digitaler bzw.                                                            1 Universität Siegen, Zentrum für ökonomische Bildung in Siegen (ZöBiS), Kohlbettstraße 15, 57068 Siegen, froitzheim@zoebis.de  2 BurgG ymnasium Kaiserslautern, Burgstraße 18, 67659 Kaiserslautern , becker kp@web.de  3 Pädagogisches Landesinstitut Rheinland -Pfalz , Butenschönstraße 2, 67346 Speyer,  martin. zimnol@pl.rlp.de  4 Burg Gymnasium Kaiserslautern, Burgstraße 18, 67659 Kaiserslautern , daniel@jonietz.de  5 Sickingen -Gymnasium Landstuhl, Philipp -Fauth -Straße 3, 66849 La ndstuhl , o.schneider@mac.com  6 Werner -Heisenberg -Gymnasium Bad Dürkheim, Kanalstr. 19, 67098 Bad Dürkheim, jom@whgonline.de  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 443ii“proceedings” — 2017/9/17 — 20:19 — page 444 — #444iiiiiielektronischer  Schulbücher ist ein neues Forschungsfeld entstanden, das der Entwicklung von Lernumgebungen neue Impulse verleiht [ScFr14][ScFr15][ScFr16] . Gerade für die Förderung digitaler Bildung ergeben sich interessante Ansatzpunkte durch das Lernen mit einem digita len Schulbuch – was im Folgenden genauer aufgezeigt werden soll.  Im Zentrum unseres Forschungsansatzes steht u nter anderem  die Frage, welche Möglichkeiten ein elektronisches  Schulbuch bietet, um den Erwerb digitaler Bildung im Informatikunterricht noch eff ektiver und adressatengerechter zu gestalten, als d ieses  mit gedruckten  Schulbüchern erfolgen kann.  Um dieser Frage nachzugehen, wurde und wird nach der Methode der fachdidaktischen Entwicklungsforschung  [Pr12a][Pr12b]  ein Schulbuch entwickelt und im Unter richt breit eingesetzt und getestet. Die Akzeptanz bei Lernenden  und Lehrenden  wurde durch eine Erhebung quantitativ und qualitativ  evaluiert.  [Fr16a] [Fr16 b] Im Folgenden wird der aktuelle Entwicklungsstand unter der Perspektive „Möglichkeiten eines digita len Schulbuchs zur Förderung digitaler Bildung“ aufgezeigt.  2 Das Schulbuchprojekt inf -schule .de Das Schulbuchprojekt inf -schule .de (vgl. http s://www.inf -schule.de/) wurde 2008 initiiert und inzwischen  ist ein elektronisches  Schulbuch für den Informatikunterricht entwickelt  worden, das fast die gesamten Unterrichtsinhalte des Faches Informatik abdeckt . Bezüglich  des Umfang s (mit mehr als 2000 Webseiten) und der Nutzerzahlen (mit mehr als 100 .000 Zugriffen pro Schulwoche) hat  sich inf -schule .de inzwischen zum akzeptierte n Lehrwerk für den Informatikunterricht  entwickelt . Genau w ie gedruckte Schulbücher orientiert es sich an  den Lehrplänen und  den Bildungsstandards und bietet vielfältiges Material zum Lernen und Lehren.  Das Schulbuch inf -schule .de wird als digitales Schulbuch im Internet angeboten. In der nach Sanguo, Xuehai und Chenglin [Sa12] vorgeschlagen en Entwicklungshierarchie für digitale Schulbücher ist es der Stufe 2.0 (Schulbücher ohne analoge Vorlage) zuzurechnen. In weiten Teilen erreic ht es inzwischen auch die Stufe 3.0, die eine Mitgestal tung durch die Nutzer vorsieht.   3 Forschungsdesign  Mit einer breit angelegten Online -Fragebogenaktion wurde die Nutzung und Akzeptanz des digitalen Schulbuchs inf -schule.de bei Lernen den und Lehrenden  ermittelt und unter wissentlichen Kriterien quantitativ und qualitativ evaluiert.  Die hohen Nutzerzahlen  ermöglich en es, über einen Online -Fragebogen zum  einen eine ausreichend große Rückmeldung zu erhalten und zum anderen mit  den vorhandenen Ressourcen m öglichst viele Lehrende und Lernende zu erreichen,  um die Akzeptanz und die Nutzung bezüglich des elektronischen  Schulbuchs bei einer möglichst breiten Zielgruppe zu messen. Ein weiteres Ziel  der Evaluieru ng bestand in der Erfassung von  444 Manuel Froitzheim, Klaus-Peter Becker, Martin Zimnol, Heiko Jochumii“proceedings” — 2017/9/17 — 20:19 — page 445 — #445iiiiii Verbesserungsmöglichkeiten  und Anregungen für die weitere Entwicklung, um in den folgenden Entwicklungszyklen  entsprechende Verbesserungen in das elektronische Schulbuch  zu integrieren.  An der Befragung haben sich 242 Schülerinnen (20,2%) und 928 Schüler ( 77,5%) beteiligt. Der geringe Anteil an Schülerinnen ist auf die Geschlechterverteilung in Informatikkursen zurückzuführen. Der Wert von 20,2% entspricht ungefähr dem Anteil der Frauen in den neuen IT -Berufen [HP10][ BB15 ]. Die Lernenden sind durchschnittli ch 16,9 Jahre alt. Der größte Teil der Lernenden ist der Sekundarstufe II (907 Lernende) zuzuordnen. In der Sekundarstufe I sind 150 Lernende, und aus dem tertiären Bildungsbereich (z.B. Universität und Fachhochschule) haben sich nur 12 Lernende an der Eva luierung beteiligt.  An der Evaluierung haben zudem 175 Lehrende Teilgenommen. Davon sind 29% weiblich und 71% männlich. Alle im Schuldienst vertretenen Altersgruppen haben sich an der Evaluierung beteiligt.  4 Möglichkeiten eines digitalen Schulbuchs  Attrakt ive Lernangebote sind Ausgangspunkt für eine gezielte Förderung digitaler Bildung. Im Folgenden werden die im digitalen Schulbuch inf -schule.de bereits umgesetzten Möglichkeiten eines digitalen Schulbuchs zur Gestaltung solcher Lernumgebungen aufgezeigt un d die Ergebnisse der Evaluierung dargestellt .  Verfügbarkeit  Das digitale Schulbuch inf -schule.de wird frei verfügbar als Webs eite im Internet bereitgestellt. Das Schulbuch kann daher von jedem Interessierten jederzeit an (fast) jedem Ort ohne irgendwelche Zugangsbarrieren genutzt werden.  Der Aspekt der  universelle n und freie n Verfügbarkeit im Internet wurde in der Evaluation mit Abstand am höchsten bewertet.  Für 45% der befragten Personen (Lehrende und Lernende) hat dieser Aspekt die größte Bedeutung am Erf olg des elektronischen Schulbuchs. Hier spiegelt sich eine Entwicklung weg von Printmedien hin zu digitalen Medien wider, die insbesondere bei Jugendlichen zu beobachten ist  [JIM15 ]. Wichtig ist es Jugendlichen auch, dass die dargestellte Information auf v erschiedenen Endgeräten , vom Desktop -Computer bis zum  Smartphone , flexibel angezeigt werden k önnen. Die Personen nutzen das elektronische Schulbuch zu 35,6% auf einem Computer, zu 43,3% auf einem Laptop, zu 13,2% auf einem Tablet und zu 7,9% auf einem Sma rtphone. Im Fragebogen war di e Auswahl mehrerer Endgeräte möglich und der hohe Anteil an Desktop -Computer n lässt sich durch die genutzte Ausstattung während des Unterrichts erklären. Die Nutzung auf mobilen Endgeräten (21,1%) führt zur Notwendigkeit eines  responsive n Design s des elektronischen Schulbuchs. Die befragten Personen äußerten eine starke Zustimmung oder Zustimmung bei der Darstellung auf Computern (97,9%) und Laptops (97,2%) . Bei Tablets ist die Zustimmung zur guten Darstellung mit 74,3% etwas s chlechter und bei Smartphones liegt die Zustimmung bei 57,4%. Eine entsprechende Optimierung der Darstellung auf mobilen Endgeräten ist in der Zukunft wünschenswert.  Förderung digitaler Bildung mit elektronischen Schulbüchern 445ii“proceedings” — 2017/9/17 — 20:19 — page 446 — #446iiiiiiMit der bisherigen Verfügbarkeit und Darstellung der Informationen im elektronischen Schulbuch gelingt es,  Lernende  und Lehrende  anzusprechen und ihnen in zufriedenstellender Art Lernangebote zur digitalen Bildung zu unterbreiten.  Die freie Verfügbarkeit im Internet hat zudem zur Folge, dass nicht nur die ursprünglich vorgesehene Lerngruppe „ Schülerinnen und Schüler“ angesprochen wird, sondern auch andere Interessierte. Aus vielfältigen Rückmeldungen , auch außerhalb der gezogenen Stichprobe,  geht hervor, dass die Materialien zur Studienvorbereitung empfohlen werden oder unterstützend im Studiu m verwendet werden. Diese zunächst unbeabsichtigte Ausweitung des Nutzerkreises ist aber ganz im Sinne einer breit angelegten Vermittlung digitaler Bildung.   Digitale Darstellung der Inhalte  Die digitale Darstellung von Materialien erlaubt es, Lerninhalte i n ihrer „natürlichen Form“ vorzugeben. Dies soll anhand eines Lernszenarios erläutert werden.  Viele Fachkonzepte der Informatik lassen sich effektiv vermitteln, wenn geeignete Lernszenarien (z.B. als Programmfragment oder als ausführbares Modell) zum Analy sieren , Variieren und Weiterentwickeln bereitgestellt  werden.  Nach einer einführenden Aufgabe, die den Sinn von eigenständigen Unterprogrammeinheiten motiviert , wird dem Lernenden  ein ausführbares Programmfragment vorgegeben, das aufzeigt, wie die neue Ide e umgesetzt werden kann. Dieses Programmfragment soll von den Lernenden  analysiert und per Analogiebildung vervollständigt werden.  (vgl. Abb. 1)  Abb.  1: Beispiel: Einführung von Unterprogrammen (vgl. http://www.inf -schule.de/programmierung/kara/unterprog ramme/erkundung_unterprogramm ) Aufwendig ist das Abtippen des Programmfragmentes, wenn es in einem Buch abgedruckt ist. Natürlicher ist es, wenn man direkt auf das Lernmaterial zugreifen kann. In einem digitalen Schulbuch lässt sich dies bei Quelltexten per „Copy and Paste “ erledigen, bei anderen vorgegebenen Materialien, indem man einem Link folgt.  446 Manuel Froitzheim, Klaus-Peter Becker, Martin Zimnol, Heiko Jochumii“proceedings” — 2017/9/17 — 20:19 — page 447 — #447iiiiii Gerade bei der Vermittlung digitaler Bildung ist es günstig, wenn Lernmaterialien zu den digital geprägten Lerninhalten in digitaler Form darg estellt und verfügbar gemacht werden. Ein digitales Schulbuch ist von seiner Konzeption hierfür prädestiniert. Zudem unterstützt es die digitale Aufbereitung von Lernprodukten, indem das Schulbuch als Materiallieferant für ein digitales Heft oder digitales  Portfolio fungiert.  Durch die digitale Verfügbarkeit der Materialien kann die Unterrichtszeit für die digitale Bildung genutzt werden und  muss  nicht zum Abtippen von Quellcode verschwendet werden.   Multimediale Darstellung der Inhalte  Ein elektronisches  Schulbuch kann neben der text - und bilderbasierten Darstellung weitere Darstellungsmöglichkeiten nutzen. Mit Videos, Animationen usw. lassen sich Sachzusammenhänge oft noch lerngerechter  aufbereiten.  Als Beispiel soll hier das Teddy -Spiel zum Erlernen objek torientierter Fachkonzepte betrachtet werden.  Zusätzlich zu den textuell dargestellten Spielregeln wird ein möglicher Spielablauf mit einem Video aufgezeigt und die Projektvorlage für Greenfoot zum Herunterladen angeboten.  Abb.  2: Das Teddy -Spiel (vgl. http://www.inf -schule.de/programmierung/oopjava/klassen/aufbau/teddy ) Aus den Rückmeldungen geht hervor, dass d ie Integration von multimedialen Inhalten (z.B. Diagramme, Fotos und Videos) von 69,9% der Lernenden als wichtig erachtet wird  und die Animation von  dynamischen Vorgängen (z.B. Sortierverfahren) von 76,9% der Lernenden . Allerdings wird das Schulbuch inf-schule.de immer noch als textlastig angesehen. Die Bereitschaft, längere Textpassagen zu lesen, ist bei vielen Lernen den nur eingeschränkt vorhanden.  Gewünscht wird eine weitere multimediale Aufbereitung.  Durch das unbegrenzte Platzangebot in einem elektronischen Schulbuch können weitere Darstellungsformen hinzugefügt werden und vom Lehrenden passend zur Lerngruppe oder auch individuell vom Lernenden pa ssend zu seinem Lernprofil  ausgewählt werden. Die multimediale Darstellung ermöglicht es, Lerninhalte noch besser auf die unterschiedliche n Bedürfnisse der Lern er abzustimmen.   Förderung digitaler Bildung mit elektronischen Schulbüchern 447ii“proceedings” — 2017/9/17 — 20:19 — page 448 — #448iiiiii  Interaktionsmöglichkeiten  Lernen ist dann besonders effektiv, wenn Lern ende  sich aktiv -konstruktiv mit den Lerninhalten auseinandersetzen.  Zur Erkundung von Informatiksystemen sind insbesondere solche Lernsysteme geeignet, die ein experimentelles Vorgehen ermöglichen , indem einige Parameter des zu erkundenden Systems variiert und  die Auswirkungen beobachtet werden . Dadurch lassen  sich das Sys temverhalten und die zugrunde liegende Systemstruktur vom Lernenden erschließen.  Zum Beispiel  können  in der  Animation zur Erschließung von Dualzahlen im elektronischen Schulbuch die  Lernenden  interaktiv die binäre Darstellung von Zahlen mit einem Zweizustandssystem erkunden.  (vgl. Abb . 3)             Abb. 3: Animation zur Erschließung von Dualzahlen (vgl. http://www.inf -schule.de/information/darstellunginformation/binaerdarstellungzahlen/einsti eg_gefaengnisausbruch ) Ein weiteres Beispiel für eine Animation ist a uf den Seiten zum Thema Datenbanken zu finden. In einem integrierten SQL -Interpreter, der es ermöglicht, SQL -Befehle zu einer vorgegebenen Datenbank direkt auf inf -schule .de auswerten zu lassen ( vgl. z.B. http://inf -schule -db.cs.uni -kl.de/SQLgbuch1.php ), können die Nutzer ohne Installationsaufwand SQL -Statements testen.  Für das Lernen muss also keine lokale Datenbankinfrastruktur aufgebaut werden , diese Infrastruktur wurde di rekt in das elektronische Schulbuch „integriert “. Das Schulbuch ist nicht mehr nur Lieferant von Lernmaterial, es wird zur Lernumgebung, die von Lern enden  in Teilen aktiv mitgestaltet  448 Manuel Froitzheim, Klaus-Peter Becker, Martin Zimnol, Heiko Jochumii“proceedings” — 2017/9/17 — 20:19 — page 449 — #449iiiiii werden kann.  Die integrierten Werkzeuge stoßen bei 75,6% der befragten L ernenden  auf große Zustimmung. Von den Lehrenden wurde insbesondere der nicht vorhandene Installationsaufwand positiv erwähnt. Dies ermöglicht  es auch , eine entsprechende Aufgabe als Hausaufgabe bearbeiten zu lassen, weil die Lernenden die Aufgaben mit jedem beliebigen Browser ohne weitere Software bearbeiten können.   Individualisierung  In der Didaktik gilt der Grundsatz, Lernende  möglichst viele Lernwege anzubieten. Gedruckte  Schulbücher können dem nur in Ansätzen gerecht werden, weil eine stark begrenzte Ressource in Form von Seiten für das Schulbuch zur Verfügung steht. Solche Beschränkungen gibt es bei einer digitalen Bereitstellung nicht. Das Schulbuch inf -schule .de nutzt diese Möglichkeit, indem es für gleiche Inhalte unterschiedliche didaktische Aufbe reitungen anbietet. Lehrende und Lern ende  haben so Wahlmöglichkeiten und können die für sie geeignetsten Materialien auswählen.  Im Schulbuch inf -schule.de w urden verschiedene Ansätze zur Bereitstellung alternativer Lernwege integriert:  • alternative Programm ierparadigmen: control first, data first, objects first, functions first  • alternative didaktische Strukturierungen: systematisch, genetisch, exemplarisch  • alternative kognitive Werkzeuge  • alternative Kontexte  • alternative A nsprüche  Eine genauere Beschreibung dieser Wahlmöglichkeiten wird im elektronischen Schulbuch dargestellt  [Be16] . Elektronische  Schulbücher ermöglichen es den Autoren viel besser als gedruckte  Schulbücher, individualisierte Lernangebote zu machen. Durch erweiterte Ressourcen und mehr Darstellungsmöglichkeiten lassen sich unterschiedliche Lernwege für verschiedene  Lerntypen auf differenziertem  Anspruchsniveau realisieren.  Die unterschiedlichen Darstellungen werden von 73% der Lerner als sehr wichtig erachtet. Als Freitext wurde zum Beispiel zurückgemeldet: „Ferner finde ich es sehr gut, dass die einzelnen [Lernwege] strukturiert aufgebaut sind, um meistens aus einer spezif ischen Anfangsproblemstellung durch Analyse und Induktion auf eine allgemeine Aussage zu gelangen.“ Dadurch , dass die allgemeinen Aussagen bei allen Lernwegen identisch sind, können auch in Lerngruppen unterschiedliche Lernwege  - passend zum Lernverhalten der Lerner - bearbeitet werden und trotzdem gelangen alle Lerner zum gleichen Ziel. Um auf das unterschiedliche Leistungsniveau der Schüler einzugehen, wurden Aufgaben mit unterschiedlichem Schwierigkeitsgrad integriert. Die verschiedenen Aufgaben wurden z u 71,6% als sehr wichtig bzw. wichtig eingestuft.   Aktualität der Darstellung  Die digitale Welt ändert sich sehr schnell. Initiativen wie das soziale Netzwerk „schülerVZ“ sind heute kaum  noch bekannt und zum Großteil durch andere soziale Förderung digitaler Bildung mit elektronischen Schulbüchern 449ii“proceedings” — 2017/9/17 — 20:19 — page 450 — #450iiiiiiNetzwerke ersetzt w orden.  Im Jahr 2010 hatten die VZ -Netzwerke ( „schülerVZ “, „studiVZ “ und „meinVZ “) noch über 16 Millionen aktive Nutzer [ OI10 ] und heutzutage ist das soziale Netzwerk den meisten Schülern nicht mehr bekannt. Gedruckte  Schulbücher haben es schwer, das Intere sse an digitalen Bildungsinhalten mit stets aktuellen Themen zu wecken. Zu groß ist die Gefahr, dass ein Thema sehr schnell aus dem Blickfeld verschwindet.   Digitale Schulbücher bieten dagegen die Möglichkeit, schnell und unkompliziert aktuelle Themen aufz ugreifen und ggf. alte durch neuere Themen zu ersetzen. Das ist insbesondere in einem sich dynamisch entwickelnden Fach wie der Informatik, bei dem sich  der inhaltliche Kanon noch nicht ganz etabliert hat, von besonderer Bedeutung.  Die Vermittlung von dig italer Bildung erfordert flexible Lernumgebungen. Auch wenn die zu vermittelnden Fachkonzepte stabil bleib en, so müssen die hierzu bereit gestellten Lernumgebungen doch ständig aktualisiert werden. Nur ein digitales Schulbuch kann das leisten, indem ständig  Teile des Schulbuchs überarbeitet und ergänzt werden.   Die ständige Weiterentwicklung des elektronischen Schulbuchs inf -schule.de wird von 83,3% der befragten Personen als sehr wichtig erachtet. Die Gefahr der Veränderung, durch die Aktualisierung der Inh alte stellt für die Nutzer kein Problem dar, weil zum Ende eines jeden Schuljahres eine fixierte Version des Schulbuchs archiviert wird. Über einen ergänzenden Parameter beim Aufruf des Schulbuchs kann jede archivierte Version aufgerufen werden und zum Bei spiel auch nach drei Jahren zur Prüfungsvorbereitung verwendet werden.   Kommunikation und Kooperation  Gedruckte Schulbücher werden von kleine ren Autoren teams erstellt. Das hat den Vorteil, dass ein didaktisches Konzept profiliert umgesetzt werden kann.  Mehr autorensysteme , wie es zum Beispiel von Wikipedia  verwendet wird,  verfolgen dagegen die Idee des kollaborierenden Schreibens, bei dem jeder Autor die Möglichkeit hat, am Entwicklungsprozess mitzuwirken. Mit diesem Ansatz wird versucht, das Wissen, Können u nd die Kreativität von möglichst vielen Autoren zu nutzen. Schwierig ist es dabei, das Gesamtwerk konsistent und einheitlich zu gestalten.  Des Weiteren stellt die Qualitätskontrolle, insbesondere bei der Entwicklung eines Schulbuchs, eine große Herausforde rung bei einem Mehrautorensystem dar.  Inwieweit sich Mehrautorensysteme für die Schulbuchentwicklung eignen, ist wohl noch nicht hinreichend erprobt. Klar ist, dass ein digitales Schulbuch mit einer digitalen Mehrautoreninfrastruktur die Schulbuchentwicklu ng erleichtert.  Das Schulbuchprojekt inf -schule .de hat einen moderaten Weg der Öffnung des Autorenkreises eingeschlagen. Jeder Nutzer kann über ein Rückmeldeformular Hinweise geben, die zu einer partiellen Überarbeitung der Lernmaterialien führen können. Nutzer können auch leicht Kontakt mit dem Autorente am aufnehmen und Material zur Ergänzung bereitstellen. Nutzer können auf diese Weise direkt zu Mitautoren werden. Die Liste der Autoren ist auf diese Weise auf inzwischen über 50 Personen  450 Manuel Froitzheim, Klaus-Peter Becker, Martin Zimnol, Heiko Jochumii“proceedings” — 2017/9/17 — 20:19 — page 451 — #451iiiiii angewachsen . Nach wie vor gibt es ein festes Autorenteam, das über d ie Weiterentwicklung des Schulbuches entscheidet  und Qualitätssicherung durch stattfindende Redaktionssitzungen ermöglicht.  Elektronische  Schulbücher ermöglichen die Entwickl ung für viele Autoren zu öffnen und die Kompetenz im Schulbuch zu vereinen. Durch  die vielen Autoren ist der direkte Kontakt zu den Autoren möglich und dies ist für 45,1% der befragten Personen wichtig. Auch die Möglichkeit , einen Beitrag zum elektronischen Schulbuch als Autor beizusteuern , wird von 26,7% der Befragten als wichtig erac htet, wobei die tatsächliche Nutzung bisher deutlich geringer ist.  5 Fazit  Das digitale Schulbuch inf -schule.de kann einen wesentlichen Beitrag zur informatorischen Bildung leisten, indem es wie beschrieben auf unterschiedliche Art die vielfältigen Inhalte d er Informatik zur Vermittlu ng niederschwellig bereitstellt,  damit diese mit möglichst niederschwelligen Einstiegsvoraussetzungen von Lehrenden gelehrt und von Lernenden erlernt werden können.  Denn nur , wenn Lernende in der Schule die Grundlagen zum Versteh en und Gestalten der digitalen Welt erhalten, können diese an der digitalisierten Gesellschaft partizipieren und diese aktiv mitgestalten.  Literaturverzeichnis  [Be16]  Becker, K.: Alternative Didaktisierungen, www.inf -schule.de/infschule/ konzeption/didakt ischestruktur/didaktisierungen, Stand: 27.01.2017.  [BB15]  Bundesministerium für Bildung und Forschung: Berufsbildungsbericht 2015. www.bmbf.de/pub/Berufsbildungsbericht_ 2015.pdf, Stand: 29.03.2016.  [Da16]  Dagstuhl -Erklärung: Bildung in der digitalen ver netzten Welt, www.gi.de/fileadmin/redaktion/Themen/dagstuhl -erklaerung -bildung -in-der-digitalen -welt-2016.pdf,  Stand: 23.01.2017.  [Fr16a]  Froitzheim, M.; Jonietz, D.; Schneider, O.; Becker, K.; Zimnol, M.: Nutzung eines elektronischen Schulbuchs im Inform atikunterricht am Beispiel des Projektes inf -schule. In: (Lucke, U.; Schwill, A.; Zender, R): DelFI 2016 – Die 14. E -Learning Tagung Fachtagung Informatik. Bonn: Köllen Druck+Verlag. 2016, S.71 -82. [Fr16b]  Froitzheim, M; Jonietz, D.; Schneider, O.; Becker, K.; Zimnol, M.: Evaluierung der Akzeptanz des elektronischen Schulbuchs inf -schule. In: (Schuhen, M; Froitzheim, M.; Schuhen, K.): Das elektronische Schulbuch 2016. Fachdidaktische Anforderungen und Ideen treffen auf Lösungsvorschläge der Informatik, Münster 2016, S. 83 -98.  Förderung digitaler Bildung mit elektronischen Schulbüchern 451ii“proceedings” — 2017/9/17 — 20:19 — page 452 — #452iiiiii[HP10]  Humbert, L.; Panske, J.: Informatik und Gender nehmt die Forschungsergebnisse ernst!, http://bscw. ham.nw.schule.de/pub/bscw.cgi/d2009202/HumbertPanske2010.pdf, Stand: 29.03.201 6. [Pr12a]  Prediger, S.; Link, M.: Fachdidaktische Entwicklungsforschung – ein entwicklungsprozessfokussierendes Forschungsprogramm mit Verschränkung fachdidaktischer Arbeitsbereich. In: (Bayrhuber, H.; Harms, U.; Muszynski, B.; Ralle, B.; Rothgangel, M.;  Schön, L. -H.; Vollmer, H.; Weigand, H. -G.): Formate Fachdidaktischer Forschung. Fachdidaktische Forschungen, Bd. 2, Münster, S. 29 -46. [Pr12b]  Prediger, S.; Link, M.; Hinz, R.; Hußmann, S.; Thiele, J.; Ralle, B.: Lehr -Lernprozesse initiieren und erforsche n – Fachdidaktische Entwicklungsforschung im Dortmunder Modell. In: MNU 65 (8), S. 452 -457. [OI10]  Online ich: Top 100 Soziale Netzwerke in Deutschland, http://online -ich.de/20100125/top -100-soziale -netzwerke -deutschland/, Stand: 27.01.2017.  [Sa10]  Sandf uchs, U. (2010). Schulbücher und Unterrichtsqualität - historische und aktuelle Reflexionen. In: (Fuchs, E.; Kahlert, J. ; Sandfuchs, U. (Hg.)): Schulbuch konkret. Bad Heilbrunn: Julius Klinkhardt, 11 -24. [Sa12]  Sanguo, C.; X uehai , M.; Schenglin, L. (2012 ). The Pace of Ebook Development in China. IN:  LOGOS: The Journal of the World Book Community, 23(2), 14 -20. [ScFr14]  Schuhen, M.; Froitzheim, M. (Hrsg.): Das Elektronische Schulbuch. Fachdidaktische Anforderungen und Ideen treffen auf Lösungsvorschläge der Informatik. Münster: LIT Verlag.  [ScFr15] Schuhen, M.; Froitzheim, M. (Hrsg.): Das Elektronische Schulbuch 2015. Fachdidaktische Anforderungen und Ideen treffen auf Lösungsvorschläge der Informatik. Münster: LIT Verlag.  [ScFr16]  Schuhen, M.; Froitzhei m, M. (Hrsg.): Das Elektronische Schulbuch 2016. Fachdidaktische Anforderungen und Ideen treffen auf Lösungsvorschläge der Informatik. Münster: LIT Verlag.  [JIM15]  Behrens, P.; Rathgeb, T.; Feierabend, S.; Plankenhorn, T: JIM 2015 - Jugend, Information, ( Multi -) Media. Basisstudie zum Medienumgang 12 - bis 19 -Jähriger in Deutschland. Stuttgart: Medienpädagogischer Forschungsverbund Südwest. www.mpfs.de/fileadmin/files/Studien/JIM/2015/JIM_Studie_ 2015.pdf, Stand: 29.03.2016.  [Wi03]  Wiater, W. (2003): Schu lbuchforschung in Europa. Bestandsaufnahme und Zukunftsperspektive. Bad Heilbrunn: Klinkhardt.  452 Manuel Froitzheim, Klaus-Peter Becker, Martin Zimnol, Heiko Jochumii“proceedings” — 2017/9/17 — 20:19 — page 453 — #453iiiiiiAutorenverzeichnisAAkao, Kensuke, 405BBarkmin, Mike, 407Becker, Klaus, 345,359Becker, Klaus-Peter, 443Benedikt, Gregor Alexander, 363Bergner, Nadine, 53,63,237Bescherer, Christine, 409Best, Alexander, 83Borsch, Johanna, 211Braun, Friederike, 119Brinda, Torsten, 119,321,393,407,411,425Brinkmeier, Michael, 311,349CClass, Christina B., 349Czechowski, Robert, 431DDengel, Andreas, 87Diekmann, Leonard, 181Dietrich, Leonore, 191,373Dittert, Nadine, 287,291Duwe, Wibke, 413EEngbring, Dieter, 227FFest, Andreas, 409Fischer, Johannes, 247Förster, Klaus-Tycho, 171Fricke, Martin, 429Froitzheim, Manuel, 345,359,443Funke, Alexandra, 327Futschek, Gerald, 427GGallenbacher, Jens, 19,267Gärtig-Daugs, Anja, 419Geldreich, Katharina, 327Goecke, Lennart, 417Gold-Veerkamp, Carolin, 393Grillenberger, Andreas, 157Grimm, Rüdiger, 167Günther, Christine, 415HHaji, Lina, 363Hancl, Mirek, 421Haselmeier, Kathrin, 429Heuer, Ute, 87Heun, Dominik, 201Hielscher, Michael, 97Hildebrandt, Claudia, 137Ho mann, Sabrina, 73Honegger, Beat Döbeli, 97Hubwieser, Peter, 327Hug, Alexander, 167Humbert, Ludger, 429JJäckel, Stefanie, 423Jatzlau, Sven, 383Jochum, Heiko, 345,359,443Jonietz, Daniel, 345Jördens, Tobias, 267Jückstock, Petra, 335ii“proceedings” — 2017/9/17 — 20:19 — page 454 — #454iiiiiiKKastl, Petra, 301Katterfeldt, Eva-Sophie, 287,291Knaus, Thomas, 31Knobelsdorf, Maria, 181Köster, Hilde, 53Kramer, Matthias, 407,425Krisch, Oliver, 301LLeonhardt, Thiemo, 237Levens, René, 363Lindner, Marlene, 277MMagenheim, Johannes, 53Meyer, Hilbert, 29Micheuz, Peter, 427Mühling, Andreas, 123Müller, Dorothee, 127,429Müller, Kathrin, 53,109Müller, Olaf, 363NNoller, Stephan, 49OOtto, Jonathan, 181PPancratz, Nils, 393Pasternak, Arno, 247Pech, Detlef, 417Petrut, Sandra-Jasmin, 63Pinkwart, Niels, 277,393,417Pisarenko, Stanislav, 311Pohl, Wolfgang, 431Prädel, Lars, 221Przybylla, Mareen, 257RRibe, Liz, 349Rohde, Thomas, 363Romeike, Ralf, 53,157,257,301,383Romero, Esther Alzate, 191,373Roßner, Marc, 433Rücker, Michael T., 393SSaatho  , Arne, 435Samimi, Vahid, 425Schmid, Ute, 419Schneider, Yannick, 123Schreiber, Gerlinde, 221Schroeder, Ulrik, 53,63,237Schulte, Carsten, 53,109Schulz, Sandra, 277Schwinem, Stefan, 321Siebrecht, Daniel, 429,437Steinbach, Nico, 147Steinhäuser, Anke, 439Stierle, Maarit, 441Stiller, Jurik, 417Strauss, Kolja, 363TTerjung, Thorsten, 411Thiele, Otto, 335Thomas, Marco, 211Tobinski, David, 321,407WWeitz, Katharina, 419Welke, Michel, 181Wendlandt, Katharina, 73Wendlandt, Matthias, 73Wieczorek, Barbara, 349ZZimnol, Martin, 345,359,443Zitzler, Eckart, 147P-1 Gregor Engels, Andreas Oberweis, AlbertZündorf (Hrsg.): Modellierung 2001.P-2 Mikhail Godlevsky, Heinrich C.Mayr(Hrsg.): Information Systems TechnologyanditsApplications, ISTA’2001.P-3 AnaM.Moreno, Reind P.vandeRiet(Hrsg.): Applications ofNaturalLan-guage toInformation Systems,NLDB’2001.P-4 H.Wörn, J.Mühling, C.Vahl, H.-P.Meinzer (Hrsg.): Rechner- undsensor-gestützte Chirurgie; Workshop desSFB414.P-5 Andy Schürr (Hg.): OMER –Object-Oriented Modeling ofEmbedded Real-Time Systems.P-6 Hans-Jürgen Appelrath, Rolf Beyer, UweMarquardt, Heinrich C.Mayr, ClaudiaSteinberger (Hrsg.): Unternehmen Hoch-schule, UH’2001.P-7 Andy Evans, Robert France, AnaMoreira,Bernhard Rumpe (Hrsg.): Practical UML-Based Rigorous Development Methods –Countering orIntegrating theextremists,pUML’2001.P-8 Reinhard Keil-Slawik, Johannes Magen-heim (Hrsg.): Informatikunterricht undMedienbildung, INFOS’2001.P-9 JanvonKnop, Wilhelm Haverkamp(Hrsg.): Innovative Anwendungen inKommunikationsnetzen, 15.DFN Arbeits-tagung.P-10 Mirjam Minor, Steffen Staab (Hrsg.): 1stGerman Workshop onExperience Man-agement: Sharing Experiences about theSharing Experience.P-11 Michael Weber, Frank Kargl (Hrsg.):Mobile Ad-Hoc Netzwerke, WMAN2002.P-12 Martin Glinz, Günther Müller-Luschnat(Hrsg.): Modellierung 2002.P-13 JanvonKnop, Peter Schirmbacher andViljan Mahni_ (Hrsg.): TheChangingUniversities –TheRole ofTechnology.P-14 Robert Tolksdorf, Rainer Eckstein(Hrsg.): XML-Technologien fürdasSe-mantic Web –XSW 2002.P-15 Hans-Bernd Bludau, Andreas Koop(Hrsg.): Mobile Computing inMedicine.P-16 J.Felix Hampe, Gerhard Schwabe(Hrsg.): Mobile andCollaborative Busi-ness 2002.P-17 JanvonKnop, Wilhelm Haverkamp(Hrsg.): Zukunft derNetze –Die Verletz-barkeit meistern, 16.DFN Arbeitstagung.P-18 Elmar J.Sinz, Markus Plaha (Hrsg.):Modellierung betrieblicher Informations-systeme –MobIS 2002.P-19 Sigrid Schubert, Bernd Reusch, NorbertJesse (Hrsg.): Informatik bewegt –Infor-matik 2002 –32.Jahrestagung derGesell-schaft fürInformatik e.V.(GI) 30.Sept.-3.Okt. 2002 inDortmund.P-20 Sigrid Schubert, Bernd Reusch, NorbertJesse (Hrsg.): Informatik bewegt –Infor-matik 2002 –32.Jahrestagung derGesell-schaft fürInformatik e.V.(GI) 30.Sept.-3.Okt. 2002 inDortmund (Ergänzungs-band).P-21 Jörg Desel, Mathias Weske (Hrsg.):Promise 2002: Prozessorientierte Metho-denundWerkzeuge fürdieEntwicklungvonInformationssystemen.P-22 Sigrid Schubert, Johannes Magenheim,Peter Hubwieser, Torsten Brinda (Hrsg.):Forschungsbeiträge zur“Didaktik derInformatik” –Theorie, Praxis, Evaluation.P-23 Thorsten Spitta, Jens Borchers, Harry M.Sneed (Hrsg.): Software Management2002 –Fortschritt durch BeständigkeitP-24 Rainer Eckstein, Robert Tolksdorf(Hrsg.): XMIDX 2003 –XML-Technologien fürMiddleware –Middle-ware fürXML-AnwendungenP-25 KeyPousttchi, Klaus Turowski (Hrsg.):Mobile Commerce –Anwendungen undPerspektiven –3.Workshop MobileCommerce, Universität Augsburg,04.02.2003P-26 Gerhard Weikum, Harald Schöning,Erhard Rahm (Hrsg.): BTW 2003: Daten-banksysteme fürBusiness, TechnologieundWebP-27 Michael Kroll, Hans-Gerd Lipinski, KayMelzer (Hrsg.): Mobiles Computing inderMedizinP-28 Ulrich Reimer, Andreas Abecker, SteffenStaab, Gerd Stumme (Hrsg.): WM 2003:Professionelles Wissensmanagement –Er-fahrungen undVisionenP-29 Antje Düsterhöft, Bernhard Thalheim(Eds.): NLDB’2003: Natural LanguageProcessing andInformation SystemsP-30 Mikhail Godlevsky, Stephen Liddle,Heinrich C.Mayr (Eds.): InformationSystems Technology anditsApplicationsP-31 Arslan Brömme, Christoph Busch (Eds.):BIOSIG 2003: Biometrics andElectronicSignaturesGI-Edition Lecture Notes inInformaticsP-32 Peter Hubwieser (Hrsg.): InformatischeFachkonzepte imUnterricht –INFOS2003P-33 Andreas Geyer-Schulz, Alfred Taudes(Hrsg.): Informationswirtschaft: EinSektor mitZukunftP-34 Klaus Dittrich, Wolfgang König, AndreasOberweis, KaiRannenberg, WolfgangWahlster (Hrsg.): Informatik 2003 –Innovative Informatikanwendungen(Band 1)P-35 Klaus Dittrich, Wolfgang König, AndreasOberweis, KaiRannenberg, WolfgangWahlster (Hrsg.): Informatik 2003 –Innovative Informatikanwendungen(Band 2)P-36 Rüdiger Grimm, Hubert B.Keller, KaiRannenberg (Hrsg.): Informatik 2003 –MitSicherheit InformatikP-37 Arndt Bode, Jörg Desel, Sabine Rath-mayer, Martin Wessner (Hrsg.): DeLFI2003: e-Learning Fachtagung InformatikP-38 E.J.Sinz, M.Plaha, P.Neckel (Hrsg.):Modellierung betrieblicher Informations-systeme –MobIS 2003P-39 Jens Nedon, Sandra Frings, Oliver Göbel(Hrsg.): IT-Incident Management &IT-Forensics –IMF 2003P-40 Michael Rebstock (Hrsg.): Modellierungbetrieblicher Informationssysteme –Mo-bIS2004P-41 Uwe Brinkschulte, Jürgen Becker, Diet-marFey, Karl-Erwin Großpietsch, Chris-tianHochberger, Erik Maehle, ThomasRunkler (Edts.): ARCS 2004 –OrganicandPervasive ComputingP-42 KeyPousttchi, Klaus Turowski (Hrsg.):Mobile Economy –Transaktionen undProzesse, Anwendungen undDiensteP-43 Birgitta König-Ries, Michael Klein,Philipp Obreiter (Hrsg.): Persistance,Scalability, Transactions –Database Me-chanisms forMobile ApplicationsP-44 JanvonKnop, Wilhelm Haverkamp, EikeJessen (Hrsg.): Security, E-Learning.E-ServicesP-45 Bernhard Rumpe, Wofgang Hesse(Hrsg.): Modellierung 2004P-46 Ulrich Flegel, Michael Meier (Hrsg.):Detection ofIntrusions ofMalware &Vulnerability AssessmentP-47 Alexander Prosser, Robert Krimmer(Hrsg.): Electronic Voting inEurope –Technology, Law, Politics andSocietyP-48 Anatoly Doroshenko, Terry Halpin,Stephen W.Liddle, Heinrich C.Mayr(Hrsg.): Information Systems TechnologyanditsApplicationsP-49 G.Schiefer, P.Wagner, M.Morgenstern,U.Rickert (Hrsg.): Integration undDaten-sicherheit –Anforderungen, Konﬂikte undPerspektivenP-50 Peter Dadam, Manfred Reichert (Hrsg.):INFORMATIK 2004 –Informatik ver-bindet (Band 1)Beiträge der34.Jahresta-gung derGesellschaft fürInformatik e.V.(GI), 20.-24. September 2004 inUlmP-51 Peter Dadam, Manfred Reichert (Hrsg.):INFORMATIK 2004 –Informatik ver-bindet (Band 2)Beiträge der34.Jahresta-gung derGesellschaft fürInformatik e.V.(GI), 20.-24. September 2004 inUlmP-52 Gregor Engels, Silke Seehusen (Hrsg.):DELFI 2004 –Tagungsband der2.e-Learning Fachtagung InformatikP-53 Robert Giegerich, Jens Stoye (Hrsg.):German Conference onBioinformatics –GCB 2004P-54 Jens Borchers, Ralf Kneuper (Hrsg.):Softwaremanagement 2004 –OutsourcingundIntegrationP-55 JanvonKnop, Wilhelm Haverkamp, EikeJessen (Hrsg.): E-Science undGrid Ad-hoc-Netze MedienintegrationP-56 Fernand Feltz, Andreas Oberweis, BenoitOtjacques (Hrsg.): EMISA 2004 –Infor-mationssysteme imE-Business undE-GovernmentP-57 Klaus Turowski (Hrsg.): Architekturen,Komponenten, AnwendungenP-58 Sami Beydeda, Volker Gruhn, JohannesMayer, Ralf Reussner, Franz Schweiggert(Hrsg.): Testing ofComponent-BasedSystems andSoftware QualityP-59 J.Felix Hampe, Franz Lehner, KeyPousttchi, KaiRanneberg, KlausTurowski (Hrsg.): Mobile Business –Processes, Platforms, PaymentsP-60 Steffen Friedrich (Hrsg.): Unterrichtskon-zepte fürinforrmatische BildungP-61 Paul Müller, Reinhard Gotzhein, Jens B.Schmitt (Hrsg.): Kommunikation inver-teilten SystemenP-62 Federrath, Hannes (Hrsg.): „Sicherheit2005“ –Sicherheit –Schutz undZuver-lässigkeitP-63 Roland Kaschek, Heinrich C.Mayr,Stephen Liddle (Hrsg.): Information Sys-tems –Technology andistApplicationsP-64 Peter Liggesmeyer, Klaus Pohl, MichaelGoedicke (Hrsg.): Software Engineering2005P-65 Gottfried Vossen, Frank Leymann, PeterLockemann, Wolffried Stucky (Hrsg.):Datenbanksysteme inBusiness, Techno-logie undWebP-66 Jörg M.Haake, Ulrike Lucke, DjamshidTavangarian (Hrsg.): DeLFI 2005: 3.deutsche e-Learning Fachtagung Infor-matikP-67 Armin B.Cremers, Rainer Manthey,Peter Martini, Volker Steinhage (Hrsg.):INFORMATIK 2005 –Informatik LIVE(Band 1)P-68 Armin B.Cremers, Rainer Manthey,Peter Martini, Volker Steinhage (Hrsg.):INFORMATIK 2005 –Informatik LIVE(Band 2)P-69 Robert Hirschfeld, Ryszard Kowalcyk,Andreas Polze, Matthias Weske (Hrsg.):NODe 2005, GSEM 2005P-70 Klaus Turowski, Johannes-Maria Zaha(Hrsg.): Component-oriented EnterpriseApplication (COAE 2005)P-71 Andrew Torda, Stefan Kurz, MatthiasRarey (Hrsg.): German Conference onBioinformatics 2005P-72 Klaus P.Jantke, Klaus-Peter Fähnrich,Wolfgang S.Wittig (Hrsg.): MarktplatzInternet: Von e-Learning bise-PaymentP-73 JanvonKnop, Wilhelm Haverkamp, EikeJessen (Hrsg.): “Heute schon dasMorgensehen“P-74 Christopher Wolf, Stefan Lucks, Po-WahYau(Hrsg.): WEWoRC 2005 –WesternEuropean Workshop onResearch inCryptologyP-75 Jörg Desel, Ulrich Frank (Hrsg.): Enter-prise Modelling andInformation SystemsArchitectureP-76 Thomas Kirste, Birgitta König-Riess, KeyPousttchi, Klaus Turowski (Hrsg.): Mo-bileInformationssysteme –Potentiale,Hindernisse, EinsatzP-77 Jana Dittmann (Hrsg.): SICHERHEIT2006P-78 K.-O. Wenkel, P.Wagner, M.Morgens-tern, K.Luzi, P.Eisermann (Hrsg.): Land-undErnährungswirtschaft imWandelP-79 Bettina Biel, Matthias Book, VolkerGruhn (Hrsg.): Softwareengineering 2006P-80 Mareike Schoop, Christian Huemer,Michael Rebstock, Martin Bichler(Hrsg.): Service-Oriented ElectronicCommerceP-81 Wolfgang Karl, Jürgen Becker, Karl-Erwin Großpietsch, Christian Hochberger,Erik Maehle (Hrsg.): ARCS´06P-82 Heinrich C.Mayr, Ruth Breu (Hrsg.):Modellierung 2006P-83 Daniel Huson, Oliver Kohlbacher, AndreiLupas, KayNieselt andAndreas Zell(eds.): German Conference onBioinfor-maticsP-84 Dimitris Karagiannis, Heinrich C.Mayr,(Hrsg.): Information Systems TechnologyanditsApplicationsP-85 Witold Abramowicz, Heinrich C.Mayr,(Hrsg.): Business Information SystemsP-86 Robert Krimmer (Ed.): Electronic Voting2006P-87 Max Mühlhäuser, Guido Rößling, RalfSteinmetz (Hrsg.): DELFI 2006: 4.e-Learning Fachtagung InformatikP-88 Robert Hirschfeld, Andreas Polze,Ryszard Kowalczyk (Hrsg.): NODe 2006,GSEM 2006P-90 Joachim Schelp, Robert Winter, UlrichFrank, Bodo Rieger, Klaus Turowski(Hrsg.): Integration, InformationslogistikundArchitekturP-91 Henrik Stormer, Andreas Meier, MichaelSchumacher (Eds.): European ConferenceoneHealth 2006P-92 Fernand Feltz, Benoît Otjacques, AndreasOberweis, Nicolas Poussing (Eds.): AIM2006P-93 Christian Hochberger, Rüdiger Liskowsky(Eds.): INFORMATIK 2006 –InformatikfürMenschen, Band 1P-94 Christian Hochberger, Rüdiger Liskowsky(Eds.): INFORMATIK 2006 –InformatikfürMenschen, Band 2P-95 Matthias Weske, Markus Nüttgens (Eds.):EMISA 2005: Methoden, Konzepte undTechnologien fürdieEntwicklung vondienstbasierten InformationssystemenP-96 Saartje Brockmans, Jürgen Jung, YorkSure (Eds.): Meta-Modelling andOntolo-giesP-97 Oliver Göbel, Dirk Schadt, Sandra Frings,Hardo Hase, Detlef Günther, Jens Nedon(Eds.): IT-Incident Mangament &IT-Forensics –IMF 2006P-98 Hans Brandt-Pook, Werner SimonsmeierundThorsten Spitta (Hrsg.): BeratunginderSoftwareentwicklung –Modelle,Methoden, Best PracticesP-99 Andreas Schwill, Carsten Schulte, MarcoThomas (Hrsg.): Didaktik derInformatikP-100 Peter Forbrig, Günter Siegel, MarkusSchneider (Hrsg.): HDI 2006: Hochschul-didaktik derInformatikP-101 Stefan Böttinger, Ludwig Theuvsen,Susanne Rank, Marlies Morgenstern (Hrsg.):Agrarinformatik imSpannungsfeldzwischen Regionalisierung undglobalenWertschöpfungskettenP-102 Otto Spaniol (Eds.): Mobile Services andPersonalized EnvironmentsP-103 Alfons Kemper, Harald Schöning, ThomasRose, Matthias Jarke, Thomas Seidl,Christoph Quix, Christoph Brochhaus(Hrsg.): Datenbanksysteme inBusiness,Technologie undWeb (BTW 2007)P-104 Birgitta König-Ries, Franz Lehner,Rainer Malaka, CanTürker (Hrsg.)MMS 2007: Mobilität undmobileInformationssystemeP-105 Wolf-Gideon Bleek, Jörg Raasch,Heinz Züllighoven (Hrsg.)Software Engineering 2007P-106 Wolf-Gideon Bleek, Henning Schwentner,Heinz Züllighoven (Hrsg.)Software Engineering 2007 –Beiträge zudenWorkshopsP-107 Heinrich C.Mayr,Dimitris Karagiannis (eds.)Information SystemsTechnology anditsApplicationsP-108 Arslan Brömme, Christoph Busch,Detlef Hühnlein (eds.)BIOSIG 2007:Biometrics andElectronic SignaturesP-109 Rainer Koschke, Otthein Herzog, Karl-Heinz Rödiger, Marc Ronthaler (Hrsg.)INFORMATIK 2007Informatik trifft LogistikBand 1P-110 Rainer Koschke, Otthein Herzog, Karl-Heinz Rödiger, Marc Ronthaler (Hrsg.)INFORMATIK 2007Informatik trifft LogistikBand 2P-111 Christian Eibl, Johannes Magenheim,Sigrid Schubert, Martin Wessner (Hrsg.)DeLFI 2007:5.e-Learning FachtagungInformatikP-112 Sigrid Schubert (Hrsg.)Didaktik derInformatik inTheorie undPraxisP-113 Sören Auer, Christian Bizer, ClaudiaMüller, Anna V.Zhdanova (Eds.)TheSocial Semantic Web 2007Proceedings ofthe1stConference onSocial Semantic Web (CSSW)P-114 Sandra Frings, Oliver Göbel, Detlef Günther,Hardo G.Hase, JensNedon, Dirk Schadt,Arslan Brömme (Eds.)IMF2007 IT-incidentmanagement &IT-forensicsProceedings ofthe3rdInternationalConference onIT-Incident Management&IT-ForensicsP-115 Claudia Falter, Alexander Schliep,Joachim Selbig, Martin Vingron andDirk Walther (Eds.)German conference onbioinformaticsGCB 2007P-116 Witold Abramowicz, Leszek Maciszek(Eds.)Business Process andServices Computing1stInternational Working Conference onBusiness Process andServices ComputingBPSC 2007P-117 Ryszard Kowalczyk (Ed.)Grid service engineering andmanegementThe4thInternational Conference onGridService Engineering andManagementGSEM 2007P-118 Andreas Hein, Wilfried Thoben, Hans-Jürgen Appelrath, Peter Jensch (Eds.)European Conference onehealth 2007P-119 Manfred Reichert, Stefan Strecker, KlausTurowski (Eds.)Enterprise Modelling andInformationSystems ArchitecturesConcepts andApplicationsP-120 Adam Pawlak, Kurt Sandkuhl,Wojciech Cholewa,Leandro Soares Indrusiak (Eds.)Coordination ofCollaborativeEngineering -State oftheArtandFutureChallengesP-121 Korbinian Herrmann, Bernd Bruegge (Hrsg.)Software Engineering 2008Fachtagung desGI-FachbereichsSoftwaretechnikP-122 Walid Maalej, Bernd Bruegge (Hrsg.)Software Engineering 2008 -WorkshopbandFachtagung desGI-FachbereichsSoftwaretechnikP-123 Michael H.Breitner, Martin Breunig, ElgarFleisch, LeyPousttchi, Klaus Turowski(Hrsg.)Mobile undUbiquitäreInformationssysteme –Technologien,Prozesse, MarktfähigkeitProceedings zur3.Konferenz Mobile undUbiquitäre Informationssysteme(MMS 2008)P-124 Wolfgang E.Nagel, RolfHoffmann,Andreas Koch (Eds.)9thWorkshop onParallel Systems andAlgorithms (PASA)Workshop oftheGI/ITG Speciel InterestGroups PARS andPARVAP-125 Rolf A.E. Müller, Hans-H. Sundermeier,Ludwig Theuvsen, Stephanie Schütze,Marlies Morgenstern (Hrsg.)Unternehmens-IT:Führungsinstrument oderVerwaltungsbürdeReferate der28.GILJahrestagungP-126 Rainer Gimnich, Uwe Kaiser, JochenQuante, Andreas Winter (Hrsg.)10thWorkshop Software Reengineering(WSR 2008)P-127 Thomas Kühne, Wolfgang Reisig,Friedrich Steimann (Hrsg.)Modellierung 2008P-128 Ammar Alkassar, Jörg Siekmann (Hrsg.)Sicherheit 2008Sicherheit, Schutz undZuverlässigkeitBeiträge der4.Jahrestagung desFachbereichs Sicherheit derGesellschaftfürInformatik e.V.(GI)2.-4. April 2008Saarbrücken, GermanyP-129 Wolfgang Hesse, Andreas Oberweis (Eds.)Sigsand-Europe 2008Proceedings oftheThird AISSIGSANDEuropean Symposium onAnalysis,Design, UseandSocietal Impact ofInformation SystemsP-130 Paul Müller, Bernhard Neumair,Gabi Dreo Rodosek (Hrsg.)1.DFN-Forum Kommunikations-technologien Beiträge derFachtagungP-131 Robert Krimmer, Rüdiger Grimm (Eds.)3rdInternational Conference onElectronicVoting 2008Co-organized byCouncil ofEurope,Gesellschaft fürInformatik andE-Voting.CCP-132 Silke Seehusen, Ulrike Lucke,Stefan Fischer (Hrsg.)DeLFI 2008:Die6.e-Learning Fachtagung InformatikP-133 Heinz-Gerd Hegering, Axel Lehmann,Hans Jürgen Ohlbach, ChristianScheideler (Hrsg.)INFORMATIK 2008Beherrschbare Systeme –dank InformatikBand 1P-134 Heinz-Gerd Hegering, Axel Lehmann,Hans Jürgen Ohlbach, ChristianScheideler (Hrsg.)INFORMATIK 2008Beherrschbare Systeme –dank InformatikBand 2P-135 Torsten Brinda, Michael Fothe,Peter Hubwieser, Kirsten Schlüter (Hrsg.)Didaktik derInformatik –Aktuelle ForschungsergebnisseP-136 Andreas Beyer, Michael Schroeder (Eds.)German Conference onBioinformaticsGCB 2008P-137 Arslan Brömme, Christoph Busch, DetlefHühnlein (Eds.)BIOSIG 2008: Biometrics andElectronicSignaturesP-138 Barbara Dinter, Robert Winter, PeterChamoni, Norbert Gronau, KlausTurowski (Hrsg.)Synergien durch Integration undInformationslogistikProceedings zurDW2008P-139 Georg Herzwurm, Martin Mikusz (Hrsg.)Industrialisierung desSoftware-ManagementsFachtagung desGI-FachausschussesManagement derAnwendungsentwick-lung und-wartung imFachbereichWirtschaftsinformatikP-140 Oliver Göbel, Sandra Frings, DetlefGünther, Jens Nedon, Dirk Schadt (Eds.)IMF 2008 -ITIncident Management &ITForensicsP-141 Peter Loos, Markus Nüttgens,Klaus Turowski, Dirk Werth (Hrsg.)Modellierung betrieblicher Informations-systeme (MobIS 2008)Modellierung zwischen SOA undCompliance ManagementP-142 R.Bill, P.Korduan, L.Theuvsen,M.Morgenstern (Hrsg.)Anforderungen andieAgrarinformatikdurch Globalisierung undKlimaveränderungP-143 Peter Liggesmeyer, Gregor Engels,Jürgen Münch, Jörg Dörr,Norman Riegel (Hrsg.)Software Engineering 2009Fachtagung desGI-FachbereichsSoftwaretechnikP-144 Johann-Christoph Freytag, Thomas Ruf,Wolfgang Lehner, Gottfried Vossen(Hrsg.)Datenbanksysteme inBusiness,Technologie undWeb (BTW)P-145 Knut Hinkelmann, Holger Wache (Eds.)WM2009: 5thConference onProfessionalKnowledge ManagementP-146 Markus Bick, Martin Breunig,Hagen Höpfner (Hrsg.)Mobile undUbiquitäreInformationssysteme –Entwicklung,Implementierung undAnwendung4.Konferenz Mobile undUbiquitäreInformationssysteme (MMS 2009)P-147 Witold Abramowicz, Leszek Maciaszek,Ryszard Kowalczyk, Andreas Speck (Eds.)Business Process, Services ComputingandIntelligent Service ManagementBPSC 2009 ·ISM 2009 ·YRW-MBP2009P-148 Christian Erfurth, Gerald Eichler,Volkmar Schau (Eds.)9thInternational Conference onInnovativeInternet Community SystemsI2CS2009P-149 Paul Müller, Bernhard Neumair,Gabi Dreo Rodosek (Hrsg.)2.DFN-ForumKommunikationstechnologienBeiträge derFachtagungP-150 Jürgen Münch, Peter Liggesmeyer (Hrsg.)Software Engineering2009 -WorkshopbandP-151 Armin Heinzl, Peter Dadam, Stefan Kirn,Peter Lockemann (Eds.)PRIMIUMProcess Innovation forEnterprise SoftwareP-152 JanMendling, Stefanie Rinderle-Ma,Werner Esswein (Eds.)Enterprise Modelling andInformationSystems ArchitecturesProceedings ofthe3rdInt‘l WorkshopEMISA 2009P-153 Andreas Schwill,Nicolas Apostolopoulos (Hrsg.)Lernen imDigitalen ZeitalterDeLFI 2009 –Die7.E-LearningFachtagung InformatikP-154 Stefan Fischer, Erik MaehleRüdiger Reischuk (Hrsg.)INFORMATIK 2009ImFocus dasLebenP-155 Arslan Brömme, Christoph Busch,Detlef Hühnlein (Eds.)BIOSIG 2009:Biometrics andElectronic SignaturesProceedings oftheSpecial Interest GrouponBiometrics andElectronic SignaturesP-156 Bernhard Koerber (Hrsg.)Zukunft braucht Herkunft25Jahre »INFOS –Informatik undSchule«P-157 IvoGrosse, Steffen Neumann,Stefan Posch, Falk Schreiber,Peter Stadler (Eds.)German Conference onBioinformatics2009P-158 W.Claupein, L.Theuvsen, A.Kämpf,M.Morgenstern (Hrsg.)Precision AgricultureReloaded –InformationsgestützteLandwirtschaftP-159 Gregor Engels, Markus Luckey,Wilhelm Schäfer (Hrsg.)Software Engineering 2010P-160 Gregor Engels, Markus Luckey,Alexander Pretschner, Ralf Reussner(Hrsg.)Software Engineering 2010 –Workshopband(inkl. Doktorandensymposium)P-161 Gregor Engels, Dimitris KaragiannisHeinrich C.Mayr (Hrsg.)Modellierung 2010P-162 Maria A.Wimmer, Uwe Brinkhoff,Siegfried Kaiser, Dagmar Lück-Schneider, Erich Schweighofer,Andreas Wiebe (Hrsg.)Vernetzte ITfüreinen effektiven StaatGemeinsame FachtagungVerwaltungsinformatik (FTVI) undFachtagung Rechtsinformatik (FTRI) 2010P-163 Markus Bick, Stefan Eulgem,Elgar Fleisch, J.Felix Hampe,Birgitta König-Ries, Franz Lehner,KeyPousttchi, KaiRannenberg (Hrsg.)Mobile undUbiquitäreInformationssystemeTechnologien, Anwendungen undDienste zurUnterstützung vonmobilerKollaborationP-164 Arslan Brömme, Christoph Busch (Eds.)BIOSIG 2010: Biometrics andElectronicSignatures Proceedings oftheSpecialInterest Group onBiometrics andElectronic SignaturesP-165 Gerald Eichler, Peter Kropf,Ulrike Lechner, Phayung Meesad,Herwig Unger (Eds.)10thInternational Conference onInnovative Internet Community Systems(I2CS)–Jubilee Edition 2010 –P-166 Paul Müller, Bernhard Neumair,Gabi Dreo Rodosek (Hrsg.)3.DFN-Forum KommunikationstechnologienBeiträge derFachtagungP-167 Robert Krimmer, Rüdiger Grimm (Eds.)4thInternational Conference onElectronic Voting 2010co-organized bytheCouncil ofEurope,Gesellschaft fürInformatik andE-Voting.CCP-168 IraDiethelm, Christina Dörge,Claudia Hildebrandt,Carsten Schulte (Hrsg.)Didaktik derInformatikMöglichkeiten empirischerForschungsmethoden undPerspektivenderFachdidaktikP-169 Michael Kerres, Nadine OjstersekUlrik Schroeder, Ulrich Hoppe (Hrsg.)DeLFI 2010 -8.TagungderFachgruppe E-LearningderGesellschaft fürInformatik e.V.P-170 Felix C.Freiling (Hrsg.)Sicherheit 2010Sicherheit, Schutz undZuverlässigkeitP-171 Werner Esswein, Klaus Turowski,Martin Juhrisch (Hrsg.)Modellierung betrieblicherInformationssysteme (MobIS 2010)Modellgestütztes ManagementP-172 Stefan Klink, Agnes KoschmiderMarco Mevius, Andreas Oberweis (Hrsg.)EMISA 2010Einﬂussfaktoren aufdieEntwicklungﬂexibler, integrierter InformationssystemeBeiträge desWorkshopsderGI-Fachgruppe EMISA(Entwicklungsmethoden fürInfor-mationssysteme undderen Anwendung)P-173 Dietmar Schomburg,Andreas Grote (Eds.)German Conference onBioinformatics2010P-174 Arslan Brömme, Torsten Eymann,Detlef Hühnlein, Heiko Roßnagel,Paul Schmücker (Hrsg.)perspeGKtive 2010Workshop „Innovative undsichereInformationstechnologie fürdasGesundheitswesen vonmorgen“P-175 Klaus-Peter Fähnrich,Bogdan Franczyk (Hrsg.)INFORMATIK 2010Service Science –Neue Perspektiven fürdieInformatikBand 1P-176 Klaus-Peter Fähnrich,Bogdan Franczyk (Hrsg.)INFORMATIK 2010Service Science –Neue Perspektiven fürdieInformatikBand 2P-177 Witold Abramowicz, Rainer Alt,Klaus-Peter Fähnrich, Bogdan Franczyk,Leszek A.Maciaszek (Eds.)INFORMATIK 2010Business Process andService Science –Proceedings ofISSS andBPSCP-178 Wolfram Pietsch, Benedikt Krams (Hrsg.)Vom Projekt zum ProduktFachtagung desGI-Fachausschusses Management derAnwendungsentwicklung und-wartungimFachbereich Wirtschafts-informatik(WI-MAW), Aachen, 2010P-179 Stefan Gruner, Bernhard Rumpe (Eds.)FM+AM`2010Second International Workshop onFormal Methods andAgile MethodsP-180 Theo Härder, Wolfgang Lehner,Bernhard Mitschang, Harald Schöning,Holger Schwarz (Hrsg.)Datenbanksysteme fürBusiness,Technologie undWeb (BTW)14.Fachtagung desGI-Fachbereichs„Datenbanken undInformationssysteme“(DBIS)P-181 Michael Clasen, Otto Schätzel,Brigitte Theuvsen (Hrsg.)Qualität undEfﬁzienz durchinformationsgestützte Landwirtschaft,Fokus: Moderne WeinwirtschaftP-182 Ronald Maier (Hrsg.)6thConference onProfessionalKnowledge ManagementFrom Knowledge toActionP-183 Ralf Reussner, Matthias Grund, AndreasOberweis, Walter Tichy (Hrsg.)Software Engineering 2011Fachtagung desGI-FachbereichsSoftwaretechnikP-184 Ralf Reussner, Alexander Pretschner,Stefan Jähnichen (Hrsg.)Software Engineering 2011Workshopband(inkl. Doktorandensymposium)P-185 Hagen Höpfner, Günther Specht,Thomas Ritz, Christian Bunse (Hrsg.)MMS 2011: Mobile undubiquitäreInformationssysteme Proceedings zur6.Konferenz Mobile undUbiquitäreInformationssysteme (MMS 2011)P-186 Gerald Eichler, Axel Küpper,Volkmar Schau, Hacène Fouchal,Herwig Unger (Eds.)11thInternational Conference onInnovative Internet Community Systems(I2CS)P-187 Paul Müller, Bernhard Neumair,Gabi Dreo Rodosek (Hrsg.)4.DFN-Forum Kommunikations-technologien, Beiträge derFachtagung20.Junibis21.Juni2011 BonnP-188 Holger Rohland, Andrea Kienle,Steffen Friedrich (Hrsg.)DeLFI 2011 –Die9.e-LearningFachtagung InformatikderGesellschaft fürInformatik e.V.5.–8. September 2011, DresdenP-189 Thomas, Marco (Hrsg.)Informatik inBildung undBerufINFOS 201114.GI-Fachtagung Informatik undSchuleP-190 Markus Nüttgens, Oliver Thomas,Barbara Weber (Eds.)Enterprise Modelling andInformationSystems Architectures (EMISA 2011)P-191 Arslan Brömme, Christoph Busch (Eds.)BIOSIG 2011International Conference oftheBiometrics Special Interest GroupP-192 Hans-Ulrich Heiß, Peter Pepper, HolgerSchlingloff, Jörg Schneider (Hrsg.)INFORMATIK 2011Informatik schafft CommunitiesP-193 Wolfgang Lehner, Gunther Piller (Hrsg.)IMDM 2011P-194 M.Clasen, G.Fröhlich, H.Bernhardt,K.Hildebrand, B.Theuvsen (Hrsg.)Informationstechnologie füreinenachhaltige LandbewirtschaftungFokus ForstwirtschaftP-195 Neeraj Suri, Michael Waidner (Hrsg.)Sicherheit 2012Sicherheit, Schutz undZuverlässigkeitBeiträge der6.Jahrestagung desFachbereichs Sicherheit derGesellschaft fürInformatik e.V.(GI)P-196 Arslan Brömme, Christoph Busch (Eds.)BIOSIG 2012Proceedings ofthe11thInternationalConference oftheBiometrics SpecialInterest GroupP-197 Jörn vonLucke, Christian P.Geiger,Siegfried Kaiser, Erich Schweighofer,Maria A.Wimmer (Hrsg.)Aufdem Weg zueiner offenen, smartenundvernetzten VerwaltungskulturGemeinsame FachtagungVerwaltungsinformatik (FTVI) undFachtagung Rechtsinformatik (FTRI)2012P-198 Stefan Jähnichen, Axel Küpper,Sahin Albayrak (Hrsg.)Software Engineering 2012Fachtagung desGI-FachbereichsSoftwaretechnikP-199 Stefan Jähnichen, Bernhard Rumpe,Holger Schlingloff (Hrsg.)Software Engineering 2012WorkshopbandP-200 Gero Mühl, JanRichling, AndreasHerkersdorf (Hrsg.)ARCS 2012 WorkshopsP-201 Elmar J.Sinz Andy Schürr (Hrsg.)Modellierung 2012P-202 Andrea Back, Markus Bick,Martin Breunig, KeyPousttchi,Frédéric Thiesse (Hrsg.)MMS 2012:Mobile undUbiquitäreInformationssystemeP-203 Paul Müller, Bernhard Neumair,Helmut Reiser, Gabi Dreo Rodosek (Hrsg.)5.DFN-Forum Kommunikations-technologienBeiträge derFachtagungP-204 Gerald Eichler, Leendert W.M.Wienhofen, Anders Kofod-Petersen,Herwig Unger (Eds.)12thInternational Conference onInnovative Internet Community Systems(I2CS 2012)P-205 Manuel J.Kripp, Melanie Volkamer,Rüdiger Grimm (Eds.)5thInternational Conference onElectronicVoting 2012 (EVOTE2012)Co-organized bytheCouncil ofEurope,Gesellschaft fürInformatik andE-Voting.CCP-206 Stefanie Rinderle-Ma,Mathias Weske (Hrsg.)EMISA 2012DerMensch imZentrum derModellierungP-207 Jörg Desel, Jörg M.Haake,Christian Spannagel (Hrsg.)DeLFI 2012: Die10.e-LearningFachtagung Informatik derGesellschaftfürInformatik e.V.24.–26. September 2012P-208 Ursula Goltz, Marcus Magnor,Hans-Jürgen Appelrath, Herbert Matthies,Wolf-Tilo Balke, Lars Wolf (Hrsg.)INFORMATIK 2012P-209 Hans Brandt-Pook, André Fleer, ThorstenSpitta, Malte Wattenberg (Hrsg.)Nachhaltiges Software ManagementP-210 Erhard Plödereder, Peter Dencker,Herbert Klenk, Hubert B.Keller,Silke Spitzer (Hrsg.)Automotive –Safety &Security 2012Sicherheit undZuverlässigkeit fürautomobile InformationstechnikP-211 M.Clasen, K.C.Kersebaum, A.Meyer-Aurich, B.Theuvsen (Hrsg.)Massendatenmanagement inderAgrar- undErnährungswirtschaftErhebung -Verarbeitung -NutzungReferate der33.GIL-Jahrestagung20.–21.Februar 2013, PotsdamP-212 Arslan Brömme, Christoph Busch (Eds.)BIOSIG 2013Proceedings ofthe12th InternationalConference oftheBiometricsSpecial Interest Group04.–06. September 2013Darmstadt, GermanyP-213 Stefan Kowalewski,Bernhard Rumpe (Hrsg.)Software Engineering 2013Fachtagung desGI-FachbereichsSoftwaretechnikP-214 Volker Markl, Gunter Saake, Kai-UweSattler, Gregor Hackenbroich, Bernhard Mitschang, Theo Härder, VeitKöppen (Hrsg.)Datenbanksysteme fürBusiness,Technologie undWeb (BTW) 201313.–15.März 2013, MagdeburgP-215 Stefan Wagner, Horst Lichter (Hrsg.)Software Engineering 2013Workshopband(inkl. Doktorandensymposium)26.Februar –1.März 2013, AachenP-216 Gunter Saake, Andreas Henrich,Wolfgang Lehner, Thomas Neumann,Veit Köppen (Hrsg.)Datenbanksysteme fürBusiness,Technologie undWeb (BTW) 2013 –Workshopband11.–12.März 2013, MagdeburgP-217 Paul Müller, Bernhard Neumair, HelmutReiser, Gabi Dreo Rodosek (Hrsg.)6.DFN-Forum Kommunikations-technologienBeiträge derFachtagung03.–04. Juni2013, ErlangenP-218 Andreas Breiter, Christoph Rensing (Hrsg.)DeLFI 2013: Die11e-LearningFachtagung Informatik derGesellschaftfürInformatik e.V.(GI)8.–11.September 2013, BremenP-219 Norbert Breier, Peer Stechert,Thomas Wilke (Hrsg.)Informatik erweitert HorizonteINFOS 201315.GI-Fachtagung Informatik undSchule26.–28.September 2013P-220 Matthias Horbach (Hrsg.)INFORMATIK 2013Informatik angepasst anMensch,Organisation undUmwelt16.–20.September 2013, KoblenzP-221 Maria A.Wimmer, Marijn Janssen,Ann Macintosh, Hans Jochen Scholl,Efthimios Tambouris (Eds.)Electronic Government andElectronic ParticipationJoint Proceedings ofOngoing Research ofIFIP EGOV andIFIP ePart 201316.–19.September 2013, KoblenzP-222 Reinhard Jung, Manfred Reichert (Eds.)Enterprise ModellingandInformation Systems Architectures(EMISA 2013)St.Gallen, SwitzerlandSeptember 5.–6.2013P-223 Detlef Hühnlein, Heiko Roßnagel (Hrsg.)Open Identity Summit 201310.–11.September 2013Kloster Banz, GermanyP-224 Eckhart Hanser, Martin Mikusz, MasudFazal-Baqaie (Hrsg.)Vorgehensmodelle 2013Vorgehensmodelle –Anspruch undWirklichkeit20.Tagung derFachgruppeVorgehensmodelle imFachgebietWirtschaftsinformatik (WI-VM) derGesellschaft fürInformatik e.V.Lörrach, 2013P-225 Hans-Georg Fill,Dimitris Karagiannis,Ulrich Reimer (Hrsg.)Modellierung 201419.–21.März 2014, WienP-226 M.Clasen, M.Hamer, S.Lehnert,B.Petersen, B.Theuvsen (Hrsg.)IT-Standards inderAgrar- undErnährungswirtschaft Fokus: Risiko- undKrisenmanagementReferate der34.GIL-Jahrestagung24.–25.Februar 2014, BonnP-227 Wilhelm Hasselbring,NilsChristian Ehmke (Hrsg.)Software Engineering 2014Fachtagung desGI-FachbereichsSoftwaretechnik25.–28.Februar 2014Kiel, DeutschlandP-228 Stefan Katzenbeisser, Volkmar Lotz,Edgar Weippl (Hrsg.)Sicherheit 2014Sicherheit, Schutz undZuverlässigkeitBeiträge der7.Jahrestagung desFachbereichs Sicherheit derGesellschaft fürInformatik e.V.(GI)19.–21.März 2014, WienP-229 Dagmar Lück-Schneider, ThomasGordon, Siegfried Kaiser, Jörn vonLucke,Erich Schweighofer, MariaA.Wimmer, Martin G.Löhe (Hrsg.)Gemeinsam Electronic Governmentziel(gruppen)gerecht gestalten undorganisierenGemeinsame FachtagungVerwaltungsinformatik (FTVI) undFachtagung Rechtsinformatik (FTRI)2014, 20.-21. März 2014 inBerlinP-230 Arslan Brömme, Christoph Busch (Eds.)BIOSIG 2014Proceedings ofthe13thInternationalConference oftheBiometrics SpecialInterest Group10.–12.September 2014 inDarmstadt, GermanyP-231 Paul Müller, Bernhard Neumair,Helmut Reiser, Gabi Dreo Rodosek(Hrsg.)7.DFN-ForumKommunikationstechnologien16.–17.Juni2014FuldaP-232 E.Plödereder, L.Grunske, E.Schneider,D.Ull(Hrsg.)INFORMATIK 2014BigData –Komplexität meistern22.–26.September 2014StuttgartP-233 Stephan Trahasch, Rolf Plötzner, GerhardSchneider, Claudia Gayer, Daniel Sassiat,Nicole Wöhrle (Hrsg.)DeLFI 2014 –Die12.e-LearningFachtagung InformatikderGesellschaft fürInformatik e.V.15.–17.September 2014FreiburgP-234 Fernand Feltz, Bela Mutschler, BenoîtOtjacques (Eds.)Enterprise Modelling andInformationSystems Architectures(EMISA 2014)Luxembourg, September 25-26, 2014P-235 Robert Giegerich,Ralf Hofestädt,TimW.Nattkemper (Eds.)German Conference onBioinformatics 2014September 28–October 1Bielefeld, GermanyP-236 Martin Engstler, Eckhart Hanser,Martin Mikusz, Georg Herzwurm (Hrsg.)Projektmanagement undVorgehensmodelle 2014Soziale Aspekte undStandardisierungGemeinsame Tagung derFachgruppenProjektmanagement (WI-PM) undVorgehensmodelle (WI-VM) imFachgebiet Wirtschaftsinformatik derGesellschaft fürInformatik e.V., Stuttgart2014P-237 Detlef Hühnlein, Heiko Roßnagel (Hrsg.)Open Identity Summit 20144.–6. November 2014Stuttgart, GermanyP-238 Arno Ruckelshausen, Hans-PeterSchwarz, Brigitte Theuvsen (Hrsg.)Informatik inderLand-, Forst- undErnährungswirtschaftReferate der35.GIL-Jahrestagung23.–24.Februar 2015, GeisenheimP-239 Uwe Aßmann, Birgit Demuth, ThorstenSpitta, Georg Püschel, Ronny Kaiser(Hrsg.)Software Engineering &Management201517.-20. März 2015, DresdenP-240 Herbert Klenk, Hubert B.Keller, ErhardPlödereder, Peter Dencker (Hrsg.)Automotive –Safety &Security 2015Sicherheit undZuverlässigkeit fürautomobile Informationstechnik21.–22. April 2015, StuttgartP-241 Thomas Seidl, Norbert Ritter,Harald Schöning, Kai-Uwe Sattler,Theo Härder, Steffen Friedrich,Wolfram Wingerath (Hrsg.)Datenbanksysteme fürBusiness,Technologie undWeb (BTW 2015)04.–06.März 2015, HamburgP-242 Norbert Ritter, Andreas Henrich,Wolfgang Lehner, Andreas Thor,Steffen Friedrich, Wolfram Wingerath(Hrsg.)Datenbanksysteme fürBusiness,Technologie undWeb (BTW 2015) –Workshopband02.–03.März 2015, HamburgP-243 Paul Müller, Bernhard Neumair, HelmutReiser, Gabi Dreo Rodosek (Hrsg.)8.DFN-ForumKommunikationstechnologien06.–09. Juni2015, LübeckP-244 Alfred Zimmermann,Alexander Rossmann (Eds.)Digital Enterprise Computing(DEC 2015)Böblingen, Germany June 25-26, 2015P-245 Arslan Brömme, Christoph Busch ,Christian Rathgeb, Andreas Uhl(Eds.)BIOSIG 2015Proceedings ofthe14th InternationalConference oftheBiometrics SpecialInterest Group09.–11. September 2015Darmstadt, GermanyP-246 Douglas W.Cunningham, Petra Hofstedt,Klaus Meer, Ingo Schmitt (Hrsg.)INFORMATIK 201528.9.-2.10. 2015, CottbusP-247 Hans Pongratz, Reinhard Keil (Hrsg.)DeLFI 2015 –Die13.E-LearningFachtagung Informatik derGesellschaftfürInformatik e.V.(GI)1.–4. September 2015MünchenP-248 Jens Kolb, Henrik Leopold, JanMendling(Eds.)Enterprise Modelling andInformationSystems ArchitecturesProceedings ofthe6thInt.Workshop onEnterprise Modelling andInformationSystems Architectures, Innsbruck, AustriaSeptember 3-4,2015P-249 Jens Gallenbacher (Hrsg.)Informatikallgemeinbildend begreifenINFOS 2015 16.GI-FachtagungInformatik undSchule20.–23. September 2015P-250 Martin Engstler, Masud Fazal-Baqaie,Eckhart Hanser, Martin Mikusz,Alexander Volland (Hrsg.)Projektmanagement undVorgehensmodelle 2015Hybride Projektstrukturen erfolgreichumsetzenGemeinsame Tagung derFachgruppenProjektmanagement (WI-PM) undVorgehensmodelle (WI-VM) imFachgebiet WirtschaftsinformatikderGesellschaft fürInformatik e.V.,Elmshorn 2015P-251 Detlef Hühnlein, Heiko Roßnagel,Raik Kuhlisch, JanZiesing (Eds.)Open Identity Summit 201510.–11. November 2015Berlin, GermanyP-252 Jens Knoop, Uwe Zdun (Hrsg.)Software Engineering 2016Fachtagung desGI-FachbereichsSoftwaretechnik23.–26. Februar 2016, WienP-253 A.Ruckelshausen, A.Meyer-Aurich,T.Rath, G.Recke, B.Theuvsen (Hrsg.)Informatik inderLand-, Forst- undErnährungswirtschaftFokus: Intelligente Systeme –Stand derTechnik undneue MöglichkeitenReferate der36.GIL-Jahrestagung22.-23. Februar 2016, OsnabrückP-254 Andreas Oberweis, Ralf Reussner (Hrsg.)Modellierung 20162.–4. März 2016, KarlsruheP-255 Stefanie Betz, Ulrich Reimer (Hrsg.)Modellierung 2016 Workshopband2.–4. März 2016, KarlsruheP-256 Michael Meier, Delphine Reinhardt,Steffen Wendzel (Hrsg.)Sicherheit 2016Sicherheit, Schutz undZuverlässigkeitBeiträge der8.Jahrestagung desFachbereichs Sicherheit derGesellschaft fürInformatik e.V.(GI)5.–7. April 2016, BonnP-257 Paul Müller, Bernhard Neumair, HelmutReiser, Gabi Dreo Rodosek (Hrsg.)9.DFN-ForumKommunikationstechnologien31.Mai–01.Juni2016, RostockP-258 Dieter Hertweck, Christian Decker (Eds.)Digital Enterprise Computing (DEC 2016)14.–15. Juni2016, BöblingenP-259 Heinrich C.Mayr, Martin Pinzger (Hrsg.)INFORMATIK 201626.–30. September 2016, KlagenfurtP-260 Arslan Brömme, Christoph Busch,Christian Rathgeb, Andreas Uhl(Eds.)BIOSIG 2016Proceedings ofthe15th InternationalConference oftheBiometrics SpecialInterest Group21.–23. September 2016, DarmstadtP-261 Detlef Rätz, Michael Breidung, DagmarLück-Schneider, Siegfried Kaiser, ErichSchweighofer (Hrsg.)Digitale Transformation: Methoden,Kompetenzen undTechnologien fürdieVerwaltungGemeinsame FachtagungVerwaltungsinformatik (FTVI) undFachtagung Rechtsinformatik (FTRI) 201622.–23. September 2016, DresdenP-262 Ulrike Lucke, Andreas Schwill,Raphael Zender (Hrsg.)DeLFI 2016 –Die14.E-LearningFachtagung InformatikderGesellschaft fürInformatik e.V.(GI)11.–14. September 2016, PotsdamP-263 Martin Engstler, Masud Fazal-Baqaie,Eckhart Hanser, Oliver Linssen, MartinMikusz, Alexander Volland (Hrsg.)Projektmanagement undVorgehensmodelle 2016Arbeiten inhybriden Projekten: DasSowohl-als-auch vonStabilität undDynamikGemeinsame Tagung derFachgruppenProjektmanagement (WI-PM) undVorgehensmodelle (WI-VM) imFachgebiet WirtschaftsinformatikderGesellschaft fürInformatik e.V.,Paderborn 2016P-264 Detlef Hühnlein, Heiko Roßnagel,Christian H.Schunck, Maurizio Talamo(Eds.)Open Identity Summit 2016derGesellschaft fürInformatik e.V.(GI)13.–14. October 2016, Rome, ItalyP-265 Bernhard Mitschang, DanielaNicklas,Frank Leymann, HaraldSchöning, Melanie Herschel, JensTeubner, Theo Härder, Oliver Kopp,Matthias Wieland (Hrsg.)Datenbanksysteme fürBusiness,Technologie undWeb (BTW 2017)6.–10. März 2017, StuttgartP-266 Bernhard Mitschang, Norbert Ritter,Holger Schwarz, Meike Klettke, AndreasThor, Oliver Kopp, Matthias Wieland(Hrsg.)Datenbanksysteme fürBusiness,Technologie undWeb (BTW 2017)Workshopband6.–7. März 2017, StuttgartP-267 JanJürjens, Kurt Schneider (Hrsg.)Software Engineering 201721.–24. Februar 2017, HannoverP-268 A.Ruckelshausen, A.Meyer-Aurich,W.Lentz, B.Theuvsen (Hrsg.)Informatik inderLand-, Forst- undErnährungswirtschaftFokus: Digitale Transformation –Wege ineinezukunftsfähigeLandwirtschaftReferate der37.GIL-Jahrestagung06.–07. März 2017, DresdenP-269 Peter Dencker, Herbert Klenk, HubertKeller, Erhard Plödereder (Hrsg.)Automotive –Safety &Security 201730.–31. Mai2017, StuttgartP-271 Paul Müller, Bernhard Neumair, HelmutReiser, Gabi Dreo Rodosek (Hrsg.)10.DFN-Forum Kommunikations-technologien30.–31.Mai2017, BerlinP-272 Alexander Rossmann, AlfredZimmermann (eds.)Digital Enterprise Computing(DEC 2017)11.–12. Juli2017, BöblingenP-273 Christoph Igel, Carsten Ullrich,Martin Wessner (Hrsg.)BILDUNGSRÄUMEDeLFI 2017Die15.e-Learning Fachtagung InformatikderGesellschaft fürInformatik e.V.(GI)5.bis8.September 2017, ChemnitzP-274 IraDiethelm (Hrsg.)Informatische Bildung zum VerstehenundGestalten derdigitalen Welt13.–15. September 2017OldenburgP-277 Lothar Fritsch, Heiko Roßnagel,Detlef Hühnlein (Hrsg.)Open Identity Summit 20175.–6.October 2017Karlstad, SwedenThetitles canbepurchased at:KöllenDruck +Verlag GmbHErnst-Robert-Curtius-Str. 14·D-53117 BonnFax: +49(0)228/9898222E-Mail: druckverlag@koellen.de“Informatische Bildung zum Verstehen und Gestalten der digitalen Welt – INFOS 2017”  ist die 17. Konferenz der Reihe Informatik und Schule, die ihren Fokus auf das breite Spektrum der informatischen Bildung allgemein und der Informatik als Schulfach im Speziellen legt. Dieser Band steht im Kontext der bundesweiten Dis -kussionen zur Bildung  in der digitalen Welt und zeichnet sich daher durch eine große Spannweite aus – sowohl in der Gruppe der Lerner beginnend mit dem Kindergarten als auch in den behandelten Themengebieten. Der Tradition folgend legt auch diese viel Wert drauf , sowohl Theroie und Forschung als auch Praxisbei-trägen angemessenen Raum zu geben.ISSN 1617 -5468ISBN 978 -3-88579 -668-8Gesellschaft für Informatik e.V . (GI)publishes this series in order to make available to a broad public recent ﬁndings in informatics (i.e. computer science and informa -tion systems), to document conferences that are organized in co -operation with GI and to publish the annual GI Award dissertation.Broken down into• seminars• proceedings• dissertations• thematicscurrent topics are dealt with from the vantage point of research and development, teaching and further training in theory and practice.The Editorial Committee uses an intensive review process in order to ensure high quality contributions.The volumes are published in German or English.Information: http://www.gi.de/service/publikationen/lni/I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen  und Gestalten der digitalen Welt – INFOS 2017Proceedings “Informatische Bildung zum Verstehen und Gestalten der digitalen Welt – INFOS  2017”  ist die 17. Konferenz der Reihe Informatik und Schule, die ihren Fokus auf  das breite Spektrum der informatischen Bildung allgemein und der Informatik als  Schulfach im Speziellen legt. Dieser Band steht im Kontext der bundesweiten Dis kussionen zur Bildung  in der digitalen Welt und zeichnet sich daher durch eine  große Spannweite aus – sowohl in der Gruppe der Lerner beginnend mit dem  Kindergarten als auch in den behandelten Themengebieten. Der Tradition folgend  legt auch diese viel Wert drauf , sowohl Theroie und Forschung als auch Praxisbeiträgen angemessenen Raum zu geben.ISSN 1617 -5468 ISBN 978 -3-88579 -668-8Gesellschaft für Informatik e.V . (GI) publishes this series in order to make available to a broad public  recent ﬁndings in informatics (i.e. computer science and informa tion systems), to document conferences that are organized in co operation with GI and to publish the annual GI Award dissertation. Broken down into • seminars • proceedings • dissertations • thematics current topics are dealt with from the vantage point of research and  development, teaching and further training in theory and practice. The Editorial Committee uses an intensive review process in order  to ensure high quality contributions. The volumes are published in German or English. Information: http://www.gi.de/service/publikationen/lni/ 274I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen   und Gestalten der digitalen Welt – INFOS 2017GI-Edition Lecture Notes   in Informatics Ira Diethelm (Hrsg.) Informatische Bildung zum   Verstehen und Gestalten   der digitalen Welt 17. GI-Fachtagung Informatik und Schule 13.–15. September 2017   Oldenburgii “proceedings” — 2017/9/17 — 20:19 — page I — #1 ii i ii i                                    ii “proceedings” — 2017/9/17 — 20:19 — page II — #2 ii i ii i  ii “proceedings” — 2017/9/17 — 20:19 — page III — #3 ii i ii i       Ira Diethelm (Hrsg.)   Informatische Bildung zum Verstehen und Gestalten der digitalen Welt  17. GI-Fachtagung Informatik und Schule      13.–15. September 2017 Oldenburg           Gesellschaft für Informatik e.V. (GI) ii “proceedings” — 2017/9/17 — 20:19 — page IV — #4 ii i ii iLecture Notes in Informatics (LNI) Proceedings Series of the Gesellschaft für Informatik (GI)   Volume P-274  ISBN 978-3-88579-668-8 ISSN 1617-5468  Volume Editor Prof. Dr. Ira Diethelm  Carl von Ossietzky Universität Oldenburg   Fakultät II – Didaktik der Informatik  26111 Oldenburg, Deutschland  ira.diethelm@uni-oldenburg.de  Series Editorial Board Heinrich C. Mayr, Alpen-Adria-Universität Klagenfurt, Austria  (Chairman, mayr@ifit.uni-klu.ac.at) Dieter Fellner, Technische Universität Darmstadt, Germany Ulrich Flegel, Infineon, Germany Ulrich Frank, Universität Duisburg-Essen, Germany Andreas Thor, HFT Leipzig, Germany Michael Goedicke, Universität Duisburg-Essen, Germany Ralf Hofestädt, Universität Bielefeld, Germany Michael Koch, Universität der Bundeswehr München, Germany Axel Lehmann, Universität der Bundeswehr München, Germany Thomas Roth-Berghofer, University of West London, Great Britain Peter Sanders, Karlsruher Institut für Technologie (KIT), Germany Torsten Brinda, Universität Duisburg-Essen, Germany Ingo Timm, Universität Trier, Germany Karin Vosseberg, Hochschule Bremerhaven, Germany Maria Wimmer, Universität Koblenz-Landau, Germany  Dissertations Steffen Hölldobler, Technische Universität Dresden, Germany Thematics Andreas Oberweis, Karlsruher Institut für Technologie (KIT), Germany  © Gesellschaft für Informatik, Bonn 2017 printed by Köllen Druck+Verlag GmbH, Bonn    This book is licensed under a Creative Commons Attribution-NonCommercial 3.0 License.  ii “proceedings” — 2017/9/17 — 20:19 — page V — #5 ii i ii iVorwort  Digitalisierung durchdringt immer mehr Lebensbereiche, daher muss die Bildung darauf reagieren … „Oh nein, nicht schon wieder!“, denken Sie vielleicht an dieser Stelle, und mir geht es ähnlich. Der Grund dafür ist aber erfreulich: Es verging in den letzten zwei Jahren kaum eine Woche, in der nicht eine politisch motivierte Tagung oder ein Feuilleton-Artikel sich dieses Themas in Bezug auf Bildung annahm. Sogar in Talkshows wurde das Thema schon hitzig und lautstark diskutiert. Immer mehr Personen aus den unterschiedlichsten Bereichen befassen sich jetzt neu mit den Themen Digitalisierung und Bildung bzw. Informatik und Schule.  Wir, die Aktiven der Fachdidaktik Informatik, die diese Tagung gestalten und ausrichten, durchlaufen daher gerade die Diskussionen der letzten 30 Jahre erneut und aufgrund des Fortschritts in den Kommunikationstechnologien auch viel schneller, intensiver und öffentlicher. Schon im „Gesamtkonzept für die informationstechnische Bildung“ der Bund-Länder-Kommission von 1987 findet sich die Eingangserkenntnis: „Neue Informationsund Kommunikationstechniken haben sich in den letzten Jahren zu Schlüsseltechniken entwickelt, die in fast alle Bereiche […] Einzug gehalten haben; sie haben auch im Bildungswesen und in unserer täglichen Umwelt Fuß gefaßt.“  Schon damals fragte man sich, welche Bildung für diese Veränderungen nötig ist, ob es ein Schulfach Informatik geben sollte, wie dieses oder ein Minimalprogramm „24 Lektionen Informatik“ aufgebaut sein sollten, was allgemeinbildend an der Informatik ist, wie das Verhältnis zum Einsatz von Computern als Werkzeug und Unterrichtsmedium ist, welchen Beitrag Informatik zur Medienkompetenz leistet, ab wann man mit Kindern Informatik machen kann und ob und ab wann Programmieren Pflicht sein sollte usw.  Seit 1976 gibt die Gesellschaft für Informatik e.V. in Form von Empfehlungen und Erklärungen Antworten auf diese Fragen, seit 1984 auch in den INFOS-Bänden. Dort findet man viele noch immer aktuelle Antworten. Zusammen bilden sie eine Art FAQ zur Informatik in der Schule. Jedem Einsteiger in das Thema seien diese Werke wärmstens empfohlen.  Schon im ersten INFOS-Band stand: „Die Kultusminister haben mehr oder weniger anspruchsvolle Programme zur Integration der Informatik und zur Rechnerausstattung der Schulen angekündigt.“ Auch inhaltlich sind die Überlegungen von damals der jüngsten Strategie der Kultusministerkonferenz zur Bildung in der digitalen Welt nicht unähnlich. Die Politik scheint sich zu wiederholen. Damals wie heute war klar: Es reicht nicht Computer in die Schulen zu stellen. Die Geschichte und auch die Lehrerbildungsforschung hat gezeigt, dass es auch nicht reicht, Unterrichtsmaterialien zu drucken und an die Schulen zu schicken, in der Hoffnung, dass die Lehrkräfte oder gar Schüler sich das schon irgendwie selbst aneignen, den Sinn verstehen und flächendeckend umsetzen.  Aber was reicht denn dann für die sogenannte „Digitale Bildung“, also die Bildung für die und in einer von der Digitalisierung geprägten Welt? Was tun? In den eingeladenen Vorträgen nehmen sich Jens Gallenbacher, Hilbert Meyer, Thomas Knaus und Stephan Noller dieser Frage aus verschiedenen Perspektiven an, kommen aber alle am selben Punkt ii “proceedings” — 2017/9/17 — 20:19 — page VI — #6 ii i ii izusammen: Eine flächendeckende informatische Bildung ist zum Verstehen und Gestalten der digitalen Welt unerlässlich. Auch Hilbert Meyer, der sich hier erstmals mit dem Thema auseinandersetzt, spricht sich für ein Schulfach Informatik in den Sekundarstufen aus und Thomas Knaus betont, dass Medienbildung nicht genug sei und informatische Bildung zur Medienkompetenz dazugehöre.  Diese Erkenntnis ist für die meisten regelmäßigen INFOS-Teilnehmer nicht neu. Neu ist, dass sie sich auch außerhalb dieses Kreises weiter ausbreitet. Immer mehr Länder und Bundesländer führen das Schulfach Informatik (ab Sommer 2017 zuletzt Baden-Württemberg und Finnland), „Computing“ (England), den Lehrplan 21 „Informatik und Medien“ (Schweiz) oder etwas Vergleichbares verpflichtend ein oder haben so etwas schon seit fast 30 Jahren (Polen). Wie vielseitig das Thema jenseits der politischen Dimension ist, zeigen die Beiträge der weiteren Autoren, an deren Anzahl man ebenfalls die Breite der Diskussion ablesen kann. Es wurden 98 Beiträge eingereicht, darunter auch viele, die sich mit der Informatik in der frühen Bildung beschäftigen. In der Regel wurde jeder Beitrag von 3 Reviewern anonym mithilfe von Easychair begutachtet. Das Programmkomitee hat 47 Beiträge, teilweise mit Änderungen, akzeptiert. Darunter sind 13 wissenschaftliche Langbeiträge, 6 wissenschaftliche Kurzbeiträge, 13 Praxisbeiträge und 9 Workshops sowie 6 Poster. Daraus resultiert eine Annahmequote von 48%. Der Band enthält darüber hinaus vier eingeladene Keynotes, von denen zwei als Langfassungen und zwei mit Abstracts enthalten sind. Außerdem wurden einige in ihrer eingereichten Fassung abgelehnte Beiträge in stark gekürzter Form als Poster eingeladen. Alle Posterabstracts sind am Ende des Bandes alphabetisch nach Autoren gereiht. Die Reihung der Keynotes, Vorträge und Workshops folgt dem Tagungsprogramm. Die „Informatik und Schule“ ist die größte deutschsprachige Konferenz zur Informatik in der Schule. So stammt die überwiegende Mehrheit der AutorInnen aus Deutschland. Aber der Band enthält auch Beiträge von Autoren aus Dänemark und der Schweiz.  Zur Durchführung der Tagung sind viele Hände und viele Unterstützer nötig. Ich möchte mich daher allen voran bei meinen Mitarbeitern der Abteilung Didaktik der Informatik ganz herzlich bedanken. Mein Dank gilt auch der Universität Oldenburg mit der Universitätsgesellschaft (UGO), dem An-Institut OFFIS und der Gesellschaft der Freunde und Förderer des OFFIS e.V. (GdFF) für die tatkräftige und finanzielle Unterstützung der Tagung. Ebenso danke ich dem Programmkomitee für die Mitarbeit bei dem Auswahlverfahren und insbesondere Torsten Otto und Arno Pasternak für die Begleitung des ganzen Prozesses. Darüber hinaus geht mein Dank an das Niedersächsische Landesinstitut für schulische Qualitätsentwicklung (NLQ) und die Fachgruppe GI-ibnb und natürlich an die vielen Autoren, ohne die diese Tagung gar nicht stattfinden würde.  Oldenburg, im August 2017 Ira Diethelm   ii “proceedings” — 2017/9/17 — 20:19 — page VII — #7 ii i ii iTagungsleitung  Gesamtleitung: Ira Diethelm, Universität Oldenburg	Leitung des Programmkomitees:  Ira Diethelm, Universität Oldenburg   Torsten Otto, GI-Fachgruppe SH-HILL   Arno Pasternak, TU Dortmund DoktorandInnensymposium: Nils Pancratz, Universität Oldenburg   Jörn Syrbe, Universität Oldenburg   Programmkomitee  Nadine Bergner    RWTH Aachen Torsten Brinda    Universität Duisburg-Essen Michael Brinkmeier   Universität Osnabrück Ulrike Buchholz    Gymnasium Oedeme Lüneburg Katrin Büttner    Mittelschule Heidenau (stellv. Sprecherin FA-IBS) Ira Diethelm    Carl von Ossietzky Universität Oldenburg Leonore Dietrich   Universität Heidelberg Beat Döbeli Honegger   Pädagogische Hochschule Schwyz Jens Gallenbacher   TU Darmstadt Lutz Hellmig    Universität Rostock (Sprecher FA-IBS) Tino Hempel    Richard-Wossidlo-Gymnasium Henry Herper    Universität Magdeburg Alexander Hug    Universität Koblenz-Landau Ludger Humbert    Universität Wuppertal Lennard Kerber    GI-Fachgruppe IBBB Bernhard Koerber   LOG IN Verlag GmbH Peter Micheuz    Alpen-Adria-Universität Klagenfurt Simone Opel    Berufskolleg der Stadt Bottrop Torsten Otto    GI-Fachgruppe SH-HILL Arno Pasternak    TU Dortmund Wolfgang Pohl    BWINF / Bundesweite Informatikwettbewerbe Juergen Poloczek   Studienseminar Oberursel Mareen Przybylla   Universität Potsdam Ralf Romeike    Friedrich-Alexander-Universität Erlangen-Nürnberg Gerhard Röhner    Studienseminar für Gymnasien Darmstadt Carsten Schulte    Universität Paderborn Andreas Schwill    Universität Potsdam Kerstin Strecker    Universität Göttingen Michael Weigend   WWU Münster    ii “proceedings” — 2017/9/17 — 20:19 — page VIII — #8 ii i ii iOrganisationsteam  Christos Chytas Carl von Ossietzky Universität Oldenburg Mareike Daeglau Carl von Ossietzky Universität Oldenburg Wibke Duwe Carl von Ossietzky Universität Oldenburg Anatolij Fandrich OFFIS e.V. Claudia Hildebrandt  Carl von Ossietzky Universität Oldenburg  Nils Pancratz  Carl von Ossietzky Universität Oldenburg Tobias Stuckenberg Carl von Ossietzky Universität Oldenburg Jörn Syrbe  Carl von Ossietzky Universität Oldenburg Manuela Wüstefeld Carl von Ossietzky Universität Oldenburg  Lektorat   Nina Schneider  Carl von Ossietzky Universität Oldenburg  Proceedings-Support  Anatolij Fandrich OFFIS e.V. Nils Pancratz  Carl von Ossietzky Universität Oldenburg Jörn Syrbe  Carl von Ossietzky Universität Oldenburg                          ii “proceedings” — 2017/9/17 — 20:19 — page IX — #9 ii i ii i                           ii “proceedings” — 2017/9/17 — 20:19 — page X — #10 ii i ii iii “proceedings” — 2017/9/17 — 20:19 — page XI — #11 ii i ii iInhaltsverzeichnis Eingeladene Vorträge Jens Gallenbacher Allgemeinbildung in der digitalen, gestalteten Lebenswelt . 19 Hilbert Meyer Unterrichtsqualität in der digitalen Welt .. 29 Thomas Knaus Verstehen – Vernetzen – Verantworten – Warum Medienbildung und informatische Bildung uns alle angehen und wir sie gemeinsam weiterentwickeln sollten  31 Stephan Noller Calliope mini – Informatik zum Anfassen für GrundschülerInnen . 49 Vorträge Nadine Bergner, Hilde Köster, Johannes Magenheim, Kathrin Müller, Ralf Romeike, Ulrik Schroeder, Carsten Schulte Zieldimensionen für frühe informatische Bildung im Kindergarten und in der Grundschule ... 53 Nadine Bergner, Sandra-Jasmin Petrut, Ulrik Schroeder Was Grundschulkinder über Informatik wissen und was sie wissen wollen 63 Katharina Wendlandt, Matthias Wendlandt, Sabrina Ho  mann Algorithmisieren im Grundschulalter  73 Alexander Best Bild der Informatik von Grundschullehrpersonen. Erste Ergebnisse aus qualitativen Einzelfallstudien  83ii “proceedings” — 2017/9/17 — 20:19 — page XII — #12 ii i ii iAndreas Dengel, Ute Heuer Aufbau des Internets: Vorstellungsbilder angehender Lehrkräfte . 87 Beat Döbeli Honegger, Michael Hielscher Vom Lehrplan zur Lehrerinnenbildung Erste Erfahrungen mit obligatorischer Informatikdidaktik für angehende Schweizer Primarlehrerinnen .. 97 Kathrin Müller, Carsten Schulte Ein Modell zur Analyse von Vorstellungen über Roboter und ihrer Funktionsweise ... 109 Torsten Brinda, Friederike Braun Schülervorstellungen im Zusammenhang mit Smartphones . 119 Yannick Schneider, Andreas Mühling Das Konzept Nature of Computer Science . 123 Dorothee Müller Berufswahl Informatiklehrkraft ... 127 Claudia Hildebrandt Mit dem Glauben Berge versetzen ... Die Selbstwirksamkeitserwartung von Informatiklehrkräften .. 137 Nico Steinbach, Eckart Zitzler Ein gamebasierter Ansatz zum Programmierunterricht in der Lehrerinnenund Lehrerbildung .. 147 Andreas Grillenberger, Ralf Romeike Empirische Ermittlung der Schlüsselkonzepte des Fachgebiets Datenmanagement  157 Alexander Hug, Rüdiger Grimm Entwicklung eines Datenschutzkompetenzmodells . 167 Klaus-Tycho Förster Vom Flaggenalphabet zur Vorratsdatenspeicherung: Schülerinnen und Schüler als Multiplikatoren technischer Aspekte der digitalen Welt  171 Jonathan Otto, Michel Welke, Leonard Diekmann, Maria Knobelsdorf Hamburg 2050, Land unter? – Eine „Informatik im Kontext“-Reihe zu Klimamodellierung mit Geographischen Informationssystemen .. 181ii “proceedings” — 2017/9/17 — 20:19 — page XIII — #13 ii i ii iEsther Alzate Romero, Leonore Dietrich Musikprogrammierung mit Sonic Pi. Entwicklung und Untersuchung einer gendersensiblen Unterrichtseinheit zum Programmieren in der Sekundarstufe 1.  191 Dominik Heun Entwicklung eines HTML-Editors unter didaktischen Gesichtspunkten .. 201 Johanna Borsch, Marco Thomas Informatische Bildung in der Sekundarstufe I an nordrhein-westfälischen Schulen ... 211 Lars Prädel, Gerlinde Schreiber Hochschule als außerschulischer Lernort für Schülerinnen und Schüler: Ein pragmatisches Angebot . 221 Dieter Engbring Aller Anfang ist schwer! Wie gelingt der Einstieg in den Informatikunterricht? 227 Nadine Bergner, Thiemo Leonhardt, Ulrik Schroeder Fünf Argumente für einen graﬁschen Programmiereinstieg eine Studie über vier Jahrgangsstufen .. 237 Johannes Fischer, Arno Pasternak Modularisierung im Informatikunterricht aus lernpsychologischer Perspektive 247 Mareen Przybylla, Ralf Romeike Von Eingebetteten Systemen zu Physical Computing: Grundlagen für Informatikunterricht in der digitalen Welt  257 Tobias Jördens, Jens Gallenbacher Quadrologik Modellbildung und Modularisierung auf Basis von Rechnertechnik  267 Marlene Lindner, Sandra Schulz, Niels Pinkwart Integration des Erwerbs von Basiskonzepten der Informatik in den mathematischnaturwissenschaftlichen Unterricht . 277 Eva-Sophie Katterfeldt, Nadine Dittert Ein Framework zur Einordnung programmierbarer Baukästen in interdisziplinäre Bildungskontexte .. 287ii “proceedings” — 2017/9/17 — 20:19 — page XIV — #14 ii i ii iNadine Dittert, Eva-Sophie Katterfeldt Das EduFab-Kit – Ein modularer FabLab-Baukasten für Lehrer*innen .. 291 Oliver Krisch, Petra Kastl, Ralf Romeike 3D-Druck als Motivation für die Einführung in die Programmierung in der Realschule .. 301 Michael Brinkmeier, Stanislav Pisarenko Nutzung eines Robotiksystems zur Förderung der Berufssprache Deutsch .311 Torsten Brinda, David Tobinski, Stefan Schwinem Schülerinteresse an Informatik und Informatikunterricht .. 321 Workshops Katharina Geldreich, Alexandra Funke, Peter Hubwieser Willkommen im Programmierzirkus Ein Programmierkurs für Grundschulen 327 Otto Thiele, Petra Jückstock Der Hamster hat das Programm erfolgreich beendet – Grundschulkinder lernen Programmieren ... 335 Heiko Jochum, Klaus Becker, Martin Zimnol, Daniel Jonietz, Manuel Froitzheim Ein Durchgang durch das Grundfach Informatik (nur) mit dem elektronischen Schulbuch inf-schule.de  345 Barbara Wieczorek, Liz Ribe, Christina B. Class, Michael Brinkmeier Analogien für Programmierkonzepte: Ein Weg zum Computational Thinking 349 Heiko Jochum, Klaus Becker, Martin Zimnol, Manuel Froitzheim Datenbank-Anfragen mit SQL und dem elektronischen Schulbuch inf-schule.de 359 Thomas Rohde, Kolja Strauss, Gregor Alexander Benedikt, René Levens, Lina Haji, Olaf Müller Online kooperieren im Informatikunterricht  363 Esther Alzate Romero, Leonore Dietrich Musikprogrammierung mit Sonic Pi  373ii “proceedings” — 2017/9/17 — 20:19 — page XV — #15 ii i ii iSven Jatzlau, Ralf Romeike Herausforderungen durch neue Programmierkonzepte in blockbasierten Programmiersprachen  383 Michael T. Rücker, Nils Pancratz, Carolin Gold-Veerkamp, Niels Pinkwart, Torsten Brinda Alltagsvorstellungen in der Informatik: Erhebungsmethodik und Implikationen für den Unterricht .. 393 Poster Kensuke Akao Blended-Learning-Module für ein Lehrerfortbildungskonzept zum Informatikunterricht . 405 Mike Barkmin, Matthias Kramer, David Tobinski, Torsten Brinda Unterschiede beim Memorieren von Quelltexten zwischen NovizInnen und ExpertInnen der objektorientierten Programmierung ... 407 Christine Bescherer, Andreas Fest Wirkmodelle zum Computational Thinking in der Grundschule .. 409 Torsten Brinda, Thorsten Terjung Schülervorstellungen von relationalen Datenbanken: eine empirische Untersuchung .. 411 Wibke Duwe Die Handykiste für die Grundschule  413 Christine Günther Informatik mit und ohne Computer Praxisideen für Kita, Hort und Grundschule . 415 Lennart Goecke, Jurik Stiller, Detlef Pech, Niels Pinkwart Informatische Grundbildung: Exploration des Erstzugangs zu Lego Wedo 2.0 und Cubelets von Drittklässler_innen .. 417 Anja Gärtig-Daugs, Katharina Weitz, Ute Schmid Kindliche Modelle der digitalen Welt  419ii “proceedings” — 2017/9/17 — 20:19 — page XVI — #16 ii i ii iMirek Hancl Lernwelten verbinden – Coding und Making mit Minecraft  421 Stefanie Jäckel Zugänge scha  en und Lernen erleichtern Motivierung im Informatikunterricht 423 Matthias Kramer, Vahid Samimi, Torsten Brinda Entwicklung eines Online-Tools zur Bestimmung objektorientierter Programmierkompetenzen ... 425 Peter Micheuz, Gerald Futschek Der Biber der Informatik in Österreich Anmerkungen und Perspektiven .427 Martin Fricke, Kathrin Haselmeier, Ludger Humbert, Dorothee Müller, Daniel Siebrecht Informatik im Unterricht – so geht’s  429 Wolfgang Pohl, Robert Czechowski Jugendwettbewerb Informatik: BWINF füllt die Lücke ... 431 Marc Roßner Zur Berechnung der Komplexität von einfachen objektorientierten Programmen 433 Arne Saatho   Wie stellen sich Schülerinnen und Schüler informatische Konzepte vor und welche sprachlichen Bilder nutzen sie? ... 435 Daniel Siebrecht Sei selbst der Igel! – Umsetzung ausgewählter Elemente der phänomenorientierten Informatik . 437 Anke Steinhäuser Gezieltes eLearning-Angebot für pädagogische Fachkräfte zur Reduktion von Barrieren bei der Vermittlung von Elemtentarinformatik im Vorund Grundschulbereich . 439 Maarit Stierle Informatik in der Elementarpädagogik – Herausforderung für die Professionalisierung pädagogischer Fachkräfte .. 441 Manuel Froitzheim, Klaus-Peter Becker, Martin Zimnol, Heiko Jochum Förderung digitaler Bildung mit elektronischen Schulbüchern ... 443ii “proceedings” — 2017/9/17 — 20:19 — page 17 — #17 ii i ii iEingeladene Vorträgeii “proceedings” — 2017/9/17 — 20:19 — page 18 — #18 ii i ii iii “proceedings” — 2017/9/17 — 20:19 — page 19 — #19 ii i ii i Allgemeinbildung in der digitalen, gestalteten Lebenswelt   Jens Gallenbacher1  Abstract:  Informatik ist allgemeinbildend – das wurde inzwischen deutlich belegt! Dieser Artikel  geht der Frage nach, ob in unserer zunehmend gestalteten und durch menschliche Kre ativität  entstandenen Lebenswelt Schule ohne Informatik überhaupt noch allgemeinbildend sein kann. Auf  diesem Wege wird das klassische Peirce’sche Modell der inferentiellen  Lerntheorie  um die  Komponente „Konstruktion“ erweitert.   Keywords:  Abduktion, Allgem einbildung, Allgemeinbildungskriterien, Deduktion,  Erkenntnisgewinnungsmethoden, Heymann, Induktion, inferentielle Lerntheorie, Konstruktion,  Konstruktivismus, Lebenswelt, Peirce.   1 Einleitung   Vor 14 Jahren zeigte Helmut Witten auf der INFOS 2003 anhand der Aufgaben der  allgemeinbildenden Schule nach Heymann auf, dass Informatikunterricht  allgemeinbildend ist  [Wi2003 ]. Bereits damals hatte in unserer Lebenswelt ein nie  dagewesener Wandel eingesetzt :  Lange Zeit waren die Gesetze der Natur prägender Faktor der Umwelt. Menschen  versuchten diese zu verstehen, durch Beobachtung und Schlussfolgerung, abe r auch  durch Auslegung relevanter  Schriften. Wichtige Methoden der Erkenntnisgewinnung  waren Induktion, das Ableiten allgemeiner Regeln aus spezifischen Fakten und  Deduktion, das Ableiten spezieller Fakten aus allgemeinen Regeln. In  der Informatik  würden wir von B ottom -upund Top-down -Verfahren sprechen.   Diese beiden Methoden könn en alleine  allerdings nicht b eschreiben, was die immer  einflussreicheren  Naturwissensc haften  hervorbrachten : Eines der wichtigsten  geistigen Werkzeuge dieser Disziplinen ist  das hypothesengeleitete Experimentieren.  Die Hypothese ist keine direkte  Schlussfolgerung aus irgendeiner Richtung,  daher führte Peirce für die Bildung einer  Hypothese den Begriff Abduktion ein   [Pe1931]. Das Dreieck nach Abbildung 1  (abgewandelte Form  der Version  [Mi2015 ])                                                            1 TU Darmstadt, Didaktik der Informatik, Hochschulstraße 10, 64289 Darmstadt, jg@di.tu -darmstadt.de  FaktenSchlüsseTheorieAbduktionDeduktionInduktionAbbildung 1: Peirc’sches Dr eieck  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 19ii “proceedings” — 2017/9/17 — 20:19 — page 20 — #20 ii i ii i beschreibt das Modell der  inferen tiellen Lerntheorie .   Bis etwa Ende des letzten Jahrtausends war diese Abfolge von Abduktion, Induktion und  Deduktio n auch vollkommen ausreichend für die Erkenntnisgewinnung – zumindest was  die Belange der Lebenswelt von Schülerinnen und Schülern angeht: Obwohl immer  mehr technische Systeme diese Lebenswelt durchdringen, sind für deren Wirkprinzipien  maßgeblich die Gese tze der Natur. So lässt sich etwa für ein sich näherndes Auto trotz  „unnatürlichem“ Antrieb mit Hilfe der Kenntnis des Grundprinzips „Kraft = Masse mal  Beschleunigung“ abschätzen, ob es sicher ist, die Straße noch  davor zu überqueren oder nicht.  Selbstvers tändlich gab es  auch bereits im 20. Jahrhundert von Menschen konstruierte  Szenarien, für deren Verständnis diese „bekannten“  Gesetzmäßigkeiten nicht s ehr hilfreich waren, etwa innerhalb  eines Atomkraftwerks. Für die Lebenswelt der Schülerinnen  und Schüler spielten diese Ausnahmen allerdings in der Regel  keine Rolle , da die Türen zu entsprechenden Bereichen  meistens verschlossen waren .  Das hat sich grundlegend verändert mit der zunehmenden Miniaturisierung und  Vernetzung elektronischer Komponenten, die die U mwelt zunehmend prägen –  erkennbar in Computern, Spielen od er Geräten zur Unterhaltung sowie  unsichtbar in  Haushaltsgeräten, der Kleidung oder auch „konventioneller“ Technik.  Besonders im  zwischenmenschlichen Bereich wird immer mehr „virtualisiert“ – Treff en finden oft  nicht mehr von Angesicht zu Angesicht statt, sondern mit Hilfe mobil vernetzter Geräte,  „Freundschaften“ werden in den sozialen Medien etabliert oder zumindest protokolliert.  Aktivitäten „online“ bestimmen zunehmend auch den Erfolg „offline“.   Hierbei handelt es sich demnach  um einen sehr relevanten Teil unserer Lebenswelt und  Schule hat  dies bei der Erfüllung ihrer allgemeinbildenden Aufgaben zu berücksichtigen,  wie sie etwa von Heymann sehr gut herausgearbeitet wurden.   Bevor ich im Detail dar auf eingehe, möchte ich dies am Beispiel illustrieren.   Diese fiktive Schlagzeile  der Abbildung 2  ist keine „Fake News“, sondern beruht  durchaus auf einer Studie vom Mai 2011 [U g2011], in der 721 Millionen Menschen mit  69 Milliarden Freun d-Beziehungen unter sucht wurden – eine Größenordnung, die für  empirische Studien äußerst bemerkenswert erscheint .  Allerdings : Einbezogen wurden alle T eilnehmerinnen und Teilnehmer des Dienstes   Facebook, die länger als vier Wochen angemeldet waren und mindestens eine Freund Beziehung hatten. Die meisten davon wissen übrigens bis heute nichts davon, dass sie an  der Studie überhaupt teilgenommen haben. Im Ergebnis w urde tatsächlich  festgestellt ,  dass ca. 84% der „Studienteilnehmerinnen und Studienteilnehmer“  weniger Freunde  hatten als der Durchschnitt ihrer Freunde.   Eine wichtige Frage ist allerdings , welche tatsächliche Relevanz  diese Erkenntnis hat . 20 Jens Gallenbacherii “proceedings” — 2017/9/17 — 20:19 — page 21 — #21 ii i ii i Wir Informatiker kennen  für Problemlösung und Problemanalyse das geistige Werkzeug   der Modellbildung  und w enn wir dieses für die Fragestellung an einem Beispiel  anwenden, kommen wir etwa für eine „normale“ Situation mit 9 Freunden zu einem  Graph en wie in  Abbildung  3: Knoten repräsentieren die Personen, Kanten die  Freundschaftsbeziehungen. Ein sehr kontaktfreudiger Mensch steht  hier im Mittelpunkt  und hat recht viele Freundschaften. Um ihn herum gi bt es mehrere Cliquen, die neben   ihm nur zwei weitere Freunde kennen .  Damit haben wir eine Person mit acht Freunden und  durchschnittlich drei Freundesfreunden sowie acht  Personen mit dre i Freunden, aber durchschnittlich 4,67  Freundesfreunden. So  haben „nachweislich“ acht von  neun Personen ( also sogar knapp 89%) weniger  Freunde als der Durchschnitt ihrer Freunde.  Das  Beispiel bestätigt also  einerseits  die Studie,  andererseits  kann man dara n auch relativ leicht  erahnen , dass Menschen mit vielen Freunden immer  häufiger in die Freundesfreunde -Statistik eingehen als  solche mit wenigen Freunden  und damit das  Facebook -Ergebnis nicht mehr sonderlich  Abbildung 2: Fiktive Schlagzeile   Abbildung 3: Freunde -Graph  Allgemeinbildung in der digitalen, gestalteten Lebenswelt 21ii “proceedings” — 2017/9/17 — 20:19 — page 22 — #22 ii i ii i überraschend ist .  Zu dem gleichen Ergebnis kommt  tatsächlich zwanzig Jahre vor Facebook auch Scott  Lauren Feld, der dies als „Freundschaftsparadox“ bezeichnet [Fe1991]: Wenn in einer  Gruppe mit Freundschaftsbeziehungen auch nur zwei  Personen unterschiedlich viele  Freunde haben, hat immer die Mehrheit vo n Personen weniger Freunde als der  Durchschnitt ihrer Freunde.   Dieses Beispiel macht klar, wie wichtig i nformatisches und i ngenieurmäßiges Denken  sowie die Kenntnis um  informatische Methoden  zusammen mit der Kompetenz, diese  sinnvoll anzuwenden,  sind, um A ussagen richtig interpretieren zu können . Im konkreten  Beispiel ist  der direkte  Einfluss auf die Lebenswelt eher untergeordnet , das Titelbild  vom Anfang dieses Artikels sicherlich künstlich . Diese Relevanz ist aber zum Beispiel  ganz sicher gegeben im Zusam menhang mit Systemen, die für uns Entscheidungen  treffen. Das kann auch die Entscheidung sein, uns mit bestimmte n Informationen zu  versorgen  oder uns dies e vorzuenthalten.   So forderte Raj Reddy, Turi ngpreisträger von 1994,  2016 in Heidelberg in seinem Vor trag „Too Much  Information and Too Little Time“  [HLF2016]  sogenannte „Guardian Angels“ und „Cognition  Amplifiers“ ein. Das sind Softwareprodukte, die für  uns die  Flut verfügbarer Information en automatisiert  sichten und nur noch interessante Neuigkeiten,  Nachrichten und andere Details anzeigen.   Der Kommentar von William Kahan, Turing preisträger  von 1989, auf den Vortrag war „Tell me only, what I want  to hear, to reinforce my beliefs, even if they are wrong.“ Er  spricht damit an, was wir im deutschen Sprach raum als  „Echokammer -Effekt“ oder auch  „Filterblase“  kennen .  Software auf Mobiltelefonen wie „Siri“ und Geräte wie  „Alexa“ dringen einerseits immer weiter in unsere  Privatsphäre ein, machen ihre Benutzer transparent und  überwachbar. Andererseits gestalten sie zusätzlich aktiv  unsere  Musikauswahl , unser Medienprogramm, die  Nachrichten, die uns erreichen . Die Entwickler betonen immer wieder, dass dies  strikt  dem eigenen Profil gemäß  erfolge, also nur den – ausgesprochenen und  unausgesprochenen – Wünschen der Benutzer entsprechend . Selbst wenn wir in dieser  Beziehung den Entwicklern nur beste Absichten unterstellen und Missbrauch  ausschließen, kann es aufgrund der Filterblase passieren, dass wir  vom System  nach  einer Zeit nur noch das bekommen, was wir auch hören wollen, ohne uns neuen   Aspekte n und neuen Ideen öffnen zu müssen . Sehr bequem, aber auch etwas einseitig !  Schule muss zuminde st die Möglichkeit eröffnen, hier  eine informierte Meinung zu  bilden.   22 Jens Gallenbacherii “proceedings” — 2017/9/17 — 20:19 — page 23 — #23 ii i ii i 2 Peirce reloaded   Erkenntnisgewinnung allgemein, insbesonder e aber in der Schule , muss sich heute auch  mit den Wirkprinzipien gestalteter Systeme auseinandersetzen, denn nur ein Verständnis  der Wirkprinzipien erlaubt auch eine mündige Entscheidung – privat für oder gegen die  Nutzung bestimmter Medien und Kommunikat ionskanäle, im Sinne staatsbürgerlichen  Handel ns aber auch in Bezug auf den möglichen, fürsorglichen regulatorischen Eingriff   beim  Umgang m it Medien und Systemen .  Wie gewinnt man aber nun unter der Annahme konstruktivistisch er Lernpsychologie  Erkenntnisse?  Das in Abbildung 1 visualisierte Modell inferentieller Lerntheorie nach  Peirce beschreibt die Möglichkeiten,  naturwissenschaftliche Er kenntnisse zu gewinnen,  recht gut:   Abduktion ist die „Kunst “, aus den Beobachtungen der Lebenswelt Hypothesen  abzuleiten,  die eventuell dazu dienen, das Wissen der Menschheit zu erweitern.  Deduktion würden wir Informatiker am ehesten als „top -down“ -Verfahren beschreiben:  Aus allgemeinen Regeln und Erkenntnissen werden spezielle Details abgeleitet.  Indukt ion wiederum bezeichn et die umgekehrte Vorgehensweise, wenn aus spezifische n  Regeln und Beobachtungen allgemeine, weiter greifende Erkenntnis se erschlossen  werden . Der Unterschied zur Abduktion ist dabei, dass es sich hier um mehr als eine  Theorie bzw. Hypothese handelt.   Diese  Methoden der Erkenntnisgewinnung finden wir im Schulunterricht wieder. Auch  hier konstruieren Schülerinnen und Schüler im Idealfall ihre Vorstellungen, indem sie  aus wahrgenommenen Details allgemeine Regeln ableiten oder indem sie von den  allgemeinen Rege ln, wie sie etwa aus Schulbüchern recherchiert werden, spezifische  Antworten z u aufgeworfenen Fragen ableiten und erweitern so das individuelle Bild  ihrer Lebenswelt.   Wenn wir diese beiden Methoden der Erkenntnisgewinnung im Informatikunterricht  anwenden, betrachten wir allerdings Computersys teme, Software und die  dahinter stehenden Ideen in gleicher Weise wie Naturphänomene: Wie Gegenstände, die   entweder unveränderl ich vom Universum vorgegeben sind  oder zumindest von  „Experten“  bzw. „Nerds“ , die in der Vors tellung sehr weit weg von der Lebenswelt der  Schülerinnen und Schüler sind. Die Betrachtung vieler Unterrichtsmaterialen zu Technik  und Informatik zeigt, dass diese Sichtweise von außen im System Schule recht verbreitet  ist. Das für die Natur und Geistesw issenschaften sicherli ch meistens sinnvolle  Paradigma  galt allerdings f ür Informatik wie für andere Ingenieurdisziplinen im engen  Sinne noch nie und es wird immer deutlicher, dass es für die heutige Lebenswelt sogar  fehlleitet : Informatiksysteme sind von M enschen gestaltet! Menschen, die altersmäßig  oft viel näher an den Schülerinnen und Schülern als an den Lehrpersonen liegen.   Um diese Tatsache im allgemeinbildenden Sinne  zu berücksichtigen, lässt sich der  verbundene Prozess der Erkenntnisgewinnung mit dem  Peirce’schen Modell nicht mehr Allgemeinbildung in der digitalen, gestalteten Lebenswelt 23ii “proceedings” — 2017/9/17 — 20:19 — page 24 — #24 ii i ii i sinnvoll beschreiben, d enn die Lernenden gehen  darüber hinaus, Erkenntnisse zu   vorhandenen Fakten zu gewinnen:  Vielmehr wird die Lebenswelt um neue Fakten  erweitert.  Traditionell kennen wir das auch schon aus Unterrichtsfäch ern wie „Deutsch“  oder „ Kunst “, in denen Schülerinnen und Schüler ihre Lebenswelt durch Aufsätze oder  Kunstwerke erweitern. Anhand von auf Softwareprodukten beruhenden Systemen wie  Facebook, Uber oder auch Rootkits2 wird jedoch deutlich, dass die Wirkbreit e der  Gestaltung durch Informatik systeme  deutlich größer ist.   „Konstruktion“ bildet daher heute neben Abduktion, Deduktion und Induktion eine  vierte wichtige Säule der Erkenntnisgewinnung , und könnte das Peirce -Dreieck zum  Beispiel in der Art der Abbildung  4 erweitern . Im folgenden Abschnitt wird dies im   Licht der Heyma nn’schen Aufgaben der allgemeinbildenden Schulen betrachtet.     Abbildung 4: Erweitertes Peirce’sches Dreieck   3 Informatik und Allgemeinbildung   Hans Werner Heymann identifiziert in [He2013] fäch erunabhängig sieben Aufgaben des  allgemeinbildenden Schulsystems: Lebensvorbereitung, Stiftung kultureller Kohärenz ,  Weltorientierung , Anleitung zum kritischen Vernunftgebrauch , Entfaltung von  Verantwortungsbereitschaft , Einübung in Verständigung und Koope ration  und Stärkung  des Schüler -Ichs. Anhand wichtiger Zitate aus dem Werk wird im Folgenden  der Bezug  zur Informatik und der gestalteten heutigen Lebenswelt der Schülerinnen und Schüler  hergestellt.   Lebensvorbereitung  meint demnach die „Vorbereitung auf a ll das, was  Heranwachsende jetzt oder später für ihre Lebensführung in der Gesellschaft, in der sie  aufwachsen, mit großer Wahrscheinlichkeit notwendig und unverzichtbar brauchen und                                                            2 „root“ bezeichnet bei bestimmten Betriebssystemen Administratorrechte. Das „rootkit“ ist davon abgeleitet  ein meistens auch von Laien zu bedienendes Software -Handwerkszeug, das den Einbruch in fremde Systeme  ermöglicht. Oft sind in solche rootkits no ch Hintertüren eingebaut, die auch den Autoren des Werkzeugs die  Möglichkeit einräumen, ein damit kompromittiertes System für eigene Zwecke auszunutzen.  24 Jens Gallenbacherii “proceedings” — 2017/9/17 — 20:19 — page 25 — #25 ii i ii i was sie ohne Schule großenteils nicht lernen würden.“   Betrachten wir Info rmatiksysteme wie Naturphänomene, können wir sie „verstehen“  lernen und in diesem Zusammenhang sicherlich auch bedienen lernen. Wichtigster  Aspekt ist aber das „Begreifen“ der Systeme, was das Nachvollziehen der ( von  Menschen ausgedachten ) Wirkprinzipien i mpliziert, zusammen mit der Möglichkeit,  solche Systeme auch selbst zu gestalten.   Der letzte Punkt ist besonders relevant im Zusammenhang mit der Stiftung kultureller  Kohärenz : „In allen Fächern sind zentrale Ideen aufzusuchen, mittels derer sich  Brücken s chlagen lassen zwischen Fach und außerfachlicher Kultur, anhand derer sich  deutlich machen lässt, was das Fach (bzw. die korrespondierende Wissenschaft) für die  Kulturentwicklung bedeutet, wie es mit ihr verwoben ist, wie es mit dem täglich  erfahrbaren ges ellschaftlichen Alltag verknüpft ist. […] In den zentralen Ideen eines  Faches […] verbindet sich der diachrone mit dem synchronen Aspekt der kulturellen  Kohärenz: Die zentralen Ideen sind historisch gewachsen, repräsentieren also eine  Geschichte; und sie s tehen für die Wechselwirkung zwischen Fach und außerfachlicher  Kultur, transzendieren also die Grenzen des einzelnen Faches.“   Ebenfalls i m direkte n Zusammenhang dazu steht  die Einübung in Verständigung und  Kooperation : „Welchen Kurs die hochentwickelten Ge sellschaften […] nehmen können  und müssen, darüber dürfen nicht allein Experten befinden, sondern das sind Fragen, die  alle angehen und über die alle Staatsbürger als im Höchstmaß betroffene Laien  mitentscheiden müssen. Die Rationalität derartiger Ents cheidungen hängt in hohem  Maße von der gelingenden Kommunikation zwischen Laien und Experten ab.“   Viele moderne Wissenschaften – insbesondere Ingenieurwissenschaften und Informatik  – arbeiten weitgehend konstruktiv gestaltend. Ein Unterrichtsfach, das dies en Aspekt der  Erkenntnisgewinnung aufgreift, ist daher obligatorisch ! Andernfalls besteht die Gefahr  zweier Parallelkulturen: Auf der einen Seite die der „Nerds“, die (aufgrund  außerschulischer Bemühungen) Einblick in die Gestaltung moderner Systeme haben und  als „Technokraten“ de facto entscheidende Teile der Lebenswelt gestalten und  bestimmen. Auf der anderen Seite die  Kultur der „N ormalen“, zu denen die gewählten  Vertreter der Mehrheit der Bürgerinnen und Bürger gehören, die aber keine aktiven und  auch k eine passiven Kompetenzen bei der Gestaltung der Systeme haben, sondern  lediglich Anwender sind.   Heymann: „F ür die Idee der Weltorientierung  ist ein gewisses ‚Luxurieren‘  des  Wissens charakteristisch, gestützt auf die Annahme, dass ein differenziertes Welt bild  einen weiten Urteilshorizont erschließt und sowohl die Klärung des eigenen Standortes  in der Welt wie auch seine Relativierung erleichtert. “   Dieses „Luxurieren“ zeichnet sich in der heutigen Lebenswelt durch immer kürzere  Innovationszyklen aus, die d as System Schule zunehmend überfordern. Statt mit Hilfe  traditioneller Erklärmodellen  den Innovationszyklen hinterherzuhinken , sollte  Weltorientierung durch Erweiterung dieser Erklärmodelle um die Konstruktion und die Allgemeinbildung in der digitalen, gestalteten Lebenswelt 25ii “proceedings” — 2017/9/17 — 20:19 — page 26 — #26 ii i ii i gestalterischen Aspekte ermöglicht wer den und auf diese Weise der  Charakter der  Innovation selbst als relevanter Lerngegenstand ins Curriculum einziehen .  Zum kritischen Vernunftgebrauch  schreibt Heymann: „Wer seine Vernunft kritisch  gebrauchen kann, wird weder ein bequemer Untertan sein, der f raglos hinnimmt, was  Lehrer, Politiker und andere Vertreter institutioneller Macht in der öffentlichen  Verwaltung, in Kirche, Wirtschaft und Wissenschaft ihm zumuten, noch wird er sich  umstandslos einem vermeintlichen oder faktischen Druck der „öffentliche n Meinung“  beugen. Kritische Vernunft birgt politische Sprengkraft in sich insbesondere angesichts  „unvernünftiger“ Verhältnisse.“   Die im letzten Abschnitt erwähnte „Echokammer“ legt nahe, dass heute ergänzend zu  Verwaltung, Kirche, Wirtschaft und Wissen schaft noch informatisch bzw.  ingenieurmäßig gestaltete Systeme betrachtet werden müssen, die – gegebenenfalls ganz  ohne Hintergedanken ihrer Entwickler – Einfluss auf Meinungsbildung nehmen oder  aber auch in Zeiten postfaktischer Politik und Fake -News ganz bewusst zur  Manipulation ausgenutzt werden können.  Kritischen Vernunftgebrauch rein durch die  Betrachtung von außen, aus der Bedienersicht zu erreichen, wird erfahrungsgemäß sehr  schw ierig! Viel effizienter ist, wenn eine gewisse Durchdringung der  Gestal tungsprinzipien erreicht wurde und Basis für die kritische Reflexion skompetenz  der Schülerinnen und Schüler  ist.  Die Entfaltung von Verantwortungsbereitschaft  grenzt Heymann folgendermaßen ab:   „Verantwortliches Handeln setzt beides voraus, Gefühl und Wisse n. Das  Verantwortungsgefühl allein kann mich nicht hindern, im Sinne der  Verantwortungsethik, die mir die Folgen meines Handelns zurechnet, unverantwortlich  zu handeln, wenn ich nämlich zu wenig weiß. Das unverantwortliche Handeln ist dann  uninformiertes o der dummes Handeln. Wissen und kritischer Vernunftgebrauch allein  können mich andererseits nicht hindern, gewissenlos zu handeln, wenn mir  Verantwortungsgefühl und Verantwortungsbewusstsein abgehen. Das unverantwortliche  Handeln ist in diesem Falle böses, zynisches oder zumindest leichtfertiges Handeln.“    Schule sollte hier mindestens dafür sorgen, dass sich niemand auf die erste Position  zurückziehen kann , indem Probleme, die vermeintlich aus dem gestalteten Teil der  Lebenswelt entstehen der alleinigen Ver antwortung der „Nerds“ und damit „der  anderen“ zugeordnet werden! Auch hierfür ist daher im Unterricht ein Minimum an  Einblick in die Gestaltung selbst nötig.   Eine der wichtigsten Aufgaben allgemeinbildender Schulen ist sicher  die Stärkung des  Schüler -Ichs: „Ich-Stärkung zielt auf die Entwicklung von Selbstbewusstsein,  Selbstvertrauen, personaler Identität, auf die Fähigkeit, eigene Ziele, Wünsche und  Vorstellungen klar zu erkennen und handelnd zu verwirklichen, mit den eigenen Stärken  und auch Schwächen r ealistisch umzugehen.“   Die Möglichkeit, ohne großen finanziellen Aufwand Systeme gestalten zu können, die  unsere Lebenswelt und die Art zu leben sowie als Gesellschaft zusammenzuleben 26 Jens Gallenbacherii “proceedings” — 2017/9/17 — 20:19 — page 27 — #27 ii i ii i nachhaltig verändern ist – unabhängig davon, ob sich die Schülerinnen un d Schüler  dafür entscheiden, diese Möglichkeit zu nutzen – wahrscheinlich die bedeutendste   Komponente für die  Stärkung des Schüler -Ichs. Eine allgemeinbildende Schule muss  dafür Sorge tragen, dass diese Möglichkeit nicht nur Kindern aus sogenannten  „bildun gsnahen“ Schichten zur Verfügung steht, die sich das Prinzip der Konstruktion  und Gestaltung auch außerhalb der Schule aneignen können. Alle sollen von diesen  Möglichkeiten profitieren und selbstbewusst  erwachsen werden, mit dem Vertrauen auf  das eigene Po tential zur Gestaltung .  4 Resümee   Helmut Witten kam bereits 2003 berechtigterweise zum Ergebnis, dass Informatik  allgemeinbildend ist . Für die heutige Lebenswelt und die mit ihrer stetigen Veränderung   verbundene immer weiter  steigende Dominanz gestalteter Sy steme muss erweiternd  festgestellt werden:   Eine allgemeinbildende Schule ist ohne die Anerkennung und Berücksichtigung des  wachsenden Anteils der von Menschen (mit -)gestalteten Lebenswelt nicht möglich! Im  konstruktivistischen Lernprozess ist somit die Erkenntnisgewinnungsmethode  „Konstruktion“  als wichtiges allgemeinbildendes Element einzubeziehen .  Für d ie Vermittlung der abgeleiteten Kompetenzen sind grundständig in  informatisch  bzw. ingenieurmäßig -gestalterischem Denken ausgebildete Lehrpersonen obligat orisch ,  was zwingend ein eigenständiges Unterrichtsfach  voraussetzt . Informatik erfüllt diese  Bedingungen als einziges bundesweit. Die Forderung nach einem  bundes länderübergreifenden  Pflichtfach Informatik ist daher  gleichzeitig die Forderung  nach einer mo dernen  allgemeinbildenden Schule.   Allgemeinbildende Schule ist heute ohne das für alle Schülerinnen und Schüler  verbindliche Pflichtfach Informatik mit angemessenem Stundenumfang nicht  möglich!   5 Literaturverzeichnis   [Fe1992]  Scott L. Feld : Why do your frie nds have more friends than you do? , American Journal  of Sociology, 96(6), 1991   [He2013]  Hans Werner Heymann: Allgemeinbildung und Mathematik . Studien zur  Schulpädagogik und Didaktik, Bd. 13. Weinheim/Basel: Beltz 1996 Neuauflage 2013   [HLF2016]  Raj Reddy:  Too Much Information and Too Little Time, Vortrag auf dem Heidelberg  Laureate Forum am 22. September 2016,   online unter http://www.heidelberg -laureate -forum.org/event_2016/    Allgemeinbildung in der digitalen, gestalteten Lebenswelt 27ii “proceedings” — 2017/9/17 — 20:19 — page 28 — #28 ii i ii i [Mi2015]  Gerhard Minnameier : Tightening the Peirce -Strings  Forms of Abduction in the  Context of an Inferential Taxonomy  in Magnani, L. & Bertolo tti, T. (Eds.) (2015),   Springer handbook of modelbased  science. Berlin: Springer   [Pe193 1] Charles Sanders Peirce : The Colle cted Papers of Charles Sanders Peirce  Vols. I -VI ed.  Charles Hartshorne and Paul Weiss (Cambridge, MA:  Harvard University Press, 1931 1935), Vols. VII -VIII ed. Arthur W. Burks (same  publisher, 1958)  in der Electronic  Edition  1994   [Ug2011]  Johan Ugander , Brian Karrer , Lars Backstrom, Cameron Marlow : The Anatomy of the  Facebook Social Graph , eprint arXiv:1111.4503 , 11/2011   [Wi2003]  Helmut Witten: Allgemeinbildender Informatikunterricht? Ein neuer Blick auf H. W.  Heymanns Aufgaben allgemeinbildender Schulen  in Informatische Fachkonzepte im  Unterricht, INFOS 2003, 10. GI -Fachtagung Informatik und Schule, 17. -19. September  2003 in Garching bei München , Seiten  59-75         28 Jens Gallenbacherii “proceedings” — 2017/9/17 — 20:19 — page 29 — #29 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 11 Unterrichtsqualität in der digitalen Welt Hilbert Meyer1 Ich bin von Haus aus Bildungstheoretiker und kein Mediendidaktiker. Deshalb bewege ich mich bei diesem Vortrag auf dünnem Eis. Das von der Konferenzleitung vorgeschlagene Thema habe ich zu folgender Frage konkretisiert: Welche Ansprüche an die Gestaltung des Informatikunterrichts und an die Arbeit mit digitalen Medien in anderen Fächern folgen aus dem aktuellen Diskussionsstand zur Unterrichtsqualität? Der Vortrag besteht aus vier Abschnitten: In der Einleitung (Abschnitt 1) wird kurz skizziert, welche Diskursverweigerungen (Hartmut von Hentig), welche schlecht fundierten Attacken (Manfred Spitzer) und welche behutsamen Annäherungsversuche (Klaus Zierer) Didaktiker und neurowissenschaftliche Hobbydidaktiker im Blick auf digitale Bildung und digitalen Medieneinsatz im Unterricht in den letzten Jahren vorgenommen haben. Ich plädiere dabei für größtmögliche Nüchternheit. Die Digitalisierung der Welt ist weit fortgeschritten. Es geht nicht mehr um die Frage „Wollen wir sie reinlassen?“, sondern um die Frage: Wie können digitale Medien besser als bisher für selbstreguliertes Lernen und für transformationale Bildungsprozesse (Hans-Christoph Koller) genutzt werden? Im Abschnitt 2 („Was ist guter Unterricht?“) wird anhand von vier empirisch basierten Kriterienkatalogen zum „guten Unterricht“ (von Meyer, von Helmke, von der Forschergruppe COACTIV, von Good et al.) analysiert, dass sich diese Kataloge weltweit annähern. Mein Fazit: Ein übergeordnetes Kriterium ist und bleibt für mich die Frage, ob im Unterricht sinnstiftendes Kommunizieren stattgefunden hat. Im Abschnitt 3 („Was sagt die Forschung?“) erläutere ich beispielhaft an einigen wenigen Forschungsergebnissen, worauf bei Urteilen über Unterrichtsqualität zu achten ist: 1. Wir müssen zwischen Oberﬂächenund Tiefenstrukturen unterscheiden. 2. Wir sollten zur Kenntnis nehmen, dass sich der Unterrichtsprozess, wie schon von Johann F. Herbart postuliert, in einem fortwährenden Wechsel von Vertiefung und Besinnung entfalten. 3. Deshalb hat der von der Lehrperson angeleitete Metaunterricht auch im Unterricht mit und über digitale Medien eine zentrale Bedeutung. 1Hilbert Meyer, Prof. em., Kastanienallee 40, 26121 OldenburgI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 29ii “proceedings” — 2017/9/17 — 20:19 — page 30 — #30 ii i ii i4. Wir sollten dabei aber beachten, dass Lehrerinnen und Lehrer Weltmeister im Kompensieren von Schwächen im einen Kompetenzfeld durch Stärken im andern sind. Im Abschnitt 4 geht es um die Frage: „Was tun?“ Ich votiere gegen ein eigenes Unterrichtsfach „Informatik“ in der Grundschule, aber für ein solches Fach in den Sekundarstufen. Ich skizziere mein Drei-Säulen-Modell der Unterrichtsentwicklung (aus Meyer 2015) und plädiere dafür, die drei Grundformen der Direkten Instruktion, des Individualisierenden und des Kooperativen Unterrichts zu unterscheiden. In allen drei Grundformen können digitale Medien eine wichtige Rolle spielen – aber immer kommt es darauf an, die Lehrer-SchülerInteraktionen zu stärken. Dieser Abschnitt endet mit dem Motto: „Mischwald ist besser als Monokultur.“ Ein Handout mit der schriftlichen Fassung des Vortrags wird zu Beginn des Vortrags verteilt. Keywords: Unterrichtsqualität; Informatikunterricht; Medien im Unterricht; sinnstiftendes Kommunizieren30 Hilbert Meyerii “proceedings” — 2017/9/17 — 20:19 — page 31 — #31 ii i ii i Verstehen – Vernetzen – Verantworten   Warum Medienbildung  und informatische Bildung  uns alle  angehen und wir sie gemeinsam weiterentwickeln sollten    Thomas Knaus1   Abstract:  Digital  ist ein Begriff, der uns heute in sämtlichen Lebensbereichen begegnet. Das   „Digitale“ ist aber nicht nur ein omnipräsenter Hashtag , sondern bezeichnet technologische und  technische Entwicklungen, die in hohem Maße subjekt und gesellschaftsprägend sind. Diese  sozialisatorische Relevanz des Digitalen soll im vorliegenden Beitrag anhand von fünf Thesen  exemplarisch aufgezeigt werden: So beeinflussen digitale Medien unsere Wahrnehmung und damit  die produktive Verarbeitung von Wirklichkeit. Aufgrund der ständigen Verfügbarkeit (mobiler)  digitaler Medien, Werkzeuge und technischer Net ze umgeben uns auch unsere sozialen  Netzwerke  permanent, was neue Formen sozialer Eingebundenheit sowie interessen und kontextbezogene  Vergemeinschaftungen ermöglicht. Da wir mit digitalen Medien nicht nur Umwelt wahrnehmen,  sondern zunehmend auch selbst  Realität in Form von digitalen Artefakten und Werkstoffen  erzeugen , verschmelzen einerseits unsere „analogen“ und „virtuellen“ Realitäten; andererseits  werden Realitäts konstruktionen  unmittelbar erlebbar.  Hiervon kann die Entwicklung von Subjekt  und Gesell schaft nicht unbeeindruckt bleiben – denn digitale Medien und Werkzeuge sind  inzwischen in sämtlichen Sozialisationsinstanzen allgegenwärtig und entwickeln sich aufgrund  ihrer neuen sozialen Bedeutung zunehmend vom Inter face zum kommunizierenden Gegenüber .  Auslöser von subjekt und gesellschaftskonstituierenden Konstruktionsprozessen sind also nicht  nur andere Menschen, sondern auch deren mediale Artefakte – Dinge , die mittels digitaler  Werkzeuge produziert  und manipuliert  werden und Individuen in zunehmend em Maße  kommunikativ vernetzen. Digitale Medien sollten daher sowohl als Mittel als auch als Gegenstand  einen zentralen Platz im schulischen Unterricht einnehmen. Zudem zielt die Medienbildung auf die  Bildung des Subjekts. Die gesellschaftliche Teilhabe se tzt künftig das mediengebildete Subjekt  voraus. Doch wird es nicht mehr nur in der Hand der oder des Einzelnen liegen, Kontrolle über die  Werkstoffe der Zukunft, die Daten und Algorithmen, zu behalten. Da die Prozesse hinter dem  Interface der Maschine für Menschen nicht mehr unmittelbar durchschaubar und kontrollierbar  sind, ist gleichermaßen auch eine Sensibilisierung für Technik und technische Prozesse desiderat,  die hinter den digitalen Medien und in den Werkzeugen stecken. Denn unsere sozialen Realitäte n,  ob digital oder analog, sind aktiver und individueller denn je gestaltbar  – in dieser Gestaltbarkeit  steckt gleichermaßen ein zu nutzendes Potential sowie  eine zu erbringende Pflicht. Aus diesen  Potentialen und sich eröffnenden Gestaltungsspielräumen he raus erwächst unsere Verantwortung,  Medienerziehung und informatische Bildung idealerweise gemeinsam  weiterzudenken.   Keywords:  Medienpädagogik, Bildungsinformatik, digitale Medien, Medienbildung,  informatische Bildung, „digitale Bildung“, „digitales Lerne n“, Schule, Mensch -Maschine Interaktion, Kommunikation, digitale Werkzeuge und Werkstoffe, Software, Programmierbarkeit,  Adaptivität, Vernetzung, Konvergenz, Symbolischer Interaktionismus, Sozialisation,  Sozialisationstheorien, Mediensozialisation, KMK -Strategie, Dagstuhl -Dreieck.                                                             1 Wissenschaftlicher Direktor des FTzM der Frankfurt University of Applied Sciences, Nibelungenplatz 1,  60318 Frankfurt am Main, knaus@ftzm.de.  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 31ii “proceedings” — 2017/9/17 — 20:19 — page 32 — #32 ii i ii i 1 Turn : Digital , medial – egal?   Digital ist das neue Bio – zumindest scheint es so, als habe das Adjektiv „digital“ vieles  ersetzt, was kürzlich  noch als „medial“ bezeichnet wurde. So wird aktuell vielerorts  diskutiert, ob in einer digital vernetzten Welt  [GI16] auch „digitale Bildung“ benötig t  wird [Ba17 ]. Sollte  daraufhin auch  unsere Disziplin in Digital pädagogik umbenannt   werden ? Unabhängig von der noch zu klärenden Frage, ob Bildung überhaupt „digital“  sein kann, sollten wir uns das „omnipräsente Adjektiv“ [Kn16b ], das  derzeit so  unkritisch in nahezu alle gesellschaftlichen, kulturellen, ökonomischen und politischen  Vollzüge übernommen  wird, etwas genauer anschauen . Denn – so viel sei an dieser  Stelle bereits verraten – die begrif fliche Unterscheidung zwischen  Medium  und digitale m  Werkzeug  erleichtert das  Verständnis  der sozialen Funktion  und der sozialisatorischen  Bedeutung digitaler Technik.   Die Kritik a m aktuellen Hashtag  und am omnipräsenten Adjektiv  soll vorliegend mittels  einer alternative n fachliche n Sichtweise be feuert werden : Wenn Informatiker innen und  Informatiker  das Adjektiv digital  hören, denken sie zunächst an Einsen und Nullen. In  einer binären Welt lässt sich aus einem Schaltzustand heraus alles  konstruieren.  Irgendw ie mag diese Komplexitätsreduktion jedoch nicht zu dem passen, was wir mit  „digitalen Welten“, „digitaler Gesellschaft“ oder auch „digitaler Bildung“ ausdrücken  wollen. Digitalisierung  bezeichnet üblicherweise die Übertragung analoger  Erscheinungsformen in  diskrete Werte mit dem Ziel, diese elektronisch zu verarbeiten ,  zu distribuieren oder zu speichern. Eine „analoge Gesellschaft“ lässt sich entsprechend  nicht einfach in eine digitale Gesellschaft trans form ieren. Ist also der Begriff der  Digitalisierung zu treffend, wenn er auf eine Gesellschaft angewendet wird – auf Kultur,  auf Bildungsfragen, auf Schule oder auf das menschliche Lernen?   Eigentlich müssten die Fragen doch lauten: Wie veränder n sich unser Leben,  Zusammenleben und unsere Umwelt in einer techn ologisch  und technisch  induzierten  gesellschaftlichen Umbruchsituation und welche Fähigkeiten werden für das  Aufwachsen,  die Integration und ein souveränes Miteinander benötigt? „Wie wirken  digitale Medien auf Individuen und die Gesellschaft, wie kann man Informationen  beurteilen, eigene Standpunkte entwickeln und Einfluss auf gesellschaftliche und  technologische Entwicklungen nehmen? Wie können Gesellschaft und Individuen  digitale Kultur u nd Kultivierung mitgestalten?“ [ GI16]. Zugegeben, Hashtag s wie  „digitales Something “ sprechen  sich schneller und präg en sich leichter  ein. Doch trifft  beispielsweise „digitale Bildung“ wirklich den Kern dessen, was wir damit meinen? Eine  präzisere Analyse erscheint notwendig . Im Folgenden sollen fünf Thesen die Relevanz  digitaler Medien für die Sozialisation in digital vernetzen  Gesellschaften  aufzeigen .  32 Thomas Knausii “proceedings” — 2017/9/17 — 20:19 — page 33 — #33 ii i ii i 2 Sign: Thesen zur sozialisatorischen  Relevanz des Digitalen   Die folgenden fünf Thesen sollen die Zeichen der Zeit  markieren  und bilden die Basis  für die Re -Interpretation eines klassischen Konzepts (vgl. Kapitel 3), das unter  Berücksichtigung derzeitiger technologischer und technischer Entwicklungen, die in  hohem Maße subjekt und gesellschaftsprägend sind, aktueller denn je erscheinen wird.   2.1 Digitale Medien beeinflussen Umw eltwahrnehmung  (1. These)   Nikki Yanofsky sagte vor Kurzem im ZEITmagazin , dass sie als Zwölfjährige aus lauter  Neugier „Jazz“ googelte und daraufhin eine bekannte Jazz -Sängerin wurde. Hieran  erstaunt eigentlich gar nichts. Dieses Beispiel – das auch ein ga nz anderes sein könnte –  soll lediglich zeigen, welche Relevanz digitale Medien  für unsere Welt wahrnehmung   haben. Dass die Relevanz „virtueller“ Wahrnehmung mitunter gewichtiger sein kann als  face-to-face-Begegnungen , zeigt das Beispiel  ebenfalls, berücksi chtigt man  nämlich ,  dass Yanofsky in Montreal  aufgewachsen ist – also just in der Stadt, in der jährlich das  weltweit gr ößte Jazz -Festival stattfindet. Um mit Jazz in Berührung zu kommen, hätte  Nikki alternativ auch vor die Tür gehen können. Es kann konsta tiert werden: Digitale  Medien beeinflussen in hohem Maße unsere Weltwahrnehmung  und entsprechend die  „produktive Verarbeitung von Wirklichkeit “ [Hu06] .   2.2 Digitale  Werkzeuge  sind omnipräsent (2. These)   Studien wie die KIM und JIM -Studien des MPFS [ MP14; MP1 6] zeigen, dass fast alle  Menschen inzwischen über einen persönlichen Zugriff auf digitale Geräte verfügen. So  sind laut der JIM -Studie 2016 Jugendliche in Deutschland mit Handy, Smartphone,  Computer und Internetzugang nahezu voll ausgestattet [MP16]. Diese umfassende  Verfügbarkeit  digitale r Geräte wird vielerorts als Initial eines tiefgreifenden  gesellschaftlichen Wandels beschrieben [Aß16; Ba07; Ca14; DI14; Ho17; KM16; Sc14 ].  Doch was änderte sich mit der rasanten Verbreitung des mobilen  und vernetzten   Computers – in Gestalt des Smartphones – wirklich? Ist ein technisches  Gerät in der  Lage die soziale  Welt zu verändern?   Der historische Technikeinsatz war im Wesentlichen durch die Erleichterung physischer   Arbeit gekennzeichnet : So revolutionierte beispiels weise die Eisenbahn die Mobilität; im  Bausektor machte der Technikeinsatz das kräftezehrende Handwerk nicht nur sicherer  und für Menschen erträglicher, sondern ermöglichte auch völlig neue Bauwerke.  Technik hatte aber auch direkten Einfluss auf das soziale  Miteinander: „Die Einführung  der Sprache konstituierte die Stammesgesellschaft, die Einführung der Schrift die antike  Hochkultur  [und] die Einführung des Buchdrucks die moderne Gesellschaft [...]“ [Ba07].  Technik  revolutionierte also die physische Arbeit und Medien, wie die Schrift und der  Buchdruck sowie der Computer, reformieren die geistige Arbeit [Na92; Sc97]  und sie Verstehen – Vernetzen – Verantworten 33ii “proceedings” — 2017/9/17 — 20:19 — page 34 — #34 ii i ii i prägten als jeweils dominierende Kommunikationsmedien das gesellschaftliche  Miteinander.   Es geht außerdem  nicht um ein Gerät, denn d ie Me nsch-Computer -Relation veränderte  sich seit der Einführung des Computers entscheidend: So arbeiteten noch vor relativ  kurzer Zeit  mehrere  Personen an einem  Computer – in Banken arbeiteten Menschen an  Terminals; in Universitäten konnten Forschende Rechenkap azitäten  des Großrechners   buchen. In den letzten drei Jahrzehnten dominierte der „persönliche“  (Personal)   Computer – der PC – und damit die Eins-zu-eins-Relation von Mensch und Maschine.  Heute genügt vielen von uns nicht mehr nur ein Gerät. Damit änderte s ich das (zunächst  rein quantitative ) Verhältnis von Mensch und Maschine erneut. Zur steigenden Zahl  digitaler Geräte , die einen Menschen umgeben, gesellen sich zu den  sichtbaren Geräte n,  wie Smartphone, Tablet  und Notebook, auch weniger auffällige Computer  in  Alltagsgegenständen , wie Motorsteuerungen und Bremsassistenten im Auto, Haus und  Heizungssteuerungen oder auch „smarte“ Kühlschränke und Zahnbürsten. In nicht allzu  ferner Zukunft wird beinahe jeder Gegenstand des täglichen Lebens einen Computer  entha lten und mit den anderen Gegenständen vernetzt sein, was als IoT – Internet of  Things  – bezeichnet wird und die Omnipräsenz des Digitalen  zementiert.   Es geht aber nicht nur um Quantitäten, sondern um eine neue Qualität von Technik und  damit auch um ein ne ues Verständnis der Mensch -Maschine -Interaktion  – nach folgend  weitere These n dazu.   2.3 Digitale Werkzeuge  ermöglichen neue Formen sozial er Vernetzung (3.  These)   Digitale – und vor allem mobile  – Medien ermöglichen eine soziale Eingebundenheit  in  neuer Quantit ät und Qualität [Kn16c; Kn17] . Noch vor wenigen Jahren war der ständige   Zugang zum Internet  und seinen Diensten  unüblich ; dann wurde das erste Smartphone  mit einer Internet -Flatrate  für Mobilfunknetze angeboten und vieles änderte sich: Dank  der technischen  Vernetzung  konnte nicht nur die verhältnismäßig leistungsschwache  Hardware des mobilen Geräts mittels  online bereitgestellte r Speicher und Prozessor Ressourcen ergänzt werden, womit die mobile Technik performanter wurde . Es wurden  darüber hinaus auch Men schen miteinander „vernetzt“ [Wi02 ]. Mit dieser Vernetzung  sind keineswegs nur technische  Plattformen  im WWW ( Soziale Netzwerke ) gemeint,  sondern die Tatsache, dass das Individuum permanent  mit seinen sozialen Netzwerken  und Peers  – wie der Familie und dem  Freundeskreis – verbunden sein kann und sich  aufgrund dieser dauerhaft verfügbaren kommunikativen Vernetzung  neue persönliche  Netzwerke entwickeln können  [Kr16] . War noch vor wenigen Jahren die soziale  Vernetzung in hohem Maße  durch  räumliche Nähe  geprägt , so entscheiden künftig vor  allem  Themen oder individuelle Interessen  – beispielsweise in Form von Communities of  Practice  [We98] – über persönliche Verbundenheit  und soziale Eingebundenheit . Durch  die Konvergenz von physischen und virtuellen Wirklichkeit en können wir also Grenzen  überwinden und damit neue Formen der Vergesellschaftung erleben.  34 Thomas Knausii “proceedings” — 2017/9/17 — 20:19 — page 35 — #35 ii i ii i 2.4 Digitale Werkzeuge  machen  Realität ( 4. These)   An der Benutzerschnittstelle, am Inter face – also an der Stelle, an der Technik zum  Gegenüber wird – ist es zunächst i rrelevant, ob es sich um ein analoges oder digitales  Medium handelt  [Je06] , denn die mittels analoger Technik hergestellten Bilder, Filme  oder Tondokumente stehen bezüglich ihrer medialen Erscheinung  digital produzierten  Dokumenten in nichts nach [Kn09 ]. Während das Medium primär die äußere  Erscheinungsform, als Objekt der Wahrnehmung  [Ke06] die Schnittstelle zum Menschen  darstellt, umfasst der Werkzeugbegriff auch die zugrunde und dahinter liegende  technische Basis des digitalen Geräts, die aufgrund ihrer Programmierbarkeit ,  Adaptivität, Konvergenz und technischen Vernetzung  umfassende  Gestaltungsmöglichkeiten der medialen Erscheinungsformen sowie der eigenen  Funktionalitäten bietet und damit über Potentiale verfügt, die über jene der analogen  Medien heraus reichen  [Kn15a; Kn16a/b; Kn17 ].   Weiterführender als die Differenzierung analoger und digitaler Technik ist also vielmehr  die Unterscheidung der Technik in Bezug auf ihre soziale Funktion : Erscheint sie primär  als Medium  oder als Werkzeug ? Gerade bezüglich  digitaler  Technik mag diese  Unterscheidung auf den ersten Blick künstlich oder gar antiquiert wirken , zumal sie  zunehmend verschwimmt und Menschen doch von Anbeginn ihre dingliche Umwelt  mittels Werkzeug en gestalteten. Die Unterscheidung zwischen Medium u nd Werkzeug  ist aber gerade unter Berücksichtigung der zuvor benannten Spezifika des Digitalen   wesentlich und weiterführend, da sie den Blick auf die soziale Bedeutung und Funktion   der Technik schärft: So sind beispielsweise Werkzeuge im Gegensatz zu Medie n ohne  aktiv Nutzende  „nutzlos“ [Kn15b] . Die Werkzeug -Analo gie verdeutlicht darüber hinaus,  dass das Medium nicht nur dann beteiligt  ist, wenn wir Umwelt wahrnehmen , wie zuvor  beispielhaft mit der Jazzsängerin Nikki Yanofsky erläutert  (vgl. Kapitel 2.1) , sondern  auch dann , wenn wir unsere Umwelt sowie digitale Werkstoffe mittels digitaler  Werkzeuge gestalten .   Die Produktion  und aktive Gestaltung  analoge r (Massen -) Medien  war zwar  grundsätzlich möglich, aber stets aufwändig – man denke nur an die historisch e  Vervielfältigung von Texten oder die ersten Filme aus den Anfängen der  Kinematogra fie. Erst mit dem Aufkommen der Digitaltechnik  konnten auch diejenigen,  die üblicherweise rezipieren, das Objekt der Wahrnehmung  direkt  beeinflussen  – es  manipulieren , wie es der Informatiker Reinhard Keil nennt: „Zum ersten Mal in unserer  Mediengeschichte kann das Objekt der Wahrnehmung auch unmittelbar zum Objekt der  Manipulation werden“ [Ke06] . Damit kann  das digitale Medium nicht nur rezipiert  werden , sondern auch  ohne g rößere Aufwände selbst produziert  und „interaktiv“  gestaltet  werden. Hierbei ist wesentlich, dass der alltagssprachlich  eher negativ besetzte  Begriff der Manipulation  nicht falsch verstanden  wird: Es ist hier nicht  der aus dem  Französischen stammende  Fachb egriff aus der Soziologie  oder Psychologie  gemeint – es  geht also nicht  um gezielte oder verdeckte Einflussnahme  oder um Konditionierung . Und  es geht auch  nicht darum, dass Medien Menschen „manipulieren“ . Der Begriff der  Manipulation  sollte vielmehr in sei nem eigentlichen Wortsinn  verstanden werden: So ist Verstehen – Vernetzen – Verantworten 35ii “proceedings” — 2017/9/17 — 20:19 — page 36 — #36 ii i ii i manus  das lateinische Wort für „Hand“ und plere bedeutet „füllen“ . Man könnte also  wörtlich übersetzen: „eine Handvoll haben“ oder etwas passender: „die Dinge in der  Hand haben“. Damit ist gemeint, dass w ir digitale  Medien nicht nur wahrnehmen  können, sondern auf das Objekt der Wahrnehmung  auch  selbst handelnd  zugreifen   können.   2.5 IT doesn ’t matter  ... Software takes command (5 . These)   Der Werkzeugbegriff erscheint als Relikt einer vergangenen Zeit – der Hard warezeit.   Dabei verfügt  die physische  IT, obwohl sie die technische Basis alles Digitalen ist, heute  nur noch über eine nachrangige  Bedeutung. Um es mit dem bekannten Zitat von Lev  Manovich „Software takes command“ [Ma08] auszudrücken: Die Software hat die   Macht übernommen . Anhand mobiler Computer , lässt sich die schwindende Relevanz  von Hardware und die steigende Bedeutung von Software und technischen Netzen gut  veranschaulichen : Smartphones wären nichts ohne die Apps , die wir individuell  zusammenstellen u nd mittels der die Hardware zu einem ganz persönlichen Werkzeug –  einem „digitalen Taschenmesser“ – vervollkommnet wird. Auch die Strategien der  globalen Internet konzerne  wie Amazon , Apple  und Google lassen diese  Bedeutungsverschiebung erahnen: Der Hardwar e wird in Relation zum Content , wie  Apps, Musik, Videos etc. , auch ökonomisch eine immer geringere Bedeutung  beigemessen.  Die Relevanz des Netzes lässt sich a nhand von Apps zur Sprachsteuerung  (wie beispielsweise SIRI) illustrieren: Smartphones sind nur de swegen so leistungsfähig,  weil die rechen intensiven Prozesse, wie Sprachanalyse, inhaltliche Auswertung und  Antwortgenerierung, nicht innerhalb des mobilen Gerätes statt finden , sondern die  Speicher und Prozessor leistung verteilter Server im Netz genutzt w erden . Auch dies ist  gemeint, wenn in Anlehnung an Lev Manovich konstatier t wird , dass die Software und –  ich ergänze – das Netz2 „die Macht übernehmen“ [Ma08].  Digitale Medien ermöglichen also aufgrund ihrer Programmierbarkeit und technischen  Vernetzung d ie Integration von Werkzeugen zur aktiven Gestaltung und Verknüpfung  von Inhalten innerhalb einer Einheit – häufig innerhalb eines Geräts oder einer  Plattform. Diese digitalen Werkzeuge tragen demnach nicht nur dazu bei,  unterschiedliche codale und mediale  Elemente zu verbinden, sondern darüber hinaus  auch Lerngegenstand und das ( didaktische ) Werkzeug selbst miteinander zu  verschmelzen [Kn15b]. Damit können nicht nur digitale Medien selbst produziert und                                                            2 Bestätigt wird diese Bedeutungsverschiebung durch aktuelle Studien, wie die bereits zitierten KIM und JIMStudien des MPFS [MP16] und die Studie zur Generation What , einer europaweiten Jugendstudie von ZDF,  SWR und dem Bayerischen Rundfunk. Für letztere Studie wurden junge Erwachsene nach ihren  Einstellungen und unter anderem auch zur Relevanz des Netzes  in ihrem Leben befragt – mit interessantem  Ergebnis: So können sich 80 Prozent der befragten 18 bis 34 -jährigen Menschen in Deutschland ein Leben  ohne Gott, 70 Prozent ein Leben ohne Auto und 79 Prozent ein Leben ohne Fernsehen vorstellen. Selbst ein  glückliches Leben ohne Kinder ist immerhin für 52 Prozent der Befragten denkbar – aber: „nicht ohne  Internet“: Laut http://www.generation -what.de/por trait/data/all (aufgerufen am 21 . Mai 2017) können sich  lediglich 48 Prozent  der Befragten in Deutschland ein g lückliches Leben ohne Internet vorstellen, unter den  16und 17 -Jährigen sind es nur 42 Prozent.  36 Thomas Knausii “proceedings” — 2017/9/17 — 20:19 — page 37 — #37 ii i ii i manipuliert werden, sondern digitale Werkzeuge verfüg en auch über eine hohe  funktionale und formale Adaptivität  – vor allem  aufgrund theoretisch unendlicher  Erweiterungs und Kombinationsmöglichkeiten mittels individuell zusammenstellbarer  Apps und gegebenenfalls auch entsprechender Peripherie. Dies bedeutet , dass nicht nur  Inhalte beziehungsweise (Lern -) Gegenstände gestaltbar werden, sondern auch das  (Lern -) Werkzeug selbst.   3 Re-Turn: Digitale Werkzeuge  und ihre Bedeutung für subjekt  und gesellschaftskonstituierende Interaktion   Zusammenfassend kann festgeha lten werden, dass digitale Medien in hohem Maße  unsere Wahrnehmung von Umwelt  und damit die produktive Verarbeitung von  Wirklichkeit  beeinflussen  (vgl. Kapitel 2.1) . Aufgrund der Omnipräsenz  digitaler Medien  (vgl. Kapitel 2.2) und der ständigen Verfügbarke it technischer Netze umgeben  uns auch  unsere sozialen  Netze permanent  (vgl. Kapitel 2.3) , was neue Formen sozialer  Eingebundenheit und eine interessen und kontext bezogene Vergemeinschaftung  ermöglicht . Da wir zunehmend auch mittels digitaler  Medien Realit ät erzeugen, kann  Realitäts konstruktion in unmittelbarer Weise erlebt  werden und es können in der  Revision digitaler Artefakte Reflexionsprozesse angestoßen werden. Damit  sind digitale  Medien und soziale Netze nicht nur ständig beteiligt, wenn wir andere u nd uns selbst   wahrnehmen und inszenieren, sondern aufgrund der grundsätzlichen Speicherbarkeit  digitaler Medien stehen mediale Konstruktionen zur Selbstreflexion zur Verfügung (vgl.  Kapitel 2.4) . Prozesse von Sozialisation  werden demnach zunehmend medial v ermittelt   und medial konstruiert : Die Wahrnehmung von innen und außen , die Konstruktion von  Umwelt und die Subjektbildung sind von Medien , die wohlgemerkt omnipräsent sind ,  durchsetzt und beeinflusst [Su99; Ca14; Kn17 ]. Wenn man dies voraussetzt, dann  verw undert es, dass in den Sozialisationstheorien digitale Medien noch immer eine so  untergeordnete Rolle spielen und bisher in der Sozialisationsforschung bestenfalls als  Massenmedien  wahrgenommen werden [ Hu06; Hu08 ]. I n den  kommunikationswissenschaftlichen u nd medienpädagogischen Arbeiten zur  „Mediensozialisation“ [Fr03; Ho10; Vo10] werden  – zu diesem Schluss kommt Dieter  Spanhel  – „die Medien in ihrer Bedeutung für den Sozialisationsprozess isoliert oder  unter eingeschränkten Perspektiven konzeptualisiert“ [ Sp13]. So werden Medien  mitunter als Orte der Sozialisation  bezeichnet und damit nur sehr spezifische Funktionen  der Medien für die Persönlichkeitsentwicklung betont, obwohl inzwischen Einigkeit  darüber herrscht , dass sich das Verständnis von Medien als So zialisations instanz  – also  neben  Familie und Schule – überholt hat, da Medien inzwischen in allen  Instanzen  vorhanden und prägend sind  (vgl. Kapitel 2.2) .   Nach den für die deutschsprachige Sozialisationsforschung prägenden Autoren Dieter  Geulen und Klaus Hurrelmann entsteht und entwickelt sich die Persönlichkeit eines  Menschen „in wechselseitiger Abhängigkeit von der gesellschaftlich vermittelten  sozialen und materiellen Umwelt“ [Ge80]. Damit wird als Sozialisation  die Summe aller Verstehen – Vernetzen – Verantworten 37ii “proceedings” — 2017/9/17 — 20:19 — page 38 — #38 ii i ii i Lernprozesse bezeichnet, die der Mensch in seiner Entwicklung zu einer  handlungsfähigen Persönlichkeit durchläuft. Wenn nun also, wie zuvor konstatiert, das  Leben zwar „analog“ , Kommunikation und Kollaboration aber zunehmend „digital“ ist  und entsprechend medial  stattfindet [Kn16c], dann kann Persönlichkeitsentwicklung  hiervon nicht unbeeindruckt bleiben [Ca14 ].   Nach dem Symbolischen Interaktionismus  [Bl69; Me73 ], einer Theorie, die für die  handlungs und rollentheoretische Perspektive als wesentliche soziologische  Basistheorien i nnerhalb des Sozialisationskonzepts prägend war [Hu06], ist  Kommunikation zwischen Individuen der Schlüssel zur Subjektkonstitution;  Kommunikation dient demnach nicht bloß dem Transport von Botschaften, sondern  primär der Konstitution  und Entwicklung  von S ubjekt und Gesellschaft [ Sc14 ]. Charles  Horton Cooley, einer der geistigen Väter von George Herbert Mead, nimmt an, dass die  Impulse für die Persönlichkeitsentwicklung vom Anderen  ausgehen . Diese Erkenntnis  wurde möglicherweise durch Johann Wolfgang von Go ethe inspiriert: „Der Mensch  erkennt sich nur im Menschen“ [Go99].  Für Cooley findet die Entwicklung von  Persönlichkeit mittels  Kommunikation  statt, er schr eibt dazu: „It is through  communication that we get our higher development.  The faces and conversati on of our  associates; books, letters, travel, arts [...] supply the stimulus and  framework for all our  growth“ [ Co72 ]. Mead entwickelte in Anlehnung an Cooley ein Modell, das die  Konstitution des Subjekts durch Kommunikation konzeptionalisiert ; von seinem Schüler  Herbert Blumer wurde dieses Modell dann weiter ausgebaut. Darin entsteht die  Persönlichkeit , von Mead und Blumer als Self bezeichnet , als Produkt zweier Größen:  Dem „sozialen Selbst“, dem Me, und der psychischen Komponente des  I.   Das Me steht für die in einer Gesellschaft existierenden gemeinsamen Normen, Regeln,  Werthaltungen, also: für die sozialen Konsense [Me73 ]. Es präsentiert die Vorstellung  dessen, wie die anderen Menschen – also: das soziale Umfeld – ein Individuum sehen  und wie es sich nac h der Interpretation ihrer Erwartungen zu verhalten ha be. Das Me  wiederum „speichert“ die intersubjektiv ausgehandelten Erwartungen und stellt darüber  hinaus handlungsleitende Strukturen und Orientierungen zur Verfügung. Das I vertritt –  gegenüber dem Me – impulsive und spontane Energien der Person, die zwar durch das  Me „gezügelt“ werden, aber doch eine unabhängige Größe der Persönlichkeit darstellen.  Durch ebendieses Zusammenwirken von I und Me bildet sich das Self, also: das Selbst  –  das Selbstverständni s. Dieses Zusammenspiel , so der Kommunikationswissenschaftler  Friedrich Krotz , müsse man sich als kommunikativen Prozess  vorstellen [Kr98 ]. Ein  Prozess, der nach außen hin wahrnehmbar sein könne , sich aber durchaus auch als  „innerer Dialog“ abspiele.   Cooley, Mead und Blumer sind sich darin einig, dass diese „sozialisierende“  Kommunikation nicht nur zwischenmenschlich erfolgt, sondern auch zwischen Mensch  und Dingen  möglich ist. Kommunikation findet also auch dann statt, wenn Dinge  uns ein  Handeln auferlege n oder nahelegen. Ein Beispiel hierfür ist der Berliner Schlüssel   [La93 ]: Dieser Schlüssel mit zwei identischen Bärten wird nach dem Aufschließen des  Schlosses durch das Schloss hindurchgeschoben und ermöglicht daraufhin das 38 Thomas Knausii “proceedings” — 2017/9/17 — 20:19 — page 39 — #39 ii i ii i Zuschließen der Durchgangstür v on der anderen Seite. Dieser Schlüssel ist ein sehr  treffendes Beispiel für Dinge, die Menschen ein bestimmtes Handeln auferlegen – man  könnte auch sagen: Dinge, die „kommunizieren“  [Kn09 ]. Auch digitale Medien,  Werkstoffe und Werkzeuge kommunizieren und k önnen so unser Handeln beeinflussen.  In Bezug auf die Massenmedien hat der kanadische Philosoph Marshall McLuhan mit  der vielzitierten Erkenntnis the Medium is the Message  darauf hingewiesen, dass Medien  nicht neutral und demnach niemals nur „Behältnisse“ für Informationen  sind [Mc68 ].  Dass wir heute im Gegensatz zum Buch, Film, Fernsehen oder der Architektur direkten   und kreativen  Einfluss auf das digitale  Medium selbst nehmen können, in dem wir es  aktiv gestalten , konnte er seinerzeit bestenfalls ahnen.   4 Connect: Das Gestaltende als Verbindung zwischen  Informatik  und Pädagogik   Bei der Entscheidung für mein Studium folgte ich meinem persönlichen Interesse. Dabei  verband ich – wie damals noch recht  unüblich – eine Ingenieurwissenschaft mit der  Sozial und Me dienpädagogik  (und ergänzte später  noch Erziehungswissenschaft und  Pädagogische Psychologie ). Dass sich d ie Medienpädagogik auf die geistes und  sozialwissenschaftliche Erziehungswissenschaft und die Informatik als Struktur und  Ingenieurwissenschaft auf e ine andere Logik der Theoriebildung beruft [Br17], empfand  ich mitunter als irritierend  und inspirierend zugleich . Die beiden Professionen erscheinen  also auf den ersten Blick kaum gegensätzlicher  – sie verfügen jedoch über mindestens  eine verbindende Geme insamkeit : die Gestaltung .  Während die Informatik als die Wissenschaft der systematischen Organisation ,  Speicherung  und elektronischen Verarbeitung von Informationen  gilt und sich  beispielsweise innerhalb der Technischen Informatik mit der Gestaltung von  Algorithmen und Architekturen befasst , gestalten Pädagogin nen und Pädagoge n unter  anderem erzieherische  Interventionen und (Lern -) Umfelder. Wenn – im Sinne des  bereits in alternativer  Übersetzung zitierten Buchtitels von Lev Manovich – die Software   es ist,  die Befehle annimmt [Ma08], dann könn ten diese Aufgabentrennungen tendenziell   verschwimmen, da potentiell alle Menschen künftig ohne größere Aufwände  (wie es  beispielsweise noch in einer hardwaredominierten Zeit oder vor der Einführung  grafischer Benutzer oberflächen war ) Technik gestalten  können [Sc2011; Kn15b] . Am  Beispiel von Content -Management -Systemen lässt sich beispielhaft darlegen, dass zur  Gestaltung einer ansprechenden Webseite primär gute Ideen, geeignete Texte un d  gelungene Grafiken sowie Bilder  benötigt werd en, jedoch keine HTML und  Programmierkenntnisse mehr. Auch digitale Werkzeuge, wie das  Smartphone , lassen   sich ohne tiefergehendes technisches Know -how individualisieren. Software wird damit  zum Werkstoff,  aus dem sich hilfreiche Werkzeuge  herstellen , weiterentwickeln  und  kombinieren lassen. Programmierbare und adaptive digitale Werkzeuge sowie  verbesserte Benutzerschnittstellen und gemeinsame Codes erleichtern damit einerseits  die interdisziplinäre Zusammenarbeit, anderseits ermöglichen sie Making  – das kreative Verstehen – Vernetzen – Verantworten 39ii “proceedings” — 2017/9/17 — 20:19 — page 40 — #40 ii i ii i Gestalten mittels digitaler Werkzeuge und -stoffe : Wie wäre es wohl, wenn  beispielsweise Lehrende  nicht die (didaktischen) Medien und Werkzeuge nutzen  müssten , die ihnen  angeboten w erden , sondern sie diese selbst  gestalten könnten?   5 De-Sign: Verantworten? Gestalten!   Wir sollten uns ein Beispiel an digital er T echnik nehmen  und – wie vorliegend  beschrieben – auch selbst Grenzen  überwinden, uns neu vernetzen und dadurch  Tradiertes  re-form ieren.   Routinierte Abläufe und Gewohnheiten sind f ür uns Menschen zwar wesentlich, denn  trainierte Handlungsweisen und -abläufe benötigen keine weitere Aufmerksamkeit mehr  und ermöglichen die Konzentration auf die wesentlichen Dinge: Nahmen das  Schleifpunkt suchen  sowie „Spiegel, Blinker , Schulter“ früher unsere ganze  Konzentration in Anspruch, beherrschen  wir diese Handlungen heute ganz nebenbei.  Nicht selten jedoch stehen just jene tradierte n Handlungspraxen einem Weiterkommen  im Weg , wie der fünfte fraMediale -Band am Beispiel des digitalen Wandels in  Bildungseinrichtungen  zeigt  [Kn16d] . Zu r Illustration  ein kleines Experiment: Bitte  falten Sie Ihre Hände. Prüfen  Sie bitte, ob bei Ihnen der rechte oder der linke Daumen  oben liegt. Nehmen Sie nun die Hände wieder auseinander. Bitte falten Sie nun noch  einma l Ihre Hände, aber nun absichtlich so, dass Ihr anderer  Daumen oben liegt. Was  Sie nun spüren, ist die Macht der Gewohnheit  und damit erhalten wir einen vagen  Eindruck  davon , warum digitale Medien so schwer Eingang in Schule und Hochschule  finden. Was ist zu tun?   5.1 Schule erneue rn: Kooperation und Making   Die Medienpädagogik formuliert nicht nur gut begründete Anforderungen zur  Notwendigkeit eines Lernens über Medien an Schule n [Kn16b] , sondern kann  gleichermaßen auch aktivierende und kreative  Zugänge für das Lernen mit Medien , die  Förderung von Medienbildung  und informatische r Bildung anbieten. Hilfreich hierfür  wäre die Infragestellung der traditionellen Grenze zwischen der Institution Schule und  der außerschulischen Medien  (projekt -) arbeit – die bisher kaum  zu überwindende  Demarkationslinie zwischen formalen, non -formalen und informellen  Bildungskontexten. Durch medienpädagogische Projektarbeit und Aktive  Medienarbeit  nach subjekt und handlungsorientierten Ansätzen , wie sie u.  a. Bernd Schorb [S c95],  Dieter  Baacke [B a96] und Gerd  Tulodziecki [Tu97] propagieren, wird die Chance  eröffnet , digitale Medien als Verbindungsglied für etwas zu nutzen, was nicht unbedingt  voneinander getrennt sein muss: die Lebenswelt der Schülerinnen und Schüler und das  (schulische)  Lernen. Hiermit würde nicht nur die Rolle der Schule als Lebens raum  befördert, sondern den Schülerinnen und Schülern  könnten  neue anknüpfbare  Erfahrungsräume bereitgestellt  werden  [Ni04; Wa16]. Wie ich in anderen Arbeiten  umfassender untersuchte und ausfü hrte [ Kn15a; Kn16c; Kn17], können  beispielsweise 40 Thomas Knausii “proceedings” — 2017/9/17 — 20:19 — page 41 — #41 ii i ii i aktivierende und lebensweltverbindende Potential e digitaler Medien schon heute in der  Schule genutzt werden; technische und gesellschaftliche Entwicklungen ermöglichen  einerseits, erfordern anderseits aber mitunter auch, bestehende organisatorische Grenzen  wie tradierte Stundentaktungen, Fächergrenzen und Raumkonzepte infrage zu stellen  und neu zu denken.   5.2 Gemeinsam Gesellschaft gestalten: Medienbildung ist nicht genug   Medienbildung zielt auf die Bildung des Subjekts. Sie soll umfassend sein , das  mediengebildete Subjekt ist und bleibt in einer digital vernetzen  Welt [GI16] relevant.  Doch zunehmend liegt es nicht mehr nur in der Hand der oder des Einzelnen, Kontrolle   über die eigenen (personenbezogenen) Daten z u behalten. Eine Person kann sich noch so  überlegt im WWW und in Sozialen Netzwerken  bewegen: Wenn unscheinbare Apps   persönliche Daten sammeln – wer liest schon die lange n Nutzungsvereinbarungen (die  sich mit jedem Update ändern können) – ist es mit der  „Datensouveränität“ passé . Auch  wenn ein Nutzer  im Adressbuch eines anderen WhatsApp -Kontakts gespeichert ist, kann  das jeweilige  Individu um nicht mehr souverän  und fallbezogen entscheiden, ob die  Speicherung und Weitergabe persönliche r Daten erfolgen darf – respektive einschätzen,  ob eine solche Entscheidung überhaupt möglich ist. Ergänzend  zur subjektiven  Medienbildung sollte ein gesellschaftliche r Diskurs  darüber  stattfinden , was Technik  und global operierende beziehungsweise  vernetzte Unternehmen dürfen. Der Diskurs  muss in Regeln und (Selbst -) Verpflichtungen – oder allgemein: Normen – möglichst  transparent und nachvollziehbar kodifiziert werden. Da das Netz und darin operierende  Unterneh men Staaten grenzen überwinden, sollten auch diese Normen grenzübergr eifend   gedacht, diskutiert und vereinbart werden.   Medienkompetenz  ist ein Begriff, der in seiner traditionellen Auffassung recht wenig mit  Technik zu tun hatte [Sc07 ] und der interessanterweise heute im Alltagsverständnis nicht  selten sogar ausschließlich auf technische Fertigkeiten verkürzt  wird [Kn16b ]. Dabei  ging es doch Dieter Baacke, der den Begriff in Anlehnung an das Kompetenzkonzept  von Noam Chomsky und die Arbeiten von Karl -Otto Apel und Jürgen Habermas prägte,  nicht um die Technik, die Geräte oder  die Medien, sondern um Kommunikation und  Kooperation  [Ba73; Ba96 ]. Die Fähigkeit eines Menschen  also, Medien, (digitale)  Werkzeuge und Technik im Allgemeinen souverän für eigene Ziele und Bedürfnisse zu  nutzen und selbst -, medien und gesellschaftsbezogen  zu reflektieren, kreativ und  partizipativ zu handeln sowie analytisch und strukturell Wissen zu erwerben [Ba96]. So  geht es auch heute nicht um Technik , sondern um die Frage, wie und wozu wir digitale  Werk zeuge , Werk stoffe  und Medien nutzen (wollen) und d amit im Wesentlichen noch  immer  um Kommunikation  und Kooperation  – nur eben in ihrer digitalen Form. Da nun  gerade digitale  Technik mehr ist als ein bloßer „Mittler“, sondern sie auch an der  Herstellung  von (Medien -) Inhalten [Sc07] und Kommunikation [Ba07 ] beteiligt ist und  selbst Interpretationen vornimmt [Kn16b] – wie seman tische Technologien und  beispielhaft die „Antwortmaschine“ Wolfram|Alpha  –, rückt ein weiteres Ziel von  Medienkompetenz in den Fokus der Betrachtung: die Kenntnis der technischen und Verstehen – Vernetzen – Verantworten 41ii “proceedings” — 2017/9/17 — 20:19 — page 42 — #42 ii i ii i organisatorischen Bedingungen  der Wissens und Medienproduktion .   Wichtig ist also, dass idealerweise alle Menschen in der Lage sind, die Technik selbst,  die Algorithmen, auf deren Grundlage sie arbeitet, sowie generell Prozesse der  Entstehung und Reprodukt ion von Wissen zumindest grundlegend nachzuvollziehen   [Kn16b ]. Nur wer über die Kenntnis verfügt, was hinter der Benutzerschnittstelle –  hinter dem Inter face der Maschine – vor sich geht, kann kompetent rezipieren und  souverän kommunizieren . Daher gehören zu einer umfassenden Medien kompetenz  ein  konzeptionelles Technikverständnis und mindestens grundlegende Aspekte  informatischer Bildung [ GI16; KM16; Kn16b; Sc16] . Im Sinne der zuvor geforderten  Grenzüberwindungen sollten daher Medienbildung und informatisch e Bildung in  geeigneter Form [Re15; He16; Sc16; Tu16b ] miteinander verbunden werden.  Exemplarisch möchte ich im Folgenden auf zwei aktuelle Entwicklungen hinweisen, die  Medienbildung und informatische Bildung „gemeinsam denken“.   5.3 Gemeinsam weiterdenken: Dagstuhl -Erklärung  zum Verhältnis von  informatischer Bildung und Medienbildung   Die Dagstuhl -Erklärung  2016 wurde von Informatikerinnen und Informatikern sowie  Medienpädagoginnen und Medienpädagogen gemeinsam  verfasst [GI16]. Von beiden  Seiten wurde d ie Redakt ion des Dokuments  als herausfordernd beschrieben und auch  nach seiner Veröffentlichung wird es weiter diskutiert und kritisiert – das muss  so sein,  denn dies  ist wesentliches Kennzeichen von Wissenschaft. Die Definition eines  gemeinsamen Gegenstands – auch  wenn dieser als Hashtag  in den Communities nicht  nur Zustimmung findet (vgl. Kapitel 1) – und das Aufeinanderzubewegen  fanden einen  überfälligen und guten Anfang. Im Juli 2017 wird der gemeinsame Austausch zwischen  Informatik und Medienpädagogik im Rahmen  einer Klausurtagung zum „Verhältnis von  Medienbildung und informatischer Bildung: Dagstuhl -Dreieck in progress “ [KB17] im  FTzM in Frankfurt am Main fortgesetzt.   5.4 Gemeinsam Potentiale des Digitalen nutzen: KMK -Strategie zu r „Bildung in  der digitalen Welt“   Ein weiteres aktuelles Beispiel für das gemeinsame Weiterdenken von informatischer  Bildung und Medienbildung findet sich in der Strategie der Kultusministerkonferenz  (KMK) zur „Bildung in der digitalen Welt“ [KM16 ], die am 8. Dezember 2016 in Berlin  beschlo ssen und deren Entwurf seitens der Fachgruppe Schule der GMK3, der Initiative  KBoM!4 und der Sektion Medienpädagogik der DGfE5 kritisch kommentiert wurde  [GM16; KB16]. Unsere wesentlichen Kritikpunkte waren die Verwendung eines                                                            3 GMK: Gesellschaft für Medienpädagogik und Kommunikationskultur, http://www.gmk -net.de   4 KBoM!: Initiative Keine Bildung ohne Medien, http://www.keine -bildung -ohne -medien.de/ ; siehe auch  Veröffentlichungen u.  a. von Horst Niesyto zum Wirken und den Zielen der Initiative [Ni16]   5 DGfE: Deutsche Gesellschaft für Erziehungswissenschaft, http://www.dgfe.de  42 Thomas Knausii “proceedings” — 2017/9/17 — 20:19 — page 43 — #43 ii i ii i unklaren und funktionalistis chen Bildungsbegriffs sowie die schwerlich  nachvollziehbare Tatsache, dass die jüngste Erklärung hinter den Zi elen des ausgefeilten  Papiers zu „Medienbildung in der Schule “ aus dem Jahr 2012 zurückblieb. Seitens des  GI-Fachbereichs Informatik und Ausbildun g/Didaktik der Informatik  (IAD) wurde  kritisiert, dass „eine Beschränkung auf die Nutzung digitaler Medien in allen  Unterrichtsfächern bedeuten [würde], die digitale Welt so zu akzeptieren, wie sie jetzt  ist, und deren Weiterentwicklung a nderen zu überlass en. Schule muss aber zu  gesellschaftlicher Teilhabe befähigen“ [Br16].   Was an der neuen KMK -Erklärung als sehr positiv bewertet werden kann, ist die  Tatsache, dass erstmals  ein Papier  der KMK zur Vorab -Kommentierung veröffentlicht  wurde. Das heißt, die Er klärung behandelt nicht nur im gegenständlichen Sinne die  Herausforderungen, die digitale Technik an die Gesellschaft und das Bildungssystem  stellt, sondern die Kultusministerkonferenz  nutzte mit dem vorherigen Einbezug der  Fachgesellschaften auch das Potential, die digitale Technik zur Organisation  kollaborativer und partizipativer Prozesse bietet . Dies erscheint mir in Anbetracht vieler  weiterer komplexer Aufgaben, die eine fachübergreifende  Expertise und transnationale   Beteiligung erfordern, als ein klug er und weiterhin verfolgungswürdiger Weg.   Literaturverzeichnis   [Ar65]  Arnheim, Rudolf; Bock, Henning: Kunst und Sehen. Eine Psychologie des  schöpferischen Auges (Art and visual perception). De Gruyter, Berlin, 1965.   [Aß16]  Aßmann, Sandra; Brüggen, Niels; Dander, Valentin; Gapski, Harald; Sieben,  Gerda; Tillmann, Angela; Zorn, Isabel: Digitale Datenerhebung und verwertung als Herausforderung für Medienbildung und Gesellschaft. In   (Brüggemann, Marion; Knaus, Thomas; Meister, Dorothee, Hrsg.):  Kommunikations kulturen in digitalen Welten. kopaed, München, S. 131 -139,  2016 .  [Ba07]  Baecker, Dirk: Studien zur nächsten Gesellschaft. Suhrkamp, Frankfurt am  Main , 2007 .  [Ba17]  Bastian, Jasmin; Feldhoff, Tobias; Harring, Marius: Call for Papers zum  Themenheft „ ‚Digita le Bildung ‘. Medienbezogene Bildungskonzepte für die  ‚nächste Gesellschaft ‘“, http://medienpaed.com/public/journals/1/cfps/CfP   _Digitale_Bildung.pdf, 02.05.17    [Ba73]  Baacke, Dieter: Kommunikation und Kompetenz. Grundlegung einer Didaktik  der Kommunikatio n und ihrer Medien . Juventa,  München , 1973 .  [Ba96]  Baacke, Dieter: Medienpädagogik. Grundlagen der Medienkommunikation (Bd.  1). Niemeyer , Tübingen,  1996 . Verstehen – Vernetzen – Verantworten 43ii “proceedings” — 2017/9/17 — 20:19 — page 44 — #44 ii i ii i [Be02]  Benjamin, Walter: Medienästhetische Schriften (darin: Das Kunstwerk im  Zeitalter seiner techn ischen Reproduzierbarkeit).  Suhrkamp, Frankfurt am  Main, 351-383, 2002 .  [Bl69]  Blumer, Herbert: Symbolic interactionism: Perspective and method.  Prentice Hall,  New Jersey (USA) , 1969 .  [Br16]  Brinda, Torsten: GI kritisiert reduzierten Bildungsbegriff der KMK: Informatik  muss in Bildungsstrategie für die digitale Welt integriert werden (25. Juli 2016) ,  https://www.gi.de/aktuelles/meldungen/detailansicht/article/gi -kritisiert reduzierten -bildungsbegriff -der-kmk-informatik -muss -in-bildungsstrategie fuer-die-dig.html, 02.05.201 7.  [Br17]  Brinda, Torsten; Diethelm, Ira; Kommer, Sven; Rummler, Klaus: Call for  Papers zum Themenheft „Medienpädagogik und Didaktik der Informatik. Eine  Momentaufnahme disziplinärer Bezüge und schulpraktischer Entwicklungen“,  http://med ienpaed.com/public/journals/1/cfps/CfP_Medienpaedagogik_und_Inf ormatik.pdf, 02.05.17 .  [Ca14]  Carstensen, Tanja ; Schachtner, Christina ; Schelhowe, Heidi ; Beer, Raphael:  Subjektkonstruktionen im Kontext digitaler Medien. In  (Carstensen, Tanja ;  Schachtner, C hristina ; Schelhowe, Heidi ; Beer, Raphael , Hrsg. ): Digitale  Subjekte, Transcript, Bielefeld , 2014 .  [Co72]  Cooley, Charles Horton: Social Organization. A Study Of The Larger Mind.  Schoken Books, New York , 1972 .  [Ge80]  Geulen, Dieter ; Hurrelmann, Klaus: Zu r Programmatik einer umfassenden  Sozialisationstheorie. In  (Hurrelmann, Klaus ; Ulich, Dieter , Hrsg.): Handbuch  Sozialisationsforschung, Beltz, Weinheim, 51 -67, 1980.   [GI16]  GI – Gesellschaft für Informatik  (2016) , Bildung in der digitalen vernetzten  Welt (Dagstuhl -Erklärung) : https://www.gi.de/aktuelles/meldungen/   detailansicht/article/dagstuhl -erklaerung -bildung -in-der-digitalen -vernetzten welt.html, 14.07.2016.   [GM16] GMK – Gesellschaft für Medienpädagogik und Kommunikationskultur :  Stellungnahme der FG Schule der GMK zum Strategiepapier der  Kultusministerkonferenz vom 12. Mai 2016 zu „Bildung in der digitalen Welt “,  http://www.gmk -net.de/fileadmin/pdf/GMK -Stellungnahme_zum_KMK Strategie -Entwurf.pdf , 02.05.2017 .  [Go99]  Goethe, Johann Wolfgang von: Poetis che Werke  (Bd. 5 ), Phaidon Verlag ,  Essen, 1999.  44 Thomas Knausii “proceedings” — 2017/9/17 — 20:19 — page 45 — #45 ii i ii i [He16]  Herzig, Bardo: Medienbildung und Informatische Bildung – Interdisziplinäre  Spurensuche. MedienPädagogik  25/16, 59-79, 2016,  http://www.medienpaed.com/article/view/428 , 02.05.2017.  [Ho10]  Hoffmann, D agmar ; Mikos, Lothar: Mediensozialisationstheorien – Modelle  und Ansätze in der Diskussion. VS, Wiesbaden , 2010 .  [Hu06]  Hurrelmann, Klaus: Einführung in die Sozialisationstheorie. Beltz, Weinheim ,  2006 .  [Hu08]  Hurrelmann, Klaus ; Grundmann, Matthias ; Walp er, Sabine: Handbuch  Sozialisationsforschung . Beltz , Weinheim,  2008 .  [Je06]  Jenkins, Henry: Convergence Culture. Where Old and New Media Collide. New  York University Press , New York, 2006 .  [KB16]  KBoM – Keine Bildung ohne Medien  (2016) : Stellungnahme der  Initiative  Keine Bildung ohne Medien – KBoM! zum Strategiepapier der  Kultusministerkonferenz vom 12. Mai 2016 zu „Bildung in der digitalen Welt “,  http://www.keine -bildung -ohne -medien.de/publications/stellungnahme -zumkmk-strategiepapier -bildung -in-der-digitalen -welt, 02.05.2017.   [KB17]  KBoM – Keine Bildung ohne Medien  (2017) : Klausurtagung zum Verhältnis  von informatischer Bildung und Medienbildung im Juli 2017 – Dagstuhl Dreieck in progress (Tagungsankündigung) ,  http://ftzm.de/medienbildung/klausurtag -zum-verhaeltnis -von-informatischer bildung -und-medienbildung, 21.05.2017.   [Ke06]  Keil, Reinhard: Zur Rolle interaktiver Medien in der Bildung. In  (Keil,  Reinhard ; Schubert, Detlef , Hrsg. ): Lernstätten im Wandel – Innovation und  Alltag in der Bildung. Waxman n, Münster , 59-77, 2006 .  [Ke17]  Keiner, Edwin: Didaktik – Bildung – Technik – Kritik. Medienpädagogik und  Antinomien der Moderne. MedienP ädagogik  27/17, 270 -286, 2017,  http://www.medienpaed.com/issue/view/33 , 02.05.2017.   [KM16] KMK – Kultusministerkonfer enz (2016) : Bildung in der digitalen Welt ,  https://www.kmk.org/fileadmin/Dateien/pdf/PresseUndAktuelles/2016/Bildung _digitale_Welt_Webversion.pdf, 10.12.2016.   [Kn09]  Knaus, Thomas: Kommunigrafie. kopaed, München , 2009 .  [Kn15a]  Knaus, Thomas: Me, my Tablet  – and Us. Vom Mythos eines  Motivationsgenerators zum vernetzten Lernwerkzeug für autonomopoietisches  Lernen. In  (Friedrich, Katja ; Siller, Friederike ; Treber, Albert , Hrsg.): Smart  und mobil – Digitale Kommunikation als Herausforderung für Bildung,  Pädago gik und Politik. kopaed,  München,  17-42, 2015 .  Verstehen – Vernetzen – Verantworten 45ii “proceedings” — 2017/9/17 — 20:19 — page 46 — #46 ii i ii i [Kn15b]  Knaus, Thomas ; Engel, Olga: (Auch) auf das Werkzeug kommt es an –  Technikhistorische und techniktheoretische Annäherungen an den  Werkzeugbegriff in der Medienpädagogik. In  (Knaus, Thomas ; Engel, Olga ,  Hrsg.): fraMediale – digitale Medien in Bildungseinrichtungen (Bd. 4). kopaed,  München, 15-57, 2015 .  [Kn16a]  Knaus, Thomas: Potentiale des Digitalen – Theoretisch -konzeptionelle  Betrachtungen pädagogischer und didaktischer Potentiale des schulischen  Einsa tzes von Tablets und BYOD. medien+erziehung: schule. smart. mobil  60/16, 33-39, 2016 .  [Kn16b]  Knaus, Thomas: digital – medial – egal? – Ein fiktives Streitgespräch um  digitale Bildung und omnipräsente Adjektive in der aktuellen Bildungsdebatte.  In (Brüggem ann, Marion ; Knaus, Thomas ; Meister, Dorothee , Hrsg.):  Kommunikationskulturen in digitalen Welten. kopaed, München, 99-130, 2016 .  [Kn16c]  Knaus, Thomas: Kooperatives Lernen. Begründungen – digitale Potentiale –  konzeptionelle Perspektiven. In  (Scheer, Augu st Wilhelm ; Wachter, Christian  Hrsg.): Perspektiven für die digitale Weiterbildung – Bildungslandschaften der  Zukunft. IMC AG, Saarbrücken, 141-155, 2016 .  [Kn16d]  Knaus, Thomas ; Engel, Olga: Wi(e)derstände – Digitaler Wandel in  Bildungseinrichtungen (Bd. 5  der fraMediale -Reihe). kopaed , München, 2016.   [Kn17]  Knaus, Thomas: Pädagogik des Digitalen – Phänomene – Potentiale –  Perspektiven. In  (Eder, Sabine ; Micat, Claudia ; Tillmann, Angela , Hrsg.):  Software takes command, kopaed , München, 2017 .  [Kr98]  Krotz, Friedrich: Digitalisierte Medienkommunikation: Veränderungen  interpersonaler und öffentlicher Kommunikation . In (Neverla, Irene , Hrsg.):  Das Netz -Medium. Kommunikationswissenschaftliche Aspekte eines Mediums  in Entwicklung , Westdeutscher Verlag, Opladen, 113-136, 1998.   [Kr16]  Krotz, Friedrich: Wandel von sozialen Beziehungen, Kommunikationskultur  und Medienpädagogik – Thesen aus der Perspektive des  Mediatisierungsansatzes. In  (Brüggemann, Marion ; Knaus, Thomas ; Meister,  Dorothee M. , Hrsg. ): Kommunikationskulturen in digitalen Welten. kopaed,  München, 19-42, 2016 .  [La93]  Latour , Bruno : Der Berliner Schlüssel. Erkundungen eines Liebhabers der  Wissenschaften ( La clef de Berlin et autres leçons d‘un amateur de sciences ).  Akademie -Verlag , Berl in, 1996.   [Ma01]  Manovich, Lev: The Language of New Media: MIT Press , Cambridge, 2001.   [Ma08]  Manovich, Lev: Software takes Command , www.softwarestudies.com/softbook ,  02.05.2017.  46 Thomas Knausii “proceedings” — 2017/9/17 — 20:19 — page 47 — #47 ii i ii i [Mc68]  McLuhan, Marshall: Die Gutenberg Galaxis: Das Ende des Buchzeitalte rs.  Econ, Düsseldorf , 1968 .  [Me73]  Mead, George Herbert: Geist, Identität und Gesellschaft. Suhrkamp, Frankfurt  am Main , 1973.   [MP14]  MPFS – Medienpädagogischer Forschungsverbund Südwest: KIM 2014 –  Kinder + Medien, Computer + Internet. MPFS, Stuttgart , 2014.  [MP16]  MPFS – Medienpädagogischer Forschungsverbund Südwest: JIM 2016 –  Jugend, Information, (Multi -) Media: MPFS , Stuttgart, 2016 .  [Na92]  Nake, Frieder: Informatik und die Maschinisierung von Kopfarbeit. In (Coy,  Wolfgang; Nake, Frieder; Pflüger, Jö rg-Martin; Rolf, Arno; Seetzen, Jürgen;  Siefkes, Dirk; Stransfeld, Reinhard , Hrsg. ): Sichtweisen der Informatik.   Vieweg, Braunschweig , 181-201, 1992 .  [Ni04]  Niesyto, Horst: Öffnung von Schule und partnerschaftliche Kooperation. Zur  Zusammenarbeit von schul ischer und außerschulischer Medienarbeit. In  (Pöttinger, Ida; Schill, Wolfgang; Thiele, Günter , Hrsg. ): Medienbildung im  Doppelpack. kopaed, München, 39 -49, 2004.   [Ni16]  Niesyto, Horst: Keine Bildung ohne Medien! – Kritische Medienbildung  jenseits funktio neller Vereinnahmung. In  (Knaus, Thomas ; Engel, Olga , Hrsg. ):  Wi(e)derstände – Digitaler Wandel in Bildungseinrichtungen (Bd. 5 der  fraMediale -Reihe). kopaed, München, 17-34, 2016 .  [Re15]  Reiter, Anton (2015): Medienbildung und informatische Bildung ,  http://medienimpulse .at/articles/view/795 , 02.05.2017.  [Sc07]  Schelhowe, Heidi: Technologie, Imagination und Lernen – Grundlagen für  Bildungsprozesse mit Digitalen Medien . Waxmann , Münster, 2007 .  [Sc14]  Schachtner, Christina ; Duller, Nicole: Kommunikationsor t Internet. Digitale  Praktiken und Subjektwerdung. In (Carstensen, Tanja ; Schachtner, Christina ;  Schelhowe, Heidi ; Beer, Raphael , Hrsg.): Digitale Subjekte . Transcript ,  Bielefeld,  81-154, 2014.   [Sc16]  Schelhowe, Heidi (2016): Through the Interface – Medie nbildung in der  digitalisierten Kultur. MedienPädagogik  25/16, 41-58, 2016,   http://www.medienpaed.com/article/view/427/426, 02.05.2017.   [Sc95]  Schorb, Bernd: Medienalltag und Handeln. Medienpädagogik in Geschichte,  Forschung und Praxis. Leske+Budrich , Opladen, 1995 .  [Sc97]  Schelhowe, Heidi: Das Medium aus der Maschine. Zur Metamorphose des  Computers. Campus, Frankfurt am Main , 1997 . Verstehen – Vernetzen – Verantworten 47ii “proceedings” — 2017/9/17 — 20:19 — page 48 — #48 ii i ii i [Sp13]  Spanhel, Dieter (2013): Sozialisation in mediatisierten Lebenswelten –  Grundzüge eines theoretischen Bezugsrahmens.  merz -Wissenschaft  57.6/13, 30 43, 2013 .  [Su99]  Sutter, Tilmann : Systeme und Subjektstrukturen. Zur Konstitutionstheorie des  interaktionistischen Konstruktivismus. VS, Wiesbaden , 1999 .  [Tu16a]  Tulodziecki, Gerhard: Aktuelle Debatten beim GMK -Forum 2015 i m  „Rückspiegel“. In  (Brüggemann, Marion ; Knaus, Thomas ; Meister, Dorothee ,  Hrsg.): Kommunikationskulturen in digitalen Welten – Konzepte und Strategien  der Medienpädagogik und Medienbildung. kopaed, München, 83-98, 2016 .  [Tu16b] Tulodziecki, Gerhard: Konk urrenz oder Kooperation? Zur Entwicklung des  Verhältnisses von Medienbildung und informatischer Bildung.   MedienPädagogik  25/16, 7-25, 2016,  http://www.medienpaed.com/article/view/428 , 02.05.2017.   [Tu97]  Tulodziecki, Gerhard: Medien in Erziehung und Bildu ng. Klinkhardt, Bad  Heilbrunn,  1997 .  [Vo10]  Vollbrecht, Ralf ; Wegener, Claudia: Handbuch Mediensozialisation. VS,  Wiesbaden , 2010.   [Wa16]  Wagner, Ulrike ; Ring, Sebastian: Organisierte Wildnis – Kooperation von  außerschulischer und schulischer Medienpädag ogik. In  (Knaus, Thomas ; Engel,  Olga , Hrsg.): Wi(e)derstände – Digitaler Wandel in Bildungseinrichtungen (Bd.  5 der fraMediale -Reihe). kopaed, München, 139-149, 2016 .  [We98] Wenger, Etienne: Communities of Practice: Learning, Meaning, and Identity.  Cambrid ge University Press, Cambridge (UK) , 1998.   [Wi02]  Winkler, Hartmut: Das Modell. Diskurse, Aufschreibesysteme, Technik,  Monumente – Entwurf für eine Theorie kultureller Kontinuierung. In  (Pompe,  Hedwig ; Scholz, Leander , Hrsg.): Archivprozesse. Die Kommunika tion der  Aufbewahrung. Dumont, Köln, 297-315, 2002 .  Lizenz   Dieser Beitrag steht mit dem Einverständnis des Verlags unter folgender Creative  Commons Lizenz: CC -BY 3.0 (https://creativecommons.org/licenses/by/3.0/de/) und  darf unter den Bedingungen dieser freien Lizenz genutzt werden.    48 Thomas Knausii “proceedings” — 2017/9/17 — 20:19 — page 49 — #49 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 11 Calliope mini Informatik zum Anfassen für GrundschülerInnen Stephan Noller1 Abstract: Im Vortrag wird der Gründer und Erﬁnder von Calliope mini über die Motivation der Leute hinter dem Projekt sprechen und versuchen die Frage zu beantworten, warum es sinnvoll ist, Kindern schon in der Grundschule das Programmieren beizubringen. Ausserdem wird ausführlich darauf eingegangen, inwiefern mit Calliope mini das Ziel der Förderung von digital literacy erreicht werden kann. Keywords: Grundschule; Calliope; Digital Literacy 1Calliope gemeinnützige GmbH, Linienstraße 52, 10119 Berlin, Deutschland, info@calliope.ccI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 49ii “proceedings” — 2017/9/17 — 20:19 — page 50 — #50 ii i ii iii “proceedings” — 2017/9/17 — 20:19 — page 51 — #51 ii i ii iVorträgeii “proceedings” — 2017/9/17 — 20:19 — page 52 — #52 ii i ii iii “proceedings” — 2017/9/17 — 20:19 — page 53 — #53 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,   Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017     15  Zieldimensionen für frühe informatische Bildung im Kindergarten  und in der Grundschule   Nadine Bergner1, Hilde Köster2, Johannes Magenheim3, Kathrin Müller3, Ralf Romeike4, Ulrik Schroeder1 und Carsten Schulte3   Abstract:  Dieser Artikel stellt die Grundlage n und wesentlichen Ergebnisse  einer Expertise für die  Stiftung Haus der kleinen Forscher e. V. zum Thema informatische Bildung in Kita und Grundschule vor. Hierzu wurde zunächst eine bildungstheoretisch orientierte Analyse hinsichtlich des  Kerns der Fachwi ssenschaft Informatik durchgeführt. Basierend hierauf wie auch auf weiteren  Analysen der Potenziale und Lebensumstände der Kinder sowie entsprechender internationaler  Curricula für die Primarstufe werden Kompetenzbereiche zur frühen informatischen Bildung  erarbeitet. Dazu wird auf den Rahmen der GI -Standards für die Sekundarstufen zurückgegriffen,  die für die Zielgruppe der Kita und Grundschulkinder um den weiteren Prozessbereich „ P0  Interagieren und Explorieren“  erweitert werden. Anschließend werden aus  dem so erweiterten  Rahmen vier Kombinationen von Prozess und Inhaltsbereichen besonders im Hinblick auf deren  allgemeinbildende Bedeutung als förderwürdig vorgeschlagen. Ergänzt werden sie um Empfehlungen und Vorschläge für die praktische Umsetzung sowie  Ansätze für weiterführende Forschungsfragen.   Keywords:  Frühe informatische Bildung, Grundschule, Kindergarten , Kita, Allgemeinbildung   1 Einleitung   Viele Kinder in Deutschland wachsen zurzeit mit großartigen Möglichkeiten und Perspektiven auf. Eine im Alltag  wirkmächtige, derzeit aber im Bildungssystem nicht in  dem Ausmaß widergespiegelte Ursache sind die Veränderungen  durch die Digitalisierung, die derzeit alle Lebensbereiche erfasst und transformiert. Sie führt dazu, dass  grundsätzlich Daten aller digitalis ierbaren Lebensbereiche zu geringen Kosten maschinell erfasst, gespeichert, verarbeitet, übermittelt und verbreitet werden können. Durch  die damit einhergehende enorme Steigerung der Verfügbarkeit von Information ergeben  sich weitreichende Möglichkeiten un d Herausforderungen für die Gesellschaft.   Derzeit ist noch unklar , wie auf diese umfassende n Veränderung en am besten reagiert  werden  kann. Die Autoren dieses Beitrags haben in einer  Expertise für die Stiftung Haus  der kleinen Forscher e. V . (HdkF) anhand t heoretischer Überlegungen, de n Blick in  1 RWTH Aachen, Lerntechn ologien & Didaktik der Informatik , Ahornstraße 55, 52074 Aachen, [bergner,  schroeder ]@informatik.rwth -aachen.de   2 FU Berlin, Grundschulpädagogik, Habelschwerdter Allee 45, 14195 Berlin, hilde.koester@fu -berlin.de   3 Universität Paderborn, Institut für Infor matik, Fürstenallee 11, 33102 Paderborn , [Johannes.Magenheim,  Kathrin.Mueller, Carsten.Schulte]@uni -paderborn.de   4 FAU Erlangen -Nürnberg, Didaktik der Informatik, Martensstr. 3, 91058 Erlangen, ralf.romeike@fau.de                                                             I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 53ii “proceedings” — 2017/9/17 — 20:19 — page 54 — #54 ii i ii i  16    Nadine Bergner  et al.    verglei chbare Länder und deren Ansätze  sowie der Analyse verschiedener Praxisprojekte  und des Forschungsstands in der Didaktik der Informatik  untersucht , welchen Beitrag die  informatische Bildung zu einer zeitgemäßen  und zukunftssicheren Bildung in Kindertagesstätten und Grundschulen  leisten kann.  Im vorliegenden Beitrag sollen die wichtigsten Erkenntnisse hierzu vorgestellt werden.   Aus unserer vor allem informatikdidaktisch geprägten Sichtweise ist klar: Die neuen  digitalen Medien sind nicht nur eine weitere Erscheinungsform im Alltag der Kinder, sie  stellen vielmehr einen neuen und eigenständigen  Bildungsbereich  dar. Zentrales Ziel  dieses neuen Bildungsbereichs bzw. dieser neuen Perspektive ist das eigenständige,  verantwortungsvolle Handeln in einer digital geprägten Lebenswirklichkeit. Um dieses  zu erreichen, bedarf es der Kenntnis der grundlegenden Funktionsprinzipien und Wirkungsweisen digitaler Technologien , da diese – im wahrsten Sinne des Wortes – sonst  zwar  oberflächlich genutzt, aber nur unzureichend erschlossen, (mit -)gestaltet und bewertet werden  können .  2 Analysen der Ausgangslage   2.1 Analyse und Beschreibung der Fachwissenschaft Informatik   Wie ist Informatik darzustellen , um Kindern  in der frühen Bildung die notw endigen  Grundlagen und ein adäquates Bild zu vermitteln? Informatik wird auch heute noch als  die Wissenschaft der automatischen Informationsverarbeitung definiert  [GI16]. Sie hat  ihre Wurzeln  in der Mathematik und den Ingenieurwissenschaft en, ähnelt in den  Methoden und Fragestellungen aber auch den  Naturwissenschaften [TA13].   Wir nehmen  vor allem die ingenieurwissenschaftliche  Perspektive der Informatik als  eine konstruierende Wissenschaft  auf, die sich im Kern mit Fragen rund um und über  die Konstruktion  von digitalen Artefakten – Hardware und Software – beschäftigt. Für  Bildung sind vor allem die grundsätzlichen Fragen interessant, wie diese Konstruktion  im Prinzip vonstattengeht, was das eigentlich ist, was konstruiert wird und wie dadurch  das Leben des  Einzelnen und der gesamten Gesellschaft beeinflusst wird. Ziel der Informatik ist es  zunächst vor allem , effiziente auf digitalen Artefakten ausführbare Algorithmen zu entwickeln, die Abläufe automatisieren und Daten transformieren.   In der Fachdidaktik  entwickelte sich rasch ein Konsens, dass das Lösen realweltlicher  Probleme im Mittelpunkt stehen  sollte . Diese Orientierung wird auch als Modellieren im  Gegensatz zum Programmieren bezeichnet . Für die Modellierung – also vor allem die  Schritte der Analyse u nd des Entwurfs – bedeutet das Folgendes: Ausgangspunkt ist eine  bestimmte (Problem -)Situation. Diese muss zunächst hinsichtlich eines Zwecks abgegrenzt und verallgemeinert werden, denn (nur) verallgemeinerte und damit wiederkehrende Aspekte einer Situatio n lassen sich sinnvoll automatisieren, weil die Lösung dann  auch wiederkehrend eingesetzt werden kann. Entscheidend ist nun der Unterschied zwi-54 Nadine Bergner et al.ii “proceedings” — 2017/9/17 — 20:19 — page 55 — #55 ii i ii i  Der Kurzt itel des Beitrags    17  schen der realen Welt und der Modellwelt. In der realen Welt ist meist intuitiv klar,  worum es sich bei einem Geg enstand oder einer Erscheinung handelt, doch die genaue  Grenzziehung fällt oft schwer: Wo fängt beispielsweise der Berg an und wo hört das Tal  auf? Idealtypen zu beschreiben ist meist leicht, aber es gibt immer wieder Unschärfen.  Z.B.: Ab welcher Anzahl ne nnen wir eine Ansammlung von Bäumen Wald? In der Modell-Welt bzw. der informatischen Welt müssen alle diese Unschärfen auf eindeutige  Aussagen bezogen werden können. Dieses Zurückführen ist Grundvoraussetzung für  Digitalisierung und Automation. In der info rmatischen Konstruktion wird also eine Eindeutigkeit hergestellt, die nicht immer so gegeben ist. In der Entwicklung werden hier  Entscheidung en getroffen, die oft aus rein s oftwaretechnischer Sicht relativ egal sind –  etwa wie groß das n ist, ab dem man vo n Wald spricht. Aus Anwenderperspektive kann  das durchaus sehr relevant sein, etwa, wenn Eigentümer für ‚Wald’ einen anderen Steuersatz als für eine Ansammlung von Bäumen bezahlen müssen.   Informatische Lösungen stellen also immer eine Eindeutigkeit her, d ie es ggf. vorher so  nie gegeben hat. Sie tun dies immer zweckbezogen, und dieser Einsatzweck bedingt eine  weitere wichtige Konsequenz: Eine Veränderung der Wirklichkeit, eine Wirkung, ist  immer beabsichtigt. Die automatische Ausführung soll etwas neu scha ffen oder ersetzen  – und damit wird das digitale Artefakt im Einsatz Teil der zuvor analysierten und antizipierten Wirklichkeit . Die Lösung kommt also prinzipiell immer zu spät: Wenn sie eingesetzt wird, gibt es die Situation gar nicht mehr, für die sie ei nmal entwickelt wurde. Das  treibt einen Kreislauf aus sich verändernden Soft wareversionen an. Die (Weiter -) Entwicklung von Programmen bzw. digitalen Systemen und Infrastrukturen erfolgt in einer  Ko-Evolution: Auf der einen Seite ausgelöst von sich verände rnden Bedingungen und  neuen Ideen im Einsatzkontext, der sozialen Seite, und auf der anderen Seite ebenso  getrieben von inner -technischen Anforderungen und Weiterentwicklungen. Digitale  Systeme bzw. Informatiksysteme werden daher zunehmend als soziotechnis che Systeme  aufgefasst [Ma08].  Für die Grundschule sollte daher ein Weg gefunden werden, diese Konstruktionsprozesse verständlich zu machen . Dazu ist eine Möglichkeit das Gestalten (das nicht mit Programmierung in eins gesetzt werden sollte), eine andere M öglichkeit ist die entsprechende Untersuchung fertiger Systeme , die Exploration  (vgl. [Kö06]). In der Expertise  [Be17] werden diese beiden Zugangsweisen und ihre Wechselbeziehungen jeweils durch  einen Ablauf von Handlungen und Lernprozesse n beschrieben (Ge staltungs und Explorationskreis , vgl. auch [Sc17] ).  2.2 Potenziale und Lebensumstände der Kinder   Die Exploration eignet sich auch deshalb, weil Kinder auch in Kita und Grundschulalter  bereits über Nutzungserfahrungen verfügen und diese sinnvoll aufgegriffen werden können. Verschiedene  Studien zu Kindern in digitalen Welten belegen, dass Kinder zwar  insgesamt selbstsicher mit Informatiksystemen agieren, dabei allerdings häufig die zugrundeliegenden Prinzipien nicht kennen und daher auch die Konsequenzen ihres Han-Zieldimensionen für frühe informatische Bildung 55ii “proceedings” — 2017/9/17 — 20:19 — page 56 — #56 ii i ii i  18    Nadine Bergner  et al.    delns nicht immer richtig einschätzen können  (u.a. [DI17] ). Ferner ist ihre Mediennutzung weitgehend konsumierend (Medienangebote im Web nutzen, Videos ansehen,  spielen). Sie vernachlässigen d as mögliche konstruktive und kreative Potenzial , mit und  innerhalb von Informatiksystemen Neues zu schaffen und sich ihre digitalen Welten  individuell nützlich zu gestalten. Unserer Einschätzung nach könnte eine besondere  Rolle von Schulen und ggf. auch Kindergärten darin bestehen, neben den vorherrschenden konsumie renden Nutzungsaktivitäten weitere Interaktionsmöglichkeiten und –typen  zu fördern und aufzuzeigen. Ferner könnten Interaktionen nicht nur isoliert und individuell erlebt werden, sondern Informatiksysteme durch Eltern und Kinder zusammen  gestaltet  werden, sodass die Erfahrungen dann auch versprachlicht, verarbeitet und altersgerecht reflektiert und eingeordnet werden können.   Untersuchungen zu lernpsychologischen Voraussetzungen sprechen dafür, dass informatische Bildung in Kindertagesstätten und in der Grun dschule sowohl sinnvoll als auch  möglich ist  (bspw. [Sc01] oder [An13]). Die Kinder sind prinzipiell kognitiv dazu in der  Lage, ausgewählte informatische Konzepte nachzuvollziehen, zu verstehen und umzusetzen. Sie sind für informatische Aspekte zu begeiste rn und zwar Mädchen und Jungen  gleichermaßen.   Auch wenn informatische Bildung für Kinder im Kindergarten und Grundschulalter ein  relativ junges Forschungsgebiet darstellt, existieren bereits verschiedene erprobte Zugänge, die Kinder motivieren und Kompet enzen der Informatik vermitteln können. Dabei können Zugänge mit und ohne Informatiksystem  genutzt werden. Programmierbare  Spielzeuge erlauben, Erfahrungen im kreativen, gestalterischen, programmierenden  Umgang mit technischen Geräten zu sammeln  und diese dabei spielerisch zu erkunden.  Alternativ stehen Mikrowelten und Entwicklungsumgebungen mit visuellen, block orientierten Programmiersprachen zur Verfügung. Diese Alternativen bieten Kindern die  Möglichkeit, frühzeitig die Phänomene der durch Informatiksys teme geprägten Welt  aktiv zu erkunden und erste Schritte des informatischen Denkens zu erfahren.  Hinsichtlich der Eignung für die verschiedenen Zielgruppen lassen sich Zugänge finden, die für  Kinder im Kindergartenalter intendiert und erprobt sind (bspw. L ernmaterialen der frühen Bildung  zu logischem Denken oder Mathematik , Bücher  (z. B. [Liu 17]), Bee-Bot,  ScratchJr) sowie Angebote  für Kinder ab dem Grundschulalter (häufig etwa ab 3. Klasse ,  bspw. CS Unplugged, Informatik -Biber, LEGO WeDo, Scratch, Schülerl abore). Allerdings ist die Forschungslage hierzu als ungenügend zu bezeichnen, da die verschiedene n  Erfahrungsberichte über den Praxiseinsatz allenfalls erste Hinweise zur Gestaltung und  Wirkung informatischer Bildung in dieser Altersgruppe geben können.   2.3 Vergleich internationaler Curricula für die Primarstufe   Aktuell etablieren international einige fortschrittliche Bildungssysteme informatische  Bildung in der Sekundarstufe I und in der Primarstufe als durchgä ngige Pflichtfächer,  um Schüler innen  und Schülern  informatische Denkweisen und Problemlösekompetenzen  mittels informatischer Methoden (international „Computational Thinking“) zu vermit-56 Nadine Bergner et al.ii “proceedings” — 2017/9/17 — 20:19 — page 57 — #57 ii i ii i  Der Kurzt itel des Beitrags    19  teln. Diese Denkweisen qualifizieren sowohl für eine fundierte und reflektierte Nutzung  von, als auch die kreative Gestal tung der eigenen Lebenswelt mit Informatiksystemen.  Daher werden die Fächer allgemein auch mit Begriffen wie Informatik (Computer Science, Informatics, Programming, Computing (UK, NZ)), informatisches Denken (Computational Thinking (USA)) oder Digitale Tec hnologien (Digital Technologies (AUS))  bezeichnet. Unabhängig von ihrer Bezeichnung beinhalten die internationalen Initiativen  für frühe informatische Bildung zum einen Bedien und Medienkompetenz (Digital  Literacy und ICT -Grundbildung) sowie zum anderen P roblemlösefähigkeiten und technische Gestaltungskompetenzen (Computing, Computational Thinking), die jeweils im  Nutzungsko ntext reflektiert werden müssen .  Die in der Expertise analysierten Kompetenzen aus den internationalen Standards und  Curricula wurden in den Ordnungsrahmen der GI -Standards der Sekundarstufen dargestellt. Dabei wurde herausgearbeitet, dass d ieser  Rahmen weitgehend genutzt werden  kann, die Bereiche allerdings unterschiedlich intensiv  bzw. mit zielgruppenspezifischen  Schwerpunkten  zu behan deln sind. Ferner wurde deutlich, dass der gesamte Schnittstellenbereich zur ICT -Anwendungskompetenz und digital liter acy innerhalb der informatischen Kompetenzen nur abgedeckt werden kann, wenn ein zusätzlicher Prozessbereich  definiert wird. Dieser Prozes sbereich, den wir im Folgenden als P0: Interagieren &  Explorieren  einführen, lässt sich in den internationalen Standards vielfach  finden.   Aus den Kompetenzbeschreibungen der internationalen Ansätze geht häufig nicht direkt  hervor, wie sich Kinder  mit den Fac hinhalten auseinandersetzen. Daher lässt sich eine  Zuordnung aller beschriebenen Kompetenzen eher zu den Inhaltsbereichen angeben und  dabei die möglichen Prozessbereiche andeuten, da die Art der Auseinandersetzung mit  einem Fachinhalt von der didakt ischen Auseinandersetzung in der unterrichtlichen Situation abhängt. Häufig sind die Kompetenzen lediglich als „Verstehen“ oder „Erkennen“  ausgewiesen. Das Verständnis können die Kinder aktiv erlangen, indem sie etwas modellieren & implementieren (P1) und dabei Teile begründen & bewerten ( P2). Dabei  werden oft Aspekte strukturiert & vernetzt (P3) und je nach didaktischer Methode dabei  kooperiert & kommuniziert (P4). Fachinhalte m üssen auch jeweils dargestellt und  die  fachliche Darstellung interpretiert w erden (P5). Vor allem müssen sich Kinder in der  aktiven Auseinandersetzung mit Fachkonzepten, Algorithmen, Programmen oder Informatiksystemen Strukturen und Abläufe erschließen, ind em sie mit diesen interagieren  und diese explorieren (P0), um sich ein ment ales Modell aufzubauen. Daher erweitern  die Autoren der Expertise das GI -Kompetenzm odell der Sekundarstufen um d en Prozessbereich  „P0: Interagieren & Explorieren“ .  3 Kompetenzbereiche zur frühen informatischen Bildung   Ausgehend v on unseren  wissenschaftstheor etischen Überlegungen zu r Informatik und  daraus resultierenden fachdidaktischen Implikationen, den Erwägungen zur Lebenswelt  der Kinder und ihren Erfahrungen mit digitalen Medien sowie unter Berücksichtigung Zieldimensionen für frühe informatische Bildung 57ii “proceedings” — 2017/9/17 — 20:19 — page 58 — #58 ii i ii i  20    Nadine Bergner  et al.    der Analyseergebnisse internationaler CS -Curricu la in der Primarstufe  schlagen wir vor,  zur Beschreibung von Kompetenzbereichen zu r frühen informatischen Bildung  das bisher in den Curricula zu den  Sekundarstufen  I und II verwendete Modell der GI Bildungsstandards  [GI16, Be17] um die Prozessdimension „P0: Interagieren und Explorieren “ zu  erweitern.   3.1 P0 Interagieren und Explorieren   Die Exploration eines digitalen  Artefakt s bzw. eines Informatiksystems  ähnelt dem Experimentieren und damit ein wenig dem Forschungskreis der Naturwissenschaften  (vgl.  [An12], S. 165 pp) . Hier geht es darum, anhand der nach außen wahrnehmbaren Funktion bzw. des Einsatzzweck es oder anhand der Nutzung des Systems – also aus der Nutzungsperspektive – zunehmend die innere Bauweise, die einzelnen Bestandteile und  deren Wirkmecha nismen zu erkunden. Das geht rein durch äußere Beobachtung nur bis  zu einem bestimmten Grad, aber die meisten Aspekte der Benutzungsoberfläche sind ja  so gestaltet, dass sie die inneren Systemzustände oder Aspekte davon widerspiegeln. Es  geht darum , die Au fmerksamkeit weg von der Aufgabe (einen Text verfassen, den Roboter fahren lassen, ein Foto machen) hin zur technischen Realisierung zu lenken (der Text  wird nicht bildlich gespeichert, sondern durch Zeichen und Metazeichen, die beschreiben, wie der Text a m Bildschirm aussieht...).   Das spielerische Erkunden und Ausprobieren von Objekten ihrer Alltagswelt ist ein  wesentliches Element kindlichen Lernens  (vgl. [Sa 04]). Sie ‚be -greifen’ derartige Objekte im wörtlichen Sinne und gewinnen über den spielerischen U mgang mit ihnen ein  rudimentäres mentales Modell über deren technische Funktionen  und ihr mögliches  ‚Innenleben’ (vgl. [SZ97]). Diese lernpsychologischen Erkenntnisse über den kindlichen  Umgang mit simplen technischen Artefakten können auch beim Lernen mit  und über  altersgemäße Informatiksysteme (z.  B. Bee-Bot) genutzt werden. Über das  Interagieren  mit und das Explorieren von Informatiksystemen können sich Kinder einen ersten Zugang zu diesen Systemen erschließen. Wenn es gelingt, diese Erfahrungen in moder ierten Lernprozessen für die Kinder zu systematisieren, können die Grundlagen für vertiefte  Erkenntnisse der Kinder über Funktion und Struktur derartiger System e geschaffen  werden.   Neben der lernpsychologischen Begründung dieses Prozessbereiches gibt es a uch zahlreiche fachdidaktische und fachwissenschaftliche Argumente, die die Relevanz dieses  Prozessbereichs für die informatische Bildung begründen. Zahlreiche internationale  Ansätze zur frühen informatischen Bildung, z.  B. Resnick am MIT [RR 13] oder die  CAS-Initiative in Großbritannien , enthalten mit dem ‚Tinkering’, dem spielerischen  Erkunden von Informatiks ystemen, ein dem Prozessbereich P0 ‚ Interagieren und Explorieren von Informatiksystemen’ vergleichbares methodisches Konzept.  58 Nadine Bergner et al.ii “proceedings” — 2017/9/17 — 20:19 — page 59 — #59 ii i ii i  Der Kurzt itel des Beitrags    21  3.2 Vier  hervorzuhebende Ko mbinationen   Im Folgenden begründen  wir ausgewählte Zielkompetenzen auf Ebene der Kinder, die  unserer Einschätzung nach die wichtigsten altersgemäßen Verknüpfungen von Prozess  und Inhaltsbereichen demonstrieren. Diese Priorisierung erfolgt anhand von Leitk riterien, die sich sowohl an der fachdidaktischen Relevanz des auszuwählenden Kompetenzbereichs als auch an lern und entwicklungspsychologischen Kriterien orientieren.  Neben den fachlich informatischen Kompetenzen, die sich aus einer Kombination von  Inhal tsund Prozessber eichen ergeben  und in die vor allem fachdidaktische Überlegungen einfließen, spielt bei der Priorisierung der Aspekt der Vermittlung von allgemeinen  Basiskompetenzen und der damit zu erwartende Beitrag zur Allgemeinbildung der Kinder eine  wichtige Rolle.     Zusammenfassend liegen die folgenden Leitkriterien der Priorisierung der ausgewählten  Kompetenzbereiche zugrunde:   1. Fachliche und fachdidaktische Konzepte : Welche Bedeutung hat der ausgewählte  Kompetenzbereich für das Verständnis von zentr alen informatischen Konzepten und  deren Anwendung bei Informatiksystemen?   2. Lern und entwicklungspsychologische Aspekte : Können die informatischen  Konzepte auf einem der Zielgruppe angemessenen kognitiven Niveau vermittelt  werden?   3. Alltagsbezug : Kann der Kom petenzbereich im Hinblick auf die Alltagssituation der  Kinder altersgemäß veranschaulicht werden?   4. Motivation:  Ist der priorisierte Kompetenzbereich anhand eines für die Kinder  motivierenden Beispiels darstellbar?   5. Fachliches Interesse : Sind die priorisierte n Kompetenzbereiche geeignet, das Interesse der Kinder an Informatik zu wecken?   6. Selbstwirksamkeit : Befähigt der Kompetenzbereich und das ausgewählte Beispiel  die Kinder dazu, ihre Selbstwirksamkeit im Umgang mit Informatiksystemen zu  stärken?   7. Allgemeinbild ung: Können der Kompetenzbereich und das ausgewählte Beispiel  einen Beitrag zur Allgemeinbildung der Kinder leisten?   8. Übergreifende Basiskompetenzen: Welche Basiskompetenzen , wie Kommunikationsund Kooperationsfähigkeit, Empathie, Problemlösefähigkeit , werden mit dem  ausgewählten Kompetenzbereich gefördert?   9. Bezug zu didaktischen Konzepten  (Grundschule, Sachunterricht, frühkindliche  Erziehung): Kann der priorisierte Kompetenzbereich in den curricularen Kontext der  Grundschule und in Konzepte der frühkindlich en Erziehung eingeordnet werden?   10. Existierende Praxiserfahrungen : Gibt es beim ausgewählten Kompetenzbereich  bereits positive Erfahrungen bei der pädagogischen Umsetzung von zielgruppenspezifischen Lernszenarien?   Insgesamt scheinen in Orientierung an diese n Kriterien die folgenden fachlichen Kombinationen aus Inhalts und Prozessbereichen besonders vielversprechend für eine gelingende informatische Bildung im Elementar und Primarbereich  (vgl. Abb. 1) : Zieldimensionen für frühe informatische Bildung 59ii “proceedings” — 2017/9/17 — 20:19 — page 60 — #60 ii i ii i • Interaktion mit und Exploration (P0) von Informatiksyst emen (I4)   • Modellieren und Implementieren (P1) von Algorithmen und Programmen (I2)   • Repräsentieren/Darstellen/ Interpretieren (P5) von Daten und Information (I1)   • Nachdenken über und Bewerten (P2) des Zusammenhangs von Informatik, Mensch  und Gesellschaft (I5)     Abb.  1: Empfohlene Kombinationen von Inhalts und Prozessbereich en. Rot für die Zielgruppe  wichtige und naheliegende Kombinationen. Gelb: Weitere zielführende Kombinationen.    Beispiele zur Umsetzung werde n in der HdkF -Expertise [ Be17] ausgeführt.   4 Rahmenb edingungen und Anforderungen für die praktische   Umsetzun g  Eine erfolgreiche Förderung früher informatischer Bildung hat die Erfüllung verschiedener Bedingungen zur Voraussetzung . Dies betrifft insbesondere die Kompetenzen der  pädagogischen Fach und Lehrk räfte. So sollten pädagogische Fach und Lehrkräfte    (a) fachliche  und fachdidaktische Kompetenzen besitzen, insbesondere um angebotenes  Lehr -Lern -Material zu verstehen , zu reflektieren  und darauf basierend eigene Lerneinheiten zu planen und zu gestalten,  (b) pädagogisch -didaktische Handlungskompetenz  besitzen , um Lerngelegenheiten bezogen auf informatisch e Bildung zu erkennen und zu   nutzen sowie  angebotene Materialien lerngruppenadäquat auszuwählen, anzupassen und 60 Nadine Bergner et al.ii “proceedings” — 2017/9/17 — 20:19 — page 61 — #61 ii i ii i  Der Kurzt itel des Beitrags    23  ggf. weiterzuentwickeln,  (c) positive Ein stellungen zur Informatik aufweisen , aber auch  gegenüber existierenden Vorstellungen offen für neue Sichtweisen sein.  Die Rahmenbedingungen bezogen auf die Institutionen betreffen vor allem die Schaffung der zeitlichen, räumlichen, organisatorischen und au sstattungsbezogenen Voraussetzungen.    Für den Bereich der informatischen Bildung im Elementar und Primarbereich liegen  bisher keine empirisch fundierten Kompetenzmodelle vor. Daraus resultiert ein Mangel  an verlässlichen Instrumenten zur Messung der erwor benen Kompetenzen im Elementar  und Primarbereich der informatischen Bildung und damit zusammenhängend eine empirisch fundierte Evaluation der informatischen Bildungskonzepte im Kita und Grundschulbereich. Wünschenswert für die weitere Arbeit im Forschung sbereich wäre die  konzeptuelle Evaluation entwickelter Maßnahmen und Beispiele , die fachliche Analyse  von Materialien und deren Einsatz sowie die Untersuchung der Wirksamkeit in Hinblick  auf Kinder, Erzieher innen, Erzieher  und Lehrkräfte, Multiplikatoren u nd Eltern.   5 Fazit   Die Analyse internationaler Curricula unter fachdidaktischen Gesichtspunkten hat offenbart, dass zusätzlich zu den bestehenden fünf Inhalts und fünf Prozessbereichen der GI Bildungsstandards für die Sekundarstufen ein weiterer Prozessbere ich „P0 Interagieren  und Explorieren“  notwendig ist, um informatische Bildung bereits im Elementar und  Primarbereich zielgruppenadä quat abzubilden. Durch diesen zusätzlichen Prozessbereich  kann die Alltagserfahrung der Kinder zielführend hin zu informat ischer Bildung aufgegriffen werden. Die Kinder erlernen anknüpfend an ihre persönlichen Vorerfahrungen  die zugrundeliegenden Wirkmechanismen von Informatiksystemen und können so auf  zukünftige Herausforderungen der Digitalisierung vorbereitet werden.   Da in formatische Bildung im Kita und Grundschulbereich ein junger Forschungsbereich  ist, wurde dieser im zugrundeliegenden Projekt sowohl aus der Perspektive fachdidaktischer Forschung als auch unter Gesichtspunkten pädagogischer Praxis analysiert. Es  wird deu tlich, dass gut qualifizierte pädagogische Fach und Lehrkräfte einen wesentlichen Faktor für die erfolgreiche Umsetzung informatischer Bildungskonzepte im Kita  und Grundschulbereich darstellen. Die praktische Erprobung der Beispiele und der vorgestellten  Konzepte sowie eine begleitende formative Evaluation werden von den Autoren dabei selbst als wesentliche Faktoren für die erfolgreiche Implementierung früher  informatischer Bildung in der Praxis von Kitas und Grundschulen angesehen.  Zieldimensionen für frühe informatische Bildung 61ii “proceedings” — 2017/9/17 — 20:19 — page 62 — #62 ii i ii i  24    Nadine Bergner  et al.    Literaturverzeichnis   [An13 ] Anders, Y.  et al: Wissenschaftliche Untersuchung zur Arbeit der Stiftung „Haus der  kleinen Forscher“, Band 5, Schubi Lernmedien 2013.   [An12] Ansari, S.  et al: Wissenschaftliche Untersuchung zur Arbeit der Stiftung „Haus der  kleinen Forscher“, Band 4,  Schubi Lernmedien 2012.   [DI17] Kinder in der digitalen Welt. (o. J.). DIVSI : https://www.divsi.de/publikationen/    studien/divsi -u9-studie -kinder -der-digitalen -welt/, Stand : 14.02.2017.   [GI16]  GI, Gesellschaft für Informatik e.V.: Bildungsstandards Inform atik für die Sekundarstufe II, Empfehlungen der Gesellschaft für Informatik e.V., Arbeitskreis „Bildungsstandards SII“: LOG IN, 2016 .  [Be17 ] Bergner, N., Köster H., Magenheim, J., Müller,  K., Romeike, R., Schulte, C.; Schroeder, U.: Zieldimensionen informa tischer Bildung im Elementar und Primarbereich.  In (Stiftung Haus der kleinen Forscher, Hrsg.) : Frühe informatische Bildung – Ziele  und Gelingensbedingungen für den Elementar und Primarbereich. Berlin , 2017  (im  Druck)   [Kö06]  Köster, H.: Freies Explorier en und Experimentieren: eine Untersuchung zur selbstbestimmten Gewinnung von Erfahrungen mit physikalischen Phänomenen im Sachunterricht, Studien zum Physik und Chemielernen. Berlin  : Logos -Verlag, 2006.   [Li17] Liukas, L .: Hello Ruby: Programmier dir dein e Welt. Bananenblau, 2017.   [Ma08]  Magenheim, J.: Systemorientierte Didaktik der Informatik Sozio -technische Informatiksysteme als Unterrichtsgegenstand? In (Kortenkamp; U. et al, Hrsg.): Informatische  Ideen im Mathematikunterricht. Franzbecker, Hildesheim , S. 17 -36, 2008 .  [RR13] Resnick, M.; Rosenbaum, E. : Designing for Ti nkerability. In (Honey, M.; Kanter, D. ,  Hrsg.):  Design, Make, Play: Growing the Next Generation of STEM Innovators,  Routledge, New York, S. 163 -181, 2013   [Sa04] Sachser, N. : Neugier, Spie l Und Lernen: Verhaltensbiolog ische Anmerkungen Zur  Kindheit.  Zeitschrift Für Pädagogik 50 4 , S. 475–86, 2004.   [Sc17] Schulte , C. et al: The Design and Exploration Cycle as a R&D Framework in CSE in  Proceedings of the IEEE EDOCON 2017, At hens, Greece, S.  862 – 871.  [Sc01] Schwill, A.: Ab wann kann man mit Kindern Informatik machen? In (Keil-Slawik, R.;  Magenheim, J. , Hrsg.): INFOS 2001  – 9. GI -Fachtagung Informatik und Schule ,  S. 13–30, 2001.   [SZ97] Schwarzkopf, H.; Zolg, M.: Kann der Computer denken? Grund schulzeitschrift,  H. 108, 1997.   [TA13]  Tedre, M .; Apiola, M.: Three computing Traditions in school computing education. In:  Kadijevich,  D.M.;  Angeli, C .,Schulte , C.: Improving Computer Science Education,   Routledge , New York, 2013 . 62 Nadine Bergner et al.ii “proceedings” — 2017/9/17 — 20:19 — page 63 — #63 ii i ii i  Was Grundschulkinder über Informatik wissen und was sie  wissen wollen   Sandra -Jasmin Petrut1, Nadine Bergner1 und Ulrik Schroeder1  Abstract:  Beim Einstieg in die Informatik in der Grundschule stellen sich die Frage n, wo die  Lernenden abgeholt werden müssen,  welche Erfahrungen sie mitbringen und was die Lernenden  an dem Thema Informatik interessiert und nicht zuletzt motiviert.  Im Rahmen eines eintägigen  Grundschulmoduls wurden für eine quantitative Analyse 198 Kinder mit Hilfe eines Pre -PostTests und für eine tiefergehende qualitative Analyse  34 Kinder  mit der Methode des  Plakaterstellens evaluiert. Die Auswertung beider Studien  ergab ein konsistentes Ergebnis. Der  Computer wird bei Grundschulkindern als „Spielzeug“ statt als Werkzeug bzw. Lernmedium  gesehen . Außerdem hat die betrachtete Zielgruppe keine Vorbehalte der Di sziplin gegenüber,  sondern zeig t ohne  geschlecht sspezifische  Unterschiede großes Interesse. Dies spiegelt  sich auch  in den Fragen  wider , die die Schülerinnen und Schüler auf die Plakate schri eben .  Keywords: Digitale Bildung, Primarstufe, Evaluation, Schülerlabor, Vorkenntnisse, Bild der  Informatik   1 Einleitung  und Motivation   Außerschulische Angebote bieten Kinder n im Grundschulalter eine Möglichkeit zum  Erwerb digitaler Bildung. Neben hardware und computergestützten Materialien, wie  dem Calliope Mini2, der Internetseite code.org  oder kindgerechte n Roboter n, gibt es  auch technikfreie Varianten, wie beispielsweise Computer Science Unplugged3 der  University of Canterbury. Auch Schülerlabore , wie da s InfoSphere4 der RWTH Aachen ,  bieten eine Reihe solcher Möglichkeiten . Außerdem gibt es in NRW das Projekt  „Informatik an Grundschulen“5, welches von den Universitäten Aachen, Paderborn und  Wuppertal in Kooperation mit dem Ministerium für Schule und Weite rbildung NRW ins  Leben gerufen wurde , um informatische Bildung in den Sachunterricht zu integrieren .  Im Kernlehrplan für den Sachunterricht an Grundschulen in NRW [Mi08]  ist ein Ziel ,  einen „verantwortungsvollen Umgang mit der natürlichen und gestalteten L ebenswelt“  [ebd. S. 39]  zu fördern. Auch sollen  die vielfältigen Erfahrungen der Schülerinnen und  Schüler in ihrer Lebenswirklichkeit sowie die Möglichkeit zur Informations beschaffung  durch „alte“ und „neue“ Medien genutzt werden. Betrachtet man die KIM -Studie für die                                                              1 RWTH Aachen, Lehr und Forschungsgebiet Informatik 9, Ahornstr. 55, 52074 Aachen,  nachname @informatik.rwth -aachen.de   2 calliope.cc   3 csunplugged.org   4 schuelerlabor.informatik.rwth -aachen.de   5 https://www.schulministerium.nrw.de/docs/Schulsystem/Unterricht/Lernbereiche -und-Faecher/Mathematik _-Naturwissenschaften/Informatik -an-Grundschulen/index.html  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 63ii “proceedings” — 2017/9/17 — 20:19 — page 64 — #64 ii i ii i  Altersgruppe 6 bis 13 aus dem Jahre 2014 [Me15], so erkennt man, dass digitale Medien  in beinahe allen Haushalten vorzufinden sind. So ist die heutige Lebenswirklichkeit der  Kinder voller Informatiksysteme. Auch die aktuell in Entwicklung befi ndlichen  Empfehlungen für Bildungsstandards Informatik speziell für den Primarbereich sehen  eine Anknüpfung an die Lebenswelt der Lernenden  im Inhaltsbereich “Informatik,  Mensch und Gesellschaft” explizit vor  [GI17] .  2 Related Work   Dieses Paper lehnt an eine  Interviewstudie von Borowski, Diethelm und Wilken aus  2011 an [BDW16] . Dabei wurden über 600 Grundschulkinder zwischen acht und zehn  Jahren aus 30 verschiedenen Klassen interviewt. Die Kinder formulierten  Fragen über  die T hemen Computer, Handys, Roboter  etc., die sie  einem Experten  stellen wollen .  Insgesamt wurden 2594 Fragen gesammelt, die die Autoren in die sechs  Hauptk ategorien : „Internet“ (656), „Computer“ (647), „Roboter“ (450), „Handys“ (405),  „Musik und Bild“ (210) und „Spielekonsolen“ (209)  zusamme nfassten . Außerdem  wurden Unterkategorien gebildet, die die Art der Fragen beschreiben. Diese sind  „Geschichte und Zukunft“, „Arbeitsweise“, „Potential“, „Entwicklung und Produktion“  und „Sicherheit und Haltbarkeit“.   Die Bedeutung des Fragenstellens für de n Lernprozess wurde in zahlreichen  internationalen Arbeiten herausgearbeitet und unter anderem von Chin und Osborne  2008 zusammengefasst  [CO08] . Das Stellen von Fragen seitens der Schülerinnen und  Schüler bietet sowohl für die Lernenden als auch für die Le hrende n einige Vorteile. Auf  der einen Seite fördert es das direkte Lernen eines Inhaltes , auf der anderen Seite fällt  den jeweiligen Lehrkräften eine Diagnose über die Vorkenntnisse der Schülerinnen und  Schüler leichter.   3 Forschungsfragen und -design   3.1 Forsc hungsfragen   In der hier präsentierten Studie sind Kinder im Grundschulalter (aus NRW) die  Zielgruppe. Aufgrund des extrem heterogenen Vorwissens, welches hauptsächlic h privat  erworben werden kann, ergeben sich folgende Forschungsfragen:    • Was verbinden Grun dschulkinder mit dem Begriff „Informatik“?   • Welches Interesse haben Grundschulkinder an Informatik?   • Was möchten Grundschulkinder über Informatik wissen?   • Welche Informatiksysteme  nutzen Grundschulkinder?  64 Nadine Bergner, Sandra-Jasmin Petrut, Ulrik Schroederii “proceedings” — 2017/9/17 — 20:19 — page 65 — #65 ii i ii i  3.2 Forschungsdesign   Das Informatik -Schülerlabor InfoSpher e bietet für diese Studie den Forschungskontext.  Im InfoSphere gibt es verschiedene Module für Kinder und Jugendliche ab der dritten   Klasse. Für Grundschulkinder gibt es das Modul „Zauberschule Informatik“, welches in  dieser Studie betrachtet wird. Dieses Modul  besteht aus verschiedenen Stationen , welche  den Kindern Thematiken aus der Informatik näherbringen. Dabei wird in zwei Stationen  der Computer als Werkzeug eingesetzt, an den anderen vier Stationen arbeiten die  Kinder mit Papier, Stiften und weiteren Hands -On-Materialien.   In Station  1 „Magische Zahlen“ erfahren die Kinder, dass und wie man jede Dezimalzahl  in eine Binärzahl umwandeln kann.  In Station 2 „Zettelzauber“ lernen die Kinder die  Funktion von Prüfbits kennen und wie man einen Fehler korrigiere n kann.  In der dritten  Station „Türme von Hanoi“ erlernen die Kinder das Prinzip  der Rekursion. In Station 4  „Bilder verzaubern“ werden auch Bilder binär dargestellt.  In der fünften Station  „Verhexte Wege“ arbeiten die Kinder am Computer und versuchen den kürzesten Weg  von einem Ort zum nächsten zu finden. So erfahren sie , wie ein Navigationsalgorithmus  funktioniert.  In der letzten Station „Der Computer“ schauen  die Kinder  ein Video über  den Aufbau des Computers. Anschließend wird ein Zuordnungsquiz bearbei tet, welches  die wichtigsten Bestandteile des Computers aufgreift. Für eine nähere Beschreibung der  Stationen und des Moduls kann Bergners Dissertation betrachtet werden  [Be15] .  Um den obigen  Forschungsfragen nachzugehen, wird eine Kombination aus einem  quantitativen und einem qualitativen  Forschungsansatz gewählt. Zum einen werden die  Grundschulmodule seit 2012 in einem Pre -Post-Testdesign schriftlich evaluiert, zum  anderen wurde die Methode des Plakaterstellens angewandt, um weitere Details zur  aktuellen Lebenssituation der Kinder und ihren Interessen zu erheben.  Gleichzeitig wird  erforscht, inwiefern sich diese kreative Methode als Forschungsinstrument für die  Zielgruppe der Grundschulkinder eignet, um deren Vorstellungen zu erheben.   In der Vorbefragung w ird das Vorwissen der Kinder über Informatik wie auch der Besitz  und die Nutzung des Computers erhoben. Weiter werden die Teilnehmerinnen und  Teilnehmer aufgefordert , ihr Interesse an verschiedenen Aspekten der Informatik  anzugeben.  In der Nachevaluation w ird zum einen ein Feedback zum Modul und d ie  Passung zu den vorherigen Erwartungen e rfragt,  zum anderen werden die Fragen zum  Interesse an verschiedenen Aspekten der Informatik wiederholt .  Die Auswertung geschieht in einem ersten Schritt summativ, um einen  Überblick über  die Angaben der Schülerinnen und Schüler zu erhalten. In einem zweiten Schritt werden  gruppenspezifische Unterschiede (z. B. zwischen Jungen und Mädchen) mittels des  (Pearson -)Chi-Quadrat -Tests ermittelt. Ebenso werden abschließend die Verä nderungen  durch den eintägigen Modulbesuch über den Vergleich der Pre und Posttests errechnet.   Für die qualitative Evaluation wurden zwei Durchführungen des Moduls „Zauberschule  Informatik“ betrachtet. Da ran nahmen zwei Grundschulklassen mit je 17 Schüler innen  und Schülern der vierten  Klasse  teil. Zu Beginn wurden die Kinder in Gruppen von je 4 -Was Grundschulkinder über Informatik wissen und was sie wissen wollen 65ii “proceedings” — 2017/9/17 — 20:19 — page 66 — #66 ii i ii i  5 Schülerinnen und Schüler aufgeteilt. Mit jeweils einem Interviewer saß jede Gruppe  um ein Plakat mit der Zeichnung eines Computers. Jedes Kind erhielt einen Stift  mit  unterschiedlicher Farbe, damit im Anschluss die Beiträge eindeutig einer Person  zugeordnet und damit teilgruppenspezifisch ausgewertet werden konnten.   Der Interviewer stellte vorkonzipierte Fragen, die die Schülerinnen und Schüler auf dem  Plakat beant worten. Sie hatten dabei die Möglichkeit , einzelne Begriffe oder Sätze zu  notieren , aber auch Bilder zu malen. Die gestellten Fragen gehören zu zwei Kategorien.  Im ersten Fragenblock ging es um das Vorwissen der Kinder und im zweiten Block  wurde nach den I nteressen gefragt. Die erste Frage lautete „Was fällt dir zu  dem Begriff   „Informatik “ ein?“, um zu ermitteln , welche Vorerfahrungen  die Kinder mitbrachten .  Das Bild des Computers gab den Kindern einen Gedankenanstoß, da vermieden werden  sollte, dass ein Ki nd nichts auf das Plakat schreibt. Auf Grundlage ihrer Antworten  wurden vier weitere Fragen gestellt:    1. An welchen Orten/wo könnte Informatik vorkommen?   2. Was könnte zu Hause/in der Schule/draußen mit Informatik zu tun haben?   3. Wo nutzt du einen Computer, ein Smartphone  etc.?   4. Mit wem nutzt du den Computer, das Smartphone  etc.?   Sowohl die dritte als auch die vierte Frage war davon abhängig , was die Kinder  bereits  angegeben  hatten. Falls beispielsweise kein Kind am Tisch ein Smartphone genannt  hatte, so wurde  nicht nach dem Smartphone gefragt, um keine Antworten zu erzwingen.   Anschließend ging es weiter mit dem zweiten Fragenblock. Hier war die erste Frage  „Was interessiert dich an Informatik?“. Auch hier wurden weitere Fragen abhängig de r  bereits gena nnten Antwort en gestellt :   1. Was interessiert dich an Computer n, Smartphones  etc.?   2. Was wolltest du schon immer über Informatik wissen?   Zu Beginn der Plakatevaluation stellte sich sowohl jedes Kind als auch der Interviewer  vor und schrieben ihre Namen auf das Plakat. So k onnte am Ende zwischen Mädchen  und Jungen differenziert werden. Mittels der kurzen Vorstellungsrunde und der  Tatsache, dass auch der Interviewer seinen Namen auf das Plakat schrieb, sollte das  Gefühl des „Getestetwerdens“ vermieden werden.   Um eine möglichs t objektive Erhebung zu ermöglichen, stellte der Interviewer  ausschließlich die vorkonzipierten Fragen. Auch eine Wertung der Antworten wurde  vermieden. Bei Rückfragen der Kinder, ob ihre Antworten richtig seien, wurde  ihnen  gesagt, dass sie dies alles gle ich bei der Moduldurchführung  erführen . Abgesehen von  der Freiheit ihrer Nennungen wurde den Kindern zu Beginn mitgeteilt, dass auf  Rechtschreibung, Grammatik und künstlerische Begabung nicht geachtet werde , um  mögliche Hemmungen zu nehmen.  66 Nadine Bergner, Sandra-Jasmin Petrut, Ulrik Schroederii “proceedings” — 2017/9/17 — 20:19 — page 67 — #67 ii i ii i  4 Auswertung der Evaluation   4.1 Quantitative Auswertung   Im Rahmen der quantitativen Evaluation beantworteten im Zeitraum von 2012 bis 2016  insgesamt 223 Kinder den Vorund Nach -Fragebogen. Dabei ergab sich durch die  Teilnahme von Geschwisterkindern an bestimmten Veranstaltung en ein Spektrum der  ersten bis siebten Klassenstufe. Für die folgende Auswertung wurden die Ausreißer  herausgefiltert, so dass sich ein Stichprobenumfang von N=198 Kindern ergab, von  denen 83 Kinder die dritte und 115 Kinder die vierte Klasse besuchten. Da mit ergibt sich  folgende Altersverteilung: 44 Acht -, 96 Neun -, 52 Zehn und 6 Elfjährige. Die  Stichprobe umfasst 84 Mädchen und 113 Jungen.   Der erste Fragenblock thematisiert die Vorerfahrungen der Kinder mit technischen  Geräten und insbesondere  mit dem Co mputer. 87,4% der Besucherinnen und Besucher   gaben an , Zugang zu einem Computer zu haben. Die se 173 Kinder wurden tiefergehend   dazu befragt, wozu sie den Computer nutzen.  In Abb.  1 sieht  man die Verteilung in vier   Kategorien.  Bezüglich der Kategorien „Haus aufgaben machen“  und „Spiele n“ konnte  eine geschlechtsspezifische Differenz festgestellt werden: Jungen gaben häufiger an, den  Computer für die Hausaufgaben bzw. für das Spielen zu verwenden.  Diese  Bestandsaufnahme macht deutlich, dass der private Computer  hauptsächlich als  Spielzeug und selten als Lernmedium  verstanden wird.     Abb. 1: Nennungen  zur Verwendung des Computers   Als Nächstes wurde das grundsätzliche Interesse der Kinder an dem bevorstehenden  Modul im Schülerlabor erhoben . Die Auswertung  zeigt , dass die wenigsten Kinder der  Informatik Vorbehalte entgegenbringen. Auch ergaben sich keine geschlechts spezi fische n Differenzen.  Im V ergleich des Pre und Posttest s wurden die Erwartungen der  Besucherinnen und Besucher mit der Erfüllung jener verglichen . 38 Kinder notierten Was Grundschulkinder über Informatik wissen und was sie wissen wollen 67ii “proceedings” — 2017/9/17 — 20:19 — page 68 — #68 ii i ii i  „viel Spaß” . Dies zeigt, dass die Kinder keine inhaltlichen Erwartungen an den Tag im  Informatik -Schülerlabor hatten. Obwohl die Angaben zu den Erwartungen im Vorfeld  vage blieben, gaben 115 Kinder nach dem Modul an, dass jenes ihren E rwartungen  entsprochen habe, 23 Kinder stimmten dem nicht zu.  Zusätzlich gab ein Großteil der  Kinder an „großes Interesse“ zu haben einen weiteren Kurs zu besuchen , welches  wiederum keine signifikanten Differenzen zwischen den Geschlechtern, den Kindern mi t  und ohne Computer zugang und der Klassenstufe aufzeigt.   Bezogen auf das vorhandene Bild zur Informatik zeigt sich vor dem Modulbesuch, dass  die Vorstellung kaum ausgeprägt ist  (Tabelle 1). Der Vergleich macht deutlich, dass der  Bezug zu den Informatiksyst emen auch in den Unplugged Modulen deutlich wird.  Kategorie  Anzahl   Nennungen im  Pretest  Anzahl   Nennungen im  Posttest  Kein Begriff  52 21 Computer  30 41 Technik  10 15 Tab. 1: Nennungen  zu Informatik   Das Interesse der Kinder an verschiedenen Aspekten wu rde in vier Kategorien unterteilt  (Abb. 2). Die Auswertung zeigte außerdem, dass Jungen größeres Interesse an  technischen Geräten haben, umgekehrt scheint das Interesse am Lösen kniffliger  Aufgaben bei Mädchen stärker ausgebildet zu sein. Auch an der Infor matik zeigten die  meisten Kinder starkes Interesse, obwohl sie gleichzeitig kundtaten, dass sie gar nicht  wüssten, was dies sei.   Abb. 2: Interesse an verschiedenen Aspekten   Nach denselben vier Kategorien wurden die Kinder  auch im Posttest befragt. Es zeig te  sich in allen Kategorien ein Zuwachs des Interesses, wobei dieser zur Informatik am 68 Nadine Bergner, Sandra-Jasmin Petrut, Ulrik Schroederii “proceedings” — 2017/9/17 — 20:19 — page 69 — #69 ii i ii i  deutlichsten ausfiel, was allerdings darin begründet ist, dass in den anderen beiden  Kategorien die Kinder bereits im Pretest sehr großes Interesse angaben.   4.2 Qualitative Auswertung   Die erstellten Plakate wurden nach jeder Durchführung eingesammelt, anonymisiert und  zusammengefasst. Bei den zwei Durchführungen entstanden acht Plakate, an denen  insgesamt 34 Schülerinnen und Schüler (13 Mädchen und 21 Jungen) mitgewirkt hatte n.  Die Kinder waren alle in der 4. Jahrgangsstufe und besuchten  dieselbe Schule.  Bei der  Analyse der Plakate wurden zunächst alle Einzelnennungen,  die kompletten Sätze,  Fragen und Bilder kategorisiert , wobei  die Rechtschreibung korrigiert  wurde . Auf Basis  der Vorarbeit von Borowski, Diethelm und Wilken wurden zunächst dieselben  Hauptkategorien gewählt. Da einige Angaben der Kinder nicht in die vorhandenen  Kategorien passten, entstanden weitere Kategorien und bestehende wurden erweitert.  Eine Aufzählung der meist genannten Kategorien und zugehöriger Anzahl der  Nennungen findet sich in Tabelle 2 in de n ersten beiden  Spalte n. Kategorie  Anzahl   Nennungen  Anzahl   Kinder  Mädchen  Jungen  Anzahl   Plakate  Spiele  84 28 10 (77%)  18 (86%)  8 Computer  82 28 11 (85%)  17 (81%)  8 Internet  57 27 10 (77%)  17 (81%)  8 Bild, Musik , Video  46 25 8 (62%)  17 (81%)  8 Kommunikationsmittel  39 26 11 (85%)  15 (71%)  8 Tablet  24 20 8 (62%)  12 (57%)  7 Schule  22 14 6 (46%)  8 (38%)  5 Programmierung  15 11 5 (38%)  6 (29%)  6 Tab. 2: Katego rienverteilung   Aus der Kategorie „Bild und Musik“ wurde „Bild, Musik, Video“, die Kategorien  „Spielekonsolen” und „Spiele” wurden zu „Spiele” zusammengefasst und aus der  Kategorie „Handy” entstand die Kategorie „Kommunikationsmittel“.   Die Anzahl der Nennun gen überschreitet die Anzahl der Kinder , zumal  Nennungen in  den Einzelbegriffen, aus kompletten Sätzen, aus den Fragen oder den Bildern  hinzugezählt wurden. Darüber hinaus ist i n Tabelle 2 die Anzahl der Mädchen und der  Jungen angegeben, die mindestens ein e Nennung zu den jeweiligen Kategorien hatten.  Die letzte Spalte zeigt, welche Kategorien auf wie vielen der Plakate vorzufinden waren.   Bereits hierbei lassen sich Unterschiede zu den Ergebnissen von Borowski, Diethelm  und Wilken erkennen. Das Thema „Spiel e“ steht  in der hier dargestellten Studie an erster  Stelle, wohingegen die Begriffe „Spielekonsole“ und „Spiele“ in der damaligen Studie  insgesamt, also nach dem  Zusammenfügen beider Kategorien zum Aspekt „Spiele”, nur  auf dem fünften Platz  lag. Ein Unters chied zwischen Mädchen und Jungen wird bei der  Auswertung nicht erkennbar. Dies kann unter anderem daran liegen, dass an allen Was Grundschulkinder über Informatik wissen und was sie wissen wollen 69ii “proceedings” — 2017/9/17 — 20:19 — page 70 — #70 ii i ii i  Plakaten sowohl Schülerinnen als auch Schüler arbeiteten, die sich gegenseitig  beeinflusst haben könnten.   Die gestellten Fragen w urden neben der Einteilung in die Hauptkategorien auch in die  Unterkategorien  „Potential“ (Po, 24x), „Entwicklung und Produktion“ (EP, 21x),  „Arbeitsweise“ (AW, 8x), „Vergangenheit und Zukunft“ (VZ, 3x) und „Sicherheit und  Haltbarkeit“ (SH, 1x)  zugeordnet.  Insgesamt wurden 57 Fragen von 27 Kindern gestellt.   In Tabelle 3 werden Fragen der Hauptkategorien „Spiele“, „Computer“, „Internet“ und  „Musik, Bild, Video“ den zugehörige n Unterkategorie n zugeordnet . Da jedoch nicht jede  Frage eindeutig einer Haupt und einer Unterkategorie zugeordnet werden kann,  wiederholen sich  die Fragen oder gehören der Unterkategorie „Sonstiges” an.  UK6 Fragen  HK7 Po Hat man bei Informatik meistens einen Computer?   Gehört Informatik zum Computer ? Computer  Für was braucht man einen  Fernsehe r? Musik, Bild, Video  EP Wie schaffen es Programmierer Spiele zu machen?   Wie programmiert man ein Videospiel?   Wie wurden (alle) Spiele hergestellt?  Spiele  Wer hat den Computer erschaffen?   Wie wird ein Computer gebaut?   Wer baut Computer?  Compute r Wie entsteht WLAN?  Internet  Wie wurden Pixel hergestellt?   Wie wurden Filme auf Fernseher hergestellt?  Musik, Bild, Video  AW Wie funktioniert eine elektrische Dartscheibe?  Spiele  Was kann man auf dem Computer alles machen?   Kann man auf dem Computer  Fotos machen?   Kann man auch Fotos und Videos machen?  Computer und   Musik, Bild, Video  Wie funktionieren Online -Server?  Internet  VZ Seit wann gibt es PS1, PS2, PS3, PS4 und Wii?  Spiele  Seit wann gibt es Computer?   Können Computer bald Menschen ersetzen?  Computer  SH Wie geht man mit dem Computer um?  Computer  Sonstiges  Wie viele Computer gibt es auf der Welt?   Wie viele Computerapps gibt es auf dem Computer?  Computer  Wie viele Internetseiten gibt es?  Internet  Kann man in Bilder reinspringen und in e ine andere  Realität kommen?   Kann man Pixel in die Realität setzen?  Musik, Bild, Video  Tab. 3: Unterkategorienverteilung                                                               6 Unterkategorie   7 Haup tkategorie  70 Nadine Bergner, Sandra-Jasmin Petrut, Ulrik Schroederii “proceedings” — 2017/9/17 — 20:19 — page 71 — #71 ii i ii i  Die Fragen zum Ort des Vorkommens und der Nutzung von Informatiksystemen wie  auch den damit verbundenen Personen  konnten nicht ausgewer tet werden. Fast alle  Kinder beantworteten diese drei Fragen nur mündlich. Dies könnte daran gelegen haben,  dass ihnen nicht eindeutig bewusst war, wie sie ihre Antworten auf das Plakat eintragen  konnten. Außerdem wurde die erste Frage  von einigen Kindern auch missverstanden,  sodass sie Geschäfte nannten, wo Informatiksysteme zu kaufen sind (z.B. Media Markt,  Saturn, Handyladen  etc.). Die Auswertung der letzten Frage ergab kein Ergebnis. Alle  Kinder, die hierauf antworteten , gaben an, dass sie entweder mit ihren Eltern oder mit  ihren Geschwistern die zu Hause befindlichen Geräte nutzen.   5 Reflexion und Ausblick   Zunächst zeigt  sowohl die quantitative als auch die qualitative Auswertung , dass  die  befragten Kinder (ebenso wie in den Ergebnissen der KIM -Studie)  häufig den Computer  nutzen. A uch in der Auszählung der Beiträge auf den Plakaten  ist die Kategorie  „Computer“ auf Platz 2 gelandet. Jedoch sollte hier vermerkt werden, dass die Kinder  den Computer im Wesentlichen als „Spielzeug“ sehen. Dies bestätigt sich du rch die  quantitative Auswertung  der Tätigkeiten, welche die Kinder am Computer ausführen .  Bei näherer Betrachtung der Nennungen auf den Plakaten  zeigt sich, dass  häufig  explizite Computerspiele genannt wurden, so wird ebenfalls ein Zusammenhang  zwischen de m Computer und den Spielen sichtbar.  Insgesamt sind keine  geschlechtsspezifischen Differenzen erkennbar. Dies wird zum einen in Hinblick auf die  Interessen der Schülerinnen und Schüler und zum anderen auch bei ihren Vorbehalten  der Disziplin gegenüber deut lich.  Aus der quantitativen Auswertung ergibt sich, dass über ein Viertel der Kinder kein  Vorwissen über Informatik haben. Dies lässt nicht nur darauf schließen, dass es keinen  Informatikunterricht in der Grundschule gibt, sondern auch, dass in anderen Fäc hern  kein Bezug zur Informatik hergestellt  wird.  Auch ergibt sich die Vermutung, dass Kinder  den Begriff „Informatik“ nicht zuordnen können, obwohl sie dennoch Vorwissen  mitbringen. Hier wird für zukünftige Evaluationen nach Alternativen gesucht ohne mit  anderen Assoziationen Einfluss auf die Nennungen zu nehmen.  Außerdem lag die  Kategorie „Schule“ in der Plakatevaluation mit nur 22 Nennungen weit hinten. Dieses  Ergebnis ist verwunderlich, da die jeweiligen Lehrkräfte mitteilten, dass die Kinder den  „Internetführerschein“  in der Schule  machten. So könnte man schlussfolgern, dass die  Anzahl der Nennung der Kategorie „Schule“ bei anderen Grundschulklassen noch  geringer ausfallen könnte.   Aus der Auswertung der von den Kindern notierten Fragen wird erkennbar, da ss sie  großes Interesse an den Unterkategorien „Potential“ und „Entwicklung und Produktion “  haben. Diese  Fragen  können  ohne spezifisches Vorwissen beantworte t werden , indem  danach recherchiert  wird. Dies könnte eine Motivation  sein, erste Aspekte informati scher  Bildung bereits in der Grundschule  zu vermitteln , um die Interessen der Kinder Was Grundschulkinder über Informatik wissen und was sie wissen wollen 71ii “proceedings” — 2017/9/17 — 20:19 — page 72 — #72 ii i ii i  abzudecken , ohne hochqualifizierte Informatiklehrkräfte in der Grundschule zu  benötigen.  Jedoch sollte nicht außer Acht gelassen werden, dass weitere  informatische  Aspekte , die ebenfalls das Interesse der Kinder wecken  und für eine informatische  Grundbildung zwingend notwendig sind,  nur von qualifizierten Lehrkräften vermittelt  werden können (z. B. das Thema Internet) .  Abschließend kann festgehalten werden, dass die Evaluat ionsmethode  „Plakat  erstellen“   gelungen ist, sodass sie in weiteren Durchführungen erneut eingesetzt wird. Zusätzlich  wird intensiv in Richtung Vorbilder  geforscht. So ist h ier die Frage offen, mit welchen   Personen  die Kinder Informatiksysteme assoziieren bzw. mit wem sie diese verwenden  und welche Rolle die Berufe der Eltern oder auch die Informatikerfahrung von  Geschwistern und Freunden spielen.  Aus diesem Grund wird auch in dem  Interviewleitfaden die Frage „Wem würdest du deine Fragen stellen?“ ergänzt.  Bei  weiteren Durchführungen werden auch die Lehrkräfte hinzugezogen, um die aktuelle  Situation und das mögliche Vorwissen der Schülerinnen und Schüler zu erheben . Dabei  würde sich ein Interview mit der jeweiligen Lehrkraft beim  Besuch im InfoSphere  eignen.  Darüber hinaus wird ein Beobachtungsbogen für die Betreuerinnen und Betreuer  angefertigt, sodass in zukünftigen Durchführungen auch die Aktivität der Kinder sowie  weitere nicht verschriftliche Beiträge  der Diskussion ausgewertet werden können .  Literaturve rzeichnis   [Be15] Bergner , N.: Konzeption eines Informatik -Schülerlabors und Erforschung dessen  Effekte auf das Bild der Informatik bei Kindern und Jugendlichen . Dissertation , Lehr  und Forschungsgebiet Informatik 9, RWTH Aachen, 2015.   [BDW 16] Borowski , C.; Diethelm, I .; Wilken, H. : What children ask about computers, the  Internet, robots, mobiles, games,  etc.. ACM -Press, S. 72 -75, Münster, 2016.   [CO08] Chin , C.; Osborne, J. : Students‘ question: a potential resource for teaching science. In  Studies in Science  Education 44.1.  S. 1-39, 2008.   [Me15 ] Medienpädagogischer Forschungsverbund Südwest: KIM -Studie 2014 – Kinder +  Medien, Computer + Internet. Stuttgart, 2015.   [Mi08] Ministerium für Schule und Weiterbildung des Landes NRW : Richtlinien und  Lehrpläne für die  Grundschule in Nordrhein -Westfalen: Deutsch, Sachunterricht,  Mathematik, Englisch, Musik, Sport, Evangelische Religionsle hre, Katholische  Religionslehre.  Ritterbach, Frechen, 2008.   [GI17] Arbeitskreis „Bildungsstandards Primarbereich“ der Gesellschaft für  Informatik e.V. :  Bildungsstandards Informatik für den  Primarbereich – zur Diskussion.   http://metager.to/gibsppdf , Stand: 02.01.2017.  72 Nadine Bergner, Sandra-Jasmin Petrut, Ulrik Schroederii “proceedings” — 2017/9/17 — 20:19 — page 73 — #73 ii i ii iAlgorithmisieren im Grundschulalter Sabrina Hoffmann1, Katharina Wendlandt2, Matthias Wendlandt3 Abstract: Informatik, insbesondere das Programmieren, wird zunehmend in Form von Projekten in Grundschulen in Deutschland thematisiert. Eine der wesentlichen Schl ¨usselkompetenzen zum erfolgreichen Programmieren ist das Algorithmisieren von Probleml ¨osungen. In der vorliegenden Arbeit wird zun ¨achst ein Stufenmodell des Algorithmisierens entworfen und darauf aufbauend ein Testverfahren zur Beurteilung der F ¨ahigkeit zum Algorithmisieren gewonnen. Basierend auf diesem Testverfahren wurden 155 Grundschulkinder aus acht Grundschulklassen der Schulstufen 2-4 bez¨uglich ihrer Kompetenz zum Algorithmisieren untersucht. Die zugrundeliegende Fragestellung war, inwiefern sich die F ¨ahigkeit zum Algorithmisieren in den Schulstufen 2-4 entwickelt. Mithilfe des Exakten Fisher-Tests konnten signiﬁkante Unterschiede in vier verschiedenen Stufen der F ¨ahigkeit zum Algorithmisieren zwischen den Klassenstufen nachgewiesen werden. Dabei ﬁel auf, dass der Unterschied zwischen der zweiten und dritten Klasse deutlicher ausﬁel als zwischen der dritten und vierten Klasse. Die vorliegende Arbeit stellt den ersten Teil einer zweigeteilten Untersuchung dar. Der zweite Teil der Untersuchung wird sich mit der Trainierbarkeit des Algorithmisierens im Grundschulalter besch ¨aftigen. 1 Einleitung Informatikunterricht tr ¨agt in vielf ¨altiger Weise zur kognitiven Entwicklung, der pers ¨onlichen Entfaltung und zu einem selbstbestimmten Handeln eines jeden Sch ¨ulers/ einer jeden Sch¨ulerin bei. Informatische Kompetenzen wie das Algorithmisieren, das Modellieren und die Probleml ¨osef¨ahigkeit bilden heutzutage grundlegende F ¨ahigkeiten, die in vielen Situationen auch unabh ¨angig von Informatik verwendet werden k ¨onnen. Notwendiges Wissen ¨uber Datenschutz, Datensicherheit und Grenzen des Computers bef ¨ahigt die SuS dazu, ein selbstbestimmtes Leben zu f ¨uhren. Deshalb ist es eine Kernfrage, ob und inwieweit Informatik schon in der Grundschule angeboten werden kann. Diese Frage wurde bereits in einigen Projekten angegangen. Mit der Zauberschule [BLS11] zeigen die Autoren einige interessante Ans ¨atze zum Thematisieren von Informatik in der Grundschule. Die Themen unterteilten sich in Bin ¨arzahlen, Bilddarstellung und Fehlererkennung. Die Autoren berichten, dass es den Kindern viel Spaß gemacht habe. In [Sc01] konnte aus psychologischen Studien gefolgert werden, dass Grundschulkinder in der Lage seien, gewisse fundamentale Ideen der Informatik altersgerecht zu verstehen und anzuwenden. In [BD09] wird ein Projekt im Rahmen einer Arbeitsgemeinschaft mit Kindern der vierten Klasse beschrieben, welches das Thema Programmieren durch die drei Programmierumgebungen Karol ,Scratch undLego Mindstoms thematisiert. Die Reﬂexion des Projekts zeigt, dass Karol undLego Mindstoms f¨ur einen 1Rotebergschule Dillenburg, R ¨uhlstraße 3, 35683 Dillenburg, Deutschland 2Mathematisches Institut, Universit ¨at Giessen, Arndtstr. 2, 35392 Giessen, Deutschland 3Institut f ¨ur Informatik, Universit ¨at Giessen, Arndtstr. 2, 35392 Giessen, DeutschlandI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 73ii “proceedings” — 2017/9/17 — 20:19 — page 74 — #74 ii i ii isolchen Kurs weniger geeignet sind, wohingegen Scratch eine gute M ¨oglichkeit darstellt, Kinder dieser Altersstufe erste Programmiererfahrungen sammeln zu lassen. Ein weiteres Projekt, welches das Programmieren in Scratch [GW16] in der Grundschule thematisiert, wurde von der Hochschule Hannover in einer zweiten Grundschulklasse durchgef ¨uhrt. Auch hierbei kommen die Autoren zu dem Schluß, dass”Grundschulkinder der zweiten Klasse in der Lage sind, Programmierkonzepte zu erlernen“. Die oben genannten Publikationen, bzw. Projekte, resultieren alle in dem Ergebnis, dass Grundschulkinder in der Lage sind zu programmieren. Diese Aussage erscheint gerade in der zweiten Klasse ¨uberraschend, da entwicklungspsychologische Aussagen dies nicht vermuten lassen w ¨urden und es stellt sich die Frage, inwieweit Grundschulkinder f ¨ahig sind zu programmieren. Nach Untersuchungen von Piaget [SL12] sind Kinder im pr ¨aoperationalen Stadium (2-7 Jahre) nicht imstande, geistige Operationen vollst ¨andig durchzuf¨uhren. Diese F ¨ahigkeit entwickelt sich erst im Verlauf des konkret-operationalen Stadiums (7-12 Jahre). Da das Grundschulalter die Zeit zwischen dem 6. und dem 10. Lebensjahr umfasst, sind grundlegende geistige Entwicklungsprozesse im Gange. Auch Untersuchungen mathematischer Kompetenzen im Grundschulalter best ¨atigen den Entwicklungsprozess. Erkl ¨arungen ﬁnden sich in der F ¨ahigkeit Repr ¨asentationsformen beziehungsweise Methoden zu kennen und nutzen zu k ¨onnen, beziehungsweise in den vorhandenen F ¨ahigkeiten des Arbeitsged ¨achtnisses [RHP08, Gr06]. Die vorliegende Arbeit geht der Frage nach, auf welchem Komplexit ¨atsniveau Grundsch¨uler programmieren k ¨onnen und welche Entwicklungsphasen dabei sichtbar werden. Den Schwerpunkt der Untersuchung bildet dabei die F ¨ahigkeit des Algorithmisierens. Das Algorithmisieren ist eine der wesentlichen ¨uberfachlichen Kompetenzen, die im Informatikunterricht vermittelt werden. Ein Algorithmus ist eine pr ¨azise Folge von Anweisungen zum L ¨osen eines genau deﬁnierten Problems. W ¨ahrend die Kompetenz Algorithmen anzuwenden oft eine sehr spezielle und auf ein Fach oder eine Wissenschaft bezogene T¨atigkeit ist, ist die Kompetenz des Algorithmisierens, also die F ¨ahigkeit f ¨ur ein gegebenes Problem eine pr ¨azise Folge von L ¨osungsschritten zu ﬁnden, eine Kompetenz, die in vielf¨altiger Weise, in verschiedenen Wissenschaften und vor allem im Alltag eine wichtige Rolle spielt. Sie ist die F ¨ahigkeit, eine Probleml ¨osung pr ¨azise und zielgerichtet zu konstruieren. Dar ¨uber hinaus liegt es im Charakter des Fachs Informatik, eine m ¨oglichst efﬁziente, also in m ¨oglichst wenig Zeit und mit m ¨oglichst wenig Platz, ablaufende Probleml ¨osung zu beschreiben, die dar ¨uber hinaus noch automatisiert werden kann. Damit grenzt sich die Informatik deutlich von anderen Wissenschaften ab. Die Algorithmisierung ﬁndet sich deshalb auch in jeglicher Strukturierung der Informatik aus schulischer Sicht wieder (vgl. z.B. [Bi16], [Sc93]). In Kapitel 2 wird zun ¨achst ein Stufenmodell des Algorithmisierens entwickelt, welches die drei Dimensionen Programmierelemente ,Raumkomplexit ¨atundProblemkomplexit ¨at umfasst. Die einzelnen Dimensionen werden jeweils in Stufen unterteilt. Aus diesem Stufenmodell werden in einem zweiten Schritt Testaufgaben entwickelt, um die F ¨ahigkeiten zum Algorithmisieren von insgesamt 155 Grundsch ¨ulern aus acht Klassen der Klassenstufen 2-4 an drei verschiedenen Schulen in Hessen bzw. Rheinland-Pfalz zu untersuchen. Die Aufgaben beziehen sich auf die Programmierung eines Hamsters [Bo13], der Aufga-74 Katharina Wendlandt, Matthias Wendlandt, Sabrina Ho  mannii “proceedings” — 2017/9/17 — 20:19 — page 75 — #75 ii i ii iben in einem Territorium bew ¨atigen muss. Wie in den eingangs erw ¨ahnten Projekten wird auch hier mit konkret sichtbaren Problemstellungen gearbeitet, um die Aufgaben f ¨ur die SuS leichter verst ¨andlich zu machen und die Motivation zu erh ¨ohen. Die Ergebnisse beﬁnden sich in Kapitel 4. Die dazugeh ¨orige Diskussion und ein Ausblick auf zuk ¨unftige Ideen beﬁndet sich in Kapitel 5. 2 Das Stufenmodell Zur Klassiﬁzierung der Programmierf ¨ahigkeiten wurden Dimensionen des Programmierens [MHB15, BR12] untersucht. Auch die Taxonomie von Biggs [BC82] kann als Maß adaptiert werden. Jedoch sind beide Modelle zu grobk ¨ornig f ¨ur die Untersuchung der vorliegenden Problemstellung, da das Spektrum der Dimensionen f ¨ur die F ¨ahigkeiten von Grundsch ¨ulern zu umfassend ist. Im Folgenden wird Algorithmisierung in drei verschiedene Dimensionen unterteilt. Die erste Dimension beschreibt die M ¨oglichkeiten Algorithmen zu beschreiben. Hierbei werden drei verschiedene Stufen unterschieden: 1. Sequenzielle Befehle 2. Alternativen 3. Iteration Als grundlegende Programmierelemente kommen normalerweise noch Methoden und in objektorientierten Programmiersprachen Objekte hinzu. Beide z ¨ahlen wir nicht zur Algorithmisierung, sondern ¨ahnlich wie auch in [Sc93] zur Modellierung, da sie die Funktionalit¨at nicht erweitern, jedoch die Struktur ver ¨andern. Rekursion k¨onnte als eigenst ¨andige Stufe betrachtet werden. Sie kann jedoch immer durch Iteration ersetzt werden und erweitert den Beschreibungsbereich somit nicht. Dar ¨uber hinaus ist die Rekursion ein fortgeschrittenes Konzept der Beschreibung von L ¨osungen, welches nur selten im Alltag intuitiv verwendet wird. Aus diesem Grund ist Rekursion f ¨ur eine Einf ¨uhrung in der Grundschule sicherlich nicht geeignet. In h ¨oheren Klassenstufen kann sie jedoch als eigenst ¨andige Stufe mit aufgenommen werden. Die zweite Dimension bezieht sich auf den Problemraum. Bei der gew ¨ahlten Umgebung ist dies das Territorium des Hamsters (vgl. Bild 1). So kann ein Problem einen fest vorgegebenen oder einen beliebigen Raum betreffen. Der Algorithmus kann somit nur f ¨ur genau einen Raum funktionieren oder f ¨ur eine ganze Klasse von Territorien. Bei einem fest vorgegebenen Raum wird dahingehend unterschieden, ob der Weg fest vorgegeben ist oder nicht: 1. vorgegebener Raum, Weg vorgegeben 2. vorgegebener Raum 3. beliebiger RaumAlgorithmisieren im Grundschulalter 75ii “proceedings” — 2017/9/17 — 20:19 — page 76 — #76 ii i ii iBei Problemen mit einem vorgegebenem Weg m ¨ussen die Kinder nicht selbst einen Weg ﬁnden, sondern dieser ist durch die Beschaffenheit des Raums vorgegeben (vgl. Bild 4 im Gegensatz zu Bild 5). Probleme in einem beliebigen Raum bed ¨urfen der F ¨ahigkeit, L ¨osungen nicht nur an konkreten Situationen festzumachen, sondern ein Muster oder etwas Vergleichbares zu erkennen. Ein Beispiel hierf ¨ur w¨are”Beschreiben Sie einen Algorithmus, der Sie aus einem beliebigen Labyrinth f ¨uhrt“. Nach Piaget [SL12] ist diese F ¨ahigkeit, also die F ¨ahigkeit, Verhalten unabh ¨angig von einer konkreten Situation geistig zu verarbeiten, im konkret-operationalen Stadium (7-12 Jahre) noch nicht herausgebildet. Deshalb kann diese Stufe nur als Ausblick gewertet werden. Sie wird im Folgenden nicht untersucht. Die dritte Dimension umfasst die Problemkomplexit ¨at. Hierbei werden ebenfalls drei verschiedene Stufen unterschieden: 1. 2-3 ¨Anderungen 2. 4-8 ¨Anderungen 3. beliebig viele ¨Anderungen, Erkennung und Bearbeitung von Mustern Untersuchungen zur Verarbeitungsund Behaltensspanne [PSZ11] zeigen, dass 6-j ¨ahrige Kinder dazu f ¨ahig sind, etwa 4 W ¨orter unmittelbar reproduzieren zu k ¨onnen. Die Verarbeitungsleistung ist noch geringer einzusch ¨atzen, vgl. [Gr06]. Nach der Durchf ¨uhrung von V ortests mit Zweitund Drittkl ¨asslern zeigte sich, dass Probleme mit vier oder mehr ¨Anderungen, die sich die SuS merken mussten, deutlich schlechter gel ¨ost wurden. Die letzte Stufe (beliebig viele ¨Anderungen) kann nur in Kombination mit der dritten Stufe der Dimension Problemraum , also beliebiger Raum , auftreten. Deshalb wird sie in dieser Arbeit nicht untersucht. Die unterschiedlichen Kombinationen von Komplexit ¨atsstufen werden im Folgenden an einigen Stellen mit Zahlen abgek ¨urzt. So beschreibt die Bezeichnung 3.2.1 ein Problem, dass unter Verwendung von Iteration, in einem vorgegebenen Raum mit maximal 2-3 ¨Anderungen gel ¨ost werden muss. 3 Methode Insgesamt wurden von den SuS sieben Aufgaben bearbeitet. Alle Aufgaben wurden mit Zettel und Stift bearbeitet. Es wurde bewusst auf den Einsatz von Computern verzichtet, da sich bei der Verwendung von Computern die M ¨oglichkeit bietet, eine richtige L ¨osung durch Austesten zu gewinnen. Dies misst jedoch nicht die F ¨ahigkeit zum Algorithmisieren. Bevor die konkreten Aufgaben beschrieben und analysiert werden, sei erw ¨ahnt, dass die Untersuchung nacheinander drei Befehlss ¨atze verwendet hat. Befehlssatz 1 wurde in den Aufgaben 1-4 verwendet. Befehlssatz 2 in den Aufgaben 2-4. F ¨ur die Aufgaben 5-7 wurde ausschließlich Befehlssatz 3 verwendet.76 Katharina Wendlandt, Matthias Wendlandt, Sabrina Ho  mannii “proceedings” — 2017/9/17 — 20:19 — page 77 — #77 ii i ii i Befehlssatz 1 wurde folgendermaßen deﬁniert: vorEr geht ein K ¨astchen vor, links Er geht ein K ¨astchen nach links, rechts Er geht ein K ¨astchen nach rechts, zur¨uckEr geht ein K ¨astchen zur ¨uck. Befehlssatz 2 umfasst die Befehle: vor bis zur Wand Er geht vor bis zur Wand, links bis zur Wand Er geht nach links bis zur Wand, rechts bis zur Wand Er geht nach rechts bis zur Wand, zur¨uck bis zur Wand Er geht zur ¨uck bis zur Wand. Befehlssatz 3 umfasst die Befehle: vorEr geht ein K ¨astchen vor, linksum Er dreht sich nach links (90 Grad), rechtsum Er dreht sich nach rechts (90 Grad), Wand Er geht vor bis zur Wand. Im Folgenden werden die Aufgaben erkl ¨art. Zun ¨achst die ersten beiden Aufgaben und Aufgabe 5: 1. Das ist unser Hamster Emil. Er hat einen neuen K ¨aﬁg bekommen und kennt sich noch nicht so gut aus. Er wacht nachts auf und hat Hunger. Leider ist es sehr dunkel und er sieht nichts. Bitte hilf ihm, damit er das Futter ﬁndet (siehe Bild 1). 2. Emil will sein neues Spielzeug, einen Tunnel, ausprobieren. Er ist noch ein bisschen ¨angstlich. Du musst ihn f ¨uhren. Du darfst kein Kommando zweimal hintereinander benutzen (vor vor ist nicht erlaubt!) (siehe Bild 2). 5. Emil hat Futter gefunden und m ¨ochte es in seinen Bau bringen. Bitte hilf ihm! Leite ihn zum Futter und dann zur ¨uck zum Ausgangspunkt. Bild 1. Aufgabe 1 Bild 2. Aufgabe 2 Bild 3. Aufgabe 5 Diese Aufgaben dienen zum einen als Einf ¨uhrung der Befehlss ¨atze und”Warming up“, zum anderen sollen sie zeigen, dass die SuS die Befehle verstanden haben, wissen, wie sie ihre L ¨osungen aufschreiben sollen und prinzipiell keine links-rechts Schw ¨achen haben. Sie zielen noch nicht darauf ab, eine der Stufen der Komplexit ¨at (vgl. Kapitel 2) zu messen. Der erste Block von bewerteten Aufgaben (3+4) besch ¨aftigt sich mit der Stufe der Iterationen . Hierbei wird die erste Stufe des Problemraums (vorgegebener Raum, vorgegebenerAlgorithmisieren im Grundschulalter 77ii “proceedings” — 2017/9/17 — 20:19 — page 78 — #78 ii i ii i Weg) in Aufgabe 3 und die zweite Raumstufe in Aufgabe 4 (vorgegebener Raum) getestet. Die Problemkomplexit ¨at bleibt in der untersten Kategorie, da die Tests vor allem Aussagen¨uber die F ¨ahigkeit des Konzepts der Iteration geben sollen. Es werden also Stufe 3.1.1 und Stufe 3.2.1 getestet. Die Aufgaben 3 und 4: 3. Puh! Der Tunnel ist ja noch gar nicht zu Ende und jetzt geht er auch noch im ZickZack weiter. F ¨uhre Emil durch den Tunnel. Emil, mache solange ... bis du aus dem Tunnel kommst! 4. V om vielen Laufen hat Emil aber Hunger. Benutze m ¨oglichst wenig Anweisungen. Emil, mache solange ... bis du oben an der Wand bist. Gehe nun noch ... Bild 4. Aufgabe 3 Bild 5. Aufgabe 4 In den Aufgaben 6 und 7 wurde die Problemkomplexit ¨at untersucht. So wurden bei beiden Aufgaben die ersten beiden Stufen auf unterstem Niveau betrachtet (sequentielle Befehle, vorgegebener Raum, vorgegebener Weg) . Aufgabe 6 misst die Problemkomplexit ¨at auf Stufe 1 (2-3 ¨Anderungen) und Aufgabe 7 misst die Problemkomplexit ¨at auf Stufe 2 (48¨Anderungen) . In V ortests zeigte sich, dass sich die Kinder Positionen im Raum durch Benutzung des Fingers auf dem Aufgabenzettel merkten. Deshalb wurde bei den Aufgaben 5-7 die Drehung aufgenommen und darauf geachtet, dass die SuS nur einen Stift zur L¨osung benutzen konnten. Auf diese Weise konnte sichergestellt werden, dass die SuS sich gewisse Situationen merken mussten. Diese F ¨ahigkeit wird beim Programmieren h ¨auﬁg ben¨otigt, zum Beispiel bei Ver ¨anderungen von Variablen oder Arrays in einem Programm.78 Katharina Wendlandt, Matthias Wendlandt, Sabrina Ho  mannii “proceedings” — 2017/9/17 — 20:19 — page 79 — #79 ii i ii i Die Aufgaben 6 und 7: 6 Emil ist entlaufen und ist in ein Rohr gekrabbelt. Er hat Angst und m ¨ochte deshalb nur noch vorw ¨arts laufen, weil er dort alles gut sieht. K ¨onntest du ihm helfen, wieder heraus zu kommen? 7 Emil ﬁndet wieder einmal das Futter nicht. F ¨uhre Emil zu den 6 Honigb ¨allchen. Bild 6. Aufgabe 6 Bild 7. Aufgabe 7 Um die Objektivit ¨at der Untersuchung zu gew ¨ahrleisten, wurde ein einheitlicher Ablaufplan f ¨ur alle Untersuchungen aufgestellt. Sowohl die Erkl ¨arungen der Befehle, als auch die gezeigten Beispiele und der organisatorische Ablauf waren somit einheitlich und klar vorgegeben. Dar ¨uber hinaus wurden alle Untersuchungen unter Anleitung derselben Person durchgef ¨uhrt. 4 Ergebnisse Die bearbeiteten Aufgaben wurden bewertet und die Resultate in die diskrete Ordinalskala bestehend aus den drei Merkmalen”richtig gel ¨ost“,”teilweise gel ¨ost“ und”nicht gel ¨ost“ eingeordnet. Die Bewertung”teilweise gel ¨ost“ wurde vergeben, wenn kleinere Fehler gemacht wurden, aber die L ¨osung des Problems erkennbar war. Syntaxfehler, bzw. Rechtschreibfehler, wurden nicht als Fehler gewertet. Die Ergebnisse der einzelnen Aufgaben sind in Kontingenztafeln dargestellt. Die statistische Auswertung der Ergebnisse wurde mittels des Exakten Fisher-Tests durchgef¨uhrt. Die Berechnung erfolgte durch das Statistikprogramm R. Der Nachweis der Leistungsunterschiede zwischen den einzelnen Klassenstufen erfolgt zum Signiﬁkanzniveau 1%. Die nachgewiesenen Unterschiede gelten als hoch signiﬁkant .Algorithmisieren im Grundschulalter 79ii “proceedings” — 2017/9/17 — 20:19 — page 80 — #80 ii i ii iSind Unterschiede in den Leistungen zwischen der zweiten und dritten und zwischen der dritten und vierten Klasse nachweisbar, so kann hier aufgrund der Daten transitiv auf einen Leistungsunterschied zwischen den Klassen 2 und 4 geschlossen werden. Nur in Einzelf ¨allen werden daher die Ergebnisse der zweiten und vierten Klasse direkt miteinander verglichen. Aufgabe 3 Klasse 2 Klasse 3 Klasse 4 richtig gel ¨ost 5 31 39 75 teilweise gel ¨ost 1 3 0 4 nicht gel ¨ost 27 32 17 76 33 66 56 155 Tabelle 1. Ergebnisse Aufgabe 3 Bei Aufgabe 3 ist zwischen der zweiten und dritten Klasse ein signiﬁkanter Unterschied nachweisbar ( p=0.002). Auch wenn im Vergleich zu den SuS aus Klasse 3 ein h ¨oherer Prozentsatz der SuS aus Klasse 4 die Aufgabe richtig l ¨osen konnte, ist dieser Unterschied nicht signiﬁkant ( p=0.014). Ein deutlicher Leistungsunterschied besteht außerdem zwischen der zweiten und vierten Klasse ( p<0.001). Aufgabe 4 Klasse 2 Klasse 3 Klasse 4 richtig gel ¨ost 1 16 29 46 teilweise gel ¨ost 0 5 0 5 nicht gel ¨ost 32 45 27 104 33 66 56 155 Tabelle 2. Ergebnisse Aufgabe 4 Bei Aufgabe 4, der Aufgabe auf der h ¨oheren Problemstufe 3.2.1, lassen sich signiﬁkante Unterschiede zwischen der zweiten und dritten Klasse ( p=0.003) und zwischen der dritten und vierten Klasse ( p=0.001) nachweisen. Es kann außerdem festgestellt werden, dass nur ein Kind aus der zweiten Klasse die Aufgabe l ¨osen konnte. Aufgabe 6 Klasse 2 Klasse 3 Klasse 4 richtig gel ¨ost 10 29 31 70 teilweise gel ¨ost 7 17 14 38 nicht gel ¨ost 16 20 11 47 33 66 56 155 Tabelle 3. Ergebnisse Aufgabe 6 Bei Aufgabe 6 l ¨asst sich kein signiﬁkanter Unterschied zwischen den einzelnen Klassenstufen feststellen. Auch wenn angenommen werden muss, dass die SuS der zweiten und dritten Klasse die Aufgabe gleichermaßen l ¨osen konnten ( p=0.216), genauso wie die SuS80 Katharina Wendlandt, Matthias Wendlandt, Sabrina Ho  mannii “proceedings” — 2017/9/17 — 20:19 — page 81 — #81 ii i ii ider dritten und vierten Klasse ( p=0.350), so zeichnet sich doch ein Unterschied zwischen den SuS der zweiten und vierten Klasse ab ( p=0.015). Aufgabe 7 Klasse 2 Klasse 3 Klasse 4 richtig gel ¨ost 6 34 38 78 teilweise gel ¨ost 8 13 6 27 nicht gel ¨ost 19 19 12 50 33 66 56 155 Tabelle 4. Ergebnisse Aufgabe 7 Bei der h ¨oheren Problemkomplexit ¨at in Aufgabe 7 ist ein signiﬁkanter Unterschied zwischen der zweiten und dritten Klasse nachweisbar ( p=0.003). Der Unterschied in den Ergebnissen der dritten und vierten Klasse ist nicht signiﬁkant ( p=0.184). Es liegt ein deutlicher Unterschied zwischen den Leistungen der SuS der zweiten und vierten Klasse vor(p<0.001). 5 Diskussion und Ausblick Es zeigt sich ein deutlicher Leistungsunterschied zwischen der zweiten und der dritten Klasse. So konnten in den Aufgaben 3, 4 und 7 signiﬁkante Unterschiede nachgewiesen werden. Auff ¨allig ist auch, dass, bis auf eine einzige Ausnahme, kein Sch ¨uler und keine Sch¨ulerin der zweiten Klasse das Konzept der Iteration umsetzen konnte. Hingegen zeigt sich in der dritten Klasse, dass nahezu die H ¨alfte der Kinder unmittelbar f ¨ahig waren, dieses Konzept umzusetzen, sofern der Weg vorgegeben war. Bei nicht vorgegebenem Weg waren es nur noch ein Viertel der Drittkl ¨assler, die die Aufgabe l ¨osen konnten. Der Unterschied zwischen zweiter und dritter Klasse wird auch in Aufgabe 7 sehr deutlich. So nimmt die Leistung bei einer h ¨oheren Anzahl von Ver ¨anderungen, die verarbeitet werden m¨ussen, stark ab. Der Unterschied zwischen den Klassen 3 und 4 zeigt sich vor allem bei dem Konzept der Iteration. So ist der Unterschied bei Aufgabe 3 mit vorgegebenem Weg zwar vorhanden, aber nicht signiﬁkant. Bei Aufgabe 4 hingegen haben zirka ein Viertel der Drittkl ¨assler die Aufgabe korrekt gel ¨ost, wohingegen mehr als die H ¨alfte der Viertkl ¨assler diese Aufgabe erfolgreich l ¨osen konnte. Die sichtbaren Unterschiede in den Ergebnissen der Drittund Viertkl ¨assler in Aufgabe 7 m ¨ussen als zuf ¨allig angesehen werden. Es zeigt sich, dass Aufgaben auf sehr niedrigem Niveau in allen Klassenstufen erfolgreich bearbeitet werden konnten. Sowohl das Konzept der Iteration als auch h ¨ohere Problemkomplexit ¨atsstufen f ¨uhrten zu großen Problemen bei Sch ¨ulerinnen und Sch ¨ulern der zweiten Klasse. Das Konzept der Iteration kann unmittelbar erst ab der dritten Klasse verstanden und angewendet werden. Der sichere Umgang mit Iteration kann erst ab der vierten Klasse erwartet werden. Insgesamt zeigt die Untersuchung klare Unterschiede im ¨Ubergang zwischen der zweiten und der dritten Klasse. Hinzu kommt, dass das Konzept der Iteration eine deutlicheAlgorithmisieren im Grundschulalter 81ii “proceedings” — 2017/9/17 — 20:19 — page 82 — #82 ii i ii iH¨urde in allen untersuchten Jahrgangsstufen ist. In einer Folgeuntersuchung muss ¨uberpr¨uft werden, inwieweit diese Stufen in den betrachteten Altersklassen trainierbar sind. So sollte nach einem Eingangstest eine Unterrichtseinheit oder ¨Ahnliches mit Grundschulkindern durchgef ¨uhrt werden und infolgedessen ein zweiter Test durchgef ¨uhrt werden. Hierbei muss vor allem die Verwendung des Programmierelements Iteration in allen Jahrgangsstufen untersucht werden. Desweiteren m ¨ussen die Bedingungen der zweiten Klasse genauer untersucht werden, da hier die prinzipielle Frage ist, ob Sch ¨ulerinnen und Sch ¨uler der zweiten Klasse f ¨ahig sind, L ¨osungen f ¨ur Probleme auf h ¨oheren Stufen zu erstellen. Aber auch f ¨ur die Klassen 3 und 4 stellt sich die Frage, ob sich die F ¨ahigkeiten f ¨ur eine gr¨oßere Anzahl von Sch ¨ulerinnen und Sch ¨uler in einer Unterrichtseinheit erlernen, bzw. festigen lassen. F ¨ur die vierte Klasse stellt sich dar ¨uber hinaus die Frage, ob die Sch ¨ulerinnen und Sch ¨uler schon in diesem Alter f ¨ahig sind, Probleme in einem beliebigen Raum zu l¨osen, da dies in klassischen Programmieraufgaben eine wichtige Rolle spielt. Literatur [BC82] John B. Biggs, Kevin F. Collis, Evaluating the quality of learning: The SOLO taxonomy; structure of observed learning outcome , Educ. Psychology Series, Academic Pr., 1982. [BD09] Christian Borowski, Ira Diethelm, Kinder auf dem Weg zur Informatik: Programmieren in der Grundschule , In: Zukunft braucht Herkunft, INFOS 2009, 244–253, 2009. [Bi16] Gerhard R ¨ohner et al., Bildungsstandards Informatik f ¨ur die Sekundarstufe II , Beilage zu LOG IN, Heft Nr. 183/184, 2016. [BLS11] Nadine Bergner, Thiemo Leonhardt, Ulrik Schroeder Zauberschule Informatik – Einblick in die Welt der Informatik f ¨ur Kinder im Grundschulalter , In: Informatik mit Kopf, Herz und Hand, INFOS 2011, 132–141, 2011. [Bo13] Dietrich Boles, Programmieren spielend gelernt mit dem Java-Hamster-Modell , Springer-Vieweg-Verlag, 2013. [BR12] Karen Brennan and Mitchel Resnick, New frameworks for studying and assessing the development of computational thinking , In: AERA, 2012. [Gr06] Dietmar Grube, Entwicklung des Rechnens im Grundschulalter , Waxmann, 2006. [GW16] Robert Garmann, Benjamin Wanous, Code for competence Programmieren f ¨ur Zweitkl¨assler mit ScratchJr , In: Informatik f ¨ur Kinder 7. M ¨unsteraner Workshop zur Schulinformatik, 71–80, 2016. [MHB15] Andreas M ¨uhling, Peter Hubwieser, Marc Benges, Dimensions of programming knowledge. , In: Situation, Evolution, and Perspectives, International Conference on Informatics in Schools, 32–44, Springer, 2015. [PSZ11] Martin Pinquart, Gudrun Schwarzer, Peter Zimmermann, Entwicklungspsychologie Kindesund Jugendalter , 111–121, Hogrefe Verlag, 2011. [RHP08] Kristina Reiss, Aiso Heinze, Reinhard Pekrun, Mathematische Kompetenz und ihre Entwicklung in der Grundschule , In: Kompetenzdiagnostik, 107–127, Verlag f ¨ur Sozialwissenschaften, 2008. [Sc01] Andreas Schwill, Ab wann kann man mit Kindern Informatik machen? , In: Informatikunterricht und Medienbildung, INFOS 2001, 13–30, 2001. [Sc93] Andreas Schwill, Fundamentale Ideen der Informatik , Zentralblatt f ¨ur Didaktik der Mathematik 1, 20–31, 1993. [SL12] Wolfgang Schneider, Ulman Lindernberger Entwicklungspsychologie , 385–400, Beltz Verlag, 2012.82 Katharina Wendlandt, Matthias Wendlandt, Sabrina Ho  mannii “proceedings” — 2017/9/17 — 20:19 — page 83 — #83 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017    15   Bild der Informatik von Grundschullehrpersonen Erste Zwischenergebnisse aus qualitativen Einzelfallstudien Alexander Best1 Abstract: Über eine schriftliche Umfrage an Grundschulen im Regierungsbezirk Münster (NRW) konnten Lehrpersonen für Einzelinterviews über ihre Vorstellungen zur Informatik und zu Informatikunterricht gewonnen werden. Die Lehrpersonen assoziieren Gegenstände, Inhalte und Methoden der Informatik, der Medienbildung, des unterrichtlichen Medieneinsatzes sowie bestehender Grundschulfächer mit Informatikunterricht. Sie stellen Bezüge zu verschiedenen Inhaltsund Prozessbereichen der Empfehlungen für Bildungsstandards Informatik für die Sekundarstufe I der Gesellschaft für Informatik (GI) her. Kindern den kreativen, kritischen, sachgerechten und zielgerichteten Umgang mit Informatiksystemen zu vermitteln, wird von den Interviewten als wesentliches Ziel informatischer Bildung in der Grundschule verstanden. Es werden Zwischenergebnisse des Forschungsvorhabens auf Basis von zwei Interviews vorgestellt. Keywords: Informatik in der Grundschule; Primarbildung; Bild der Informatik; Lehrervorstellungen; Einzelfallstudien; Leitfadeninterviews; Qualitative Forschung 1 Einleitung Die Forderungen nach informatischer Bildung im Primarbereich haben in den vergangenen Jahren stark zugenommen [ACM12]. Als möglicher Lehr-Lernort wurde, neben außerschulischen Angeboten, der Klassenunterricht an Grundschulen genannt (ex. [BDM10]). Bislang liegen kaum gesicherte Erkenntnisse über Vorstellungen von Grundschullehrpersonen zur Informatik und zu Informatikunterricht in Deutschland vor [BM15, FGH16]. Diese stellen eine wesentliche Voraussetzung dar, um Unterrichtskonzepte sowie Aus-, Fortund Weiterbildungsangebote in einem Bottom-Up-Verfahren entwickeln zu können [DKW11]. Für den Sekundarund Tertiärbereich existieren bereits Arbeiten zu diesem Forschungsfeld (ex. [Be15]). Im Rahmen des Forschungsprojekts Informatik in der Grundschule (IGS) am Arbeitsbereich Didaktik der Informatik der Westfälischen Wilhelms-Universität Münster werden Studien zu diesem Desiderat durchgeführt. Im Projekt werden u.a. folgende Forschungsfragen untersucht: x Welche biografischen Bezüge zur Informatik und zu Informatikunterricht werden von Grundschullehrpersonen assoziiert?                                                            1 Westfälische Wilhelms-Universität Münster, Didaktik der Informatik, Fliednerstr. 21, 48149 Münster, alexander.best@uni-muenster.de I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 83ii “proceedings” — 2017/9/17 — 20:19 — page 84 — #84 ii i ii i 16    Alexander Best    x Wo begegnen Grundschulkinder in ihrem Alltag nach Ansicht von Grundschullehrpersonen Informatik? x Wie sind zentrale Begriffe der Informatik und des Informatikunterrichts nach Auffassung von Grundschullehrpersonen inhaltlich belegt und welche Bedeutung messen sie diesen Begriffen der Primarbildung bei? 2 Methodologie und Methodik Im Forschungsprojekt IGS wird ein hypothesengenerierender Ansatz im Kontext qualitativer Forschung verfolgt. Eine erste Pilotstudie im Jahr 2015 zeigte, dass über die Erhebung quantitativer Daten zwecks Hypothesenüberprüfung nur ein sehr eindimensionaler Zugang zum Forschungsfeld geschaffen werden konnte [BM15]. Erste Zwischenergebnisse aus den bislang geführten Einzelinterviews lassen vermuten, dass den Lehrpersonen durch die methodische Neuausrichtung mehr Raum für die Darlegung ihrer individuellen Perspektive gegeben wird. Zur Datenerhebung wurde ein Interviewleitfaden nach dem sogenannten SPSS-Prinzip entwickelt [He11]. Es wurden zunächst Fragen des Forschers gesammelt (S), anhand von Kriterien geprüft (P), sortiert (S) und subsummiert (S). Der so entstandene Interviewleitfaden wurde einer befreundeten Grundschullehrperson zur Prüfung vorgelegt, um unverständliche Leitfragen bzw. Fragen der Check-Liste zu identifizieren und umzuformulieren. Anschließend erfolgte ein erstes Testinterview, bei dem sämtliche Fragen erneut auf ihre Verständlichund Tauglichkeit geprüft wurden. Das Ergebnis waren vier Leitfragen mit jeweils 4-6 Fragen für die Check-Liste2: 1. „Zu Beginn des Interviews möchte ich Sie bitten, mir zu beschreiben, was Sie mit Informatik verbinden.“ 2. „Welche Aufgaben hätte Ihrer Meinung nach Informatikunterricht in der Grundschule?“ 3. „Wo taucht Ihrer Ansicht nach Informatik im Leben von Grundschulkindern ganz konkret auf?“ Vor der vierten Frage wurde den Lehrpersonen eine Übersicht über die Inhaltsund Prozessbereiche der Empfehlungen für Bildungsstandards Informatik für die Sekundarstufe I der GI vorgelegt [GI08]: 4. „Sie finden hier einige Fachbegriffe zur Informatik. Welche Begriffe sind Ihrer Ansicht nach bedeutsam für die Grundschule und welche unterrichtlichen Inhalte verbinden Sie mit diesen?“ Die Anordnung der Fachbegriffe (Bereiche) wechselte zwischen den Interviews, sodass                                                            2 Aus Platzgründen werden hier nur die Leitfragen aufgeführt. 84 Alexander Bestii “proceedings” — 2017/9/17 — 20:19 — page 85 — #85 ii i ii i Bild der Informatik von Grundschullehrpersonen    17   gleiche Antworten nicht auf dieselbe Anordnung zurückgeführt werden können. Die Interviews wurden mit schriftlichem Einverständnis der Interviewten digital-auditiv aufgezeichnet und anhand von Anonymisierungsund Transkriptionsregeln transkribiert. 3 Zwischenergebnisse und Ausblick Bei den interviewten Lehrpersonen, nennen wir sie ALICE und BOB, existieren erste Präkonzepte zur Informatik und zu Informatikunterricht. Dies entspricht den Ergebnissen der Pilotstudie von Best und Marggraf [BM15] sowie der Studie von Funke, Geldreich und Hubwieser [FGH16]. ALICE verfügt in den Bereichen Ort der informatischen Bildung und Aufgaben von Informatikunterricht bereits über sehr konkrete Vorstellungen, die zum einen eng an den Mathematikunterricht geknüpft und zum anderen durch die hohe Durchdringung der Schülerschaft mit Smartphones geprägt sind. Die Aussagen von BOB hingegen scheinen noch nicht derart gefestigt zu sein. Er sieht den Ort der informatischen Bildung einerseits in einem fächerintegrierten Ansatz und andererseits in einem eigenständigen Fach Informatik („oder AG/Neigungsgruppe“). Die Frage, welche informatischen Inhalte wo behandelt werden sollten, führt er auf deren kognitive Komplexität und die intrinsische Motivation der Schülerinnen und Schüler3 zurück. Die Abgrenzung scheint jedoch nicht trennscharf. Sowohl ALICE als auch BOB verorten den Kontakt von Grundschulkindern mit Informatik in deren Interaktion mit Informatiksystemen, insbesondere Smartphones. In Punkto der Ausprägung dieses Kontakts scheinen sich die Schülerschaften der beiden Lehrpersonen zu unterscheiden. ALICE gibt an, dass die SuS mehrheitlich mit diesen Systemen in Kontakt treten. BOB hingegen beobachtet dies nur bei wenigen SuS. Dennoch sehen beide diesen Umstand durchaus kritisch. Aufgabe eines Informatikunterrichts in der Grundschule sei das Aufzeigen der Funktionsweise, aber auch der potentiellen Gefahren dieser Informatiksysteme. Auch bezüglich der Inhaltsund Prozessbereiche [GI08] weichen die Aussagen von ALICE und BOB voneinander ab. Während ALICE erneut den starken Bezug zum Lehrplan bzw. dem Modellierungskreislauf der Mathematik herstellt sowie die Algorithmik hervorhebt, erarbeitet sich BOB ein Verständnis der Begriffe ad-hoc. Einige Assoziationen, wie die Verknüpfung des Bereichs Sprachen und Automaten mit „Software zum Erlernen von Fremdsprachen oder der Deutschen Sprache“, überraschen. Bob stellt jedoch auch Bezüge zu Programmiersprachen, Datenschutz sowie zur Datenspeicherung und -sicherheit her. Die ersten beiden ausgewerteten Interviews lassen vermuten, dass die Vorstellungen der Lehrpersonen zur Informatik und zu Informatikunterricht von unterschiedlichen Faktoren geprägt werden. Dazu könnten Erfahrungen mit dem Informatikunterricht in der eigenen Schulzeit, Kontakte mit universitären „Computerkursen“, Einsatz von                                                            3 Im Folgenden mit SuS abgekürzt. Bild der Informatik von Grundschullehrpersonen 85ii “proceedings” — 2017/9/17 — 20:19 — page 86 — #86 ii i ii i 18    Alexander Best    Informatiksystemen in bestehenden Grundschulfächern, Kontakte der eigenen Kinder mit Informatiksystemen sowie weitere Faktoren zählen. Auch zur inhaltlichen Erschließung der Fachbegriffe (Bereiche) werden unterschiedliche Zugänge und Strategien gewählt, welche sich aus Alltagsverständnissen oder bestehenden Grundschulfächern ergeben könnten. Über die Auswertung weiterer Interviews und die systematische Entwicklung eines Kategoriensystems sollen im Verlauf des Projekts IGS weitere Erkenntnisse gewonnen werden. Es wird auf Techniken der Qualitativen Inhaltsanalyse nach Mayring sowie der Grounded Theory nach Glaser und Strauss zugegriffen werden. Literaturverzeichnis [ACM12] Computer Science Teachers Association (CSTA) und Association for Computing Machinery (ACM): Computer Science K-8. Building a Strong Foundation. ACM Press, New York, S. V, 2012. [Be15] Bender, E. et al.: Identifying and formulating teachers’ beliefs and motivational orientations for computer science teacher education. Studies in Higher Education Vol. 41/2016 Issue 11, S. 1958-1973, 2015. [BDM10] Borowski, C.; Diethelm, I.; Mesaroş, A.: Informatische Bildung im Sachunterricht der Grundschule. Theoretische Überlegungen zur Begründung. widerstreit-sachunterricht Ausgabe 15/Oktober 2010, 2010. [BM15] Best, A.; Marggraf, S.: Das Bild der Informatik von Sachunterrichtslehrern. Erste Ergebnisse einer Umfrage an Grundschulen im Regierungsbezirk Münster. In (Gallenbacher, J. Hrsg.): Informatik allgemeinbildend begreifen. INFOS 2015. 16. GI-Fachtagung Informatik und Schule, Darmstadt 2015. Köllen Verlag + Druck, Bonn, S. 53-62, 2015. [DKW11] Diethelm, I.; Koubek, J.; Witten, H.: IniK – Informatik im Kontext. Entwicklungen, Merkmale und Perspektiven. LOG IN 169/170, S. 100 f., 2011. [FGH16] Funke, A.: Geldreich, K.; Hubwieser, P.: Primary school teachers' opinions about early computer science education. In (Sheard, J.; Montero, C. S. Hrsg.): Koli Calling 2016. Proc. 16th Koli Calling Int. Conf. on Computing Education Research, Koli 2016. ACM Press, New York, S. 135-139, 2016. [GI08] Gesellschaft für Informatik e.V.: Grundsätze und Standards für die Informatik in der Schule. Bildungsstandards Informatik für die Sekundarstufe I. Beilage zu LOG IN 150/151, S. 11, 2008. [He11] Helfferich, C.: Die Qualität Qualitativer Daten. Manual für die Durchführung qualitativer Interviews, 4. Auflage, VS Verlag für Sozialwissenschaften, Wiesbaden, S. 182-189, 2011. Wir bedanken uns bei allen Lehrerinnen und Lehrern, die sich an der Umfrage und den Interviews beteiligt haben. Unser Dank gilt weiterhin den Schulämtern und der Bezirksregierung Münster für ihre Unterstützung. 86 Alexander Bestii “proceedings” — 2017/9/17 — 20:19 — page 87 — #87 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 1 Aufbau des Internets: Vorstellungsbilder angehender Lehrkr ¨afte Andreas Dengel1und Ute Heuer2 Abstract: Heranwachsende haben ein nat ¨urliches Fragebed ¨urfnis in Bezug auf ihre Umwelt. In der digitalen Informationsgesellschaft des 21. Jahrhunderts ist das Internet aufgrund der allgegenw ¨artigen Vernetzung von Menschen, Computern und Informationen ein omnipr ¨asenter Bestandteil der kindlichen Umwelt. Hierdurch entstehende Fragen richten Kinder vorwiegend an eine Bezugsperson mit Lehrfunktion, welche im Grundschulalter zumeist durch die entsprechende Lehrkraft verk ¨orpert wird. Um auf solche Fragen ad ¨aquat eingehen zu k ¨onnen, sind entsprechende Fachkompetenzen der Lehrkraft notwendig. Anhand einer kognitionspsychologischen Fundierung und unter Ber ¨ucksichtigung des tats ¨achlichen physisch-topologischen Aufbaus des Internets wurde eine Studie zu entsprechenden V orstellungsbildern entwickelt und durchgef ¨uhrt. Die Ergebnisse der Untersuchung mit 167 Lehramtsstudierenden aller Schularten zeigen, dass die V orstellungsbilder von angehenden Lehrkr ¨aften zum Aufbau des Internets oftmals auf drastischen Fehlannahmen basieren, welche bei Studierenden des Grundschullehramts besonders stark ausgepr ¨agt sind. Die Diskussion der Untersuchungsergebnisse m ¨undet in einem Forschungsdesiderat zur Begegnung dieses Fachkompetenzdeﬁzits, insbesondere im Grundschulbereich. Keywords: Informatik in der Grundschule, Aufbau des Internets, V orstellungsbilder, Lehramtsstudium, Fehlvorstellung 1 Einf ¨uhrung Nahezu alle aktuellen Bildungsinitiativen fordern die weiterf ¨uhrende Digitalisierung der Schulen. Das Strategiepaper”Bildung in der digitalen Welt“ sowie das Modellprojekt”Digitale Schule 2020“ erstreben die Weiterentwicklung und kompetente Nutzung der digitalen M ¨oglichkeiten in Schulen in Form vernetzter technischer Hilfsmittel [Km16], [DS17]. Zu den allgemeinbildenden Inhalten der heutigen Informationsgesellschaft z ¨ahlt gem ¨aß dem Strategiepaper”Bildung in der digitalen Welt“ der Kultusministerkonferenz unter anderem auch, die Herausforderungen der”digitalen Revolution“ bew ¨altigen zu k ¨onnen, was eine Weiterentwicklung des Unterrichts und eine entsprechende Qualiﬁkation der Lehrkr¨afte erfordert [Km16]. Eine damit einhergehende Professionalisierung angehender Lehrkr¨afte ist unabdinglich, um eine konsistente Vermittlung von Lerninhalten in Bezug auf die digitale Welt zu gew ¨ahrleisten, besonders, da Informatik in Deutschland l ¨angst nicht in allen Schularten als Pﬂichtfach integriert ist. 1Universit ¨at Passau, Lehrund Forschungseinheit ”Lehramtausbildung Mathematik und Informatik”, Innstr. 33, 94032 Passau, andreas.dengel@uni-passau.de 2Universit ¨at Passau, Lehrund Forschungseinheit ”Lehramtausbildung Mathematik und Informatik”, Innstr. 33, 94032 Passau, heuer@ﬁm.uni-passau.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 87ii “proceedings” — 2017/9/17 — 20:19 — page 88 — #88 ii i ii i2 Andreas Dengel und Ute Heuer In Deutschland l ¨asst besonders die Grundschule bislang eine Implementierung der Informatik in den Lehrplan missen, was bei Grundsch ¨ulerinnen und -sch ¨ulern zu einem Informationsdeﬁzit bez ¨uglich bestehender Fragen f ¨uhrt: In einer Untersuchung von [BDW16] wurden 2594 Fragen von 600 Sch ¨ulerinnen und Sch ¨uler der Grundschule gesammelt, davon allein 656 Fragen zum Thema Internet. Beispielhaft werden Fragen wie”Can I rent or buy the Internet?“,”Is there a central computer for the Internet?“,”What is the source of the Internet?“ und”Can the Internet get broken?“ genannt. Allerdings sind besonders solche physisch nicht allgegenw ¨artigen Konzepte unserer digitalen Welt, wie der Aufbau des Internets, bei Sch ¨ulerinnen und Sch ¨ulern zumeist von Fehlvorstellungen gepr ¨agt (u.a. [DZ10]; [Pa05]; [He15]). So stellten sich in der qualitativen Untersuchung nach [DZ10] 40% der 23 befragten Sch ¨uler einen zentralen Rechner vor, ¨uber den das Internet l ¨auft, Probanden der Studie von [Pa05] mit 340 griechischen Sch¨ulerinnen und Sch ¨ulern zeichneten neben ¨ahnlichen zentralisierten bzw. hierarchischen Strukturen (56%) oder Formen der Direktvernetzung (6%) auch Modelle mit komplett fehlender Kommunikation (29%). Falsche V orstellungsbilder ﬁnden sich aber nicht nur auf Seite der Lernenden: auch bei angehenden Lehrerinnen und Lehrern haben sich oft Fehlvorstellungen eingepr ¨agt, wie eine V oruntersuchung zeigen konnte: Es wurden 30 Studierende verschiedener Lehramtsf ¨acher (außer Informatik) und Schularten nach ihrer V orstellung zum E-Mail-Versand befragt. Hierbei ließen sich die Angaben von 93,3% der Probanden einem naiven metaphorischen Modell des Internets nach [He15] zuordnen, beispielsweise als direkte Datenleitung zwischen zwei Computern oder dem Internet als”Wolke“/Blackbox, bzw. konnten als eine Topologie der lokalen Vernetzung (Stern, Bus, Hierarchie) identiﬁziert werden. 2 Entstehung von Vorstellungsbildern Das Alter, in welchem Kinder das erste Mal in Kontakt mit dem Internet kommen, l ¨asst sich durch dessen Allgegenw ¨artigkeit und unausweichliche Pr ¨asenz in allen Lebensbereichen nicht klar bestimmen. Dadurch entwickeln Kinder teilweise schon sehr fr ¨uh ihre eigene V orstellung zum Aufbau des Internets. Hieraus ergibt sich zun ¨achst die Frage, wie ein V orstellungsbild zu einer bestimmten Thematik ohne konkrete Wissensvermittlung durch einen Lehrenden entsteht. Die Lernpsychologie nennt hierzu den von Gagn ´e gepr ¨agten Begriff des kumulativen Lernens, welcher den Prozess des Verkn ¨upfens neu erworbener Informationen mit bereits im Ged ¨achtnis existierendem Wissen bezeichnet [Br79]. Im Modell des kumulativen Lernens wird das bereits existierende Wissen als”Schema“ und der Prozess der Eingliederung und Vernetzung neuer Informationen als”Assimilation“ bezeichnet [Ma81].3Kumulatives Lernen erfolgt nach Mayer, wenn von außen kommende, neue Informationen folgende Schritte durchlaufen: 3Die Verwendung der Begriffe Schema / schema undmentales Modell / mental model ist im deutschund englischsprachigen Raum nicht einheitlich. Da dieses Paper Probleml ¨oseprozesse fokussiert (im Gegensatz zu subjektiven Funktionsmodellen anderer Untersuchungen), wird der Begriff Schema hier im Sinne von bereits existierendem Wissen nach [Ma81] verwendet.88 Andreas Dengel, Ute Heuerii “proceedings” — 2017/9/17 — 20:19 — page 89 — #89 ii i ii iAufbau des Internets: V orstellungsbilder angehender Lehrkr ¨afte 3 (1) Aufnahme . Zun ¨achst muss der Lernende seine Aufmerksamkeit auf die eintreffende Information richten, sodass diese vom sensorischen ins Kurzzeitged ¨achtnis gelangt. (2) Verf¨ugbarkeit . Der Lernende muss ¨uber zur neuen Information passende bereits vorhandene Konzepte im Langzeitged ¨achtnis verf ¨ugen, um die neue Information assimilieren zu k ¨onnen. (3) Aktivierung . Der Lernende muss aktiv sein bereits bestehendes V orwissen nutzen, um die neue Information in sein Schema im Langzeitged ¨achtnis einzugliedern. Ein besonderes Augenmerk sei hier auf den in (2) beschriebenen Prozess des Suchens nach einem passendem Schema gelegt: Diese”appropriate anchoring ideas“ werden in verschiedenen Kontexten von Lehrenden benutzt, um bei der Einf ¨uhrung von neuem Stoff an die V orstellungen der Lernenden anzukn ¨upfen (u.a. [Ma81]; [He15]; [Fr01]). Gerade jedoch bei der selbstgesteuerten Aneignung neuer Inhalte kommt es vor, dass vermeintlich zur Information passende Schemata nicht der realen Struktur entsprechen, wodurch ein neues, fehlerhaftes Schema entsteht. Derart inkonsistente Schemata behindern durch ihre Funktion als”skelettartige Wissensstrukturen, die mit den Speziﬁka einer aktuellen Problemstellung angereichert werden, wenn die Person einem passenden Problemtyp begegnet“, nach [WM09] nicht nur den effektiven Probleml ¨oseprozess, sondern liefern bei einem Mismatch zwischen Realit ¨at und V orstellung auch ein falsches Ergebnis (beispielsweise ein Nichtmuttersprachler, der versucht, die Grammatikstrukturen seiner Muttersprache auf die deutsche Sprache anzuwenden). Hier zeigt sich deutlich, dass bei Inhalten, deren selbstgesteuerte Aneignung intuitiv zu falschen Ergebnissen f ¨uhren w ¨urde, eine Anleitung des Lernenden durch einen Experten zwingend erforderlich ist. Erfolgt eine Wissensvermittlung aufgrund einer fehlenden Lehrperson oder deren fehlender Fachkompetenz nicht, so bildet sich durch Assimilation anhand eines selbstst ¨andigen kumulativen Lernprozesses ein falsches, wenngleich ¨außerst persistentes Schema. Dieses wird f ¨ur alle folgenden Lernprozesse der entsprechenden Thematik als Grundlage genommen. Ein m ¨oglicher Teilaspekt f ¨ur die Konstruktion eines ad¨aquaten Schemas der topologischen Struktur des Internets wird nachfolgend dargestellt. 3 Struktur des Internets [KR12] sprechen von einem Puzzle, welches es bez ¨uglich des Entwurfs einer Struktur des Internets zu l ¨osen gilt: In einem ersten Schritt sind eine Milliarde Endnutzer und Dienstanbieter mit Internet-Service-Providern (ISPs) zu vernetzen. Die Hauptarbeit besteht jedoch darin, die ISPs selbst untereinander zu vernetzen.”This is done by creating a network of networks understanding this phrase is the key to understanding the Internet.“ Die Tier1-ISPs, auch Internet-Backbones genannt, beﬁnden sich auf der obersten Stufe der ISPHierarchie und sind grunds ¨atzlich auf die gleiche Art und Weise aufgebaut und vernetzt wie jedes Netzwerk: Sie besitzen Leitungen und Router und sind mit anderen Netzen verbunden. Ein Tier-1-ISP agiert global, es kann allerdings im Sinne einer vertikalen Integration gleichzeitig auch als ISP einer niedrigeren Stufe fungieren und noch niedrigstuﬁgeren (z.B. regionalen) ISPs direkt Internetzug ¨ange verkaufen [KR12]. In gewisser Weise”parallel zu den Tier-1-ISPs“ und”parallel zum Internet“ betreiben große Content ProviderAufbau des Internets: Vorstellungsbilder angehender Lehrkräfte 89ii “proceedings” — 2017/9/17 — 20:19 — page 90 — #90 ii i ii i4 Andreas Dengel und Ute Heuer (wie z.B. Google) ihr eigenes privates, weltumspannendes Netz von Daten-Zentren. Ein Nicht-Tier-1-ISP muss, um einen Teil des weltweiten Internets zu erreichen, zwar immer wieder seinen Datenverkehr durch einen der Tier-1-ISPs f ¨uhren, versucht sich aber oft aus wirtschaftlichen Gr ¨unden auch direkt mit anderen ISPs gleicher (oder niedrigerer) Stufe zu verbinden. In diesem Fall k ¨onnen Daten ¨ubertragen werden, ohne ein Tier-1-Netz passieren (und dieses bezahlen) zu m ¨ussen [KR12]. F ¨ur einen schnellen, kosteng ¨unstigen und zuverl ¨assigen Datenaustausch zwischen ISPs sorgen sogenannte Peering-Points, wie der in Frankfurt beheimatete DE-CIX, an welchen nach eigenen Angaben heute mehr als 550 Netzbetreiber (ISPs und Content Provider Netze) aus mehr als 50 L ¨andern angeschlossen sind [Br15]. Somit l ¨asst sich mit [KR12] sagen, dass das heutige Internet ein Netz aus Netzen eine komplexe Struktur besitzt. Die nachfolgend beschriebene Untersuchung fokussiert in Anlehnung an [He15] nur folgenden Aspekt der Struktur:”Es gibt Netze, die verschiedenen Unternehmen geh ¨oren. Diese Unternehmen betreiben eigene Vermittlungspunkte und vernetzen diese, um Anfragen und Antworten innerhalb ihres Bereichs weiterzuleiten. Die Unternehmensnetze wiederum tauschen an gemeinsamen Punkten Daten aus. So passiert eine Anfrage typischerweise einige Unternehmensnetze bis sie schließlich an ihr Ziel gelangt.“ Ausgehend von den V orstellungsbildern aus der V oruntersuchung, den Ergebnissen der Kognitionspsychologie und dem beschriebenen Aspekt der Struktur des Internets ergibt sich ein Forschungsdesiderat mit der Frage nach der Relevanz dieser Fehlvorstellungen bei angehenden Lehrkr ¨aften allgemein, sowie insbesondere in Bezug auf die Primarstufe, um dort aufkommenden Fragen der Heranwachsenden begegnen zu k ¨onnen. Da bereits fr¨uhere Untersuchungen das V orhandensein von Fehlvorstellungen bez ¨uglich der Struktur des Internets bei Erwachsenen im Allgemeinen nachweisen konnten (u.a. [TG98]), konzentriert sich die vorliegende Studie ausschließlich auf angehende Lehrkr ¨afte. Anhand der dargestellten Struktur des Internets in Verbindung mit m ¨oglichen falsch erstellten Schemata aus der Lebenswelt der Studierenden und anhand der bereits erhaltenen Ergebnisse der V oruntersuchung wurden speziﬁsche Fehlvorstellungen selektiert. 4 Erhebung der Vorstellungsbilder 4.1 Aufbau des Fragebogens Der Fragebogen wurde in drei Teile untergliedert. Nach der Erhebung allgemeiner Informationen (Geschlecht, Schulart und Hauptfach/vertieftes Fach) wurden im zweiten Teil die eigenen V orstellungsbilder der Studierenden bez ¨uglich des Internets anhand einer Freitextfrage zum Aufruf einer Website und einer hierzu zu erg ¨anzenden schematischen Zeichnung abgefragt. Zun ¨achst sollte die Aufgabe Sie rufen zuhause von Ihrem Computer A die Website der Uni Passau vom Server B auf. Beschreiben Sie zun ¨achst kurz in Worten, welchen Weg entlang der Kabelverbindungen Ihre Anfrage bzw. die Antwort im Internet w ¨ahlt. bearbeitet werden. Anschließend sollte die der Beantwortung zugrundeliegende V orstellung mithilfe einer zu erg¨anzenden Zeichnung illustriert werden: Zeichnen Sie folgend ein Schaubild, welches90 Andreas Dengel, Ute Heuerii “proceedings” — 2017/9/17 — 20:19 — page 91 — #91 ii i ii iAufbau des Internets: V orstellungsbilder angehender Lehrkr ¨afte 5 die Vernetzung von Computern/Servern (Kreise) im Internet darstellt (Kabelverbindungen). Dieses sollte zu Ihrer Beschreibung in 1. passen. Falls Sie neue Symbole einf ¨uhren, beschriften Sie diese. Bei der vorgegebenen Zeichnung waren der eigene Computer und der Server der Universit ¨at als mit A bzw. B beschriftete Kreise eingezeichnet. Zur besseren Orientierung und zur Verdeutlichung der physischen Struktur waren noch weitere Kreise (gem ¨aß der Aufgabenstellung Computer/Server) ohne Beschriftung eingezeichnet. Der dritte Teil bestand aus einer Selbstzuordnung, bei der die Probanden ihre selbst angegebene V orstellung im Single-Choice-Verfahren einer schematischen Darstellung zuordnen sollten: W¨ahlen Sie nun bitte die Darstellung aus, die Ihrer Vorstellung in 1. und 2. am N ¨achsten kommt. Bitte versuchen Sie nicht, eine richtige Struktur zu”erraten“, sondern beurteilen Sie ausschließlich Ihre in 1. und 2. angegebene Struktur . Die Darstellungen orientierten sich an den von Hennecke aufgef ¨uhrten naiven metaphorischen Modellen / Modellen der Lokalvernetzung und den von Diethelm und Zumbr ¨agel ermittelten Sch¨ulervorstellungen ([He15]; [DZ10]). Zur Veranschaulichung wurde das jeweilige Modell ohne namentliche Nennung graﬁsch und textuell dargestellt: 1. DV: Direktverbindung / vollvermaschtes Netz 2. Stern: zentraler Computer / Sterntopologie 3. Hierarchie: hierarchischer Aufbau / erweiterter Stern 4. Bus: Bustopologie 5. Router: Netz von Routern 6. Autonome Systeme: Netz von Autonomen Systemen / Netz von Routern mit Peering Die Zuordnung des Modells sollte nur auf die im vorangegangenen Teil angegebenen V orstellung bezogen werden, die Fragestellung wies hierauf ausdr ¨ucklich hin. Diese angegebene Methode wurde gew ¨ahlt, um zum einen eine Zuordnung durch einen Korrektor zu vermeiden und zum anderen, um den Probanden die M ¨oglichkeit zu gew ¨ahren, nicht in der eigenen Darstellung enthaltene V orstellungen zu erg ¨anzen. Um die M ¨oglichkeit einer Fehlinterpretation der Fragestellungen trotz entsprechenden Wissens zu ¨uberpr ¨ufen, wurde eine Vergleichsstichprobe ausschließlich mit Lehramtsstudierenden mit dem Fach Informatik gebildet, bei welchen davon ausgegangen werden konnte, dass das notwendige Wissen zur korrekten Beantwortung der Fragen bereits erworben wurde. Hierbei gaben 13 von 14 Probanden eine korrekte Antwort, große Abweichungen zwischen eigener Darstellung und angekreuzter Topologie konnten nicht festgestellt werden. 4.2 Stichprobe und Durchf ¨uhrung Insgesamt nahmen 167 Lehramtsstudierende an der Befragung teil, davon waren 30 m ¨annlich und 137 weiblich. Bei der Angabe der Schulart war mit 126 Angaben die Grundschule am h ¨auﬁgsten vertreten, gefolgt vom Gymnasium mit 20 Studierenden, der Mittelschule mit 13 Studierenden und der Realschule mit 8 Studierenden. V on den 167 Frageb ¨ogen wurden 163 in die Auswertung miteinbezogen, auch wenn Antworten fehlten. Da f ¨ur die Hauptuntersuchung lediglich Lehramtsstudierende ohne Informatik von Interesse waren,Aufbau des Internets: Vorstellungsbilder angehender Lehrkräfte 91ii “proceedings” — 2017/9/17 — 20:19 — page 92 — #92 ii i ii i6 Andreas Dengel und Ute Heuer wurden 4 Frageb ¨ogen nicht mit in die Auswertung einbezogen, da diese Probanden Informatik als vertieft studiertes Fach angaben. Die Studierenden wurden unter Aufsicht von einem der Autoren in verschiedenen Seminaren und V orlesungen befragt. Die Probanden wurden darauf hingewiesen, dass sie lediglich ihre eigene V orstellung angeben und sich nicht etwa in der Gruppe beraten sollen. Die Bearbeitungszeit betrug acht Minuten. Die Selbstzuordnung wurde so an die Fragebogen geheftet, dass die dort angegebenen Modelle bei Bearbeitung des zweiten Teils noch nicht sichtbar waren, wodurch eine Suggestivwirkung vermieden werden sollte. R ¨uckfragen zur Fragestellung waren erlaubt. 4.3 Auswertung V on den 163 ausgewerteten Frageb ¨ogen ließen 9,6% die Felder der eigenen V orstellung frei oder gaben an, keine eigene V orstellung zu haben (danach trotzdem angekreuzte Strukturen wurden aufgrund der Suggestivwirkung nicht gewertet). fehlend DV Stern Hierarchie Bus Router Autonome Systeme Gesamt 16 32 57 9 5 26 18 163 Tab. 1: gew ¨ahlte Topologien Insgesamt 22,2% der Studierenden w ¨ahlten bei der Selbsteinordnung eine Struktur der Direktvernetzung (19,2% Peer-to-Peer, 3,0% Bus), 39,5% entschieden sich f ¨ur eine hierarchische Struktur (34,1% Stern und 5,4% erweiterter Stern/Hierarchie). Lediglich 26,4% der Studierenden ordneten ihre eigene V orstellung einer Vernetzung von Routern zu (15,6% Netz von Routern, 10,8% Netz von Autonomen Systemen). Als richtige V orstellung wurde das Bild einer dezentralisierten Vernetzung gesehen, repr ¨asentiert durch die Antworten ”Netz von Routern“ und”Netz von Autonomen Systemen“. Insgesamt widersprachen nach Beurteilung zweier unabh ¨angiger, qualiﬁzierter Rater (Staatsexamensabschluss Informatik bzw. Bachelorabschluss Internet Computing) zwischen 15% (Rater A) und 14,5% (Rater B) der eigenen (gewerteten) Darstellungen der Probanden den letztlich angekreuzten Topologien. Es wurden lediglich sich v ¨ollig widersprechende und aus der jeweiligen Kategorie (Direktvernetzung, hierarchische Struktur, Vernetzung von Routern) fallende Angaben als Abweichung gez ¨ahlt, wie die Angabe einer Direktverbindung im Beschreibungsteil in Verbindung mit einer angekreuzten Sterntopologie. Als Interrater-Reliabilit ¨atsmaß wurde ein Cohens-Kappa-Wert von K=.668 und somit eine beachtliche ¨Ubereinstimmung ermittelt. Im Folgenden werden im Zuge der ¨Ubersichtlichkeit nur die Werte f ¨ur Rater A genannt, da zwischen beiden Ratings nur f ¨ur die Auswertung unwesentliche Unterschiede bestehen. Bei einer gewerteten Abweichung (insgesamt 24) w ¨ahlten 62,5% der Probanden in der letzten Frage eine Topologie der dezentralisierten Vernetzung, was zu h ¨ochst signiﬁkanten (p=.000 bei df=1) Chi-Quadrat-Werten von c=14,799 f ¨uhrt. Die Probanden ohne eigene Angabe zum V orstellungsbild (”fehlend“ in Tab. 1) wurden nicht mehr einbezogen.92 Andreas Dengel, Ute Heuerii “proceedings” — 2017/9/17 — 20:19 — page 93 — #93 ii i ii iAufbau des Internets: V orstellungsbilder angehender Lehrkr ¨afte 7 falsche V orstellung richtige V orstellung Gesamt keine Abweichung 94 29 123 Abweichung 9 15 24 Gesamt 103 44 147 Tab. 2: Zusammenhang zwischen gewerteter Abweichung (Rater A) und gew ¨ahlter Topologie Entfernt man die 24 Probanden mit einem Widerspruch zwischen eigener Darstellung und angekreuzter Topologie sowie die 16 Probanden ohne eigene Angabe zum V orstellungsbild, verbleiben 123 gewertete Frageb ¨ogen mit 29 richtigen Antworten. DV Stern Hierarchie Bus Router Autonome Systeme Gesamt 29 54 6 5 22 7 123 Tab. 3: gew ¨ahlte Topologien ohne Widerspr ¨uche zur eigenen V orstellung (Rater A) Teilt man die Stichprobe auf in”Lehramtsstudierende mit Schulart Grundschule“ und ”Lehramtsstudierende anderer Schularten“, ergeben sich folgende Ergebnisse: falsche V orstellung richtige V orstellung Gesamt anderes Lehramt 16 11 27 Grundschullehramt 78 18 96 Gesamt 94 29 123 Tab. 4: Zusammenhang zwischen widerspruchsfreier, richtiger V orstellung und dem Studiengang Grundschullehramt (Rater A) Hieraus ergibt sich eine signiﬁkate Korrelation ( p=.017 bei df=1) zwischen den Eigenschaften”studiert Grundschullehramt“ und”hat eine falsche V orstellung“ (keine V orstellung einer Vernetzung von Routern) mit einem Chi-Quadrat Wert von c=5,656. Der Vergleich fasst alle anderen Schularten zusammen. Als Ergebnisse lassen sich festhalten: • Lehramtsstudierende haben verschiedene V orstellungen vom strukturell-topologischen Aufbau des Internets. • Knapp ein Viertel der Lehramtsstudierenden hat ein valides eigenes Bild vom strukturelltopologischen Aufbau des Internets. • Studierende des Grundschullehramts haben h ¨auﬁger falsche V orstellungsbilder bez ¨uglich des strukturell-topologischen Aufbaus als Lehramtsstudierende anderer Schularten. 5 Diskussion und Ausblick Ein Wissensdeﬁzit bez ¨uglich des topologischen Aufbaus des Internets ist in allen Schularten unverkennbar. Dass diese Informationsl ¨ucken noch einmal verst ¨arkt bei StudierendenAufbau des Internets: Vorstellungsbilder angehender Lehrkräfte 93ii “proceedings” — 2017/9/17 — 20:19 — page 94 — #94 ii i ii i8 Andreas Dengel und Ute Heuer Abb. 1: Zusammenhang zwischen dem Studium Grundschullehramt / V orstellungsbild des Grundschullehramts hervortreten, ist besonders kritisch zu sehen: Zum einen entstehen gerade im Grundschulalter besonders viele Fragen zum Thema Computer und Internet, zum anderen gibt es in der Schulform der Grundschule bislang in Deutschland keinen Informatik-Unterricht. Diese Einﬂussfaktoren beg ¨unstigen das Entstehen eigener Schemata bei den Sch ¨ulern, welche gem ¨aß dem Prinzip des kumulativen Lernens als Grundlage f¨ur jedes weiter erworbene Wissen in diesem Themenbereich genommen werden. Weiter ist jedoch erkennbar, dass bei einer direkten Wahl zwischen verschiedenen M ¨oglichkeiten oft trotz eigener Fehlvorstellungen die richtige Option selektiert wird (das Treffen der richtigen Wahl bei Abweichung von der selbst angegebenen Struktur). Dies legt die Vermutung nahe, dass sp ¨ater erworbenes Wissen bez ¨uglich korrekter Strukturen zwar aufgenommen, allerdings nicht in das eigene V orstellungsbild ¨ubernommen wird, da eine Assimilation bei sich widersprechenden V orstellungsbildern nicht m ¨oglich ist und diese Fehlvorstellungen somit persistent sind. Hieraus wird umso deutlicher, wie wichtig ein entsprechendes Entgegenwirken bereits in fr ¨uhen Jahren ist, was zur Folge eine notwendige St ¨arkung der IT-Inhalte in der Primarstufe hat. Die Angemessenheit der Platzierung des Fachs Informatik in der Grundschule konstatiert [Sc01], deren Notwendigkeit betonen u.a. [RR11] und [BDM10]. Zwar ﬁnden sich bereits im aktuellen Lehrplan M ¨oglichkeiten im Rahmen des Sachkunde-Gegenstandsbereiches ”Technik und Kultur“, diese werden in der Praxis jedoch aufgrund von fehlendem Selbstvertrauen / fehlender Fachkompetenz kaum wahrgenommen. Dem versucht beispielsweise das aktuelle Kooperationsprojekt”Informatik an Grundschulen“ der RWTH Aachen und der Universit ¨aten Wuppertal und Paderborn entgegenzuwirken. Der Ausgangspunkt des Projekts folgt dem oben er ¨orterten Ansatz: Es greift typische Alltagsfragen der Kinder zum Thema Informatik auf und entwickelt ausgehend von den individuellen V orerfahrungen der Sch ¨ulerinnen und Sch ¨uler Inhaltsbl ¨ocke zu den Themen”Umgang mit Informatio-94 Andreas Dengel, Ute Heuerii “proceedings” — 2017/9/17 — 20:19 — page 95 — #95 ii i ii iAufbau des Internets: V orstellungsbilder angehender Lehrkr ¨afte 9 nen, ¨Ubertragung von Daten“,”Kryptologie, Einblicke in Konzepte der Verschl ¨usselung und Entschl ¨usselung“ und”Erste Schritte zur Programmierung“ [Ac15]. Grundlagen zum Aufbau und der Funktionsweise des Internets werden hier allerdings nur am Rande der Themen”Daten ¨ubertragung“ und”Bin¨ardarstellung“ angeschnitten. Weitere Ans ¨atze f ¨ur handlungsorientierte Zug ¨ange zur Informatik in der Grundschule bietet das Projekt”InfoSphere“ der RWTH Aachen mit auf die Grundschule zugeschnittenen Modulen wie”Zauberschule Informatik“,”Alles Informatik, oder was?!?“ und”Kryptograﬁe zum Anfassen“ [SI17]. Der Fokus der beiden genannten Projekte liegt in der F ¨orderung der informatischen Bildung von Grundsch ¨ulerinnen und -sch ¨ulern. Das vorliegende Paper untersucht das V orhandensein informatischer Grundlagen bei den hierf ¨ur intentional zust ¨andigen Lehrkr ¨aften: Anhand der erhaltenen Untersuchungsergebnisse aus einem einzelnen, exemplarisch ausgew ¨ahlten Teilbereich der Informatik konnte ein Hinweis auf ein spezielles Wissensdeﬁzit bei angehenden Grundschullehrkr ¨aften gegeben werden. Der Erwerb eines Fachkompetenzkanons auf dem Gebiet der Informatik, sowohl korrespondierend zum untersuchten Inhalt als auch zu weiteren geeigneten Inhalten, ist allerdings aufgrund existierender Fragen seitens der Sch ¨ulerinnen und Sch ¨uler indispensabel. Um diesen Fragen zu begegnen und um die sp ¨atere Wissensentwicklung behindernde Fehlvorstellungen zu vermeiden, ist der Anteil informatischer Bildung im Primarschulbereich zu st ¨arken. Eine dauerhafte Forcierung der Informatik-Inhalte in der Grundschule w ¨urde selbstverst ¨andlich auch eine Implementierung von Inhalten der Informatik in die Curricula der Studieng ¨ange des Grundschullehramts implizieren. Als Werkzeug zur Auswahl geeigneter Inhalte f ¨ur die Modulkataloge des Grundschullehramts k ¨onnte das Konzept der fundamentalen Ideen nach [Br60] dienen (in Bezug auf die Informatik siehe auch [Sc93] bzw. [SS11]). Zur Strukturierung, Organisation und Pr ¨asentation dieser Inhalte m¨ussen ausgehend von den Ans ¨atzen der didaktischen Rekonstruktion (Model of Educational Reconstruction) nach [Du12] auch die Fehlvorstellungen der Lernenden, hier der angehenden Lehrkr ¨afte der Grundschule, ber ¨ucksichtigt werden. Nur durch Konzeption und Integration eines entsprechenden Modulkatalogs k ¨onnen die notwendige Fachkompetenz der angehenden Grundschullehrkr ¨afte entwickelt, das Aufkommen von Fehlvorstellungen bei Kindern vermieden und entstehende Fragen ad ¨aquat beantwortet werden. Literaturverzeichnis [Ac15] Acht, R.: Wie passt ein Video durchs Kabel? Informatische Bildung im Primarbereich. Schule NRW 07/08/15, S. 327–329, 2015. [BDM10] Borowski, C., Diethelm, I., Mesaros, A.: Informatische Bildung im Sachunterricht der Grundschule: Theoretische ¨Uberlegungen zur Begr ¨undung, http://www.widerstreitsachunterricht.de/ebeneI/superworte/infor/BorDieMe.pdf, Stand: 1.2.2017. [BDW16] Borowski, C., Diethelm, I., Wilken, H.: What children ask about computers, the Internet, robots, mobiles, games etc. In: Proceedings of the 11th Workshop in Primary and Secondary Computing Education, WiPSCE 2016, M ¨unster, Germany, October 13-15, 2016. S. 72–75, 2016. [Br60] Bruner, J. S.: The Process of Education. Harvard University Press, 1960.Aufbau des Internets: Vorstellungsbilder angehender Lehrkräfte 95ii “proceedings” — 2017/9/17 — 20:19 — page 96 — #96 ii i ii i10 Andreas Dengel und Ute Heuer [Br79] Bransford, J.: Human cognition: Learning, understanding, and remembering. Belmont, CA: Wadsworth, 1979. [Br15] Br ¨uhl, V .: Wirtschaft des 21. Jahrhunderts: Herausforderungen in der Hightech¨Okonomie. Springer Fachmedien, Wiesbaden, 2015. [Du12] Duit, R., Gropengießer, H., Kattman, U., Komorek, M., Parchmann, I.: The Model of Educational Reconstruction a Framework for Improving Teaching and Learning Science. In: Science Education Research and Practice in Europe: Retrospective and Prospective, Jorde, D., Dillon, J. (Hrsg.) S.13-37, 2012. [DS17] Bildungspakt Bayern. Projekt: Digitale Schule 2020, http://bildungspaktbayern.de/digitale-schule-2020/, Stand:31.1.2017. [DZ10] Diethelm, I., Zumbr ¨agel, S.: Wie funktioniert eigentlich das Internet? Empirische Untersuchung von Sch ¨ulervorstellungen. In: Proc. Didaktik der Informatik. M ¨oglichkeiten empirischer Forschungsmethoden und Perspektiven der Fachdidaktik. K ¨ollen Verlag, Bonn, S. 33–44, 2010. [Fr01] Freiman, T.: Kumulatives Lernen im Biologieunterricht. In: Praxis der Naturwissenschaften Biologie in der Schule Jahrgang 50 Nr. 7, 2001. [He15] Hennecke, M.: Modellvorstellungen zum Aufbau des Internets. In: Tagungsband zur INFOS 2015, Lecture Notes in Informatics (LNI), 2015. [Km16] Bildung in der digitalen Welt, Beschluss vom 8.12.2016, https://www.kmk.org/ﬁleadmin/Dateien/pdf/PresseUndAktuelles/2016/Bildung digitaleWelt Webversion.pdf, Stand: 20.12.2016. [KR12] Kurose, J.F., Ross, K.W.: Computer Networking. Addison-Wesley, 2012. [Ma81] Mayer, R.E.: The Psychology of How Novices Learn Computer Programming. In: Studying the Novice Programmer. Lawrence Erlbaum Associates, 1981. [Pa05] Papastergiou, M.: Students Mental Models of the Internet and Their Didactical Exploitation in Informatics Education. Education and Information Technologies, 10 (4), S. 341–360, 2005. [RR11] Romeike, R., Reichert, D.: PicoCrickets als Zugang zur Informatik in der Grundschule, 2011. [Sc93] Schwill, A.: Fundamentale Ideen der Informatik. In: Zentralblatt f ¨ur Didaktik der Mathematik 25, S. 20-31, 1993. [Sc01] Schwill, A.: Ab wann kann man mit Kindern Informatik machen? Eine Studie ¨uber informatische F ¨ahigkeiten von Kindern. In: Keil-Slawik, R.; Magenheim, J. (Hrsg.): Informatikunterricht und Medienbildung: INFOS 2001, 2001. [SI17] Sch ¨ulerlabor Informatik InfoSphere, Informatik entdecken in Modulen f ¨ur alle Schulformen und Klassenstufen, http://schuelerlabor.informatik.rwthaachen.de/module/grundschule, Stand: 1.2.2017. [SS11] Schubert, S., Schwill, A.: Didaktik der Informatik. Spektrum Akad. Verl., Berlin Heidelberg, 2011. [TG98] Thatcher, A., Greyling, M.: Mental models of the Internet. In: International Journal of Industrial Ergonomics 22, S. 299-305, 1998. [WM09] Wild, E., M ¨oller, J.: P ¨adagogische Psychologie. Springer-Verlag, Berlin Heidelberg, 2009.96 Andreas Dengel, Ute Heuerii “proceedings” — 2017/9/17 — 20:19 — page 97 — #97 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017    15   Vom Lehrplan zur LehrerInnenbildung Erste Erfahrungen mit obligatorischer Informatikdidaktik für angehende Schweizer PrimarlehrerInnen Beat Döbeli Honegger1, Michael Hielscher2  Abstract: In den letzten Jahren ist Informatikunterricht in verschiedenen europäischen Ländern in die Lehrpläne aufgenommen worden und soll zunehmend bereits im Grundschulalter beginnen. Auch der im Jahr 2015 verabschiedete »Lehrplan 21« für die 21 deutschsprachigen Kantone der Schweiz sieht bereits ab der 5. Klasse der Primarschule ein eigenes Zeitgefäß für »Medien und Informatik« vor. Diese Entwicklung stellt die Lehrerinnenund Lehrerbildung vor große Heraus-forderungen. Die pädagogische Hochschule Schwyz (PHSZ) hat als erste Lehrerbildungsstätte in der deutschsprachigen Schweiz den Studiengang Primarschule entsprechend angepasst und erteilt künftig eine Lehrbefähigung »Medien und Informatik«. Im Herbstsemester 2016 wurde eine obli-gatorische Informatik-Lehrveranstaltung für alle Studierenden des Studiengangs Primarstufe durchgeführt. Bei der Eingangsbefragung (n=85) bestätigte sich die Hypothese, dass angehende Primarlehrpersonen weder über eine Vorstellung des Themas Informatik noch über das not-wendige Fachwissen verfügen. Der Beitrag schildert die Entstehungsgeschichte des Fachs »Medien und Informatik« im Lehrplan 21 in der Schweiz und diskutiert exemplarisch anhand der Lehrveranstaltung die Herausforderungen einer Informatikdidaktik für Primarlehrpersonen. Keywords: Lehrplan, Informatikdidaktik, Grundschule, Ausbildung, Weiterbildung. 1 Informatik in der Grundschule Unser Alltag wird immer stärker von digitalen Medien geprägt. Der Einfluss digitaler Medien auf alle Aspekte ist so groß, dass verschiedene Experten die Erfindung des Computers mit der Erfindung des Buchdrucks vergleichen und von einem digitalen Leit-medienwechsel sprechen [Dö16]. Dies hat sowohl den Ruf nach Informatischer Bildung in der Schule (z.B. [Ga13]) als auch das Verständnis für diese Forderung in den letzten Jahren gestärkt (PM14). In immer mehr Ländern sind deshalb Bemühungen im Gange, Informatik stärker in der Schule zu verankern. Gleichzeitig ist auch die Tendenz zu beo-bachten, dass bei entsprechenden Projekten das Einstiegsalter für Informatik sinkt. War Informatik noch bis vor wenigen Jahren meist auf der Sekundarstufe I und II angesiedelt, wird heute immer häufiger bereits in der Grundschule oder noch früher begonnen. Auch im deutschsprachigen Teil der Schweiz ist eine solche Entwicklung im Gang.                                                               1 Pädagogische Hochschule Schwyz, IMS, Zaystrasse 42, CH-6410 Goldau, beat.doebeli@phsz.ch 2 Pädagogische Hochschule Schwyz, IMS, Zaystrasse 42, CH-6410 Goldau, michael.hielscher@phsz.ch I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 97ii “proceedings” — 2017/9/17 — 20:19 — page 98 — #98 ii i ii i 16    Beat Döbeli Honegger und Michael Hielscher    1.1 Der Lehrplan 21 in der Schweiz Das schweizerische Bildungssystem ist sehr föderalistisch. So sind z.B. Lehrpläne bisher kantonal geregelt. Im Jahr 2006 haben die Bildungsdirektoren der deutschund mehr-sprachigen Kantone (D-EDK) beschlossen, einen sprachregionalen Lehrplan für die gesamte obligatorische Schulzeit (Kindergarten bis Ende Sekundarstufe I) zu entwickeln. Dieser wurde von 2010 bis 2014 erarbeitet und danach zur Umsetzung an die 21 beteiligten Kantone übergeben. Da der Lehrplan 21 nur Empfehlungscharakter hat, entscheiden alle 21 Kantone einzeln, ob, wie und wann er umgesetzt werden soll. In zahlreichen Kantonen finden aufgrund heftiger Kritik konservativer Kreise Volksabstimmungen zur Einführung des Lehrplans 21 statt.  Die Zahl 21 steht nicht nur für die 21 am Lehrplan beteiligten Kantone, sondern soll auch ausdrücken, dass der Lehrplan für das 21. Jahrhundert gedacht ist. Neben der versuchten Harmonisierung der kantonalen Lehrpläne lassen sich beim Lehrplan 21 vier wesentliche Veränderungstendenzen ausmachen [DEDK2014]: • Orientierung an drei Zyklen (Kindergarten bis 2.Klasse, 3.-6. und 7.-9. Klasse)  statt der Definition von spezifischen Jahrgangszielen • Kompetenzorientierte Formulierungen statt bisheriger Lernziele • Definition von Fachbereichen statt einzelner Fächer • stärkere Betonung überfachlicher Themen und Kompetenzen 1.2 Informatik im Lehrplan 21 In der ursprünglichen Planung von 2010 war der Themenbereich Digitalisierung nur am Rande unter dem Titel »ICT und Medien« als eines von vielen überfachlichen Themen ohne eigene Stundendotation vorgesehen [DEDK10]. Dementsprechend waren informatische Kompetenzen im ersten veröffentlichten Lehrplanentwurf eher versteckt und ohne die explizite Nennung des Begriffs Informatik vertreten [DEDK13]. Obwohl versteckt, führten diese Kompetenzbeschreibungen zu einer breiten bildungspolitischen Diskussion (siehe z.B. [Bu13]). Insbesondere das in der Öffentlichkeit wahrgenommene Programmieren im Schulunterricht wurde kontrovers diskutiert. Nachdem sich zahlreiche Kreise für eine stärkere Verbindlichkeit digitaler Kompetenzen ausge-sprochen haben (z.B.[ICTS13]), wurde der Lehrplanteil in »Medien und Informatik« (M+I) umbenannt und zu einem Modul umgewandelt. Der bis zu diesem Zeitpunkt im Volksschulbereich undefinierte Begriff »Modul« stellt dabei einen bildungspolitischen Kompromiss dar, da sich ein neues Fach vermutlich nicht hätte realisieren lassen.  Der im Jahr 2015 als Teil des Lehrplans 21 von der D-EDK verabschiedete und zur Umsetzung den Kantonen übergebene Teillehrplan »Medien und Informatik« [DEDK15] unterscheidet folgende drei Kompetenzbereiche: 98 Beat Döbeli Honegger, Michael Hielscherii “proceedings” — 2017/9/17 — 20:19 — page 99 — #99 ii i ii i Vom Lehrplan zur LehrerInnenbildung    17   • Anwendungskompetenzen: „Schülerinnen und Schüler nutzen Informationsund Kommunikationstechnologien in allen Fachund Lebensbereichen effektiv und effizient.“ • Medien: „Schülerinnen und Schüler können an der Mediengesellschaft selbstbe-stimmt, kreativ und mündig teilhaben und sich sachgerecht und sozial verantwortlich verhalten.“ • Informatik: „Schülerinnen und Schüler verstehen Grundkonzepte der automatisier-ten Informationsverarbeitung, nutzen sie zur Entwicklung von Lösungsstrategien in allen Lebensbereichen und zum Verständnis der Informationsgesellschaft.“ Mit dieser Dreiteilung ist der Teillehrplan »Medien und Informatik« nicht weit entfernt vom im Februar 2016 entwickelten Dagstuhl-Dreieck (s. Abb. 1). Während im Lehrplan 21 bereits belegte Fachbegriffe verwendet werden, werden im Dagstuhl-Dreieck historisch unbelastetere Perspektiven definiert.   Abb. 1: Ähnliche Dreiteilung digitaler Kompetenzen im Teillehrplan »Medien und Informatik« [DEDK15] (links) sowie im Dagstuhl-Dreieck [Br16] (rechts) Für zwei der drei Bereiche (Medien, Informatik) gibt der Lehrplan 21 einen Kompetenz-aufbau vor. Die Kompetenzen im dritten Bereich »Anwendung« sollen hingegen in anderen Fachbereichen integriert unterrichtet werden und sind damit nicht unmittelbarer Gegenstand des eigenständigen Zeitgefäßes. Der Bereich Informatik gliedert sich wie-derum in die drei Teilbereiche Datenstrukturen, Algorithmen und Informatiksysteme. Die darin aufgeführten Kompetenzen wurden teilweise jedoch aus bildungspolitischen Gründen gewählt und folgen damit weniger fachdidaktischen Überlegungen.  Aufgrund des Empfehlungscharakters des Lehrplans 21 ist es den Kantonen überlassen, wie sie den Begriff Modul bezüglich Stundenplan und Zeugniseintrag interpretieren. Ebenso ist offen, ob die Inhalte des Moduls von allen Klassenlehrpersonen oder von speziellen Fachlehrpersonen unterrichtet werden, oder ob es zukünftig eine eigen-ständige Lehrbefähigung für Medien und Informatik geben soll. Während einige Vom Lehrplan zur Lehrerinnenbildung 99ii “proceedings” — 2017/9/17 — 20:19 — page 100 — #100 ii i ii i 18    Beat Döbeli Honegger und Michael Hielscher    Kantone ein eigenes Zeitgefäß bereits ab der 5. Klasse vorsehen (z.B. Zürich und St. Gallen), planen andere ein solches erst ab der 7. Klasse und integrieren die Inhalte auf der Primarstufe in bestehende Fächer wie Mathematik und Deutsch (z.B. Luzern oder Schwyz). Da in den Schweizer Primarschulen grundsätzlich das Klassenlehrerprinzip gilt, sind praktisch alle Primarlehrpersonen mit dem Thema M+I konfrontiert, können ihm also nicht ausweichen (anders in der Sekundarstufe I, in der Lehrpersonen nur eine Auswahl von Fächern unterrichten). Dass nun auf der Primarschulstufe alle angehenden und praktizierenden Lehrpersonen im Bereich Informatik ausbzw. weitergebildet werden, ist im deutschsprachigen Raum bisher einzigartig. 1.3 Herausforderungen bei der Ausund Weiterbildung von Lehrpersonen Mit dem Lehrplan 21 gewinnt das Thema Medien und Informatik stark an Bedeutung. Damit benötigen Lehrpersonen aber auch eine entsprechende Ausoder Weiterbildung. Dies stellt die Kantone und die pädagogischen Hochschulen (wo in der Schweiz auch die Weiterbildung von Lehrpersonen angesiedelt ist) vor zahlreiche Herausforderungen: 1. Fehlendes Fachwissen und Erfahrung bei Lehrpersonen: Amtierende und angehende Lehrpersonen verfügen insbesondere im Bereich Informatik über praktisch kein Vorwissen und haben auch keine Unterrichtserfahrungen aus der eigenen Schulzeit [Döb15]. 2. Fehlendes Fachwissen und Erfahrung bei Dozierenden an Pädagogischen Hochschulen: Derzeit sind Dozierende in der LehrerInnenbildung mit fundierter Informatikausbildung selten. Selbst diesen Dozierenden fehlt jedoch meist entsprechende Unterrichtserfahrung auf der Zielstufe. 3. Fehlende Lehrmittel: Derzeit sind entsprechende, auf den Modullehrplan »Medien und Informatik« abgestimmte Lehrmittel erst in Entwicklung und werden anfänglich für die Ausund Weiterbildung nicht zur Verfügung stehen. 4. Fehlende Zeit für Ausund Weiterbildung: Sowohl aus finanziellen Gründen als auch aufgrund der sonstigen Belastung von Lehrpersonen steht weniger Ausund Weiterbildungszeit für »Medien und Informatik« zur Verfügung als es Fachdidaktiker als notwendig ansehen. 5. Reservierte Haltung der Studierenden: Lehramtsstudierende haben gegenüber dem Thema Medien und Informatik oft eine reservierte bis ablehnende Haltung (siehe auch ähnliche Ergebnisse aus deutschen Studien, z. B. [KB11]) 6. Fehlendes Bewusstsein bei Entscheidungsträgern: Sowohl politischen als auch administrativen Entscheidungsträgern fehlt anfänglich oft noch das Bewusstsein für das Thema und seine Aspekte. Insbesondere die Unterscheidung zwischen Informatik als eigenständige Disziplin und der allgemeinen Nutzung von Computern im Unterricht fällt häufig schwer.  100 Beat Döbeli Honegger, Michael Hielscherii “proceedings” — 2017/9/17 — 20:19 — page 101 — #101 ii i ii i Vom Lehrplan zur LehrerInnenbildung    19   2 Situation an der Pädagogischen Hochschule Schwyz Die Pädagogische Hochschule Schwyz (PHSZ) ist eine kleine Pädagogische Hochschule mit vierfachem Leistungsauftrag (Ausbildung, Weiterbildung, Dienstleistung, sowie Forschung und Entwicklung) in Goldau (Kanton Schwyz) mit ca. 100 Mitarbeitenden. Sie bietet in der Ausbildung die beiden Studiengänge »Lehrperson für die Primarstufe« (1.-6. Klasse) und »Lehrperson für Kindergarten/Unterstufe« (Kindergarten bis 2. Klasse) und hat aktuell ca. 350 Studierende. Im April 2016 hat der Hochschulrat die beiden Studiengänge aufgrund des Lehrplans 21 angepasst. Dabei stand insbesondere die Erweiterung der Studiengänge um den Fachbereich M+I im Zentrum. Der Studiengang Primarschule enthält neu 6 ECTS-Punkte (von 180) in fünf Modulen im Bereich Medien und Informatik. Zusätzlich werden mediendidaktische Kompetenzen in einer weiteren Veranstaltung aufgebaut (Modulübersicht siehe Abb. 2).   Abb. 2: Modulverteilung des Fachkerns »Medien und Informatik« an der PHSZ Die PHSZ ist damit die erste Pädagogische Hochschule in der deutschsprachigen Schweiz, die im Herbstsemester 2016 mit der Ausbildung gemäß Lehrplan 21 im Bereich M+I begonnen hat. Insbesondere ist sie die erste Deutschschweizer PH mit einer obligatorischen Veranstaltung in Informatikdidaktik für alle Studierenden der Primar-schulstufe. Vom Kanton Schwyz wurde die PHSZ mit der Weiterbildung der amtierenden Lehrpersonen für den Lehrplan 21 beauftragt. Für Primarlehrpersonen der 5. und 6. Klasse stellt dabei die obligatorische Weiterbildung in Informatik im Umfang von 10 Halbtagen den größten Themenbereich dar.  Vom Lehrplan zur Lehrerinnenbildung 101ii “proceedings” — 2017/9/17 — 20:19 — page 102 — #102 ii i ii i 20    Beat Döbeli Honegger und Michael Hielscher    3 Erstmalige Durchführung der Lehrveranstaltung »Grundlagen der Informatik«  Im Herbstsemester 2016 haben die beiden Autoren erstmalig die obligatorische Lehrveranstaltung »Grundlagen der Informatik« im ersten Semester des Studiengangs Primarstufe durchgeführt. Vor Beginn der Lehrveranstaltungen haben zwei Befragungen stattgefunden, einerseits die allgemeine Eingangsbefragung der PHSZ [Eck16], andererseits eine lehrveranstaltungsspezifische der beiden Autoren dieses Beitrags.  Von den 85 Studierenden der Lehrveranstaltung sind ca. 80% weiblich, 95% in der Schweiz geboren und über 85% sprachen zu Hause deutsch oder Schweizerdeutsch. 35% verfügten bei Studienbeginn bereits über eine abgeschlossene Berufsausbildung und beschritten mit dem Beginn des Studiums somit den zweiten Bildungsweg [Eck16]. Bereits die allgemeine Eingangsbefragung gibt erste Hinweise auf die Motivation der Studierenden in Bezug auf digitale Medien. So rangiert der thematische Schwerpunkt der PHSZ im Bereich digitaler Medien auf Platz 7 von 9 möglichen Gründen für die Wahl des Studienorts. Zudem möchten sich mehr Studierende möglichst viel pädagogisches Hintergrundwissen aneignen und ihre Lernund Arbeitsstrategien im Studium verbessern, als ihre Kompetenz im Bereich digitaler Medien verbessern (siehe Abb. 3). Diese Frage ist insofern relevant, als dass die PHSZ einen Schwerpunkt im Bereich digitaler Medien hat und zu den ersten Pädagogischen Hochschulen in der Schweiz gehörte, die bereits 2004 ein Notebookobligatorium für Studierende einführte.   Abb. 3: Ziele für das Studium der Studierenden der Lehrveranstaltung  »Grundlagen der Informatik« [Eck16] Während in der Eingangsbefragung des Studiengangs noch sehr allgemein von »neuen Medien« und »digitalen Medien« die Rede war, interessierten in der Eingangsbefragung der Lehrveranstaltung mehr die Vorstellungen und Erwartungen der Studierenden zum Seminar und der Informatik in der Primarschule sowie ihre persönlichen Erfahrungen und Anwendungskompetenzen.  Mehr als ein Drittel der Studierenden gab an, dass sie auf ihren Notebooks noch keine oder wenige persönliche Daten abgelegt haben, womit davon ausgegangen werden kann, dass die Geräte erst mit Beginn des Studiums angeschafft wurden. Alle 85 Studierenden gaben an, ein Smartphone zu besitzen. 102 Beat Döbeli Honegger, Michael Hielscherii “proceedings” — 2017/9/17 — 20:19 — page 103 — #103 ii i ii i Vom Lehrplan zur LehrerInnenbildung    21   Die Antworten auf die Frage “Was stellen Sie sich unter Informatik in der Primarstufe vor? Beschreiben Sie stichwortartig.” wurden in Tabelle 1 thematisch gruppiert und nach Anzahl Nennungen sortiert. Bis auf das Programmieren beziehen sich alle Ant-worten auf Anwendungskompetenzen, die laut Lehrplan 21 nicht zur Informatik gehören und unabhängig davon in allen Fächer aufgebaut und angewendet werden sollen. Thematisch gruppierte Freitextantworten Nennungen Umgang mit Office-Programmen erlernen (z.B. Textverarbeitung)  38 Lernprogramme / Lernspiele anwenden 32 Handhabung von Computer / ICT erlernen  30 Umgang mit dem Internet erlernen (inkl. Sicherheit, Datenschutz) 24 Tastaturschreiben erlernen (10-Finger-System) 20 Webrecherche erlernen (Computer als Informationsquelle nutzen) 12 Bildund Videobearbeitung erlernen 5 Einsatz von ICT im Schulalltag thematisieren 4 Programmieren lernen 4 Tab. 1: Von erstsemestrigen PH-Studierenden erwartete Inhalte bei »Informatik in der Primarschule”, absteigend geordnet nach Anzahl Nennungen Die Antworten zeigen, dass ein Verständnis der Informatik als eigenständige Disziplin und die damit verbundenen Fachinhalte beim überwiegenden Teil der Studierenden fehlt. Dies ist wenig erstaunlich, weisen doch selbst Untersuchungen zu Abbruchquoten in Informatikstudiengängen ebenfalls auf das Problem von Fehlvorstellungen hin, obwohl diese Studierenden ein offensichtliches Interesse am Thema haben (vgl. [BM05], [HSW06]).  In der Eingangsbefragung wurde erhoben, ob die Studierenden schon einmal etwas selbst programmiert haben (29% ja, 71% nein). Bei den 25 Studierenden, die “ja” angaben, wurde in zwei Folgefragen mit Freitextantworten konkretisiert, was und in welcher Programmierumgebung programmiert worden ist. Tabelle 2 zeigt den Versuch einer thematischen Gruppierung der Antworten. Die Nennung verschiedenster Anwendungsprogramme deutet stark darauf hin, dass der Begriff “Programmieren” bei rund der Hälfte dieser Studierenden unklar ist und mit “Installieren” oder “Konfigurieren” gleichgesetzt wurde. Auch die Antworten “DropBox”, “USB-Stick”, “Schule” oder “Apple” auf die Frage der eingesetzten Programmierumgebung deuten auf fehlende oder falsche Vorstellungen im Bereich des Programmierens hin. Insgesamt gaben 6 der 25 Studierenden mit Programmiererfahrung an, bereits mit Scratch gearbeitet zu haben (gefolgt von Java und Python mit je 2 Nennungen). Insgesamt verfügten somit nur rund 10% aller Studierenden über Vorerfahrungen im Bereich des Programmierens. Vom Lehrplan zur Lehrerinnenbildung 103ii “proceedings” — 2017/9/17 — 20:19 — page 104 — #104 ii i ii i 22    Beat Döbeli Honegger und Michael Hielscher    Thematisch gruppierte Freitextantworten Nennungen Outlook, Adobe Reader, iTunes, Anti Virus, FortiClient ...   8 kleine Rechenprogramme programmiert (mathematische Themen) 7 Scratch 3 Kara 1 Datenbanken 1 Turtle 1 Simulation 1 Webseite erstellt 1 Vergleich von zwei Exceltabellen 1 Tab. 2: Programmiererfahrungen erstsemestriger PH-Studierender (Selbstauskunft) Für drei ausgewählte, anspruchsvollere Kompetenzen aus dem Lehrplan 21 sollten sich die Studierenden einerseits selbst einschätzen und andererseits angeben, ob diese Kompetenzen für heutige Schülerinnen und Schüler Ende der 6. Klasse relevant seien. (siehe Tab. 3). Über 40% der angehenden Primarlehrpersonen waren der Meinung, dass Kinder erklären können sollten, wie der Strichcode auf einer Milchpackung funktioniert, dies aber nur rund 10% selbst erklären könnten. Auch im Bereich der Anwendungs-kompetenzen zeigt sich eine Diskrepanz zwischen dem Anspruch des Lehrplans 21 und den Selbsteinschätzungen der Erstsemestrigen. Bis auf wenige Ausnahmen konnten alle Studierenden das Betriebssystem ihres Notebooks und ihres Smartphones in einem Frei-textfeld benennen. Eine Single-Choice-Frage zu Messgrößen der Informatik (Wieviel Speicherplatz benötigen 3 Minuten Musik auf einem Smartphone?) konnten hingegen nur noch rund 30% korrekt beantworten und mehr als die Hälfte der Studierenden wählten die Antwortoption “keine Ahnung”.  Zusammenfassend bestätigen die beiden Eingangs-befragungen somit die in Abschnitt 2.3 genannten Herausforderungen 1 und 5: Studie-rende verfügen über wenige Vorkenntnisse und sind nicht besonders interessiert am The-ma. Insbesondere bezüglich Vorwissen unterscheidet sich damit das Thema Informatik von den meisten anderen Schulfächern. Das einsemestrige Seminar gliederte sich in acht 90-minütige Präsenzveranstaltungen mit jeweils 20 bis 24 Teilnehmenden (in 4 Kursgruppen) und Selbststudienphasen. Inhaltlich orientierte sich die Veranstaltung eng am Lehrplan mit den drei Teilbereichen Datenstrukturen, Algorithmen und Informatiksystemen, wobei anteilig ein größeres Gewicht auf Algorithmen, insbesondere auf das Programmieren gelegt wurde. Zudem wurde in den ersten beiden Veranstaltungen anhand anschaulicher Unterrichtsbeispiele am Grundverständnis der Informatik als eigenständige Disziplin gearbeitet. In der letzten Präsenzveranstaltung wurden die Informatikdidaktik und ihre Besonderheiten im Rückblick auf das Semester thematisiert. Die detaillierten Lernziele, Kursplanung und Materialien sind im Veranstaltungswiki (phsz.doebe.li/GDI16) öffentlich einsehbar.  104 Beat Döbeli Honegger, Michael Hielscherii “proceedings” — 2017/9/17 — 20:19 — page 105 — #105 ii i ii i Vom Lehrplan zur LehrerInnenbildung    23   Tab. 3: Selbsteinschätzung angehender PrimarlehrerInnen bezüglich Informatik-Kompetenzen aus dem Lehrplan 21 Gegen Ende des Semesters wurde eine Kursevaluation durchgeführt. Die Lehrveranstal-tung wurde insgesamt überwiegend als “gut” bis “sehr gut” bewertet. Die Seminarinhalte wurden als “eher anspruchsvoll” bis “sehr anspruchsvoll” bezeichnet. Die Studierenden sollten u.a. auch angeben, ob sie sich nun in der Lage sehen, eine typische Fragestellung/Problemstellung aus dem Themenbereich der Informatik zu bearbeiten. Dem konnte mehrheitlich nur bedingt zugestimmt werden. Insbesondere das Program-mieren mit Scratch wurde von den Studierenden als zu schwierig und mit “zu wenig Zeit” beschrieben. Mehrheitlich wünschen sich die Studierenden deshalb mehr Präsenzveranstaltungen und eine intensivere Auseinandersetzung mit Scratch. 4 Dilemma von Motivation vs. Wissensvermittlung  Da die Inhalte des Modullehrplans M+I in einigen Schweizer Kantonen auf der Primar-stufe integriert in den bestehenden Fächern unterrichtet werden sollen, besteht die bei integrierten Ansätzen übliche Gefahr von Vermeidungsstrategien bei Lehrpersonen, die diese Inhalte aus verschiedenen Gründen nicht unterrichten wollen oder können. Fehlt die extrinsische Vorgabe durch einen Fachlehrplan, hängt es an der intrinsischen Motivation der Lehrperson ab, ob sie informatische Themen unterrichtet. Da den Studierenden wie oben gezeigt eine Vorstellung des Themas Informatik fehlt, muss diese intrinsische Motivation in der Lehrerausund -weiterbildung angelegt werden. Sowohl in der Ausals auch in der Weiterbildung steht aber bereits zu wenig Zeit zur Verfügung, um die eigentlich notwendige fachliche und fachdidaktische Kompetenz zu vermitteln. Bei der Planung von Informatikausund -weiterbildungen entsteht somit das Dilemma, ob angesichts der begrenzten zeitlichen Ressourcen bei den angehenden und amtierenden Lehrpersonen eher die Motivation oder die informatischen Kompetenzen stärker gewichtet werden sollen (siehe Abb. 4). Eine zu starke Konzentration auf fach-0 und 1: Ich kann erklä-ren, wie der Computer Texte, Bilder, Töne und Videos mittels 0 und 1 speichert Codes: Ich weiß, wie Codes in unserem Alltag (z.B. Barcode auf der Milchpackung, ISBNNummer) funktionieren. Geheimschrift: Ich kann selbst eine Geheimschrift entwickeln, die zwar alle lesen, aber nicht alle verstehen können.   Vom Lehrplan zur Lehrerinnenbildung 105ii “proceedings” — 2017/9/17 — 20:19 — page 106 — #106 ii i ii i 24    Beat Döbeli Honegger und Michael Hielscher    wissenschaftliche Inhalte der Informatik könnte dazu führen, das häufig bereits negativ vorgeprägte Bild der Informatik bei Lehrpersonen zu verstärken und damit intrinsische Motivation zu verhindern. Umgekehrt besteht bei zu starker Gewichtung motivationaler Aspekte die Gefahr, dass die Lehrpersonen zu wenig Fachkompetenz erlangen und sich gleichzeitig selbst überschätzen. Positiv formuliert dürften aber motivierte Lehrpersonen eher bereit sein, sich auch zukünftig mit dem Thema auseinanderzusetzen und sich weiterzubilden.     Abb. 4: Das Dilemma von Motivation vs. Wissensvermittlung bei begrenzten Zeitressourcen 5 Fazit und Empfehlungen  Informatik als Thema wird in wenigen Jahren in den Lehrplänen der meisten Deutschschweizer Kantone angekommen sein. Es stellt sich nicht mehr die Frage, »ob« sondern »wie« Informatik in der Volksschule (oder gar im Kindergarten) unterrichtet werden soll. Die Ausund Weiterbildungen an den Pädagogischen Hochschulen stehen nun vor der Herausforderung, die angehenden und bestehenden Lehrpersonen zu befähigen, diese Inhalte auch stufenadäquat unterrichten zu können. Angesichts der in Abschnitt 1.3 beschrieben Herausforderungen und den ersten Erfahrungen an der PHSZ empfehlen wir, in der Ausund Weiterbildung insbesondere motivationale Aspekte gegenüber der Vermittlung umfangreichen Fachwissens zu betonen. Aufgrund der fehlenden eigenen Erfahrungen braucht es konkrete Beispiele, um sowohl eine Vorstellung zu entwickeln wie Informatik in der Volksschule aussehen kann als auch das Selbstvertrauen der Lehrpersonen zu stärken, diese Inhalte selbst umsetzen zu können. Es gilt, das eher negative Bild der Informatik mit den vorherrschenden Fehlvorstellungen zu korrigieren. Bei der Veranstaltungsplanung muss das Vorwissen der Studierenden bzw. Lehrpersonen berücksichtigt werden. Eine inhaltliche Überfrachtung und damit verbundene Überforderung könnte langfristig der flächendeckenden Einführung von Informatik in der Schule schaden.  Die Informatikdidaktik muss somit sowohl für sich selbst als auch nach außen die Erwartungen an rasche Kompetenzzuwächse im Bereich der Informatik an Schulen dämpfen. Nach “don’t miss the boat” [Ga13] ist es nun wichtig, dieses Boot nicht gleich zu überladen.  106 Beat Döbeli Honegger, Michael Hielscherii “proceedings” — 2017/9/17 — 20:19 — page 107 — #107 ii i ii i Vom Lehrplan zur LehrerInnenbildung    25   Literaturverzeichnis [BM05]  T. Beaubouef, J. Mason: Why the High Attrition Rate for Computer Science Students: Some Thoughts and Observations, ACM SIGCSE Bull. June 2005 Vol. 37, Num. 2, S. 103-106 https://doebe.li/t19532 [Bu13]  Burri, A.: Jeder Schüler ein kleiner Programmierer. Tages Anzeiger vom 29.06.2013 https://doebe.li/t15492  [Ga13]  Gander, W. et.al.: Informatics education: Europe cannot afford to miss the boat. Report of the joint Informatics Europe & ACM Europe Working Group on Informatics Education. 2013, https://doebe.li/t14733  [Br16]  Brinda, T. et al: Bildung in der digitalen vernetzten Welt – Dagstuhl-Erklärung.  http://tinyurl.com/dagstuhl3eck, https://doebe.li/t19500   [DEDK10] Deutschschweizer Erziehungsdirektorenkonferenz (D-EDK): Grundlagen für den Lehrplan 21, verabschiedet von der Plenarversammlung der deutschsprachigen EDK-Regionen, 2010: http://www.lehrplan.ch/sites/default/files/Grundlagenbericht_0.pdf https://doebe.li/t11540 [DEDK13]  Deutschschweizer Erziehungsdirektorenkonferenz (D-EDK): ICT und Medien.  In: D-EDK: Lehrplan 21, Entwurfsfassung, 2013: http://konsultation.lehrplan.ch/downloads/container/30_10_0_0_1_1.pdf https://doebe.li/t17000   [DEDK15]  Deutschschweizer Erziehungsdirektorenkonferenz (D-EDK): Medien und Informatik. In: D-EDK: Lehrplan 21. Bereinigte Fassung, 2015. http://projekt.lehrplan.ch/lehrplan/V5/ablage/FS1E_Modul_MI.pdf  https://doebe.li/t17600 [Dö15]  Döbeli Honegger, B.: Digitale Kompetenzen von Lehrpersonen für den Lehrplan 21, 2015. https://doebe.li/t17550  [Dö16]  Döbeli Honegger, B.: Mehr als 0 und 1. bern: hep Verlag, 2016. https://doebe.li/b6000 [ICTS13]  ICTswitzerland: Digitale Kompetenzen benötigen Verbindlichkeit im Lehrplan 21. Positionspapier der Kommission Bildung von ICTswitzerland, 2013. http://tinyurl.com/verbindlichkeit, https://doebe.li/t17550   [Ec16]  Eckert, N.: Eingangsbefragung 2016 Studiengang Primarstufe der Pädagogischen Hochschule Schwyz (unveröffentlicht), 2016.  [HSW06]:  U. v. Holdt, H. Schneider, B. Wagner: Analyse von Studienverläufen und Studienab-brüchen in den Bachelorstudiengängen Informatik an der Leibnitz Universität Hannover. HDI 2006 Hochschuldidaktik der Informatik. Organisation, Curricula, Erfahrungen. 2. GIFachtagung 7.-8. 12. 2006 in München. https://doebe.li/t12101 [KB14]  Kommer, S. & Biermann, R.: Der mediale Habitus von (angehenden) LehrerInnen. In: Jahrbuch Medienpädagogik 9. Springer VS., 2014 https://doebe.li/t14704 [PM14]  Peyton Jones, S., Muuß-Merholz, J.: Schulfach "Computing" ab Klasse 1. In: c’t 14/2014, https://doebe.li/t16648 Vom Lehrplan zur Lehrerinnenbildung 107ii “proceedings” — 2017/9/17 — 20:19 — page 108 — #108 ii i ii iii “proceedings” — 2017/9/17 — 20:19 — page 109 — #109 ii i ii iIra Diethelm [et. al. ](Hrsg.): INFOS 2017 Informatische Bildung zum Verstehen und Gestalten, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 1 Ein Modell zur Analyse von Vorstellungen über Roboter und ihrer Funktionsweise Kathrin Müller, Carsten Schulte1 Abstract: Kinder wachsen heute in einer Welt auf, in der sie immer früher und häuﬁger digitalen Artefakten begegnen. Daher wird auch die Forderung nach informatischer Bildung für Kinder in der Primarstufe immer größer. Informatische Bildung sollte Kindern ermöglichen, Informatiksysteme, deren Funktionsweise sowie unterschiedliche Rollen im Alltag wahrnehmen zu können. Als exemplarisches Informatiksystem werden hier Roboter verwendet. Doch mit welchen eigenen Vorstellungen begegnen die Kinder diesen Robotern? Bisherige Studien konzentrieren sich besonders auf Fragen wie: Sind Roboter lebendig? Sind Roboter intelligent? In diesem Artikel stellen wir ein Modell vor, welches auf Basis der Ergebnisse vorangegangener Studien und dem Ansatz der Dualitätsrekonstruktion entwickelt wurde. Mit diesem Modell ist es möglich, Vorstellungen zur Funktionsweise und Rollen von Robotern zu analysieren und klassiﬁzieren. Es ermöglicht, einen Überblick über unterschiedliche Vorstellungen der Kinder zu bekommen und somit eine darauf abgestimmte informatische Bildung konzipieren zu können, welche die vorhandenen Vorstellungen zielgerichtet erweitern oder ggf. auch verändern kann. Keywords: Informatik in der Primarstufe, Roboter, Schülervorstellungen 1 Einleitung Durch die Tatsache, dass Kinder immer früher und häuﬁger mit digitalen Artefakten in Berührung kommen, wird auch die Forderung nach einer entsprechenden informatischen Bildung immer größer. Diese sollte es Kindern ermöglichen, Informatiksysteme, deren Funktionsweise sowie unterschiedliche Rollen im Alltag wahrnehmen zu können. Für einen anschaulichen Unterricht und einen Lebensweltbezug, wurden und werden zahlreiche Informatiksysteme für den Unterricht entwickelt. Besonders hervorzuheben sind hier Roboter. Sie existieren in unterschiedlichen Formen in der Lebenswelt der Kinder (Spielzeug, Filme, Haushalt) und bereits für die frühe informatische Bildung in KiTa und Grundschule. Doch mit welchen eigenen Vorstellungen begegnen die Kinder digitalen Artefakten und besonders diesen Robotern? Zahlreiche vorangegangene Studien (siehe Abschnitt 2) konzentrieren sich besonders auf Fragen wie: Sind Roboter lebendig? Sind Roboter intelligent, etc. Hinsichtlich eines Systemverständnisses in Verbindung mit der Programmierung des Roboters ist uns kaum Forschung bekannt. Diese Forschungslücke sollte unserer Meinung 1Universität Paderborn, Didaktik der Informatik, Fürstenallee 11, 33102 Paderborn, [vorname].[nachname]@unipaderborn.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 109ii “proceedings” — 2017/9/17 — 20:19 — page 110 — #110 ii i ii i2 Kathrin Müller und Carsten Schultenach im Hinblick auf die informatische Bildung geschlossen werden. Roboter stehen hier nurexemplarisch für eine wichtige Klasse von digitalen Artefakten. Andere digitale Artefaktefunktionieren nach denselben oder zumindest ähnlichen Prinzipien.Robotern wird noch eher als anderen digitalen Artefakten entsprechendes autonomes undintentionales Verhalten zugetraut (per Deﬁnition der Technologieklasse), da sie bewusstfür eine solche Wahrnehmung und solchen Einsatz (vgl. die Forschungsrichtung socialrobotics) entwickelt und entworfen werden. Arthur C. Clarke [Wi16] geht sogar soweit,dass jede hinreichend fortgeschrittene Technologie nicht von Magie zu unterscheiden sei.Wir wissen aus vielen Praxisbegegnungen, -berichten und Forschungsergebnissen, dassComputertechnologie an sich vermenschlicht wird (Elektronengehirn, ...). Es ist dahereine Aufgabe der informatischen Bildung, diese vorunterichtlichen Alltagsvorstellungenaufzugreifen und ihnen angemessene Vorstellungen über die tatsächlichen Wirkprinzipengegenüberzustellen. Daher bietet sich die Nutzung dieser Technologie besonders an, daihre Faszination zu Neugier und Hinterfragen anregt, und andererseits hier die Neigungbzw. Zuschreibung von menschlichen Eigenschaften vermutlich noch größer ist. An diesemGegenstand lässt sich also besonders gut erforschen, welche Vorstellungen Kinder haben,und mit welchen didaktischen Konzepten diese verändert bzw. angereichert werden können.In diesem Papier stellen wir ein Modell vor, welches Ergebnisse vorangegangener Studien zuRobotervorstellungen und den Ansatz der Dualitätsrekonstruktion [Sc09] zusammenbringt.Das Modell klassiﬁziert und beschreibt Schülervorstellungen (deskriptiver Aspekt) undermöglicht es, diese Vorstellungen einzuordnen und zu bewerten (normativer Aspekt).Darüber hinaus dient es als Werkzeug, um vorhandene Vorstellungen zu erweitern oder zuverändern (konstruktiver Aspekt) (vgl. die Einteilung bei [Ra11]).2 Vorstellungen über RoboterIm Folgenden möchten wir einen Überblick über uns bekannte Forschungen zu Vorstellungenvon Robotern geben. Bei der Recherche ﬁel auf, dass viele dieser Studien bereits älterenDatums sind. Die Technik hat sich seitdem stark weiterentwickelt, dennoch gehen wirdavon aus, dass viele dieser Vorstellungen auch heute noch von Relevanz sind. Einen gutenersten Überblick über Vorstellungen zu Computern allgemein gibt [RP16]. Auf Basis einerLiteraturrecherche werden hier die Vorstellungen inComputer sind intelligent,Computersind allwissende Datenbanken,Computer sind mechanisch,Computer sind KabelnetzwerkeundComputer sind programmierbargruppiert. Besonders im BereichComputer sindintelligentweist der Artikel auch auf Studien im Bereich Vorstellungen über Roboter hin.Die Ergebnisse dieser und weiterer Studien stellen wir nun im Folgenden gegliedert vor.Psychologische und technologische PerspektivenNach Turkle [Tu05] und Ackermann [Ac91] gibt es psychologische und physische bzw.technologische Perspektiven. Von der psychologischen ist die Rede, wenn der Gegenstandmit lebendigen Ansichten, Emotionen, Personalität oder eigenem Willen versehen wird. Im110 Kathrin Müller, Carsten Schulteii “proceedings” — 2017/9/17 — 20:19 — page 111 — #111 ii i ii iVorstellungen zu Robotern 3Gegensatz dazu sprechen sie bei technologischen Perspektiven von leblosen Materialien,wie Motoren, Sensoren und Kontrollprogrammen.Turkle [Tu05] hat Kinder in einem natürlichen/ gewohnten Umfeld mit intelligenten Spiel-sachen konfrontiert und die Gespräche der Kinder aufgezeichnet. Sie fand in ihrer Studiesowohl eine eher psychologische Sichtweise wie z.B. ein sprechendes Spielzeug istlebendig, da sprechende Wesen automatisch lebendig sind aber auch eine gegenteiligeSichtweise auf intelligente Spielsachen heraus. Die gegenteilige Sichtweise behauptet,lebendige Wesen müssen mit Intentionen handeln, daher könne ein sprechendes Spielzeugnicht lebendig sein.Ackermann [Ac91] geht von zwei ähnlichen Perspektiven aus: „psychologisch“ und „engi-neering“. Beim psychologischen Bild werden intelligente Artefakte als lebendig angesehen,wenn sie Intentionen, Bewusstsein, Persönlichkeit oder einen eigenen Willen zu habenscheinen. Die Perspektive „engineering“ wird typischerweise benutzt, wenn das Bild einesgebauten oder programmierten Systems vorherrscht, dass das System gebaut oder pro-grammiert wird und keine Intentionen aufweist, sondern das Verhalten lediglich durchdie Interaktion der einzelnen Komponenten zustande kommt. Laut Ackermann ist einevollständige Beschreibung jedoch nur durch beide Perspektiven möglich: Die Fähigkeit,Objekte zu beleben bzw. Objekten Leben zu geben, sei ein entscheidender Schritt inRichtung des Aufbaus kybernetischer Theorien und kein Zeichen von kognitiver Unreife.Es wird die Fähigkeit erlangt, Perspektiven gezielt zu wechseln und für den richtigen Zweckeinzusetzen. Daher sollte es ein Ziel informatischer Bildung sein, diese Fähigkeit zu fördern.Levly und Mioduser [LM08] bestätigen diese Perspektiven in einer Studie mit fünfundsechsjährigen Kindern in gewisser Weise. Die Studie untersucht die Erklärungsperspektivenhinsichtlich eines mobilen Roboters, während die Kinder sein Verhalten anhand von Regelnprogrammieren. Als Ergebnis lassen sich zwei Typen von Schülerperspektiven ﬁnden: DiePerspektive „bridging“ stellt dabei eine Mischperspektive aus „engineering“ und der psycho-logischen Perspektive dar. Außerdem wird im Gegensatz zu anderen Studien, die die Kinderbzw. Schülerinnen und Schüler ausschließlich die Roboter beobachten lassen, deutlich, dassdie Kinder durch die Steuerung von Robotern eine Vorstellung davon entwickelt haben, wieRoboter funktionieren und arbeiten.Resnick und Martin [RM91] unterteilen die wechselnden Perspektiven in der Grundschulebeim Umgang mit Lego Robotern in psychologische (Tier/ lebendig), mechanische (Ma-schinen) und informatische (Informationsﬂuss von einem Teil zum anderen) Denkmuster.Eigenschaften von RoboternIn den im vorherigen Abschnitt vorgestellten Studien lassen sich bereits erste Eigenschaftenerkennen, die Kinder Robotern zuweisen.Bernstein und Crowley [BC08] beschäftigten sich mit der Frage, inwieweit Erfahrungenmit Robotern und intelligenten Systemen im Kindesalter die Konzepte von „lebendig sein“und „Intelligenz“ beeinﬂussen. Um dies zu untersuchen, wurden 60 Kinder zwischen 4und 7 Jahren über intellektuelle, psychologische und biologische Eigenschaften von achtDingen befragt. Zusätzlich wurden die Eltern der Kinder befragt. Themen waren hier:Zugänglichkeit von Robotern und digitalem Spielzeug und/oder Lernmaterial, Roboter imEin Modell zur Analyse von Vorstellungen über Roboter und ihrer Funktionsweise 111ii “proceedings” — 2017/9/17 — 20:19 — page 112 — #112 ii i ii i4 Kathrin Müller und Carsten SchulteHaushalt und Interesse und Vorwissen über Roboter und Computer. Daraus ergab sich einquantitatives Maß der Vorerfahrungen der Kinder.In dieser Studie wurde deutlich, dass einem Roboter im Bereich der Intelligenz mehrEigenschaften zugeordnet wurden als einem Computer. Auf der Ebene der Intelligenz sinddie Werte vergleichbar mit einer Katze. Die Werte für biologische Eigenschaften lagen immittleren Segment, vergleichbar mit einer Pﬂanze. In der durchschnittlichen Bewertung derpsychologischen Eigenschaften wurde deutlich, dass gut die Hälfte der Kinder Roboterneinen freien Willen und/oder eigene Emotionen zuschreiben (Werte lagen im Mittelfeld).In [Be11] werden weitere kognitive Eigenschaften wie z.B. Erinnerungsvermögen genannt.Darüber hinaus werden hier emotionale und verhaltensorientierte Eigenschaften genannt.Roboter und AnimismusIn den vorherigen Abschnitten wurde bereits deutlich, dass es Kinder gibt, die Roboternmenschliche Charakteristika wie beispielsweise eine Persönlichkeit oder Bewusstsein odergar Lebendigkeit zuordnen. Diese Tendenz, leblosen Objekten menschliche Charakteristikazuzuordnen wurde ursprünglich von Piaget entdeckt und wird als Animismus bezeichnet(vgl. [Be11]). Es gibt zahlreiche Studien, in denen der mehrdeutige Status von technischenObjekten untersucht wird. Einige wie z.B. [DS96], [Be11] oder [BC08] zeigen, dass derbeschriebene Animismus häuﬁg auch in Bezug auf Roboter vorliegt.Kategorien von RoboternIm Rahmen der Studie von Bernstein und Crowley [BC08] wurden aus den bereits zuvorvorgestellten Eigenschaften von Robotern drei Kategorien zur Klassiﬁzierung von Roboternherausgearbeitet. Dabei handelt es sich um die Kategorien Roboter als Tier, Roboter alsMaschine und Roboter als intelligente Technik (smart technology). Roboter als Tiere weisendie Eigenschaft Lebendigkeit sowie viele psychologische und kognitive Eigenschaftenauf. Roboter als Maschine weisen keine Eigenschaft im Bezug auf Lebendigkeit auf.Psychologische und kognitive Eigenschaften sind kaum bis gar nicht vorhanden. Im Zugeder Kategorie Roboter als intelligente Technik machen die Autoren keine Aussage zurEigenschaft Lebendigkeit. Die Kategorie weist aber viele kognitive Eigenschaften auf undKinder, deren Vorstellungen in diese Kategorie eingeordnet werden, haben bereits mehrErfahrungen oder Begegnungen mit Robotern gehabt.Aus der Literaturanalyse wird deutlich, dass der Roboter häuﬁg als technologischeBlackbox betrachtet wird. Der Fokus liegt auf den biologischen, psychologischen undintellektuellen Eigenschaften sowie den Funktionen des Roboters. Lediglich die techno-logische Perspektive betrachtet Motoren, Sensoren etc. und bietet somit Hinweise aufein technisches Verständnis der Roboter. Um ein vollständigeres Bild über Roboter imKontext der informatischen Bildung zu erhalten, führen wir im folgenden Abschnitt eineDualitätsrekonstruktion dieses digitalen Artefakts durch.Dualitätsrekonstrution und RoboterDie Dualitätsrekonstruktion [Sc09] ist ein Verfahren zur didaktischen Analyse von digitalenArtefakten bzw. Informatiksystemen für die informatische Bildung. Es verschränkt die112 Kathrin Müller, Carsten Schulteii “proceedings” — 2017/9/17 — 20:19 — page 113 — #113 ii i ii iVorstellungen zu Robotern 5Beschreibung von Präkonzepten und angestrebten Kompetenzbzw. Lernzielen mit der ex-emplarischen Analyse der wesentlichen informatischen Aspekte des Unterrichtsgegenstands.Diese sind generell die Funktionsweise (Struktur) sowie die mit dem System verknüpftenAbsichten, Einsatzziele, -zwecke und Nebenwirkungen (Funktion). Um diese zu fassen,wird jeweils auch auf dietechnikgeschichtliche Entwicklungder betrachteten Klasse vonInformatiksystemen eingegangen.In den 1940er prägte Isaac Asimov in seinen Science-Fiction-Geschichten die berühmtendrei (später auf vier erweiterten) Robotergesetze, denen zufolge ein Roboter keinen Men-schen (bzw. später die Menschheit) schädigen darf, den Menschen gehorchen und sichselbst schützen muss jeweils soweit nicht ein übergeordnetes Gesetz dagegen spricht.Tatsächlich gebaut wurden die ersten Roboter in den 1960er und 1970er Jahren, zunächstals Master-Slave-Arm zum Umgang mit atomaren Sto en, später dann als sogenannteIndustrie-Roboter in der industriellen Produktion. In den 1980er Jahren ging es um dieintelligente Verknüpfung von Wahrnehmung und Operation: Durch ausgeklügelte pro-grammierte Steuerung sollten Roboter anhand ihrer Sensoren die Umgebung erfassen unddementsprechend die Umgebung manipulieren oder sich selbst darin bewegen (mittelsAktoren). Mit dem Fortschreiten der Technologie erweiterte sich der Einsatzbereich vonstark begrenzten und kontrollierbaren Umgebungen (Fertigungsstraße, Operationssaal, etc.)zu alltäglichen Umgebungen (Haushalt,...), und damit auch die Interaktion zwischen Menschund Roboter von der engen Kontrolle zu stärkerer Autonomie und von der strikten Trennungder Einsatzbereiche bzw. -orte zu kooperierenden Formen, sodass heute auch von socialrobotics und co-bots anstelle von ro-bots gesprochen wird.DieFunktionvon Robotern wird daher auch mit Automatisierung (im Sinne Objektivierung:Übertragen von Handlungen an eine Maschine, die diese dann ausführt) nicht vollständigerfasst. Roboter werden eher menschenähnlich als Teil der Handlungen (z.B. Arbeitsprozesse)bzw. als autonom agierende Wesen betrachtet, die zur sozialen Umgebung dazugehören(z.B. Roboter in der Pﬂege). Anders formuliert: Robotern wird noch stärker als anderendigitalen Artefakten Autonomie und Interaktion als eigenständige Handlungsfähigkeitin einer sozialen Umgebung zugesprochen. Damit wird das Verhalten einer Maschinetendenziell als menschenähnlich, intentional aufgefasst.Auf der Betrachtungsebene derStrukturwird deutlich, dass dieses (emergente) Verhaltenauf einer Kombination von Sensoren, Programmsteuerung und Aktoren beruht. Sensorenumfassen typischerweise optische Sensoren, aber auch akustische und Berührungssensorensowie weitere „Sinne“, die Menschen so nicht haben (Radar, Ultraschall, u.a). Aktorendienen der Bewegung im Raum (Räder, u.a.) und der Manipulation von Gegenständen bzw.der Umgebung (Greifarm, u.a.).Ein Modell zur Analyse von Vorstellungen über Roboter und ihrer Funktionsweise 113ii “proceedings” — 2017/9/17 — 20:19 — page 114 — #114 ii i ii i6 Kathrin Müller und Carsten Schulte3Modell zur Analyse von Vorstellungen über Roboter und ihre Funk-tionsweiseIm Folgenden stellen wir nun unser theoretisches Modell zur Analyse und Einordnung vonVorstellungen über Roboter und ihrer Funktionsweise vor. Um ein möglichst vollständigesBild von Robotern in unserem Modell abzubilden, haben wir die Ergebnisse der unsbekannten Studien um weitere Charakteristika und um die zusätzlichen PerspektivenStruktur und Funktion aus der Dualitätsrekonstruktion ergänzt. Abbildung1zeigt unserKlassiﬁzierungRoboter als Lebewesen (soziales Wesen)Roboter als MaschineRoboter als intelligente Technik(smart technology)Roboter als soziale TechnikPerspektivetechnologischpsychologischStrukturFunktionMerkmalebiologischmechanisch/technischemotionalkognitiv/intellektuellintentionales	Verhaltensteuerbar	(manuell,	automatisch)Abb. 1: Modell zur Analyse und Einordnung von Vorstellungen über Roboter und ihre Funktionsweisevollständiges Modell bestehend aus Perspektiven und Merkmalen von Robotern. Ergänztwird das Modell um eine Klassiﬁzierung von Robotern.In den folgenden Abschnittenbeschreiben wir die einzelnen Aspekte des Modells und die vorgenommenen Ergänzungengenauer.Perspektiven auf RoboterIn der Literatur wurde deutlich, dass Kinder Roboter aus den Perspektiven technologischoder psychologisch, bzw. einer Mischung der beiden Perspektiven beschreiben (vgl. z.B.[LM08]). Wie bereits erwähnt, wurde in den vergangen Studien wenig Fokus auf dietechnologische Funktion und Struktur von Robotern gelegt. Würde man nur beispielsweisedie psychologische Perspektive mit der technologischen Perspektive ergänzen oder ersetzen,fehlt ein wichtiger Aspekt informatischer Bildung, der leider oft übersehen wird. Verste-hen einer Technologie ist nicht reduzierbar auf das Verstehen eines Artefakts oder einesPhänomens an sich. Es lässt sich auch nicht auf die Analyse und Beschreibung reduzieren.Denn dann würde man die Technologie quasi naturwissenschaftlich als gegebenen Unter-suchungsgegenstand als naturgegeben hinnehmen. Dabei ist der Unterschied zwischenTechnologie und Natur, dass die Technologie und damit technische Artefakte von Menschenmit bestimmten Absichten künstlich erscha en worden sind und weiterhin neue erfundenund erscha en werden. Diese beiden Perspektiven werden daher als Struktur (Aufbau einestechnischen Systems) und Funktion (Interpretation eines technischen Systems) ergänzt.Zusammenfassend umfasst das Modell die folgenden Perspektiven:technologisch:Diese Perspektive betrachtet technische Bauteile und Eigenschaften undbietet somit Hinweise auf ein technisches Verständnis der Roboter.psychologisch:Der Fokus dieser Perspektive liegt auf den biologischen, psychologischenund intellektuellen Eigenschaften sowie den Funktionen des Roboters.114 Kathrin Müller, Carsten Schulteii “proceedings” — 2017/9/17 — 20:19 — page 115 — #115 ii i ii iVorstellungen zu Robotern 7Struktur:Diese Perspektive charakterisiert sich durch beobachtbare Merkmale, die messbarund objektiv beschreibbar sind.Funktion:Diese Perspektive charakterisiert eine interpretierende Zuschreibung: Mehr oderweniger plausible Annahmen über E ekte, Nutzen, Angemessenheit, Einsatzzweck etc..Merkmale von RoboternDie Merkmale von Robotern in unserem Modell setzen sich aus den in der Literatur bereitsbenannten Merkmalen biologisch, emotional, kognitiv sowie intentionalem Verhalten undder Ergänzung um mechanisch/technisch und steuerbar zusammen. Die Ergänzung wurdevorgenommen, um im Bereich der Merkmale eine wichtige Komponente aus den Bereichender Funktionsweise und Struktur hinzuzufügen. Konkret sind die einzelnen Merkmale wiefolgt zu betrachten:biologisch:Hinter biologischen Merkmalen verbergen sich neben dem Animismus, also derZuschreibung von Lebendigkeit, weitere Aspekte, die Lebewesen zugeschrieben werdenkönnen, wie z.B. Wachsen oder Atmen sowie Sinne.mechanisch/technisch:Hinter mechanischen, bzw. technischen Merkmalen verbergen sichinsbesondere mechanische, bzw. technische Komponenten wie z.B. Sensoren und Aktorenund entsprechende mechanisch/technische Eigenschaften und Abläufe.emotional:Emotionale Merkmale sind solche, die man dem Bereich Emotionen und dememotionalen Erleben zuordnen kann. Hierzu gehören aber auch Interessen und Einstellungen.kognitiv/intellektuell:Kognitive bzw. intellektuelle Merkmale beinhalten alle kognitivenbzw. intellektuellen Fähigkeiten wie beispielsweise Denken, Rechnen, etwas wissen etc.intentional:Unter intentionalem Verhalten werden alle Verhaltensweisen betrachtet, diezielgerichtet, bzw. beabsichtigt sind. Hierzu gehört auch Sprechen.steuerbar:Merkmale im Bereich steuerbar gliedern sich auf in direkt und indirekt steuerbar.Unter direkt steuerbar wird beispielsweise die Steuerung über Hebel oder eine Fernbedienungverstanden. Indirekt steuerbar beinhaltet die Programmierung.Klassiﬁzierung von RoboternZur Klassiﬁzierung von Robotern übernehmen wir die drei Kategorien aus [BC08] mit derErgänzung um Roboter als soziale Technik und deﬁnieren diese wie folgt:Roboter als Lebewesen:In diese Kategorie fallen Vorstellungen über Roboter, die diese alslebendig ansehen und darüber hinaus neben eventuellen weiteren biologischen Merkmalen,Merkmale aus der Struktur-Perspektive aufweisen. Aus psychologischer Perspektive gibt esMerkmale im Bereich der Emotionalität, der Kognition sowie dem intentionalen Verhalten.Diese Merkmale können zusätzlich auch aus der Funktions-Perspektive auftauchen.Roboter als Maschine:In diese Kategorie fallen Vorstellungen über Roboter, die dieseEin Modell zur Analyse von Vorstellungen über Roboter und ihrer Funktionsweise 115ii “proceedings” — 2017/9/17 — 20:19 — page 116 — #116 ii i ii i8 Kathrin Müller und Carsten Schultenicht als lebendig ansehen, also keine biologischen Merkmale aus der Struktur-Perspektiveaufweisen. Aus Struktursowie technologischer Perspektive weisen Vorstellungen dieserKategorie mechanische bzw. technische Merkmale auf. Diese sind z.B. aus Struktur-Perspektive technische Bauteile. Darüber hinaus weisen Vorstellungen dieser Kategorie ausFunktions-Perspektive Merkmale im Bereich steuerbar auf.Roboter als intelligente Technik:Vorstellungen über Roboter als intelligente Technik weiseneine Abwesenheit von biologischen und emotionalen Merkmalen in allen Perspektiven auf.Im Prinzip erweitern Vorstellungen dieser Kategorie die Kategorie Roboter als Maschineum kognitive Merkmale aus technologischer und Funktions-Perspektive.Roboter als soziale Technik:Vorstellungen dieser Kategorie weisen im Unterschied zuRobotern als intelligente Technik Merkmale aus dem Bereich der Emotionalität ausFunktionsund technologischer Perspektive auf. Kognitive Merkmale sind ggf. gar nichtoder geringer vorhanden.Abbildung2zeigt die Einordnung der einzelnen Kategorien in das Modell. Roboter als LebewesenRoboter als Maschine Roboter als intelligente TechnikRoboter als soziale TechnikPerspektivetechnologischpsychologischStrukturFunktionMerkmalebiologischmechanisch/technischemotionalkognitiv/intellektuellintentionales	Verhaltensteuerbar	(manuell,	automatisch)PerspektivetechnologischpsychologischStrukturFunktionMerkmalebiologischmechanisch/technischemotionalkognitiv/intellektuellintentionales	Verhaltensteuerbar	(manuell,	automatisch)PerspektivetechnologischpsychologischStrukturFunktionMerkmalebiologischmechanisch/technischemotionalkognitiv/intellektuellintentionales	Verhaltensteuerbar	(manuell,	automatisch)PerspektivetechnologischpsychologischStrukturFunktionMerkmalebiologischmechanisch/technischemotionalkognitiv/intellektuellintentionales	Verhaltensteuerbar	(manuell,	automatisch)Abb. 2: Klassiﬁzierung von Robotervorstellungen anhand des Modells3.1 AnwendungsfelderDie Anwendungsfelder für das hier vorgestellte Modell lassen sich in normative, deskriptiveund konstruktive Aspekte unterteilen. Der deskriptive Aspekt umfasst dabei die Katego-risierung der Vorstellungen und die Einordnung der einzelnen Vorstellungsbestandteilein das Modell. Dabei ist die Form der Vorstellungserhebung z.B. Interview, Text, Bildetc. nicht von Relevanz. Die erhobenen Vorstellungen können zunächst z.B. mit einerqualitativen Inhaltsanalyse ausgewertet werden. Als Kategorien dienen hierbei die einzelnenPerspektiven und Merkmale des Modells (vgl. Abb.1, Tabelle links). Die Ergebnisse könnendann anhand der vorgegebenen Klassiﬁzierung eingeordnet werden (vgl. Abb.1, Auﬂistungrechts). Auf diese Art und Weise können sowohl Vorstellungen von einzelnen Individuenals auch von Gruppen analysiert und beurteilt werden. Die so gesammelten Vorstellungenwerden sichtbar und können damit in Lernprozessen berücksichtigt werden.116 Kathrin Müller, Carsten Schulteii “proceedings” — 2017/9/17 — 20:19 — page 117 — #117 ii i ii iVorstellungen zu Robotern 9In einem weiteren Anwendungsfeld (normativer Aspekt) kann untersucht werden, inwieweitdie vorhandenen Vorstellungen ausreichend bzw. hilfreich sind. Hierzu wird zunächstfestgelegt, wie Roboter zu verstehen sein sollten. Angemessene Vorstellungen sind unsererMeinung nach eine Verknüpfung der KategorienRoboter als intelligente TechnikundRobo-ter als soziale Technik(vgl. Abb.2). O en ist, inwiefern die psychologische Perspektivedabei weiterhin berücksichtigt werden soll und ob die technologische Perspektive feinerunterteilt werden sollte [Ac91;RM91].Im dritten Anwendungsfeld, dem konstruktiven Aspekt, können basierend auf bekanntenSchülervorstellungen und normativen Modellen Methoden entwickelt und evaluiert werden,die zur Erweiterung und ggf. Veränderung der vorhandenen Vorstellungen beitragen. Wirkönnen mit unserem Modell die vorunterrichtlichen Vorstellungen wie folgt beschreiben:Sie sind vermutlich im BereichRoboter als Lebewesen, bzw.Roboter als Maschinean-gesiedelt (Abb.2oben). Aus normativer Perspektive angemessene Vorstellungen wärenaus den BereichenRoboter als intelligente, bzw.soziale Technik(Abb.2unten). An derGegenüberstellung mit dem Modell kann nun direkt abgelesen werden, auf welchen Vor-stellungen im Unterricht aufgebaut werden kann. So können Konzepte und Werkzeugeentstehen, die es ermöglichen Vorstellungen von Lernenden zu diagnostizieren und sinnvollzu verändern, bzw. anzureichern. Für die Erforschung von didaktischen Konzepten undLernprozessen kann das Modell an unterschiedlichen Stellen als Werkzeug zur Einordnungder Vorstellungen eingesetzt werden.4 Zusammenfassung und AusblickDieser Artikel stellt neben einem Überblick zum Stand der Forschung zu Robotervorstellun-gen ein Modell vor, welches ein Werkzeug zur Analyse und Einordnung von Vorstellungenüber Roboter und ihrer Funktionsweise darstellt. Dieses theoretisch erstellte Werkzeug wirdin einem nächsten Schritt in der Praxis eingesetzt, um Vorstellungen von Grundschulkindernzu Robotern zu analysieren und einzuordnen. Dabei wird es empirisch evaluiert und ggf.um fehlende Komponenten ergänzt. Eine interessante Fragestellung an dieser Stelle ist, obdie Perspektivetechnologischim Anwendungskontext ausreichend ist, oder, ob sie wie bei[RM91] in mechanische und informatische Perspektive unterteilt werden sollte.Durch die Einordnung von Vorstellungen in das Modell ist es möglich, Hypothesen zurBeeinﬂussung der Vorstellungen zu generieren. Hier sind unterschiedliche Wege vorstellbar,wie z.B. mit Konzepterweiterung und Konzeptwechsel. Darüber hinaus ist es interessant zuerforschen in wie weit in der KategorieRoboter als intelligente TechnikundRoboter alssoziale Technikpsychologische Vorstellungen vorhanden sein sollten, um ein umfassendesVerständnis zu Robotern und ihrer Funktionalität zu besitzen. Dies ist gerade dann relevant,wenn es darum geht, Roboter in unterschiedlichen Rollen wahrnehmen zu können undihnen auch unterschiedliche Rollen zuweisen zu können. Ob dies ohne eine psychologischePerspektive überhaupt möglich, oder wir unsere KategorienRoboter als intelligente Technikundsoziale Technikum Merkmale aus psychologischer Perspektive ergänzen müssen, isthier eine spannende Frage.Ein Modell zur Analyse von Vorstellungen über Roboter und ihrer Funktionsweise 117ii “proceedings” — 2017/9/17 — 20:19 — page 118 — #118 ii i ii i10 Kathrin Müller und Carsten SchulteWie bereits in der Einleitung erwähnt, dienen Roboter hier als exemplarisches Beispielfür digitale Artefakte. Es ist daher interessant zu untersuchen, welche Veränderungen amModell für andere digitale Artefakte notwendig sind.Literatur[Ac91]Ackermann, E.: The agency model of transactions: Toward an understandingof children’s theory of control. Psychologie genetique et sciences cognitives.Geneve: Fondation Archives Jean Piaget/, 1991.[BC08]Bernstein, D.; Crowley, K.: Searching for Signs of Intelligent Life: An Inves-tigation of Young Children’s Beliefs About Robot Intelligence. Journal of theLearning Sciences 17/2, S. 225–247, 2008.[Be11]Beran, T. N.; Ramirez-Serrano, A.; Kuzyk, R.; Fior, M.; Nugent, S.: Understandinghow children understand robots: Perceived animism in child–robot interaction.International Journal of Human-Computer Studies 69/7–8, S. 539–550, 2011.[DS96]van Duuren, M.; Scaife, M.: “Because a robot’s brain hasn’t got a brain, it justcontrols itself” — Children’s attributions of brain related behaviour to intelligentartefacts. European Journal of Psychology of Education 11/4, S. 365, 1996.[LM08]Levy, S. T.; Mioduser, D.: Does it “want” or “was it programmed to...”? Kinder-garten children’s explanations of an autonomous robot’s adaptive functioning.International Journal of Technology and Design Education 18/4, S. 337–359,2008.[Ra11]Rabel, M.: Grundvorstellungen in der Informatik. In (Weigend, M.; Thomas, M.;Otte, F., Hrsg.): Informatik mit Kopf, Herz und Hand. Praxisbeiträge zur INFOS2011. ZfL-Verlag, Münster, S. 61–70, Sep. 2011,    : 978-3-86877-009-4.[RM91]Resnick, M.; Martin, F.: Children and artiﬁcial life. In (Hartel, I.; Papert, S.,Hrsg.): Constructionism. Ablex, S. 41–71, 1991.[RP16]Rücker, M. T.; Pinkwart, N.: Review and Discussion of Children’s Conceptionsof Computers. Journal of Science Education and Technology 25/2, S. 274–283,2016.[Sc09]Schulte, C.: Dualitätsrekonstruktion Als Hilfsmittel Zur Entwicklung Und Pla-nung von Informatikunterricht. In (Koerber, B., Hrsg.): Zukunft Braucht Herkunft.INFOS’09. S. 355–366, 2009,    : 978-3-88579-250-5.[Tu05]Turkle, S.: The Second Self: Computers and the Human Spirit (MIT Press). TheMIT Press, 2005.[Wi16]Wikipedia: Clarkesche Gesetze. In: Wikipedia. Page Version ID: 158717013,13. Okt. 2016,   :https://de.wikipedia.org/w/index.php?title=Clarkesche_Gesetze&oldid=158717013, Stand: 19. 01. 2017.118 Kathrin Müller, Carsten Schulteii “proceedings” — 2017/9/17 — 20:19 — page 119 — #119 ii i ii iIra Diethelm (Hrsg.):  Informatische Bildung zum Verstehen und Gestalten ,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017     1   Schülervorstellungen im Zusammenhang mit  Smartphones    Torsten Brinda1 und Friederike Braun2  Abstract:  Smartphones haben einen rasanten Aufstieg hinter sich. Von den ersten erschwinglichen  Mobiltelefonen bis zu modernen High -Tech -Geräten  sind sie nicht nur komplexer, sondern auch  immer beliebter geworden. Im Jahr 2016 besaßen  fast 100% aller Jugendl ichen in Deutschland ein  eigenes Smartphone und benutz ten es ständig. Smartphone s weisen für Lernende in Schulen einen  hohen Lebensweltbezug auf  und eignen sich d aher für eine unterrichtl iche Betrachtung  als Informatiksystem  auch  im Hinblick auf dessen Wirkung auf Individuum und Gesellschaft, weiterhin zur  Anzeige schulbezogener Medieninhalte . Für eine didaktische Aufbe reitung des Gegenstandes  „Smartphone “ für d en Unterricht  mangelt es jedoch unter anderem noch an wissenschaftlichen  Arbeiten zu diesbezüglichen Schülervorstell ungen. Deshalb  wurde eine explorative Studie zur  Erfassung von Schülervorstellungen im Zusammenhang mit  Smartphones durchgeführt . Aus acht  halbstrukturierten Interviews wurde ein erster Überblick über bestehende Vorstellungen  zu Teilaspekten von Smartphones gewonnen .  Keywords: Schülervorstellungen, Smartphone , halbstrukturierte Interviews, explorative Studie .   1 Einleitung    In unserer modernen Welt  sind wir in beständig zunehmenden Umfang von verschied enen Informatiksystemen umgegeben. Informatische Bildung in Schulen soll sich mit den  Prinzipien  und G estaltungsgrundlagen solcher Systeme  auseinanderse tzen und die komplexen Wirkprozesse auf Individuu m und Gesellschaft in den Blick nehmen  – auch  unter  Einbeziehung von Informatiksysteme n aus der Lebenswelt der Schülerinnen und Schüler. Schon bei einer oberflächlichen Suche sticht dabei ein System  aus der Menge he raus:  das Smartphone . Laut der JIM -Studie  2016 (vgl. mpfs.de)  besitzen 95% der Jugendlichen im Alter zwischen 12 und 19 Jahren im Jahr 2016 ein Smartphone mit Touchscreen  und Internetz ugang . Die überwiegende Mehrheit benutzt das Gerät  täglich , sei es  zum  Kommunizieren, zum Recherch ieren  im Intern et, zum Hören von Musik  oder zum  Schauen von V ideos. Für eine unterrich tliche Aufbereitung  nach  dem Prinzip der didaktischen Rekonstruktion [Di11]  mangelt es jedoch gegenwärtig noch an empirisch gesicherten Erkenntnissen zu Alltagsvorstellungen, die Schül erinnen und Schüler durch  ihren Umgang mit dem Gerät entwickeln und in den Unterricht mitbringen . Die empirische Exploration solcher  Vorstellungen war daher Gegenstand einer Interviewst udie  [Br16] , von der in dieser Arbeit berichtet wird.                                                                 1 Universität Duisburg -Essen, Didaktik der Informatik , Schützenbahn 70 , 45127  Essen , torsten.brinda@u nidue.de   2 Universität Duisburg -Essen, Institut für Informatik und Wirtschaftsinformatik , Schützenbahn 70 , 45127   Essen , friederike.braun@stud.uni -due.de  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 119ii “proceedings” — 2017/9/17 — 20:19 — page 120 — #120 ii i ii i  2   Torsten Brinda  und Friederike Braun     2 Verwandte Arbeite n   Es wird bereits seit einiger Zeit  in den Blick genommen, die Attraktivität von Smartph ones unter Jugendlichen für die informatische Bildung in Schulen nutzbar zu machen. So  liegen Konzepte zur Implementierung  von Apps im Unterricht vor (z. B.  [Br14] ), weiterhin wurde damit experimentiert, Smartphones als alleinige Informati ksysteme im  Informatikunterricht einzusetzen  (z. B. [Mü11] ). Darin zeigte sich , dass das möglich ist  und das s damit einige didaktische Vorteile verbunden sein können, wie z.  B. eine ef fektivere Nutzung der Unterrichtszeit und ein geschlechtergerechterer Zugang zum verwendeten Inform atiksystem.  Schülerorientierter Unterricht , der von bestehenden Schülervorstellungen ausgeht, kann bspw. nach dem Modell der didaktischen Rekonstruktion gestaltet werden, das Diethelm et al. in die Informatik übertrugen [Di11]. Ferner erweiterten sie es um gesellschaftliche Ansprüche an das zugeordnete Schulfach , die Auswahl  von informatischen Phänomenen und die Einbeziehung von Lehrerperspe ktiven . In diesen d rei Bereichen sowie den  Schülervorstellungen im Inform atikbereich  bestehe noch  Forschungsbedarf. Es existieren bisher  eine Reihe von Arbeiten zu Schülervorstellungen,  die einzelne Teilaspekte des vernetzten Informatiksystems Smartphone berühren , bspw.   wurd en Schülervo rstellungen zum Aufbau und zur Funktionsweise des  Internet s in einer  Reihe von Arbeiten erfasst  (z. B.  [Pa05],  [DWZ12 ]). Inform atikbezogene Arbeiten, die  sich explizit auf Schülervorstellungen im Zusamme nhang von Smartphones beziehen,  wurden in  einer ausführlichen Literaturreche rche der Autoren bislang nicht gefu nden.  3 Forschungsmethodik   Zur Datenerhebung fiel die Wahl auf leitfadengestützte Interviews.  Für deren Hauptphase wurden Fragen zu Kategorien entwickelt, die sich an von Desktop -Computern  abgrenzenden Aspekten von Smartphones orientierten (K1 bis K4, vgl. Tab. 1).  K1: Drahtl ose Verbindungen von Smar tphones   K1.1: Netzwerkstru ktur von Mobilfunknetzen   K1.2: Adressierung in Mobi lfunknetzen  K1.3: Vom Smar tphone genutztes  Übertragung smedium   K1.4 : Handover bei Smartphones   K1.5: Internetprot okoll als Grundlage netzb asierter Dienste  K2: Apps auf Smartphones   K2.1: Definition  einer App   K2.2:Program maufruf auf einem  Smartphone   K2.3: Herkunft von  Apps   K2.4: Installat ion von Apps  K3: Steu erung von Smartph ones mit  Hilfe des Touc hscreens   K3.1: Bedienel emente  eines Smartphone   K3.2: Touchscreen  eines Smartphones   K3.3: Programma rchitektur eines Smartpho-nes K4: Kompa kte Bauart von  Smartphones   K4.1: In Smar tphones vertretene kompakte  Hardware   K4.2: Techn ische Grenzen  von Smartph o-nes Tab. 1: Deduktiv entwickeltes Kategoriensystem für Schülervorstellungen zu Smartphones   Im Herbst 2016 wurden zwölf Inte rviews mit Lernenden der Jgst. 9 und 11  (jeweils zur  Hälfte mit und ohne Informatikunterricht) an einem Gymnas ium im Ruhrgebiet in NRW  durchgeführt und audioaufgezeichnet , davon acht für die Auswertung ausgewählt und  mittels qualitativer Inhaltsanalyse nach Mayring ausgewertet.   120 Torsten Brinda, Friederike Braunii “proceedings” — 2017/9/17 — 20:19 — page 121 — #121 ii i ii i  Schülervorstellungen im Zusammenhang  mit Smartphones     3   4 Ergebnisse der Studie    Im Bereich drahtlose r Netzverbindungen  (K1) waren sich a lle Teilnehmenden bewusst, dass ihre Smartphones an ein weitläufiges Netzwerk angeschlossen sind  (K1.1) .  Vier Schüler stellten sich vor, dass die Verbindung über Masten  erfolge , drei über Server  und drei weitere  über Satellit . Dass zur Adre ssierung von Daten eine  Nummer verwendet  werde , äußerten fünf von acht Teilnehmenden  (K1.2). Ein Teilnehmer sagte explizit,  dass die Nummer eindeutig sei , bei anderen ergab sich dies implizit aus den gewählten  Beispielen  (z. B. Telefonnummer) , was dem Konzept der MAC -Adressen  nahekommt .  Eine übergreifende Vorstellung, welches Übertragungsmedium ein Smartph one nutzt ,  wurde  nicht gefunden  (K1.3). Funk wurde  auf Anfrage nicht erwogen, jedoch  von einem  Schüler später  im Kontext eines Funkloches beilä ufig erwähnt. Vier von acht Schüle rn  nannten  lediglich „Signale “ als Medium . Alle Teilnehmenden  waren sich  bewusst, dass  die Güte einer Netzwerkverbindung schwanken kann (K1.4). Die Hälfte meint e, dass  unterschiedliche Dienste auch unterschiedliche Anford erungen an Netzwerkverbindungen stellen (K1.5) . Drei Schüler sagten, dass die verschiedenen Dienste dasselbe Netz  benutzen. Ein e Schüler in schlus sfolgert e, dass „alles über das Internet funktioniere “  [Br16, S. 134] , weil ihre Messenger -Apps nur mit einer aktiven Internetverbindung  nutzbar s eien. Unter den Vorstellungen  zu Apps  (K2) sticht vor allem heraus, dass s echs  der Teilnehmenden  Programme auf dem Smartphone  für eine  bestimmte Aufgabe als  Apps betrachten  (K2.1) . Sie defi nieren damit Anwendungsprogramme, auch wenn sie  die Begriffe „Anwen dung “ und „Application “ deutlich seltener  nutzen.  Fünf Schüler  betrachten alles, was aus einem App Store heruntergeladen werde , als eine App. Fünf von  acht Schülern stellten sich vor, dass das Smartphone oder etwas darin  beim Aufruf einer  App arbe ite (K2.2) . Zwei präzisier ten, dass Signale versen det würden . Bezüglich der in  einer App enthaltenen Daten fanden sich bei zwei Schülern  detai lliertere Vorstellungen :  Einer  stellt e sich vor, dass beim Aufruf einer App ein „Layout “ aufgerufen werde , das  dann mit aus dem Internet geladenen Daten aufg efüllt werde . Er verglich  diese „App Basis“ mit dem in Java verwendetem Konzept  des Basisko nstruktors für Klassen. Eine  Schülerin gab an , dass Informat ionen , welche entweder  vom Entwickler der App einprogrammiert oder bei v orherigen Aufrufen der App gespe ichert worden seien, geladen  werden. Alle Schüler hatten  schon einmal eine App aus einem Store geladen  (K2.3) ,  doch nur  eine Sch ülerin gab auch die Möglichkeit an, dass man selbst eine App entwickeln könn e. Für die Hälfte de r Teilnehmenden  war eine App nach dem Download direkt  nutzbar , weitere Installationsschritte wurden nicht erwogen  (K2.4) . Drei Befragte gaben   an, dass Install ationsschritte vor der Nutzbarkeit erforderlich seien . Hinsichtlich der  Bedienung per Touchscreen  (K3) beschränkten sich die Antworten  in K3.1 fast ausschließlich darauf, welche Bedienelemente bei einem Smartphone gegeben seien . Fünf  der Teilnehmenden  benannten  den Touc hscreen als Peri pheriegerät, das Berührungen  wahrnehme  und entsprechend Signale an e ine zentrale Recheneinheit  sende  (K3.2) .  Sechs der Jugendl ichen stellen sich weiterhin vor, dass das Smartphone  nach vorprogrammierten Mustern auf Eingaben reagier e (K3.3) . Die kompakte  Bauart (K4)  erklärte sich die Hälfte der Lernenden  damit , dass die in ihnen enthaltenen Daten wenig bzw.  keinen Platz wegn ähmen (K4.1) . Zwei konkretisierten , dass eigentlich keine Daten ge-Schülervorstellungen im Zusammenhang mit Smartphones 121ii “proceedings” — 2017/9/17 — 20:19 — page 122 — #122 ii i ii i  4   Torsten Brinda  und Friederike Braun     speichert werden  müssten , da diese  auf externen Speichern , wie Se rvern oder im Himmel  fliegenden Clouds , hinterlegt  würden . Zwei weitere ä ußerten, dass die kleinen internen  Speicher in der Lage seien viele Daten aufzunehmen . Ein Schüler äußerte zudem , Daten  würden keinen Platz we gnehmen, weil sie nur aus Bits und Bytes bestünden  und somit  nicht physisch präsent seien . Im Vergleich zu Desktop -Computern schätzten fünf Teilnehmende die Leistungsfähigkeit von Smartphones geringer ein  (K4.2)  mit Verweis auf   den geringeren Spe icherplatz, langsamere Prozessoren bzw.  schlechtere Grafikkarten.  Außerdem könnten  weniger Peripherieger äte angeschlossen we rden.  5 Fazit  und Ausblick   Im Rahmen der Studie konnten eine Reihe von Schülervorstellungen zu einzelnen A spekten von Smartphones ermittelt werden.  Dabei  wurden sowohl Vorstellungen e rfasst,  die von einer Mehrzahl der Jugendlichen vertreten wurden, als auch solche , die nur von  einzelnen Teilnehmenden  genannt wurden, dafür aber deutlich d etaillierter ausfielen.   Nachfolgend  ist es nun erforderlich , die Erfassung die sbezüglicher Vorstellungen in  weiteren Arbeiten zu vertiefen und zu prüfen, inwieweit sich diese auch bei anderen  Schülergruppen finden lassen. Weiterhin sollte  dabei informatikspezifisches Vorwissen  genauer ermittelt und kontrolliert werden, um den Einfluss von Informatikunterricht auf  die Schülervorstellungen ermitteln zu können . Offen ist außerdem die Erfassung diesbezüglicher  Lehrervorstellungen, wie in [Di11] angeregt . Schlussendlich sollten Empfehlungen für den Informatikunterricht abgeleitet werden.   Literaturverzeichnis   [Br14]  Brichzin, P.: Überwachung von Smartphone -Kosten. Ein Beispiel für die  Aufgabe nentwicklung mithilfe von Leitfragen. LOG IN 176/177, 82 -87 (2014).   [Br16]  Braun, F.: Schülervorstellungen von Smartphones. Schr.  Hausarbeit im Rahmen der  Ersten Staatspr.  f. d. Lehramt an Gymn. /Gesamtschulen, Univ.  Duisburg -Essen, 2016.   [Di11]  Diethelm, I.; Dörge, C.; Mesaros, A.; Dünnebier, M.: Die Didaktische Reduktion für  den Informatikunterricht. In (Thomas, M. Hrsg.): Informatik in Bildung und Beruf. 14.  GI-Fachtagung „Informatik und Schule – INFOS 2011”. Köllen, Bonn, S. 77 -86, 2011.   [DWZ12]  Diethelm, I.; Wilken, H.; Zumbrägel, S.: An investigation of secondary school st udents’ conceptions on how the Internet works. In (ACM ed.): Proc.  of the 12th Koli  Calling Int. Conf.  on Computing Educ.  Research. ACM, New York, pp. 67 -73, 2012.   [Mü11]  Mülle r, D.: Fachdidaktisch begründete Auswahl von Informatiksystemen für den  Unterrichtseinsatz. In (Thomas, M. Hrsg.): Informatik in Bildung und Beruf. 14. GI Fachtagung „Informatik und Schule – INFOS 2011”. Köllen, Bonn, S. 167 -176, 2011.   [Pa05]  Papastergiou,  M.: Students’ Mental Models of the Internet and Their Didactical E xploitation in Informatics Education. Educ. a.  Inform.  Techn.  (10) 4, S. 341 -360, 2005.  122 Torsten Brinda, Friederike Braunii “proceedings” — 2017/9/17 — 20:19 — page 123 — #123 ii i ii iIra Diethelm (Hrsg.): Infos 2017 Informatische Bildung zum Verstehen und Gestalten, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 1 Das Konzept Nature of Computer Science Yannick Schneider1, Andreas Mühling2 Abstract: Diese Arbeit präsentiert die Ergebnisse einer Delphi-Befragung, die unter Experten einen Konsens über das „Bild“, also die wissenschaftlichen Ziele und Methoden der Informatik, ermitteln soll. Die Experten wurden sowohl aus dem akademischen als auch industriellen Umfeld akquiriert. Ziel dieser und folgender Untersuchungen ist es, das Konstrukt „Nature of Computer Science“ , d.h. angemessene V orstellungen von Informatik, für Forschende und Lehrende in der Informatikdidaktik zugänglich zu machen. Keywords: Informatikdidaktik; Nature of Computer Science; Informatikbild; Schülerperspektive 1 Einleitung uns Stand der Forschung Informatikunterricht kann viele Ziele verfolgen und auf viele Arten ausgestaltet sein. Während aktuell die Diskussion um „digitale Bildung“ der Informatik eine eher unterstützende Rolle im Kanon mit anderen Fächern zuweist, gibt es nach wie vor auch den Fachunterricht mit klarem Bezug zur Wissenschaft der Informatik. Ein Ziel sollte in einem solchen Unterrichtsszenario natürlich auch sein, diese Bezugswissenschaft kennenzulernen und ein adäquates Verständnis der Denkweisen und Methoden von Informatikern auszubilden. Befragungen mit Schülern und Studienanfängern zeigen, dass viele von ihnen nur unzureichende V orstellungen von Informatik haben [He13, MW06]. Das mag einerseits an einem fehlenden Kontakt zu Informatikunterricht selbst liegen, aber auch an der uneinheitlichen Ausgestaltung des Fachunterrichts sowie an einem fehlenden Konsens unter den Experten hinsichtlich dem Bild der Wissenschaft Informatik [Ha93]. In diesem Artikel wird eine Erhebung nach der Delphi-Methode vorgestellt, die versucht, normativ unter Experten einen Konsens darüber zu ermitteln, was die Informatik als Wissenschaft auszeichnet. In den Naturwissenschaften und der Mathematik werden derartige Forschungen seit Jahrzehnten unter den Schlagwörtern „Nature of Science“ und „Nature of Mathematics“ durchgeführt. Einen umfassenden Überblick über die bisherigen Arbeiten in den Naturwissenschaften und der Mathematik liefern [Le07, ODV02]. Im Bereich Informatik existieren bislang philosophische Arbeiten [Ha93] und einige deskriptive Studien aus dem amerikanischen Raum, deren Fokus auf den Einstellungen und dem Selbstkonzept von Schülern und Studierenden liegt [EDS12],[Wi03]. Im Rahmen des Projekts „Weltbilder der Informatik“ wurde eine qualitative Erhebung unter Studierenden durchgeführt [GI13]. „[D]as Bild der Informatik“ ist ein Bestandteil 1Christian-Albrechts-Universität zu Kiel, ysc@informatik.uni-kiel.de 2Christian-Albrechts-Universität zu Kiel, Arbeitsgruppe Didaktik der Informatik, am@informatik.uni-kiel.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 123ii “proceedings” — 2017/9/17 — 20:19 — page 124 — #124 ii i ii idieses Weltbildes. Teilweise wurden den Studierenden in der Weltbilder-Studie ähnliche Fragen gestellt wie den Teilnehmern in dieser Befragung, es geht im Gegensatz zu der hier präsentierten Studie allerdings nicht um einen Konsens unter Experten sondern um „die subjektiven bzw. kollektiven (alltagsweltlichen) Einschätzungen der Studierenden“. Eine vergleichbare Befragung [MW06] führten Maaß und Wiesner mit dem Fokus auf das Studienfach Informatik durch. In dieselbe Richtung gehen auch einige Studien amerikanischer Forscher, beispielsweise [He13]. 2 Konzeption der Studie Es wurde eine Befragung nach der Delphi-Methode organisiert. Hinweise zur Methodik ﬁnden sich u.a. in [Hä02]. Die Teilnehmer wurden sowohl aus dem akademischen Umfeld, über die GI-Fachgruppe „Didaktik der Informatik“, als auch aus der Industrie, über den lokalen Dachverband „Digitale Wirtschaft Schleswig-Holstein“ (DiWiSH), akquiriert um ein möglichst heterogenes Expertenpanel zusammenzustellen. Die Ergebnisse wurden qualitativ nach der Methode der Grounded Theory kategorisiert. Die Eingangsfragen waren: „Wie deﬁnieren Sie für sich den Begriff ,Informatik‘?“ und „Halten Sie ,computer science‘ für eine angemessene Übersetzung von ,Informatik‘? Falls nicht: Was stört Sie daran?“ Ziel dieser Fragen waren das Sammeln von persönlichen Bildern und eine Bewertung des englischen Begriffs „computer science“, der in der InformatikGemeinschaft seit jeher umstritten ist ([Co92], [Ja93]). Die Methoden einer Wissenschaft und ihr Verhältnis zu anderen Wissenschaften sind ein elementarer Bestandteil ihres Selbstverständnisses und somit ihrer Natur [Ha93]. Die Experten wurden nach einzigarten/typischen Methoden der Informatik befragt und gebeten, die Informatik in die vier Wissenschaftskategorien (nach [Ba08]) Natur-, Struktur-, Geistesund Ingenieurswissenschaften einzuordnen (5-stuﬁge Likert Skala). Die zentralen fünf Fragen der ersten Runde waren Deﬁnitionen von oder Aussagen über Informatik, zu denen die Teilnehmer Stellung beziehen sollten. Als Quellen wurden die großen Dachverbände GI3, ACM [De89] und CSTA [CS04] sowie die Studiengangsbeschreibung der RWTH Aachen4und die Deﬁnition eines klassischen Informatiklehrbuches [Br98] verwendet. Die beiden letzten Fragen befassen sich mit „häuﬁgen Missverständnis[sen] in Bezug zur Informatik (von Schülern, Studierenden, Auszubildenden, Kunden oder Laien)“ und Aspekten, in denen Informatik häuﬁg unterschätzt wird. 3Was ist Informatik? Unser Positionspapier. https://www.gi.de/ﬁleadmin/redaktion/Download/was-istinformatik-lang.pdf, 2006 4Course of Study Description: Computer Science B.Sc. http:/ www.rwthaachen.de/cms/root/Studium/V or-demStudium/Studiengaenge/Liste-Aktuelle-Studiengaenge/Studiengangbeschreibung/bnzs/Informatik-B-Sc-/124 Yannick Schneider, Andreas Mühlingii “proceedings” — 2017/9/17 — 20:19 — page 125 — #125 ii i ii iIra Diethelm (Hrsg.): Infos 2017 Informatische Bildung zum Verstehen und Gestalten, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 3 3 Ergebnisse und Ausblick An der ersten Runde der Befragung nahmen 14 Teilnehmer teil. Sechs davon kamen aus dem akademischen, acht aus dem industriellen Umfeld. In der zweiten Runde war das Panel auf acht Teilnehmer, je vier mit akademischen und industriellem Hintergrund, geschrumpft. Daher und aufgrund der Tatsache, dass unter den verbleibenden Teilnehmern weitgehende Übereinstimmung herrschte, wurde auf eine dritte Runde verzichtet. Konsens herrschte über den Begriff „computer science“, den fast alle (13 von 14) Teilnehmer als unangemessen bewerten. Große Einigkeit gibt es außerdem hinsichtlich der Eingangsfrage. Neun der 14 Teilnehmer deﬁnierten Informatik für sich selbst sinngemäß als „Wissenschaft der automatischen Informationsverarbeitung“. Die dritte Frage, nach den typischen oder einzigartigen Methoden der Informatik, ließ sich nicht zu einem Konsens führen. Die meistgenannten typischen, aber nicht notwendigerweise einzigartigen, Methoden waren: Modellierung (6 ⇥), Verwendung digitaler Daten und Implementierung (4 ⇥), algorithmisches Problemlösen, Abstraktion, Konstruktion und Dekonstruktion sowie die Verwendung einer universellen Maschine (je 2 ⇥). Die Einordnung in die Wissenschaftskategorien liefert ein gemischtes Bild. Die größte Einigkeit besteht in der Ablehnung bei Geisteswissenschaft und Zustimmung bei Ingenieurswissenschaft. Strukturwissenschaft bewegt sich um die Mitte der Likert Skala, während Naturwissenschaft eine eher bimodale Verteilung zeigt (6 mal Ablehnung, 5 mal Zustimmung). Die beiden Teilnehmer, die hier „eindeutig nein“ gewählt hatten, stimmten in ihren Begründungen überein: die Informatik beschäftige sich nicht mit natürlichen, sondern mit menschengemachten Phänomenen. Der Teilnehmer, der „eindeutig ja“ gewählt hatte ist der Ansicht, dass die Gesellschaft inzwischen so sehr von Informatiksystemen durchdrungen ist, dass diese quasi-natürliche Phänomene bildeten und auch als solche erforscht würden. Die Auswertung der Kommentare zu den gegebenen Deﬁnitionen drehte sich hauptsächlich um eine Kritik an der Überbzw. Unterrepräsentation von Themen. Insgesamt fünf Teilnehmer monierten, die Deﬁnitionen von ACM und CSTA seien zu stark auf Algorithmik und Automatisierung fokussiert. Da diese beiden Deﬁnitionen als einzige dem englischsprachigen Kulturkreis entstammen, könnte auch dies wieder ein Indiz darauf sein, dass mit dem Begriff „computer science“ eine andere Sichtweise auf die Disziplin Informatik verknüpft ist. Fünf Teilnehmer rekurrierten auf den Themenkomplex „Informatik und Gesellschaft“, es wurde sowohl an den Deﬁnitionen von Broy und der GI dessen Fehlen bemängelt als auch an den Deﬁnitionen von CSTA und RWTH deren Nennung honoriert. Das Verhältnis von Informatik und Programmierung – in V orarbeiten teilweise gleichgesetzt [Wi03] – erweist sich als nicht eindeutig: das Panel erkennt zwar das Implementieren oder Programmieren als typische Methode an, sieben Teilnehmer gaben aber als häuﬁgstes Missverständnis die Gleichsetzung von Informatik und Programmierung an. Zusammengefasst kann man als Konsens des Panels festhalten: Die Informatik begreift sich selbst als Bindeglied zwischen Ingenieursund Strukturwissenschaften. Sie befasst sich mit dem Untersuchungsobjekt „Information“ mit den eng damit verknüpften Metho-Das Konzept Nature of Computer Science 125ii “proceedings” — 2017/9/17 — 20:19 — page 126 — #126 ii i ii iden der Abstraktion und Modellierung. Eine Verzahnung von Forschung und Entwicklung, verknüpft mit der Methode des Implementierens, ist typisch. Zu den Aufgaben eines Informatikers gehört auch die Beschäftigung mit den sozialen Auswirkungen und der Interaktion von Mensch und Computer. Literaturverzeichnis [Ba08] Balzert, Helmut: Wissenschaftliches Arbeiten. Herdecke, 2008. [Br98] Broy, Manfred: Informatik. Eine grundlegende Einführung. Berlin, 1998. [Co92] Coy, Wolfgang: Für eine Theorie der Informatik! In (Coy, Wolfgang et al., Hrsg.): Sichtweisen der Informatik. Braunschweig, 1992. [CS04] CSTA, Computer Science Teachers Association: Model Curriculum for K-12 Computer Science. 2004. [De89] Denning, Peter J. et al.: Computing as a discipline. Communications of the ACM, 32(1):9–23, 1989. [EDS12] Elliott Tew, Allison; Dorn, Brian; Schneider, Oliver: Toward a Validated Computing Attitudes Survey. In: Proceedings of the Ninth Annual International Conference on International Computing Education Research. ICER ’12, New York, S. 135–142, 2012. [GI13] GI, Gesellschaft für Informatik, Hrsg. Sonderheft: Weltbilder in der Informatik: Sichtweisen auf Profession, Studium, Genderaspekte und Verantwortung, Jgg. 36(3) in InformatikSpektrum. 2013. [Ha93] Hartmanis, Juris: Some observations about the nature of computer science. Lecture Notes in Computer Science, 761:1–12, 1993. [Hä02] Häder, Michael: Delphi-Befragungen. Ein Arbeitsbuch. Wiesbaden, 2002. [He13] Hewner, Michael: Undergraduate Conceptions of the Field of Computer Science. In (Simon, Beth; Clear, Alison; Cutts, Quintin I., Hrsg.): Proceedings of the Ninth Annual International ACM Conference on International Computing Education Research, La Jolla, USA, 12–14 August 2013. New York, S. 107–114, 2013. [Ja93] Janich, Peter: Zur Konstitution der Informatik als Wissenschaft. In (Schefe, Peter; Hastedt, Heiner; Dittrich, Yvonne; Keil, Geert, Hrsg.): Informatik und Philosophie. Mannheim, S. 53–68, 1993. [Le07] Lederman, Norman G.: Nature of Science: Past, Present and Future. In (Abell, Sandra K.; Lederman, Norman G., Hrsg.): Handbook of research on science education. Mahwah, 2007. [MW06] Maaß, Susanne; Wiesner, Heike: Programmieren, Mathe und ein bisschen Hardware . . . Wen lockt dies Bild der Informatik? Informatik-Spektrum, 29(2):125–132, 2006. [ODV02] Op’t Eynde, Peter; De Corte, Erik; Verschaffel, Lieven: Framing Students’ MathematicsRelated Beliefs. A Quest for Conceptual Clarity and a Comprehensive Categorization. In (Leder, Gilah C.; Pehkonen, Erkki; Törner, Günter, Hrsg.): Beliefs: A Hidden Variable in Mathematics Education? Dordrecht, S. 13–37, 2002. [Wi03] Wiebe, Eric; Williams, Laurie; Yang, Kai; Miller, Carol: Computer science attitude survey. computer science, 14(25):0–86, 2003.126 Yannick Schneider, Andreas Mühlingii “proceedings” — 2017/9/17 — 20:19 — page 127 — #127 ii i ii iDiethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 1 Berufswahl Informatiklehrkraft Dorothee Müller1 Abstract: Der Mangel an qualiﬁzierten Informatiklehrkräften ist ein seit Jahren bestehendes, deutschlandweites Problem. Die aktuellen Studierendenzahlen und das hohe Durchschnittsalter der aktiven Informatiklehrkräfte machen eine Verschärfung des Problems innerhalb der nächsten Jahre voraussehbar. In einer empirischen qualitativen Untersuchung wurden Faktoren identiﬁziert, die die Berufswahl Informatiklehrkraft positiv oder negativ beeinﬂussen. In diesem Beitrag werden die Ausgangssituation, der wissenschaftliche Kontext, die Methoden und die Ergebnisse der Untersuchung dargelegt. Die Ergebnisse zeigen, dass dem Bild der Informatik, dem Bild des Informatikunterrichts und dem Informatikselbstkonzept eine herausragende Rolle bei der Berufswahl Informatiklehrkraft zukommen. Diese Faktoren werden entscheidend von Informatikunterricht bestimmt. Keywords: Lehrerbildung Informatik, Informatiklehrermangel, Berufswahlmotivation Informatiklehrkraft, Bild der Informatik, Informatikselbstkonzept, Informatikunterricht 1 Ausgangssituation Informatiklehrermangel Seit Jahren ist der Mangel an Informatiklehrkräften bekannt [FMW06] und wird fachdidaktisch und politisch diskutiert, ohne dass die Ursachen empirisch erforscht oder geeignete bildungspolitische Maßnahmen ergriffen wurden. Es ist prognostizierbar, dass sich der Mangel in den kommenden Jahren noch deutlich vergrößern wird: Mehr als 56 % der Informatiklehrkräfte in Nordrhein-Westfalen2sind älter als 50 Jahre und werden in den nächsten 15 Jahren aus dem Schuldienst ausscheiden. Aufgrund der Anzahl von Studierenden mit dem Berufsziel Informatiklehrkraft kann in den nächsten Jahren durchschnittlich mit 55 Bewerbern für Informatiklehrkraftstellen in Nordrhein-Westfalen gerechnet werden. Damit können nur 56 % des Neubedarfs gedeckt werden [Kl15, S. 19]). Neben dem hohen Durchschnittsalter der Informatiklehrkräfte ist der sehr geringe Anteil von 25,7 % an weiblichen Lehrkräften im Fach Informatik [MS15, S. 13, 57 f.] auffällig. Bereits jetzt führt der Informatiklehrermangel dazu, dass Informatikunterricht nicht angeboten wird, ausfällt oder fachfremd, d. h. von Lehrkräften ohne Lehrbefähigung für das Fach Informatik, unterrichtet wird (s. Tab. 1). Der hohe Anteil an fachfremdem Informatikunterricht ist für die informatische Bildung besonders bedrohlicher, weil die Lehrkraft als der entscheidende Faktor für den Erfolg schulischen Lernens erkannt wurde [Ha09]. Und empirische Studien bestätigen »signiﬁkante Zusammenhänge zwischen der fachbezogenen Lehrbefähigung und den erreichten Schülerkompetenzen« [Pa13, S. 283]. 1Bergische Universität Wuppertal, Didaktik der Informatik, 42119 Wuppertal, dmueller@.uni-wuppertal.de 2Für die in diesem Beitrag dargestellte empirische Untersuchung wurden Befragungen in Nordrhein-Westfalen durchgeführt, und es wurden entsprechend vor allem statistische Daten zum Schulwesen in Nordrhein-Westfalen herangezogen. Die Ausgangssituation ist jedoch in anderen Bundesländern ähnlich [Kl15, S. 3].I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 127ii “proceedings” — 2017/9/17 — 20:19 — page 128 — #128 ii i ii i2 Dorothee Müller Schulform erteilte Stunden ohne Lehrbefähigung Hauptschule 2.436 84,7 % Realschule 6.640 54,4 % Gesamtschule 2.094 74,1 % Gymnasium 4.280 36,1 % Tab. 1: Informatikunterricht 2015/16 in NRW: erteilte Stunden und Anteil des Unterrichts ohne Lehrbefähigung [PM16, S. 3] 2 Forschungsstand Berufswahl Informatiklehrkraft Der bundesweite Mangel an Informatiklehrkräften lenkt den Blick der Fachdidaktik Informatik stärker auf das Studium mit dem Ziel Lehramt Informatik und die entsprechenden Berufswahlmotive. So schlagen Informatikdidaktiker im Zusammenhang mit der Lehrerbildung Informatik vor, Vorstellungen zu erforschen, die zu einem Studium Lehramt Informatik geführt haben oder die es verhindert haben [Di10, S. 59]. Auf bereits durchgeführte informatikfachdidaktische Untersuchungen zur Berufswahl Informatiklehrkraft kann nicht zurückgegriffen werden. Lediglich Teilaspekte wurden bisher empirisch untersucht. So fragt Humbert sechzehn aufgrund ihres fachdidaktischen Engagements ausgewählte Informatiklehrkräfte nach Gründen für Ihre Hinwendung zur Wissenschaft Informatik [Hu03, S. 88]. Auch die Untersuchung von Knobelsdorf zur Computernutzung als einen Weg in die Informatik [Kn11] thematisiert nicht speziell den Weg ins Lehramt Informatik, obwohl neben anderen Studierenden auch Studierende mit dem Ziel Lehramt Informatik befragt wurden. Die Berufswahl Informatiklehrkraft kann als zwei – eventuell gleichzeitig getroffene – Teilentscheidungen aufgefasst werden: als Berufswahl Lehrkraft und als Berufs-/Studienwahl Informatik. Für beide getrennt betrachteten Einzelentscheidungen existieren Forschungsbeiträge, die eine Grundlage für die hier dargestellte Untersuchung liefern. ZurBerufs-/Studienwahl Informatik werden immer wieder Forschungsprojekte und Fördermaßnahmen (vgl. z. B.: [Kl13, GH13]) durchgeführt. Das Bild der Informatik, das Informatikselbstkonzept und die eventuelle Enkulturation in die Informatik beeinﬂussen die Berufs-/Studienwahl Informatik entscheidend. Die drei Faktoren werden durch den Schulunterricht beeinﬂusst. Zwischen der Leistungskurswahl und der späteren Studienoder/und Berufswahl besteht eine direkte, empirisch nachgewiesene Beziehung. Im Vergleich mit anderen MINT-Fächern3wird deutlich, dass relativ wenige Schülerinnen und Schüler in Nordrhein-Westfalen an Leistungskursen Informatik teilnehmen: Nur 1.330 Schülerinnen und Schüler besuchen einen Leistungskurs Informatik, im Vergleich etwa fünfmal so viele (6.557) einen Leistungskurs Chemie und fast dreißig mal so viele einen Leistungskurs Biologie (39.102). Die Leistungskurswahl resultiert wiederum hauptsächlich aus dem in der Sekundarstufe I geweckten Interesse. 3MINT ist ein Akronym für Mathematik, Informatik, Naturwissenschaften und Technik.128 Dorothee Müllerii “proceedings” — 2017/9/17 — 20:19 — page 129 — #129 ii i ii iBerufswahl Informatiklehrkraft 3 Auch die Berufswahl von Lehrkräften ist ein Forschungsgegenstand, zu dem immer wieder neue, aktuelle Untersuchungen durchgeführt werden. Vor allem die Fragen nach Rekrutierungsmustern und Berufswahlmotiven stehen im Mittelpunkt der Untersuchungen. Bei der Frage, werden Beruf Lehrkraft wählt, werden meist Merkmale wie Geschlecht, Herkunft, Schichtzugehörigkeit, Milieuzugehörigkeit, Persönlichkeit und Leistungsmerkmale quantitativ erfasst (Übersicht über den Forschungsstand in [Ro14b]). Zur Beantwortung der Frage, warum der Beruf Lehrkraft ergriffen wird, werden die Interessen, Motive und Überzeugungen, die zu der Berufsentscheidung führen, quantitativ erhoben (Übersicht über den Forschungsstand in [Ro14a]). Als wichtig für die Berufswahl Lehrer im Allgemeinen wie auch für die Fächerwahl hat sich der Einﬂuss der eigenen Schulzeit erwiesen. Zukünftige Lehrkräfte greifen bei der Wahl der Studienfächer oft auf ihre »Lieblingsfächer in der Schule« [Ul04] zurück. Diese Fächerwahl wird durch die Leistungskurswahl vorbereitet und angekündigt [Kl07]. Trotz der zahlreichen Forschungsbeiträge zur Berufswahl von Lehrkräften wird in diesem Zusammenhang von Forschungsdesideraten gesprochen. Dies betrifft vor allem zwei Aspekte dieser Forschung: die fehlende Differenzierung nach Schulfächern und die Forschungsperspektive einschließlich der damit verknüpften Methodenwahl. Vergleichende Studien [Ka12] zeigen jedoch, dass sich Lehramtsstudierende verschiedener Fachkombinationen bezüglich Interessenstrukturen, kognitiver Leistungsfähigkeit, Studienzufriedenheit und Leistung deutlich voneinander unterscheiden und Differenzierung nach Fächern somit notwendig ist. Das zweite Desiderat im Zusammenhang mit der Forschung zur Berufswahl von Lehrkräften betrifft die Perspektive und Methoden dieser Forschung. Die empirische Forschung zur Berufswahl von Lehrkräften ist meistens quantitativ orientiert. Es fehlt die qualitative Forschung mit einer biograﬁschen Perspektive auf den zum Lehrerberuf führenden Bildungsprozess. Diese Forschung könnte weitere, eventuell unerwartete Einﬂussfaktoren ermitteln. 3 Forschungsziel und Methodendiskussion 3.1 Forschungsziel Die hier dargestellte Untersuchung [Mü17] hat das Ziel, die beschriebenen Forschungsdesiderata zu verringern: Die Berufswahl von Informatiklehrkräften wurde aus der individuellen, biograﬁschen Perspektive der Beteiligten erforscht. Daten zu speziﬁschen Einﬂussfaktoren der Berufswahl speziell dieser Gruppe von Lehrkräften wurden in offenen qualitativen Verfahren erhoben und ausgewertet. Dabei wurden Faktoren identiﬁziert, die die Berufswahl Informatiklehrkraft positiv oder negativ beeinﬂussen. 3.2 Qualitative empirische Forschung nach der Grounded Theory Da kaum Forschungsergebnisse und keine empirisch fundierten Theorien zur Berufswahl von Informatiklehrkräften existieren, mussten im Forschungsprozess Theorien generiertBerufswahl Informatiklehrkraft 129ii “proceedings” — 2017/9/17 — 20:19 — page 130 — #130 ii i ii i4 Dorothee Müller werden. Als methodologisches Rahmenkonzept wurde die Grounded Theory gewählt. Diese eignet sich für die Theoriegenerierung auf der Grundlage von qualitativen empirischen Daten in einem noch relativ unerforschten Feld. ngsprozess. Stichprobe: Die Stichprobe wurde mit dem für die Grounded Theory typischen Verfahren des Theoretical Samplings zusammengestellt. Die Gruppe der Befragten wurde nicht komplett vor Beginn der Datenerhebung zusammengestellt, sondern es wurde bei den beiden parallel verlaufenden Prozessen der Datenerhebung und der Datenauswertung vor der Aufnahme neuer Fälle geprüft, ob durch weitere Datenerhebungen neuen Erkenntnisse zu erwarten waren. Als Grundgesamtheit der zu befragenden Personen wurden Studierende mit dem Ziel Lehramt Informatik nach oder bei der ersten besuchten Veranstaltung zur Didaktik der Informatik gewählt. Für diese Entscheidung sprach, dass sich mit der Teilnahme an dieser Veranstaltung auch in dem polyvalenten Bachelor-Studium die Entscheidung für den Beruf Informatiklehrkraft dokumentiert und zugleich der zeitliche Abstand zu der Entscheidung relativ gering ist. Dass der Kreis der Befragten sich ausschließlich aus Studierenden zusammensetzt, die sich für das Berufsziel Informatiklehrkraft entschieden haben, wirft die methodenkritische Frage auf, ob dadurch größtenteils Faktoren identiﬁziert werden, die die Berufswahl Informatiklehrkraft befördern, oder ob auch Faktoren ermittelt werden können, die die Berufswahl behindern. Datenerhebung: Die Datenerhebung erfolgte als eine Kette von aufeinander aufbauenden Auswahlentscheidungen, wobei die Auswahl der Erhebungsinstrumente und die Erhebung der Daten sukzessive erfolgte. Drei Erhebungsformen wurden in chronologischer Folge genutzt: das teilnarrative Leitfadeninterview, die Gruppendiskussion zum Thema Berufswahlbiograﬁe und das speziell für diese Untersuchung entwicklte Erhebungsinstrument der schriftlichen Berufswahlbiograﬁe. Die schriftliche Berufswahlbiograﬁe stellte sich als besonders geeignet heraus, da sie durch die schriftliche Form die Fokussierung auf das Thema förderte und zugleich die Kontrolle der Befragten über die Preisgabe der eigenen biograﬁschen Daten garantierte. Datenauswertung: Die erhobenen Daten wurden in einer Methodentriangulation aus den Verfahren der Grounded Theory und der dokumentarischen Methode ausgewertet. Angewandt wurde die Kodierungsmethode der Grounded Theory, ein kategorisierendes Verfahren mit dem Ziel der Gewinnung von Kategorien und die Generierung von Theorien. Ergänzt wurde dieses Verfahren für die interpretierende Arbeit am Datenmaterial durch die dokumentarische Methode nach Ralf Bohnsack. 4 Durchführung der Befragung Befragt wurden insgesamt 45 Studierende mit dem Studienziel Lehramt Informatik. Davon waren zehn weiblich. Es wurden neun mündliche Berufswahlinterviews und 34 schriftliche Berufswahlbiograﬁen erhoben, sodass von 43 Befragten Berufswahlinterviews oder -biograﬁen vorliegen. Zwei der elf Teilnehmenden der Gruppendiskussionen nahmen nur an diesen und nicht ebenfalls an mündlichen oder schriftlichen Interviews teil. Aussagen dieser Teilnehmenden wurden in der Auswertung berücksichtigt.130 Dorothee Müllerii “proceedings” — 2017/9/17 — 20:19 — page 131 — #131 ii i ii iBerufswahl Informatiklehrkraft 5 Die Reihe der Datenerhebungen wurde mit neun aufgezeichneten teilnarrativen Leitfadeninterviews eröffnet. Ausgegangen wurde im Leitfadeninterview von einer offen gehaltenen Frage zur Berufswahlbiograﬁe: »Ich möchte Sie zu Beginn ganz einfach bitten, mir zu erzählen, wie es kommt, dass Sie heute hier als Studierende(r) mit dem Berufsziel Informatiklehrer(in) sitzen. Sie können so weit ausholen, wie sie wollen. Mich interessiert, wie eins zum anderen gekommen ist.« Die Interwievs dauerten jeweil etwa 30 Minuten. Falls die Befragten folgende Themenkomplexe nicht oder kaum thematisierten, wurden vorbereitete Leitfragen zur eigenen Computerbiograﬁe, zum Einﬂuss von Freunden und Familie und zum antizipierten Berufsbild Informatiklehrkraft ergänzt. Es wurden zwei Gruppendiskussionen durchgeführt. Mit der ersten Diskussion zum Thema »Mädchen im Informatikunterricht« sollte vor allem die Erhebungsund Auswertungsform erprobt werden. Die zweite Gruppendiskussion zum Thema »Warum werde ich Informatiklehrkraft?« fokussiert dagegen die Berufswahlmotive der Teilnehmenden. Das Erhebungsinstrument der Gruppendiskussionen stellte sich für diesen Forschungszweck als weniger ergiebig als erwartet heraus und ﬂoss nur zu geringem Teil in die Auswertung ein. In der schriftlichen Berufswahlbiograﬁe Informatiklehrkraft wurde an die Befragten eine schriftliche Schreibaufforderung gegeben. Diese bestand aus der eigentlichen Aufforderung und kurzen »Locktexten«, die den Erzählraum beispielhaft inhaltlich und formal aufschlossen und wichtige Themen in den gedanklichen Fokus der Befragten brachten, ohne Aussagen zu den Themen zu erzwingen. 5 Ergebnisse Die Datenauswertung nach der Kodierungsmethode der Grounded Theory führte zu den folgenden Hauptund untergeordneten Subkategorien: •Irrwege und Wege zur Berufswahl Informatiklehrkraft –Informatiklehrkraft – zwei Berufsentscheidungen –Vom Abitur direkt zum Studium Informatiklehrkraft –Über Irrwege zur Berufswahl –Faktor Zufall •Bild der Informatik –Philosophie des Faches / epistemologische Überzeugungen –Bild des Informatikers und des Berufshabitus Informatiklehrkraft •Informatikselbstkonzept –Eigene Schulerfahrungen im Informatikunterricht –Erfahrungen mit Informatiksystemen –Familie und Peer-Gruppe –Geschlecht und Informatik Ziel der folgenden Darstellung ist es, die vielfältigen Aspekte der Forschungsergebnisse strukturiert und in dem Zusammenhang der »Handlung in dieser Geschichte«, also des zentralen Themas in Sinne Corbins [Co06, S. 74], vorzustellen. Als diese Schlüsselkategorie kristallisierte sich bei der Auswertung »Irrwege und Wege zur Berufswahl Infor-Berufswahl Informatiklehrkraft 131ii “proceedings” — 2017/9/17 — 20:19 — page 132 — #132 ii i ii i6 Dorothee Müller matiklehrkraft« heraus. Die Kategorien sind in der Ergebnisdarstellung nicht vollständig trennbar, da sie sich in vielen Aspekten wechselseitig bedingen. Beispielzitate aus dem erhobenen Datenmaterial belegen und illustrieren die Ergebnisse. Die Ergebnisse der Untersuchung zeigen, dass der Berufswahlprozess von angehenden Informatiklehrkräften häuﬁg mit Irrwegen in Form von Studienbzw. Berufszielwechseln verbunden ist. Die Entscheidung für den Beruf Informatiklehrkraft wurde meist als eine doppelte Berufsentscheidung , als die Entscheidung für den Beruf Lehrkraft und als die Entscheidung für das Fach Informatik, begriffen und auch formuliert. »Ja, wobei das ein Unterschied ist, Lehrer oder Informatiklehrer. Informatiklehrer wollte ich eben noch nicht lange werden, das hat sich eben so ergeben. « »Die Wahl Informatik und Lehrer sind voneinander unabhängig getroffen worden. « Diese doppelten Berufsentscheidungen werden meist auch zeitlich getrennt getroffen und führen zu Umwegen im Berufsweg. Von der in der Berufsentscheidung Informatiklehrkraft enthaltenen doppelten Entscheidung für Lehramt und Informatik ausgehend können die Wege zur Berufsentscheidung Informatiklehrkraft in drei Arten eingeteilt werden: den Weg vom Abitur direkt zum Studium Informatiklehrkraft, den Weg über ein Lehramtsstudium ohne Informatik und den Weg über die Informatik ohne das Ziel Lehramt. Nur ein knappes Drittel der Befragten traf nach dem Schulabschluss als erste Berufswahl die Entscheidung für den Beruf Informatiklehrkraft. Stattdessen wurde die Entscheidung meistens erst nach oder während einer Berufsausbildung oder während eines anderen Studiums getroffen. Dies kann als Grund für das von der Statistik ausgewiesene (vgl. z. B. [St14, S. 164]) vergleichsweise hohe Durchschnittsalter bei gleichzeitig geringer Fachstudienzeit bei Absolventen einer Lehramtsprüfung mit dem Fach Informatik gesehen werden. Der Zusammenhang zwischen in der eigenen Schulzeit entwickeltem Fachinteresse, der Leistungskurswahl und der Studienfachwahl bestätigt sich für diejenigen Befragten, die den»Weg vom Abitur direkt zum Studium Informatiklehrkraft« gingen. Häuﬁg wird der Informatikunterricht der eigenen Schulzeit positiv erinnert, und diese Erfahrung ﬂießt explizit in die Entscheidung ein. Sie hatten zur Schulzeit ein positives Bild der Informatik und ein hohes Informatikselbstkonzept. Der Informatiklehrkraft ihrer Schulzeit bescheinigen sie oft eine berufliche Vorbildfunktion. »Und auch in der Schule haben Mathe und Info am meisten Spaß gemacht und deswegen studiere ich es wahrscheinlich. « »Die Situation von meinem [Informatik-] Lehrer hat mich im Endeffekt davon überzeugt, dass auch Lehrer ihren Spaß am Unterricht und am Unterrichten haben können.« Allerdings hatten die meisten der befragten angehenden Informatiklehrkräfte selbst keinen Informatikunterricht oder erinnern diesen negativ. Der Weg zum Studium Informatiklehrkraft führt bei diesen Befragten häuﬁg über den Umweg von zunächst anderen Studienentscheidungen, meistens über ein Lehramtsstudium mit anderen Fächern oder ein Informatikstudium. Die Informatikstudierenden haben typischerweise zum Zeitpunkt ihrer ersten Studienwahl ein positives Bild der Informatik und ein hohes Informatikselbstkonzept, aber132 Dorothee Müllerii “proceedings” — 2017/9/17 — 20:19 — page 133 — #133 ii i ii iBerufswahl Informatiklehrkraft 7 kein positives Berufsbild Informatiklehrkraft. Ihr Wechsel von einem Informatikstudium zum Studium mit dem Berufsziel Informatiklehrkraft wird in der Regel durch den Wunsch nach einer stärkeren sozialen Komponente im späteren Berufsalltag ausgelöst. »Dies ist der erste Grund, weshalb ich mich für ein Lehramtsstudium entschied. Mir fehlte einfach die soziale Komponente meiner (bis dato) Tätigkeit [Programmieren d. V.] .« Oder ihr Berufsbild von Informatiklehrenden erfährt eine entscheidende Änderung. »Später im Studium haben mich dann Professoren, die Informatik erteilten, davon überzeugt, dass es Spaß macht diesen Stoff zu vermitteln. Dieser Gedanke kam bei mir nicht durch ein Gespräch zustande, sondern durch die Teilnahme an Vorlesungen und den dazugehörenden Übungen. « Bei den Lehramtsstudierenden mit anderen Fächern, die häuﬁg zunächst ein niedriges Informatikselbstkonzept und/oder ein negatives Bild der Informatik hatten, kann es zu einer Umorientierung hin zum Studienziel Informatiklehrkraft kommen, wenn diese Vorstellungen sich während des ersten Studiums – z. B. durch den Besuch von universitären Lehrveranstaltungen zu informatischen Inhalten – ändern. Die letztliche Entscheidung für den Beruf Informatiklehrkraft wird von denjenigen, die ihr Studienziel wechselten, mit Recht als durch Zufälle bestimmt empfunden. Immer wieder wird im Zusammenhang mit dem Berufszielwechsel von den Befragten explizit der Faktor »Zufall« thematisiert. So beginnen viele erhobene schriftliche Berufswahlbiograﬁen mit Worten wie: »Ich bin also eher zufällig zur Informatik gekommen. « »Zum Berufswunsch ›Informatiklehrer‹ brachten mich eine Reihe von Zufällen. « »Ich werde eher zufällig Informatiklehrer. « Die dargestellten Ergebnisse zeigen, dass das Bild der Informatik und das damit zusammenhängende Informatikselbstkonzept entscheidend für die Berufswahl Informatiklehrkraft sind. Beide erhalten im Allgemeinen schon vor dem ersten Informatikunterricht eine vorläuﬁge Prägung. Das stereotype, durch die Medien vermittelte und in der Gesellschaft vorherrschende Informatikbild wirkt sich dabei negativ aus und verhindert eventuell die Wahl des Faches Informatik. Ein Studierender mit dem Ziel Lehramt, der erst während des Studiums von einem anderen Fach zur Informatik wechselte, berichtet zum Beispiel: »Ich hatte während meiner eigenen Schulzeit fast keinerlei Berührungen mit Informatik [. . . ] Die allgemeinen Vorurteile, wie ›Informatik gleich Programmieren‹ oder ›Informatik ist für Computer-Freaks‹, hielten mich ab, dem Thema / der Wissenschaft die nötige Aufmerksamkeit zu schenken. « Jedoch haben einige Befragte auch von einem bereits vor dem ersten Informatikunterricht bestehenden positiven Informatikbild berichtet. Dieses war meist mit Vorbildern in der Familie, die einen Beruf im Bereich der Informatik ausübten, verbunden.Berufswahl Informatiklehrkraft 133ii “proceedings” — 2017/9/17 — 20:19 — page 134 — #134 ii i ii i8 Dorothee Müller Ein neutrales oder positives Bild der Informatik kann durch die Schule geändert werden – sogar ohne dass die Schülerin oder der Schüler jemals am Informatikunterricht teilnimmt. Ein Befragter berichtet, dass er ursprünglich durchaus Interesse an Informatik und am Informatikunterricht hatte, ihm jedoch in der schulischen Beratung vom Wahlpﬂichtfach Informatik abgeraten wurde, mit der Begründung, es gäbe » in Informatik nichts ›Wichtiges‹ zu lernen «. Auch Informatikunterricht von fachlich oder/und fachdidaktisch unqualiﬁzierten Lehrkräften kann sich negativ auf das Bild der Informatik oder/und das Informatikselbstkonzept auswirken. Auf die Frage, ob er Informatikunterricht in der eigenen Schulzeit hatte, antwortete ein Lehramtsstudierender, der erst während des Studiums von einem anderen Fach zur Informatik wechselte: »Ja. Aber den habe ich nachher abgewählt, weil ich fand den aber, glaube ich, eher Kacke und eher uninteressant. [. . . ] Also dass mir Programmieren Spaß macht, habe ich erst in der Uni gelernt. Weil in der Schule war das so – lag natürlich auch am Lehrer – ich hatte einen Lehrer, der hat gesagt, ihr habt frei, wenn er sein Buch vergessen hatte. [. . . ] Also er hatte selber gar keine Ahnung, und konnte das Interesse oder den Spaß an dem Fach überhaupt nicht vermitteln. « Das Bild der Informatik dieses Befragten änderte sich erst an der Universität, wo er feststellt, dass sein in der Schulzeit gewonnenes Informatikbild falsch war. Auch das Informatikselbstkonzept kann unter misslungenem Informatikunterricht leiden und eine weitere Beschäftigung mit Informatik verhindern: »Informatik kam für mich zunächst nicht in Frage. Als Schüler hatte ich als Differenzierungskurs Mathematik/Informatik und da ich dort im Bereich Programmierung hinter denjenigen Mitschülern, die sowieso schon programmieren konnten, deutlich im Nachteil war, habe ich es nicht in Betracht gezogen, Informatik als Fach zu studieren. « Dieser Befragte entwickelt in diesem Informatikunterricht ein niedriges, und wie sich im späteren Studium zeigt, nicht realistisches Informatikselbstkonzept. Erst im Studium kommt es zu einem erneuten Kontakt mit informatischen Themen, wobei sich sein Informatikselbstkonzept ebenso wie sein Bild der Informatik ändern und er zum Studienfach Informatik wechselt. »Nachdem ich feststellte, dass mir Informatik liegt, [. . . ] was vielleicht auch daran lag, dass [. . . ] die Programmierung einfach ist, wenn man sie von Grund auf lernt [. . . ] habe ich mich [. . . ] dann endgültig für Lehramt Mathematik/Informatik entschieden. « 6 Fazit und Ausblick Die Berufswahl Informatiklehrkraft wird vom informatischen Selbstkonzept der Wählenden, ihrem Bild der Informatik und ihrem Bild des Berufs Informatiklehrkraft bestimmt.134 Dorothee Müllerii “proceedings” — 2017/9/17 — 20:19 — page 135 — #135 ii i ii iBerufswahl Informatiklehrkraft 9 Auf alle diese Faktoren hat das Erleben oder auch Fehlen des eigenen Informatikunterrichts der Befragten entscheidenden Einﬂuss. Die Ergebnisse zeigen, dass die in der Fachliteratur als typisch beschriebenen Faktoren der Fächerwahl bei Lehramtsstudierenden für Informatiklehrkräfte nicht die Norm sind. Typischerweise studieren angehende Lehrkräfte die Fächer, für die ihr Interesse in der Sekundarstufe I geweckt wurde und die sie anschließend in der Sekundarstufe II oft als Leistungskurse oder zumindest als Grundkurse gewählt haben. In der Gruppe der befragten angehenden Informatiklehrkräfte ist die Wertung des als Schülerin oder Schüler erlebten Informatikunterrichts weitgehend dichotom. Der größere Teil der Befragten hatte keinen Informatikunterricht oder hat eher negative Erfahrungen damit gemacht. Es wurde ein niedriges Informatikselbstkonzept aufgebaut und/oder ein negatives Bild der Informatik. Ein Studium mit dem Ziel Lehramt Informatik wird zunächst nicht in Betracht gezogen. Diejenigen, die sich zunächst für ein Fachstudium Informatik oder einen informatiknahen Beruf entschieden, waren häuﬁg schon vor dem ersten möglichen Informatikunterricht von der Informatik begeistert. Sie wählten diesen eventuell nicht, weil sie davon keinen wesentlichen Lernzuwachs erwarteten. Erst positiv erlebte Informatiklehre an der Universität und/oder der Wunsch nach einer sozialen Komponente im Beruf führte zu einem Wechsel der Berufsziels zur Informatiklehrkraft. Es gibt jedoch auch Befragte, die in ihren Berufswahlbiograﬁen mit Begeisterung von dem Informatikunterricht ihrer Schulzeit und den Informatiklehrkräften berichten. Die Entscheidung für den Beruf Informatiklehrkraft wurde bei diesen Befragten oft als erste Berufsentscheidung nach dem Abitur betroffen. In diesen Fällen wird oft explizit auf die Vorbildfunktion ihrer Informatiklehrkraft und deren Einﬂuss auf ihre Berufswahl Informatiklehrkraft hingewiesen. Ein fachlich und fachdidaktisch guter Informatikunterricht ist der förderlichste Faktor für die Berufswahl Informatiklehrkraft. Ein diesen Anforderungen entsprechender Informatikunterricht für alle Schülerinnen und Schüler kann dauerhaft dem Informatiklehrermangel entgegenwirken. Keine fundierten Ergebnisse konnten anhand der Befragungen zu dem Thema Geschlecht und Informatik ermittelt werden. Der niedrige Anteil von weiblichen Informatiklehrkräften und die allgemein übliche Zuordnung der Informatik zur männlichen Domäne lässt eine spezielle Untersuchung zu diesen Thema wichtig erscheinen. Literaturverzeichnis [Co06] Corbin, Juliet: Grounded Theory. Verlag Barbara Budrich, Opladen und Farmington Hills, S. 70–75, 2006. [Di10] Diethelm, Ira; Hellmig, Lutz; Friedrich, Steffen; Breier, Norbert; Brinda, Torsten: Lehrerbildung Informatik – Was ist zu tun? In (Diethelm, Ira; Dörge, Christina; Hildebrandt, Claudia; Schulte, Carsten, Hrsg.): DDI. Jgg. 168 in LNI. GI, S. 57–65, 2010. [FMW06] Frein, Thomas; Möller, Gerd; Wilpricht, Michael: Fachspeziﬁscher Lehrermangel am Gymnasium: Mythos oder Wahrheit? SchulVerwaltung NRW, (1):29, Januar 2006. [GH13] Götz, Christian; Hubwieser, Peter: Belebt die Einführung des Schulfachs Informatik die Nachfrage nach einem Informatikstudium? Jgg. P-219 in LNI. GI, S. 147–156, 2013.Berufswahl Informatiklehrkraft 135ii “proceedings” — 2017/9/17 — 20:19 — page 136 — #136 ii i ii i10 Dorothee Müller [Ha09] Hattie, John Allan Clinton: Visible Learning. A synthesis of over 800 meta-analyses relating to achievement. Routledge, London and New York, 2009. [Hu03] Humbert, Ludger: Zur wissenschaftlichen Fundierung der Schulinformatik. Dissertation, Witten, 3 2003. zugl. Dissertation an der Universität Siegen. [Ka12] Kaub, Kathrin; Kathrin, Julia; Biermann, Antje; Friedrich, Anja; Bedersdorfer, HansWerner; Spinath, Frank M.; Brünken, Roland: Berufliche Interessensorientierungen und kognitive Leistungsproﬁle von Lehramtsstudierenden mit unterschiedlichen Fachkombinationen. Zeitschrift für pädagogische Psychologie, 26(4):233–249, 2012. [Kl07] Klika, Dorle: Fächerwahl im Lehramtsstudium – Zementierung der Geschlechtersegregation? In (Schellack, Antje; Große, Stefanie, Hrsg.): Bildungswege, S. 123–133. Waxmann, Münster u. a., 2007. [Kl13] Kleinn, Karin; Götsch, Monika; Heine, Yvonne; Schinzel, Britta: Das DFG-Projekt »Weltbilder der Informatik«. Informatik-Spektrum, 36(3):251–256, 2013. [Kl15] Klemm, Klaus: , Lehrerinnen und Lehrer der MINT-Fächer: Zur Bedarfsund Angebotsentwicklung in den allgemein bildenden Schulen der Sekundarstufen I und II am Beispiel Nordrhein-Westfalens, 2015. [Kn11] Knobelsdorf, Maria: Biographische Lernund Bildungsprozesse im Handlungskontext der Computernutzung. Dissertation, Freie Universität Berlin, 2011. [MS15] MSW-NW: . Das Schulwesen in Nordrhein-Westfalen aus quantitativer Sicht 2014/15. Statistische Übersicht 388. Düsseldorf, 5 2015. MSW-NW – Ministerium für Schule und Weiterbildung Nordrhein-Westfalen. [Mü17] Müller, Dorothee: Der Berufswahlprozess von Informatiklehrkräften. Commentarii informaticae didacticae (CID) 11, Universiätsverlag Potsdam, Potsdam, 2017. Überarbeitete Fassung der Dissertation, Universität Wuppertal, 2016. [Pa13] Pant, Hans Anand; Stanat, Petra; Schroeders, Ulrich; Roppelt, Alexander; Siegle, Thilo; Pöhlmann, Claudia: IQB-Ländervergleich 2012. Mathematische und naturwissenschaftliche Kompetenzen am Ende der Sekundarstufe I. Waxmann, Münster, New York, 2013. IQB – Institut zur Qualitätsentwicklung im Bildungswesen. [PM16] Pieper, Monika; Marsching, Michele: Schulministerin Löhrmann ermutigt Schülerinnen und Schüler zur Wahl des Fachs Informatik, doch wer soll sie unterrichten? Kleine Anfrage 4731 vom 2. Mai 2016. Antwort der Ministerin für Schule und Weiterbildung namens der Landesregierung. Drucksache 16/11876, Landesregierung des Landes Nordrhein-Westfalen, Düsseldorf, 2016. Datum des Originals: 30.05.2016/Ausgegeben: 02.06.2016. [Ro14a] Rothland, Martin: Warum entscheiden sich Studierende für den Lehrerberuf? In: (Terhart et al.) [TBR14], S. 349–385. [Ro14b] Rothland, Martin: Wer entscheidet sich für den Lehrerberuf? In: (Terhart et al.) [TBR14], S. 319–348. [St14] Statistisches Bundesamt, Hrsg. Bildung und Kultur – Prüfungen an Hochschulen. Prüfungsjahr 2013. Fachserie 11 Reihe 4.2. Wiesbaden, 2014. [TBR14] Terhart, Ewald; Bennewitz, Hedda; Rothland, Martin, Hrsg. Handbuch der Forschung zum Lehrerberuf, Münster, New York, München, Berlin, 2014. Waxmann. [Ul04] Ulich, Klaus: »Ich will Lehrer, -in werden« eine Untersuchung zu den Berufsmotiven von Studierenden. Weinheim, 2004.136 Dorothee Müllerii “proceedings” — 2017/9/17 — 20:19 — page 137 — #137 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 1 Mit dem Glauben Berge versetzen ... Die Selbstwirksamkeitserwartung von Informatiklehrkr ¨aften Claudia Hildebrandt1 Abstract: Den Unterrichtsstoff sachlich richtig und interessant vermitteln, motivieren, optimal auf Pr¨ufungen vorbereiten, Durchsetzungsverm ¨ogen zeigen, die Klasse im Griff haben, Konﬂikte offensiv angehen und bew ¨altigen und vieles mehr wird von den Lehrerinnen und Lehrer heutzutage erwartet. Ob sie allerdings derartig hohen fachlichen und p ¨adagogischen Anforderungen gerecht werden, ist von vielen Faktoren abh ¨angig. Ein bedeutender Faktor ist die individuelle ¨Uberzeugung von den eigenen F ¨ahigkeiten, die sogenannte Selbstwirksamkeitserwartung. Sie beeinﬂusst Wahrnehmungen, die Motivation, die Leistungen sowie das Handeln. Somit geht es im Folgenden um die Frage, welche Selbstwirksamkeitserwartung Informatiklehrkr ¨afte bezogen auf den Informatikunterricht im Bereich der Sekundarstufe I vor und nach einer Fortbildungsmaßnahme haben. Es wird dabei nicht nur die allgemeine informatikspeziﬁsche Lehrerselbstwirksamkeitserwartung mit Hilfe von Fragebogenergebnissen von 41 Lehrkr ¨aften untersucht, sondern ebenfalls die informatikspeziﬁsche Lehrerselbstwirksamkeitserwartung f ¨ur spezielle Themenbereiche wie algorithmisches Probleml ¨osen, Daten und ihre Spuren und automatisierte Prozesse. Dar ¨uber hinaus ist von Interesse, ob die unterschiedlichen Selbstwirksamkeitserwartungen bez ¨uglich dieser speziellen Themenbereiche mit der empfundenen Qualit ¨at einer Fortbildung in Zusammenhang stehen. Die Untersuchungsergebnisse best ¨atigen, dass eine Steigerung der informatikspeziﬁschen Lehrerselbstwirksamkeitserwartungen durch bestimmte Arten von Fortbildungen m ¨oglich ist. Weiterhin weisen sie auf einen Zusammenhang zwischen der Qualit ¨at der Fortbildungen und der Lehrerselbstwirksamkeitserwartungen hin. Eine Entfaltung des Potenzials von Lehrkr ¨aften durch eine Steigerung der individuellen Lehrerselbstwirksamkeit mithilfe von Fortbildungen ist somit m ¨oglich, wovon letztendlich die Sch ¨ulerinnen und Sch ¨uler proﬁtieren. Keywords: Selbstwirksamkeitserwartung, Lehrerselbstwirksamkeitserwartung, Lehrerfortbildung, Einﬂuss von Fortbildungen, empirische Untersuchung 1 Einf ¨uhrung und Motivation Aufgrund der Tatsache, dass es, insbesondere in Niedersachsen, wenig Informatiklehrkr¨afte gibt, die durch das Studium des Faches Informatik mit dem Berufsziel Lehramt ihre Qualiﬁkation zum Unterrichten dieses Faches erworben haben, ist es unabdingbar, durch geeignete Fortbildungsmaßnahmen daf ¨ur zu sorgen, dass ein zeitgem ¨aßer curriculumskonformer Informatikunterricht erm ¨oglicht wird. Dabei gilt es allerdings nicht außer Acht zu lassen, dass die Verwirklichung von gutem Unterricht im Sinne der Sch ¨ulerinnen und Sch¨uler von vielen Faktoren wie der individuellen ¨Uberzeugung ¨uber eigene F ¨ahigkeiten, die sogenannte Selbstwirksamkeitserwartung [Ba97], abh ¨angt. Im folgenden Kapitel wird somit zun ¨achst das Konzept der Selbstwirksamkeit nach Albert Bandura vorgestellt und ver¨offentlichte Forschungsergebnisse zu diesem Thema dargestellt. Schlussfolgerungen 1Carl von Ossietzky Universit ¨at Oldenburg, Fakult ¨at II Didaktik der Informatik, 26111 Oldenburg, claudia.hildebrandt@uni-oldenburg.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 137ii “proceedings” — 2017/9/17 — 20:19 — page 138 — #138 ii i ii iaus der Selbstwirksamkeitsforschung folgen f ¨ur die selbst durchgef ¨uhrten Lehrerfortbildungen in Kapitel 3. Die Forschungsfragen und notwendigen Deﬁnitionen werden in Kapitel 4 pr ¨asentiert und die Messinstrumente zur Erhebung der beschriebenen Konstrukte mithilfe der quantitativen Datenerhebung in Kapitel 5 erl ¨autert. Kapitel 6 besch ¨aftigt sich mit den ersten Ergebnissen. Abschließend werden die Resultate zu den Forschungsfragen diskutiert (siehe Kapitel 6) und ein Ausblick wird gegeben. 2 Stand der Forschung Die Grundlage der folgenden Ausf ¨uhrungen bildet das von Albert Bandura [Ba77] entwickelte Konzept der Selbstwirksamkeit. Das urspr ¨unglich im Rahmen der klinischen Psychologie entstandene Konzept hat in der empirischen Bildungsforschung zunehmend an Bedeutung gewonnen. Selbstwirksamkeitserwartungen sind optimistische ¨Uberzeugungen von der eigenen F ¨ahigkeit, schwierige Anforderungssituationen mit den zur Verf ¨ugung stehenden Ressourcen erfolgreich bew ¨altigen zu k ¨onnen [Ba77]. Bandura deﬁniert die Selbstwirksamkeitserwartung als”beliefs in one’s capabilities to organize and execute the courses of action required to manage prospective situations“ [Ba95, S. 2]. Sie wirkt sich auf das Denken, F ¨uhlen und unsere Motivation aus [Ba95, S. 3] und beeinﬂusst als ein Schl¨usselfaktor unser Handeln.”Hence different people with similar skills, or the same person under different circumstances, may perform poorly, adequately, or extraordinarily, depending on ﬂuctuations in their beliefs of personal efﬁcacy“ [Ba77, S. 37]. Die Ergebnisse aus der Selbstwirksamkeitsforschung der letzten etwa 40 Jahre werden im Artikel Teacher Self-Efﬁcacy and Its Effects on Classroom Processes, Student Academic Adjustment, and Teacher Well-Being: A Synthesis of 40 Years of Research von Marjolein Zee and Helma M. Y. Koomen [ZK16] zusammengefasst. Es zeigt sich, dass Lehrkr ¨afte mit einer hohen berufsspeziﬁschen Selbstwirksamkeit positiv mit der Qualit ¨at der Prozesse im Unterricht in Beziehung stehen. Sie sind eher in der Lage, Unterst ¨utzung beim Lernen zu geben, zeigen eine gute Unterrichtsorganisation und eine emotionale Unterst ¨utzung der Sch¨ulerinnen und Sch ¨uler. Diese Faktoren stehen wiederum mit den schulischen Leistungen und der Motivation der Lernenden in Beziehung (ebenfalls zu ﬁnden in [Ba97, S. 240 243], [HPK13], [GD84]). Aber nicht nur die Sch ¨ulerinnen und Sch ¨uler proﬁtieren von einer hohen berufsspeziﬁschen Selbstwirksamkeit von Lehrkr ¨aften. Sie wirkt sich ebenfalls positiv auf die Gesundheit der Lehrerinnen und Lehrer und als Pr ¨aventionsfaktor gegen zum Beispiel Burnout aus [SS00]. Dieses war eines der Ergebnisse des deutschen Modellversuchs Selbstwirksame Schulen von 1995 1998, an dem zehn Schulen mit ihrer Sekundarstufe teilnahmen. Ein gemeinsames Ziel war es, das Niveau der Selbstwirksamkeit bei Lehrkr ¨aften und Sch ¨ulerinnen und Sch ¨ulern zu erh ¨ohen [SJ99]. Jetzt stellt sich die Frage, wie man die Selbstwirksamkeitserwartung entwickeln und erhalten kann. Bandura [Ba97, S. 79 115] beschreibt in diesem Zusammenhang vier Quellen: • Enactive master experience: Eigene Erfolgserlebnisse stellen den einﬂussreichsten Faktor dar. Ein robuster Glaube an die individuelle Selbstwirksamkeit kann nur138 Claudia Hildebrandtii “proceedings” — 2017/9/17 — 20:19 — page 139 — #139 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 3 durch die eigene erfolgreiche Bew ¨altigung (schwieriger) Situationen erlangt werden. Misserfolge f ¨uhren zu einer Reduzierung der Selbstwirksamkeitserwartung. • Vicarious experiences: Andere Menschen mit F ¨ahigkeiten, die den eigenen als ¨ahnlich eingestuft werden, k ¨onnen zu Vorbildern werden. Meistern diese Vorbilder eine Aufgabe, traut man sich selbst auch eher das L ¨osen derartiger Aufgaben zu. Andererseits demotivieren Misserfolge. • Verbal persuasion: Menschen strengen sich eher an und versuchen, die Herausforderungen zu meistern, wenn ihnen gut zugeredet und von anderen zugetraut wird, eine bestimmte Situation zu bew ¨altigen. • Physiological and affective states: Die Situationsund Selbstwirksamkeitsbewertung erfolgt unter anderem ¨uber die eigenen physiologischen Reaktionen wie Herzklopfen oder Schweißausbr ¨uche in vor allem stressigen Situationen. Menschen mit hoher Selbstwirksamkeitserwartung interpretieren diese physiologischen Reaktionen als normal und unabh ¨angig von den eigenen F ¨ahigkeiten, wohingegen eine Interpretation als Schw ¨ache Selbstzweifel aufkommen lassen k ¨onnte. Die Anzahl der Forschungen zu Faktoren, die im schulischen Alltag die Selbstwirksamkeit von Lehrenden beeinﬂussen, ist bisher gering [Ge13, S. 9f]. Die Untersuchungen von Gebauer im Rahmen des Modellvorhabens Selbstst ¨andige Schulen NRW (von 2003 2008) ergaben, dass der affektive und emotionale Zustand den st ¨arksten und stabilsten Zusammenhang zur Selbstwirksamkeits ¨uberzeugung von Lehrenden zeigt [Ge13, S. 139]. Dar ¨uber hinaus fanden Holzberger, Philipp und Kunter in ihrer L ¨angsschnittstudie unter anderem heraus, dass die Selbstwirksamkeit von Lehrerinnen und Lehrern zu den Erfolgserlebnissen im Klassenraum in Beziehung steht unabh ¨angig von der Anzahl der Jahre an Unterrichtserfahrung [HPK13]. Ziel ist es nun, im Rahmen von Fortbildungen das vorhandene Potenzial der Lehrkr ¨afte zu steigern und voll auszunutzen. Mit m ¨oglichen Konsequenzen, die aus den erw ¨ahnten Ergebnissen f ¨ur Fortbildungen abgeleitet werden k¨onnen, besch ¨aftigt sich das n ¨achste Kapitel. 3 Die Fortbildungen 3.1 Das Konzept Eine bedeutende Schlussfolgerung, die man aus den Untersuchungsergebnissen (siehe Kapitel 2) ziehen kann, ist, dass der effektivste Weg, die Selbstwirksamkeit zu entwickeln und zu steigern, mithilfe von positiven, eigenen Erfahrungen erfolgt. Das heißt f ¨ur Lehrerfortbildungen, dass die Praxisanteile deutlich h ¨oher als die Theorieanteile liegen sollten. Aber dabei gilt es zu beachten, dass die Aufgaben so gew ¨ahlt werden m ¨ussen, dass die nach einer Phase der Anstrengung auch erfolgreich bew ¨altigt werden k ¨onnen. Beispielsweise bei Fortbildungen zum Thema automatisierte Prozesse mithilfe von Lego Mindstorms Robotern k ¨onnen bei komplexen Aufgaben sowohl Fehler bei der Konstruktion des Roboters als auch Fehler in der Programmierung auftreten. Somit ist es notwendig, zun ¨achst AufgabenMit dem Glauben Berge versetzen ... 139ii “proceedings” — 2017/9/17 — 20:19 — page 140 — #140 ii i ii izu w ¨ahlen, die von jeder Teilnehmerin und jedem Teilnehmer erfolgreich bew ¨altigt werden k ¨onnen. Dazu geh ¨oren einfache Fahraufgaben, ein Ballwerfer, der unter dem Einsatz eines”Wurfarmes“ mit einem kleinen Ball Kegel aus Legoteilen umwerfen soll. Es ist eine motivierende Aufgabe, bei der man den Erfolg direkt selbst sieht. Anschließend k ¨onnen Aufgaben gestellt werden, die immer komplexer werden, z.B. ein Quadrat abfahren, und schließlich auch das Sensor-Aktor-Prinzip ber ¨ucksichtigen wie Hindernissen ausweichen und einer schwarzen Linie folgen. Ein weiterer Aspekt, der Ber ¨ucksichtigung ﬁndet, ist das Lernen vom Vorbild. Nicht nur die Fortbilder k ¨onnen Vorbilder sein, indem sie von Lernwiderst ¨anden im Unterricht berichten und M ¨oglichkeiten zur Bew ¨altigung aufzeigen, sondern auch die anderen Fortbildungsteilnehmerinnen und -teilnehmer. Die Kolleginnen und Kollegen werden in erster Linie als Vorbilder angesehen, da die ¨Ahnlichkeiten und Gemeinsamkeiten am st ¨arksten sind. Somit kann es zu einer Beeinﬂussung durch diese Vorbilder kommen. Es gilt, den Austausch unter den an der Fortbildung teilnehmenden Personen explizit zu f ¨ordern und zu fordern. Dar ¨uber hinaus ist es immer wieder wichtig, den Lehrkr ¨aften ihre Erfolge vor Augen zu f ¨uhren, z.B. durch Lob und W ¨urdigung der Ergebnisse oder Teilergebnisse und der damit verbundenen Anstrengung sowie sie zu ermutigen, weiter zu machen, da sie die F ¨ahigkeit zum erfolgreichen Bew ¨altigen der Aufgabe besitzen. Damit sollen Selbstzweifel ¨uberwunden werden oder gar nicht erst aufkommen. Um stressvolle Situationen zu vermeiden, ist es sinnvoll, den Teilnehmerinnen und Teilnehmern Aufgaben unterschiedlichen Schwierigkeitsgrades anzubieten. F ¨ur die Fortgeschrittenen gibt es die Aufgaben ohne Hilfsanweisungen sowie weiterf ¨uhrende Aufgaben, f¨ur die Anf ¨anger einfachere Aufgaben mit mehr Hilfestellungen. Individuelle Lernumgebungen k ¨onnen geschaffen werden, um einer Abnahme der Selbstwirksamkeitserwartung entgegenzuwirken. Zusammenfassend kann man festhalten, dass lernende Lehrkr ¨afte durchaus mit herausfordernden und f ¨ur den Unterricht bedeutsamen Aufgaben konfrontiert werden k ¨onnen, die aber auch mit einem gewissen Maß an Anstrengung bew ¨altigbar sein m ¨ussen. Kontinuierliche Misserfolge m ¨ussen vermieden werden. 3.2 Inhalte und Umfang Es wurde versucht, die beschriebenen Aspekte bei den drei hier untersuchten Lehrerfortbildungen anzuwenden. Bei den ersten beiden untersuchten Fortbildungen handelt es sich um eint ¨agige, bei der dritten um eine dreit ¨agige Fortbildung. Die erste Fortbildung, die im November 2016 mit 16 Personen stattfand, beinhaltete den Einsatz von ArduinoMikrocontroller-Boards im Informatikunterricht. Den Fortbildungsteilnehmerinnen und -teilnehmern wurden Arduino-Mikrocontroller-Boards vorgestellt und sie sollten selbstst¨andig eine im Unterricht einsetzbare Unterrichtsreihe als Lernende bearbeiten. Die zweite Fortbildung mit f ¨unf Teilnehmerinnen und Teilnehmern im Januar 2017 war eine schulinterne Lehrerfortbildung f ¨ur eine Oberschule. Hier ging es um die Einf ¨uhrung in den Themenbereich automatisierte Prozesse mit Lego Mindstorms Robotern in der Sekundarstufe I. Der Kurs f ¨uhrte in die Grundlagen der Robotik sowie die graphische Programmierumgebung von Lego ein. Die dritte Fortbildung mit 20 Personen war eine dreit ¨agige Fortbildung, wobei jeder Tag seinen thematischen Schwerpunkt hatte. Am ersten Tag ging es um140 Claudia Hildebrandtii “proceedings” — 2017/9/17 — 20:19 — page 141 — #141 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 5 das Lernfeld algorithmisches Probleml ¨osen, was mithilfe von Scratch n ¨aher beleuchtet wurde. Am zweiten Tag r ¨uckte das Lernfeld Daten und ihre Spuren (Aufbau von Netzwerken mit Schwerpunkt Internet, Datenaustausch in Netzwerken, Kennenlernen von Verschl¨usselungsverfahren) in den Fokus. Den Abschluss am dritten Tag bildete der Bereich automatisierte Prozesse ( ¨ahnlich durchgef ¨uhrt wie die zweite Fortbildung im Januar). Alle Fortbildungen hatten gemeinsam, dass sie einen hohen praktischen Anteil zum Ausprobieren von digital zur Verf ¨ugung stehendem Unterrichtsmaterial hatten. Dar ¨uber hinaus gab es immer wieder kurze Theoriephasen und am Ende wurde der Bezug zum nieders ¨achsischen Kerncurriculum Informatik f ¨ur die Schuljahrg ¨ange 5-10 (KC) hergestellt. Damit sollte den Lehrkr ¨aften veranschaulicht werden, wie viel sie eigentlich schon gelernt haben, um den Anforderungen, die das KC an sie stellt, problemlos gerecht zu werden. Dar ¨uber hinaus wird in den untersuchten Fortbildungen den Lehrkr ¨aften ein umfangreiches digitales Paket von Unterrichtsmaterialien zur Verf ¨ugung gestellt, damit sie die M ¨oglichkeit haben, ihre Kompetenzen in Heimarbeit auszubauen und auch keine Scheu davor haben, das neu Gelernte trotz mangelnder Erfahrung im Unterricht einzusetzen. 4 Forschungsfragen und Deﬁnitionen Unter Einbeziehung der Ergebnisse aus den Kapiteln 2 und 3 sowohl in Bezug auf die Deﬁnition der zu messenden Konstrukte als auch in Bezug auf die mangelnden Forschungsergebnisse zu den Einﬂussfaktoren auf die Lehrerselbstwirksamkeit, werden folgende Forschungsfragen gestellt: 1. Inwiefern ver ¨andert sich die individuelle informatikspeziﬁsche Lehrerselbstwirksamkeitserwartung im Allgemeinen bzw. jeweils bezogen auf Teile der Lernfelder algorithmisches Probleml ¨osen, Daten und ihre Spuren sowie automatisierte Prozesse im Laufe der untersuchten Fortbildung? 2. Inwiefern h ¨angen die unterschiedlichen informatikspeziﬁschen Lehrerselbstwirksamkeitserwartungen nach der Fortbildung von der Qualit ¨at der Fortbildung ab? Die Grundlage der folgenden Deﬁnitionen bildet das bereits existierende Konstrukt der individuellen Lehrerselbstwirksamkeitserwartung. Im Sinne Banduras versteht man unter derindividuellen Selbstwirksamkeit von Lehrkr ¨aften die¨Uberzeugung einer Lehrkraft, mit ihren F ¨ahigkeiten und Ressourcen eine herausfordernde beruﬂiche Anforderungssituation zu meistern. Zum Beispiel basiert die F ¨ahigkeit, Lernumgebungen zu schaffen, die die kognitiven Kompetenzen der Lernenden entwickeln, unter anderem auch auf der Lehrerselbstwirksamkeit [Ba97, S. 240]. Die Entwicklung der Skala zur Lehrerselbstwirksamkeitserwartung erfolgte bereits von Schwarzer und Jerusalem [SJ99, S. 60]. Dieses Konstrukt wird weiter speziﬁziert und konkret auf den Bildungsbeitrag des Faches Informatik bezogen [Ni14]. Es wird die individuelle informatikspeziﬁsche Lehrerselbstwirksamkeitserwartungsskala entwickelt. Mithilfe eines kompakten Messinstruments soll die informatikspeziﬁsche Selbstwirksamkeit der Lehrer erhoben werden. Beispielsweise wird Folgendes abgefragt: Ich weiß, dass mein Informatikunterricht Sch ¨uler zum reﬂektierten und verantwortungsbewussten Umgang mit Informatiksystemen bef ¨ahigt. Es ﬁndenMit dem Glauben Berge versetzen ... 141ii “proceedings” — 2017/9/17 — 20:19 — page 142 — #142 ii i ii idie Aspekte Ber ¨ucksichtigung, die das Fach Informatik zum Bildungsbeitrag der allgemeinbildenden Schulen beitragen kann. Die Sch ¨ulerinnen und Sch ¨uler sollen ein gewisses Grundwissen erwerben und anwenden, um reﬂektierte und verantwortungsbewusste Entscheidungen treffen zu k ¨onnen. Die dar ¨uber hinaus entwickelte informatikspeziﬁsche Lehrerselbstwirksamkeitserwartungsskala jeweils bezogen auf die Lernfelder algorithmisches Probleml ¨osen, Daten und ihre Spuren sowie automatisierte Prozesse beinhaltet die ¨Uberzeugungen einer Lehrkraft, mit ihren F ¨ahigkeiten und Ressourcen eine herausfordernde beruﬂiche Anforderungssituation speziell bezogen auf einen abgegrenzten Themenbereich zu meistern. Dazu wurden die Kompetenzanforderungen der verschiedenen Bereiche im bereits erw ¨ahnten nieders¨achsischen Kerncurriculum [Ni14] untersucht und als Items formuliert. Dabei ﬁnden allerdings nicht alle Kompetenzen, die mit einem Lernfeld entwickelt werden sollen, Ber¨ucksichtigung, sondern lediglich die Kompetenzen, die mithilfe der Inhalte der jeweiligen Lehrerfortbildungen entwickelt und gef ¨ordert werden k ¨onnen. Schließlich ist noch die von den Lehrkr ¨aften empfundene Qualit ¨at der Fortbildung von Bedeutung. Hier sollen sich die Quellen der Selbstwirksamkeitsentwicklung widerspiegeln (siehe Kapitel 2). Mithilfe dieses Konstrukts sollen in kompakter Form zum Beispiel Aussagen zur Angemessenheit der Fortbildungsziele, ¨uber das Theorie-Praxis-Verh ¨altis (enactive master experience), die produktive Zusammenarbeit mit Kolleginnen und Kollegen (in Teilen vicarious experiences), ¨uber das Engagement der Fortbilder (in Teilen verbal persuasion) und ¨uber die vorherrschende Atmosph ¨are (physiological and affective states) get¨atigt werden. Eine ¨Ubersicht ¨uber die Konstrukte, die dazugeh ¨orige Anzahl der Items, die Reliabilit ¨aten der Skalen (Cronbachs Alpha) sowie Beispielitems sind in Tabelle 1 zu ﬁnden. 5 Forschungsmethode An den Umfragen zu den in Kapitel 3 beschriebenen Fortbildungen nahmen insgesamt 41 Lehrkr ¨afte (12 Frauen, 29 M ¨anner) teil. Frageb ¨ogen wurden zur Datenerhebung vor (zum Zeitpunkt t 0) bzw. nach der jeweiligen Fortbildung bzw. des jeweiligen Fortbildungstages (zum Zeitpunkt t 1) erhoben. Die meisten der teilnehmenden Lehrkr ¨afte gaben an, sich Informatik selbst beigebracht oder durch Fortbildungen Qualiﬁkationen erlangt zu haben. Lediglich sechs Personen hatten Informatik als Erstoder Zweitfach oder als Erweiterungsfach studiert. Die Lehrerinnen und Lehrer notierten, zwischen 26 und 63 Jahre alt zu sein. Drei Lehrkr ¨afte waren am Gymnasium oder an einer Schule mit gymnasialem Angebot t¨atig, alle anderen Lehrkr ¨afte arbeiteten an Kooperativen Gesamtschulen, Realschulen, Hauptschulen, aber vor allem an Oberschulen (28 Lehrkr ¨afte). Die Untersuchung der im letzten Kapitel vorgestellten Konstrukte erfolgte anhand von Items. Die Antwortskalen der Items waren sechsstuﬁg, von”1 = trifft gar nicht zu“ bis ”6 = trifft v ¨ollig zu“ (Likert-Skala). Das bedeutet, dass die Lehrkr ¨afte jeweils nach dem Grad ihrer Zustimmung bzw. Ablehnung zu den Items befragt wurden. Antworten auf einer Likert-Skala sind ordinalbeziehungsweise rangskaliert. Da den Umfragenteilnehmerinnen und -teilnehmern die verschiedenen Antwortm ¨oglichkeiten durch eine ¨aquidistante142 Claudia Hildebrandtii “proceedings” — 2017/9/17 — 20:19 — page 143 — #143 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 7 Skala visualisiert wurden, wird im Folgenden das Intervallskalenniveau verwendet. Die Ergebnisse werden dadurch nur unwesentlich”verf¨alscht“ ([HSE10, S. 67], [Al78]). Tabelle 1 zeigt die Konstrukte, Beispielitems und die Cronbachs Alpha Werte. Bei den Konstrukten, bei denen die Werte f ¨ur Cronbachs Alpha ¨uber 0,7 liegen, ist davon auszugehen, dass die jeweilige Gruppe von Test-Items als Messung einer einzelnen Variablen (hier der einzelnen Konstrukte) angesehen werden k ¨onnen. Da bei der Lehrerumfrage, bei der die informatikspeziﬁsche Lehrerselbstwirksamkeitserwartung bezogen auf das Lernfeld algorithmisches Probleml ¨osen erhoben wurde, lediglich 19 g ¨ultige Datens ¨atze vorhanden sind, ist ein Wert f ¨ur Cronbachs Alpha von 0,628 gerade noch so akzeptabel. ¨Ahnlich verh ¨alt es sich mit dem Cronbachs Alpha Wert vom Konstrukt Qualit ¨at der Fortbildung bezogen auf das Lernfeld Daten und ihre Spuren. Dort sind 17 g ¨ultige Datens ¨atze zu ﬁnden. Konstrukt nBeispielitem a individuelle informatikspeziﬁsche Lehrerselbstwirksamkeitserwartung (LSWE)8 Ich bin in der Lage, bei Sch ¨ulern ein grundlegendes Verst ¨andnis von der Informatik zu entwickeln.t0: 0,913 t1: 0,882 informatikspeziﬁsche LSWE (algorithmisches Probleml¨osen)5 Ich weiß, dass ich es schaffe, den Lernenden die Kompetenz zu vermitteln, eindeutige Anweisungen als ausf ¨uhrbares Programm zu implementieren.t0: 0,795 t1: 0,628 informatikspeziﬁsche LSWE (Daten und ihre Spuren)7 Ich bin in der Lage, bei Sch ¨ulern ein Verst ¨andnis f¨ur die dem Internet zugrundeliegenden technischen Strukturen und Kommunikationswege zu entwickeln.t0: 0,878 t1: 0,839 informatikspeziﬁsche LSWE (automatisierte Prozesse)5 Ich bin mir sicher, dass ich auf individuelle Probleme der Sch ¨uler im Bereich automatisierte Prozesse gut eingehen kann.t0: 0,884 t1: 0,876 Qualit ¨at der Fortbildung 6 Das Verh ¨altnis von Theorieund Praxisanteilen wurde angemessen gew ¨ahlt. algorith. Probleml ¨osen: t1: 0,760 Daten und ihre Spuren: t1: 0,689 automatisierte Prozesse: t1: 0,956 Tab. 1: Die Merkmale (Anzahl der Items n, Cronbachs Alpha a) der erfassten Konstrukte im ¨Uberblick 6 Ergebnisse 6.1 Forschungsfrage 1 Zur Untersuchung der ersten Forschungsfrage Inwiefern ver ¨andert sich die individuelle informatikspeziﬁsche Lehrerselbstwirksamkeitserwartung im Allgemeinen bzw. jeweils bezogen auf Teile der Lernfelder algorithmisches Probleml ¨osen, Daten und ihre Spuren sowie automatisierte Prozesse im Laufe der untersuchten Fortbildung? werden die Konstrukte individuelle informatikspeziﬁsche Lehrerselbstwirksamkeitserwartung sowie die informatikspeziﬁsche Lehrerselbstwirksamkeitserwartung jeweils bezogen auf das algorithmischeMit dem Glauben Berge versetzen ... 143ii “proceedings” — 2017/9/17 — 20:19 — page 144 — #144 ii i ii iProbleml ¨osen, Daten und ihre Spuren und automatisierte Prozesse zu den Erhebungszeitpunkten t 0und t 1untersucht. Die Skalenmittelwerte und Standardabweichungen bez ¨uglich dieser Konstrukte sind der Tabelle 2 zu entnehmen. Man erkennt, dass die Skalenmittelwerte der jeweiligen Selbstwirksamkeiten vor den jeweiligen Fortbildungen ungef ¨ahr bei vier auf einer Skala von eins bis sechs liegen. Das heißt, es herrscht eine zwar nicht sehr hohe, aber eine gewisse positive Lehrerselbstwirksamkeit vor. Im Bereich des algorithmischen Probleml ¨osens ist diese am geringsten ausgepr ¨agt, wohingegen die allgemein gehaltene individuelle informatikspeziﬁsche Lehrerselbstwirksamkeitserwartung zu Beginn der Fortbildungen am gr ¨oßten ist. Das positive Resultat dieser Untersuchung ist die TatsaKonstrukt m0 m1 m1-m0 Wilcoxon-Test (p-Wert) individuelle informatikspeziﬁsche LSWE4,21 (s⇡0,87)4,94 (s⇡0,55)+0,73 0,000 LSWE (algorithmisches Probleml ¨osen)3,98 (s⇡1,03)4,49 (s⇡0,75)+0,51 0,104 LSWE (Daten und ihre Spuren) 4,22 (s⇡0,88)4,85 (s⇡0,62)+0,63 0,006 LSWE (automatisierte Prozesse)4,10 (s⇡1,08)4,66 (s⇡0,86)+0,56 0,002 Qualit ¨at der Fortbildung (algorithmisches Probleml ¨osen)5,31 (s⇡0,44)Qualit ¨at der Fortbildung (Daten und ihre Spuren)5,45 (s⇡0,45)Qualit ¨at der Fortbildung (automatisierte Prozesse)5,57 (s⇡0,50)Tab. 2: Skalenmittelwerte mund Standardabweichungen sder Konstrukte che, dass die Selbstwirksamkeit in allen Bereichen w ¨ahrend der Fortbildung zugenommen hat. Betrachtet man zus ¨atzlich noch die Ergebnisse des nichtparametrischen zweiseitigen Wilcoxon-Tests, so kann man folgern, dass die Unterschiede der Skalenmittelwerte vor und nach der Lehrerfortbildung bis auf den Bereich des algorithmischen Probleml ¨osens signiﬁkant sind (p <0,05). Im Bereich des algorithmischen Probleml ¨osens ist ganz knapp keine statistische Signiﬁkanz feststellbar. Weitere Untersuchungen werden zeigen, ob es eventuell doch eine statistische Signiﬁkanz gibt. 6.2 Forschungsfrage 2 Inwiefern h ¨angen die unterschiedlichen informatikspeziﬁschen Lehrerselbstwirksamkeitserwartungen nach der Fortbildung von der Qualit ¨at der Fortbildung ab? stellt die zweite Forschungsfrage dar. Zun ¨achst kann man Tabelle 2 entnehmen, dass die Qualit ¨at der Fortbildungen von Lehrkr ¨aften im Durchschnitt mit 5,44 auf einer Skala von eins bis sechs sehr hoch bewertet wurde. Dar ¨uber hinaus zeigen sich zum Erhebungszeitpunkt t 1, also jeweils nach den Fortbildungen, statistisch starke bis sehr starke Zusammenh ¨ange zwischen der informatikspeziﬁschen Lehrerselbstwirksamkeitserwartung aller drei hier betrachteten144 Claudia Hildebrandtii “proceedings” — 2017/9/17 — 20:19 — page 145 — #145 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 9 Lernfelder mit der jeweils empfundenen Qualit ¨at der Fortbildungen (siehe Tabelle 3). Den Kommentaren der Lehrkr ¨afte kann entnommen werden, dass besonders positiv der sehr hohe Praxisanteil und das gut aufbereitete, sch ¨ulergerechte, digitale Unterrichtsmaterial hervorgehoben wurden. Lediglich einer Lehrkraft war die Fortbildung nicht tiefgr ¨undig genug und nur sehr vereinzelt wurde mitgeteilt, dass Teile der Fortbildungen zu einer ¨Uberforderung gef ¨uhrt h ¨atten, da das Vorgehen nicht kleinschrittig genug gewesen sein sollte. Welche Richtung dieser Zusammenhang hat, kann man aus dem Spearmans Roh Korrelationskoefﬁzienten nicht ablesen. Um das herauszuﬁnden, w ¨aren weitere Untersuchungen notwendig. Qualit ¨at der Fortbildung LSWE (algorithmisches Probleml ¨osen) t 1 0,801** LSWE (Daten und ihre Spuren) t 1 0,650** LSWE (automatisierte Prozesse) t 1 0,681** Tab. 3: Korrelationen (Spearmans Roh, **p <0,01) 7 Diskussion und Ausblick Aufgrund der positiven Untersuchungsergebnisse l ¨asst sich vermuten, dass die zeitliche Struktur der Fortbildungen, das Verh ¨altnis der Theorieund Praxisanteile, das vorbereitete Material sowie der Umgang mit den Kolleginnen und Kollegen und die Vermittlung der Inhalte der Mehrzahl der teilgenommenen Lehrkr ¨aften zugesagt hat. In dieser angenehmen Lernatmosph ¨are war es m ¨oglich, die informatikspeziﬁsche Lehrerselbstwirksamkeit deutlich zu steigern. Es ist zu vermuten, dass die hohen Praxisanteile, die mehrfach lobend in den Kommentarfelder des Fragebogens erw ¨ahnt wurden, einen großen Teil zu dieser positiven Entwicklung beigetragen haben. Zusammenfassend l ¨asst sich festhalten, dass sich die informatikspeziﬁsche Lehrerselbstwirksamkeit der Informatiklehrkr ¨afte bis auf im Bereich des algorithmischen Probleml ¨osens signiﬁkant erh ¨oht hat. Damit ist, wenn man die Ergebnisse erfolgter Untersuchungen ber ¨ucksichtigt (siehe Kapitel 2), davon auszugehen, dass damit auch ein St ¨uck weit die Qualit ¨at des Informatikunterrichts steigt. Lernumgebungen zu verschiedensten Lernfeldern der Informatik k ¨onnen geschaffen werden, die die kognitiven Kompetenzen der Sch¨ulerinnen und Sch ¨uler entwickeln, f ¨ordern und fordern. Mithilfe des den Lehrkr ¨aften zur Verf ¨ugung gestellten Unterrichtsmaterials und der entsprechenden positiven Selbstwirksamkeitserwartung ist dieses Ziel in der Praxis umsetzbar. Bei den beschriebenen Ergebnissen muss man allerdings beachten, dass sie bisher auf einer Stichprobe von 41 Personen beruhen. Weitere Datenerhebungen auch in Kontrollgruppen sind notwendig. Dar¨uber hinaus ist nach einem gewissen Zeitraum, z.B. nach ein bis zwei Jahren, zu untersuchen, ob die Fortbildungen nachhaltig die Lehrerselbstwirksamkeit und die Qualit ¨at des Informatikunterrichts positiv beeinﬂusst haben. Damit sich Fortbildungsmaßnahmen in einer Ver ¨anderung des Unterrichts niederschlagen, sollte in Zukunft vermehrt dar ¨uber nachgedacht werden, mehrt ¨agige Fortbildungen anzubieten, damit die Lehrkr ¨afte Vorstellungen von den verschiedensten Bereichen der Infor-Mit dem Glauben Berge versetzen ... 145ii “proceedings” — 2017/9/17 — 20:19 — page 146 — #146 ii i ii imatik bekommen und selbst die Erfahrungen sammeln, wie sie diese Lernfelder im praktischen Informatikunterricht einbringen k ¨onnen. Dar ¨uber hinaus hat sich gezeigt, dass es von Vorteil ist, wenn mehrere Kolleginnen und Kollegen einer Schule an ein und derselben Fortbildung teilnehmen k ¨onnen, um die positiven Eindr ¨ucke zusammen in den Schulalltag zu integrieren auch bei auftretenden Widerst ¨anden, die erst gemeinsam ¨uberwunden werden m ¨ussen. In diesem Zusammenhang k ¨onnen weitere Forschungen zu fachgruppenspeziﬁschen Lehrerselbstwirksamkeitserwartungen angestellt werden. Denn,”wenn es einen Glauben gibt, der Berge versetzen kann, so ist es der Glaube an die eigene Kraft“ (Marie Freifrau von Ebner-Eschenbach, 1830 1916). Literaturverzeichnis [Al78] Allerbeck, K. R.: Messniveau und Analyseverfahren Das Problem strittiger Intervallskalen. Zeitschrift f ¨ur Soziologie, (3):199–214, 1978. [Ba77] Bandura, A.: Self-efﬁcacy: Toward a unifying theory of behavioral change. Psychological Review, 84(2):191 – 215, 1977. [Ba95] Bandura, A.: Exercise of personal and collective efﬁcacy in changing societies. In (Bandura, A., Hrsg.): Self-efﬁcacy in Changing Societies. Cambridge University Press, Cambridge, S. 1–45, 1995. [Ba97] Bandura, A.: Self-efﬁcacy: The exercise of control. Freeman, New York, 1997. [GD84] Gibson, S.; Dembo, M. H.: Teacher Efﬁcacy: A Construct Validation. Journal of Educational Psychology, 76(4):569 – 582, 1984. [Ge13] Gebauer, M. M.: Determinanten der Selbstwirksamkeits ¨uberzeugung von Lehrenden. Schulischer Berufsalltag an Gymnasien und Hauptschulen. Springer VS, Wiesbaden, 2013. [HPK13] Holzberger, D.; Philipp, A.; Kunter, M.: How Teachers’ Self-Efﬁcacy Is Related to Instructional Quality: A Longitudinal Analysis. Journal of Educational Psychology, 105(3):774 – 786, 2013. [HSE10] Hussy, W.; Schreier, M.; Echterhoff, G.: Forschungsmethoden in Psychologie und Sozialwissenschaften. Springer, Berlin, 2010. [Ni14] Nieders ¨achsisches Kultusministerium (Hrsg.): Kerncurriculum f ¨ur die Schulformen des Sekundarbereichs I Schuljahrg ¨ange 5 10 Informatik, Niedersachsen. Unidruck, Hannover, 2014. [SJ99] Schwarzer, R.; Jerusalem, M.: Skalen zur Erfassung von Lehrerund Sch ¨ulermerkmalen. Dokumentation der psychometrischen Verfahren im Rahmen der Wissenschaftlichen Begleitung des Modellversuchs Selbstwirksame Schulen. Berlin, 1999. [SS00] Schmitz, G. S.; Schwarzer, R.: Selbstwirksamkeitserwartung von Lehrern: L ¨angsschnittbefunde mit einem neuen Instrument. Zeitschrift f ¨ur P¨adagogische Psychologie, 14:12 – 25, 2000. [ZK16] Zee, M.; Koomen, H. M. Y.: Teacher Self-Efﬁcacy and Its Effects on Classroom Processes, Student Academic Adjustment, and Teacher Well-Being: A Synthesis of 40 Years of Research. Review of Educational Research, 86(4):981 – 1015, 2016.146 Claudia Hildebrandtii “proceedings” — 2017/9/17 — 20:19 — page 147 — #147 ii i ii i Ein gamebasierter Ansatz zum Programmierunterricht in  der Lehrer innenund Lehrer bildung  Nico  Steinbach , Eckart Zitzler     Abstract:  Mit dem Lehrplan 21 hält in den deutsch und mehrsprachigen Kantonen der Schweiz  der Themenbereich Informatik sowie die Kompetenzorientierung Einzug in die Volksschule.  Dadurch ergeben sich neue Herausforderungen für die Schule, den Unterricht sowie die Aus und  Weiterbildung von Lehrpersonen.  Zudem gibt es für diesen Themenbereich derze it keine  offiziellen Lehrmittel. Die pädagogischen Hochschulen stehen vor der Aufgabe, die aktiven  Lehrp ersonen, neben anderen Lehrplan -21-Weiterbildungen, für den Informatikunterricht zu  befähigen.   In diesem Zusammenh ang gilt es ein didaktisches Konzept zu entwerfen, welches den folgenden  Anforderungen gerecht wird: 1) Einen motivierenden und spielerischen Zugang zu  Informatikkonzepten zu ermöglichen 2) Die Heterogenität der Teilnehmenden hinsichtlich des  Vorwissens un d der Zielstufe zu berücksichtigen, 3) Die Erwachsenenbildung und den  Schulunterricht gemeinsam zu denken, 4) Den Bezug zu anderen Fächer n aufzuzeigen.   Der vorliegende Beitrag beschreibt die Entwicklung und Durchführung von kompetenzorientierten  Weiterbild ungen zum Themenfeld Programmieren im Kanton Bern . Im Zentrum des Ansatzes  steht ein Jump’n Run -Computerspiel, welches blockbasiert entwickelt und individuell ausgestaltet  werden kann.   Keywords: Computerspiel, Lehrer innen und Lehrer bildung, Programmierunt erricht, Lehrplan  21  1 Einleitung   Mit dem Projekt Lehrplan 21 wurde in der Schweiz im Zeitraum 2010 -2015 ein  gemeinsamer Lehrplan für die 21 deutsch und mehrsprachigen Kantone entwickelt mit  der Absicht, die Ziele der Volksschule zu harmonisieren. Eine wesentliche Neuerung ist,  dass die I nhalte kompetenzorientiert formuliert und auf Zyklen verteilt sind (Zyklus 1 =  Kindergarten bis zweite Klasse; Zyklus 2 = dritte bis sechste Klasse; Zyklus 3 = siebte  bis neunte Klasse). Des Weiteren wurde erstmalig die Informatik in allen Zyklen  verankert , wobei auch die Bezüge zu anderen Fächern thematisiert werden. Sie umfasst  neben reinen Anwendungskompetenzen drei Kompetenzen zu den Themenfeldern  Datenstrukturen, Algorithmen und Informatiks ystemen, die jeweils in mehrere n  Kompetenzstufen ausdifferenzie rt sind. Je nach  Kanton sind separate Zeitgefäß e hierfür  vorgesehen, die zudem vier Kompetenzen  im Medienbereich  umfassen.  Im Kanton Bern   handelt es sich um jeweils eine Wochenlektion im 5., 6., 7. und 9. Schuljahr, deren  Umsetzung im Schuljahr 2018/ 19 beg innt.  Da derzeit keine entsprechenden Informatik -Lehrmittel zur Verfügung stehen und den   meisten  im Berufsfeld  tätigen Lehrpersonen sowohl die  fachliche n als auch d ie I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 147ii “proceedings” — 2017/9/17 — 20:19 — page 148 — #148 ii i ii i fachdidaktische n Hintergrü nde fehlen, stehen die Schulen vor großen   Herausforderungen. Fü r die Pädagogischen Hochschulen heißt  das, eine große  Anzahl  von Lehrerinnen und Lehrer n in kurzer Zeit – im Kanton Bern  sind es gut 750 Personen   – innerhalb  von drei Jahren  für den Informatikunte rricht vorzubereiten , neben den  anderen Weiterbildungen  im Kontext des Lehrplan 21. Dabei ergeben sich diverse  Frage n, die sich bei der Entwicklung von Weiterbildungsangeboten stellen: 1. Wie kann  der Spanne zwischen keinem Vorwissen und bereits eigener Unterrichtserfahrung  begegnet werden?; 2. Wie kann das zu era rbeitende Konzept inklusive Material  aufbereitet werden, damit  es sowohl für die Lehrer innen und Lehrer bildung als auch für  den Unterricht genutzt werden kann?; 3. Wie kann der Bezug zu anderen Fächern  aufgezeigt und implementiert werden?   An der Pädagogis chen Hochschule Bern  wurde ein einwöchiger Blockkurs für  Volksschullehrpersonen entwickelt, in dem sowohl die Medien als auch die  Informatikkompetenzen behandelt werden. Dieser Beitrag fokussiert die Algorithmik  und diskutiert, wie das Themenfeld der Prog rammierung innerhalb eines Tages in diesen  Blockkurs eingebettet wurde. Im Folgenden wird die Entwicklung eines entsprechenden  didaktischen Konzepts vorgestellt und die Umsetzung im Schulunterricht sowie  in der  Weiterbildung  diskutiert.   1.1 Hintergrund   Im Absc hlussberi cht der Arbeitsgruppe ICT und Medien, die das Modul Medien und  Informatik des Lehrplan 21 ausgearbeitet hat, wird für die Weiterbildung von  amtierenden Lehrpersonen ein Umfang von mindestens 3 ECTS -Punkten (1 ECTS -Punkt  entspricht 30 Stunden) für Primarlehrpersonen bzw. 5 ECTS -Punkten für  Sekundarlehrpersonen empfohlen [ MI15 ]. Aufgrund verschiedener praktischer  Rahmenbedingungen steht den Lehrpersonen jedoch in der Regel wesentlich weniger  Zeit zur Verfügung, um sich im Themenfeld aus und weiterzu bilden.   1.2 Rahmenbedingungen im Kanton Bern   Im Kanton Bern  ist die Weiterbildung zum Modul Medien und Infor matik nicht  obligatorisch. Es liegt in der Verantwortung der Schulleitungen zu bestimmen, welche  Lehrpersonen die spezifischen Lektionen in der 5., 6., 7. und 9. Klasse unterrichten  werden. Weil zudem eine Vielzahl weiterer, obligatorischer Weiterbildungen im Kontext  des Lehrplan 21 absolviert werden müssen, die mit ca. 12 Stunden pro Fach dotiert sind,  sind die zeitlichen Ressourcen  für das Themenfeld Me dien und Informatik  begrenzt . In  Absprache mit der Erziehungsdirektion wurde ein 30 -stündiges, einwöchiges  Weiterbil dungsformat entwickelt, wobei dr ei Tage den Medien -Kompetenzen und zwei  Tage den Informatik -Kompetenzen gewidmet  sind. In diesen Blockwochen  mit knapp 50  Teilnehmenden sind sowohl Primarlehrpersonen (betrifft 5. und 6. Klasse) als auch  Sekund arlehrpersonen (betrifft 7 . und 9. Klasse) weiterzubilden. A ufgrund der 148 Nico Steinbach, Eckart Zitzlerii “proceedings” — 2017/9/17 — 20:19 — page 149 — #149 ii i ii i beschränkten personellen Ressourcen sind die Teilnehmendengruppen gemischt , zudem  bringen die Teilnehmenden sehr unterschiedliche  persönliche Erfahrungen zum  Thema  Medien und Informatik mit.   Aufgrund dieser Rahmenbedingungen ist die Zielsetz ung des Blockkurses vor allem  den  Lehrpersonen die fachlichen Hintergründe zum Modul Medien und Informatik zu  vermitteln, fachdidaktische Ideen aufzuzeigen und Motivation und Interesse für das  Thema zu wecken, damit diese sich selbständig weiter mit dem Thema beschäftigen  können. Insb esondere ergeben sich folgende Anforderungen an das Kurskonzept:  1) Es  kann Teilnehmende unterschiedlichen Vorwissens abholen und ins Thema einführen  beziehungsweise  w eiterführende Themen anbieten; 2) Es ist geeignet für die  Lehrerinnen und Lehrer bildung  als auch den ansch ließenden Einsatz im Unterricht ; 3)  Es zeigt konkrete  Verknüpfu ngen zu anderen Fachbereichen auf ; 4) Es spricht die  Kreativität an und motiviert durch Lebensweltbezug.   Die Entwicklung solcher Materialien und Konzepte obliegt normalerweis e den  kantonalen Lehrmittelverla gen u nd Lehrmittelautoren. Eine Weiterbildung kann sich  dann auf die vorgeschriebenen Lehrmittel beziehen. Zum Zeitpunkt der ersten  Durchführung des Blockkurses lag jedoch kein entsprechendes Lehrmittel vor. Aus  diesem Grun d wurde die Entwicklung eines eigenen Konzepts angestrebt. Im Folgenden  fokussieren wir uns auf den Aspekt des Programmierunter richts – ein Tag im Block  kurs –, der im Lehrplan unter der Kompetenz Algorithmen beschrieben wird: “Die  Schülerinnen und Schüle r können einfache Problemstellungen analysieren, mögliche  Lösungsverfahren beschreiben und in Programmen umsetzen.” [ LP16 ] Die Kompetenz  unterteilt sich in neun Kompetenzstufen , die mehrheitlich im zweiten Zyklus liegen. Die  Frage, mit der sich dieser Beitrag auseinandersetzt , lautet, wie eine eintägige  Weiterbildung zum Thema Programmierung didaktisch konzipiert und umgesetzt werden  kann, so dass die oben aufgeführten Anforderung en erfüllt werden können.   1.3 Einbettu ng  Es existiert eine Vielzahl von Ansätzen und entsprechender Erfahrung zum  Programmierunterricht in der Schule. Neben dem Programmieren ohne Computer  können vor allem die textbasierte und die visuelle Programmierung genan nt werden. Die  textbasierte Programmierung blickt auf eine langjährige Debatte nach der Wahl einer  geeigneten Programmierspra che, nebst Programmierparadigma  zurück. Das  Schreiben  von textbasie rten Programmen kann  Schülerinnen und Schülern Schwierigkeiten   bereiten , obwohl die Motivation und Fähigkeit zum algorithmischen Problemlösen  vorhanden ist [MMS11]. Eine mögliche Konsequenz ist , dass das Interesse an der  Informatik sinkt [Hu00]. Als Argumente gegen die textbasierte Programmierung werden  unter anderem a ufgeführt: Die  Kodierung des Programmcodes in  Textform ist nicht  intuitiv [MMS11]  und Menschen können Bilder viel früher verstehen als Text [Sc01].  Für die Förderung algorithmischen Denkens bietet die visuelle Programmierung für  Anfänger  Vorteile . Sie erla ubt es , sich schneller auf den Inhalt zu fokussieren  und Ein gamebasierter Ansatz zum Programmierunterricht in der Lehrerbildung 149ii “proceedings” — 2017/9/17 — 20:19 — page 150 — #150 ii i ii i vermeidet Syntaxfehl er [Mo11] .  Mit Scratch  – die offizielle erste Version wurde  2007  veröffentlicht  – existiert eine  solche visuelle Programmierlernumgebung, die sich direkt an Kinder und Jugendliche   richtet, blockbasierte Entwicklung von Programmen ermöglicht und Spiele ins Zentrum  stellt. Neben Weiterentwicklungen (Scratch 2.0, 2013) und Modifikationen  (BYOB/Snap) gibt es auch weit ere Plattformen wie code.org [CO 13], die auf die  Kombination aus Blöc ken und Spielen setzen. M it der Bewegung Hour -of-Code [HO 13]  und prominenter Unterstützung (u.a. Barack Obama, Mark Zuckerberg , Bill Gates)  schaffte  es die Program mierung in die US -Schulen .  Der Einsatz von Spie len, wie er auch bei code.org verfolgt wird,  scheint  vielversprechend. Al lein bis Ende 2015 konnte code.org  über 100 Millionen  Schülerinnen und Schüler auf der ganzen Welt erreichen [US15]. Auch die Bitkom  konnte aufzeigen, dass sich Gaming  in allen  Altersgruppen etabliert hat [BI 15]. Spiele  sind dank bare Vehikel für Lerninhalte [Pr01]. Allerdings sind die zugrundeliegenden  didaktischen Ansätze nur begrenzt auf das oben skizzierte Weiterbildungsszenario  übertragbar.  Die Aufgaben  bei code.org  schränken die Lernenden ein, indem sie die zu  nutzenden Blöcke und damit das Wissen zur Lösung einer Aufgabe vorgeben. Schon  Romeike kritisierte, dass Problemstellungen (Start,  Ziel, Hürde) in der Informatik eher  als Aufgaben (vorgegebenes Wissen und defi nierte Lösung) formuliert werden. Die  Kreativität die der Informatik immanent ist, kommt nicht zur Entfaltung [Ro08].  Zusätzlich erschwert ein solches Setting die Fächerverbindung, da es kaum  Ansatzpunkte gibt, Inhalte anderer Fächer einzubinden.   2 Didaktisc her Ansatz   In diesem Beitrag wird die Idee verfolgt, die Lernenden ein Computerspiel  (weiter)entwickeln zu lassen und so die Kompetenzstufen im Bereich der Algorithmik  abzudecken. Beim Computerspiel handelt es sich um ein einfaches Jump’n -RunComputerspiel , in dem eine Spielfigur von links nach rechts durch Spielumgebungen  geführt werden kann . Eine Grundfunktionalität soll zur Verfügung gestellt werden, die  dann von den Lernenden schrittweise erweitert wird, z. B. indem die Spielfigur neue  Fähigkeiten erhäl t oder die Spielumgebung ausgebaut wird.   Konzept.  Das didakt ische Konzept, das an der PH Bern  entwickelt wurde, basiert auf  drei Eckpfeilern:   1. Eine blockbasierte Programmierumgebung, die einen möglichst einfachen  Zugang zum Programmieren ermöglich t, den Aust ausch mit anderen  Programmierenden fördert, frei verfügbar ist und zudem erlaubt, Multimedia Inhalt e niederschwellig einzubinden; L etzteres war uns wichtig, um die  inhaltliche Anbindung an andere Fächer zu erleichtern.  150 Nico Steinbach, Eckart Zitzlerii “proceedings” — 2017/9/17 — 20:19 — page 151 — #151 ii i ii i 2. Ein erweiterbares Programmgerüst, wel ches die Grundfunktionalität des  Computerspiels implementiert, gleichzeitig aber möglichst schlank gehalten ist,  damit die Lernenden das Spiel erweitern und abändern können. Der Nachteil  eines solchen vorgegebenen Systems ist, dass die Lernenden sich überf ordert  und verloren fühlen können. Für uns stand jedoch aufgrund der Heterogenität  der Lerngruppen im Vordergrund, dass früh sichtbare Erfolgserlebnisse und  zudem sehr offene Aufgabenstellungen möglich sind.   3. Eine interaktive Wegleitung, anhand derer die Le rnenden das Computerspiel  individuell weiterentwickeln können. Sie besteht aus mehreren multimedialen   Aufgabenblättern J edes Aufgabenblatt enthält eine Sequenz von Aufgaben, die  durch Zusatzinformationen (Videos, Texte etc.) und Beispiele angereichert  sind. Die insgesamt neun Aufgabenblätter decken alle Kompetenzstufen im  Bereich Algorithmik ab.     Wir haben uns bewusst dafür entschieden, die Lernenden mit einer vollständigen  Programmierumgebung zu konfrontieren und die Möglichkeiten der Programmierung in  Abhängigkeit der Aufgabenstellung explizit nicht einzuschränken. Des Weiteren folgt  die Konzeption der Aufgabenblätter der Idee der Lernspiral e [Ki13 ]: Anstatt  fundamentale Programmierkonzepte einzeln zu behandeln, werden Konstrukte wie  Anweisungen, bedingte Anweisungen, Schleifen und Variablen in allen  Aufgabenblättern benutzt. Die Lernenden begegnen den elementaren Ideen also immer  wieder, allerdings nimmt die Komplexität der Aufgaben zu. Damit einher geht auch das  Konzept, dass die Aufgabenblätter nicht lin ear, sondern eher baumartig angeordnet sind.   Einzig die zwei ersten Aufgabenblätter sind hintereinander zu bearbeiten, danach können  die Lernenden nach ihren Fähigkeiten und Interessen auswählen.   Implementierung . Als Progr ammierumgebung wurde Scratch [SC 17] gewählt. Scratch  erfüllt die oben beschriebenen Anforderungen, hat allerdings (derzeit) den Nachteil, dass  die Umgebung auf Geräten ohne Flash  nicht einsetzbar ist; diese Einschränkung soll  gemäß  Ankündigung der Scrat ch-Entwickler behoben werden [SC 16]. Das  Programmgerüst, um die Grundfunktionalität des Spiels zu realisieren, umfasst fünf  Funktionen und insgesamt knapp vierzig Einzelanweisungen; es definiert die Spielfigur  sowie dere n Bewegung über die Pfeiltasten und wird in  Abbildung 1  skizziert . Ein gamebasierter Ansatz zum Programmierunterricht in der Lehrerbildung 151ii “proceedings” — 2017/9/17 — 20:19 — page 152 — #152 ii i ii i   Abbi ldung 1: Das Spielfeld  (links)  und das Programmgrundgerüst in Scratch  (rechts)   Die Arbeitsumgebung umfasst drei Einstiegshilfen in Scratch, neun Arbeitsblätter sowie  einen Remixbaum (alle Weiterentwicklungen  unseres  Ursprungprojektes, die öffentlich  sind), die in Form einer Baumstruktur auf einer Webseite verlinkt sind . Die  vollständigen Materialien finden sich unter https://milehrplan.ch/scratch .  Die Arbeitsblätter  werde n on-the-fly aus einem JSON -Format generiert, welches in einer  relationalen Datenbank liegt. Das ermöglicht sowohl eine Ansicht für Schülerinnen und  Schüler ohne Lehrerkommentare, als auch eine weitere Ansicht für Lehrpersonen , zu  erzeugen. Die Arbeitsblät ter setzen sich wie folgt zusammen:  Zwei fundamentale  Arbeitsblätter ( “Der Beginn”, “Lass uns die Welt bunter machen” ) mit denen begonnen  wird. Sie greifen niederschwellig einfache Anweisungen, bedingte Anweisungen sowie  Schleifen auf und dienen dazu , der Spielfigur erste Interaktionen mit ihrer Umgebung zu  ermöglichen, indem sie auf Farben reagiert. Aus den restlichen sieben Arbeitsblättern  kann frei gewählt werden. Die drei fachübergreifenden Arbeitsblätter ( “Level Design”,  “Story Design”, “Sound Design” ) dienen zur Erzeugung von Spielwelten (Bildnerisches  Gestalten), Geschichten und Anleitungen (Deutsch) sowie Hintergrundmusik und  Soundeffekten (Musik). Das erzeugte Material kann über bedingte Anweisungen in das  Computerspiel integriert werden. Vier weite re Arbeitsblätter routinieren die  Verwendung der eingeführten Konzepte und führen neue ein. Es handelt sich um  Variablen ( “Spielelement Sammeln” ), Nachrichten zwischen Objekten ( “Spielelement  Hindernis” ), Ereignisse ( “Spielelement Aktion”) sowie die  Implementierung weiterer  Objekte wie zum Beispiel Gegner mit zufallsbasierten Bewegungspfaden ( “Spielelement  Gegner”).  Abbildung 2 stellt zwei Programmblöcke gegenüber – von einer früheren und einer  152 Nico Steinbach, Eckart Zitzlerii “proceedings” — 2017/9/17 — 20:19 — page 153 — #153 ii i ii i späteren Aufgabe – und vermittelt einen Eindruck vom Anforderungsniveau und der  Komplexitätszunahme. Im linken Programmblock wird der Figur beigebracht, auf  verschiedene Farben zu reagieren und entsprechend einfache Anweisungen auszuführen.  Die Schleife simuliert den Gameloop , der nötig ist, um Interaktionen  bis zum  Programmende am Leben zu erhalten. Im rechten Programmblock wird entschieden, was  mit einem zusätzlichen Objekt (Gegner) passiert, wenn die Variable “LebenVirus” auf  unter 1 fällt. Dieser Programmblock ist nur ein Teil einer möglichen Lösung und  interagiert mit weiteren Blöcken, welche die Variable ändern dürfen und Nachrichten  schicken (nicht im Bild enthalten).     Abbildung 2: Gegenüberstellung zweier P rogrammblöcke unterschiedlichen Niveaus   3 Erfahrungen   Das vorgestellte Konzept wurde einerseit s in Schulklassen getestet und andererseits in  der Weiterbildung eingesetzt.   Der Einsatz im Unterricht fand in vier Klassen des siebten Schuljahres einer  Sekundarschule statt mit je 16 -18 Schülerinnen und Schülern. Die Erprobung dauerte  über sechs Wochen m it je einer Lektion pro Woche . Stellvertretend für die  Klassenlehrperson übernahm ein Mitarbeiter der PHBern  die Rolle der Lehrperson, zwei  weitere Mitarbeiter waren als Beobachter im Klassenraum. Das Ziel der sechs Wochen  war die fachübergreifenden Themen zu  erreichen , da die gesamte Einheit für bis zu 16  Lektionen ausgelegt ist. Im Vorfeld zu  jeder Lektion entschied die Lehrperson, welche  Arbeitsblätter zur Verfügung stehen. Anschließend haben sich die Schülerinnen und  Schüler, meist zu zweit, selbstständig an die Inhalte gewagt.   In der allgemeine n Beobachtung und persönlichen Gesprächen fiel auf, dass das  Computerspiel als Thema von beiden Geschlechtern sehr gut angenommen wurde. Die  Arbeitsblätter wurden in unterschiedlichem Tempo im Pair Programming bearbeitet. Vor  allem schnelle Teams halfen den  anderen mit Hinweisen. Viele Teams haben intuitiv  begonnen , aus den Problemstellungen eigene Projekte zu definieren. Alle Teams hatten  Ein gamebasierter Ansatz zum Programmierunterricht in der Lehrerbildung 153ii “proceedings” — 2017/9/17 — 20:19 — page 154 — #154 ii i ii i völlig ind ividuelle Ergebnisse, durchliefen aber dieselben Konzepte. Auch über die  Unterrichtszeit hinaus gab es zusätzl iches Engagement in den Pause n und in der Freizeit.   Die Lehrperson hat bei Fragen vor allem zwischen den Teams vermittelt und Konzepte  im Plenum zusammengefasst. Am Ende der sechs Wochen wurden die entstandenen  Projekte auf Initiative der Schülerinnen und Schüler abschließend vorgestellt.   Einschränkend war der 45 -Minuten -Rahmen der pro Woche zur Verfügung stand.  In der  Regel benötigten  die Schülerinnen und Schüler  das erste Unterrichtsdrittel,  um am Stand  der letzten Woche anzuknüpfen. Ebenfalls kann es für  die Lehrperson mitunter schwierig  sein, an die unterschiedlichen Projekte und Lernstände anzuknüpfen  nach  einer Woche  Pause zwischen den Lektionen .   In der Lehrer innen und Lehrer bildung  haben bisher 95 Lehrpersonen die Blockwoche  absolviert. An der erste n Blockwoche nahmen 48 Lehrpersonen teil, an der zweiten 47.  Die Teilnehmenden wurden jeweils auf zwei Räume verteilt sowie zwei Dozenten  zugeteilt. Die Kurstage erstreckten sich von 8:30 Uhr bis 17:00 Uhr. Zu Beginn des  Algorithmentages wurden die Teilneh menden in den Räumen in Vierer -Gruppen  aufgeteilt. Anschließend wurde die Relevanz der Informatik für die Gesellschaft und  Schule thematisiert und im Plenum die Vorerfahrung der Teilnehmenden diskutiert ,  bevor die selbstständige Arbeit begann .   Positiv hat  sich gezeigt, d ass die Thematik Computerspiele  entgegen genereller  Vermutungen auch bei Lehrpersonen Anklang findet. Zum einen , weil ihre Schülerinnen  und Schüler oft über Games erzählen und sie motiviert sind, ihnen das Material  vorzustellen. Zum anderen , weil sie Scratch und das Material als kreativ  wahrnehmen  und aktiv gestalten im Gegensatz zu ihrer Vorstellung vom reinen Spielen  kommerzieller  Computerspiele . Selbst Lehrpersonen , die noch nie programmiert haben  und/oder noch nie gespielt haben , nahmen den Ansatz dankend auf. Wie auch bei den  Schülerinnen und Schülern gab es bei den Teilnehmenden unterschiedliche  Arbeitstempi. Sie arbeite ten eben falls im Pair Programming und fi ngen an, eigene  Projekte und kreative Umsetzungen aus den Arbeitsblättern z u generieren. Alle  Teilnehmenden erreich ten gegen Mittag die fächerübergreifenden Themen und nutz ten  den Nachmittag , neue Konzepte in den anderen Arbeitsblättern zu streifen.   Kritisch muss gesagt werden, dass an einem Kurstag keine echte Algorithmik erlern t  werden kann und die Teilnehmenden die meisten Konzepte nur ausprobieren  können.  Die meisten reflektieren das für sich und geben an, sich weiterhin nicht sicher zu fühlen,  das Thema im Unterricht aufzugreifen. Für sie bildet das  Konzept nebst  Material ein en  soliden Ausgangspunkt.   In eine r abschließenden Befragung zu der gesamten Blockwoche wurde der  Kenntnisstand in der Informatik vor und nach der Woche erfragt, siehe Abbildung 3 . 154 Nico Steinbach, Eckart Zitzlerii “proceedings” — 2017/9/17 — 20:19 — page 155 — #155 ii i ii i   Abbildung 3: Kenntnisstand  zur Informatik vor und nach den  Blockwoche n  (Selbsteinschätzung)   Die in Abbildung 3 gezeigten Resultate beziehen sich auf die  beide n Informatiktage der  Woche zu den Themen Algorithmen, Datenstrukturen und Informat iksysteme. Es zeigte   sich nach der Blockwoche , dass  sowohl ein deutlicher Lernzuwachs zu verzeichnen ist ,  als auch  dass sich keine Lehrperson nach der Woche selbst mit einem niedrigen  Kenntnisstand einstuft.   4 Fazit   Das vorliegende d idaktische Konzept ist geeignet um mit heterogenen Gruppen  bestehend aus Lehrpersonen in der Lehrer innen und L ehrer bildung oder Schülerinnen  und Schülern im Unterricht zu arbeiten. Ebenso vermag die Thematik eines  Computerspiels beide Gruppen gleichermaßen anzusprechen und bietet in Verbindung  mit einer visuellen Programmierlernumgebung wie Scratch eine niedrige E instiegshürde  für Programmieranfänger. Zudem eignet sich der Kontext rund um Spiele besonders gut,  um kompetenzorientierte Problemstellungen zu formulieren, verschiedene Lösungswege  zuzulassen und Raum für kreative Weiterentwicklungen zu ermöglichen. Das K onzept  stellt hohe Anforderungen  an Dozierende und Lehrpersonen und setzt voraus, dass sich  Lernende gegenseitig unterstützen können.   Offen bleibt die Frage, wie nachhaltig eine eintägige Einführung in die Algorithmik sein  Ein gamebasierter Ansatz zum Programmierunterricht in der Lehrerbildung 155ii “proceedings” — 2017/9/17 — 20:19 — page 156 — #156 ii i ii i kann, schließlich lässt sich an e inem Tag nur ein Einblick geben . Die Lehrpersonen  gaben an , dass sie sich nach dem Tag nicht sicher fühlen , das Thema zu unterrichten, mit  dem Material und der exemplarischen Durchführung jedoch eine solide Basis zum  Anfangen gegeben ist. Die selbstständig e Auseinandersetzung sowie weitergehende  Weiterbildungsangebote sind eine Voraussetzung , damit das Thema effektiv in den  Schulen unterrichtet werden kann. Erst dann kann sich ein didaktischer Diskurs bilden.   Literaturverzeichnis   [BI15] Gaming hat sich in a llen Altersgruppen etabliert,  https://www.bitkom.org/Presse/Presseinformation/Gaming -hat-sich-in-allen Altersgruppen -etabliert.html , Stand: 14.02.2017   [CO13] Code.org Jeder Schüler sollte die Möglichkeit haben, Informatik zu lernen,  http://code.org , Stand: 14.02. 2017   [Hu00]       Bericht zur Lehrerausbildung Informatik, http://koenigstein.inf.tu      dresden.de/00/humbert2.html , Stand: 14.02.2017   [HO13]    Hour of Code, https://hourofcode.com/de , Stand: 14.02.2017   [Ki13]     Klippert, Heinz, Leitfaden zum Arbeiten mit Lernspiralen, 2013   [LP16 ] Kompetenz Algorithmen im Modullehrplan Medien und Informatik, http://v ef.lehrplan.ch/index.php?code=a|10|0|2|0|2 , Stand: 14.02.2017   [MI15 ] Schlussbe richt der Arbeitsgruppe zu Medien und Informatik im Lehrplan 21 ,  https://www.lehrplan.ch/sites/default/files/Schlussbericht_MI_2015 -0223%20mit%20Anhang_0.pdf , Stand: 14.02.2017   [MMS11 ]  Modro w Eckart , Jens Mönig, Kerstin Strecker, LOG IN Heft Nr. 168,  2011   [Mo11 ] Modrow, Eckart, Visuelle Programmierung: oder: W as lernt man aus Syntaxfehlern?,                               Lecture Notes in Informatics, Proceedings, Volume P -249, 2011   [Pr01]        Prensky , Marc , Digital Game Based Learning, McGraw -Hill, 2001   [Ro08 ] Romeike, Ralf, Krea tivität im Informatikunterricht, Mathematisch Naturwissenschaftliche Fakultät Potsdam, 2008   [SC17]      Scratch imagine, program, share https://scratch.mit.edu , Stand: 14.02.2017   [Sc11]       Schiffer Stefan, Visuelle Programmierung, Grundlagen und Einsatzmöglichkeiten, 2001   [SC16 ] Scratch -Blöcke (Google Blocky und Scratch  Open Source Projekt),  https://scratch.mit.edu/developers , Stand: 14.02.2017   [US15 ] Hour of Code to feature Star Wars: The Force Awakens . In: USA TODAY ,9.  November 2015   156 Nico Steinbach, Eckart Zitzlerii “proceedings” — 2017/9/17 — 20:19 — page 157 — #157 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 11 Empirische Ermittlung der Schlüsselkonzepte des Fachgebiets Datenmanagement Andreas Grillenberger1, Ralf Romeike2 Abstract: Die Aufbereitung neuer Themen für den Unterricht stellt eine wichtige Aufgabe der Informatikdidaktik dar. Diese schließt die Suche nach den zentralen Aspekten mit ein, weswegen bereits verschiedene Kataloge von Ideen, Prinzipien und Konzepten erstellt worden sind, die sich auf einzelne Teilbereiche oder die Informatik im Ganzen beziehen. Das Fachgebiet Datenmanagement und insbesondere dessen in den letzten Jahren hinzugekommene und neu ausgestaltete Aspekte werden jedoch bisher kaum erfasst. Dennoch lässt sich vermuten, dass auch in diesem Gebiet Konzepte mit langfristiger Relevanz existieren. Da Datenmanagement und Kompetenzen aus diesem Bereich heute auch im Alltag immer unverzichtbarer werden, sind eine didaktische Aufbereitung dieses Themenkomplexes und die Fokussierung auf grundlegende Aspekte des Gebiets notwendig. In diesem Beitrag wird daher ein Versuch unternommen, die Ermittlung der Schlüsselkonzepte eines Themenkomplexes zu systematisieren. Die vorgestellte empirische Herangehensweise wird dann auf das Fachgebiet Datenmanagement angewandt. Anhand des resultierenden Modells werden zentrale Aspekte von Datenmanagement für den Informatikunterricht exemplarisch verdeutlicht. Keywords: Datenmanagement; Schlüsselkonzepte; Modell; Ideen; Prinzipien; Praktiken; Unterricht 1 Motivation In der informatikdidaktischen Forschung besteht Einigkeit darüber, dass sich Unterricht nicht an möglicherweise nur kurzzeitig bedeutenden technischen Entwicklungen orientieren sollte, sondern an den grundlegenden und langfristig relevanten Aspekten des Fachs. In den letzten 20 Jahren wurden daher verschiedene Kataloge von Prinzipien, Ideen und Konzepten vorgeschlagen, die die Informatik oder einen ihrer Teilbereiche charakterisieren. Diese können beispielsweise im Rahmen der Aufbereitung neuer Themen für den Unterricht und als Grundlage der Unterrichtsplanung oder der Curriculumsentwicklung gewinnbringend eingesetzt werden. Bekannte Vertreter in der Informatikdidaktik sind beispielsweise die Great Principles of Computing [De03 ] und die Fundamentalen Ideen der Informatik [Sc93 ]. Mit der kontinuierlichen Weiterentwicklung und Ausdi  erenzierung der Informatik geht jedoch oft auch eine Ergänzung oder Neuinterpretation dieser Ideenkataloge einher. So ergänzte beispielsweise Modrow die Fundamentalen Ideen der theoretischen Informatik [Mo03 ] und identiﬁzierte einige Jahre später fundamentale Ideen der Schulinformatik [ MS16 ]. 1Friedrich-Alexander-Universität Erlangen-Nürnberg, Didaktik der Informatik, Martensstr. 3, 91058 Erlangen, andreas.grillenberger@fau.de 2Friedrich-Alexander-Universität Erlangen-Nürnberg, Didaktik der Informatik, Martensstr. 3, 91058 Erlangen, ralf.romeike@fau.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 157ii “proceedings” — 2017/9/17 — 20:19 — page 158 — #158 ii i ii i12 Andreas Grillenberger, Ralf Romeike Das Fachgebiet Datenmanagement wurde bislang noch nicht explizit auf solche Ideen hin untersucht. Gerade im Kontext von Big Data und damit einhergehenden Entwicklungen entstehen jedoch viele neue Themengebiete, die eigene neue Ideen mitbringen. Da diese auch Einzug in den Alltag halten, werden Kompetenzen in diesem Bereich nicht nur für Informatiker, sondern auch für den alltäglichen Umgang mit Daten immer wichtiger [GR14b ]. Als Grundlage für die Aufbereitung des Fachgebiets für den Informatikunterricht ist es daher essentiell, dessen Schlüsselkonzepte zu ermitteln. Im Folgenden werden wir daher einen empirischen Ansatz zur systematischen Ermittlung vorstellen und das Modell der Schlüsselkonzepte des Datenmanagements, das wir bei der Anwendung des Ansatzes auf dieses Fachgebiet gewinnen konnten, vorstellen. 2 Datenmanagement in der Informatik und der Informatikdidaktik In den letzten Jahren wurde der Themenbereich Datenbanken um eine Vielzahl neuer Themen, Methoden und Konzepte erweitert und hat sich zum Fachgebiet Datenmanagement weiterentwickelt. Ein zentrales Thema ist dabei Big Data , die Verwaltung immer größerer Datenbestände mit unterschiedlichsten Arten von Daten, die schnell verarbeitet werden müssen. Mit der Entstehung neuer Anforderungen an Datenspeicher, wie Partitionstoleranz als Basis der verteilten Datenspeicherung, und mit der Zunahme korrelationsbasierter Datenanalysen (Data Mining ) zeigen sich Auswirkungen auf Datenbanken und andere Datenmanagementsysteme: Während beispielsweise bei klassischen Datenbanken die langfristige konsistente Datenspeicherung im Vordergrund steht, legen moderne NoSQL-Datenbanken den Fokus aufhohe Verfügbarkeit undverteilte Datenspeicherung , oft unter Vernachlässigung der Konsistenz. Gleichzeitig setzen sich neue Forschungsrichtungen im Datenmanagement insbesondere mit Datenqualität ,Metadaten oder neuen Datenmanagementsystemen wie In-Memory-Datenbanken oder Datenstromsystemen auseinander. Diese Innovationen haben unmittelbare Auswirkungen auf den Umgang mit Informatiksystemen, z. B. im Zusammenhang mit Cloudspeichern ,Synchronisation persönlicher Daten über verschiedene Endgeräte hinweg, Webdatenbanken oder Metadaten . Obwohl die für den Umgang mit solchen Systemen nötigen Kompetenzen insbesondere im Informatikunterricht vermittelt werden könnten, wurden verwandte Themen in der informatikdidaktischen Forschung seit der Fundierung des Datenbankunterrichts in den 1990er Jahren kaum thematisiert. Entsprechend wurden bisher wenige Unterrichtsansätze zu moderneren Datenmanagementthemen verö  entlicht. Damit zeigt sich eine Lücke zwischen dem Stand der Forschung im Fachgebiet und dem aktuellen Schulunterricht [ GR14a ]: Während sich der Informatikunterricht insbesondere auf das Thema Datenbanken konzentriert, werden oben genannte Themen nur marginal betrachtet. Darüber hinaus können und sollten Schüler jedoch auch verschiedene Schlüsselkompetenzen erwerben, die für den Umgang mit Daten und Datenmanagementsystemen heute essentiell sind [ GR14b ]. Als praktisches Unterrichtsbeispiel haben wir das Thema Datenstromsysteme bereits in dieser Hinsicht aufbereitet [GR15a ,GR15b ]. Für die weitere Erschließung des Fachgebiets ist es notwendig, dieses systematisch aufzuarbeiten und die zugrunde liegenden Konzepte zu ermitteln. Da diese158 Andreas Grillenberger, Ralf Romeikeii “proceedings” — 2017/9/17 — 20:19 — page 159 — #159 ii i ii iEmpirische Ermittlung der Schlüsselkonzepte des Fachgebiets Datenmanagement 13 einen Zugang zum gesamten Fachgebiet darstellen und ein Verständnis der zentralen Themen und Ideen ermöglichen, bezeichnen wir sie im Folgenden als Schlüsselkonzepte . 3 Konzepte, Prinzipien und fundamentale Ideen der Informatik Die Strukturierung eines Fachgebiets durch Ermittlung der zugrunde liegenden Ideen, Konzepte oder Prinzipien ist insbesondere in den naturwissenschaftlichen Fächern und in der Informatik ein anerkannter Ansatz, der genutzt wird, um eine Wissenschaftsdisziplin oder einen Teil davon für den Schulunterricht zugänglich zu machen. In der Informatikdidaktik sind dabei insbesondere die Fundamentalen Ideen der Informatik zu nennen, die Schwill ausgehend vom Softwareentwicklungsprozess, dessen Erforschung er als eine der grundlegenden Aufgaben der Informatik erachtet, identiﬁziert hat [ Sc93 ]. Dazu hat er vier (später fünf) Kriterien deﬁniert: Eine fundamentale Idee soll einerseits in der Breite der Informatik vertreten sein („Horizontalkriterium“) und sowohl in der Vergangenheit aber auch in der erwarteten Zukunft Bedeutung haben („Zeitkriterium“). Gleichzeitig soll sie jedoch auch einen Bezug zu Denken und Alltag haben („Sinnkriterium“), auf verschiedenen kognitiven Niveaus vermittelbar sein („Vertikalkriterium“) und zum Erreichen eines idealisierten aber meist unerreichbaren Ziels dienen (“Zielkriterium”). Modrow hat den Ansatz der fundamentalen Ideen aufgegri  en und auf die Theoretische Informatik angewendet [ Mo03 ]. Einige Jahre später haben Modrow und Strecker den Ideenkatalog von Schwill erneut herangezogen und auf acht fundamentale Ideen der Schulinformatik reduziert [ MS16 ]. Denning hingegen charakterisiert mit den Great Principles of Computing die Informatik aus fachlicher Sicht anhand von Kerntechnologien , die verschiedene Anwendungen und Forschungsrichtungen der Informatik darstellen sowie je fünf Praktiken, Entwurfsund Funktionsprinzipien , die der Informatik zugrunde liegen [ De03 ]. Für Zendler und Spannnagel waren die Konzepte [ZS06 ] und Prozesse [ZSK07 ] der Informatik zentral, die sie in einer Fragebogenstudie unter fachlichen Experten ermittelten, wobei sich die Auswahl auch an den Kriterien nach Schwill [ Sc93 ] orientierte. Diese und weitere Ansätze unterscheiden sich in ihrer Methodik, Breite und dem Detaillierungsgrad deutlich, während sie in der Zielsetzung typischerweise übereinstimmen: Es soll die Informatik oder eines ihrer Teilgebiete durch die zugrunde liegenden Konzepte, Prinzipien bzw. fundamentalen Ideen charakterisiert werden. 4 Ermittlung der Schlüsselkonzepte des Datenmanagements Um die Schlüsselkonzepte des Datenmanagements zu ermitteln, muss das Fachgebiet unter Beachtung der Entwicklungen der letzten Jahre aufgearbeitet und hinsichtlich der zeitstabilen Relevanz bewertet werden. Während beispielsweise Schwill und Denning ihren Katalogen eine informelle Charakterisierung der Informatik zugrunde legen, wählen wir im Folgenden einen in zwei Phasen aufgeteilten empirischen Ansatz zur systematischen Identiﬁzierung der Schlüsselkonzepte.Empirische Ermittlung der Schlüsselkonzepte des Fachgebiets Datenmanagement 159ii “proceedings” — 2017/9/17 — 20:19 — page 160 — #160 ii i ii i14 Andreas Grillenberger, Ralf Romeike 4.1 Phase 1: Fachdidaktische Analyse Im der ersten Phase soll durch Analyse zentraler fachwissenschaftlicher Literatur ein umfassender Überblick über die Themen des Fachgebiets gewonnen werden. Da dies aus fachdidaktischer Perspektive geschehen sollte, konnten bestehende Arbeiten, wie der Data Management Body of Knowledge [ DA09 ] (DAMA-DMBoK), nicht als alleinige Basis genutzt werden: Diese beschreiben das Fachgebiet zwar ausführlich, jedoch aus fachlicher Sicht und oft stark an der professionellen Nutzung orientiert. Trotzdem können sie als Teil der Analyse wertvolle Einblicke ins Fachgebiet liefern. Unsere Analyse wurde an den Schritten der qualitativen Inhaltsanalyse nach Mayring [ Ma10 ] orientiert. Aufgrund ihrer speziellen Zielsetzung und Aufteilung in zwei getrennte Phasen wurden jedoch einzelne im Sinne der Methodik zulässige Anpassungen vorgenommen, insbesondere durch Zusammenfassung verschiedener Schritte. Die fachdidaktische Analyse wurde daher wie folgt durchgeführt: 1.Literaturauswahl: Als Basis für die Analyse wurden sechs anerkannte Fachbücher [Ed11 ,EN09 ,KE15 ,Ku15 ,Pi11,UP14 ] aus dem Fachgebiet sowie der DAMADMBoK ausgewählt. Neben tradierten Grundlagenwerken wurden auch solche Werke hinzugezogen, die sich speziell auf jüngere Themen des Datenmanagements beziehen, um auch diese und damit zusammenhängende Aspekte zu berücksichtigen. Obwohl sich der Materialkanon hauptsächlich aus deutschsprachiger Literatur zusammensetzt, wurde auch die internationale Perspektive berücksichtigt: Bei einem der Lehrbücher handelt es sich um die deutschsprachige Ausgabe eines international anerkannten Fachbuchs [EN09 ]. Außerdem stellt der DAMA-DMBoK die Perspektive der internationalen Datenmanagement-Vereinigung dar. Im Laufe der Analyse konnten keine Abweichungen zwischen deutscher und internationaler Literatur festgestellt werden. 2.Entscheidungen zum Kategoriensystem und den Auswahlkriterien: Aufgrund des Ziels, einen umfassenden Überblick über das Fachgebiet zu gewinnen, ist es sinnvoll, das Kategoriensystem durch Analyse der Materialien induktiv aufzubauen. Als Analyseeinheit wurden die vorkommenden Begri  e gewählt, die Themen des Datenmanagements beschreiben. Ihr Kontext wurde dabei insofern berücksichtigt, dass auch dieser aufgenommen wurde, wenn er einen eigenen Aspekt umfasst. 3.Analysephase: a)Entwicklung des Kategoriensystems: Dieser Schritt wurde in mehreren Iterationen wiederholt durchlaufen. Zuerst wurde der DAMA-DMBoK als Basis genutzt, da unsere Vermutung war, dass er das Themenfeld gut abdeckt. In den darau  olgenden Iterationen wurden zusätzliche Quellen hinzugenommen, wobei ab der dritten kaum noch weitere Themen ergänzt wurden. Stattdessen kamen eher zusätzliche Details hinzu, die als Unterkategorien aufgenommen wurden. Als Ergebnis entstand ein hierarchisch organisiertes Kategoriensystem, das zentrale Themen des Fachgebiets inklusive einiger Details, die als Subkategorien enthalten sind, beschreibt. Ein Ausschnitt der Ergebnisse wird in Abb. 1 dargestellt.160 Andreas Grillenberger, Ralf Romeikeii “proceedings” — 2017/9/17 — 20:19 — page 161 — #161 ii i ii iEmpirische Ermittlung der Schlüsselkonzepte des Fachgebiets Datenmanagement 15 b)Clustering: Nach der Entwicklung des Kategoriensystems wurde die umfangreiche Menge an Begri  en in induktiv gebildeten Gruppen reorganisiert. Dabei konnte festgestellt werden, dass sich vier Gruppen herausbilden: technische Aspekte der Funktionsweise von Datenmanagementsystemen, Prinzipien, denen Datenmanagementsysteme gehorchen, Beispiele für Anwendungen von Datenmanagement und Tätigkeiten, die bei Entwurf und Nutzung von Datenmanagementsystemen durchgeführt werden. Ein Einblick in das Clustering ist in Abb. 2 dargestellt. Um in dieser Analysephase einen möglichst hohen Grad an Vollständigkeit sicherzustellen, wurde das Ergebnis mittels einer teilautomatisierten Textanalyse validiert. Aus einem Dokumentenkorpus wurden die häuﬁgsten Begri  e automatisch herausgeﬁltert und nach Themen des Datenmanagements händisch durchsucht. Als Basis dienten insbesondere Vorlesungsskripte und Folien verschiedener Wissenschaftler, die teils das gesamte Fachgebiet, teils nur einzelne Spezialgebiete abdecken, sowie weitere Lehrbücher und ein Großteil der Ausgaben des „Datenbank Spektrums“. Es wurden dafür 305 Dokumente mit 9.447 Seiten bzw. Folien analysiert, die zu über 1.800 einzuordnenden Begri  en (nach Filterung von Mehrdeutigkeiten und Stoppwörtern) führten. Die Ergebnisse wurden mit den vorherigen Ergebnissen abgeglichen, indem die häuﬁgsten vorkommenden fehlenden Begri  e dem vorher entwickelten Kategoriensystem hinzugefügt wurden. Dabei stellten sich nur solche Daten-managementModellierungIdeenStruktu-rierungAbstraktionSchl¨ usselModellelogischkonzep-tionellphysikalischTechnikenE/R-DiagrammeFunktionaleAbh.Trigger Implemen-tierungDatenorg-anisationDaten-strukturenKom-pressionAllokationPu↵erAnfragenAnfrage-sprachenTransakt-ionsver-waltungAblaufop-timierungRecoveryMethodenSynchro-nisationReplikationMetadatenParalleli-sierungAnfor-derungenDaten-bestandKonsistentIntegrit¨ atRedundanzSchl¨ ussel-prinzipZugri↵u.Modi-ﬁkationACIDBASEMultiuserSicherheitGeheim-schutzRecoveryBerech-tigungen AnwendungenSpei-cherungVerteilteDBIn-MemoryDBCloud-SpeicherAus-wertungSemanticWebKnowledgeRepre-sentationDataMiningNutzungSuch-maschineneCommerceSozialeMedien Abb. 1: Ausschnitt aus den Ergebnissen des ersten AnalyseschrittsEmpirische Ermittlung der Schlüsselkonzepte des Fachgebiets Datenmanagement 161ii “proceedings” — 2017/9/17 — 20:19 — page 162 — #162 ii i ii i Abb. 2: Clustering der zuvor gefundenen Begri  e des Datenmanagements als fehlend heraus, die das System nicht in der Breite, sondern nur in der Tiefe erweitern. Daher kann ein hoher Vollständigkeitsgrad der Analyseergebnisse angenommen werden. 4.2 Phase 2: Ermittlung und Strukturierung der Konzepte In der zweiten Phase wurden eine Strukturierung der Themen vorgenommen mit dem Ziel, eine prägnante aber vollständige Charakterisierung des Fachgebiets durch dessen Schlüsselkonzepte zu erhalten. Ein Vergleich der vier beim Clustering herausgebildeten Gruppen mit bereits etablierten Arbeiten zeigte, dass insbesondere das Framework der Great Principles of Computing diese Perspektiven abdeckt. Aufgrund der ähnlichen Zielsetzung, der Charakterisierung einer Wissenschaft bzw. eines ihrer Teilbereiche, ist eine Adaptierung des Modells für die Charakterisierung von Datenmanagement sinnvoll. Die Einordnung der zuvor gefundenen Begri  e in das Modell erfolgte daher anhand folgender auf Denning zurückzuführender Kriterien: •Kerntechnologien stellen konkrete Anwendungen bzw. Technologien dar, die deutlichen Bezug zu Datenmanagement haben. Sie sind dabei gleichzeitig zentrale Forschungsrichtungen des Fachgebiets. •Praktiken repräsentieren Aktivitäten und Methoden, die dem Datenmanagement zuzuordnen sind und stellen gleichzeitig Kompetenzen dar, die zur Nutzung und/oder Entwicklung von Datenmanagementsystemen notwendig sind. •Entwurfsprinzipien sollten beim Entwurf von Datenmanagementsystemen berücksichtigt werden. Zusätzlich können sie auch für die Entscheidung genutzt werden, ob ein System für einen konkreten Anwendungsfall geeignet ist. •Funktionsprinzipien stehen für die grundlegende Funktionsweise von Datenmanagementsystemen und sind insbesondere bei deren Implementierung relevant.162 Andreas Grillenberger, Ralf Romeikeii “proceedings” — 2017/9/17 — 20:19 — page 163 — #163 ii i ii i Dateispeicher, Datenbanken, Datenstromsysteme, Datenanalysen, Semantic Web, DokumentenspeicherKerntechnologien•Datenerfassung/-gewinnung•Datenbereinigung•Modellierung•Implementierung•Optimierung•Analyse•Visualisierung•Evaluation•Austausch•Archivierung•LöschungPraktiken•Datenunabhängigkeit•Integrität•Konsistenz•Isolierung•Dauerhaftigkeit•Verfügbarkeit•Partitionstoleranz•Konkurrenz•RedundanzEntwurfsprinzipien•Strukturierung•Repräsentation•Replikation•Synchronisation•Partitionierung•Transport•TransaktionFunktionsprinzipienAbb. 3: Modell der Schlüsselkonzepte des Datenmanagements 5 Modell der Schlüsselkonzepte des Datenmanagements Die beiden Phasen resultierten in einem Modell der Schlüsselkonzepte des Fachgebiets Datenmanagement (vgl. Abb. 3). In den Kerntechnologien spiegeln sich die Fortschritte im Datenmanagement gegenüber dem ursprünglichen Fachgebiet Datenbanken wider, aber auch zentrale Forschungsrichtungen des Fachgebiets: Dies sind derzeit Dateispeicher, Datenbanken, Datenstromsysteme, Datenanalysen, Semantic Web und Dokumentenspeicher. Wie bei Denning ist zu erwarten, dass zukünftig weitere Kerntechnologien hinzukommen. DiePraktiken entsprechen den Aktivitäten und Methoden, die im Kontext von Datenmanagement notwendig sind. Dies schließt die Gewinnung und Bereinigung von Daten, die Datenmodellierung, Implementierung und die Optimierung, Analyse und Visualisierung von Daten sowie die Evaluation der Analyseergebnisse, aber auch den Austausch und schlussendlich die Archivierung bzw. Löschung von Daten mit ein. Bei der Entwicklung und Nutzung von Datenmanagementsystemen müssen die folgenden Entwurfsprinzipien beachtet werden: •Datenunabhängigkeit , d. h. die Abstraktion zwischen interner Repräsentation von Daten und ihrer Schnittstelle nach außen. •Sicherstellung der Integrität und der Konsistenz von Datenbeständen. •Isolierung undDauerhaftigkeit von Änderungen im Datenbestand. •Verfügbarkeit von Daten, d. h. geeignete und schnelle Zugri  smöglichkeiten. •Partitionstoleranz , d. h. Toleranz gegenüber Ausfällen von Teilen eines verteilten Datenspeichers. •Konkurrenz von Anfragen in Datenmanagementsystemen und Datenanalyseprozessen bei nebenläuﬁgem Zugri  . •(Vermeidung oder Nutzung von) Redundanz in Datenbeständen.Empirische Ermittlung der Schlüsselkonzepte des Fachgebiets Datenmanagement 163ii “proceedings” — 2017/9/17 — 20:19 — page 164 — #164 ii i ii i18 Andreas Grillenberger, Ralf Romeike Die grundlegende Funktionsweise von Datenmanagementsystemen basiert auf folgenden Funktionsprinzipien : •Strukturierung von Daten (z. B. durch Metadaten oder Indizes), um auf diese schnell und e  zient zugreifen zu können. •Repräsentation , d. h. Methoden und Techniken zur Speicherung von Daten, beispielsweise (interne) Datenstrukturen. •Replikation undPartitionierung , d. h. mehrfache und/oder verteilte Speicherung von Daten über mehrere Datenspeicher hinweg. •Synchronisation von gleichzeitigen bzw. konkurrierenden Zugri  en auf Daten. •Transport von Daten, der die Übertragung von Daten, aber auch die Übertragungssicherheit einschließt. •Transaktionen , die insbesondere zur Erhöhung der Fehlertoleranz eingesetzt werden. 6 Anwendung und Relevanz für den Informatikunterricht Das Modell der Schlüsselkonzepte des Datenmanagements liefert einen umfangreichen Überblick über dessen zentrale Konzepte aus Sicht relevanter Technologien, Praktiken und Prinzipien. Es ist klar erkennbar, dass das Fachgebiet eine große Vielfalt an Themen umfasst, die im Unterricht bisher allenfalls am Rande betrachtet werden. Trotzdem haben diese Themen und die damit in Verbindung stehenden Kompetenzen im Zusammenhang mit der zunehmenden Bedeutung von Datenmanagement auch im Alltag eine hohe Relevanz für den Informatikunterricht. Das Modell eignet sich damit insbesondere, um bei der Unterrichtsoder Curriculumsentwicklung zu untersuchen, welche Aspekte des Fachgebiets durch ein Unterrichtsthema abgedeckt werden können bzw. sollen. Exemplarisch kann hier das Thema Datenstromsysteme [ GR15a ] herangezogen werden, das auch schon außerhalb der Informatik und Informatikdidaktik zunehmend Aufmerksamkeit erhält (vgl. [ Tu16 ]): Datenstromsysteme werden zur Echtzeitverarbeitung immer größerer Datenmengen eingesetzt und machen deutlich, wie sich die Grenzen im Datenmanagement gegenüber den vor einigen Jahren noch relativ zeitaufwändigen Datenanalysen verschoben haben. Dieses Thema umfasst insbesondere folgende Schlüsselkonzepte: Kerntechnologie: Datenstromsysteme Praktiken: Datenerfassung/-gewinnung, Datenbereinigung, Analyse Entwurfsprinzipien: Verfügbarkeit, Konkurrenz Funktionsprinzipien: Strukturierung, Repräsentation, Transport Die Betrachtung des Themas Datenstromsysteme aus der Perspektive des Modells der Schlüsselkonzepte von Datenmanagement hilft, die zentralen Konzepte des Themas zu erkennen und im Unterricht einen Schwerpunkt auf diese zu legen. Im Vergleich mit dem zentralen Thema „Datenbanken“ im aktuellen Informatikunterricht zum Thema Daten ist die unterschiedliche Ausprägung der Schlüsselkonzepte des Datenmanagements in beiden Systemen klar erkennbar:164 Andreas Grillenberger, Ralf Romeikeii “proceedings” — 2017/9/17 — 20:19 — page 165 — #165 ii i ii iEmpirische Ermittlung der Schlüsselkonzepte des Fachgebiets Datenmanagement 19 Kerntechnologie: Datenbanksysteme Praktiken: Modellierung, Implementierung, Optimierung, Analyse Entwurfsprinzipien: Datenunabhängigkeit, Integrität, Konsistenz, Redundanz Funktionsprinzipien: Strukturierung, Repräsentation, Transaktion Während bei Datenstromsystemen die Echtzeitdatenverarbeitung zentral ist, setzen Datenbanken den Fokus auf strukturierte Speicherung. Beide vorgestellte Themen sind exemplarisch für das Fachgebiet und verdeutlichen, dass verschiedene Schlüsselkonzepte sich als rote Fäden durch dieses ziehen, aber unterschiedlich ausgeprägt sind. Das Modell kann damit zu einer Fokussierung auf die zentralen Aspekte beitragen, liefert einen Überblick über zentrale Begri  e des Fachgebiets und kann als Zugang zu diesem herangezogen werden. 7 Fazit In diesem Beitrag wurde eine empirische Vorgehensweise zur systematischen Ermittlung der Schlüsselkonzepte eines Fachgebiets vorgestellt. Durch Anwendung auf das Fachgebiet Datenmanagement konnten wir ein Modell der Schlüsselkonzepte dieses Fachgebiets erstellen, das durch die vier Kategorien Kerntechnologien, Praktiken, Entwurfsund Funktionsprinzipien die zentralen Aspekte des Fachgebiets betont. Vergleicht man dieses Modell mit denGreat Principles of Computing [De03 ], so zeigt sich, dass es an verschiedenen Stellen eine Spezialisierung der Great Principles darstellt: Beispielsweise wird das von Denning genannte Entwurfsprinzip Sicherheit im Datenmanagement durch die Entwurfsprinzipien Integrität ,Verfügbarkeit undIsolierung konkretisiert. Betrachtet man die Kriterien, die Schwill an fundamentale Ideen der Informatik stellt [ Sc93 ], lässt sich vermuten, dass die ermittelten Schlüsselkonzepte repräsentativ für fundamentale Ideen stehen: Einerseits sind sie in verschiedenen Bereichen des Fachgebiets, aber häuﬁg auch darüber hinaus, relevant und erfüllen somit das Horizontalkriterium. Ebenso scheint auch das Vertikalkriterium erfüllbar, wie beispielsweise durch die Aufarbeitung des Themas Datenstromsysteme als Unterrichtsbeispiel [ GR15a ] gezeigt wurde. Durch den Alltagsbezug der Konzepte wird auch das Sinnkriterium adressiert, durch die langjährige Relevanz der meisten Aspekte auch das Zeitkriterium. Trotzdem unterscheiden sich die dargestellten Schlüsselkonzepte von den Ideen: Während letztere die Urbilder bezeichnen, aus denen informatische Phänomene entstehen, sind die Konzepte auf einer konkreteren Ebene angesiedelt und beschreiben Gesetzmäßigkeiten, Funktionsweisen und Vorgehensweisen im Datenmanagement. Während sich Informatikunterricht im Bereich „Daten“ bisher auf Datenbanken konzentriert, verdeutlichen die Schlüsselkonzepte die Vielfalt von Datenmanagement. Durch die strukturierte Darstellung kann das Modell einen deutlichen Beitrag zur Curriculumsund Unterrichtsgestaltung liefern, und als Basis für die weitere Forschung eingesetzt werden. Wie exemplarisch gezeigt wurde, eignet sich das Modell, um Themen des Datenmanagements hinsichtlich der enthaltenen Konzepte zu untersuchen. Für die Schule ergeben sich verschiedene Vorteile: Zum einen wird das Fachgebiet strukturiert und der Kompetenzerwerb konkretisiert, zum anderen liefern die Schlüsselkonzepte konkrete Begri  e, die den fundierten Gebrauch der Fachsprache unterstützen. Die vorgestellte HerangehensweiseEmpirische Ermittlung der Schlüsselkonzepte des Fachgebiets Datenmanagement 165ii “proceedings” — 2017/9/17 — 20:19 — page 166 — #166 ii i ii i20 Andreas Grillenberger, Ralf Romeike zur Ermittlung der Schlüsselkonzepte konnte damit am Fachgebiet Datenmanagement erfolgreich angewandt werden und scheint auch bezogen auf andere Gebiete der Informatik und möglicherweise darüber hinaus erfolgversprechend. Literaturverzeichnis [DA09] DAMA International: The DAMA Guide to the Data Management Body of Knowledge DAMA-DMBOK. Technics Publications, LLC, USA, 2009. [De03] Denning, P. J.: Great Principles of Computing. Commun. ACM, 46(11):15–20, 2003. [Ed11] Edlich, S. et al.: NoSQL. Hanser Fachbuchverlag, 2011. [EN09] Elmasri, R. A.; Navathe, S. B.: Grundlagen von Datenbanksystemen. Pearson Studium, 2009. [GR14a] Grillenberger, A.; Romeike, R.: A Comparison of the Field Data Management and its Representation in Secondary CS Curricula. In: Proceedings of WiPSCE 2014. ACM, Berlin, 2014. [GR14b] Grillenberger, A.; Romeike, R.: Teaching Data Management: Key Competencies and Opportunities. In: Proceedings of KEYCIT 2014. Universitätsverlag Potsdam, 2014. [GR15a] Grillenberger, A.; Romeike, R.: Big-Data-Analyse im Informatikunterricht mit Datenstromsystemen: Ein Unterrichtsbeispiel. In: Praxisband INFOS 2015. 2015. [GR15b] Grillenberger, A.; Romeike, R.: Big Data im Informatikunterricht: Motivation und Umsetzung. In: INFOS 2015. Lecture Notes in Informatics (LNI). Köllen, Bonn, 2015. [KE15] Kemper, A.; Eickler, A.: Datenbanksysteme. Gruyter, Walter de GmbH, 2015. [Ku15] Kudraß, T.: Taschenbuch Datenbanken. Hanser Fachbuchverlag, 2015. [Ma10] Mayring, P.: Qualitative Inhaltsanalyse: Grundlagen und Techniken. Beltz, 2010. [Mo03] Modrow, E.: Fundamentale Ideen der theoretischen Informatik. In: Informatische Fachkonzepte im Unterricht, INFOS 2003. S. 189–200, 2003. [MS16] Modrow, E.; Strecker, K.: Didaktik der Informatik. Oldenbourg, 2016. [Pi11] Piepmeyer, L.: Grundkurs Datenbanksysteme. Hanser Fachbuchverlag, 2011. [Sc93] Schwill, A.: Fundamentale Ideen der Informatik. Zentralblatt für Didaktik der Mathematik, 25(1), 1993. [Tu16] Tulodziecki, G.: Konkurrenz oder Kooperation? Zur Entwicklung des Verhältnisses von Medienbildung und informatischer Bildung. MedienPädagogik: Zeitschrift für Theorie und Praxis der Medienbildung, 25(0), 2016. [UP14] Unland, R.; Pernul, G.: Datenbanken im Einsatz. de Gruyter, Oldenbourg, 2014. [ZS06] Zendler, A.; Spannagel, C.: Zentrale Konzepte im Informatikunterricht: eine empirische Grundlegung. Notes on Educational Informatics—Section A: Concepts and Techniques, 2(1):1–21, 2006. [ZSK07] Zendler, A.; Spannagel, C.; Klaudt, D.: Zentrale Prozesse im Informatikunterricht: eine empirische Grundlegung. Notes on Educational Informatics—Section A: Concepts and Techniques, 3(1):1–19, 2007.166 Andreas Grillenberger, Ralf Romeikeii “proceedings” — 2017/9/17 — 20:19 — page 167 — #167 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum V erstehen und Gestalten der digitalen Welt ,   Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017    15  Entwicklung eines Datenschutzkompetenzmodells    Alexander Hug1, Rüdiger  Grimm2   Abstract:  Zur Beschreibung der Fähigkeit im Umgang mit (digitalen ) Medien  haben Six  und  Gimmler ein Medienkompetenzmodell veröffentlicht [SGG07] . Darin fehlen Punkte wie  Risikobewertung und Vermeidungsstrategie , die u nter dem Gesichtspunkt des Datenschutzes  besonders zu beachten sind . Risikobewertungen können nach den Regeln der IT -Sicherheit  vorgenommen und mithilfe  des Vert rauensmodells von Mayer, Davis und Schoorman [MDS95]   explizit gemacht  werden . In diesem Artikel wird das Medien kompetenz modell zu einem  begründeten Datenschutzkompetenzmodell erweitert. Dabei erfolgt die Risikobewertung über  ausgewählte Dimensionen des Medien kompetenzmodells. Ein derart e rweitertes Modell liefert  eine fachdidaktisch begründete Vorlage zur Messung der Risiko bewertung bei Schülerinnen und  Schülern in Bezug auf die Wahrung ihrer Privatsphäre.   Keywords: Datenschutz, Datenschutzkompetenzmodell, Medienkompetenzmodell, Vertrauen smodell, Referenzmodell IT -Sicherheitsanalyse   1 Internetnutzung als ein Zusammenspiel zwischen Selbstkontrolle  und Vertrauen   Die Nutzung des Internets ist ohne eine Kooperation mit verschiedenen Parteien   (Softwareherstellern, Providern, Dienstanbietern) , de nen man Vertrauen  entgegenbringen muss, nicht möglich. In [GB15]  wird Vertrauen definiert „als eine  Bereitschaft des Trustors  [des Vertrauensnehmers] , eine riskante Handlung in einem  Kontext zu unternehmen, die er nicht vollständig kontrolliert, in der Erwartung, dass der  Trustee [der Vertrauensgeber] diesen kontrolliert und den Trustor darin schützt.“    Das Zusammenspiel zwischen Trustor und Trustee wird durch das Modell von Mayer,  Davis und Schoorman beschrieben [MDS95] . Der Nutzer (Trustor) schenkt den  Anbietern (Trustees) aufgrund deren Kompetenz, deren Wohlwollen und deren Integrität  sein Vertrauen. Liegt nun ein zu erwartendes Risiko vor, dann wird dieses in die  Vertrauensbeziehung mit aufgenommen. Aufgrund der Wirk ung der Ergebnisse dieser  Vertrauensbeziehung wächst oder fällt mit der Zeit das Vertrauen, da die Ergeb nisse  wiederum die wahrgenommene Vertrauenswürdigkeit des Trustees darstellen. Dies stellt  ein rückkoppelndes Element dar.   Handlungen, die im Zusammenh ang mit der Internetnutzung vollzogen werden, sind  risikobehaftet. Bevor der Nutzer den Trustees Vertrauen schenkt, muss er das Risiko                                                              1 Universität  Koblenz -Landau , FB Informatik , Universitätsstr. 1 , 5607 0 Koblenz , hug@uni -koblenz.de   2 Universität Koblenz -Landau, FB Informatik , Universitätsstr. 1, 5607 0 Koblenz, grimm@uni -koblenz.de  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 167ii “proceedings” — 2017/9/17 — 20:19 — page 168 — #168 ii i ii i  16    Alexander Hug und Rüdiger Grimm   wahr nehmen und bewerten. Mit Hilfe des Referenzmodells für ein Vorgehen bei der IT Sicherheitsanalyse [Gr16]  kann eine Bewertung vorgenommen werden. Es ist in erster  Linie für die Entwickler von Sicherheitssystemen gedacht und kann in abgewandelter  Form auch zur Einschätzung eines Nutzungsrisikos genutzt werden. Bei dieser  Abwandlung werden nur die datenschutzr elevanten Aspekte und Kriterien des   vierschrittigen  Modells benutzt.   Im ersten Schritt , der sog. Ist -Analyse , sind die Güter in diesem Fall die persönlichen  Daten . Als Akteure gelten der Nutzer, die Administratoren der Netzwerke, die  Dienstanbieter und le tztendlich auch die Personen, die unbefugt in den Prozess des  Datenaustauschs eingreifen. Interessenkonflikte können in dem, was der Nutzer erwartet,  und dem, was sich die anderen Kommunikations teilnehmer wünschen , entstehen .  Schwachstellen im System könne n durch eine falsche Konfiguration der Hard und  Software, durch Fehler in der Software, aber auch durch Missachtung von  Verhaltensregeln entstehen.   Der zweite Schritt ist die  Potenzial -Analyse. Be drohungen als mögliche Folge von  Angriffen (z.  B. auf das  Endgerät des Nutzers und auf den Kommunikationsprozess) sind  z. B. eine Fremdsteuerung des eigenen Geräts, Datenverlust (etwa durch Diebstahl von  Kreditkartendaten), das unbefugte Mitlesen von Kommunikation oder eine zweckfremde  Nutzung von veröffentlicht en Daten in sozialen Netzwerken. Dies bedeutet im letzten  Fall konkret, dass aufgrund aggregierter Daten aus dem Profil, der Zeitleiste, den Chat Verläufen, usw. entweder ein falsches Profil des Nutzers entstehen kann oder das Profil  stimmig ist, aber der Nutzer aufgrund anschließender Einflussnahme des Betreibers  unerwünschte Werbung, Spam -Mails o.  Ä. erhält. Das Risiko ist daher immer in Bezug  auf die schützenswerten Güter  zu bemessen. Im Falle der personenbezogenen Daten ist  ihr Bedrohungsrisiko je nach Datenart und nicht immer direkt monetär zu beziffern.  Schwachstellen, die hier ausgenutzt werden können, sind zu leichte Zugänge zu den  Servern (z.  B. durch schwache Passwörter), unzureichend geschützte Zugänge zu den  Daten (offene Netze) und das Nutzerver halten (z.  B. der Verzicht kryptografischer  Verfahren). Die An forderung eines Schutzes an Privatheit lässt sich so in folgende  funktionale Sicherheits anforderungen zerlegen: Vertraulichkeit  und Zweckbindung  der  Daten , sowie Vertrauenswürdigkeit der anderen Parteien und eine funktionsintegre  Verfüg barkeit der Daten.   Im nächste n Schritt  wird ein Sicherheitskonzept  entwickelt.  Eine erste Sicherheitsmaß nahme ist die Nutzung von starken Passwörtern, von Verschlüsselung beim Mailen ,  Chatten und im Web . Ferner sollte der Nutzer durch Kenntnis der Datenschutzprinzipien  darauf achten, dass er nur ausgewählte Inhalte kommuniziert und diese mit Bedacht  weitergibt. Weiterhin sind Sicherheitseinstellungen vor zunehmen und  Schutzmechanismen zu nutzen, etwa alterna tive Suchmaschinen oder das regelmäßige  Löschen von Cookies und de s Browserverlauf s.   Der letzte Schritt  ist die Installation eines Sicherheitskonzepts . Es  dient dem  Internetnutzer , diejenigen Sicherheitsmechanismen des Selbstdatenschutzes 168 Alexander Hug, Rüdiger Grimmii “proceedings” — 2017/9/17 — 20:19 — page 169 — #169 ii i ii i  Datenschutz und Informatikunterricht     17  auszuwählen , die ihm ein adäquates Sicherheits niveau bieten. Dabei muss er das  verbleibende Restrisiko erkennen , akzeptieren und entscheiden , inwieweit er den  Partnern, von denen er dann noch abhängt, vertrau t. Hier ist die Handlungsfähigkeit in  der Datenschutz kompetenz gefragt.   2 Von der Risikobewertung i n eine m Medienkompetenzmodell zu  einem Datenschutzkompetenzmodell   In [SGG07]  stellen Six und Gimmler ein Medienkompetenzmodell vor, das – wie  Gimmler in [Gi12]  schon zeigt – Datenschutzkompetenz in einem ge wissen Maß zu  beschreiben  vermag . Aber eine Betrachtung des Risikos bei der Internet nutzung  unterbleibt  an dieser Stelle . Folgende Dimensionen aus dem Medienkompetenzmodell  spielen bei der Risiko bewertung eine Rolle:   Hintergrundwissen  ist notwendig, da zur Abschätzung des Risikos der Internetnutzung  die möglichen Schadensursachen und ihrer Gegenmittel ja bekannt sein müssen . Die  Nutzung alternativer Softwareprodukte, z. B. alternati ver Suchmaschinen  und  Verschlüsselungs methoden , und die eigene Entscheidung über die Datenpreisgabe sind  Datenschutz maßnahmen, die der Nutzer ergreifen kann , wenn er sie kennt . Ferner zählen  wir zu dieser Dimension auch das Wissen über die Prinzipien des  Datenschutzes und  deren Bedeutung und Anwendung.   Der Selbstdatenschutz verlangt Orientierungswissen, weil der Nutzer die Funktionen der  Angebote verstehen muss. Er muss in der Lage sein, diese Funktionen in der  Anwendungsumgebung, in der er sich befindet , sicher und wirkungsgemäß auszuführen.   Der Nutzer kennt die Angebote , kann die angemessenen auswählen  und setzt sie aus  dieser Orientierungssicherheit heraus situationsgerecht ein. Ferner kennt er  Möglichkeiten, um sich weitere und neue Informationen zu e rschließen.   Zur Urteilskompetenz zählt die Fähigkeit, d ie Angebote im Internet zu kennen und deren  Wirkung zu beurteilen. Zusätzlich  muss sich der Nutzer bei der Abwägung des Risikos  ein Urteil  über die Vertrauens würdigkeit der anderen Kommunikationstei lnehmer  bilden . Auf der Basis der Urteilsentscheidung nimmt der Nutzer das Angebot an oder  lehnt es ab .   Durch die Auswahl und Nutzungskompetenz  kommt der Nutzer zu der  „selbstbestimmten, zielorientierten und reflektierten Auswahl und Nutzung“ [Gi12]  des  Internetangebots. In risikobehafteten Situationen urteilt der Nutzer, ob er das Risiko  eingehen wird oder nicht. Durch die passende Auswahl und Nutzung von  Schutzmechanismen kann der Nutzer das Risiko minimieren .   Die Dimensionen des Medienkompetenzmodells  sind nicht völlig unabhängig  voneinander (bspw. Aspekte von Urteil und Orientierung), daher ist es hilfreich, einzelne  Kompetenzaspekte mehrfach zuzuordnen. Die auf die ausgewählten Dimensionen des Entwicklung eines Datenschutzkompetenzmodells 169ii “proceedings” — 2017/9/17 — 20:19 — page 170 — #170 ii i ii i  18    Alexander Hug und Rüdiger Grimm   Medienkompetenzmodells angewendete Risikointerpretation f ührt zu einer Erweiterung  des Modells, welches als Datenschutz kompetenzmodell aufgefasst werden kann. Damit  definieren wir  Datenschutzkompetenz als den Zusammenschluss von Hintergrundwissen,  Orientierungswissen, Urteilskompetenz, Handlungs und Nutzungsko mpetenz,  Risikobewertungskompetenz und die Anwendung von Handlungsmustern  mit Bezug auf  das schützenswerte Gut der pers önlichen  Daten .   3 Zusammenfassung und Ausblick   Eine datenschutzbewusste Internetnutzung ist gekennzeichnet durch die bewusste  Ausübung des  Selbstdatenschutzes im Rahmen des wahr genommenen bestehenden  Systemdatenschutzes und seiner Vertrauenswürdigkeit  bei gleichzeitig  kompetente r  Abwägung des Restrisikos. Aufgrund des Medienkompetenzmodell s von Six /Gimmler   [SGG07] , das  Teilkompetenzen bzgl.  des Datenschutz es aufzeig t, aber Risikobewertung  auße r Acht lässt, wurde das Modell zu einem Daten schutzkompetenzmodell erweitert .  Die Validität dieses Modells soll im Rahmen einer weiteren Forschung untersucht  werden. Auf Basis der Modellvorlage wird ein e Schülerbefragung mit dem Schutz der  Privatsphäre als Schwerpunkt durchgeführt, sodass aufgrund dieser Ergebnisse später  konkrete Handlungsempfehlungen für Unterrichtsinhalte entwickelt werden .  4 Literaturverzeichnis   [GB15]  Grimm, R.; Bräunlich, K.:  Vertrauen und Privatheit. Anwendung des  Referenzmodells für Vertrauen auf die Prinzipien des Datenschutzes. In  Datenschutz und Datensicherheit DuD, 2015, 39; S. 289 –294.  [Gi12]  Gimmler, R.:  Medienkompetenz und Datenschutzkompetenz in der  Schule. In Datenschutz und Datensicherheit DuD, 2012, 36; S. 110 –116.  [Gr16]  Grimm, R. et al.:  Referenzmodell für ein Vorgehen bei der IT Sicherheitsanalyse. In Informatik -Spektrum, 2016, 39; S. 2 –20.  [MDS95]  Mayer, R. C.; Davis, J. H.; Schoorman, F. D.:  An Integrative Model of  Organizational Trust. In Academy of Management Review, 1995, 20; S.  709–734.  [SGG07]  Six, U.; Gleich, U.; Gimmler, R. Hrsg.:  Kommunikationspsychologie - Medienpsychologie. Lehrbuch. Bel tzPVU, Weinheim, 2007.  170 Alexander Hug, Rüdiger Grimmii “proceedings” — 2017/9/17 — 20:19 — page 171 — #171 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 1 Vom Flaggenalphabet zur Vorratsdatenspeicherung: Schülerinnen und Schüler als Multiplikatoren technischer Aspekte der digitalen Welt Klaus-Tycho Förster1 Abstract: Im Nachrichtenalltag existieren viele kontroverse informatische Phänomene wie etwa die Gesundheitskarte, Internetsperren oder die Vorratsdatenspeicherung. Bei Berichten oder Diskussionen über die Thematiken fällt zumeist auf, dass zwar über den informatischen Kontext gesprochen, das zur Beurteilung benötigte technische Wissen jedoch eher ignoriert, teilweise sogar sachlich falsch verwendet wird. Durch informatisch-technische Bildung erhalten Schülerinnen und Schüler die Möglichkeit, zumindest in ihrem lokalen Umfeld als Multiplikatoren dieser Aspekte zu wirken. Die Verbindung von Informatik und Gesellschaft unter technischen Aspekten im Informatikunterricht ist dabei natürlich kein neuartiges Konzept. Dennoch möchte die vorgestellte mehrfach praktisch im Schulalltag erprobte Unterrichtssequenz einen kurzen Vorschlag liefern, wie dieses für die Thematik der Vorratsdatenspeicherung im Rahmen der Behandlung von Computernetzen durchgeführt werden könnte. Keywords: Computernetzwerke, Vorratsdatenspeicherung, technische Aspekte der Informatik 1 Schülerinnen und Schüler als lokale Multiplikatoren Die Idee der kontextorientierten Unterrichtsorganisation ist ein neues altes Unterrichtsparadigma (vergl. [ Ko]) zur Herstellung des Lebensweltbezuges im Informatikunterricht. Unter dem Oberbegri  Informatik im Kontext (IniK) werden dabei diverse Thematiken aufgegri  en, siehe dazu etwa etwa [ DKW11 ] und [ DD11 ]. Der Lebensweltkontext soll dabei nach Diethelm, Koubek und Witten auch das Kriterium erfüllen, dass er geeignet für „ Abendbrotgespräche mit den Eltern ist “[DKW11 ]. Daher bietet sich eine Multiplikatoren-Rolle der Schülerinnen und Schüler aus dem Informatikunterricht heraus an. Bei anderen schulischen Fächern zuordenbaren Phänomenen, wie z.B. der Nuklearkatastrophen von Fukushima und Tschernobyl, haben Eltern zumeist aus ihrer eigenen Lebenserfahrung bzw. ihrer (Schul-)Bildung einen Wissensvorsprung gegenüber ihren Kindern in der Sekundarstufe, der neben den gesellschaftlichen auch die technischen Aspekte umfasst. In Bezug auf technische Aspekte der Informatik bei tagesaktuellen Phänomenen dreht sich diese althergebrachte Rollenverteilung jedoch oft um. 1Aalborg University, Department of Computer Science, Selma Lagerlöfs Vej 300, DK-9220 Aalborg, Denmark, ktfoerster@cs.aau.dk. Klaus-Tycho Foerster is supported by the Danish Villum Foundation.I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 171ii “proceedings” — 2017/9/17 — 20:19 — page 172 — #172 ii i ii i2 Klaus-Tycho Förster Sofern die Eltern nicht ein erhebliches fachliches Interesse an der Informatik zeigen, begegnet ihnen der technische Hintergrund nur in alltäglichen Zusammenhängen, wie etwa in Nachrichten, Zeitungsartikeln oder Diskussionssendungen in Radio und Fernsehen. Dabei ist ohne Vorkenntnisse nur schwer zu überprüfen, ob geführte Argumentationsketten oder (anscheinend) fachliche Aussagen auch der Realität entsprechen. Die gesellschaftlichen Implikationen sind nachvollziehbar, basieren aber gegebenenfalls auf verfälschten informatischen Annahmen. Auf Grund der teilweisen Rollenumkehr ist es rein mit technischen Argumenten für Schülerinnen und Schüler der Sekundarstufe I eher schwierig, mit ihren Eltern gemeinsam über informatische Phänomene zu diskutieren. Auch bei Kenntnis der Positionen diverser gesellschaftlicher Gruppierungen und Interessenverbänden liegt eine Akzeptanz der entgegengesetzten Meinung durch die Schülerinnen und Schüler nicht unbedingt vor, dieser gegenseitige Respekt ist für eine Diskussion jedoch unabdingbar: Teilweise kommt es zu der Kollision von technischem Optimismus und gesellschaftlichem Pessimismus. Ein aktives Erleben und Nachvollziehen der Meinungsbildung scheint daher unerlässlich für eine aktive Multiplikatoren-Rolle der Schülerinnen und Schüler gegenüber ihrem lokalen Umfeld. In anderen Schulfächern, wie etwa Sozialkunde oder Politik, wird dazu im Vergleich zur Informatik häuﬁger die Methode der Podiumsdiskussion eingesetzt. Anhand durch die Lehrkraft vorbereitetes oder durch die Schülerinnen und Schüler gesuchtes Quellenmaterial werden Positionen vorher deﬁnierter Gruppen ausgearbeitet, die in einem Rollenspiel ähnlich einer Talkshow ausdiskutiert werden. Dabei wird auch das Publikum aktiv eingebunden: „ Diese Art von Rückkopplung dient dazu, die Klassen stärker in die Diskussion miteinzubeziehen und den Realitätsbezug der Positionen zu erhöhen “ [Bu04]. Natürlich wird die Methode des Rollenspiels auch im Informatikunterricht schon seit längerem verwendet, z.B. zur Simulation einer CPU [ Gi] oder der Einführung der objektorientierten Modellierung [ Di07 , S.86  ]. Für eine weitergehende Betrachtung der Thematik siehe etwa [ Fo07 ]. Die Methode des Rollenspiels scheint jedoch in der Fachliteratur zumeist auf eher technische bzw. algorithmische Aspekte der Informatik angewandt zu werden. 2Vorratsdatenspeichung im technischen Bezug von Computernetzen Es stellt sich dabei die Frage, warum diese Multiplikatoren-Rolle für die Vorratsdatenspeicherung insgesamt in einem Informatikunterricht behandelt werden muss. Man könnte meinen, dass man die physikalischen Grundlagen der Nachrichtenübermittlung auch in Physik, nur die benötigten Netzelemente in Informatik und dann abschließend davon getrennt die gesellschaftlichen Auswirkungen in einer Podiumsdiskussion im Politikbzw. Sozialkundeunterricht vermitteln kann. Insbesondere in Bezug auf die gesellschaftlichen Aspekte lässt sich diese Auslagerung in andere Fächer nach Schubert und Schwill jedoch nicht vornehmen:172 Klaus-Tycho Försterii “proceedings” — 2017/9/17 — 20:19 — page 173 — #173 ii i ii iVom Flaggenalphabet zur Vorratsdatenspeicherung 3 „Ethische und rechtliche Regelungen spielen in diesem Unterrichtsgegenstand eine große Rolle. Wenn sich Informatiklehrer dieser Aspekte nicht annehmen, gehen die fachlichen Bezüge im Lernprozess verloren. Man kann sicher in anderen Fächern darüber sprechen, aber kaum Verständnis für die komplexen Zusammenhänge entwickeln. Die Wirkungsprinzipien der Internet-Architektur bilden die kognitive Basis für das Verstehen der komplizierten Umsetzung der Gesetzgebung. “ [SS04, S.267f.]. Ein eigenes Erfahren und Erforschen durch die Schüler ist dabei sicherlich sinnvoll, „ weil die Lernenden eher an den Werkzeugen und Anwendungsbeispielen, vor allem aber am eigenen Tun interessiert sind als an den Fachinhalten “ [Mo03, S.189]. Die Schülerinnen und Schüler für die technische Beherrschung und gesellschaftliche Beurteilung von Computernetzen zu befähigen, wird bei der Konzeption von Informatikunterricht in Zukunft sicherlich eine immer wichtiger werdende Rolle spielen, denn die Frage „ Wie kommunizieren zwei Rechner miteinander? “ ist nach Aussage von Hubwieser von hoher allgemein bildender Bedeutung [ Hu07 , S.245]. Schubert und Schwill verweisen ebenfalls darauf, dass im Falle der Informationsund Kommunikationssysteme der Bildungswert sehr hoch eingeschätzt werden muss, da diese Systeme unter anderem folgendes Ziel für Schüler ermöglichen: „ Sie verstehen die Wirkprinzipien von Rechnernetzen und verteilten Systemen, der Basistechnologie neuer gesellschaftlicher Entwicklungen “[SS04 , S.255]. Es sollte daher während der schulischen Ausbildung rechtzeitig und regelmäßig bei den Schülerinnen und Schülern gesorgt werden für die §3.1 Präzisierung des Begri  es der Kommunikation und Analyse ihrer Komponenten §3.2 Entwicklung eines technischen Grundverständnisses über Aufbau und Funktion von Computernetzen §3.3 Fähigkeit zur sachgerechten Beurteilung der Vorteile und Risiken der Kommunikation in Computernetzen Aufbauend auf diesen Kompetenzen kann eine gesellschaftliche Einordnung des Phänomens der Vorratsdatenspeicherung unter Berücksichtigung technischer Aspekte (§3.4) im Informatikunterricht durch die Schülerinnen und Schüler im Rahmen etwa einer Podiumsdiskussion geleistet werden . Ohne die vorherige technische Grundlagenlegung in (§3.1 §3.3) kann die komplexe Thematik der Vorratsdatenspeicherung von den Schülerinnen und Schülern nicht adäquat beurteilt werden, sie sind ein notwendiger Baustein. Ein kurzer Vorschlag für eine mögliche Umsetzung der Thematik wird dazu im nächsten Abschnitt gegeben. Er basiert auf einer mehrfach durchgeführten Unterrichtssequenz im Umfang von ca. 4 Doppelstunden, welche im Informatikunterricht der 9. Klasse gehalten wurde. Die Doppelstundenthemen ergeben sich aus dem obigen Aufbau: §3.1 Wie funktioniert Kommunikation? §3.2 Wesentliche Aspekte eines Computernetzes §3.3 Untersuchung von Eigenschaften eines Computernetzes §3.4 Auswirkungen der VorratsdatenspeicherungVom Flaggenalphabet zur Vorratsdatenspeicherung 173ii “proceedings” — 2017/9/17 — 20:19 — page 174 — #174 ii i ii i4 Klaus-Tycho Förster Natürliche Erweiterungen ergeben sich durch ausführlichere Behandlung der Anonymität in Computernetzen und der Planung von Computernetzen für diverse Anwendungsfälle. Weiteres Beispielmaterial und vorläuﬁge Ausführungen ﬁnden sich in [Fo10]. 3 Ein praktischer Durchführungsvorschlag 3.1 Wie funktioniert Kommunikation? •Welche Kommunikationsarten gibt es, welche Regeln gelten hierbei? •„Analoge“ Beispiele: Morsen, Winkieralphabet mit Flaggen, Seefunk •Welche Besonderheiten gibt es bei Nachrichten zwischen Computern? •Wie sehen Pakete im Netzwerk vereinfacht aus? Die Grundlagen von Computernetzen basieren auf der Kommunikation mit Protokollen, während die Vorratsdatenspeicherung Protokolle über die Kommunikation anlegt. Ein Einstieg in die Unterrichtssequenz über die Vorratsdatenspeicherung wäre zwar möglich, für Schülerinnen und Schüler der Sekundarstufe I scheint die Thematik zu diesem Zeitpunkt jedoch noch zu abstrakt zu sein, bzw. führt nicht direkt zu den dahinterliegenden technischen Aspekten. Nach eigener Erfahrung reicht die Behandlung von Computernetzen anscheinend als intrinsische Motivation in der 9. Klassenstufe aus, jedoch nicht für einen Einstieg über die Eigenschaften von Kommunikation – hier bietet sich eine aktive Erforschung durch die Schülerinnen und Schüler an. Die praktische Untersuchung nur einer einzelnen Kommunikationsart würde jedoch wie bei der Verwendung nur einer einzelnen Programmiersprache (vergl. [ St11]) eher zu Produktwissen führen, statt allgemeingültige Komponenten wie Sender und Empfänger zu identiﬁzieren. Für viel Freude bei den Schülerinnen und Schülern sorgt dabei das praktische Ausprobieren in Gruppen von Morsen mit Taschenlampen und dem Einsatz von je zwei Signalﬂaggen pro Sender. Abhängig vom Zeitansatz können weitere Kommunikationsarten hinzugefügt werden (z.B. Zeichensprache) bzw. Hilfsmittel wie eine Morsecode-Tabelle weggelassen werden. Eine Vertiefung dieser Thematik für weitere Unterrichtsstunden in der Oberstufe wird in [ Me12 ] ausgeführt. Ausgehend von diesem Grundverständnis der Kommunikation kann in der verbleibenden Zeit der ersten Doppelstunde eine stark vereinfachte Version der paketbasierten Nachrichtenübermittlung zwischen Computern durch die Schülerinnen und Schüler erarbeitet werden. 3.2 Wesentliche Aspekte eines Computernetzes •(Gruppenpuzzle) Was ist bzw. wie funktioniert es? •(Stammgruppe) eine MACbzw. IP-Adresse •(Expertengruppen) Router, Switch, WLAN? Hartman et al. [ HNR06 ] formulieren als eine zentrale Leitidee, dass die Adressierung ein wichtiger Aspekt bei Netzprotokollen sei und eine Grundvoraussetzung für die funktionierende Kommunikation. Explizit wird dabei erwähnt, dass die Lernenden auch in174 Klaus-Tycho Försterii “proceedings” — 2017/9/17 — 20:19 — page 175 — #175 ii i ii iVom Flaggenalphabet zur Vorratsdatenspeicherung 5 der Lage sein sollen, selbständig MACund IP-Adresse herauszuﬁnden [ HNR06 , S.54f]. Daher werden zunächst die notwendigen technischen Fachkenntnisse aufgebaut, bevor in der nächsten Doppelstunde das Netz an sich erforscht wird. Durch die Vielfältigkeit des Themas wird eine Untersuchung der gängigen Komponenten eines Computernetzwerkes mithilfe eines Gruppenpuzzles durchgeführt. Nach einer Betrachtung von MAC und IP-Adressen in Stammgruppen werden in Expertengruppen die Bereiche Router, Hub/Switch und WLAN bearbeitet, um anschließend in den Stammgruppen nach gegenseitiger Erklärung ein eigenes kleines Computernetzwerk zu planen und mithilfe von Postern dieses den anderen Gruppen zu präsentieren. Durch die konkrete Identiﬁkation mit eigenen Netzwerkkomponenten zu Hause konnten auch zeitlich relativ anspruchsvolle Arbeitsaufträge gegeben werden, da die Schülerinnen und Schüler großes Interesse daran zeigten, „ wie das alles funktioniert “. 3.3 Untersuchung von Eigenschaften eines Computernetzes •Erkunden gängiger Netzwerkeigenschaften durch eigenständige Erforschung von Netzwerken mit Standardprogrammen •Geograﬁsches Zuordnen von IP-Adressen bzw. Nachverfolgung der Route von Nachrichtenpaketen •Theoretische und praktische Möglichkeiten zur Anonymisierung in Computernetzen In den folgenden beiden Unterrichtsstunden wird zunächst die Untersuchung von Netzwerkeigenschaften mit Standardbefehlen ( arp,ping,traceroute ,nslookup etc.) zur Nachvollziehbarkeit von Kommunikation durchgeführt, bevor theoretische und praktische Möglichkeiten (z.B. über das TOR-Netzwerk 2zur Verschleierung auch von Verbindungsdaten) der Anonymisierung thematisiert bzw. ausprobiert wurden. Hierbei kann auch der Aufbau des Internets durch sogenannte Autonome Systeme thematisiert werden, siehe dazu [He15]. Die Thematik der Verschlüsselung wird dabei über die Visualisierung der Inhalte unverschlüsselten Netzverkehrs mit Werkzeugen wie Wireshark 3angesprochen (vergl. [ HNR06 , S.127], siehe Abb. 1. Die (komplexe) Technik hinter kryptographischen Verfahren kann in einer weiteren Unterrichtseinheit behandelt werden, siehe etwa RSA&Co von Witten und Schulz [ WS10 ] oder im Kontext von Emails in [ GHW12 ]. Weitere Anregungen zu Datenschutz und Privatsphäre ﬁnden sich in [Be15]. 3.4 Auswirkungen der Vorratsdatenspeicherung •Argumente für und gegen die Nachverfolgbarkeit von IP-Adressen im Internet •Positionen verschiedener gesellschaftlicher Gruppen zur Vorratsdatenspeicherung •Vorbereitung und Durchführung einer Podiumsdiskussion 2https://www.torproject.org/ 3https://www.wireshark.org/Vom Flaggenalphabet zur Vorratsdatenspeicherung 175ii “proceedings” — 2017/9/17 — 20:19 — page 176 — #176 ii i ii i6 Klaus-Tycho Förster Abb. 1: Mitlesen von vermeintlich geschützten Inhalten mit Wireshark . Die in der abschließenden Doppelstunde vorbereitete und durchgeführte Podiumsdiskussion über die Vorratsdatenspeicherung sollte dabei einen groben Querschnitt durch die Gesellschaft repräsentieren, als Gruppen bieten sich hierbei etwa die Sicht der Provider, der Polizei, von Parteien und die von Datenschützern an. Wichtig dabei ist die konkrete Auseinandersetzung in Gruppen mit zugehörigem Quellenmaterial, z.B. Zeitungsartikel, Interviews, Pressemeldungen, Webseiten etc. Nur daraus können die Schülerinnen und Schüler sich in die gewählte Position hineinﬁnden, die Argumentationsketten nachvollziehen und technisch beurteilen, siehe Abb. 2 für einige Beispiele 4 Abb. 2: Beispielposter für verschiedene gesellschaftliche Positionen zur Vorratsdatenspeicherung. Bewährt hat sich dabei die Moderation der Podiumsdiskussion durch eine(n) Schülerin bzw. Schüler, da die Lehrkraft sich damit im (beobachtenden) Abseits aufhalten kann und es eher um die Sache an sich geht, wodurch nach kurzer Zeit auch sonst eher ruhigere Schülerinnen und Schüler in den Diskussionsﬂuss kamen. Bemerkenswert war dabei die relative Länge der Podiumsdiskussionen (ca. 30 Minuten) 4Einalternativer Einstieg bietet sich über mögliche Auswertungsszenarien der Vorratsdaten an [OG14, OS11].176 Klaus-Tycho Försterii “proceedings” — 2017/9/17 — 20:19 — page 177 — #177 ii i ii iVom Flaggenalphabet zur Vorratsdatenspeicherung 7 und die inhaltliche Tiefe, welche wahrscheinlich nur durch die direkte Identiﬁkation im Rollenspiel, das geweckte persönliche Interesse der Schülerinnen und Schüler im Publikum und die vorherige ausführliche Quellenarbeit möglich war, wobei als direkte Grundlage auf die technischen Aspekte von Computernetzen zurückgegri  en werden konnte. Auch ergab sich im Anschluss nicht ein einseitiger Ausschlag dafür oder dagegen, die einzelnen Schülermeinungen blieben di  erenziert, wenn auch eher gegen die Vorratsdatenspeicherung tendierend. 4 Fazit Obwohl oder gerade weil die ersten Stunden stark theoretisch und technisch fundiert waren, zeigten die Schülerinnen und Schüler starkes Interesse und Begeisterung an der Thematik. Erst das technische Grundverständnis von Kommunikation in Computernetzen erlaubte ihnen eine angemessene Beurteilung der in Bezug stehenden gesellschaftlichen Aspekte der Informatik. Nach Aussage mehrerer Schülerinnen und Schüler ergab sich aus der Unterrichtssequenz heraus zumindest ein kurzer Austausch mit der Familie, wobei gerade die Weitergabe technischen Wissens von Interesse war. Da das Hauptlernziel natürlich nicht eine Multiplikatorenausbildung ist, sondern der Wissensund Kompetenzgewinn der Schülerinnen und Schüler, positiv überprüft durch eine Klassenarbeit, ist diese Weitergabe ein interessanter zusätzlicher E  ekt, den wir in der Zukunft auch weiter untersuchen möchten. Als eine weitere Auswirkung ergab sich auch, dass die Schülerinnen und Schüler nach der Sequenz viele Arten von eingerichteten Internetseitensperren (nicht nur) in der Schule umgehen konnten – und dieses Wissen als Multiplikatoren auch gerne aktiv unter Mitschülern verbreiteten – ein (un[?])gewollter Aspekt der Unterrichtssequenz. Es wäre dabei sicherlich interessant, diese Multiplikatorenwirkung bewusst als Unterrichtsmethode zu verwenden, etwa durch die Einbeziehung der Schülerinnen und Schüler: Welches Wissen und welche Kompetenzen müsstet ihr anderen (Erwachsenen) vermitteln, sodass diese fachlich fundierte Entscheidungen tre  en können? Dabei ist die Vorratsdatenspeicherung nur ein (immer noch) aktuelles Anwendungbeispiel für den Unterricht. Mögliche Alternativen im Bereich Computernetze wären etwa auch Netzneutralität oder Internetsperren. Abschließend möchten wir noch einmal anmerken, dass (nicht nur) unserer Meinung nach jede Unterrichtssequenz, die Informatik und Gesellschaft behandelt, auch zwingend die technischen Aspekte behandeln muss. Denn zum Verstehen und Gestalten der digitalen Welt sind die fachlichen Hintergründe immer notwendig, sonst wandelt sich das Potenzial vom aktiven Mitwirken zum passiven Erfahren der Auswirkungen, ein gesellschaftlicher Aspekt, den nur das Schulfach Informatik adäquat behandeln kann.Vom Flaggenalphabet zur Vorratsdatenspeicherung 177ii “proceedings” — 2017/9/17 — 20:19 — page 178 — #178 ii i ii i8 Klaus-Tycho Förster Danksagung Abschließend möchte der Autor herzlichst Ylva Brandt, Eckart Modrow und Kerstin Strecker für viele anregende Diskussionen und Hinweise danken, ebenso Ira Diethelm für das Konzept der Abendbrotgespräche und Vorabversionen ihrer Artikel sowie den anonymen Reviewern für ihre hilfreichen Anmerkungen, u.a. für die Idee der Multiplikatorenwirkung als Unterrichtsmethode, als auch Nina Schneider für Hinweise zur ﬁnalen Formatierung. Literatur [Be15] Berendt, Bettina; Dettmar, Gebhard; Esslinger, Bernhard; Gramm, Andreas; Grillenberger, Andreas; Hug, Alexander; Witten, Helmut: Datenschutz im 21.Jahrhundert Ist Schutz der Privatsphäre (noch) möglich? In: INFOS. Jgg. P-249 in LNI. GI, S. 33–42, 2015. [Bu04] Bundeszentrale für politische Bildung: , Makromethode Podiumsdiskussion (Forschen mit GrafStat). http://www.bpb.de/lernen/formate/methoden/46894/podiumsdiskussion, 2004. Zuletzt abgerufen am 10. Februar 2017. [DD11] Diethelm, Ira; Dörge, Christina: Zur Diskussion von Kontexten und Phänomenen in der Informatikdidaktik. In: INFOS. Jgg. P-189 in LNI. GI, S. 67–76, 2011. [Di07] Diethelm, Ira: Strictly models and objects ﬁrst: Unterrichtskonzept und -methodik für objektorientierte Modellierung im Informatikunterricht. Dissertation, University of Kassel, Germany, 2007. [DKW11] Diethelm, Ira; Koubek, Jochen; Witten, Helmut: IniK – Informatik im Kontext: Entwicklungen, Merkmale und Perspektiven. LOG IN, 32/33(169/170):97–105, 2011. [Fo07] Fothe, Michael: Algorithmen in spielerischer Form. In (Stechert, Peer, Hrsg.): Praxisband der 12. Fachtagung Informatik und Schule INFOS. 2007. [Fo10] Foerster, Klaus-Tycho: Didaktische Reduktion des Themenkomplexes Computernetze unter besonderer Berücksichtigung der technischen Aspekte ein Unterrichtsversuch im Jahrgang 9. Schriftliche Arbeit im Rahmen der zweiten Staatsprüfung, Studienseminar Göttingen für das Lehramt an Gymnasien, 2010. [GHW12] Gramm, Andreas; Hornung, Malte; Witten, Helmut: Email for you (only?): design and implementation of a context-based learning process on internetworking and cryptography. In: WiPSCE. ACM, S. 116–124, 2012. [Gi] Gierhardt, Horst: , CPU-Simulation als Rollenspiel (aus: Mikroprozessor-Simulation mit dem DC (Didaktischer Computer). http://www.gierhardt.de/informatik/dc/Rollenspiel.pdf. Zuletzt abgerufen am 10. Februar 2017. [He15] Hennecke, Martin: Modellvorstellungen zum Aufbau des Internets. In: INFOS. Jgg. P-249 in LNI. GI, S. 155–164, 2015. [HNR06] Hartmann, Werner; Näf, Michael; Reichert, Raimond: Informatikunterricht planen und durchführen. Springer, 2006. [Hu07] Hubwieser, Peter: Didaktik der Informatik: Grundlagen, Konzepte, Beispiele (3.Auﬂage). Springer, 2007.178 Klaus-Tycho Försterii “proceedings” — 2017/9/17 — 20:19 — page 179 — #179 ii i ii iVom Flaggenalphabet zur Vorratsdatenspeicherung 9 [Ko] Koubek, Jochen: , Informatik im Kontext (IniK). http://www.informatik-im-kontext.de. Zuletzt abgerufen am 10. Februar 2017. [Me12] Merkert, Klaus: , Kommunikation in Rechnernetzen. http://www.hsgkl.de/faecher/inf/netze/lehrplan/index.php, Dezember 2012. Zuletzt abgerufen am 10. Februar 2017. [Mo03] Modrow, Eckart: Fundamentale Ideen der theoretischen Informatik. In: INFOS. Jgg. 32 in LNI. GI, S. 189–200, 2003. [OG14] OpenDataCity; Glättli, Balthasar: , Vorratsdaten-speicherung in der Schweiz: Das überwachte Leben von Nationalrat Balthasar Glättli. https://apps.opendatacity.de/vds/, April 2014. Zuletzt abgerufen am 10. Februar 2017. [OS11] Online, Zeit; Spitz, Malte: , Vorratsdatenspeicherung: Verräterisches Handy. http://www.zeit.de/datenschutz/malte-spitz-vorratsdaten, März 2011. Zuletzt abgerufen am 10. Februar 2017. [SS04] Schubert, Sigrid E.; Schwill, Andreas: Didaktik der Informatik. Spektrum Akadem. Verl., 2004. [St11] Strecker, Kerstin: Einstieg in die Algorithmik. Lehrerbildungszentrum Informatik Göttingen, 2011. [WS10] Witten, Helmut; Schulz, Ralph-Hardo: RSA&Co in der Schule Moderne Kryptologie, alte Mathematik, ra  nierte Protokolle. Neue Folge (Teil 4). LOG IN, 30(163/164):97–103, 2010.Vom Flaggenalphabet zur Vorratsdatenspeicherung 179ii “proceedings” — 2017/9/17 — 20:19 — page 180 — #180 ii i ii iii “proceedings” — 2017/9/17 — 20:19 — page 181 — #181 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017  15 Hamburg 2050, Land unter? Eine „Informatik im Kontext“-Reihe zu Klimamodellierung mit Geoinformationssystemen Jonathan Otto1, Michel Welke2, Andreas Gramm3, Leonard Diekmann4, Maria Knobelsdorf5   Abstract: Dieser Beitrag stellt eine interdisziplinär ausgerichtete „Informatik im Kontext“-Unterrichtsreihe für das Wahlpflichtfach Informatik in der Sekundarstufe I vor sowie erste Erfahrungen einer Erprobung der Reihe in Klasse 10 einer Hamburger Stadtteilschule. An die Kontextorientierung im Hamburger Bildungsplan für das Wahlpflichtfach Informatik anknüpfend, thematisiert die Reihe Grundkonzepte informatischer Bildung aus den Kompetenzbereichen „Informationen und Daten“, „Informatiksysteme“ und „Informatik, Mensch und Gesellschaft“ im Kontext von Klimawandel und Klimamodellierung mit dem Geoinformationssystem QGIS. Fächerübergreifende Bezüge zum Schulfach Geografie werden durch das Thema Klimawandel, das digitale Werkzeug QGIS und die damit einhergehenden geografischen Fragestellungen hergestellt. Keywords: Informatik im Kontext, IniK, Bildungsstandards, Wahlpflichtfach Informatik, Hamburg, Geographische Informationssysteme, GIS. 1 Einleitung „Informatik ist per se fachübergreifend und fächerverbindend, deshalb ist Inter-disziplinarität ein Grundsatz der Unterrichtsgestaltung. Das bedeutet, dass informatische Kompetenzen im Grunde nur in einem Unterricht erworben werden können, der von vornherein interdisziplinär angelegt ist.“ ([GI08], S. 10). Angesichts der im Rahmen der Digitalisierung immer stärker zunehmenden Durchdringung von Branchen, Disziplinen, privaten und öffentlichen Bereichen mit informatischen Methoden, Anwendungen und Systemen ist der interdisziplinäre Aspekt informatischer Bildung aktueller denn je. Doch was bedeutet es konkret, wenn Informatikunterricht über die Grenzen der eigenen Disziplin hinausgehen soll? Wie kaum ein anderer fachdidaktischer Ansatz greift „Informatik im Kontext“ (IniK) [KSSW09] die Forderung nach Interdisziplinarität durch                                                              1 Universität Hamburg, Fachbereich Informatik, Vogt-Kölln-Str. 30, 22527 Hamburg, Jonathan.Otto@informatik.uni-hamburg.de 2 Universität Hamburg, Fachbereich Informatik, Vogt-Kölln-Str. 30, 22527 Hamburg, michel.welke@studium.uni-hamburg.de 3 Gymnasium Tiergarten, Altonaerstr. 26, 10555 Berlin, gramm@gymnasium-tiergarten.de 4 Universität Hamburg, Fachbereich Informatik, Vogt-Kölln-Str. 30, 22527 Hamburg, diekmann@informatik.uni-hamburg.de 5 Universität Hamburg, Fachbereich Informatik, Vogt-Kölln-Str. 30, 22527 Hamburg, knobelsdorf@informatik.uni-hamburg.de I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 181ii “proceedings” — 2017/9/17 — 20:19 — page 182 — #182 ii i ii i 16    Jonathan Otto et al.  die Orientierung an lebensweltlichen Kontexten und den Bildungsstandards zweifach auf. Mit der Orientierung an Kontexten wird im IniK-Ansatz das Ziel verfolgt, für die Schülerinnen und Schüler bedeutsame und nachvollziehbare Zusammenhänge zwischen ihrer Lebenswelt und den Fachinhalten des Schulfachs herzustellen. Hierzu sollen lebensweltliche Fragestellungen, Phänomene und Probleme der Alltagswelt betrachtet werden, die verschiedene fachliche Dimensionen haben und so einen Bezug zu mehreren Fachdisziplinen ermöglichen. Weil nicht nur informatische, sondern auch z. B. politische, ökonomische, ethische oder rechtliche Fragestellungen eines Kontexts thematisiert werden, kann so ein interdisziplinärer Unterricht gestaltet werden. In den letzten Jahren sind verschiedene, vor allem im Berliner Raum entwickelte, IniK-Unterrichtsreihen vorgestellt worden, die beispielhaft erfolgreich das Prinzip des kontextorientieren Informatikunterrichts umgesetzt haben. Das Prinzip der Interdisziplinarität ist dabei jedoch nicht in dem Maße berücksichtigt worden, wie die Kontextkriterien von IniK dies jeweils vorsehen. Diese Lücke wollen wir schließen und im folgenden Artikel eine interdisziplinäre IniK-Unterrichtsreihe zu Klimawandel und -modellierung mit Geoinformationssystemen (GIS) vorstellen, die Bezüge zum Geografieunterricht in der Sekundarstufe I (Sek. I) herstellt. Im nächsten Abschnitt stellen wir kurz den fachdidaktischen Ansatz IniK vor und leiten dann her, inwiefern das Thema Klimawandel und -modellierung mit GIS als möglicher Kontext für eine IniK-Reihe umsetzbar ist. In Abschnitt 3 beschreiben wir die konkrete Unterrichtsplanung. Abschnitt 4 zieht ein erstes Fazit aus der konkreten Erprobung der Unterrichtsreihe an einer Hamburger Stadtteilschule. 2 Informatik im Kontext der Geografie Als zentrale Merkmale eines IniK-Unterrichts werden die folgenden drei Prinzipien genannt: Orientierung an lebensweltlichen Kontexten, Orientierung an Bildungsstandards wie den Empfehlungen der Gesellschaft für Informatik (GI) (vgl. [GI08]) und der Einsatz einer Vielfalt an lernerzentrierten Methoden. Weiterhin werden fünf Kriterien für die Auswahl geeigneter Kontexte definiert (im Folgenden als „Kontextkriterien“ bezeichnet). Was bedeutet die Orientierung an Kontexten genau? Was bedeutet es für informatische Bildung und den Informatikunterricht, wenn ein Bezug zur Lebenswelt der Schülerinnen und Schüler gezogen wird und der Unterricht dabei interdisziplinäre Züge aufweisen soll? Koubek et al. (2009) definieren einen Kontext als einen spezifischen Handlungsrahmen einer konkreten, durch das Individuum erlebbaren Situation: „Jede Situation hat ihre technischen, sozialen, ethischen, rechtlichen, ökonomischen, ästhetischen etc. Aspekte, die zusammen den Kontext ausmachen.“ ([KSSW09], S. 4) Konkret auf den Unterricht bezogen stellen Kontexte eine „Menge von lebensweltlichen Themen bzw. Fragestellungen [dar], die von den Schülerinnen und Schülern als zusammenhängend geordnet werden und die dadurch sinnstiftend auf deren Handlungen wirken“ (ebd., S. 5). Ein solcher Kontext sollte laut Diethelm et al. ([DKW11], S. 102) informatisch relevant sein und sich auf möglichst viele Kompetenzen der Bildungsstandards beziehen (Kriterium der Tiefe). Er sollte aber 182 Jonathan Otto, Michel Welke, Leonard Diekmann, Maria Knobelsdorfii “proceedings” — 2017/9/17 — 20:19 — page 183 — #183 ii i ii i Hamburg 2050, Land unter?    17 auch Bezüge zu anderen Disziplinen oder Bereichen aufweisen (Kriterium der Mehrdimensionalität) und gesellschaftlich relevant (Kriterium der Breite), über einen längeren Zeitraum stabil (Kriterium Stabilität) sowie durch Bezüge zur Lebenswelt der Schülerinnen und Schüler potenziell erlebbar (Kriterium der Lebenswelt) sein. Für die konkrete Unterrichtsstruktur wurde vorgeschlagen, dass sich eine IniK-Unterrichtseinheit an den vier Phasen kontextorientieren Unterrichts orientiert: Begegnungsphase, Neugierund Planungsphase, Erarbeitungsphase und Vernetzungsphase [KSSW09]. Wir wollen im Folgenden das geographische Thema Klimawandel und sein geoinformatisches Pendant Klimamodellierung mit GIS als einen möglichen Kontext für eine IniK-Unterrichtsreihe vorstellen und diskutieren. 2.1 Klimawandel und Klimamodellierung mit GIS als lebensweltlicher Kontext Die Geowissenschaften durchleben seit Jahrzehnten eine starke digitale Transformation, die unter anderem Geoinformationssysteme (GIS) hervorgebracht hat. GIS sind ein leistungsstarkes und vielfältiges digitales Werkzeug, um geografische Fragestellungen mit informatischen Methoden zu erforschen. Auch im Schulbereich sind GIS als ein zentrales Lehr-Lern-Werkzeug für den Geografieunterricht anerkannt und in die Geografie-Bildungsstandards für die Sek. I integriert worden [MSV11]. Klima, als ein zentrales Thema des Schulfaches Geografie in der Sek. I, beinhaltet ein Verständnis des Klimasystems an sich und analysiert dessen Interaktion mit anderen Ökosystemen auf der Erde. Der Schwerpunkt liegt dabei auf der Betrachtung der verschiedenen Klimaelemente (Temperatur, Niederschlag, Wind, Sonnenschein usw.) und wie deren Veränderungen das System Erde beeinflussen. Forschung in diesem Bereich ist von großer Bedeutung, um insbesondere den menschlichen Einfluss auf das Klimasystem zu verstehen. Hierfür werden computerbasierte Klimamodelle entwickelt und eingesetzt, um Veränderungen zu analysieren und Vorhersagen für die Zukunft treffen zu können. Für die Erfassung, Analyse und Visualisierung von Klimadaten stellen GIS ein wichtiges und vielgenutztes Werkzeug dar. GIS bestehen aus einer räumlichen Datenbank und einem grafischen Interface zur Erfassung, Verwaltung, Analyse und Visualisierung von Daten (vgl. Abbildung 1), die einen räumlichen und zeitlichen Bezug haben. Raumund zeitbezogene Datenquellen definieren geografische Informationen, die sich auf Objekte und Prozesse geografischer Phänomene beziehen, die auf der Erde beobachtbar sind. Geografische Phänomene können hinsichtlich ihrer Ursachen und Wirkungen variieren: So ist Niederschlag zum Beispiel ein Wetterphänomen, während Migration ein geopolitisches und sozio-kulturelles Phänomen darstellt. Die Datenvisualisierung mit einem GIS stellt eine mehrschichtige Repräsentation räumlich-zeitlicher Prozesse mit unterschiedlichen Dimensionen und Auflösungen dar, die weit über die Möglichkeiten einer Papierkarte hinausgehen. Die Darstellung der Daten wird durch rasterund vektorbasierte Grafiken umgesetzt, wobei unterschiedliche Datenformate sowie Möglichkeiten zur Datenanalyse bereitgestellt werden. Mithilfe von SQL (Structured Query Language) können Daten sowohl attributbezogen als auch räumlich selektiert und analysiert werden. Eine Reihe Hamburg 2050, Land unter? – Eine „Informatik im Kontext“-Reihe 183ii “proceedings” — 2017/9/17 — 20:19 — page 184 — #184 ii i ii i 18    Jonathan Otto et al.  unterschiedlicher Algorithmen sind in jedem GIS integriert und können durch eigene Programme (z. B. mit Python oder Java) ergänzt werden [SS05]. Die Software QGIS ist im Schulbereich ein vielgenutztes, Open-Source-basiertes GIS, welches alle gängigen Funktionen für die Arbeit mit GIS enthält.   Abbildung 1: Screenshot der Software QGIS mit Niederschlagsdaten für Deutschland (Datenquelle: Deutscher Wetterdienst, DWD) 2.2 IniK-Kontextkriterien und gewählter Kontext GIS an sich stellen noch keinen Lebensweltbezug für die Schülerinnen und Schüler dar und benötigen einen Anwendungsbereich, in dem sie sinnstiftend zur Erkenntnis-gewinnung eingesetzt und genutzt werden können. GIS können in zahlreichen unterschiedlichen Kontexten zum Einsatz kommen, z. B. für die Raumund Stadtplanung, das Management des Verkehrsaufkommens in Städten und Häfen, die Analyse von Naturkatastrophen oder die archäologische Kartografie von Ausgrabungsstätten. Der in dieser Unterrichtseinheit verwendete Kontext aus dem Fach Geografie ist das Thema Klima und Klimamodellierung am regionalen Beispiel von Hamburg. Der regionale Bezug stellt dabei das Klima und die Folgen des Klimawandels im Raum Hamburg in den Mittelpunkt. Aufgrund der gesellschaftlichen Relevanz von Klimaforschung in Zeiten stark wahrnehmbarer Klimaveränderungen und dem Einsatz von Informatiksystemen in diesem Bereich eignet sich Klimawandel und -modellierung unserer Meinung nach für einen kontextorientierten Informatikunterricht, der auch interdisziplinäre Bezüge zum Schulfach Geografie herstellt. Dieser Eindruck bestätigt sich, wenn man den Kontext bezüglich der fünf Kontextkriterien betrachtet.  184 Jonathan Otto, Michel Welke, Leonard Diekmann, Maria Knobelsdorfii “proceedings” — 2017/9/17 — 20:19 — page 185 — #185 ii i ii i Hamburg 2050, Land unter?    19 Der Klimawandel und die Frage, welche Auswirkungen menschliches Handeln darauf hat, stellt nicht nur für die Schülerinnen und Schüler, sondern für die gesamte Welt-bevölkerung einen lebensweltlichen Kontext dar, der durch Wetterphänomene sowie Diskussionen um Folgefaktoren wie Migrationsbewegungen oder Ressourcenkonflikte direkt und indirekt erlebbar ist. Der Kontext hat aufgrund der menschlichen Veränderungen des Klimasystems und der damit verbundenen Verantwortung im Hinblick auf Produktion und Nachhaltigkeit eine ethische und ökonomische Dimension sowie aufgrund der räumlichen Wirkung auf verschiedenen Skalen auch eine geografische Dimension. Die Klimamodellierung und -simulation mit informatischen Werkzeugen wiederum ermöglicht überhaupt erst eine fundierte wissenschaftliche Betrachtung des Themas, wodurch informatische Methoden, Konzepte und Prinzipien eine zentrale Rolle spielen. Damit ist das Kriterium der Mehrdimensionalität im Sinne des IniK-Ansatzes erfüllt und Bezüge zu einem fächerübergreifenden Unterricht sind gegeben. So kann eine IniK-Reihe mit Schwerpunkt auf Klimamodellierung mit GIS im Informatikunterricht starten und im Schulfach Geografie mithilfe von GIS weitere Fragestellungen bearbeiten. Darüber hinaus ist in Abhängigkeit von der Fragestellung die Integration in weitere Fächer möglich (z. B. Politische Weltkunde, Biologie, Physik), die eine nicht-informatische Dimension haben. Neben dem Kontextkriterium der Breite ist auch das Kriterium der Tiefe erfüllt: Wie das nächste Kapitel zeigen wird, ist für die Betrachtung und Entwicklung von Klimamodellen und -simulationen ein solides Hintergrundwissen der Informatik notwendig, welches Kompetenzen aus den Bereichen der Datenverwaltung, Algorithmik, Programmierung und Modellierung erfordert, womit Kompetenzen aus mehreren Kompetenzbereichen der GI-Bildungsstandards erworben werden. An dieser Stelle wird deutlich, dass ohne den thematischen Kontext GIS lediglich eine Datenbankanwendung ist, ohne spezifischen Bedeutungsrahmen für die Schülerinnen und Schüler der Sek. I. Erst durch den Handlungsrahmen, den das Thema Klimawandel und -modellierung vorgibt, entsteht ein mehrdimensionaler Kontext, der interdisziplinäre Fragestellungen für die Informatik und die anderen Schulfächer aufwirft.  3 Eine IniK-Unterrichtsreihe zu Klimawandel mit QGIS In diesem Abschnitt skizzieren wir eine mögliche IniK-Unterrichtsreihe zur Erforschung des Klimawandels mit einem GIS. Wie für IniK-Reihen vorgeschlagen, orientiert sich die informatische Dimension der hier beschriebenen Unterrichtsreihe an den Empfehlungen der GI (Gesellschaft für Informatik e. V.) zu Bildungsstandards für die Sek. I. Konkret werden Kompetenzen aus den Inhaltsbereichen „Informationen und Daten“, „Informatiksysteme“ und „Informatik, Mensch und Gesellschaft“ für die Klassenstufe 8 bis 10 erworben ([GI08], S. 12ff.). Die Unterrichtsreihe fördert dabei besonders folgende Aspekte:  • Informationen und Daten: Informationen in unterschiedlicher Form darstellen, Daten im Kontext der repräsentierten Information interpretieren und Hamburg 2050, Land unter? – Eine „Informatik im Kontext“-Reihe 185ii “proceedings” — 2017/9/17 — 20:19 — page 186 — #186 ii i ii i 20    Jonathan Otto et al.  Vorund Nachteile unterschiedlicher Informationsdarstellungen beurteilen können. • Informatiksysteme: Das Betriebssystem zweckgerichtet benutzen, Dateiformate unterscheiden und sich selbstständig neue Anwendungen und Informatiksysteme erschließen können.  • Informatik, Mensch und Gesellschaft: Seriosität und Authentizität von Informationen aus dem Internet beurteilen, Auswirkungen der Automatisierung auf die Arbeitswelt bewerten und Beurteilen der Umsetzung automatisierter Vorgänge. In der Planung der Unterrichtsreihe stellten sich drei Aspekte als eine Herausforderung dar: 1) die Einführung in den thematischen Kontext, 2) Einführung des Werkzeugs QGIS und 3) die Dekontextualisierung hin zu den Fachkonzepten der Bildungsstandards. Konkrete Fragen stellten sich insbesondere zur Gewichtung, wie z. B. Wie viel Kontext ist nötig, um das Werkzeug und die Fachkonzepte zu motivieren? Wie steht es um das Vorwissen der Schülerinnen und Schüler im Hinblick auf den Klimawandel? Wie intensiv muss das Werkzeug eingeführt werden, um die eigentlichen Leitfragen des Kontexts bearbeiten zu können? Hier wurde relativ schnell deutlich, dass die Planung sich nur sehr grob an den IniK-Unterrichtsphasen orientieren kann. In den folgenden Unterabschnitten beschreiben wir die einzelnen Unterrichtsphasen der hier vorgestellten Unterrichtsreihe zu Klimamodellierung mit QGIS, wobei wir auf die genannten Fragen eingehen.  3.1 Klimawandel als thematischer Kontext  Zu Beginn der IniK-Unterrichtsreihe, wie wir sie hier im Weiteren skizzieren wollen, steht zunächst der Kontext Klimawandel und die geografische, ökonomische sowie ethische Dimension dieses Kontexts im Mittelpunkt. Dazu gehört auch die Relevanz des Klimawandels als globales und regionales Phänomen, welches wir im Folgenden konkret an der Stadt Hamburg und damit als eine mögliche Unterrichtseinheit vor allem aber nicht nur für Hamburger Schülerinnen und Schüler betrachten wollen. Die informatische Dimension ist in dieser Phase zunächst zweitrangig, da es zunächst darum gehen soll, den Bezug zur Lebenswelt der Schülerinnen und Schüler herzustellen und dabei vor allem die ökologischen, ökonomischen und sozialen Folgen des Klimawandels, am Beispiel von Hamburg, zu thematisieren. Die Länge dieser Phase ist abhängig vom Vorwissen der Schülerinnen und Schüler. Sofern diese im Fach Geografie die klimageografischen Grundlagen gelernt haben, kann direkt mit einem motivierenden Beispiel eingestiegen werden, das die entsprechende Leitfrage(n) der Unterrichtsreihe motiviert. Ein solches Beispiel kann Informationsmaterial mit für die Schülerinnen und Schüler regional relevanten Klimaprognosen sein. Am Beispiel Hamburgs wären dies z. B. Überflutungsszenarien, wie sie bereits durch Sturmfluten in Hafennähe bekannt sind. Hierzu schlagen wir konkret vor, mit einem Video zum Thema Klimawandel und einer anschließenden Diskussion im Klassenplenum zu starten. Daraufhin können die 186 Jonathan Otto, Michel Welke, Leonard Diekmann, Maria Knobelsdorfii “proceedings” — 2017/9/17 — 20:19 — page 187 — #187 ii i ii i Hamburg 2050, Land unter?    21 Schülerinnen und Schüler, z. B. im Rahmen einer Gruppenarbeit, ein aktuelles Zeitungsinterview eines Klimaforschers auswerten, das sich mit einer Klimaprognose auseinandersetzt. Wir haben hierzu z. B. Material gefunden, das eine komplette Überflutung von Hamburg im Jahr 2050 prognostiziert. Untermalt von Überflutungssimulationen sowie echten Fotos vom überfluteten Hamburger Fischmarkt soll ein solches regionales Beispiel und die in diesem Fall sehr extreme Prognose, die potenziellen Auswirkungen des Klimawandels auf das Lebensumfeld der Schülerinnen und Schüler verdeutlichen und für die weitere Auseinandersetzung sinnstiftend wirken. Die weitere(n) Leitfrage(n) der Unterrichtsreihe können eine solche Prognose in Frage stellen und für die Schülerinnen und Schüler den Arbeitsauftrag enthalten, zu untersuchen, inwiefern die Prognose tatsächlich realistisch wäre. 3.2 Klimamodellierung und Kennenlernen von QGIS An die Begegnung mit dem thematischen Kontext Klimawandel folgt im Anschluss die erste Auseinandersetzung mit Klimamodellierung, die auch das Kennenlernen des Werkzeugs QGIS umfasst. In dieser Phase sollten die Schülerinnen und Schüler den grundlegenden Aufbau des Werkzeugs QGIS sowie die wichtigsten Funktionen und das Layerprinzip (Darstellung der räumlichen Daten in übereinanderliegenden Ebenen) kennenlernen, um im weiteren Verlauf das Werkzeug für Fragestellungen zur Klimamodellierung einsetzen zu können. Neben der reinen Nutzung des Werkzeugs QGIS wird in dieser Phase auch schon eine erste Dekontextualisierung in Bezug auf die dem Werkzeug zugrundeliegenden informatischen Inhalte vorgenommen. Dabei sollen die Schülerinnen und Schüler das Begriffspaar „Informationen und Daten“ kennenlernen und voneinander abgrenzen sowie mithilfe einer grafischen Darstellung die Informationsverarbeitung am Beispiel von Klimadaten visualisieren können. Im Rahmen dieser Phase stehen vor allem die technische (Nutzung des Werkzeugs) sowie die informatische Dimension (Daten als Informationsträger) im Mittelpunkt. Die geografische Dimension als Kontext ist immer noch präsent, spielt in dieser Phase jedoch eine untergeordnete Rolle. In der fachlichen Tiefe liegt der Schwerpunkt dieser Phase auf den Kompetenzbereichen „Informationen und Daten“ und „Informatiksysteme“. Während bei dem Kompetenzbereich „Informationen und Daten“ vor allem die Darstellung der Daten sowie die Interpretation der zugrundeliegenden Repräsentation im Vordergrund steht, liegt der Fokus bei den „Informatiksystemen“ auf der zweckgerichteten Nutzung und der Unterscheidung unterschiedlicher Datentypen. Um diese Phase entsprechend zu motivieren, schlagen wir vor, die Schülerinnen und Schüler in einer Partnerarbeit eine eigene Visualisierung ihrer Vorstellungen zum Thema „Hamburg im Jahr 2050“ anfertigen zu lassen. Das Ziel hierbei ist, dass die Schülerinnen und Schüler mit ihrem Ergebnis unzufrieden sind, da die ihnen bekannten, gängigen Visualisierungsmöglichkeiten starke Grenzen setzen, um Klimamodellierung und konkrete Prognosen adäquat darzustellen. In einem Gespräch im Klassenplenum können die Potenziale und Grenzen der bisherigen Visualisierungsmöglichkeiten an der Tafel gesammelt und diskutiert werden. Im Anschluss daran findet die Einführung von QGIS Hamburg 2050, Land unter? – Eine „Informatik im Kontext“-Reihe 187ii “proceedings” — 2017/9/17 — 20:19 — page 188 — #188 ii i ii i 22    Jonathan Otto et al.  statt. Hier schlagen wir vor, dass die Schülerinnen und Schüler das Werkzeug selbst mithilfe eines bereitgestellten Tutorials kennenlernen. Wir haben hierzu ein Tutorial erstellt, welches aus mehreren Arbeitsblättern besteht und sequenziell abgearbeitet wird, wobei die Grundfunktionen des Werkzeugs sowie das für die Arbeit mit QGIS wichtige Layerprinzip vorgestellt werden.  Für die konkrete Auseinandersetzung mit QGIS können sich die Schülerinnen und Schüler mit Klimaund Wetterdaten auseinandersetzen, wie sie z. B. durch den Deutschen Wetterdienst (www.dwd.de, ftp://ftp-cdc.dwd.de/pub/CDC/) oder auf dem Hamburger Bildungsserver bereitgestellt werden (http://bildungsserver.hamburg.de/daten-zum-klimawandel/). Tatsächliche Aufgaben wären z. B. das Modellieren einer digitalen Karte in QGIS auf Grundlage dieser Daten. Hierbei müssen Objekte festgelegt und ihre Attribute zugewiesen werden (in diesem Fall Werte verschiedener Klimaelemente, z. B. Temperatur, Niederschlag usw.). Im Vordergrund stehen dabei auch die verwendeten Datentypen (String, Integer, Dezimalzahlen) für die einzelnen Klimaelemente und deren Vorund Nachteile. Ebenso relevant sind die grafischen Repräsentationsformen der Vektorund Rastergrafik, die die Visualisierung der Modellierung letztendlich ermöglichen. Die entsprechenden informatischen Konzepte werden dabei konkret thematisiert und so im Weiteren auch dekontextualisiert betrachtet. 3.3 Erarbeitungsphase und Abschluss In einer anschließenden Projektphase werden die Leitfrage(n) aus der Begegnungsphase der Unterrichtsreihe im Rahmen einer Projektarbeit wieder aufgegriffen und die in der Phase vorher erarbeiteten Kenntnisse und Fähigkeiten angewendet und vertieft. Das zu bearbeitende Projekt sollte sich mit der Visualisierung verschiedener Klimaelemente im gewählten, regionalen Raum mithilfe von QGIS auseinandersetzen, mit dem Ziel, prognostizierte Auswirkungen des Klimawandels zu analysieren und darzustellen. Hierzu müssten entsprechende Datensätze und die geeignete Repräsentationsform ausgewählt und in QGIS entsprechend der Leitfrage(n) modelliert werden. Für unser regionales Beispiel Hamburg schlagen wir vor, dass die Schülerinnen und Schüler als Projektaufgabe eine eigene Karte zum Thema Klimawandel in Hamburg erstellen, mit der sie die Prognose des Klimaforschers aus der Begegnungsphase entweder belegen oder widerlegen. Dazu können sie in Partnerarbeit ein oder mehrere Klimaelemente (Temperatur, Niederschlag usw.) und die für die Fragestellung am besten geeignete grafische Repräsentationsform auswählen. Die von den Schülerinnen und Schülern bearbeiteten Projekte können im Anschluss an diese Phase in der Klasse präsentiert und besprochen werden. Der Schwerpunkt der Diskussion sollte dabei auf der Wahl der Repräsentationsform, der Qualität der Daten und der Visualisierung liegen und welche Verbesserungsmöglichkeiten es hinsichtlich dieser geben würde.  188 Jonathan Otto, Michel Welke, Leonard Diekmann, Maria Knobelsdorfii “proceedings” — 2017/9/17 — 20:19 — page 189 — #189 ii i ii i Hamburg 2050, Land unter?    23 4 Erfahrungen und erstes Fazit Die in Abschnitt 3 skizzierte IniK-Unterrichtsreihe wurde von uns in einer 10. Klasse einer Hamburger Stadtteilschule im Rahmen des Wahlpflichtfachs Informatik im Umfang von 14 Unterrichtsstunden praktisch erprobt. Für diese Erprobung wurde die Reihe zusätzlich zu den Bildungsstandards auch an den Hamburger Bildungsplan angepasst. Hierzu wurden die Module „Prozesse analysieren und modellieren“ und „Daten und Prozesse“ ausgewählt. Ein Fokus lag dabei auf Repräsentation von Informationen, Algorithmen und prozedurale Programmierung, Exploration des gewählten Anwendungskontextes, Analyse von Einsatzmöglichkeiten eines Informatiksystems im gewählten Anwendungskontext und Daten strukturieren sowie Variablen und Parameter verwenden ([FFH14], S. 22ff). Die Klasse bestand aus insgesamt 19 Schülerinnen und Schülern, wobei die Voraussetzungen und die Leistungsstärke sehr heterogen verteilt waren. So hatten z. B. einige Schülerinnen und Schüler schon im vorhergehenden Schuljahr Informatikunterricht, in dem sie sich mit Konzepten wie dem sequenziellen Durcharbeiten eines Problems zur Problemlösung auseinandergesetzt hatten. Auch Grundkenntnisse zum Thema Klimawandel waren unterschiedlich stark ausgeprägt. Zusätzlich strebten die Schülerinnen und Schüler des Kurses unterschiedliche Schulabschlüsse an (sowohl das Abitur als auch den ersten bzw. den mittleren allgemeinbildenden Schulabschluss), sodass auf eine entsprechende Binnendifferenzierung besonders intensiv eingegangen werden musste. Umgesetzt wurde dies durch eine vom Lehrer gesteuerte Partnerzusammenstellung der Projektgruppen während der ersten zwei Unterrichtsphasen auf Grundlage des Leistungsstands. In der dritten Phase konnten die Schülerinnen und Schüler ihre Projektpartner selbst wählen und erhielten eine gestufte Hilfestellung von Seiten der Lehrkraft. Ebenso wurde die Projektarbeit selbst durch die Lehrkraft stärker angeleitet. Die Lehrkraft gab dabei sowohl die Fragestellung als auch die zur Verfügung stehenden Daten vor. Die Erprobung der Unterrichtsreihe wurde von Mitte Januar bis Anfang März 2017 durchgeführt. Der Einstieg über den Kontext Klimawandel und der regionale Bezug am Beispiel von Hamburg verlief erfolgreich und hat die Schülerinnen und Schüler von Beginn an stark motiviert. Die eigene Visualisierung im Rahmen der Begegnungsphase lieferte das gewünschte Ergebnis einer übereinstimmenden Unzufriedenheit mit den vorhandenen Möglichkeiten der Darstellung einer eigenen Prognose. Dabei wurden von den Schülerinnen und Schülern mehrere Vorschläge gemacht, wie man die Möglichkeiten der Visualisierung verbessern könnte. Die Vorschläge umfassten unter anderem eine kartografische Darstellung und Animationen des Klimawandels, wie sie durch QGIS umgesetzt werden können. Die eigenständige Einführung in die Arbeit mit QGIS mithilfe des Tutorials verlief erfolgreich und die Schülerinnen und Schüler waren bei der Bearbeitung der Aufgaben sehr motiviert und engagiert. Dabei konnten wir insbesondere beobachten, dass eher zurückhaltende Schülerinnen und Schüler deutlich motivierter und aktiver waren als in der vorhergehenden Unterrichtseinheit zum Thema Robotik. Die Doppelstunde zum Thema „Information und Daten“ lief wie geplant und Hamburg 2050, Land unter? – Eine „Informatik im Kontext“-Reihe 189ii “proceedings” — 2017/9/17 — 20:19 — page 190 — #190 ii i ii i 24    Jonathan Otto et al.  zeigte deutlich, dass die anfänglich wahrgenommene Motivation im Rahmen von Kontext und Werkzeug auch in dieser Phase stark zu erkennen war. So gaben viele der Schülerinnen und Schüler immer wieder Beispiele aus dem thematischen Kontextbereich, um die Begriffe Information und Daten zu erklären. Weiterhin konnten die Schülerinnen und Schüler begründete Entscheidungen treffen, welche Datentypen für die Repräsentation der jeweiligen Klimaelemente am besten geeignet sind. Ausgehend vom Kontext gelang es den Schülerinnen und Schülern problemlos viele weitere Beispiele aus anderen Bereichen zu nennen, für die sich eine Repräsentation durch Gleitkommazahlen, Integer oder auch Wahrheitswerte eignet. Die hier zu erkennende erste Vernetzung führte zu einer sehr regen Diskussion.  Unsere ersten Erfahrungen im Rahmen einer IniK-Unterrichtsreihe zum Thema Klimamodellierung mit GIS zeigen, dass das Thema und Werkzeug ein geeigneter Kontext sein kann, um Konzepte informatischer Bildung in einen Bezug zur Lebenswelt der Schülerinnen und Schüler zu setzen und sie zu motivieren, sich damit zu beschäftigen. Das Werkzeug QGIS scheint sich hier besonders gut zu eignen, um eine Auseinandersetzung mit informatischer Bildung im Kontext und am Schnittpunkt zum Schulfach Geografie zu motivieren. Literaturverzeichnis [DKW11]  Diethelm, I.; Koubek, J.; Witten, H.: IniK – Informatik im Kontext, Entwicklungen, Merkmale und Perspektiven. LOG IN, 169/170, S. 97-105, 2011. [GI08]  Gesellschaft für Informatik e. V. (GI): Grundsätze und Standards für die Informatik in der Schule: Bildungsstandards Informatik für die Sekundarstufe I Empfehlungen der Gesellschaft für Informatik e. V. Beilage zur LOG IN, 28, 150/151, 2008. [KMK16]  Kultusministerkonferenz (KMK): Bildung in der digitalen Welt, Strategie der KMK, 2016. [KSSW09]  Koubek, J.; Schulte, C.; Schulze, P.; Witten, H.: Informatik im Kontext (IniK) – Ein integratives Unterrichtskonzept für den Informatikunterricht. Im Tagungsband der 13. GI-Fachtagung Informatik und Schule. Kölln Verlag, S. 268–279, 2009. [MSV11]  Michel, U.; Siegmund, A.; Volz, D. Digitale Revolution im Klassenzimmer?! Potenziale digitaler Geomedien für einen zeitgemäßen Unterricht. In: Praxis Geographie, Braunschweig, 2011. [SS05]  Strahler, A.; Strahler, A.: Introducing Physical Geography, Wiley, 2005. [FFH14] Freie und Hansestadt Hamburg: Bildungsplan Stadtteilschule Jahrgangsstufen 7 – 11 Informatik Wahlpflichtfach. 2014. 190 Jonathan Otto, Michel Welke, Leonard Diekmann, Maria Knobelsdorfii “proceedings” — 2017/9/17 — 20:19 — page 191 — #191 ii i ii i Musikprogrammierung mit Sonic Pi.  Entwicklung und  Untersuchung einer gendersensiblen Unterrichtseinheit  zum Prog rammieren in der Sekundarstufe I .  Esther Alzate Romero1, Leonore Dietrich2   Abstract:  Die Musikprogrammiersprache Sonic Pi3, die an der University of Cambridge speziell  für Kinder und Jugendliche entwickelt wurde, eröffnet einen kreativen, kontextbasierten Zugang  zur Informatik. Ganz nach dem Motto „Technik zum Anfassen“ können  durch den Einsatz der  günsti gen Hardwarelösung Raspberry Pi  Berührungsängste zu Informatiksystemen abgebaut  werden. Mithilfe des Design -Based -Research -Ansatzes wird eine Unterrichtseinheit zum Thema  Musikprogrammieren unter gendersensiblen Aspekten entwic kelt und untersucht. Im vorliegenden  Beitrag w ird vor allem die erste Praxisphase, die daraus resultierenden Erkenntnisse und damit  verbundenen Verbesserungs bzw. Überarbeitungsschritte thematisiert. Hierbei stehen vor allem  die Gestaltungsaspekte der Unt errichtseinheit im Vordergrund, ebenso die Frage, welche zentralen  Inhalte und Konzepte der Informatik in diesem Rahmen vermittelt werden können. Zum Abschluss  wird ein Ausblick auf das weitere Vorgehen gegeben .  Keywords: Informatikdidaktik, Genderforschun g, Unterrichtsforschung, Musikinformatik, Live Coding, Sonic Pi, Design -Based -Research, Programmiereinstieg, Informatik im Kontext .  1 Motivation und Forschungsvorhaben   Das ungleiche Geschlechterverhältnis in MINT -Berufen ist auch heute noch ein  ernstzunehmen des Thema.   Betrachtet man die aktuellen Zahlen aus dem “MINT -Herbstreport 2016” des Instituts  der deutschen Wirtschaft Köln, so gibt es trotz der hohen Zuwanderungszahlen immer  noch eine “Arbeitskräftelücke” ( 212.000  unbesetzte Stellen ) im MINT -Berei ch  [IWK16 ]. Dies stellt ein ernstzunehmendes Problem dar und es ist dringend vonnöten  jungen Menschen diesen Arbeitsbereich näher zu bringen.   Aus Sicht der Gesellschaft ist die überwiegend männliche Gestaltung unserer  zunehmend IT -gesteuerten Welt und Gesellschaft problematisch. Informatiksysteme  werden auch künftig immer weiter in die Gestaltung aller Bereiche unserer Welt  eingreifen – je weiter dieser Einfluss geht, desto wichtiger ist eine breite Repräsentanz  aller Gesellschaftsgruppen in Berufen, d ie diese Gestaltung beeinflussen [Sc12]. Daher                                                              1 Heidelberg School of Education, Voßstraße 2, Geb. 4330, 69115 Heidelberg, romero@heiedu.ph heidelberg.de   2 Universität Heidelberg, Didaktik der Informatik, INF 205, 69120 Heidelberg, leonore.dietr ich@uni heidelberg.de   3 http://sonic -pi.net  [25.01.2017]  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 191ii “proceedings” — 2017/9/17 — 20:19 — page 192 — #192 ii i ii i gilt es Maßnahmen zu entwickeln, um Mädchen für informatische Fragestellungen zu  begeistern.    Musik spielt im Leben von Jugendlichen eine große Rolle – Informatiksysteme werden  von diesen aber in aller Regel n ur zum Konsum genutzt. Bei Mädchen ist das Rezipieren  und Ausüben von Musik tendenziell stärker vertreten als bei Jungen [Me16]. Dieses  Interesse soll im Forschungsvorhaben genutzt werden, um innerhalb des  Musikunterrichts in das Thema Programmierung einzu führen und damit im Kontext des  Fachs Musik das Interesse an Informatik zu wecken. Durch die speziell für Kinder und  Jugendliche ab etwa 10 Jahren entwickelte Entwicklungsumgebung Sonic Pi sollen  zentrale Konzepte und Prozesse der Informatik vermittelt wer den. Zendler und  Spannagel [ZS06] arbeiten die zentralen Konzepte durch eine empirische Grundlegung  heraus, um sich dem „Kern“ des Unterrichtsfaches Informatik anzunähern. Ebenso  erheben sie im Rahmen einer Befragung unter Expert_innen die zentralen Prozes se im  Informatikunterricht [Ze07]. Die Verknüpfung der zentralen Konzepte und Prozesse hilft  bei der Gestaltung der Unterrichtseinheit. Als für die Unterrichtseinheit relevante  zentrale Konzepte dieser Studie wurden die Konzepte Algorithmus, Problem, Sprac he,  Kommunikation, Computer und (Informatik -)System identifiziert.  Die hier abgedeckten  Prozesse aus der Studie sind das Problemlösen, Kreieren und Erfinden sowie  Analysieren. Die GI Standards [GI08] für Informatik in der Sekundarstufe I weisen  „Informati on und Daten“, „Algorithmen“ und „Sprachen und Automaten“ als für dieses  Projekt relevante Inhaltsbereiche sowie „Modellieren und Implementieren“,  „Strukturieren und Vernetzen“ und „Darstellen und Interpretieren“ als relevante  Prozessbereiche aus.   Im Fokus  des ersten Teils des Forschungsvorhabens steht zunächst die Entwicklung,  Weiterentwicklung und  Untersuchung der Unterrichtseinheit. Zudem wird untersucht,  wie eine Unterrichtseinheit zum Thema Musikinformatik gestaltet werden muss, damit  Mädchen und Jung en gleichermaßen für das Fach Informatik begeistert werden. Im  zweiten Teil des Forschungsvorhabens wird die gendersensible Unterrichtsgestaltung im  Vordergrund stehen. Grundlage für die Entwicklung der Unterrichtseinheit ist zum einen  eine ausführliche An alyse der vorhandenen Literatur und Theoriekonzepte. Zum anderen  wird den oben genannten Fragestellungen im Rahmen qualitativer Untersuchungen  nachgegangen. Neben Interviews mit den beteiligten Schüler_innen und Lehrer_innen  werden Expert_inneninterviews g eführt.   Es gibt kaum Forschungsarbeiten zu Unterrichtseinheiten mit Bezug zur  Musikinformatik. Folglich erfordert diese Forschung ein innovatives und damit ein auf  die Weiterentwicklung und Erprobung fokussiertes Vorgehen. Daher wurde Design Based -Research  als Forschungsmethode gewählt. Das Konzept wird in mehreren  Iterationen erprobt und nach jeder Erprobungsphase angepasst [Va 06]. Dieser Ansatz  bietet ein auf die E ntwicklungsforschung angepasstes  mehrstufigen Verfahren.  192 Esther Alzate Romero, Leonore Dietrichii “proceedings” — 2017/9/17 — 20:19 — page 193 — #193 ii i ii i 2 Live -Coding   Das Programmieren und I mprovisieren in Echtzeit von elektronischer Musik und  audiovisueller Kunst wird als Live -Coding bezeichnet [Ro15; Co03; BS09]. Als erster  international bekannter Verbund von Künstlerinnen und Künstlern trat “Toplap”4 2004  in Erscheinung. Bekannte Künstler und Wissenschaftler dieser Szene wie Alex McLean,  Julian Rohrhuber und andere verfolgten mit diesem Zusammenschluss das Ziel, Live Coding bekannter zu machen, mit anderen Künstlern und Künstlerinnen in Austausch zu  treten und diese Form der Kunst wissensch aftlich zu erforschen und künstlerisch zu  reflektieren. Mittlerweile hat sich die Live -Coding -Community international stark  vergrößert und versucht, auch außerhalb des akademischen Kontextes ein breitere s  Publikum anzusprechen. Auf so genannten “Algoraves”  soll die typische  Konzertsaalatmosphäre aufgebrochen werden und gemeinsam zu algorithmisch  erzeugter Musik getanzt werden [CM14].   Die Autorinnen erwarten, dass Live -Coding einen neuen Zugang zum Programmieren,  Komponieren, Performen und Rezipieren von Mu sik schafft. Erste Veröffentlichungen  zum Musikprogrammieren mit Sonic Pi [Bu14; Aa16] sowie die Ergebnisse aus den  ersten Feldversuchen im Rahmen dieser Studie bestätigen diese Annahme. Schülerinnen  und Schüler können den Computer neuartig als kreatives I nstrument erleben und dabei  ihre Konzepte von Musik, Klang, Musiker_in und Programmierer_in überdenken und  neu ordnen [Gu13, S.136]. Auch Lernende ohne musikalische Vorbildung haben die  Möglichkeit, einen Einstieg in die Musik zu finden. Schüler_innen mit Vorbehalten  gegenüber der Informatik bekommen die Möglichkeit eines neuen “Türöffners” zur  Informatik.   3 Entwicklung der Unterrichtseinheit   3.1 Planungsvoraussetzungen   Die Erprobung der Unterrichtseinheit wird im Rahmen des regulären Musikunterrichts  durchgeführt. Dies ist zum einen darin begründet, dass es keinen Pflichtunterricht in  Informatik und vielfach auch kein freiwilliges Angebot an den Schulen gibt, den  Autorin nen aber das Erreichen aller Schüler_innen wichtig ist. Zum anderen schafft der  Kontext des Musikunterrichts einen anderen Zugang zur Informatik, der eine große  Offenheit insbesondere bei den Mädchen erkennen lässt.   Die Erprobung findet im Teamteaching st att. Grundsätzlich ist die Einheit aber so  konzipiert, dass sie auch von musikaffinen Informatiklehrkräften unterrichtet werden  kann, da der inhaltliche Fokus auf informatischen Konzepten liegt und die Musik hier  hauptsächlich als Kontext dient.                                                               4 https://toplap.org  [07.06.2017]  Musikprogrammierung mit Sonic Pi 193ii “proceedings” — 2017/9/17 — 20:19 — page 194 — #194 ii i ii i Der inhal tlichen Planung voran ging eine Analyse der Musik -, Physik und  Informatikbildungspläne im Forschungsumfeld. Die Projektschulen sind zunächst  Gymnasien und Realschulen in Baden -Württemberg, sodass für die ersten drei  Durchführungen die hier gültigen Bildun gspläne betrachtet wurden. Die Entwicklung der  Einheit wurde im Dialog mit Lehrkräften der drei Fächer erarbeitet.   3.2 Vorwissen und fachliche Ziele   Im Bereich der Informatik wird keinerlei Vorwissen vorausgesetzt, da es zumindest an  den meisten Schulen keine n Pflichtunterricht in der Unter und Mittelstufe gibt. Die  zentralen Informatikkonzepte, die in der Unterrichtseinheit behandelt werden sollen , sind  Wiederholungen, Parameter, Variablen sowie einfache Datenstrukturen. Insgesamt soll  bei den Schüler_innen d as Bild von Programmierung als ein kreativer Prozess neu  verankert und somit das Interesse an der Informatik geweckt werden. Der Umgang mit  dem Raspberry Pi ist innerhalb dieser Einheit den affektiven Lernzielen zuzuordnen, da  das Ziel ausschließlich in de r Nutzung für Sonic Pi und dem Abbau der Vorbehalte  gegenüber alternativen Betriebssystemen liegt. Hierfür sind zunächst keine tieferen  fachlichen Kenntnisse über die Plattform notwendig. Eine nähere Behandlung des  Systems im Nachgang der Einheit ist siche r sinnvoll, aber nicht Teil dieser Studie.   Im Physikunterricht wird im Anfangsunterricht das Thema Akustik eingeführt. Der  Aufbau einer Schwingung ist den Schüler_innen daher bekannt, ebenso Fachbegriffe wie  Amplitude und Frequenz sowie deren Bedeutung. In  Sonic Pi sind dies zentrale  Parameter, sodass das Vorwissen aus dem Physikunterricht zum einen hilfreich ist, zum  anderen aber auch wiederholt und angewendet wird und so zu einer Festigung führt.  Gleichzeitig bietet dies den Schüler_innen eine konkrete un d motivierende Anwendung  des erlernten Physikwissens.   Im Musikunterricht wurde n in der Unter und Mittelstufe die klassische Musik und ihre  Formen und Strukturen behandelt, ebenfalls der Aufbau von Popsongs sowie Blues und  Jazz-Stücken. Grundzüge der Compu termusik und die MIDI -Notation werden zwar  thematisiert, diese Inhalte sollten jedoch im Rahmen der Unterrichtseinheit aufgefrischt  werden.  Ebenfalls sollte nochmals der Unterschied zwischen elektronisch verstärkten  und elektronischen Musikinstrumenten th ematisiert werden. Die Schüler_innen bringen  außerdem Vorwissen aus dem Bereich der Harmonielehre und Rhythmik mit. Ebenfalls  haben sie gelernt, über Musik zu sprechen und Klänge zu beschreiben. Innerhalb der  Sonic Pi Einheit werden diese Kenntnisse angewe ndet. Inhaltlich neu ist das Mittel des  Live-Coding.    3.3 Aufbau der Unterrichtseinheit   Die Unterrichtseinheit ist für fünf Doppelstunden konzipiert. Sie gliedert sich in einen  festen Einführungsteil über zwei Doppelstunden, einen flexiblen Erarbeitungs und  Projektteil, der auch sehr gut auf einen längeren Zeitraum ausgedehnt werden kann und 194 Esther Alzate Romero, Leonore Dietrichii “proceedings” — 2017/9/17 — 20:19 — page 195 — #195 ii i ii i einen Präsentations und Reflexionsteil. Neben dieser linearen Struktur ist auch ein  iterativer Aufbau mit mehreren Projektphasen sinnvoll, sofern mehr Unterrichtszeit zur   Verfügung steht.   Den Schüler_innen wird freigestellt, Sonic Pi auf ihrem Rechner zu Hause zu  installieren. Die Hausaufgaben wurden bewusst so gestaltet, dass diese unplugged  bearbeitet werden und die Arbeit mit Sonic Pi in der Schule vorbereiten. Dies sol l zum  einen sicherstellen, dass Jugendliche ohne entsprechenden Zugang zu einem Rechner  nicht benachteiligt werden, zum anderen auch den im Anfangsunterricht schwierigen  Umgang mit Fehlern und Debugging in eine Umgebung verlegen, in der direkter Zugriff  auf Hilfe durch die Lehrkraft möglich ist.   Die erste Stunde dient der Einordnung der Einheit in die historische Entwicklung der  Musik und Informatik sowie dem ersten Kontakt mit unplugged Musikprogrammierung  in Pseudocode. Der unplugged -Teil ist wichtig für einen niederschwelligen Einstieg in  die textuelle Programmierung und die spätere Umsetzung in Sonic Pi, da die  Schüler_innen keinerlei Vorwissen aus der Programmierung mitbringen. In den  Materialien5 wird daher auch großer Wert auf die farblichen und graph ischen  Entsprechungen der Arbeitsblätter im unplugged -Teil zu der späteren  Programmierumgebung gelegt. In der zweiten Doppelstunde werden eng angelehnt an  die unplugged Ergebnisse die ersten Schritte in Sonic Pi unternommen. Schüler_innen  lernen die Kernko nzepte Codierung eines Tones, Wiederholung und Parameter sowie die  Kommentierung ihres Codes kennen. Ebenso findet hier der in der Regel erste Umgang  mit dem Raspberry Pi statt, der aber intuitiv und zweckorientiert erfolgt und keinen  eigenen Unterrichtsge genstand darstellt. In den folgenden Stunden werden dann in  Teams eigene Stücke erstellt, Methoden, Variablen, Datenstrukturen und  Zufallsbedingungen eingeführt. Wichtig ist bei der Teamarbeit die Steuerung der  Programmiertätigkeit. Hier bietet sich Pair P rogramming an, um sicherzustellen, dass  beide Teammitglieder aktiv mit der Umgebung und Programmiersprache arbeiten. Über  Cheatsheets und gestufte Hilfen zu einzelnen Programmierelementen in Sonic Pi stehen  binnendifferenzierende Materialien zur Verfügung.  Die letzte Sitzung dient der  Präsentation des eigenen Stückes als Live -Coding Performance, einer inhaltlichen  Diskussion der eingesetzten Konzepte sowie einer kurzen Reflexion über die  Unterrichtseinheit aus Sicht der Schüler_innen .   4 Erste Durchführungsph ase und Erkenntnisse    Die erste Durchführungsphase fand an einem Gymnasium am Ende der achten Klasse  statt. Die Schüler_innen hatten großenteils keine informatische Vorbildung, einige hatten                                                              5 Sämtliche Unterrichts und Planungsmaterialien stehen zum Zeitpunkt der Konferenz als  Entwicklungsfassung zur Verfügung und werden im Rahmen des Workshops  ([AD17b] , ebenfalls in diesem  Band)  vorgestellt. Nach Abschluss des Forschungsvorhabens werden die Unterrichtsmaterialien zusammen  mit Stundenverlaufsplänen und anderen Handlungsempfehlungen veröffentlicht.  Musikprogrammierung mit Sonic Pi 195ii “proceedings” — 2017/9/17 — 20:19 — page 196 — #196 ii i ii i in Klasse fünf erste Programmiererfahrungen mit Scratch gemacht, seitdem aber keinen  weiteren Kontakt mit Informatik in der Schule. Viele Jugendliche brachten  musikalisches Vorwissen aus Instrumentalunterricht mit, das über die Inhalte des  schulischen Musikunterrichts hinausging. Die Musiklehrerin hat die Entwicklung de r  Einheit aus musikalischer Sicht mit begleitet. Die Durchführung lag groß enteils bei der  Informatiklehrkraft und wurde an einzelnen Stellen von der Musiklehrerin unterstützt.   4.1 Beobachtungen    Die Einheit lief für alle Beteiligten vielversprechend ab. Die Sc hüler_innen waren  zunächst vor allem neugierig und gingen offen auf das Thema zu. Der Einstieg in die  Programmierung fiel den meisten Schüler_innen leicht und von Beginn der Arbeit in  Sonic Pi an zeigten sie sich hoch motiviert. Über die im Unterricht expl izit vorgestellten  Fachkonzepte hinaus stellten sie Fragen zur Umsetzung ihrer Ideen in Sonic Pi und  recherchierten teilweise selbständig Möglichkeiten, um ihre Ideen in der  Programmiersprache auszudrücken. Hierbei stellte das deutschsprachige Tutorial, da s  innerhalb Sonic Pi zur Verfügung steht, eine hervorragende Unterstützung dar. Die  Schüler_innen haben während ihrer Programmierung ausnahmslos die Pausen missachtet  und zum Teil zu Hause ihre Stücke freiwillig weiter entwickelt. In der  Abschlusspräsentat ion wurden teilweise sehr komplexe Stücke als Ergebnis6 vorgestellt  und als Live -Coding präsentiert.   Die Rückmeldungen der Schüler_innen und Lehrer_innen bestätigen die insgesamt sehr  vielversprechenden Beobachtungen der Lehrkräfte und Autorinnen. Das Feed back zur  ersten Doppelstunde fiel durchweg positiv aus. Der unplugged Einstieg als Methode war  für die Lerngruppe neu, wurde aber gut angenommen und von Schüler_innen und  Lehrkräften als sehr positiv und hilfreich bewertet. Die eigenen Stücke bzw. kurzen  Performances der Schülerinnen und Schüler und deren Präsentation stellten den  Abschluss der Projekteinheit dar. Die Ergebnisse übertrafen die Erwartungen: die  künstlerische Vielfalt, die Komplexität der Stücke und auch die Programmierfähigkeiten  wurden auf eindrückliche Weise dargestellt.   In den Interviews, die im Nachgang der Einheit durchgeführt wurden, wünschten sich  die Schüler_innen eine  klarere Zielsetzung und äußerten, schneller mit einem eigenen  Stück anfangen zu wollen.   4.2 Erwartete und tatsächliche S chwierigkeiten   Viele Bedenken erwiesen sich als unbegründet. So wurde bspw. der Unterschied  zwischen traditioneller Notation und Sonic Pi -Notation sehr schnell verstanden und  stellte im Umgang mit Sonic Pi kein Problem dar.                                                               6 Ergebnisse aus den Durchführungen werden im Rahmen des Workshops  ([AD17b], ebenfalls in diesem  Band) sowie im Vortrag vorgestellt.  196 Esther Alzate Romero, Leonore Dietrichii “proceedings” — 2017/9/17 — 20:19 — page 197 — #197 ii i ii i Als problematisch erwies sich d ie Stabilität der Software auf Windows -Rechnern. Neben  Abstürzen des Ruby -Interpreters kam es vor, dass die Audioausgabe nicht funktionierte  und mehrere Dienste über den Taskmanager beendet werden mussten. Diese ist zwar  mittlerweile vom Sonic Pi Entwickle rteam verbessert worden, dennoch nahmen die  Autorinnen diese Erfahrung zum Anlass, auf Raspberry Pi umzusteigen, da dies eine  schulunabhängige Evaluation ermöglicht und sie sich darüber hinaus den Abbau von  Berührungsängsten mit anderen Plattformen und Bet riebssystemen bei den Lernenden  erhoffen.   Ein großes Problem stellten für alle Schüler_innen die Fehlermeldungen dar. Diese sind  nicht kindgerecht dargestellt, sondern werden direkt von der zugrundeliegenden Sprache  Ruby gesandt. Die Meisten gaben an, nach  der Einheit zu Hause nicht weiter mit Sonic  Pi arbeiten zu wollen, da sie sich nicht befähigt fühlten, selbst Fehlermeldungen zu lesen  und den Programmcode entsprechend zu ändern. Dies ist insbesondere angesichts der  hohen Motivation innerhalb der Einheit  von Bedeutung: Das Interesse ist da, die  Umsetzung scheitert aber an der Hürde des Debugging. Hier soll in nachfolgenden  Durchführungen unterstützt werden, indem häufig auftretende Fehlermeldungen  evaluiert und gezielte Erklärungen und Lösungshinweise in den Unterricht und die  Materialien eingearbeitet werden. Insgesamt muss der Umgang mit Fehlern in Code und  Software als Unterrichtsinhalt und Lernziel stärker berücksichtigt werden.   Einigen Schüler_innen war die Aufgabe, ohne einen programmatischen Inhalt frei zu  kompo nieren, zu komplex.  Hier wird es in den nächsten Durchführungen ein konkretes  Projektthema vorgegeben. Dieses kann je nach Lerngruppe auch als Angebot genutzt  werden, das eigene Ideen weiterhin zulässt. Die Vertonung eines Kurzfilms gibt d aher  als Rahmen für die zweite Erprobung ein klareres Ziel und  eine klare Aufgabenstellung  vor.  Da die Schüler_innen meist eine rein klassische Musikausbildung in der Schule erhalten,  möchten sie natürlich ihnen bekannte musikalische Strukturen umsetzen. Fragen, wie   eine klassische Songstruktur, der zeitlich versetzte Einsatz verschiedener Instrumente,  ein Crescendo o.ä. in Sonic Pi umzusetzen sind, tauchen während der Arbeit an der  eigenen Komposition auf. Hier müssen von der Lehrkraft im Vorfeld selbst einige klein e  Kompositionen angefertigt und die Beispiele, die in Sonic Pi abrufbar sind, bearbeitet  werden, um die Schülerfragen gezielt beantworten zu können. Dieser Punkt wird  ebenfalls im Zuge der weiteren Evaluation berücksichtigt und mit Material unterstützend  vorbereitet werden.   Aus Sicht der Informatik kann mit Sonic Pi sehr einfach ein intuitiver Umgang mit  Schleifen, Methoden, Parametern und Variablen erreicht und damit der Einstieg in eine  textuelle Programmiersprache niederschwellig erreicht werden. Die Umg ebung  differenziert beispielsweise sehr gut zwischen Variablen und Konstanten, setzt Syntax  Highlighting reduziert und zielführend ein und wird von den Lernenden problemlos  bedient. Das direkte auditive Feedback stellt sich im Unterricht als hoch motiviere nd dar.  Im Vergleich zu den Erfahrungen mit visuellem Feedback beispielsweise in Greenfoot Musikprogrammierung mit Sonic Pi 197ii “proceedings” — 2017/9/17 — 20:19 — page 198 — #198 ii i ii i zeigte sich eine höhere Motivation insbesondere bei den Mädchen.   Problematisch ist die Umsetzung des Konzeptes Verzweigung. In Sonic Pi gibt es nur  zufallsbedingte V erzweigungen, sodass hier einer Fehlvorstellung im Rahmen des  Unterrichts entgegengewirkt werden muss. Dies ist keine Schwachstelle der  Programmiersprache, sondern vielmehr der Tatsache geschuldet, dass das Ziel die  Ausgabe von Musik ist, was Sensorik in d en Hintergrund stellt.   5 Ausblick   In der zweiten und dritten Durchführungsphase wird das überarbeitete Konzept erprobt,  verbessert und angepasst. Folgende Änderungen wurden für die erneute Durchführung  auf Basis der Ergebnisse aus teilnehmender Beobachtung u nd Interviews vorgenommen:   x Sonic Pi stürzt e unter Windows leider häufig ab. Dieses  Problem ist  den  Entwicklern bekannt und wurde versucht in der aktuellsten Sonic Pi -Version zu  verbessern.  Wir empfehlen d ennoch  eine Nutzung von Sonic Pi mit Raspberry  Pis  (für die es entwickelt wurde). Ein positiver Nebeneffekt  ist zudem der Konta kt  mit einer alternativen Plattform. Die Schülerinnen und Schüler können somit ganz  nach dem Motto “Technik zum Anfassen” Berührungsängste mit unbekannter  Hard und Software,  insbesondere auch mit Linux als Betriebssystem, abbauen.   x Für Klassen, in denen viel Unruhe herrscht , wurde das Konzept dahingehend  überarbeitet, dass der Theorieinput deutlich kürzer und auf mehrere Sitzungen  verteilt wurde.   x Das Projektziel wird zukünftig enger vorgegeben.  Einige Schüler_innen waren  mit der Aufgabenstellung , frei zu komponieren , überfordert. Daher wird als  Rahmen zukünftig die gemeinsame Vertonung eines Kurzfilms oder eines Bildes   vorgegeben. Denkbar wäre ebenfalls die Vertonung von Jahresz eiten oder  Wochentagen. Wichtig ist hierbei, dass zum Abschluss der Unterrichtseinheit eine  gemeinsame Reflexion über die entstandenen Werke geführt wird. Ebenfalls  werden zukünftig Kompositionshilfen in Form von Genrevorlagen an die  Schüler_innen bei Beda rf ausgegeben. Diese Vorlagen können Beispiele für  typische rhythmische Patterns, Melodieführungen und Basslinien eines  bestimmten Musikgenres o.ä. enthalten.   x Die Übungsphase mit traditionellen, einfachen Liedern wurde verkürzt, so dass  mehr Zeit für das f reiere Ausprobieren und Komponieren bleibt. Im Zuge dessen  wurde die Unterrichtseinheit um eine Doppelstunde (also insgesamt 6  Doppelstunden) verlängert.   x Um Live -Coding und die damit verbundene Performance für Schüler auditiv und  visuell greifbarer zu mach en, werden innerhalb der Einheit künftig mehrere kurze  Videoausschnitte eingebaut.  198 Esther Alzate Romero, Leonore Dietrichii “proceedings” — 2017/9/17 — 20:19 — page 199 — #199 ii i ii i x Das Debugging wird als Unterrichtsgegenstand stärker berücksichtigt. Die  häufigsten Fehlermeldungen werden im Rahmen der nächsten Durchführung  erhoben und auf dieser Basis u nterstützendes Material erarbeitet.   6 Fazit   Zusammenfassend kann gesagt werden, dass die Ergebnisse der ersten Erprobungen des  Zugangs zur Informatik über die Musikprogrammierung vielversprechend sind. Die  Schülerinnen und Schüler arbeiteten mit großer Begeisterung und hoher Motivation in  Sonic Pi an ihren eigenen Kompositionen. Sie suchen eigenständig nach eleganten  Lösungen für musikalische Elemente und nutzen die erlernten Programmierelemente  sinnvoll und zielführend. Die Arbeitsergebnisse waren auch aus künstlerischer Sicht  komplex und vielseitig. Die Autorinnen sehen in Sonic Pi eine reizvolle Alternative zum  Einstieg in die textuelle Programmierung, der nach ersten Beobachtungen insbesondere  Mädchen anspricht und für Informatik begeistern kann.   Literaturverzeichnis   [Aa16]  Aaron, S., Blackwell, A.F.; Burnard, P.: The development of Sonic Pi and its use in  educational partnerships: co -creating pedagogies for lea rning computer programming.  Journal of Music, Technology and Education 9(1) /16, S. 5-94, 2016 .  [AD17b]  Alzate Romero, E.; Dietrich, L.: Workshop: Musikprogrammierung mit Sonic Pi. In  (Ira Diethelm, Hrsg.): Informatische Bildung zum Verstehen un d Gestalten der  digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn  2017.      [BS09]  Brown, A. R.; Sorensen, A.: Interacting with Generative  Music through Live Coding.  Contemporary Music Review, 28(1), S.17–29, 2009.   [Bu14]  Burnard , P. et.al. (Hrsg): Sonic Pi. Live and Coding. Research Report, 2014.   [CM14]  Collins, N.; McLea n, A.: Algorave: A Survey of the History, Aesthetics and  Technology of  Live Performance of Algorithmic Electronic Dance Music. In  (Baptiste  Caramiaux, K. et.al. Hrsg.) : Proc . International Conference on New Interfaces for  Musical Expression, S.355–358, 201 4.  [Co03]  Collins, N.; McLean, A.; Rohrhuber, J.; Ward, A.: Live coding in laptop performance.  In: Organised Sound, 8(3)/03, S.321 –329, 2003.   [GI08]  Gesellschaft für Informatik (GI) (Hrsg. ): Grundsätze und Standards für die Informatik  in der Schule. Bildungsst andards Informatik für die Sekundarstufe I. In: LOG IN  28/08, Nr.150/151/08 , http://informatikstandards.de, Stand 07.06.2017.   [Gu13] Guzdial, M.: Live -Coding in Education. In ( Blackwe ll, A.; McLean, A.; Noble, J.;   Rohrhuber, J. , Hrsg.) : Collabor ation and learning through live codi ng (Dagstuhl  Seminar 13382).  Dagstuhl Reports, 39/13, S. 135 -136, 2013.  Musikprogrammierung mit Sonic Pi 199ii “proceedings” — 2017/9/17 — 20:19 — page 200 — #200 ii i ii i [IWK16]  Institut der deutschen Wirtschaft Köln  (Hrsg.) (2016) : MINT -Herbstreport 2016 ,  https://www.iwkoeln.de/studien/gutachten/beitrag/christina -anger -oliver -koppel -axelpluennecke -mint-herbstreport -2016 -bedeutung -und-chancen -der-zuwanderung 315792, Stand 20.03.2017.   [Me16]  Medienpädagogischer Forschungsver bund Südwest (Hrsg.) (2017):  KIM -Studie 2016.  Kindheit, Internet, Medien. Basisstudie zum Medienumgang 6 bis 13 -Jähriger in  Deutschland,   https://www.mpfs.de/studien/kim -studie/2016/, Stand 07.06.2017.   [Ro15]  Rohrhuber, J.: Lehre als Forschung: Grundlagen der Musikinformatik  im  künstleris chen Kontext. Zeitschri ft für Hochschulentwicklung, 10(1)/15 , S.79-91,  2015.   [Sc12]  Schinzel, B. : Geschlechtergerechte Informatik -Ausbildung an Universitäten. In   (Kampshoff, M.; Wiepcke, C. Hrsg.): Handbuch Geschlechterforschung und  Fachdidaktik. VS Verlag , Wiesbaden, S. 331-344, 2012.   [Va06]  Van den Akker, J. et.al. (Hrsg.): Educational Design Research, Routledge, London,  2006.   [Ze07]  Zendler,  A., Spannagel, C. & Klaudt, D. : Zentrale Prozesse im Informatikunterricht:  eine empirische Grundlegung. In: Notes on Educ ational Informatics Section A:  Concepts and Techniques, 3(1) /07, S.1-19, 2007.   [ZS06]  Zendler, A. & Spannagel, C.: Zentrale Konzepte im Informatikunterricht. Eine  empirische Grundlegung. In: Notes on Educational Informatics — Section A: Concepts  and Techniques, 2(1) /06, S.1–21, 2006.    200 Esther Alzate Romero, Leonore Dietrichii “proceedings” — 2017/9/17 — 20:19 — page 201 — #201 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017    15 Entwicklung eines HTML-Editors unter didaktischen Gesichtspunkten Dominik Heun1 Abstract: Im Kerncurriculum Informatik des Landes Hessen für die gymnasiale Oberstufe wird die Umsetzung eines HTML-Projekts gefordert. Dabei stellt sich regelmäßig die Frage, mit welchen Werkzeugen und Editoren eine HTML-Seite geschrieben werden soll. Viele frei verfügbare Editoren stellen weitreichende Funktionen zur Verfügung, die in vielen Fällen zu weit gehen oder Informatikdidaktisch interessante Aspekte außen vorlassen.  In diesem Paper werden didaktische Anforderungen an einen Editor formuliert, die anschließend mit einem selbst entwickelten Editor erfüllt werden sollen. Es werden Grundfunktionen des Editors (HTML, CSS, JavaScript, Dokumentenbaum) vorgestellt, Hilfen in der Erstellung von HTML-Dokumenten diskutiert und Erfahrungen aus dem Einsatz im Unterricht der Einführungsphase vorgestellt. Keywords: Gymnasium, Oberstufe, Einführungsphase, HTML, CSS, Webseiten 1 Einleitung Innerhalb der Einführungsphase (zwei Jahre vor dem Abitur) können Schülerinnen und Schüler an Gymnasien in Hessen das Fach Informatik wählen. Darin erhalten sie nach dem Kerncurriculum der gymnasialen Oberstufe2 eine informatische Grundbildung in verschiedenen Themenbereichen, die im ersten Halbjahr um das Thema Internet aufgebaut ist. Nach der Behandlung des Themenbereichs Internetprotokolle wird ein HTML-Protokoll angesetzt. Für das HTML-Projekt werden drei grundlegende Inhalte beschrieben: die Hypertext Markup Language selbst (HTML), die Struktur von HTML-Dokumenten sowie Cascading Style Sheets (CSS). 2 Kriterien für einen HTML-Editor Für die Lehrenden ist zu Beginn der Unterrichtsreihe die Auswahl eines geeigneten Editors nötig, der von den Schülerinnen und Schülern genutzt werden soll. Diese Suche gestaltet sich schwierig, da einige Editoren wie bspw. die Standard-Editoren von Windows oder Mac reine Texteditoren sind und keine Unterstützung in Bezug auf HTML-Dokumente geben. Phase 53 bietet genauso wie Notepad++4 eine rudimentäre                                                              1 Justus-Liebig-Schule Darmstadt, Julius-Reiber-Straße 3, 64293 Darmstadt, heu@lio-darmstadt.de 2 [Hes15] 3 Für Schulen und Privatanwender kostenlos unter http://www.phase5.info (nur Windows) 4 Kostenlos verfügbar unter https://notepad-plus-plus.org I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 201ii “proceedings” — 2017/9/17 — 20:19 — page 202 — #202 ii i ii i 16    Dominik Heun  Unterstützung durch Hervorhebung der Syntax (Syntax-Highlighting) und automatisches Einrücken zur Strukturierung. Der Funktionsumfang dieser Editoren ist nicht nur auf HTML eingeschränkt, weswegen die Unterstützungen auch nicht HTML-spezifisch sind. Ein vollständiger „What you see is what you get“-Editor (WYSIWYG), der ohne Kenntnis von HTML genutzt werden kann, ist nicht im Sinne des Kerncurriculums. Welche Unterstützungen sind für den Informatikunterricht mit HTML wünschenswert? Dazu ist ein Blick auf Schwierigkeiten von Schülerinnen und Schülern im Bereich von HTML hilfreich. Im bisherigen Unterricht des Autors zeigten sich unter anderem folgenden Probleme der Schülerinnen und Schüler (die nummerierte Aufzählung gibt keine Gewichtung vor, sondern dient dem späteren Referenzieren): 1. Korrekte Syntax von HTML-Elementen 2. Bezug zwischen HTML-Quelltext und entstehendem Dokument bleibt unklar 3. Arbeit in drei Fenstern zeitgleich (HTML, CSS und Browser) 4. Korrekte Verknüpfung von HTMLund CSS-Dateien 5. Identifizierung von HTML-Knoten, die durch CSS-Regeln formatiert werden 6. Zusammenhang zwischen Inhalt, Struktur und Aussehen Des Weiteren gestalten sich gestufte Hilfen schwierig, da diese in einem erneuten (evtl. analogen) Format angeboten werden und damit ein weiterer Arbeitsbereich für die Schülerinnen und Schüler entsteht. Diese Vielzahl kann einige Lernende überfordern und sollte deshalb von einem HTML-Editor besser gelöst werden. Aus dem ersten Punkt wird deutlich, dass ein Syntax-Highlighting eine mögliche Unterstützung darstellt. Dies unterstützt Lernende aber lediglich dann, wenn diese schon eine Ahnung davon haben, wie sie ein HTML-Element schreiben können. Der zweite und dritte Punkt bedingen sich gegenseitig. Durch die Arbeit in vielen verschiedenen Fenstern oder Tabs sind die Auswirkungen von Änderungen an den Dokumenten nicht direkt sichtbar, sondern werden erst über Umwege sichtbar gemacht. Dies stört den Arbeitsfluss der Lernenden durch zusätzliche Routinen, die bei jeder Änderung ausgeführt werden müssen. Punkt vier stellt gerade zu Beginn des Themenbereichs ein großes Problem dar, das viele Schülerinnen und Schüler vor eine zusätzliche Hürde stellt. Die Lernenden sollten am Ende der Unterrichtsreihe selbst eine solche Verknüpfung herstellen können, für die erste Begegnung mit Unterrichtsgegenstand ist dies jedoch ein vermeidbares Hindernis. Die beiden letzten Punkte hängen ebenfalls zusammen, da die Identifizierung von HTML-Knoten, die durch eine CSS-Regel verändert werden, über die Struktur erfolgt, die den Lernenden jedoch nicht zu jeder Stelle klar ist. Zwar können sie einen Strukturbaum zu ihrem HTML-Dokument erstellen, nach einer Änderung am Dokument 202 Dominik Heunii “proceedings” — 2017/9/17 — 20:19 — page 203 — #203 ii i ii i HTML-Editor    17 muss dieser aber überarbeitet werden, so dass der Strukturbaum parallel weitergepflegt werden muss. Im Zuge der Differenzierung wäre es ebenfalls hilfreich, wenn der HTML-Editor direkt die Aufgabenstellung und zusätzliche Hilfen anzeigen könnte, damit alle nötigen Arbeitsmaterialien an einem Platz sind. 3 Vorbilder 3.1 Codefights Auf der Online-Plattform codefights.com können Nutzer sich anmelden und verschiedene tägliche oder wöchentliche Herausforderungen lösen.    Abbildung 1: Beispielhafte Herausforderung bei Codefights Dabei wird im Browser die Aufgabenstellung und ein Code-Editor angezeigt. Die Herausforderung lässt sich in einer Sprache der Wahl lösen und kompilieren. Glaubt man die Herausforderung gelöst zu haben, kann man Tests laufen lassen, deren Ergebnis angezeigt wird. Dieses HTML-fremde Beispiel zeigt einen Ansatz für Editoren innerhalb von Web-Browsern auf. Dieser Ansatz bietet einige Vorteile gegenüber der einfachen Editorlösung. Eine Aufgabenstellung wird dauerhaft angezeigt, die Programmierung erfolgt direkt im gleichen Fenster. Es werden Tests angezeigt, mit denen Lösungen überprüft werden können. Zusätzlich bietet die Umsetzung in HTML und JavaScript einen Vorteil für die Plattformunabhängigkeit des Editors. Entwicklung eines HTML-Editors unter didaktischen Gesichtspunkten 203ii “proceedings” — 2017/9/17 — 20:19 — page 204 — #204 ii i ii i 18    Dominik Heun  3.2 Mozilla Thimble Verfolgt man diesen Ansatz weiter, wird man auf das Projekt Thimble von Mozilla Firefox aufmerksam, das einen ähnlichen Ansatz verfolgt und für HTML umsetzt.   Abbildung 2: Mozilla Thimble In einem Editor (Bereich in der Mitte) können HTML-Elemente eingegeben werden, die direkt in die Vorschau auf der rechten Seite übernommen werden. Man kann die Entstehung des Dokuments verfolgen und Auswirkungen von HTML-Elementen direkt beobachten. In der linken Liste kann zwischen HTML und CSS gewechselt werden. Auch innerhalb der CSS-Codes werden Auswirkungen unmittelbar in der Vorschau angezeigt. Thimble wirkt einigen der angesprochenen Probleme entgegen. Dennoch ist der Einsatz in der Schule nicht ohne Weiteres umsetzbar, da für die Nutzung ein Nutzerkonto jeder Schülerin und jedes Schülers vorhanden sein muss. Zusätzlich liegen die Daten der Lernenden auf einem Cloud-Server außerhalb Deutschlands. Beide Argumente konnten datenschutzrechtlich für die Schule nicht restlos geklärt werden, so dass diese Möglichkeit nicht in Betracht gezogen wurde. 4 Eigenentwicklung 4.1 Überblick Aus den beiden vorgestellten Editoren ergab sich eine grobe Richtung, in die eine Eigenentwicklung gehen sollte. Basierend auf HTML und JavaScript wurde ein eigener HTML-Editor geschrieben. 204 Dominik Heunii “proceedings” — 2017/9/17 — 20:19 — page 205 — #205 ii i ii i HTML-Editor    19   Abbildung 3: HTML-Editor Die Anleihen zum Thimble sind erkennbar. Auch dieser Editor bietet die Aufteilung in Quelltext und Vorschau und genau wie Thimble werden Änderungen im HTML-Quelltext direkt in der Vorschau umgesetzt. Der HTML-Editor weist ein rudimentäres Syntax-Highlighting auf und macht auf nicht geschlossene HTML-Tags aufmerksam. Eine Syntax-Vervollständigung wird nicht zur Verfügung gestellt. Oberhalb des Editors werden drei Tabs angezeigt, mit denen Schülerinnen und Schüler zwischen HTML und CSS wechseln können. Änderungen im CSS-Editor werden ebenfalls live in der Vorschau angepasst. Die Verknüpfung von HTML und CSS wird implizit vom Programm vorgenommen.    Abbildung 4: Strukturbaum des HTML-Dokuments Der Editor bietet einen dritten Tab Struktur. Damit kann der aktuelle Strukturbaum des HTML-Dokuments angezeigt werden. Wird der HTML-Quelltext geändert, wird diese Änderung dynamisch am Strukturbaum vorgenommen.  Entwicklung eines HTML-Editors unter didaktischen Gesichtspunkten 205ii “proceedings” — 2017/9/17 — 20:19 — page 206 — #206 ii i ii i 20    Dominik Heun  4.2 Bereitstellen der Aufgabenstellung Eine Aufgabenstellung kann den Schülerinnen und Schüler auf unterschiedliche Weise präsentiert werden. Die einfachste Variante ist das Einblenden oberhalb des Editors. So haben die Schülerinnen und Schüler den Editor, die Vorschau und die jeweilige Aufgabenstellung direkt auf einen Blick. Die verschiedenen Editoren können mit unterschiedlichen Quelltexten vorbelegt werden, um den Lernenden ein Template zum Arbeiten vorzugeben. Die stärker leitende und damit für den Anfang besser geeignete Variante setzt auf kontextabhängige Aufgabenstellungen. Ein Beispiel: die Schülerinnen und Schüler erhalten zu Beginn ein leeres HTML-Dokument mit der übergreifenden Aufgabe, das HTML-Grundgerüst zu erstellen. Dazu erhalten sie den weiteren Hinweis einen öffnenden und einen schließenden Tag mit dem Namen html zu erstellen. Nachdem sie dies ausgeführt haben, wird der Schritt abgehakt und der nächste Schritt (Erstellung eines head-Elements) angezeigt. Somit wissen die Schülerinnen und Schüler jederzeit, was ihr nächster Schritt ist und können so zu einem vollständigen HTML-Grundgerüst gelangen. Es ist ebenfalls ein Hybrid aus diesen beiden Varianten möglich, so dass die Schülerinnen und Schüler selbständig entscheiden können, welche Hilfen sie in Anspruch nehmen. 4.3 Bereitstellung von Hilfen Um einem differenzierenden Unterricht gerecht zu werden, wurde der Editor erweitert, so dass gestufte Hilfen ermöglicht werden. Über verschiedene Buttons können die Schülerinnen und Schüler Hilfen zur Aufgabenstellung einblenden. Dies lässt sich ebenfalls an den Kontext anpassen, so dass den Schülerinnen und Schülern an verschiedenen Abschnitten ihrer Lösung auch verschiedene Hilfen angeboten werden. Speziell für den Beginn der Behandlung von HTML ist das Grundgerüst zunächst eine Hürde. Deshalb lässt es sich ausschalten, so dass es für die Schülerinnen und Schüler unsichtbar ergänzt wird. Ebenfalls für den Anfang kann eine Unterstützung bei der Erstellung von HTML-Elementen helfen. Dazu wurde ein Formular implementiert, das die Eigenschaften des gewünschten Elements abfragt und dann in den Quelltext einfügt. 206 Dominik Heunii “proceedings” — 2017/9/17 — 20:19 — page 207 — #207 ii i ii i HTML-Editor    21   Abbildung 5: Formular zur Erstellung von HTML-Elementen Damit lassen sich ebenfalls die Fachbegriffe der Bestandteile eines HTML-Elements festigen. Dieses Formular ist auch für CSS-Regeln verfügbar. Um die Anwendung von CSS-Regeln zu visualisieren, können Schülerinnen und Schüler den Strukturbaum verwenden. Um die angewandten Regeln besser deutlich zu machen, werden Veränderungen am Attribut color auf Wunsch im Strukturbaum angezeigt. Dies fördert das Verständnis des Zusammenhangs zwischen den Bereichen Inhalt, Struktur und Aussehen.     Abbildung 6:Visualisierung der CSS-Regeln am Strukturbaum 5 Einsatz im Unterricht Der vorgestellte HTML-Editor wurde zu Beginn des Themenbereichs HTML-Projekt eingesetzt. Um ein generelles Verständnis für die Beschreibungssprache zu fördern, erhielten die Schülerinnen und Schüler den HTML-Editor ohne die Tabs Aussehen und Struktur. Innerhalb des HTML-Editors befand sich reiner Text eines Wikipedia-Artikels. Das HTML-Grundgerüst wurde automatisch vom Editor ergänzt, so dass die Lernenden direkt mit dem Text arbeiten konnten. In einem Unterrichtsgespräch wurden die Formatierungen gemeinsam erarbeitet und direkt im Text umgesetzt. So konnten die Schülerinnen und Schüler den direkten Zusammenhang zwischen dem ursprünglichen Text und der Erweiterung durch die HTML-Tags erkennen. Ferner wurden die Auswirkungen der HTML-Elemente den Lernenden direkt deutlich und sie konnten es von sich aus beschreiben. Entwicklung eines HTML-Editors unter didaktischen Gesichtspunkten 207ii “proceedings” — 2017/9/17 — 20:19 — page 208 — #208 ii i ii i 22    Dominik Heun  Nach diesem Einstieg wurde den Schülerinnen und Schülern erläutert, dass in HTML-Dokumenten ein Grundgerüst nötig sei. Dies sollten die Schülerinnen und Schüler über die in 4.3 beschriebene, kontextabhängige Hilfe erarbeiten. Im nächsten Schritt wurde die Struktur von HTML-Dokumenten behandelt. Die Lernenden erhielten einen neuen Editor, bei dem der Tab Struktur freigeschaltet war. Über den Vergleich von HTML-Dokument und erstelltem Dokumentenbaum war es den Schülerinnen und Schülern möglich, Regeln zur Erstellung eines Dokumentenbaums aufzustellen. Die Auswirkungen von Veränderungen am HTML-Dokument konnten direkt im Dokumentenbaum untersucht werden. In einem nächsten Schritt wurde der Tab Aussehen (CSS) freigeschaltet. Über die Vorbelegung des CSS-Editors mit einer Regel konnten die Schülerinnen und Schüler die Folgen der CSS-Regel direkt im Dokument beobachten. Analog entwickelten sie eigene Regeln, die sich zunächst nur auf Tag-Namen bezogen. Der Bezug zwischen Dokumentenbaum und den CSS-Regeln konnte durch die eingeblendeten Hilfen hergestellt werden. Die Schülerinnen und Schüler konnten durch die Beobachtungen, die sich immer auf ihre eigenen Beispiele bezogen, selbst formulieren, wann eine CSS-Regel auf ein HTML-Element angewandt wird.   Abbildung 7: Komplette Lernumgebung Nachdem die Grundlagen mit dem Editor gelegt wurden, sollten die Schülerinnen und Schüler in Gruppen eine eigene HTML-Seite erstellen. Dazu wurden die traditionellen 208 Dominik Heunii “proceedings” — 2017/9/17 — 20:19 — page 209 — #209 ii i ii i HTML-Editor    23 Editoren (siehe 2) zur Verfügung gestellt, die von einigen Lernenden genutzt wurden. Ungefähr die Hälfte der Lerngruppe verblieb aber in dem vorgestellten Editor und kopierte anschließend den Text aus den Dokumenten und fügten ihn im Windows-Editor ein. Die Schülerinnen und Schüler hatten keine Schwierigkeiten mit dem Editor zu arbeiten und fanden sich in den verschiedenen Stufen gut zurecht. Es traten jedoch Probleme mit dem Internet-Explorer auf, die während der Durchführung nicht behoben werden konnten, so dass auf einen anderen Browser zurückgegriffen werden musste. Die kontextabhängige Hilfe erwies sich ebenfalls als fehleranfällig, was aber behoben werden konnte. So zeigte die Hilfe fälschlicherweise nicht den Abschluss einer Zwischenaufgabe an, wenn mehrere Tags des gleichen Namens vorhanden waren. Des Weiteren trat einmal ein Absturz des Browsers auf, bei dem der bisherige Fortschritt der Schülerinnen und Schüler verloren war. Über die Cache-Möglichkeiten von HTML5 wurde ein Zwischenspeicher eingerichtet, der regelmäßig die Zwischenergebnisse der Schülerinnen und Schüler speichert, so dass die bisherige Arbeit nach einem Absturz verfügbar bleibt. 6 Ausblick Der vorgestellte Editor stellt eine gute Möglichkeit dar, einen Editor im Unterricht zu verwenden, der die Schülerinnen und Schüler durch geeignete Maßnahmen beim Erlenen von HTML und CSS unterstützt. Er gibt für den Einstieg verschiedene Darstellungsformen, um einen explorativen Ansatz bei der Arbeit mit HTML zu ermöglichen. In der Erprobung zeigten sich die Einsatzfähigkeit im Unterricht sowie kleinere Probleme, die behoben wurden. Schon während des Einsatzes wurden Erweiterungen umgesetzt, wie bspw. ein weiterer Tab, in dem JavaScript geschrieben werden kann.  Für die Zukunft sind noch Erweiterungen des Editors geplant. So soll es eine Export-Funktion geben, die aus den aktuellen Inhalten der Editoren HTMLund CSS-Dateien erstellt und zum Download anbietet. Die Visualisierung der CSS-Regeln wird im Dokumentenbaum nur beim Attribut color angezeigt. Bei der Weiterentwicklung sollen alle Regeln über ein Mouse-Over angezeigt werden. Dies ermöglicht eine noch intensivere Umsetzung mit dem Zusammenhang zwischen CSS und der Struktur des HTML-Dokuments. Des Weiteren soll die Erstellung von Aufgaben für Lehrende vereinfacht werden. Aktuell wird der Editor direkt in der JavaScript-Programmierung von Aufgabe zu Aufgabe angepasst, was sehr zeitintensiv ist.  Der Autor schreibt ein Konfigurations-Tool, mit dem Aufgaben, sichtbare Tabs, Hilfen usw. festgelegt werden können und daraus eine HTML-Datei generiert wird, die den Editor entsprechend umsetzt. Speziell die kontextabhängigen Hilfen haben sich in der Erprobung als sehr hilfreich erwiesen, beanspruchen in der Vorbereitung aber sehr viel Zeit. Mit dem einfacheren Konfigurations-Tool würde diese Hilfe einfacher umsetzbar. Entwicklung eines HTML-Editors unter didaktischen Gesichtspunkten 209ii “proceedings” — 2017/9/17 — 20:19 — page 210 — #210 ii i ii i 24    Dominik Heun  Diese Erweiterung würde es ebenfalls ermöglichen, dass dieser Editor von anderen Lehrenden verwendet werden kann und auf deren jeweilige Unterrichtssituation angepasst werden kann. Momentan erfordert die Anpassung eine intensive Einarbeitung in die Programmierung des Editors. Literaturverzeichnis [Hes15] Hessisches Kultusministerium: Kerncurriculum gymnasiale Oberstufe – Gymnasium. Informatik (2015).  210 Dominik Heunii “proceedings” — 2017/9/17 — 20:19 — page 211 — #211 ii i ii i Informatische Bildung in der Sekundarstufe I an  nordrhein -westfälischen Schulen   Eine explorative Studie  zum Einfluss der GI -Bildungsstandards  in NRW  Johanna Borsch1, Marco Thomas2  Abstract:  Um fundiertere Informationen zur Situation einer informatischen Bildung in Nor drhein Westfalen zu gewinnen, we rden von unserem Arbeitsbereich seit 2013 vorwiegend quantitativ  Daten im Kontext von  Informatikunterricht  bei Schülern -, Lehrern und S chulleitern erhoben  sowie vergleichend ausgewertet. Unsere aktuelle Studie zur Sekundarstufe I ist auf das Angebot  der Schulen zur informatischen Bildung  und die Akzeptanz der GI -Bildungsstandards  beziehungsweise die an den Standards orientierten neuen SI -Kernlehrpläne , aber auch  den  Fortbildungsbedarf , fokussiert.  Wir erhielten Rückmeldungen von mehr als  200 Schulen. Im  Rahmen des Vorhabens wurde erneut deutlich, wie schwierig  sich die Durchführung universitärer   Studien  für den Schulbereich gestaltet .  Keywords:  Informatik, Unterricht, Didaktik, Standards, Bildung, Sekundarstufe, Schule   1 Einleitung   In Ermangelung bundesweiter Bildungsstandards zum Fach Informatik hat die  Gesellschaft für Informatik e.  V. (GI) Empfehlungen [GI08] erarbeitet, die sich zu nehmend als Standard für eine informatische Bildung und einen Informatikunterricht  etablieren3. Mit den neuen Kernlehrplänen (KLP) zur Informatik für die Sekundarstufe I  (SI) an Realschulen [ KR15] und an Gesamtschulen /Sekundarschulen  [KG15] für die  Wahlpflic htbereiche hat Nordrhein -Westfalen (NRW) als eines der ersten Bundesländer  die GI-Empfehlungen curricular nahezu vollständig verankert. Für die Gymnasien sind  SI-Kernlehrpläne für den Wahlpflichtbereich in der Entwicklung4. Der Kernlehrplan  Informatik für die Oberstufe ist ebenfalls stark an den GI -Bildungsstandards orientiert  und für die Grundschule n werden in NRW diverse Konzepte sowie erste Empfehlungen  für Informatikstandards diskutiert . Diese Entwicklungen sollten gute Voraussetzungen  für eine drin gend erforderliche informatische Bildung in allen Jahrgangsstufen bieten ,                                                              1 Westfälische Wilhelms -Universität Münster , Didaktik der Informatik, Fliednerstrasse 21, 48149 Münster,  johanna.borsch @uni -muenster.de   2 Anschrift s. o. , marco.thomas@uni -muenster.de   3 Im Folgenden sprechen wir verkürzend von GI -Bildungsstandards, da sich diese Empfehlungen quasi als  Standard etabliert haben und derzeit keine bundesweiten  Standards für das Fach Informatik existieren.   4 Allerdings könnten diese aufgrund der geringen verf ügbaren Stundenanzahl im gymnasialen  Wahlpflichtbereich möglicherweise in einer reduzierteren Form verfasst werden als die bisherigen KLP s. I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 211ii “proceedings” — 2017/9/17 — 20:19 — page 212 — #212 ii i ii i wobei einschränkend betont werden muss, dass Informatik bisher in NRW in keiner  Jahrgangsstufe verpflichtend vorgesehen ist . Sofern Informatik als Wahl (pflicht )fach  angeboten wird, s teht es in starker Konkurrenz zu anderen Angeboten.  Auf  schulpolitischer Ebene wird die Notwendigkeit einer informatischen Bildung für alle  Schülerinnen und Schüler5 offenbar weiterhin als gering eingeschätzt  – auch in NRW. Es  wird den Schulen überlassen, welche Angebote sie mit den verfügbaren Ressourcen  durchführen . Gerade mit Blick auf die derzeitigen bundes und landesweiten  Anstrengungen  im Rahmen einer eher medienpädagogisch ausgerichteten , so genannten  »digitalen Bildung« , erscheint es uns erforderli ch, die Situation der informatisch en  Bildung an den Schulen spezifischer  zu beschreiben6. Diesem Anliegen dienen unsere   Umfragen, die wir seit 2013 im Rahmen des Projekts KISS7 einmal im Jahr durchführen.    2 Ziele der Studie   Die Gegebenheiten (Personal, Schulprofil etc.) bezüglich einer informatischen Bildung  an den Schulen der SI in NRW sind offenbar recht  unterschiedlich . Es erscheint  uns  daher auch  interessant , die Ausstattung  an den Schulen für eine informatische Bildung   zu explorieren.  Vielfach ist bereits darauf hingewiesen worden, dass an den Schulen ein  eklatanter Mangel an Informatikfachkräften existiert und sich diese Situation eher  verschlechtern wird (s.  z. B. [DM16], S. 17). In der aktuellen Studie ermitteln wir zudem   die Zufriedenh eit mit den Rahmenbedingungen für das Fach  Informatik, da die Daten  aus den qualitativen Fragen  einer Lehrer und Schulleiterumfrage im Jahr  2015  auf  Kritik , insbesondere an den verfügbaren Ressourcen , hinweisen.   Gerade im Kontext einer Schulprofilierung sind die Sichtweisen von Entscheidungs träger n, die vermutlich eher selten universitär -informatisch geprägt sind , von Bedeutung .  Dass es Aufklärung sbedarf  zu den Elementen einer informatischen Bildung  gibt, haben  wir bereits mittels  einer  Studie auf dem Münsteraner Wor kshop 2016 aufgezeigt  ([BTY16]). Erneut versuchen wir  Aussagen zu den Angeboten für eine informatische  Bildung zu gewinnen, wobei wir die Medienerziehung in die Untersuchung einbeziehen .  Unsere Studie untersucht  die Bekannthe it und Akzeptanz der GI -Bildungsstandards  bzw.   der neuen Kernlehrpläne sowie den Stand einer  Umsetzung an den Schulen.  Die  Realisierung der Kernlehrpläne steht und fällt mit dem Einsatz von Informatik Fachkräften an den Schulen und mit den Möglichkei ten zu r Fort und Weiterbildung,  sodass wir auch zu diesen Rahmenbedingungen in unserer Studie Fragen  stellen . Zur  Planung von gezielten Fortbildung sangeboten ist es hilfreich zu wissen, welche der  eigene n Kompetenzen von den Lehrkräften als fortbildungsbedürfti g angesehen werden.                                                              5 Aus Gründen der Übersichtlichkeit verzichten wir im Folgenden auf die Nennung unterschiedlicher Gender,  sofern der  Sachverhalt dieses nicht erfordert.   6 Problematisch an den Schulstatistiken NRWs [NW16] ist beispielsweise, dass die Schulen weitestgehend  entscheiden können, ob Angebote der Informatik zugerechnet werden oder nicht.   7 Kriterien zum Informatikunterricht von Schülerinnen und Schülern  212 Johanna Borsch, Marco Thomasii “proceedings” — 2017/9/17 — 20:19 — page 213 — #213 ii i ii i Für Fortbildungen stehen an deutschen Schulen – unserer Ansicht nach – zu wenig  Arbeitsstunden und Mittel zur Verfügung , obwohl Fortbildungen immanenter  Bestandteil der schulischen Lehre sein sollten . Inwieweit sich E -Learning in Inform atikLehrerfortbildungen integrieren lässt, wird mit d em verwendeten Frage bogen  ebenfalls  untersucht .   3 Untersuchungsmethodik   Die Erhebung der Daten erfolgt quantitativ mit einem standardisierten Fragebogen, der  Online auszufüllen ist. Abhängig von den Eingaben werden  relevante Frageblöcke ein  oder ausgeblendet. Als Druckfassung betr ägt die durchschnittliche Länge des Frage bogens ca. sieben Seiten. Die geschätzte Bearbeitungszeit liegt bei ca. 20  Minuten.   Der Online -Fragebogen8 umfas st acht Blöcke  zu den Themen „Allgemeines “,  „Informatikangebot “, „Bewertung des Kernlehrplans Informatik “, „Bewertung der  Bildungsstandards “, „Fortbildungsbedarf “, „Bereitschaft zu E -Learning “,  „Anforderungen an Lehrerfortbildungen “ und „Zeiteinteilung für  Fortbildungen “9.  Der erste Teil  des Fragebogens  fokussiert auf allgemeine Angaben zur Schule und zur  Person der Teilnehmer. Informatiklehrern werden dabei vier zusätzliche Fragen zum  beruflichen Werdegang und zur aktuellen Tätigkeit als Informatiklehrer gestellt. Der  zweite Teil erfasst, wie zufrieden die Teilnehmer mit dem Angebot und der Ausstattung  an ihrer Schule sind und ob es Ang ebote zur Medienerziehung oder informatisch en  Bildung in der S I gibt. Wird angegeben, dass es im Wahlpflichtbereich kein Angebot zur  Informatik gibt oder  wird zu dieser Fr age „Sonstige“ angekreuzt, so w ird jeweils eine  zusätzliche Frage  eingeblendet, die diese Angaben konkretisieren sollen. Teil 3 und 4  decken sich im  Aufbau nahezu. Teilnehmer von Real -, Sekundar und Gesamtschulen  werden in Teil 3 zum Kernlehrplan befragt,  während  alle übrigen Schulformen, für die  aktuell kein Kernlehrplan existiert, in Teil 4 in ähnlicher Weise zu den GI Bildungsstandards befragt werden. Diese Unterscheidung findet auch im zweiten Teil  von Block fünf statt, der erfasst, welchen Fortbildung sbedarf die Lehrer für sich in  Bezug auf die Kernlehrpläne bzw.  die GI -Bildungsstandards sehen. Durch dieses  kontextabhängige Vorgehen wird auch der Gesamtumfang der Umfrage deutlich  reduziert.    4 Datenerhebung   Gegenstand der Untersuchung sind Lehrer, die In formatik (im weitesten Sinne)  unterrichten, und (stellvertretende) Schulleiter.  Der Aufruf zur Umfrage wurde ab                                                              8 Fragebogen und Auswertung sind online verfügbar unter http://ddi.uni -muenster.de/ab/pu   9 Die letzten drei Themen  (Block 6 -8) werden in einem gesonderten Beitrag unseres Arbeitsbereichs  ausgewertet  (s. a. K. Akao in diesem Ba nd). Informatische Bildung in der Sekundarstufe I an nordrhein-westfälischen Schulen 213ii “proceedings” — 2017/9/17 — 20:19 — page 214 — #214 ii i ii i September 2016 zunächst über alle Bezirksregierungen NRWs gestartet und sollte an  alle Haupt -, Real -, Gesamt und Sekundarschulen sowie Gymnasie n gehen. Im  Dezember ist deutlich  geworden , dass dieses Vorgehen dieses Mal  nur teilweise  unterstützt wurde, so dass wir einen erneuten Aufruf an diese Schulen via Faxversand  gestartet haben . Die Umfrage ist Anfang Februar 2017 beendet  worden .   Insgesamt h aben wir 247 Rückmeldungen erhalten, aus denen wir die Teilnahme von  211 verschiedenen Schulen abgeleitet haben. Leider konnten wir auch mit dem  aufwändigen Faxversand keine hohen Rückmeldequoten erzielen.  Schulform10 H R S Ge Gym  Gesamt  456 559 114 314 625 Rückmeld ungen (in %) 5 8 9 10 16 Tabelle 1: Anzahl Schulen bzgl. intendierten Population nach Schulformen . Quelle: [NW16 ]  Wie auch schon in den vergangenen Umfrage n liegt die Rückmeldequote bei Gymnasien  höher als bei den an deren Schulformen. Am niedrigsten ist die Rückmeldequote bei den  Hauptschulen.   Schulform  H R S Ge Gym  Gesamt  Anzahl Informatiklehrer11 119 532 46 337 1383  2417  Rückmeldungen  11 41 7 22 117 202 in % 9 8 15 7 8 8 Tabelle 2: Rückmeldung von Lehrern  für das Fach Informatik . Quelle: [NW16]                                                               10 H = Hauptschule, R = Realschule; S = Sekundarschule, Ge = Gesamtschule, Gym = Gymnasium,   11 Inkl. der Lehrer in der SII, da die amtlichen Schuldaten für das Schuljahr 2015/16 [NW16] keine  diesbezügliche Unterscheidung machen.  214 Johanna Borsch, Marco Thomasii “proceedings” — 2017/9/17 — 20:19 — page 215 — #215 ii i ii i Schulform  H R S Ge Gym  Sonstige  Gesamt  bin Lehrer für das Fach Informatik  11 41 7 22 117 4 202 unterrichte Informatik oder Fächer mit informatischen  Inhalten  17 48 9 30 118 5 22712 unterrichte keine Fächer mit informatischen Inhalten  4 4 3 4 4 1 20 bin Schulleiter  3 9 3 3 5 1 24 bin s tellvertreten der Schulleiter  2 11 0 2 7 0 22 Tabelle 3: Teilnehmer der Umfrage nach Funktion(en) an der Schule   Gut 80% der Teilnehmer geben an, dass sie Lehrer für das Fach Informatik sind . 25  Lehrer  unterrichten „Fächer mit informatischen Inhalten“, ohne dass sie angeben,  Informatiklehrer zu sein . Des Weiteren können wir festhalten, dass 46 (stellvertreten de)  Schulle iter teilgenommen haben  (14%), von denen 6 Schulleiter und 16 stellvertreten de  Schulleiter ang eben, dass sie Informatiklehrer sind . Insgesamt gesehen passt unsere  Stichprobe auf die intendierte Population.   5 Ergebnisse und Auswertung   Aufgrund der recht geringen Rückmeldequoten der Umfrage sind die erhaltenen Daten  sehr vorsichtig zu interpretieren und keinesfalls als „repräsentativ“ anzusehen.  Allerdings lassen sich durchaus interessante Trends erkennen und Fragen initiieren .   5.1 Schulausstattung   Während di e amtliche Schuls tatistik NRWs [NW16] zeigt, dass im Durchschnitt 1,2  Lehrer für das Fach Informatik pro Schule zur Verfügung stehen, erg ibt sich in unserer  Umfrage ein Durchschnitt von ca. drei  Informatiklehrer n pro Schule.  In der Studie lag  der Schnitt f ür jede Schulform über dem Schnitt aus der NRW -Statistik:                                                               12Bei den informatiknahe n Lehrern ist das Geschlechterv erhältnis ca. 75 zu 25 für die Männer. Bei den  Teilnehmern ohne informatische Fächer ist es eher anders herum: 40 zu 60 für die Frauen.  Informatische Bildung in der Sekundarstufe I an nordrhein-westfälischen Schulen 215ii “proceedings” — 2017/9/17 — 20:19 — page 216 — #216 ii i ii i Schulform  H R S Ge Gym13 Schulen gesamt  456 559 114 314 625 Informatiklehrer  119 532 46 337 1383  Informatiklehrer  pro Schule  nach amtlichen Schuldaten  0,3 1,0 0,4 1,1 2,2 Mittelwert in der Studie  bzgl. Lehrer, die ein Fach mit informatischen  Schwerpunkten unterrichten können (auch fachfremd)  2,6 2,6 2,4 2,9 2,8 Tabelle 4: Informatiklehrer an den Schulen . Quelle:  [NW1 6]  Dies kann dahingehend interpretiert werden, dass vor allem informatikaffine Sc hulen an  der Umfrage teilgenommen haben. Nur vier Teilnehmer geben an, dass sie keine Lehrer  an ihrer Schule haben , die ein Fach mit informatischen Schwerpunkten unterrichten  können .  Auch in unserer Umfrage wird deutlich , dass Informatiklehrer relativ spät  in den  Lehr erberuf einsteigen : Basierend auf dem Alter der Teilnehmer und der Zeitspanne der  bisherigen Unterrichtstätigkeit für das Fach Informatik, ergibt sich die These, dass  Informatiklehrer mit ca. 35 Jahren mit dem Unterrichtsfach  starten. Zudem unterrichtet   ein hoher Anteil an Lehrer n fachfremd14 Informatik . Dies geht einher mit einem  hohen  Anteil von 34,2% an Nachqualifikationen ( i. d. R. „ Zertifikatskurse “ der Bezirks regierungen , die zu einer Unterrichtserlaubnis führen ) im Fach  Informatik , was direkte  Auswirkungen auf den Unterricht und den Stellenwert  des Fachs Informatik an den  Schulen haben dürfte . Dieser Wert deckt sich in etwa mit dem Wert , den wir bereits  2015 mit einer  Lehrerumfrage ermittelt haben. 2015 lag der Anteil be i 30,2 % (N=96).   5.2 Schul ische A ngebote   Um die Angebot e zu einer informatischen Bildung an den Schulen präziser erfassen zu  können, haben wir differenziert  nach dem Angebot einer Medienerziehung, einer  verbindlichen informatischen Grundbildung (VIG), einer fächerintegrierten  informationstechnischen Grundbildung (FIG) und einem  Informatikunterricht (IU)  gefragt.   Überraschenderweise haben 35% der Schulen der U mfrageteilnehmer kein festes  Stundenkontingent für eine Medienerziehung eingeplant. Die anderen Schulen bieten                                                              13 In den Zahlen für die Gymnasien und Gesamtschulen sind in den amtlichen Schuldaten auch die SII -Lehrer  enthalten.   14 Fachfremd bedeutet Unterrichten ohne Lehrbefähigung, d. h. ohne Staatsexamen in dem Fach. Dorothee  Müller [DM16] hat in ihrer Dissertation lesenswert die Situation des Fachs Informatik in NRW dargestellt  und Gründe für den Lehre rmangel untersucht.  Von schulpolitischer Seite wird der Lehrermangel im Fach  Informatik als ein Argument gegen die Einrichtung eines Pflichtfachs Informatik in der Sekundarstufe I  benannt (mündliche Überlieferung einer Stellungnahme der Schulministerin, 20 16). 216 Johanna Borsch, Marco Thomasii “proceedings” — 2017/9/17 — 20:19 — page 217 — #217 ii i ii i Medienerziehung zumeist über mehrere Stufen verteilt an, vornehmlich in den Stufen 5  bis 7. An Realschule n ist das Angebot zur Medienerziehung über die Schulstufen  tendenziell schwächer ausgeprägt, während Sekundarschulen  eher ein größeres Angebot  zu haben scheinen.  Eine verpflichtende informatische Grundbildung basierend auf einem  schulinternen Konzept findet sich an immerhin 40% der Schulen, wi ederum vorwiegend  in den Stufen 5 bis 7.  Das Angebot ist jedoch deutlich geringer als zur Medienerziehung.   Es kann ein stati stisch signifikanter Zusammenhang zwischen dem Angebot von  Medienerziehung und verpflichtender informatischer Grundbildung in den  unterschiedlichen Jahrgangsstufen festgestellt werden.15 Dies könnte darauf hindeuten,  dass Schulen beide Bildungsziele  in ein Pflichtfach integrieren  oder der Begriff  „Medienerziehung“ nicht klar von dem Begriff „verpflichtende informatische  Grundbildung“ ab gegrenzt wird.16 Ein ähnlich starker signifikanter Zusammenhang kann  ebenfalls auch zwischen dem Angebot von VIG und verpflichtendem Informatikangebot  festgestellt werden.  Erstaunlich ist  (erneut) , dass 41% der Schulen der Ansicht sind,  keine fächerintegrie rte informationstechnische Grundbildung (FIG) an zubieten.  Es lässt  sich ebenfalls ein stati stisch signifikanter Zusammenhang zwischen Medienerziehung  und fächerintegrierter informationstechnischer Grundbildung erkennen.17  Erwartungsgemäß gibt es an  nahezu 8 0% der Schulen kein Pflichtfach Informatik  in der  Sekundarstufe I . Im Wahlpflichtbereich der Sekundarstufe I wird Informatik an fast 50%  der Schulen als „reiner“ Informatikunterricht angeboten. 18% der Schulen bieten  Informatik im Wahlpflichtbereich  nicht an und begründen dies zumeist mit dem Vorrang  „traditioneller“ Fächer wie z.  B. Französisch (49%) und dem Lehrermangel (es gibt bei  uns keine Lehrer: 24%; nicht genug Lehrer für den Wahlpflichtbereich: 32%).  Durchschnittlich werden 2 -3 Stunden Informatik im Wahlpflichtbereich  der Stufen 7 -10  angeboten (die Stufen hängen von der jeweiligen Schulform ab) .  In je einer Schulleiter und einer Informatiklehrerumfrage 2015 haben wir die Frage  gestellt: „Welche Verbesserungsvorschläge oder Anregungen fallen Ihnen zur  Schulinformatik in NRW ein?“. Eine qualitative Analyse nach Mayring ergab die These,  dass der geringe Anteil an verpflichtenden Informatikunterricht in der SI sowohl von  Schulleitern als auch von Informatiklehrern kritisiert wurde. Ein Drittel der  teilnehmenden Lehrer bzw. 50% der Lehrer, die die Frage beantwortet haben, wünschen  sich eine verpflichtende SI -Informatik (Schulleiter : 13% der Teilnehmer; 32% der  beantworteten Fragen) . Ebenfalls kritisiert wurde in dieser Auswertung die Ausstattung  der Schu len bzgl. Hardware und Software (Schulleiter: 11% / 28%; Lehrer: 13% / 20%).   In der aktuellen Umfrage sind über 50% der befragten Lehrer mit dem Informatik                                                             15 Für die Jahrgangstufen 5 -8 ist der p -Wert für den Chi -Quadrat -Test und dem Test nach Fischer bei 0,000 und  die erwartete Häufigkeit des Chi -Quadrat -Test in jeder Zelle größer als 5. In Stufe 9 und 10 ist die erwartete  Häufigkeit in einer Zelle jewei ls kleiner als 5 (25%). In Jahrgangsstufe 9/10 ist der p -Wert für den Chi Quadrat -Test bei 0,007/0,005 und für den exakten Fischer Test bei 0,014/0,021. Man kann also immer noch  von einem signifikanten Zusammenhang ausgehen.    16 Obwohl wir bei der Formulier ung der Fragen sehr auf eine Unterscheidung in den Begrifflichkeiten geachtet  haben.   17 Für Interessierte stellen wir die statistischen Kennzahlen mit der Auswertung der Daten wieder online auf  unseren Webseiten bereit.  Informatische Bildung in der Sekundarstufe I an nordrhein-westfälischen Schulen 217ii “proceedings” — 2017/9/17 — 20:19 — page 218 — #218 ii i ii i angebot an ihrer Schule, den curricularen Vorgaben (s.   a.  u.) und der technischen  Ausstattung zufr ieden18.  Darüber hinaus haben wir die Teilnehmer  der oben genannten Umfragen gebeten, die  informatischen Schwerpunkte ihrer Schule zur informatischen Bildung (Projektthemen,  Wettbewerbsteilnahmen) kurz zu beschreiben. Häufig g enannt wurden: AGs ( z. B. zur  Robotik), Informatikbiber, Bundeswettbewerb Informatik und Projekttage. Letztlich  zeigt sich hier, dass die Lehrer bzw. die Schulen auf vielfältige Art und Wei se Freiräume  nutzen, um ihren Schülerinnen und Schülern  eine informatische Bildung zu ermöglichen.   5.3 Kernlehrplan/Bildungs standards   Ein Viertel  der Teilnehmer von Real-, Gesamt und Sekundarschulen geben an, dass sie  die neue n Ke rnlehrpläne  nicht gelesen haben (N=95 ). Nur 14% der teilnehmenden  Schulen dieser Schulformen geben an, dass die Kernlehrpläne bereits in schulinterne  Lehrpläne umgesetzt wurden. An  ca. 55% der Schulen der Teilnehmer dieser  Schulformen  seien die seit 2015 gültigen Kernlehrpläne zur Informatik noch nicht  umgesetzt worden . Die verbleibenden Teilnehmer geben an, dass er teilweise umg esetzt  wurde. Man kann zwischen der geplanten Umsetzung und dem Stand der Umsetzung an  den genannten Schulformen einen signifikanten Zusammenhang feststellen19. Eine These  hierzu könnte sein, dass die Schulen, die den Kernlehrplan bisher noch nicht umgesetz t  haben, kein informatisches Angebot im Wahlpflichtbereich haben und daher den  Kernlehrplan auch nicht umsetzen.  An den Gymnasien kennen nur 46% diese SI Kernlehrpläne  ganz oder teilweise .  Insgesamt  lässt sich in der Studie  die Tendenz erkennen, dass die T eilnehmer an  Gesamt -, Real und Sekundarschulen mit dem neuen Kernlehrplan , der an den  Bildungsstandards orientiert ist,  zufrieden sind. Sie stimmen den Aussagen „Der  Kernlehrplan deckt meine inhaltlichen/kompetenzbezogenen Erwartungen“, „Der  Kernlehrplan ist grundlegend für eine zeitgemäße Medienbildung“ und „Der  Kernlehrplan lässt genügend Freiräume für Schwerpunktsetzungen“ tendenziell zu20. Sie  sind größtenteils  (46%  zu 40%)  der Meinung, dass die Umsetzung in die  Unterrichtspraxis relativ problemlos funktioniert. Darüber, ob es genügend  Unterrichtsmaterialien gibt, sind sie sich eher uneinig  (über 50% negieren diese Frage) .  Abschließend lässt sich eine starke Tendenz (65%) dahingehend  feststellen , dass der  Umfang an Fortbildungen bzgl. des neuen Kernl ehrplans als nicht angemessen erachtet  wird.   Die GI -Empfehlungen zu Bildungsstandards wurden von 66% der Befragten (teilweise)                                                               18 Die Zufriedenheit ist sogar so groß, dass ganz unzufriedene Personen statistisch als Ausreißer erfasst werden.  In der qualitativen Studie werden vermutlich eher die unzufriedenen Teilnehmer ihre Kritik bekundet haben.   19 Chi-Quadrat Test/ Test na ch Fisch er p=0,000. 24 der 26 Schulen die den Kernlehrplan bereits teilweise  umgesetzt haben, planen dies auch weiterhin zu tun. Bei den Schulen, die den Kernlehrplan bisher nicht  umgesetzt haben, planen ca. 50% die Umsetzung.   20 Über 50% stimmen teilweise oder vollk ommen zu.  218 Johanna Borsch, Marco Thomasii “proceedings” — 2017/9/17 — 20:19 — page 219 — #219 ii i ii i gelesen  (36% geben „Ja“ an; 30% „teilweise“) . Für die Hauptschulen und Gymnasien   existieren derzeit keine Kernlehrpläne für die S I-Informatik. An 23% diese r Schulen   wurden die Bildungsstandards in einem schulinternen Lehrplan umgesetzt21, aber 53%   der anderen 77%  geben auch an, diese nicht umsetzen zu wollen.  Es lässt sich darüber  hinaus signifikant nachweisen, dass es einen Zusammen hang zwischen der Bekanntheit  der Bildungsstandards an den Schulen und dem Willen zur Umsetzung gibt. Dabei  deuten die statistischen Ergebnisse darauf hin, dass d er Umsetzung swille  von der  Bekanntheit abhängt.22 Generell ist die Zustimmung zu den Bildungsst andards deutlich  geringer als die der anderen Schulformen zu den Kernlehrplänen ( vgl. o.).  5.4 Fortbildungen   Auffällig bei informatik affinen  Befragte n ist vor allem der hohe Anteil (30 %) von  denen, die keine Fortbildungen gehabt haben . Im Mittel ergibt sich ein Schnitt von ca.  drei Fortbildungstagen  (Median 2 Tage)  in den letzten 3 Jahren bei den Teilnehmern, die  Informatik oder Fächer mit informatischen Inhalten unterrichten. Dies deckt sich auch  mit den Angaben, wie oft Fo rtbildungen stattfinden sollten  (1-2 Mal im Jahr)23.   Generell scheint ein Bedarf an Fortbildungen in Bezug auf den neuen Kernlehrplan  vorhanden zu s ein. Dies geben immerhin fast 70 % der Teilnehmer mit informatischen  Fächern an Real -, Sekundar und Gesamtschulen an. Zu den Bildungsstandards  sind es  57% der Befragten . Zu allen Inhaltsbereichen  des Kernlehrplans  geben mehr als 50% der  Teilnehmer mit „informatischen Fächern“  der Real -, Sekundar und Gesamtschulen   einen zumindest teilweisen Fortbildungsbedarf für sich an.  Bezogen auf die  Bildungsstandards (Gym, H , Sonstige ) wird insbesondere für die Inhaltsbereiche  „Algorithmen“ sowie „Sprachen und Automaten“ ein hoher Fortbildungsbedarf gesehen .  Während für den Kernlehrplan (R, S, Ge) die Inhaltsbereiche eher gleichgewichti g  hinsichtlich einer Fortbildung gesehen werden , variieren  die Einschätzungen  zu den  Inhaltsfeldern  der GI-Bildungsstandards stärker.   6 Fazit und Ausblick   Die GI -Bildungsstandards und deren Implementierung in Kernlehrpläne sind in NRW  auf einem guten Weg und  finden in der Lehrerschaft deutliche Akzeptanz , obwohl  zu  einigen Kompetenzerwartungen ein Fortbildungsbedarf seitens der Lehrkräfte  signalisiert wird . Allerdings kann – aus unserer Sicht – nicht akzeptiert werden, dass                                                              21 Die Frage zur Umsetzung der Bildungsstandards wurde nur Teilnehmern von Hauptschulen, sonstigen  Schulen und Gymnasien gestellt . Die zur Kenntnis der Bildungsstandards wurde allen Teilnehmern der  Umfrage  gestellt .  22 Chi-Quadrat Test p=0,005 . la mbda = 0,250 bei „Umsetzung “ abhängig (asymptotisch signifikant),  lambda=0,071 bei „gelesen “ abhängig.   23 Es zeigt sich eine Tendenz, dass der Wunsch nach Fortbildungstagen vergleichbar zur Realität  durchgeführte r Fortbildungstage ist (kein signifikanter Z usammenhang).  Informatische Bildung in der Sekundarstufe I an nordrhein-westfälischen Schulen 219ii “proceedings” — 2017/9/17 — 20:19 — page 220 — #220 ii i ii i Schulen keine Angebote zur informat ischen Bildung machen. Es fehlen für den  Informatikunterricht in der Sekundarstufe I in NRW ausreichend  Ressourcen in den  Bereichen Fachpersonal, Fort und Weiterbildung und zuletzt auch  bei der  entsprechenden Ausstattung von Schulen.  Sicherlich sind diese Mängel kein  Alleinstellungsmerkmal der Informatik, aber bei einem wenig er etablierten Fach dürften  sich diese gravierend er als in anderen Schulf ächern  auswirken . Auch die Universitäten  müssten sich stärker für Informatik -Lehramtsstud iengänge der Sekundarstufe I  engagieren und nicht zuletzt – gemeinsam mit der KMK – Konzept e entwickeln, um  mehr Studierende  für Studiengänge zu gewinnen, die auf das Unterrichten von  Informatik in der Schule vorbereiten.  Es bleibt leider festzuhalten, das s das Erheben von  Daten zu Forschungszwecken im Schulbereich durch schulpolitische Entscheidungen  massiv erschwert  wird. Eine  Unterstützung von Umfrage n durch die zuständigen  Behörden könnte  zu „repräsentativeren“ Ergebnissen führen , die für alle Beteiligt en  nützlich sind.  Es wäre zu wünschen, dass in konstruktiven Gesprächen nach Lösungen  gesucht wird, die für den Schulalltag verkraftbar sind.  Die Tür zum Informatikunterricht   sollte nicht verschlossen werden.   Literaturverzeichnis   [BTY16]  Borsch, Johanna; T homas, Marco; Yomayuza, Angélica (2016): Informatisches  Bildung in den frühen Klassen der Sekundarstufe I. Eine explorative Studie in den  Regeriungsbezirken Münster und Detmold. In: Marco Thomas und Michael Weigend  (Hg.): Infor matik für Kinder . 7. Münstera ner Workshop zur Schulinformatik. 1. Aufl.  Norderstedt: Books on Demand, S. 93 –102.  [DM16]  Müller, Dorothea: Der Berufswahlprozess von Informatiklehrkräften.  Dissertationsschrift, Wuppertal 2016.  Online verfügbar unter http://elpub.bib.uni wuppertal.de/edocs/dokumente/fbc/mathematik/diss2016/mueller  (09.02.2017).   [GI08]  Gesellschaft für Informatik (Hg.) (2008): Grundsätze und Standards für die Informatik  in der Schule. Bildungsstandards Informatik für die Sekundarstufe I . Empfehlungen  erarbeitet vom Arbeitskreis Bildungsstandards. Online verfügbar unter (20.03.2014)  https://www.gi.de/fileadmin/redaktion/empfehlungen/Bildungsstandards_2008.pdf.   [KR15] Ministerium für Schule und Weiterbildung des Landes Nordrhein -Westfalen (2015):  Kernlehrplan für die Realschule in Nordrhein -Westfalen Wahlpflichtfach Informatik .  Online unter http://www.schulentwicklung.nrw.de/lehrplaene/lehrplannavi gator -si/realschule/index.html  verfügbar (06.01.2017) .  [KG15]  MSW NRW  (2015): Kernlehrplan für die Gesamtschule /Sekundarschule  in Nordrhein Westfalen Wahlpflichtfach Informatik . S. [KR15]   [NW16]  Ministerium für Schule und Weiterbildung des Landes Nordrhein -Westfalen : Amtliche  Schuldaten zum Schuljahr 2015/16. Online verfügbar unt er (09.02.2017)  https://www.schulministerium.nrw.de/docs/bp/Ministerium/Service/Schulstatistik/Amt liche -Schuldaten/index.html      220 Johanna Borsch, Marco Thomasii “proceedings” — 2017/9/17 — 20:19 — page 221 — #221 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 11 Hochschule als außerschulischer Lernort für Schülerinnen und Schüler: Ein pragmatisches Angebot Lars Prädel1, Gerlinde Schreiber2 Abstract: Der vorliegende Beitrag stellt das Konzept und die Arbeiten im Informatik-Lernlabor vor, das Jugendliche unterschiedlicher Altersstufen anspricht und in verschiedensten Formaten (von 2h Schnuppern bis hin zum einjährigen Praktikum) einen praktischen Einstieg in informatikbezogene Alltagsthemen bietet. Exemplarisch wird die Konzeption und Durchführung von drei Angeboten ausführlicher ausgeführt: Ein Kompaktkurs im Rahmen einer Kinderferienakademie auf der Insel Wangerooge, ein mehrstündiges Schnupperangebot für Schulklassen sowie die Entwicklung von Facharbeiten der gymnasialen Oberstufe. Die Arbeiten im Lernlabor setzen auf frei verfügbaren Lernmodulen, frei verfügbarer Software sowie günstiger Hardware auf, die ﬂexibel an unterschiedliche Bedürfnisse und Einsatzbedingungen angepasst werden können. Der Beitrag schließt mit den bisher gesammelten Erfahrungen zu den Erfolgsfaktoren dieser außerschulischen Angebote. Keywords: Lernlabor; informatische Bildung; Bild der Informatik; Programmiereinstieg; persönliche Lernumgebung 1 Einleitung Warum studieren Sie Informatik? Diese Frage wird den Erstsemestern jedes Jahr beim Studiumseingang gestellt. Die Antworten darauf sind vielfältig. Viele geben an, dass sie sich aus wirtschaftlichen Aspekten für das Studium entschlossen haben, einige geben die vage Aussage an, dass sie sich sehr viel mit Computern auseinandersetzen und mehr über die Funktionsweise lernen wollen. Wenige hingegen geben an, dass sie bereits Vorkenntnisse aus der Schule mitbringen oder Informatik aus dem familiären Bereich kennen und somit Berührungspunkte haben. Die Schlüsse, die daraus gezogen werden, sind einfach: Die Studierenden haben ein di  uses Bild, was in dem Studium auf sie zukommt und werden oftmals enttäuscht, wobei die hohen Abbruchquoten ein Beleg dafür sind. Auf der anderen Seite liegt der Verdacht nahe, dass es Personen gibt, die sich für ein Informatikstudium begeistern würden, wenn sie nur wüssten, was das bedeutet. Hier setzt das InformatikLabor an. In unterschiedlichen Angeboten können Schülerinnen und Schüler mit oder ohne Lehrkräfte ebenso wie Studieninteressierte in die Informatik und insbesondere in die Programmierung hineinschnuppern. 1Hochschule Bremen, Flughafenallee 10, 28213 Bremen lars.praedel@hs-bremen.de 2Hochschule Bremen, Flughafenallee 10, 28213 Bremen gerlinde.schreiber@hs-bremen.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 221ii “proceedings” — 2017/9/17 — 20:19 — page 222 — #222 ii i ii i12 Lars Prädel, Gerlinde Schreiber Ziel des Lernlabors ist es, mehr Begeisterung für MINT-Fächer zu wecken, ihren Alltagsbezug deutlich zu machen und die Abbruchquote im Studium durch eine bessere vorhergehende Orientierung zu senken. Alle Angebote des Lernlabors orientieren sich an didaktischen Leitlinien, die in ähnlicher Form auch aus anderen Lernlaboren [ In17,UF17 ] bekannt sind: • Alle Themen sind praxisorientiert und haben einen klaren Anwendungshintergrund mit Bezug zum Umfeld der Jugendlichen. • Die Jugendlichen arbeiten möglichst eigenständig in kleinen Teams. • Die Arbeitsgruppen können selbst inhaltliche Schwerpunkte setzen, die ihren Interessen und ihrer Vorbildung angemessen sind. • Die Betreuung erfolgt ﬂexibel in Abhängigkeit von Bedarf und Nachfrage der Teams. 2 Umfeld und Ausstattung Das Informatik-Lernlabor richtet sich an Schülerinnen und Schüler (mit oder ohne Lehrkräfte) ebenso wie an Studieninteressierte. Eine besondere Herausforderung stellen die unterschiedlichen Vorkenntnisse und die zeitliche Einschränkung dar. Die Teilnehmerinnen und Teilnehmer sollen mit einer neuen Aufgabenstellung konfrontiert werden, bei der zentrale Aspekte der Informatik, beziehungsweise der Programmierung, behandelt werden, die aber auch bei Interesse zu Hause weiter verfolgt werden können, ohne großen ﬁnanziellen Aufwand und teurem Equipment. Daher werden kostengünstige Mikrocomputer Raspberry Pi [Ra17 ] verwendet, die sich durch eine transportable Größe und vielseitige Möglichkeiten auszeichnen. So können diverse kostenlose Programme verwendet werden, die den Einstieg in die Programmierung erleichtern oder aber auch elektronische Schaltungen angeschlossen und mit einer Programmierschnittstelle verknüpft werden. Mikrocontroller, wie Arduino [Ar17 ], bieten auch einen Einstieg in elektronische Schaltungen und zentrale Aspekte der Programmierung. Durch die Einbindung in die Fakultät für Elektrotechnik und Informatik besteht darüber hinaus die Möglichkeit, auf die im akademischen Lehrbetrieb genutzten Ressourcen zuzugreifen (beispielsweise Virtual Reality/Augmented Reality-Ausstattung, 3D-Scanner und 3D-Drucker). Als Ausblick auf das Studium können mit dem kostenfreien Programm Blender [Bl17] 3DAnimationen erstellt und bearbeitet werden. 3 Ausgewählte Angebote Im folgenden sind einige exemplarische Angebote angegeben, die kontinuierlich durchgeführt werden.222 Lars Prädel, Gerlinde Schreiberii “proceedings” — 2017/9/17 — 20:19 — page 223 — #223 ii i ii iHochschule als außerschulischer Lernort für Schülerinnen und Schüler 13 3.1 Kompaktkurse In einem Kompaktkurs wird eine Gruppe von Jugendlichen eine Woche lang mehrere Stunden pro Tag betreut. Ziel bei diesem Konzept ist, anhand einfacher Aufgaben einen Einstieg in die Programmierung zu erhalten und anschließend eigene Ideen der Teilnehmerinnen und Teilnehmer umzusetzen und sie dabei zu unterstützen. Dieses Konzept wird zum Beispiel in der Kinderferienakademie auf der Nordseeinsel Wangerooge umgesetzt. Dabei haben sowohl Jugendliche, die mit ihren Eltern Urlaub auf der Insel machen, als auch Jugendliche, die auf der Insel wohnen, die Möglichkeit daran teilzunehmen. In einer Gruppe von bis zu 15 Teilnehmerinnen und Teilnehmern im Alter von 12 16 Jahren werden in den Räumlichkeiten der Inselschule Wangerooge verschiedene kurze Projekte durchgeführt. Nicht nur aufgrund der Transportfähigkeit der Raspberry Pis und der Arduinos bieten sich Angebote mit diesen Geräten an. Nach einer Einführung in die Funktionsweise der Hardware und des Linuxsystems können unterschiedliche Projekte durchgeführt werden. Zum Beispiel kann ein Programm in der Programmiersprache Python [ Py17 ] erstellt werden, welches die Möglichkeit unterstützt, die virtuelle Welt von dem Spiel Minecraft [Mi17a ] zu verändern. In der Raspberry Pi Version [ Mi17b ] dieses Spieles ist es möglich, verschiedene Gebäude oder Landschaften aus unterschiedlichen Würfeln zu erstellen. Durch die Programmierschnittstelle zu Python können diese auch algorithmisch verändert werden. Da dieses Spiel bei Jugendlichen populär und somit das Spielprinzip von vornherein klar ist, wird ein einfacher Einstieg ermöglicht. Es entsteht der Eindruck, dass die Teilnehmerinnen und Teilnehmer ein neues Feature in dem Spiel erforschen, auf der anderen Seite aber mit ernsthafter Programmierung konfrontiert werden. Die Jugendlichen lernen einfache Konzepte der Programmierung und können die Ergebnisse direkt in dem Spiel verfolgen. So kann eine Schleife in Python dazu verwendet werden um eine Mauer zu erstellen. Auch die Verwendung von Variablen und anderen Kontrollstrukturen wird erlernt, indem die Position des Spielers abgefragt oder verändert wird. Nachdem kleinere Aufgaben gestellt werden, können die Teilnehmerinnen und Teilnehmer eigene Ideen verwirklichen und so eigene Spiele innerhalb der Minecraft-Welt erstellen. 3.2 Facharbeiten In Zusammenarbeit mit der gymnasialen Oberstufe von Schulen werden jährlich Projektarbeiten vergeben. Diese Projektarbeiten werden je von zwei bis vier Schülerinnen und Schülern in dem Abiturjahrgang über einen Zeitraum von 2 3 Wochen bearbeitet. Bei diesen Facharbeiten bekommen die Teilnehmerinnen und Teilnehmer eine Aufgabe gestellt und bearbeiten diese nach einer kurzen Einführung selbstständig. Das Lernlabor fungiert als Kunde, der ein Projekt in Auftrag gibt, aber auch mithilft, dieses umzusetzen. Dabei werden die Schülerinnen und Schüler in den Hochschulkontext aufgenommen und können am Hochschulleben teilnehmen. Als Beispiel sei unter anderem ein ferngesteuertes Auto genannt, das zunächst aus Lego-Bauteilen konstruiert wird. Ein Arduino steuert zwei Motoren des Fahrzeugs an. Über eine Bluetooth-Verbindung wird eine Verbindung zu einemHochschule als außerschulischer Lernort für Schülerinnen und Schüler 223ii “proceedings” — 2017/9/17 — 20:19 — page 224 — #224 ii i ii i14 Lars Prädel, Gerlinde Schreiber Android-Smartphone erstellt und eine App, die in dem kostenfreien Programm App Inventor [MI17c ] erstellt wird, steuert dieses Auto. Dabei werden vielseitige Konzepte vermittelt: die elektronische Schaltung zum Ansteuern der Motoren und des Bluetooth-Chips, das Programmieren von Microcontrollern inklusive Schleifen, Variablen und Kontrollstrukturen, das Erstellen einer Android-App innerhalb von App Inventor und die Herstellung einer Bluetooth-Verbindung. Die Teilnehmerinnen und Teilnehmer werden bewusst mit der Aufgabe alleine gelassen und müssen sich selbst das benötigte Wissen aneignen, haben aber kontinuierlich die Gelegenheit Fragen zu stellen. Der Vorteil ist, dass mit einfachen kostengünstigen Mitteln ein abgeschlossenes Projekt erstellt werden kann, das eindrucksvoll und vorzeigbar ist. 3.3 Schnupperangebot Einen Tag die Hochschule kennenlernen und sehen, was Informatik bedeutet: Dieses Angebot richtet das Lernlabor an Schulklassen, aber auch an einzelne Schülerinnen und Schüler. Dabei wird eine Übersicht über die Möglichkeiten eines Studiums an der Hochschule vorgestellt, gefolgt von einer praktischen Arbeit. Damit wird ein Einblick in die Hochschule gewährt, aktuelle Projekte werden vorgestellt, aber es wird auch programmiert. Dabei wird unter anderem eine Alarmanlage in Python programmiert, die ein Foto macht, sobald eine Lichtschranke passiert wird, und ein Alarmsignal ertönt. Dabei wird ein Raspberry Pi verwendet, bei dem eine elektronische Schaltung mit einem Fotowiderstand, einer LED und einem Summer angeschlossen ist. Mit einer entsprechenden Bibliothek von Python [ Gp17 ] können diese Bauteile einzeln angesteuert werden. Der Wert von dem Lichtwiderstand wird in Variablen abgespeichert und abhängig von diesem Wert wird ein Alarm ausgelöst. So kann ein Blinken der LED in einer Schleife realisiert werden, die die LED einund ausschaltet, oder der Summer kann für eine bestimmte Zeit einen Ton erzeugen. Auch hier werden grundlegende Inhalte der Informatik und insbesondere des Programmierens in einer authentischen Entwicklungsumgebung einfach vermittelt. Ein anderer Workshop widmet sich der 3D-Visualisierung. Dieser Workshop richtet sich eher an Schulklassen, die bereits einen Background in Informatik haben und einen Ausblick auf das Studium erlangen wollen. Dabei können auf die Ressourcen der Hochschule zugegri  en und 3D-Objekte in dem kostenfreien Programm Blender erstellt und animiert werden. Diese Objekte können dann mit einem 3D-Drucker ausgedruckt werden, oder es können Objekte und Personen mit dem 3D-Scanner erfasst werden. Auch hier liegt der Fokus darin, dass einfache Grundlagen der Computer-Graphik vermittelt werden, die aber auch zu Hause weiterverfolgt werden können.224 Lars Prädel, Gerlinde Schreiberii “proceedings” — 2017/9/17 — 20:19 — page 225 — #225 ii i ii iHochschule als außerschulischer Lernort für Schülerinnen und Schüler 15 4 Erfahrungen „Im Informatikunterricht erhalten Schülerinnen und Schüler vielfältige Gelegenheiten zur Entwicklung und Ausbildung von Kompetenzen, die sie befähigen, ihr Leben in einer Informationsgesellschaft selbstbestimmt zu führen und zu gestalten“[ GI16 ]. Dieser Präambel der von der Gesellschaft für Informatik verabschiedeten Bildungsstandards ist unbedingt zuzustimmen aber was ist mit der informatischen Bildung derjenigen Schülerinnen und Schüler, die auf ihrem schulischen Weg keinen Informatikunterricht durchlaufen? Hier setzen außerschulische Bildungsangebote wie das Vorgestellte an. Nach unseren Erfahrungen (Befragung am Ende der Angebote) sind folgende Aspekte der Angebotsgestaltung für die Jugendlichen besonders wichtig und bestätigen unsere didaktischen Leitlinien: Voraussetzung für die Teilnahme sind nicht konkrete Fachkenntnisse, sondern Interesse und Engagement. Die Themen sind unmittelbar verständlich und als praktische alltagsbezogene Aufgabenstellung einleuchtend. Die Betreuung im Lernlabor bietet Unterstützung beim Einstieg in das jeweilige Thema, begleitet danach kontinuierlich, geht auf individuelle Fragen ein und gibt Feedback zum Projektfortschritt. Die Betreuung drängt sich nicht auf, sondern schaltet sich auf Initiative der Jugendlichen ein. Sie wird als Unterstützung wahrgenommen und nicht als Kontrollinstanz. Aufgaben werden in selbst gewählten Teams bearbeitet. Zu beobachten ist, dass die Teilnehmerinnen sich bevorzugt zu reinen Mädchenteams zusammenschließen. Im Team kann die inhaltliche Schwerpunktsetzung individuell in Abhängigkeit von Interessen und Vorkenntnissen festgelegt werden. Die Zuständigkeiten können sich im Verlauf verändern und weiterentwickeln. Im Lernlabor ﬁndet keine Leistungsbewertung nach dem Motto ”wer ist wie weit gekommen” statt, sondern es gibt Anerkennung für Fortschritte und Wertschätzung für kreative eigene Ideen. Die Arbeiten ﬁnden an einem authentischen Lernort statt (innovative Hochschulumgebung mit Kontakten zu Lehrenden und Studierenden). 5 Fazit Das Schülerlabor proﬁtiert von der engen Kooperation mit einzelnen Schulen und Lehrkräften und von besonderen Rahmenbedingungen: Die Angebote werden von den Teilnehmerinnen und Teilnehmern freiwillig ausgewählt aus Interesse an Thema und Umgebung. Damit entfallen im Lernlabor die klassischen schulischen Motivationsprobleme. Die Angebote richten sich vor allem an kleinere Gruppen, deren eigene technische Ausstattung (nach dem Motto ,,Bring your own Device‘) in die Aufgabenbeschreibung mit einbezogen werden kann. Die private Fortsetzung und Vertiefung von im Lernlabor durchgeführten Projekten wird dadurch erleichtert. Das Lernlabor besitzt nicht die Ressourcen zur Neuentwicklung von Angeboten oder der homogenen Ausstattung von Arbeitsgruppen mit aufwendiger Hardoder Software. Stattdessen werden frei zugängliche Lernumgebungen und Aufgabensammlungen (wie [ Re17 ], [Fr17]) gesichtet, ausgewählt und an die Vorkenntnisse und zeitlichen Rahmenbedingungen der jeweiligen Teilnehmerinnen und Teilnehmer angepasst. DamitHochschule als außerschulischer Lernort für Schülerinnen und Schüler 225ii “proceedings” — 2017/9/17 — 20:19 — page 226 — #226 ii i ii i16 Lars Prädel, Gerlinde Schreiber leistet das Lernlabor auf pragmatische Weise einen Beitrag, Schülerinnen und Schüler beim Aufbau einer persönlichen Lernumgebung zu unterstützen. Literaturverzeichnis [Ar17] Arduino AG, http://www.arduino.cc, Stand: 14.02.2017. [Bl17] Blender Foundation, http://www.blender.org, Stand: 14.02.2017. [Fr17] Friends-of-Fritzing Foundation, http://fritzing.org/projects/, Stand: 14.02.2017. [GI16] GI Bildungsstandards Sek2, http://informatikstandards.de/docs/Bildungsstandards_SII.pdf, Stand: 14.02.2017. [Gp17] Gpiozero Raspberry Pi Foundation, http://gpiozero.readthedocs.io/, Stand: 14.02.2017. [In17] Info-Sphere Schülerlabor Informatik der RWTH Aachen, http://schuelerlabor.informatik.rwth-aachen.de, Stand: 14.02.2017. [Mi17a] Minecraft (Mojang Synergies AB), http://minecraft.net, Stand: 14.02.2017. [Mi17b] Minecraft: PI Edition (Mojang Synergies AB), http://minecraft.net/en-us/edition/pi/, Stand: 14.02.2017. [MI17c] MIT App Inventor Massachusetts Institute of Technology, http://appinventor.mit.edu/, Stand: 14.02.2017. [Py17] Python Software Foundation, http://www.python.org, Stand: 14.02.2017. [Ra17] Raspberry Pi Foundation, http://www.raspberrypi.org, Stand: 14.02.2017. [Re17] Resources Raspberry Pi Foundation, http://www.raspberrypi.org/resources/, Stand: 14.02.2017. [UF17] UFZ-Schülerlabor Helmholtz Zentrum für Umweltforschung, http://www.ufz.de/schuelerlabor/ Stand: 14.02.2017.226 Lars Prädel, Gerlinde Schreiberii “proceedings” — 2017/9/17 — 20:19 — page 227 — #227 ii i ii i  Aller Anfang ist schwer!   Wie gelingt der Einstieg  in den Informatikunterricht ?   Dieter Engbring1  Abstract:  Dieser Aufsatz befasst sich mit dem Umstand, dass nicht allen SchülerInnen  mit der  erwünschten Geschwindigkeit und den erwarteten  Erfolgen der Einst ieg in den Informatiku nterricht gelingt. Zu den Gründen  werden in diesem Aufsatz Hypothesen vorgelegt, die sich aus Beobachtungen im Informatikunterricht sowie aus Gesprächen mit LehrerInnen  und SchülerInnen   ergeben. Zusätzlich we rden alternative Vorgehens weise n vorgestellt, die nicht nur einen anderen  Informatik anfangs unterricht beschreiben , sowie  der Überprüfung der Hypothesen  dienen .   Keywords: Anfangsunterri cht, Programmierumgebungen und -sprachen, Objektorientierung   1 Einleitung   Nicht nur hinter vorgehal tener Hand , sondern ganz offen reden Informatik -LehrerInnen  darüber, wie schwer es einigen ihrer SchülerInnen  fällt, selbst die einfach en und grundlegen den Begriffe zu lernen und leichte  Aufgaben zu lösen. In der fachdidakt ischen  Literatur gibt es bislang  keine Untersuchungen, die den Gründen und dem Ausmaß dieser Befunde nachgehen . Auch dieser Aufsatz kann  hierzu allenfalls erste Hypothesen  liefern, aus denen dann eine s ystematische Untersuchung  entwickelt werden soll (2).   Diese Hypothesen werden  durch ein en Alternativvorschlag für den Einstieg (3) und  einem  Forschungsansatz zur Überprüfung der Hypothesen und zur Evaluation des alternativen Zugangs ergänzt  (4). In einem Fazit mit Ausblick wird auf die jetzt anstehenden  Forschungsarbeiten hingewiesen (5).   2 Befunde zum Informatikunterricht  in der Einführungsphase   Das Implementieren und damit auch die Programmiersprache sowie die Entwicklung sumgebungen spielen eine große Rolle in der alltäglichen Praxis des Informatikunterricht s  in der Einführungsphase der gymn asialen Oberstufe, die immer noch für viele  Schüler Innen  der Informatik -Anfangsunterricht ist. Zwar ist es das weiterreichende  Ziel, die da hinterstehenden Techniken und Denkweisen der informatischen Modellierung  zu vermitteln, die auch – siehe Computatio nal Thinking [Wi06] oder ähnliche  Ansätze – über die  Informatik hinaus anwendbar sind. Ansätze , diese  Kompetenzen ohne Implementierung,  frei von einer Programmiersprache und einer dedizierten ggf. auch einer für unterrichtliche Zwecke gestaltete (Entwicklu ngs-)Umgebung  zu erreichen , greifen  allerdings  wohl                                                              1 Institut für Informatik, Univer sität Bonn, Römerstr. 164, 5311 7 Bonn  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 227ii “proceedings” — 2017/9/17 — 20:19 — page 228 — #228 ii i ii i  zu kurz . Dafür gibt es eine Reihe von lernpsyc hologischen und fachlichen Gründen, auf  die hier nicht g esondert eingegangen werden kann . Denn es ist das Anliegen dieses Aufsatzes,  die alltägliche Praxis de s Informatikunterrichts , die das Implementieren im erheblichen Umfang beinhaltet , zu analysieren . Denn Beobachtungen der alltäglichen Praxis  haben ergeben, dass dem Implementieren sehr viel Zeit eingeräumt wir d, ohne dass die  Lernenden  dabei zusätzliche Ko mpetenzen erwerben . Mehr noch: In d er Phase des Implementieren s wird die ohnehin schon erhebliche  Heterogenität größer, weil insbesondere viel Zeit dafür ver (sch) wendet wird, syntaktisch korrekten Code zu erzeugen , und   dabei die nicht intrinsisch motiviert en SchülerInnen sehr vorsic htig und langsam agier en.  Darüber hinaus befassen diese sich außerhalb des Unterrichts kaum bis gar nicht mit den  Inhalten. Diese Unterschiede scheinen  durch den nun vollzogenen Wechsel zur Objektorientierung größer geworden zu s ein.   Im Folgenden wird die dahinter stehende komplexe Gemengelage in (untersuchbare)  Teilaspekte zerlegt . Dies geschieht , wie in der Einleitung schon betont, in Form von  Hypothesen, die anhand von Symptomen oder Befunden aus dem Informatiku nterricht  herge leitet werden. Dazu wird zunächst dem Aspekt der Objektorientierung nachgegangen, von dem man sich einen einfacheren Zugang versprochen hatte, weil sie „der natürlichen Den kweise am nächsten kommt“ [Sc95,  S. 186] und der möglichst dem imperativen Paradigma  vorangehen sollte [Di07]. In diesem Zusammenhang hat es in den letzten  Jahren eine ganze Reihe von Untersuchungen und Publikationen gegeben, die den Nutzen der Objektorientierung in ihrer Ambivalenz diskutieren  (2.1). Danach  wird auf populäre Entwicklungs umgebungen  für den Informatikunterricht  eingegangen , die u.  a. das  Ziel haben , den vielleicht zunächst nicht so motivierten SchülerInnen  den Zugang zum  Programmieren einfacher bzw. überhaupt schmackhaft zu machen . Es zeigt sich, dass  diese Herausforderunge n mit Technik (allein) nicht zu lösen sind (2.2). Zusätzlich wird  auf grundsätzliche Schwierigkeiten des Informatik -Anfangsunterrichts hingewiesen, die  sich daraus ergeben, dass man systematisch in einige Bausteine  algorithmische r Sprache  einführt  (2.3) . Ein Zwischenfazit beendet diesen Abschnitt (2.4).   2.1 Objektorientierung im Anfangsunterricht   Im Jahr 2009 erschien ein Aufsatz von Kortenkamp, Modrow, Oldenburg, Poloczek und  Rabel [KM09], in dem sie sich kritisch mit der Objektorientierung im Informatikunterricht auseinandersetzen. Er endet mit diesem Satz:   „Die geringe Zahl von SchülerInnen , die Informatik in der Qualifikationsphase belegt, ist möglicherweise nicht nur den Zwängen des Zentralabiturs geschuldet, sondern auch eine Reaktion  darauf, dass der Un terricht (immer noch) nicht an den Bedürfnissen  der SchülerInnen  orientiert  ist.“ [KM09, S.  47]   Sie argumentieren in dem Aufsatz, dass OO nicht nur an den Bedürfnissen der Schüler Innen  vorbeigeht , sondern auch an denen der  Fachwissenschaftler, da auch die Vorbereitung auf ein Hochschulstudium nur unzureichend geleistet wird. Letzteres ist ein Aspekt,  auf den Börstler schon zwei Jahre zuvor hingewiesen hat te [Bö07].  Außerdem schreiben 228 Dieter Engbringii “proceedings” — 2017/9/17 — 20:19 — page 229 — #229 ii i ii i  Kortenkamp und anderen :   „Die Behandlung von OOM ohne OOP steht vor eine m Problem, das dem der Mengenlehre in der  „Neuen Mathematik“ in den Siebziger Jahren des vorigen Jahrhunderts ähnelt: Die SchülerInnen   lernen neue Wörter zur Beschreibung von Dingen, die sie schon kennen; sie erschließen sich damit  aber keinen neuen Möglic hkeiten, etwas z u tun oder zu verstehen.“ [KM09, S.  43]   Diese Analogie zur Mengenlehre erscheint insofern statthaft, da es vielen SchülerInnen   in der Tat nicht gelingt, die Informatikb egriffe Klasse, Unterklasse, Objekt , Attribute  und Attributwerte  zu def inieren und sinnvoll in ihre unterrich tlichen Äußerungen einzubauen. Dies scheint  auch Folge des Zugangs ; dies ist zugleich Inhalt von Hypothese 1 :  Es wird  versucht , ohne Anschauung an einem Programm nur durch Bezug auf Fahrzeuge  oder Tiere diese Begriffe (insbesondere unter Einbeziehung der Vererbung ) vorab zu  klären . Dass eine Klasse Teil des Programm -Code s ist, der diesen strukturiert  und das s  die Objekte ( vielleicht sollte man besser von Instanzen  sprechen) zur Laufzeit erzeugt  werden, wird dabei zu wen ig deutlich hervorgehoben. Insbesondere wird kaum  darauf  eingegangen, wie der Programm -Code im Computer  verarbeitet wird.    Viele, die in der Objektorientierung eine Hoffnung auf einen Informatikunterricht gesehen haben, der besser zugänglich ist, beziehen sich auf einen Aufsatz von Schwill, der  1995 Programmierstile im Anfangsunterricht analysiert  hat. Er schlussfolgert:   „Wir favorisieren für die Einführung in die Informatik den objektorientierten Ansatz vor allem aus  drei Gründen: Erstens erfüllt dieses P aradigma unbestrittenermaßen informatisch orientie rte Forderungen nach zeitgemäßem  Unterricht mit mächtigen Konzepten … Zweitens ist dieser Ansatz im  Sinne des didaktischen Prinzips der Fortsetzbarkeit, ein zentrales Merkmal eines nach dem Spiralpinzip org anisierten Curriculums, auf höheren Niveau beliebig ausbaufähig. … Drittens – dies  scheint aus pädagogischer Sicht der wichtigste Pluspunkt – ordnet sich der objektorientierte Stil in  besonderer Weise harmonisch den elementaren kognitiven Prozessen unter, die beim Denken,  Erkennen und Problemlösen im menschlichen Gehirn ablaufen.“ [Sc95, S. 183]   Letztlich beruht seine dritte Schlussfolgerung darauf , dass er ein kognitionspsychologisches Experiment zur Problemlösung (von Duncker aus den 1930er Jahren) einer  Deutung zuführt, die Aspekte der Ob jektorientierung enthält . Einer dieser Aspekte, den  Duncker funktionale Bindung  nennt, behindert  jedoch  den Problemlöseprozess . Diese  muss  durch eine alternative Sicht auf die Objekte, durch eine andere  funktional e Bindung, im Problemlöseprozess überwunden werden . Damit  erscheint  die Schlussfolgerung   weit weniger zwingend , da o bjektorientier tes Denken den Widerspruch,  dass die funktionale Bindung  den Problemlöseprozess  ggf. behindert, eigentlich nicht auflösen kann .   Die Vorteile der Objektorientierung ergeben sich , den Beobachtungen im Informatikunterricht folgend, vielmehr aus einem anderen Umstand. Dies ist dann Hypothese 2:  Den  SchülerInnen  fällt es leichter die Objekte und deren Aufgaben in einem Anwendungskontext zu benennen und zu beschreiben  als von Beginn an Algorithmen zu beschreiben.   Damit wird die Zerlegung der Aufgabenstellung 'einfacher' , als wenn sie direkt algorithmisch  z. B. durch stepwise refinement  erfolgen würde . Um d ieses zu erreichen , müssen die Beispi ele jedoch sinnvoll gewählt werden ('Hello World' oder mathematische Aller Anfang ist schwer! Wie gelingt der Einstieg in den Informatikunterricht? 229ii “proceedings” — 2017/9/17 — 20:19 — page 230 — #230 ii i ii i  Aufgaben sind dann wohl kein sinnvoller Einstieg).   Zugleich  muss man sich eingestehen, dass Algorithmen und imperative Programmierung  nicht obsolet sind . Die Einführung der Objektorienti erung hat dazu geführt, dass die  SchülerInnen  ein M ehr an Begrif fen und Konzepten lernen müssen . Denn Objektorientierung ist – so wie sie in den Schulen am Beispiel der  Sprache Java unterrichtet wird  –  vor allem  eine imperative Programmierung ++.2 Aus diese r Erkenntnis ergibt sich  ein  pragmatischerer Zugang wie er 2008 von Hu vorgeschlagen wurde . Er überschreibt seinen Aufsatz mit „Just say 'a class defines a Data Type' “ [Hu08] . Objektorientierung wird  in diesem Sinne eine andere, vielleicht sogar elegantere  bzw. eine größere Vielfalt zulassende Methode , Datentypen zu strukturieren und miteinander in Beziehung zu setzen.   Insofern ergibt sich  Hypothese 3 : Die Vorteile von OOM und OOP werden  wohl insbesondere dann  erkennbar , wenn man tatsächlich a) Vererbung b enötigt  wird, da durch  eine Klassenhierarchie wie z.  B. im Bereich der Komponenten für GUIs ein erheblicher  Rationalisierungseffekt eintritt, b) die Algorithmen als Methoden sehr viel enger und  auch in kompakterer Schreibweise (die Punktschreibweise) an di e Datenobjekte gekoppelt werden können sowie c) in komplexeren Kontexten, an denen eine Vielzahl3 von  Objekten beteiligt ist und dadurch das Problem/die Aufgabe zerlegt werden kann.   Damit ist die ideologisch geführte Diskussion um „Objects later“ bzw. „Ob jects first“  für  die Praxis weniger interessant. V or allem die Untersuchungen von Ehlert (zum Teil mit   Schulte) zeigen , dass letztlich keine Präferenzen an gegeben  werden  können  (vgl. hie rzu  die Zusammenfassung in [Eh12, S. 184ff ]) Man kann zwar beobachten , dass Objektorientierung einen anderen Zugang zur Problemlösung erfordert als ein en rein imperativen .  Letztlich werden auch bei der Nutzung objektorientierter Sprachen Algorithmen entwo rfen. Dies verweist dann auf  die Hypothese 4 : In der imperativen Modell ierung und Programmierung sozialisierte Personen lassen sich deswegen weniger auf objektorientiertes  Modellieren ein, weil sie darum wissen, dass am Ende doch noch  algorithmisiert werden  muss . Diese durchaus schw ierige Arbeit wollen sie so schnell  wie mögl ich erledigen .  Außerdem vermuten sie in der Suche nach Objekten und der Zuordnung von Aufgaben  einen Overhead , der bei kleinen und bereits sehr gut mathematisierten bzw. algorithmisierten Kontexten , die oftmals  für den Einsti eg genutzt werden, auch vorhand en ist.   2.2 Programmierumgebungen für Anfänger   In den letzten 30 Jahren sind immer wieder  neue Programmierumgebung en für den Informatik (anfangs) unterricht vorgestellt wo rden. Oftmals  werden d en SchülerInnen  grafische Objekte zur Verfügung gestellt, die vorpro grammierte Funktionen enthalten, die  dann weiter genutzt werden sollen. Anhand von zwei Beispielen wird im Folgenden kurz  erläutert, dass hierdurch die Lernprozesse zum einen in Bezug auf die Mensch -Maschine -Interaktion  erleichtert werden soll en und zum a nderen Motivation geschaffen                                                              2 Vgl. C und C++. M. a. W.: Der Umfang des Lernstoffes wurde erhöht.   3 Für Anfänger erscheinen drei unterschiedliche Objekte eine V ielzahl, die aber zugleich erschließbar ist.   230 Dieter Engbringii “proceedings” — 2017/9/17 — 20:19 — page 231 — #231 ii i ii i  werden soll, sich überhaupt mit dem Programmieren zu befassen. Hypothese 5 : Die  Vielzahl solcher Umgebungen scheint ein Indiz für den Bedarf zu sein und für die weiterhin vorhandene Unzufriedenheit mit den bisherigen Umgebungen . Hier gibt es Prozesse, die man technisch unterstützt haben möchte, ggf. sind diese Wünsche auf didaktischen Kontext bezogen. Die Anforderungen sind im Anfangsunterr icht andere als später.  Daher wird immer wieder versucht  eine „eierlegende Wollmilchsau “ zu erstellen.   Die beiden Beispiele, die im Folgenden näher betrachtet  werden, sind Alice , das kaum  eine Rolle (mehr ) spielt und zum anderen Greenfoot , das derzeit auch unterstützt durc h  ein in 2.3 zu thematisierendes  Schulbuch gerade eine große Rolle spiel t.   Zu Alice:  Pausch ist sozusagen der Vater von Alice. Da man  darum wusste, dass er nicht  mehr lange  zu leben hat, wurde ihm  die Gelegenheit gegeben , eine Last Lecture  zu halten, in der er u.  a. auf Alice einging. Sein Ziel war es , die Lernenden zu überli sten.   „So Alice is a project that we worked on for a long, long time. It's a novel way to teach computer  programming. Kids make movies and games. The head fake, again, we're back to the head fakes.  The best way to teach somebody something is to have them think they're learning something else.  … the head fake here is that they're learning to program but they just think they're making movies  and video games.” 4   Ein solcher head f ake kann nur ein kurzfristig wirksamer  Lern anreiz  sein. Da Alice zudem nur vord ergründig objektorienti ert ist, sollte man sich an ihr nicht weiter orientieren   (vgl. hierzu auch [DM09, En11]). In Alice (ähnlich wie z.  B. in Scratch ) wird das Coden   durch Bau bzw. Puzzlesteine un terstützt, so dass man schneller zu syntaktisch korrektem  Code kommt. Dies schafft zwar ein wenig Raum für Kreativität, die jedoch mit den  typischen Vorgehensweisen im Informa tikunterricht im Konflikt steht  (siehe 2.3).   Greenfoot  ist hingegen eine Plattform, die in vielen Kursen (erfolgreich ) genutzt wird.  Dieser  Aufsatz auf BlueJ , der auch von Kölling und Co entwickelt wurde, setzt letztlich  den Ansatz von Mini -Welten fort, wie er durch Logo -Turtle, durch Karol, the robot , den  Käfer Kara  und viele mehr propagiert wird. In Greenfoot  sind viele  Implementation en in  den Basisklassen World  und Actor  versteckt, wodurch die dahinterstehende Komplexität ,  mit der Anfänger auch nicht konfrontiert werden sollten , auch nicht erkennbar ist. Diese  miteinzubeziehen würde wohl auch dazu führen, dass die SchülerInnen  demotiviert w erden. Die Implementation der Basisklassen der Szenarien  (Roboter, Rover, Spinnen etc.)  sind jedoch nicht versteckt, was im unterrichtlichen Geschehen u. a. dazu führe n kann ,  dass gerade von pfiffigeren SchülerInnen  die Szenarie n manipuliert werden und korrekte  Aufgabenlösungen nicht funktionieren. Zudem  muss man Greenfoot  irgendwann verlassen und auf eine andere Umgebung wechseln. Hier zeigt sich , wie sehr die gewonnenen  Kenntnisse an die Umgebung gekoppelt sind und in andere Umgebung en, selbst wenn  man nu r zu BlueJ  wechselt, nicht übertragen werden  können  (vgl. hierzu [En13]).   Hypothese 6:  Der Versuch , mit Technik Motivation zu stiften , hat seine Grenzen . Letztlich werden die SchülerInnen  mit nicht sonderlich kognitiv  anspruchsvollen Aufgaben                                                              4  Vgl. z.B. http://theoncologist.alphamedpress.org/content/12/11/1374?trendmd -shared=1   Aller Anfang ist schwer! Wie gelingt der Einstieg in den Informatikunterricht? 231ii “proceedings” — 2017/9/17 — 20:19 — page 232 — #232 ii i ii i  (komplexerer ) objektorientierter und algorithmischer Modellierungen und Implementierungen konfrontiert, d eren direkter Sinn sich nicht jedem erschließt. Der Sinn dieser  Vorgehensweise liegt wohl insbesondere  darin, in die Elemente einer Programmiersprache einzuführen,  was sich auch im Folgenden zeigt.   2.3 Typische Vorgehenswiesen im Anfangsunterricht   Greenfoot  wird derzeit  von vielen benutzt, da es anders als seine Basi s BlueJ  Anfänger  besser  unterstützt. Für NRW sind zur Nutzung von Greenfoot  Schulbücher (z. B. [KL14 ]  für die Einführungsphase) erschienen, die von vielen genutzt werden . Hier kann und soll  keine ins Detail gehende kritische Bestandsaufnahme dieses Werkes erfolgen. Es soll  nur  kurz darauf hingewiesen werden, dass das Vorgehen in diese m Buch , wie zuvor auch i m  Einführungsband von Schriek  [Sc05]  („Stifte und Mäuse“, ähnlich wie das in NRW   aktuell diskutierte GLOOP , ein grafischer Aufsatz auf BlueJ ) oder auch anderen Büchern, die Reihenfolge der Sachlogik der Programmiersprache folgt. Die Inhalte  Blockstrukturen , Schleifen, Verzweigung en, Variablen, Datenstrukturen werden in eine  sachlogisch korrekte Reihenfolge gebracht. Hypothese  7: Im Informatikunterricht steht  weniger  das Erl ernen bzw. Einüben des algorith mischen Probl emlösens oder von informatischem Denken, vielmehr das Erlernen einer Programmiersprache im Vordergrund.  Die SchülerInnen lösen nicht wirklich Probleme , sondern nur Aufgaben, die in ihrer  Reihenfolge der Logik des Erlernens der Programmiersprache untergeordnet sind. Die  Zusammenhänge zum Problemlö sen werden nicht erkannt. Denning, Tedre und Youngpradit haben erst kürzlich in einem  'Viewpoint‘ in der CACM darauf hingewiesen, dass  dieser Transfer bisher lediglich behauptet , aber nie nachgewiesen wurde. [DT17]   Außerdem müssen die SchülerInnen konstru ierend vorgehen. Dies hat sicher lernpsychologische Vorteile, hat aber mit Blick auf die zu verwendenden Instrumente (die Entwicklungsumgebungen) auch Nachteile, da nicht zu hundert Prozent syntaktisch korrekte Lö sungen zurückgewiesen werden. Aber selbst wenn das nicht geschieht, kommt es auch  weiterhin zu Fehlern zur Laufzeit ( Stack overflow , Null pointer exception  …) bzw. zu  unerwünschten Systemverhalten, deren Korrektur nicht nur ein profundes Verständnis  der internen Datenvera rbeitungsprozesse erforder n, das  (s. o.) nicht unbedingt zuvor  entwickelt wurde . Hypothese 8:  Dieser Wechsel zwischen den Ebenen  ist eine Abstraktionsfähigkeiten  abnötigende kognitive Leistung , die sich wiederum in einem Kontext  stattfindet, der nur dem Erlernen einer Programmiersp rache und weniger dem Erwerb  von P roblemlösekompetenzen dient. Die SchülerInnen werden lediglich gefordert , aber  nicht notwendigerweise gefördert.   2.4 Zwischenfazit   Programmieren L ernen ist nicht nur der heimliche , sondern der offensichtliche Lehrplan  zu Begi nn der Einführungsphase. Darüber hinaus gehende Lernziele werde n kaum erreicht. Dieser Lehrplan soll durch didaktische Tricks oder bunte Animationen schmack-232 Dieter Engbringii “proceedings” — 2017/9/17 — 20:19 — page 233 — #233 ii i ii i  haft oder besser zugänglich gemacht werden. Diese Effekte sind jedoch nicht nachhaltig,  auch weil es  nicht  das Bedürfnis der allermeisten SchülerInnen  zu sein scheint, Programmieren lernen zu wollen. Dass sie dabei auch konstruktiv tätig werden müssen, aber  von dem Instrument, mit dem sie arbeiten , immer wieder zurecht oder garzurückgewiesen werden, trägt nicht zur Motivation bei; im Gegenteil! Erfolgserleb nisse und Sinnstiftung fehlen g leichermaßen. Zumindest eine solche Sinnstift ung wir d durch den im F olgenden da rzustellenden Zugang versucht .   3 Ein a lternativ er Zugang   Vergleicht man diese Schwierigkeiten  des Informatikunterrichts mit anderen Fächern, ist  der konstruktive Zugang ungewöhnlich. In vielen anderen Unterrichtsfächern steht eher  die Analyse von Gegenständen, Phänomene n und Situationen der Natur, der Kultur oder  der Zivilisation im Vordergrund. I m naturwissenschaftlichen Unterricht setzt man dabei  im besten Fall auf entdeckendes Lernen in Form von Experimenten. Auch im Musikunterricht wird eher analysiert denn komponiert, ggf. wird musiziert, aber auch das wohl  seltener, da man hier auf Probleme d er Vorbildung und der starken Differenzierung stößt  (Begabung).5 Aber selbst, wenn man im Fach Musik 'konstruktiv' vorgeht; die Instrumente würden den Versuch nicht zurückweisen. Allenfalls sind Disharmonien vernehmbar. Im Kunst und – so es ihn gibt – im Technikunterricht wird konstruktiv gearbeitet,  allerdings auch dort ohne grundsätzliche Zurückweisungen durch die Instrumente. Also  eher rekonstruktiv bzw. analytisch vorzugehen, ist eine Facette dieses Zugangs.   Die andere Idee ist, die  Aufgaben in ein So ftware -Projekt einzubetten. Das ist nicht neu   und orientiert sich grob an  den Vorstellungen  von Magenheim [Ma08]. Zugleich wir d  der Versuch unternommen , diesen hochkomplexen und bislang nicht wirklich operationalisierten Ansatz für den Anfangsunterricht zu  adaptieren. Verschiedene Versionen  bzw. Entwicklungsstufen einer Software werden zyklisch analysiert und dann weiterentwickelt. Es wird mit der Analyse eines sehr einfachen und kurzen Programm -Code s  gestartet . Es werden mithin zuerst die Bes tandteile im P rogramm -Code aufgespürt  und  mit den korrekten Begriffen benannt , ähnlich wie man es Fach Deutsch mit Prosa, Lyrik  aber auch Sachtexten macht, wobei dort der Vokabelapparat ein viel größerer ist. Erst  nach Klärung der Begriffe, Konzepte und der Verarbeitung smechanismen wird dann  selbst implementiert.   Als Kontext für das Software -Projekt dient ein Brettspiel. Die Befragung von Rabel und  Oldenburg [RO09] verweist darauf, dass dies durchaus an die Bedürfnisse der SchülerInnen  anschließt, obschon die sich sicher  eine hippere Spieleentwicklung wünschen  würde n.6 Am Beispiel des Spiels Kniffel (Knobeln, Yathzee) wird im Folgenden dieser  Ansatz konkretisiert,  wobei Kniffel nur ein Beispiel unter vielen möglichen ist. Hier  erscheint Zugänglichkeit für die SchülerInnen  (einfache Regeln, wenige aber unter                                                            5 … auch eine Analogie zur In formatik?   6 . Auch Diethelm konkretisiert ihre Vorstellungen an einem Gesellschaftsspiel [Di07].  Aller Anfang ist schwer! Wie gelingt der Einstieg in den Informatikunterricht? 233ii “proceedings” — 2017/9/17 — 20:19 — page 234 — #234 ii i ii i  scheid bare Objekte, die zum Teil baugleich sind) jedoch in besonderer Weise gegeben.   Man startet zunächst mit der Implementation eines Würfels , der als Klasse (als Programm -Code und als UML -Klassendiagramm)  den SchülerI nnen gegeben wird . Code  wie auch Diagramm werden auf ihre Bestandteile hin analysiert . Diese für jede Klasse  gleiche Struktur wir d ausführlich erarbeitet und die Beziehungen zwischen Code und  Klassendiagramm können entdeckt werden. Der Code wird instanziie rt und damit kann   der Würfel auch „gerollt“ werden . Da die Klasse eine Grafikkomponente enthält (hier mit  werden also auch Ideen der Mini -Welten aufgegriffen) sehen die SchülerInnen, das s  etwas passiert und auch was. An dieser Stelle sind  Experimente mit de m Code (nicht nur  Sechser -Würfel , andere GUI  …) erwünscht. In dieser Phase  sollte man sich Zeit lassen,  die Beziehungen von Code und Programm mit den dazugehörigen Begrifflichkeiten zu  klären, ohne dass man den SchülerInnen auch noch ein konstruktives Vorg ehen abverlangt. Die Begriffe  Objekt, Klasse etc.  werden in ihren  informatischen  Kontext gestellt .    In einem zweiten Schritt soll der  Übergang zum Würfelbecher stattfinden, der auf der  Grundlage der Erkenntnisse der ersten Phasen von den SchülerInnen  selbst modelliert  und dann implementiert werden soll. An dieser Stelle können verschiedene Varianten der  'Kooperation' der Objekte Becher und Würfel diskutiert werden. Die SchülerInnen  werden erkennen, dass die Klas se Würfel erweitert werden muss, um den wechs elseitigen  Bezug von Würfel und Becher zu implementieren. Am Ende d ieser zweiten Phase, wenn  die SchülerInnen den Würfelbecher implementiert haben, der dann nur die Würfel rollt,  die auch im Würfelbecher sind, können sie bereits viele  der z.  B. in dem  Lehr plan NRW  genannten  Kompetenzen erworben haben, da sie Teil des Unterrichts waren .7   Es wäre  dann  zu überprüfen, inwie weit diese Kompetenzen entwickelt wurden . Außerdem wäre zu untersuchen, wie SchülerInnen  mit Vorkenntnissen mit diesem  Zugang  umgehen und w ie motiviertere  und begabtere SchülerInnen  mit der Intensität des zunächst analytischen Vorgehens umgehen . Das Szenario scheint jedoch genügend viele  Möglichkeiten zur Binnendifferenzierung zu bieten, bei der sich die 'Besseren' z.  B.  schon der Auswertung von Würfelergebnissen (ist es eine Straße , Full House  …) widmen oder einen digitalen Notizzettel erstellen (der alle Einträge zulässt , wie sein Vorbild  aus Papier oder nur korrekte bzw. mit dem Würfelergebnis konsistente) . Als besondere  Herausforderung könnte ein  „Computerspieler“ implementiert  werden .   4 Alltagspraxis: Ein Forschungsansatz  zur Prozessbeobachtung   Es wurde schon mehrfach betont, dass es hier nur Hypothesen  (begründet oder plausibel)  formuliert wurden  und dass auch der gerade vorgestellte alternative Ansatz noch der  Evaluation bedarf. Evaluation bedeutet – wie gerade ausgeführt – Kompetenzmessung ,  aber nicht nur . In de m hier vorzustellenden Ansatz der Alltagspraxis  geht es um die                                                              7 Diese können hier aus Platzgründen nicht aufgezählt werden. Vgl. http://www.schulentwicklung.nrw.de/  lehrplaene/upload/klp_SII/if/KLP_GOSt_Informatik.pdf  S. 21 -23 234 Dieter Engbringii “proceedings” — 2017/9/17 — 20:19 — page 235 — #235 ii i ii i  Erforschung der (alltäglichen) Prozesse im Unterricht, für die vie le der Hypothesen  noch  genauer zu Forschungsfragen  zu verdichten wären . Dazu gehört d ie Beobachtung der  Aktivität der  SchülerInnen  (der Unterrichtsprozesse)  als wichtige  zu ergänzende  Komponente . Da einige der Tätigkeiten an bzw. mit den Rechnern erfolgen,  könnten via Eye Tracking oder der Aufzeichnung von Tastatur und Mausevents Daten erhoben werden,  die zwar keine absolute Bedeutung haben, aber möglicherweise durch begleitende qualitative Forschung mit relativen Bedeutungen ver sehen werden können. Zu dies em Ansatz  gehören  auch freie Beobachtungen, in denen man versucht  weitere Phänomene aufzuspüren und dann in anderen Beobachtungen mit anderen Personen wiederzuentdecken   (ethnografische Studien) . Begleitet werden sollte das Ganze durch Interviews mit LehrerInnen sowie SchülerInnen , die dann q ualitativ  analysiert w erden und mit deren Ergebnissen  die Hypothesen und Forschungsfrage n weiter präzisiert  werden .   5 Fazit mit Ausblick   In diesem Aufsatz wurde n auf der Grundlage von einer ganzen Reihe von Beobachtungen zum Informatikunterricht – auch im Vergleich  zu anderen Fächern – Hypothesen  zu  den besonderen didaktischen Herausforderungen des Informatikunterricht s auf gestellt.  Dazu wurde ein  Ansatz  vorgestellt , der nun evaluiert werden kann . Eine möglichst große  Anza hl von LehrerInnen sowie SchülerInnen  sollten damit konfrontiert werden . Deren  Umsetzungen sollten mit den Prozessen und Erträgen  konventionellen Informatikunterrichts verglichen werden, sofern sie vergleichbar sind. Alle anderen Informatik Didaktik erInnen  werden hiermit aufgefordert , sich an diesen Studien zu beteiligen.   Insgesamt wird damit  ein empirischer  Forschungsansatz vorgelegt, der dazu dienen soll,  die durchaus widersprüchlichen Phänomene (sehr motivierte und ganz wenig motivierte  SchülerInnen, gr oße sowie ausbleibende Lernerfolge …) zu systematisieren und über  alternative Vorgehensweisen nachzudenken . Auch weitere neuralgische  Stellen, wie  z. B. die Behandlung von Algorithmen mit (dynamischen) Datenstrukturen e rfordern  einen eher analytisches  und weniger konstruktives (= modellierendes und implementierendes) Vorgehen. Der Platz in diesem Beitrag reicht dafür nicht aus , dieses darzustellen.    6 Literatur   [Bö07]  Börstler, J.: Objektorientiertes  Programmieren  – Machen wir irgendwas falsch?  In:  Sigrid Sc hubert (Hrsg.):  Didaktik der Informatik in Theorie und Praxis . INFOS 2007,  12. GI -Fachtagung Informatik und Schule GI -Edition Lecture Note s in Informatics  (LNI), P -112. Bonner Köllen Verlag (2007)   [Di07]  Diethelm, I.: "Strictly models and objects first"  Unterrichtskonzept und -methodik für  objektorientierte Modellierung im Informatikunterricht, Dissertation, Universität Kassel, Fachbereich Elektrotechnik/Informatik, 2007  http://kobra.bibliothek.uni -kassel.de/bitstream/urn:nbn:de:hebis:34 -2007101119340/1/DissIraDruckfassungA5.1.pdf   Aller Anfang ist schwer! Wie gelingt der Einstieg in den Informatikunterricht? 235ii “proceedings” — 2017/9/17 — 20:19 — page 236 — #236 ii i ii i  [DM09]  Dohmen, M., Magenheim, J., Engbring, D.: Kreativer Einstieg in die Programmierung  Alice im Informatik -Anfangsunterricht. In: Peters, I. (Hrsg.): Informatische Bildung  in Theorie und Praxis, Beiträge zur INFOS 2009, 13. GI -Fachtagung Informatik und  Schule, S.69 -80, Berlin (LOG IN Verlag) 2009   [DT17]  Denning, P.J.; Tedre, M.; Youngpradit,  P.: The Profession of IT. Misconception about  Compu ter Science. Communications of t he ACM. March 2017/Vol. 60, No. 3, S. 31 –  33. doi:10.1145/3041047   [Eh12 ] Ehlert, A.: Empirische Studie: Unterschiede im Lernerfolg und Unterschiede im subjektiven Erleben  des Unterrichts von Schülerinnen und Schülern im Informatik Anfangsunterricht (11. Klasse Berufliches Gymnasium) in Abhängigkeit von der zeitlichen Reihenfolge der Themen (OOP -First und OOP -Later), Dissertation, FU Berlin,  2012  http://www.diss.fu -berlin.de/diss/receive/FUDISS_thesis_000000035764    [En11]  Engbring, D.: Untersuchungen und Bewertungen zum Einsatz von Alice im Informatikunterricht. In: M. Weigend, M. Thomas, F.  Otte (Hrsg.): Informatik mit Kopf, Herz  und Hand. Praxisbeiträge zur INFOS 2011. ZfL -Verlag. Münster, S. 81 90   [En13]  Erst nehmen wir Greenfoot. Und dann BlueJ? In: Breier, N., Stechert, P., Wilke, T.  (Hg.): INFOS 2013. 15. GI -Fachtagung Informatik und  Schule. Praxisband. Kiel  Computer Science Series. 2013/3. S. 29 – 39  [Hu08]  Hu, C.: Just say ' A class defines a Data Type'. In: Communications of the ACM, Vol.  51 No. 3, Pages 19 -21 doi: 10.1145/1325555.1325560    [KL14 ] Kempe, T.; Löhr, A.: Informatik 1. Schoeningh -Verlag. Paderborn. 2014   [KM09]  Kortenkamp,  U; Modrow, E.;  Oldenburg, R.; Poloczek, J; Rabel, M .: Objektorientierte  Modellierung aber wann und wie? Zur Bedeutung der OOM im Informatikunterricht.   LOG IN 160/161 , 2009. S.  41-47  [Ma08]  Mage nheim,  J.: Systemorientierte Didaktik der Informatik Sozio -technische Informatiksysteme als Unterrichtsgegenstand? In Kortenkamp; U.; Weigand; H.G.; Weth, T.  (Hrsg.): Informatische Ideen im Mathematikunt erricht, Franzbecker Hildesheim 2008 .  S. 17 36   [RO09]  Rabel, M; Oldenburg, R.:Konzepte, Modelle und Projekte im  Informatikunterricht –  Bewertungen und Erwartungen von Schülern und Studenten . In: Bernhard Koerber  (Hrsg.):  Zukunft braucht Herkunft. 25 Jahre »INFOS – Informatik und Schule« INFOS  2009, 13. GI -Facht agung »Informatik und Schule« GI-Edition Lecture Note s in Informatics (LNI), P -156. Bonner Köllen Verlag (2009 ), S. 146 -155  [Sc95]  Schwill, A.:  Programmierstile im Anfang sunterricht. In: S. Schubert (Hrsg.) .: Innovative Konzepte für die Ausbildung 6. GI-Fachtagung Informatik und Schule. Springer.  Berlin Heidelberg. S. 178-187    [Sc05]  Schriek, B.:  Informatik mit Java: Eine Einführung mit BlueJ und der Bibliothek Stifte  und Mäuse. Band 1. Nili -Verlag. Werl   [Wi06 ] Wing, J.: Computation al Thinking. Communic ations of t he ACM. March 2006/ Vol.  49, No. 3, 33 -35 236 Dieter Engbringii “proceedings” — 2017/9/17 — 20:19 — page 237 — #237 ii i ii i  Fünf Argumente für einen grafischen Programmiereinstieg  eine Studie über vier Jahrgangsstufen   Nadine Bergner1, Thiemo Leonhardt1 und Ulrik Schroeder1  Abstract:  Grafische Programmierwerkzeuge sind ein beliebter Weg mit Kindern und  Jugendlichen in die Prog rammierung einzusteigen. Ein grafischer Einstieg soll die Schülerinnen  und Schüler altersgerecht ansprechen und ihnen aufgrund der Vermeidung von Syntaxfehlern  erleichtern, eigene Projekte schnell und kreativ umzusetzen und dadurch motivierend wirken. In  diesem Artikel werden die vermu teten Chancen und auch mögliche  Gefahren eines grafischen  Programmiereinstiegs wissenschaftlich untersucht. Dazu werden fünf Argumente beleuchtet:  Begeisterungsfähigkeit, Vermittlung eines interessanten Bildes der Disziplin, E rwartungen der  Programmiereinsteiger, Einfluss auf die wahrgenommene Schwierigkeit der Disziplin und  Vermittlung eines kreativen Berufsbildes “Informatiker -in”. Um diese Argumente wissenschaftlich  zu untersuchen, wurden in 2015 und 2016 über 700 Kinder und  Jugendliche vor und nach einem  Einstiegsworkshop mit den Werkzeugen “Scratch” und “App Inventor” mittels Online -Fragebögen  befragt. Die Ergebnisse decken auf, welche Auswirkungen die Workshops auf das Bild der  Informatik sowie die Vorstellungen über Infor matikerinnen und Informatiker haben.   Keywords: Grafische Programmierung, quantitative Evaluation, Scratch, App Inventor,  Fragebogenstudie, Schülerlabor, Bild der Informatik, Berufsbild.   1 Motivation   Der Einstieg in die Programmierung kann inner und außerhal b der Schule sowie in  unterschiedlichen Altersstufen stattfinden. Den unterschiedlichen Gegebenheiten gemein  ist, dass ein Weg gefunden werden muss, Kindern und Jugendlichen die Grundlagen der  Programmierung zielgruppengerecht zu vermitteln.   Ein auch in D eutschland weit verbreiteter Ansatz ist die grafische Programmiersprache  bzw.  -umgebung Scratch . Scratch lässt den Lernenden Freiheiten mittels grafischer  Programmierbausteine eigene interaktive Geschichten oder Spiele zu entwickeln, in  denen Objekte beweg t werden können , Musik abgespielt und sogar mit dem Nutzer  interagiert werden kann. Besonders durch das  umfangreiche  Angebot an ansprechenden  und kindgerechten Grafiken werden Kinder der Klassenstufen 4 bis 8 mittels Scratch  motiviert ihre eigenen Ideen in  kleinen Programmen selbstständig zu verwirklichen. Das  Werkzeug Scratch ist didaktisch sehr gut reduziert, kann  durch das kindliche Design  allerdings für ältere Jugendliche demotivierend  wirken  (vgl. [Ma10], [Ut10]) .                                                              1RWTH Aachen, Informatik 9  Lerntechnologien und Fachdidaktik Informatik , 52074 Aachen, { bergner,  leonhardt, schroeder }@informatik.rwth -aachen.de  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 237ii “proceedings” — 2017/9/17 — 20:19 — page 238 — #238 ii i ii i  Eine weniger spielerische Möglichkeit des grafischen Programmiereinstiegs stellt der  App Inventor  des MIT bereit. Hier werden keine Katzen in bunten Unterwasserwelten,  sondern Android -Apps für Smartphones und Tablets programmiert. Durch den  Alltagsbezug der mobilen Geräte können Kinder und Jug endliche in einem sehr breiten  Altersspektrum an gesprochen und motiviert werden  (vgl. [Wo11]) .  Insbesondere durch den Bedeutungsgewinn der Programmierung für die  Allgemeinbildung der Kinder  könnte sich der Einsatz dieser Werkzeuge zukünftig  verstärken. Off en bleibt dabei die Frage nach den Effekte n solch grafischer  Programmiereinstiege, welche Untersuchungsgegenstand dieses Artikels sind.   2 Forschungsfragen & -design   Beim Einsatz von Lernwerkzeuge n stellt sich immer die Frage des Effekts sowie des  Erfolgs bei  der Zielgruppe, also den Lernenden. Dazu werden in diesem Paper die  folgenden fün f Argumente, welche sich aus der  oben genannten Literatur wie aus den  Erfahrungen im Schülerlabor InfoSphere ableiten lassen, mittels einer Fragebogenstudie  zu Einstiegsworks hops mit den Werkzeugen “Scratch” und “App Inventor” diskutiert :  1. Ein grafischer Programmiereinstieg kann die Lernenden für die Informatik  begeistern.   2. Grafische Programmierung vermittelt das Bild einer interessanten und spannenden  Wissenschaft Informatik.   3. Grafische Programmierung trifft die Erwartungen der Programmiereinsteiger.   4. Der grafische Programmiereinstieg hat Einfluss auf die wahrgenommene  Schwierigkeit der Disziplin.   5. Grafische Programmierung vermittelt ein kreatives Berufsbild “Informatiker -in”.    Um Kinder und Jugendliche an die Informatik und speziell  den Bereich der  Programmierung heranzuführen, werden im Informatik -Schülerlabor InfoSphere an der  RWTH Aachen seit 2010 über 30 verschiedene (in der Regel eintägige) Workshops  angeboten, an denen Schulk lassen und K urse kostenfrei teilnehmen. Das  Themenangebot beinhaltet Module für den Erstkontakt in der Grundschule und  Unterstufe wie auch Module zur Vertiefung bzw. Anknüpfung an den bestehenden  Informatikunterricht in der Mittel und Oberstufe. Die Theme n umfassen Facetten und  Aspekte der theoretischen (z. B. zu Kryptographie -Verfahren), technischen (z. B.  Schaltungen mit Mikrocontrollern) und praktischen (z. B. Erwerb von  Programmierkompetenzen in unterschiedliche n Altersstufen) Informatik.  Damit das  punktuell angestoßene Interesse weiter ausgebaut werden kann, werden Kindern und  Jugendlichen privat (an Wochenenden, in den Ferien) Möglichkeiten der tiefe rgehenden  Einarbeitung geboten.   In dieser Auswertung  bilden drei Module zum grafischen Programmiereinst ieg für die  Zielgruppe der Programmieranfänger der Klassenstufen 6 bis 9 den Fokus.  238 Nadine Bergner, Thiemo Leonhardt, Ulrik Schroederii “proceedings” — 2017/9/17 — 20:19 — page 239 — #239 ii i ii i  Das Forschungsdesign zur Evaluation der obigen fünf Argumente besteht aus einer  quantitativen Forschungsmethod ik mittels Online -Fragebögen2, wobei der Pretest etwa  ein bis zwei Wochen vor dem Besuch des Workshops in der Schule ausgefüllt wird und  der Posttest direkt im Anschluss erhoben wird. Im Folgenden wird erläutert, mit welchen  Fragen die fünf Aspekte beleuchtet werden.   Argument 1 Begeisterungsfähigkeit   In dem Online -Fragebogen werden die Teilnehmerinnen und Teilnehmer explizit  gefragt, wie ihnen d er Einstieg in die (grafische) Programmierung gefallen hat und ob sie  wieder an einem solchen Workshop teilnehmen möchten. Dazu steht den Lernenden eine  fünfstufige Skala von  „trifft gar nicht zu” bis „trifft voll zu” zur Beantwortung zur  Verfügung. Analog wird ihre Zustimmung zur Aussage „Ich werde mich in Zukunft  verstärkt mit Themen der Informatik beschäftigen.” abgefragt.   Argument 2 Vermittlung eines interessanten Bildes  der Disziplin   Die Kinder und Jugendlichen werden vor und nach dem Besuch im InfoSphere dazu  befragt, welches Bild der Disziplin Informatik sie haben. Dies geschieht zum einen ,  indem sie im Freitext drei Begriffe zur Informatik notieren. Zum anderen halten  sie ihre  Einstellung  zu verschiedenen vorgegebenen Aussagen über die Informatik fest, indem  sie einen Schi eberegler zwischen zwei Gegenposition en platzieren. Die hier relevanten  Gegenpole sind „Informatik ist langweilig versus spannend.”, „Informatik ist interessant  versus uninteressant.” und „Informatik ist eintönig versus abwechslungsreich.”.   Argument 3 Passung zu den Erwartungen der Programmiereinsteiger   Hier werden die Schülerinnen und Schüler auf einer fünfstufigen Skala danach befragt,  wie exakt d er Workshop ihren Erwartungen entsprochen hat. Darüber hinaus werden die  Freitextangaben zu den Erwartungen im Pretest und die Verbesserungsvorschläge zum  Workshop und die Themenwünsche für die Zukunft im Posttest ausgewertet.   Argument 4 Einfluss auf die  wahrgenommene Schwierigkeit der Disziplin   Für dieses Argument werden Angaben vor und nach dem Workshop verglichen.  Relevant ist die Einschätzung zur Aussage „Informatik ist schwierig versus einfach.”.   Argument 5 Vermittlung eines kreativen Berufsbildes “Informatiker -in”  Nach derselben Methodik wird die Vorstellung über Informatikerinnen bzw.  Informatiker vor und nach dem Workshop erhoben. So können die Befragten den  Schieberegler zur Aussage „Informatiker -innen müssen kreativ sein.” nahezu stufenlos  von „stimme gar nicht zu” bis „stimme voll zu” platzieren. Gleiches gilt für die Aussage  „Informatiker -innen kreieren viel Neues.”.                                                               2 Weitere Deta ils zum Forschungsdesign un d dem  konkreten Fragebogen können eingesehen werden unter  [Be15].  Fünf Argumente für einen graﬁschen Programmiereinstieg 239ii “proceedings” — 2017/9/17 — 20:19 — page 240 — #240 ii i ii i  3 Umsetzung der Workshops   Um eine wissenschaftliche Reflexion der Antworten der Teilnehmerinnen und  Teilnehmer zu ermöglichen, wer den in diesem Abschnitt die beiden verwendeten  Werkzeuge „Scratch” und „App Inventor” wie auch die Ausgestaltung  der Workshops  im Schülerlabor InfoSphere beleuchtet .  3.1 Vergleich der Tools Scratch & App Inventor   Beide Werkzeuge zum grafischen Programmiereinst ieg werden kostenlos,  browserbasiert angeboten. Eine wichtige Gemeinsamkeit für diesen Forschungsansatz  sind die optisch ähnlichen Programmierblöcke (siehe Abb. 1  für den Vergleich  grundlegender Programmierbausteine), wobei speziell für jüngere Lernende di e Option  der breiten Sprachwahl (inklusive Deutsch) im Werkzeug „Scratch“ einen Vorteil  gegenüber dem „App Inventor“ darstellt, welcher nicht in Deutsch verfügbar ist.     Abb. 1: Vergleich der grafischen  Programmierbausteine  (links Scratch, rechts App Inventor)   Im Gegensatz zu Scratch, welches 2007 speziell für Kinder entwickelt wurde, sollte der  App In ventor ursprünglich Informatikk urse an Universitäten unterstützen und startete  dort 2009 seine Pilotphase. Ein weiterer Unter schied ist, dass bei Scratch Objekte in  einer Mikrowelt programmiert werden, welche direkt neben d er Programmierfläche  sichtbar ist , so dass die Lernenden stets in der gleichen Ansicht arbeiten. Im App  Inventor gibt es dagegen zwei getrennte Ansichten: Designer und Blocks . Der Designer  dient der Gestaltung des User Interface und der Auswahl aller Komponenten (Buttons,  Grafiken, Töne, Timer , GPS). Darauf aufbauend stehen im Blocks Editor allgemeine und  komponentenspezifische Blöcke (abhängig von den eingefüg ten Elementen im Designer)  zur Programmierung der Funktionalität zur Verfügung. Eine Besonderheit bei der Arbeit  mit dem App Inventor ist das Live -Testing, welches über einen integrierten Emulator  oder auch direkt auf einem Android -Smartphone bzw. -Tablet möglich ist. Die von den  Lernenden entwickelten Apps können somit in die Realität (auf das Smartphone)  überführt werden und sind nicht auf eine künstliche Mikrowelt im Browser beschränkt.  Dieser Unterschied muss bei der späteren Auswertung insbesondere hin sichtlich des  Bildes der Disziplin berücksichtigt werden.   3.2 Beschreibung  der Schülerlabor -Module   Nachdem die beiden Werkzeuge beschrieben und verglichen sind, werden hier die  konkreten Workshops im Rahmen des InfoSphere vorgestellt, anhand derer die Effekte  grafischer Programmierwerkzeuge evaluiert wurden.  240 Nadine Bergner, Thiemo Leonhardt, Ulrik Schroederii “proceedings” — 2017/9/17 — 20:19 — page 241 — #241 ii i ii i  Das Modul zu  Scratch nennt sich „ Spielend Programmieren lernen mit Scratch ”3 und  wird für Klassen der Unter und Mittelstufe angeboten. Das didaktische Konzept hinter  diesem Workshop ist ein Gruppenpuzzle. Dies bedeutet, dass jeweils vier Kinder ein  Team bilden, dessen Ziel es ist, am Ende des Tages gemeinsam ein Spiel zu  programmieren. Noch vor dem Start wird allen Teilnehmerinnen und Teilnehmern  gemeinsam die Webseite Scratch präsentiert und gezeigt, wie d ie Bausteine zusammen gesetzt werden, ohne vertieft auf die Bedeutung einzelner Befehle einzugehen. In der  ersten Phase des Gruppenpuzzle s teilen sich die Teams auf, so dass jedes Teammitglied  gemeinsam mit Mitgliedern anderer Teams Experte auf einem bestim mten Gebiet wird.  Dabei entstehen Expertengruppen für die Themenbereiche „Bewegung und Zeichnen”,  „Fühlen und Variablen”, „Grafik und Aussehen” und „Klang und Kommunikation”. In  diesen Expertenteams lernen sie mit Hilfe kleinschrittiger Anleitungen und anhand  konkreter Beispiele eine  Auswahl  der Befehle kennen. In der zweiten Phase des  Gruppenpuzzles entwickeln die vier Teammitglieder gemeinsam ein Sp iel, zu dem  die  grobe Spielidee und mögliche Erweiterungsansätze gegeben sind. Dabei trägt jedes  Teammitglie d eine Verantwortung, da jede Expertin bzw. jeder Experte für ein  bestimmtes Thema zuständig ist, welches für die Umsetzung des Spiels benötigt wird. In  dieser Phase können die Kinder sehr kreativ arbeiten, da Scratch zahlreiche grafische  und auch akustisc he Optionen zur Ausgestaltung des Spiels bietet. Zum Abschluss  präsentieren alle Teams ihre Spiele vor der Gruppe und können diese anschließend  gegenseitig austesten. Darüber hinaus ist es möglich, dass die Teilnehmerinnen und  Teilnehmer ihre Spiele zur we iteren Bearbeitung mitnehmen.   Zum App Inventor gibt es im Schülerlabor InfoSphere zwei unterschiedliche Module.  Das Modul „ Erste App programmieren ”4 ist als Einstieg für Klassen der Stufen 6 bis 8  konzipiert, wohingegen das Modul „ InfoSphere goes Android ”5 als Fortsetzung oder für  Anfänger der Stufen 8 bis 10 angeboten  wird. Der Unterschied liegt im Detailgrad  der  Anleitungen wie auch in der Übersetzung aller englischen Begriffe. Die Sozialform in  beiden Modulen ist die Partnerarbeit an einem Laptop u nd mit  einem Smartphone. A uch  hier starten beide Module mit einer kurzen Präsentation des Werkzeugs.   Im Modul „ Erste App programmieren ” wird in drei Schritten eine Zeichen -App mit  Foto-Funktion entwickelt. Mittels des  Arbeitsblatt es „Zeichnen für Anfänger” wird  programmiert, wie ein Foto aufgenommen und als Hintergrund gespeichert werden kann.  Im Blatt „Zeichnen für Fortgeschrittene” wird die App um Buttons erweitert, so dass die  Stiftfarbe aus den vier Grundfarben gewählt werden kann und auch bereits Punkte und  Linien in unterschiedliche n Strichstärken gezeichnet werden können. In dem optionalen  Zusatzblatt „Zeichnen für Profis” wird die App um eine komplette Farbpalette erweitert.   Das Modul „ InfoSphere goes Android ” hingegen startet nach der Einführung mit einer   ersten Phase, in der alle Zweierteams eine einfache „Hallo InfoSphere” -App entwickeln,                                                              3 Modulbeschreibung “Scratch”: http://schuelerlabor.informatik.rwth -aachen.de/module/scratch    4 Modulbeschrei bung “Erste App ”: http://schuelerlabor.informatik.rwth -aachen.de/module/erste -app   5 Modulbeschreibung “InfoSphere goes Android”: http://schuelerlabor.informatik.rwth -aachen.de/module/is goes-android   Fünf Argumente für einen graﬁschen Programmiereinstieg 241ii “proceedings” — 2017/9/17 — 20:19 — page 242 — #242 ii i ii i  die kleinschrittig angeleitet wird und den Umgang mit dem App Inventor übt.  Anschließend hat jedes Team die Wahl zwischen den vier Spielideen „AngryBlob”,  „Asteroids”, „FlappyBird” und „MoleMash”, welche alle an existierende  Apps  angelehnt  und daher den Schülerinnen und Schülern unter Umständen bereits bekannt sind. Hierbei  wird der Schwierigkeitsgrad der Apps auf den Anleitungen angegeben, so dass die  Teams nach der „Ha llo InfoSphere” -App diesen selbst auswählen können. Die  Anleitungen sind hier weniger kleinschrittig, so dass den Lernenden mehr  Verantwortung über den  eigenen Lernprozess übertragen wird. Auch haben die  Lernenden die Möglichkeit ihre App nach eigenen Idee n weiterzuentwickeln.   4 Auswertung der Evaluation   In den Jahren 2015 und 2016 wurden für die vorgestellten drei Module zum grafischen  Programmiereinstieg 694 Pre und 720 Posttestdatensätze erhoben. Da die Vorbefragung  in der Regel im Vorfeld in der Schule a usgefüllt wird, kommt es vor, dass Kinder (z. B.  aufgrund von Krankheit) nicht an beiden Erhebungszeitpunkten einen Fragebogen  ausfüllen. Aus dieser Problematik heraus ergibt sich, dass nur 564 Pre -Post-Datensätze  korrekt zugeordnet werden konnten. Da zur Beforschung der fünf Argumente  Informatikeinsteiger im Fokus stehen, wurde die Stichprobe für die Auswertung auf  Schülerinnen und Schüler der Klassenstufen 6 bis 9 eingeschränkt. Dies ergibt ein en  Stichprobenumfang von N = 471  (siehe auch Abb. 2) .    Abb. 2 : Stichichprobenbeschreibung   Argument 1 Begeisterungsfähigkeit   Im Schnitt werden alle drei Module von den Teilnehmerinnen und Teilnehmern positiv  bewertet  (siehe Abb. 3  a)). Die Antworten hängen dabei signifikant vom Geschlecht der  Kinder (p<.05), jedoch  nicht vom Alter, der Klassenstufe und dem besuchten Modul ab.  Die Daten der  Mädchen zeigen  mit einem M ittelwert von M=2,44 (s=1,380) , dass den  Mädchen  das Modul signifikant besser gefallen hat als den Jungen mit M=2,53  (s=1,598)6. Obwohl die Differenzen n icht signifikant sind, zeigt ein Vergleich der  Mittelwerte, dass das Modul „Scratch” am beliebtesten und „InfoSphere goes Android”  am unbeliebtesten ist, was möglicherweise mit dem unterschiedlichen                                                              6 Die Kodierung geschieht mittels „ trifft voll zu “ (1) bis „trifft gar nicht zu “ (5). 242 Nadine Bergner, Thiemo Leonhardt, Ulrik Schroederii “proceedings” — 2017/9/17 — 20:19 — page 243 — #243 ii i ii i  Schwierigkeitsgrad der Module oder der tendenziell ältere n Zielgruppe  zusammenhängen könnte.     Abb. 3 Auswertung bezüglich Begeisterungsfähigkeit   Bezüglich der Aussage, ob sie sich in Zukunft verstärkt mit Themen der Informatik  beschäftigen möchten, ergibt sich die Verteilung  aus Abb. 3 b) . Auch die Antwort auf  diese Frage ist wieder signifikant vom Geschlecht abhängig (p<.0 1). Entgegen der  obigen Aussage  wollen sich hierbei die Jungen mit M=2,87 (s=1,326)  eher zukünftig mit  der Informatik beschäftigen als die Mädchen mit M=3,12 (s=1,135). Hier wird deutlich  wie stark der, im Vorfeld generierte, Wunsch der Kinder bereits ausgeprägt ist und wie  begrenzt dabei eine punktuelle Maßnahme wirkt. Darüber hinaus ist die Bewertung  diese r Aussage signifikant abhängig von der Klassenstufe (p<.05). Schülerinnen und  Schüler ni edriger Klassenstufen geben deutlicher  an, sich verstärkt mit Informatik  beschäftigen zu wollen. Dies könnte in den geringeren Vorerfahrungen der jungen  Zielgruppe begründet sein, so dass diese erst durch das Modul einen Einblick in die  Informatik erhalten  und durch ihre Erfolgserlebnisse bestärkt wurden.   Als Antwort auf die dritte Aussage „Ich würde gerne an weiteren Modulen des  InfoSphere teilnehmen.” ergibt sich eine nahezu Gleichverteilung zwischen den fünf  Antwortalternativen  (siehe Abb. 3 c)) . Auch hi er konnten wieder geschlechtsspezifische  Unterschiede festgestellt werden (p<.01). Obwohl ihnen der Modulbesuch weniger gut  gefallen hat, haben Jungen (M=2,88, s=1,397) ein signifikant größeres Interesse am  Besuch weiterer Module im Schülerlabor als Mädche n (M=2,99, s=1,255).  Auch hier  zeigt sich wieder wie gefestigt der vorher ausgeprägte Wunsch einer möglichen  Beschäftigung mit der Informatik ist und wie eingeschränkt ein eintägiges Modul  dahingehend wirken kann.   Argument 2 Vermittlung eines interessant en Bildes der Disziplin   Als erstes wurde hier die persönliche Einschätzung zwischen den beiden Extrema  „Informatik ist interessant (1) versus uninteressant (100).” erhoben. Dabei zeigen sich  signifikante Differenzen zwischen den Angaben vor und nach dem Mo dulbesuch  (p<.05). Dabei liegt der Mittelwert vorher bei M=24,98 (s=26,427) und nachher bei  M=27,29 (s=27,661). Aus dieser Verschiebung lässt sich ablesen, dass die Informatik im  Schnitt nach dem Modul leicht „uninteressanter” wahrgenommen wird. Spannend s ind  die signifikanten Geschlechterunterschiede (p<.05). Bei Jungen hat sich die Bewertung Fünf Argumente für einen graﬁschen Programmiereinstieg 243ii “proceedings” — 2017/9/17 — 20:19 — page 244 — #244 ii i ii i  um 3,90 Punkte Richtung „uninteressant” verschoben, wohingegen sie sich bei Mädchen  um 0,10 Punkte Richtung „interessant” verändert hat, was unter anderem darin zu  begründen ist, dass das Interesse von den Jungen im Vorfeld bereits extrem hoch  angegeben wurde (Jungen vorher M=19,11, Mädchen vorher M=33,89). Obwohl dies  nicht beabsichtigt war, kann der Rückgang des Interesses bedeuten, dass das vorherige  Bild der Diszip lin positiv verzerrt war und nun ein realistisches Bild entstanden ist.   Bei der zweiten Aussage ging es darum, ob die Informatik eher langweilig (1) oder  spannend (100) ist. F ür die gesamte Stichprobe konnten keine signi fikanten  Veränderungen durch die  Mod ule bemessen wer den. Allerdings zeigte sich , dass die  Antworten signifikant vom Geschlecht der Befragten abhängen (p<.05). Bei Jungen  veränderte sich der Mittelwert um 2,33 Punkte Richtung „langweilig”, bei Mädchen  entgegengesetzt um 2,29 Punkte Richtung „spannend”. Dabei gaben die Jungen im  Pretest  wesentlich positivere Werte (M=77,51) an als die Mädchen (M=60,25).   Auch bezüglich der Aussage „Informatik ist eintönig (1) versus abwechslungsreich  (100).” ergaben sich insgesamt keine signifikanten Differenzen  zwischen den beiden  Erhebungszeiträumen. Allerdings zeigte sich hier eine signifikante Abhängigkeit vom  besuchten Modul. Durch den Besuch des Moduls „Scratch” veränderte sich der  Mittelwert um 2,19 Punkte in Richtung „abwechslungsreich”, nach dem Modul „Erste  App” um 0,39 Punkte ebenfalls  in Richtung  „abwechslungsreich”, nach dem Modul  „InfoSphere goes Android” jedoch um 0,29 Punkte in Richtung „eintönig”.   Argument 3 Passung zu den Erwartungen der Programmiereinsteiger   Bezüglich dieses dritten Argumentes  sollte die Zustimmung zu der expliziten Aussage  „Das Modul entsprach meinen Erwartungen.” angegeben werden. Hierbei ergab sich  folgende Verteilung in der gesamten Stichprobe: 115x „trifft voll zu” (1), 102x „trifft  zu” (2), 130x „weder noch” (3), 70x „trifft eher nicht zu” (4), 54x „trifft gar nicht zu”  (5). Auch hier ergaben sich wieder signifikante Geschlechterunterschiede (p<.05). Dabei  wurde die Erwartung der Mädchen mit M=2,59 (s=1,180) stärker erfüllt als diese der  Jungen M=2,73 (s=1,377).   Weiter wur de analysiert, welche Erwartungen diejenigen  mit ins Schülerlabor brachten,  welche  die deutlichsten Verschiebungen hin zu „Informatik ist uninteressant.”,  „Informatik ist langweilig.” und „Informatik ist eintönig” verzeichneten. Die  Erwartungen dabei entsp rechen inhaltlich dem besuchten Modul, also beinhalteten z. B.   „App-Programmierung”, „etwas Neues lernen” und „Spaß haben”. Eine Vermutung für  die negative Interessenentwicklung könnte sein, dass diejenigen enttäuscht wurden, die  erwarteten, dass ihnen der  Freiraum einer komplett eigenen Idee für die App bzw. das  Spiel gelassen würde, was mehrfach in den Durchführungen als Kritik geäußert wurde.   Die Auswertung der Verbesserungsvorschläge ist leider wenig zielführend, da meist  „keine” oder unklare Angaben w ie „interessanter gestalten” genannt wurden.   Argument 4 Einfluss auf die wahrgenommene Schwierigkeit der Disziplin  244 Nadine Bergner, Thiemo Leonhardt, Ulrik Schroederii “proceedings” — 2017/9/17 — 20:19 — page 245 — #245 ii i ii i  Mittels der im Pre sowie im Posttest zu wertenden Aussage „Informatik ist schwierig  (1) versus einfach (100).” wird das vierte Argument be leuchtet. Hier zeigt sich eine  signifikante Veränderung zwischen den beiden Erhebungszeitpunkten (p<.05). Die  Informatik wird nach dem Modul mit M=48,2145 (s=24,91) schwieriger eingeschätzt als  im Vorfeld M=51,3316 (s=25,00). Auch wenn es keine signifikant en Unterschiede  zwischen den Teilgruppen gibt, zeigt ein Blick in die Daten, dass diese Veränderung bei  Mädchen deutlicher stattfindet. Dieses Ergebnis bestärkt den Verdacht, dass einige  Jugendliche mit einem positiv verzerrten Bild der Informatik das Schü lerlabor besuchen  und von den Herausforderungen der Programmierung überrascht wurden.   Argument 5 Vermittlung eines kreativen Berufsbildes „Informatiker -in”  Mit Blick auf das fünfte Argument wird die Zustimmung zu zwei Aussagen auf einer  Skala von „stimme  gar nicht zu“ (1) bis „stimme voll zu” (11) erhoben. Dabei zeigt sich  ein signifikanter Unterschied bei der Aussage „Informatiker -innen müssen kreativ sein.”  (p<.05). Nach dem Modul wird dieser Aussage mit M=7,9427 (s=2,66) signifikant  stärker zugestimmt als vorher M=7,4268 (s=3,05). Mittels eines grafischen  Programmiereinstiegs gelingt es den Schülerinnen und Schülern zu verdeutlichen, dass  Softwareentwicklung ein kreativer Prozess sein kann. Dabei sind die Veränderungen von  keiner trennenden Variablen si gnifikant abhängig. Auch bei der Auswertung der Pre Test-Daten zeigten sich keine spezifischen Unterschiede unter den Teilgruppen.   Zum Abschluss wurde die Aussage „Informatiker -innen kreieren viel Neues.” evaluiert.  Hierbei zeigten sich im Vorfeld wie auch  im Vergleich zwischen den beiden  Erhebungszeiträumen keine signifikanten Unterschiede.   5 Reflexion & Ausblick   Insgesamt hat die quantitative Auswertung der 471 Pre -Posttest -Datensätze gezeigt, dass  die Module im Schülerlabor zum Einstieg in die grafische Pr ogrammierung mittels  Scratch und dem App Inventor nicht unbedingt zu einem positiveren Bild der Informatik  beitragen, aber vermutlich ein realistischeres Bild erzeugen.   Argument 1 Begeisterungsfähigkeit: Die Auswertung zeigt, dass die Module den  Mädchen signifikant besser gefallen haben, dennoch sind es die Jungen, die angeben sich  in Zukunft eher mit Informatik beschäftigen zu wollen. Weiter zeigt sich, dass das  anspruchsvollste Modul am schlechtesten bewertet wird, was ein Indiz dafür ist, dass  Überford erung zur Abnahme der Begeisterung führt.   Argument 2 Vermittlung eines interessanten Bildes der Disziplin: Bei einem Teil der  Jungen, veränderte sich das Bild der Informatik teils negativ. Dieser Rückgang des  Interesses kann auch in einem im Vorfeld extr em positiven, unter Umständen gar  verzerrten Bildes der Informatik  begründet sein. Das Bild der Informatik veränderte sich  bei Jungen in Richtung „langweilig”, bei Mädchen jedoch exakt entgegengesetzt in Fünf Argumente für einen graﬁschen Programmiereinstieg 245ii “proceedings” — 2017/9/17 — 20:19 — page 246 — #246 ii i ii i  Richtung „spannend”. Somit kann davon ausgegangen we rden, dass sich die eigene  Vorstellung mancher Besucherinnen und Besucher hin zu einer realistischeren  Einschätzung entwickelt hat.  Weiter haben sich die zuvor stark ausgeprägten  Unterschiede zwischen den Geschlechtern leicht angeglichen.   Argument 3 Passung zu den Erwartungen der Programmiereinsteiger: Die Auswertung  des Pretests zeigte, dass die Erwartungen zu den Inhalten der Module passen, es jedoch  Enttäuschungen bezüglich der gewünschten Freiheit sgrade innerhalb  der Projekte gab.  Insgesamt gaben Mädc hen deutlicher als Jungen an, dass die Module ihre Erwartungen  erfüllt hätten. Dies könnte eine Begründung für die negativen Verschiebungen bzgl. der  wahrgenommenen Interessantheit der Disziplin bei den Jungen sein.   Argument 4 Einfluss auf die wahrgenomm ene Schwierigkeit der Disziplin: Die  Tatsache, dass die Informatik nach einem Programmiereinstieg als schwieriger bewertet  wird, legt nahe, dass einige Lernende mit einem verzerrten Bild der Informatik das  Schülerlabor besuchten und von den Anforderungen ü berrascht wurden.   Argument 5 Vermittlung eines kreativen Berufsbildes „Informatiker -in”: Der grafische  Programmiereinstieg zeigt die Softwareentwicklung als kreativen Prozess und führt zur  signifikanten Überzeugung, dass Informatiker -innen kreativ sein müssen.   Da der Einstieg in die Programmierung dank passender Werkzeuge zukünftig bereits im  Grundschulalter stattfinden kann , soll die Evaluation auf diese jünger e Zielgruppe  ausgeweitet werden.  Dazu werden  auch Apps zum grafischen Programmiereinstieg wie  „Scratch Junior” und Hardware wie LEGO Wedo, Ozobot und Calliope hinsichtlich  ihres Potentials bezüglich der Schülervorstellungen über Informatik beleuchtet .  Literaturverzeichnis   [Be15]  Bergner, N.:  Konzeption eines Informatik -Schülerlabors und Erforschu ng  dessen Effekte auf das Bild der Informatik bei Kindern und Jugendlichen.  Dissertation, Aachen, 2015.   [Ma10]  Maloney, J. et al.:  The Scratch Programming Language and Environment.  In ACM Transactions on Computing Education, 2010, 10; 16: 1 –15.  [Ut10]  Utting, I. et al.:  Alice, Greenfoot, and Scratch -A Discussion. In ACM  Transactions on Computing Education, 2010, 10; S. 1 –11.  [Wo11]  Wolber, D.:  App inventor and real -world motivation. In (Cortina, T. J.  Hrsg.):  Proceedings of the 42nd ACM technical symposi um on Computer  science education. ACM, New York, NY, 2011; S. 601.    246 Nadine Bergner, Thiemo Leonhardt, Ulrik Schroederii “proceedings” — 2017/9/17 — 20:19 — page 247 — #247 ii i ii iIra Diethelm(Hrsg.): INFOS 2017 – Informatische Bildung zum Verstehen und Gestalten, Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 1 Modularisierung im Informatikunterricht aus lernpsychologischer Perspektive Johannes Fischer, Arno Pasternak1 Abstract: Objektorientiertes Modellieren und Programmieren ist eine weitverbreitete Technik, um informatische Prinzipien wie Abstraktion, Automation und Modularisierung umzusetzen. Letztgenannte Begriffe geh ¨oren zweifelsohne zu den wichtigsten Konzepten des Informatischen Denkens nach Jeannette Wing [Wi06], und ihre Vermittlung ist aus einem allgemeinbildenden Informatikunterricht nicht wegzudenken. Unklar ist nur der zu beschreitende Weg, um diese Kompetenzen zu erlangen. K ¨olling und Rosenberg [KR01] geben hierf ¨ur einige Ratschl ¨age, die sich insbesondere durch die Verwendung großer Projekte von Anfang an auszeichnen. In diesem Beitrag wird daf ¨ur pl¨adiert, statt einer konkreten Technik wie der Objektorientierung die Konzepte Abstraktion, Automation und insbesondere Modularisierung in den Fokus zu nehmen und diese altersgerecht mit einer geeigneten Sprache zu unterrichten. Keywords: Informatikunterricht, OOM, OOP, Module, Lernpsychologie, Cognitve Load Theory 1 Informatische Bildung an Schulen Heymann hat 1996 ¨uberzeugend dargelegt, was unter Allgemeinbildung heute verstanden werden soll [He96]. Entsprechend ist der Allgemeinbildungscharakter der Informatik unter Fachdidaktikern unbestritten [Wi03, SS11, Pa13]. Diese Bedeutung wird zus ¨atzlich durch die Darstellung von Jeannette Wing deutlich, die 2006 in einem kurzen Beitrag die Besonderheit des informatischen Denkens dargestellt hat [Wi06]. Es versteht sich dabei von selbst, dass in der Informatik im Schulunterricht als Allgemeinbildung in erster Linie grundlegende Strukturen und Konzepte anstatt die Nutzung bestimmter aktueller Werkzeuge in Form konkreter Informatiksysteme wie beispielsweise eine Textverarbeitung oder eine konkrete Datenbankimplementierung vermittelt werden sollen. Ebenso gilt, dass auch bei der Verwendung informatikinterner Werkzeuge der Schwerpunkt auf die Vermittlung von Konzepten und Prinzipien und nicht auf beispielsweise die Anwendung einer oder mehrerer Programmiersprachen und mit denen in diesen Sprachen realisierbaren Ideen gelegt werden muss. 1.1 Konzepte der Informatik Welches sind die grundlegenden Konzepte der Informatik? Ausgehend von ihren ersten Feststellungen schreibt Wing 2008 [Wi08]:”Abstraction and automation“ und etwas sp¨ater in anderer Formulierung: 1TU Dortmund, Fakult ¨at f¨ur Informatik, Otto-Hahn-Str. 14, 44227 Dortmund, {Johannes.Fischer,Arno.Pasternak }@cs.tu-dortmund.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 247ii “proceedings” — 2017/9/17 — 20:19 — page 248 — #248 ii i ii i2 Johannes Fischer und Arno Pasternak ”Computing3is the automation of our abstractions“. Diese kurze und knappe Beschreibung verlangt nat ¨urlich nach einer genaueren Begriffsanalyse. Erst die Kombination aus abstrakter Betrachtung und Modellbildung der realen Welt und deren Umsetzung in eine durch Maschinen ausf¨uhrbare Implementierung macht den besonderen Charakter der Informatik aus und hat durch die daf ¨ur notwendigen geistigen Vorstellungen und Bem ¨uhungen den intellektuellen Horizont der Menschen wesentlich erweitert und durch die dadurch erzeugten Produkte die Welt real ver ¨andert. Der Kerngedanke der Aussagen von Wing l ¨asst sich als Konzept folgendermaßen beschreiben: Durch Abstraktion wird als Abbild der realen Welt ein Modell erschaffen. Dies stellt aber erst eine statische Beschreibung der (Modell-)Welt dar. Erst durch die Beschreibung vonabstrakten Handlungen wird erm ¨oglicht, dass bei Vorhandensein einer entsprechenden Implementierung ein Ergebnis erzielt werden kann, das (hoffentlich) bei der L ¨osung eines Problems hilft. Durch das Ausf ¨uhren dieser Implementierung wird aus dem statischen ein dynamisches Modell. Dieses dynamische Modell wird auf einer (konkreten) Maschine ausgef ¨uhrt. Diese Maschine”versteht“ leider keine nat ¨urlichen Sprachen. Die k ¨unstlichen Sprachen der Maschinen sind eine Anpassung an technische Gegebenheiten und stellen eine eigene intellektuelle Struktur dar. Diese Programmiersprachen m ¨ussen erlernt und durch ¨Ubungen gefestigt werden. Es ist eine intellektuell hoch zu wertende Leistung, ein Modell in einer konkreten Programmiersprache zu”kodieren“ und dieses Programm zu testen und zu korrigieren. Bei der Umsetzung eines Modelles in eine derartige Sprache sind gerade sogenannte Novizen erheblich intellektuell gefordert. Entsprechend ist der Aufwand nicht zu untersch ¨atzen, der im Unterricht beim Erlernen einer Programmiersprache n ¨otig ist. Dieser hohe Aufwand darf aber nicht dazu f ¨uhren, auf die Automatisierung durch Programmierung im Unterricht zu verzichten. Die beiden Aspekte des informatischen Denkens —Abstraktion und Automation —m ¨ussen in einem Schulfach Informatik (mit didaktischer Reduktion) gleichermaßen abgebildet werden, wenn es seinem Charakter gerecht werden will. Betrachten wir also die beiden Aspekte etwas genauer. 2 Abstraktion Um ein Problem der realen Welt mit einer Maschine — dem Computer — zu bearbeiten, muss das Problem in seine Bestandteile zerlegt und strukturiert analysiert werden. Daraus folgt im Endeffekt eine Modularisierung und eine strukturierte Programmierung. Diese Modellierung zu einer reduzierten abstrakten Welt erhalten wir durch Entwicklung vonModulen . ImInformatik-Duden werden derartige Module beschrieben als: •”Er4ist logisch oder funktional in sich abgeschlossen. 3MitComputing ist in der englischen Fachsprache Informatik gemeint. 4gemeint ist hier: das Modul als derBaustein248 Johannes Fischer, Arno Pasternakii “proceedings” — 2017/9/17 — 20:19 — page 249 — #249 ii i ii iModularisierung im Informatikunterricht aus lernpsychologischer Perspektive 3 •Wie er arbeitet oder implementiert ist, braucht außen nicht bekannt zu sein [. . . ]. •Er besitzt klar deﬁnierte Schnittstellen nach außen. [. . . ] Ein System ist modular aufgebaut, wenn es aus abgrenzbaren Einheiten zusammengesetzt ist und wenn diese Einheiten einzeln ausgetauscht, ver ¨andert oder hinzugef ¨ugt werden k ¨onnen, ohne dass andere Teile des Systems hierdurch beeinﬂusst werden oder das System arbeitsunf ¨ahig wird.“ [CS03, S.414] Abstraktion der Daten Diese Deﬁnition macht deutlich, wie zentral die Idee der Modularisierung in der Informatik ist. Beschreibt ein derartiges Modul Daten aus der Realit ¨at, so sprechen wir von einer abstrakten Datenstruktur oder einem abstrakten Datentyp [Po84, S.85ff,S.154ff]5Da die Beschreibung von Daten eine zentrale Aufgabe im Rahmen der Modellierung ist, ist das Erlernen der Entwicklung von derartigen Modulen ein wichtiger Teil im Rahmen von Lehrpl ¨anen f ¨ur das Schulfach Informatik. Abstraktion der Abl ¨aufe Eine systematische Abstraktion der Abl ¨aufe f ¨uhrt zur strukturierten Programmierung , die im Informatikduden beschrieben wird als:”Programmiermethode, bei der das vorgegebene Problem in Teilprobleme und die Beziehungen zwischen diesen Teilproblemen(Schnittstellen) zerlegt wird. [. . . ]“ [CS03, S.643] Je nach Programmierparadigma werden bei der imperativen Programmierung Kontrollstrukturen oder bei der funktionalen Programmierung rekursive Funktionen und Prozeduren verwendet. Abstraktion im Unterricht Beide Formen der Abstraktion m ¨ussen im Informatikunterricht gleichermaßen f ¨ur eine Probleml ¨osung vermittelt werden. Eine ausschließliche Abstraktion der Daten f ¨uhrt zu einer Beschreibung der statischen Welt, vergleichbar mit dem Kunstunterrricht, eine ausschließliche Abstraktion der Abl ¨aufe f ¨uhrt de fakto zu einer Variante des Mathematikunterrichtes. Schubert undSchwill machen daher bei ihrer beispielhaften Vorstellung des objektorientierten Vorgehens deutlich:”Es soll deutlich werden, dass die traditionellen, grundlegenden Konzepte der strukturierten Programmierung unverzichtbarer Lerngegenstand sind, auch wenn objektorientierte L ¨osungen von den Sch¨ulern konstruiert werden. Folgende Teilziele werden angestrebt: Die Sch ¨uler k ¨onnen das Konzept der Modularisierung anwenden. . . .“ [SS11, S.157] Sie berufen sich dabei aufB¨osz¨orm´enyi, der richtigerweise feststellt, dass”das Konzept der Modularisierung viel grundlegender [ist] als das Konzept der Objektorientierung“ [B ¨o01, S.15]. Folgt man Wirth , handelt es sich dabei noch nicht einmal um ein neues, eigenst ¨andiges Konzept, sondern nur um eine neue Technik:”Noch ein Wort zur Objektorientierung: [. . . ] Man lernt neue Programmiertechniken – aber auf dem Boden des bisher Mitgebrachten.“ [Wi91, S.60,61] Objektorientierte Technologie im Unterricht In der Ausbildung werden heute h ¨auﬁg objektorientierte Sprachen verwendet. Dass modulare Modellierung und Programmierung Objektorientierung nicht voraussetzt, wird damit den Lernenden nicht immer deutlich. Wir haben beobachtet, dass selbst Informatik-Studierende nur die objektorientierte Darstellung kennen und daher glauben, dass modulares Programmieren mit Objektorientierung gleichzusetzen ist. So verwundert es nicht, dass dieser Eindruck auch in einem Schulbuch vertreten wird: 5Eine abstrakte Datenstruktur deﬁniert nur ein Exemplar, ein abstrakter Datentyp deﬁniert eine Menge von gleichen abstrakten Datenstrukturen. [Po84, S.100]Modularisierung im Informatikunterricht aus lernpsychologischer Perspektive 249ii “proceedings” — 2017/9/17 — 20:19 — page 250 — #250 ii i ii i4 Johannes Fischer und Arno Pasternak ”Vor allem in Zeiten des Internets und der Verbreitung von Software in allen Lebensbereichen bietet die OOP große Vorteile: •Wiederverwendbarkeit von schon programmierten Elementen •Aufteilung ¨uberschaubarer Einzelteile •Erweiterung durch Schnittstellen“ [KT10, S.15] Diese unvollst ¨andige fachliche Beschr ¨ankung der Modularisierung auf Objektorientierung verf¨uhrt leicht zu fragw ¨urdigen didaktischen Entscheidungen6. 3 Automation Aus der abstrakten Beschreibung von Daten und Abl ¨aufen soll ein Programm in einer konkreten Programmiersprache erstellt werden, das auf einer Maschine ablauff ¨ahig ist. Die Erstellung eines solchen Programmes ist aber mitnichten einfach oder trivial. Die gew ¨ahlte Programmiersprache stellt entsprechend der Syntax bestimmte grunds ¨atzliche Datentypen und Ablaufstrukturen als Bausteine zur Verf ¨ugung. Um vom abstrakten Modell zum konkreten Programm zu gelangen, muss ein Graben zwischen den abstrakten Ideen und den konkreten Strukturen der jeweiligen Programmiersprache ¨uberwunden werden. Der Modellierungsgraben Dieser Graben wird am Beispiel des Kernlehrplanes f ¨ur die gymnasiale Oberstufe in NRW [MS13, S.21] deutlich, wenn die (verk ¨urzte) Aufz ¨ahlung um die Darstellung dieses Grabens erweitert wird: ”Die Sch ¨ulerinnen und Sch ¨uler •ermitteln bei der Analyse einfacher Problemstellungen Objekte, ihre Eigenschaften, ihre Operationen und ihre Beziehungen (M), •modellieren Klassen mit ihren Attributen, ihren Methoden und Assoziationsbeziehungen (M), GRABEN •ordnen Attributen, Parametern und R ¨uckgaben von Methoden einfache Datentypen, Objekttypen oder lineare Datensammlungen zu (M)“ Beispielhaft ist es f ¨ur Sch ¨uler¨uberhaupt nicht selbstverst ¨andlich, das Sortieren einer Menge von Karten mit einem Feld oder einer Liste zu modellieren. Die Darstellung in den meisten Schulb ¨uchern suggeriert allerdings diese scheinbare Selbstverst ¨andlichkeit, die von vielen Lehrern auch ohne große didaktische Reﬂexion den Sch ¨ulern ¨ubergest ¨ulpt wird. Beeinﬂusst der Lehrer die Sch ¨ulerinnen und Sch ¨uler nicht, so modellieren diese ohne Kenntnis der Datenstruktur Feld oder Liste wahrscheinlich einzelne Karten. Ebenso wie in der obigen Darstellung f ¨ur die Daten angegeben, ist auch ein entsprechender Graben f ¨ur die algorithmische Abstraktion zur Programmiersprache vorhanden. Jeder Lehrer weiß, wie lange es dauert, bis die Sch ¨ulerinnen und Sch ¨uler beispielsweise die Iteration ¨uber ein Feld als geeignetes programmiersprachliches Konstrukt einer Problemstellung erkennen und auch anwenden k ¨onnen. 6In der Ausgabe von 2014 ist die obige Darstellung so nicht mehr enthalten [KL14, S.20]250 Johannes Fischer, Arno Pasternakii “proceedings” — 2017/9/17 — 20:19 — page 251 — #251 ii i ii iModularisierung im Informatikunterricht aus lernpsychologischer Perspektive 5 Ein Graben kann ¨uberwunden werden, wenn man von der einen Seite auf die andere Seite springen kann. Dieses muss aber erlernt werden. Dabei ist ein Sprung ¨uber einen Graben von der einen Seite zumeist genauso kompliziert wie von der anderen Seite. Das bedeutet hier: Wenn es mir als Sch ¨uler gelingt, die Wirklichkeit zu modellieren, muss ich zus ¨atzlich lernen, wie diese Modelle in der gew ¨ahlten Programmiersprache abgebildet werden k ¨onnen. Kann ich mich zuerst in dieser Programmiersprache f ¨ur kleine Problemstellungen ad ¨aquat bewegen, muss ich zus ¨atzlich lernen, die Wirklichkeit in diese mir bekannten Strukturen”herunterzubrechen.“ Unterrichtliches Vorgehen Notwendig sind also Kenntnisse der Datenrepr ¨asentation und Ablaufsteuerung. Beide Aspekte m ¨ussen erlernt und ge ¨ubt werden. Welcher davon im unterrichtlichen Verlauf sinnvollerweise wann im Vordergrund steht, ist nicht offensichtlich. Diese Einsch ¨atzung wird durch die Untersuchung von Ehlert gest¨utzt, der in seiner Studie verglichen hat, ob eine objektorientierte Sichtweise geben ¨uber der prozedural-imperativen Vorgehensweise im Anfangsunterricht Vorteile hat:”Es kann das Vorgehen gew ¨ahlt werden, welches der Lehrer bzw. Dozent f ¨ur das richtige h ¨alt.“ [Eh12, S.218] 4 Erfahrungen aus der Schulpraxis In den letzten Jahren hat sich in der Schule die Sprache Java gegen ¨uber beispielsweise (Objekt-)Pascal durchgesetzt. Java verlangt das Arbeiten mit Klassen. Die Technik der Objektorientierung und damit auch die Sprache Java ist zweifelsohne f ¨ur die Implementierung großer Programmsysteme sehr gut geeignet. Daraus kann abgeleitet werden, auch in der Schule mit diesen Ideen und Techniken der Praxis zu beginnen. Entsprechend formulieren Schubert und Schwill richtigerweise:”Die Einf ¨uhrung in die Informatik kann mit objektorientiertem Modellieren (OOM) und Programmieren (OOP) [. . . ] beginnen. Zwingend ist das nicht.“ [SS11, S.157] Eine derartige Entscheidung hat allerdings auch Nachteile. Klassen repr ¨asentieren Datenkapseln .”Programmsysteme, die mit Datenkapseln arbeiten, enthalten deshalb fast immer mehr Prozeduren als konventionelle Programmsysteme.“ [Po84, S.99] Gerade bei kleineren Programmen, die im Anfangsunterricht vermehrt auftreten, stellen diese oft einen Overhead dar. OO-Guidelines Diese Grundproblematik objektorientierter Systeme und zus ¨atzlich speziell f ¨ur Anf ¨anger schwer durchschaubare syntaktische Strukturen der Sprache Java verleiten K ¨olling und Rosenberg zu Vorschl ¨agen, wie ein Anfangsunterricht mit der Sprache Java erfolgversprechend sein k ¨onnte [KR01]. Der relative Overhead sei kleiner, je gr ¨oßer das System ist. Also folgern sie, daß der Unterricht mit einem großen System beginnen sollte. Einige dieser von K ¨olling und Rosenberg empfohlenen guidelines beziehen sich auf die Ideen der Objektorientierung (z.B.”use ’large’ projects“,”objects ﬁrst“ ), andere auf die Problematik der konkret verwendeten Sprache Java (z.B.”don’t start with ’main’“,”be careful with the user interface“ ). Es werden damit zwei v ¨ollig unterschiedliche didaktische Fragestellungen in diesen Vorschl ¨agen vermischt.Modularisierung im Informatikunterricht aus lernpsychologischer Perspektive 251ii “proceedings” — 2017/9/17 — 20:19 — page 252 — #252 ii i ii i6 Johannes Fischer und Arno Pasternak Umsetzung im Unterricht Wir haben uns gefragt, ob die sprachspeziﬁschen Aspekte von Java tats ¨achlich das Erlernen der Objektorientierung erschweren und haben in einem kleinen Unterrichtsprojekt von ca. 10 Stunden eine erste dahingehende Analyse versucht. In einem 12. Jahrgang einer Gesamtschule wurden zwei etwa gleich große Kurse eingerichtet (je ca. 15 Sch ¨uler). In einem Kurs wurde mit Java unterrichtet, in dem anderen Kurs mit der Scriptsprache Groovy7, die die sprachspeziﬁschen Probleme von Java teilweise umgehen l ¨asst. Wie weiter unten beschrieben wird, erwiesen sich hier die Sprachunterschiede aber nicht als problematisch. In beiden Kursen wurde ein Sch ¨ulerverwaltungsprogramm in der jeweiligen Sprache mit ca. 500 Zeilen verwendet. Entsprechend den Vorstellungen von K ¨olling und Rosenberg waren in diesem Programm mehrere Klassen enthalten, zumindest teilweise wurden mehrere Instanzen dieser Klassen verwendet. Die Sch ¨uler haben diesen Programmtext gelesen, getestet, kleine Ver ¨anderungen vorgenommen, neue Instanzen erzeugt und auch einzelne Operationen zielgerichtet ver ¨andert. Erwartungen Erwartet hatten wir, dass sich die Sch ¨ulerinnen und Sch ¨uler in der GroovyGruppe aufgrund der einfacheren Syntax leichter tun w ¨urden. Dies spielte allerdings in dieser Phase kaum eine Rolle, da das Programm als Ganzes vorlag und nur an einzelnen Stellen, die sich in Java und Groovy textuell kaum unterschieden, ver ¨andert wurde. Allerdings zeigte sich bei der Analyse eine andere, viel bedeutsamere Problematik. Das Ziel des Ansatzes von K ¨olling und Rosenberg ist es, dass die Lernenden durch das explorative Erarbeiten eines nicht zu kleinen Programmes die Vorteile des objektorientierten Vorgehens selbst erkennen und die Begrifﬂichkeiten anhand des Beispieles deutlich werden. Um dies zu ¨uberpr ¨ufen, fragten wir zu Beginn des Schuljahres und nach dieser Unterrichtsphase schriftlich die Sch ¨uler, was sie sich unter Begriffen wie beispielsweise Klasse undobjektorientierter Programmierung vorstellen. Es muss dabei angemerkt werden, dass die Begriffe im Lauf des Unterrichts bei der Analyse selbstverst ¨andlich erl ¨autert, erarbeitet und auch verschriftlicht wurden. Daher gingen wir davon aus, dass bei diesen rein reproduktiven Fragen zumindest die erlernten Deﬁnitionenen angegeben werden w ¨urden. Erste Ergebnissse Das Ergebnis hat uns v ¨ollig ¨uberrascht. Nicht eine einzige Antwort in beiden Gruppen war zielf ¨uhrend. Eine Anwort wie”Eine Klasse wird mit Attributen gef¨ullt“ kann dabei noch als Ansatz einer korrekten Idee angesehen werden, aber Antworten wie”Das ist das Programmieren mit Hilfe von Datenbanken“ oder”Unter objektorientierter Programmierung kann man mit speziellen Objekten programmieren“ waren h ¨auﬁger. Entsprechend der von uns gestellten Anspr ¨uche an den Lernzuwachs der Sch¨ulerinnen und Sch ¨uler war das Ergebnis vernichtend. Die Ideen des Konzepts der Modularisierung – hier mit der Technik der Objektorientierung realisiert – waren offensichtlich nicht erlernt und verstanden worden, sodass selbst eine einfache reproduktive Wiedergabe der Begriffe von den Sch ¨ulern nicht geleistet werden konnte. Da keine Vergleichsdaten aller Sch ¨uler wie in dieser Befragung von fr ¨uheren Kursen mit Java bzw. Groovy mit einem anderen didaktischen Vorgehen vorliegen, ist es nicht ausge7http://www.groovy-lang.org , letzter Zugriff: 6.1.2017252 Johannes Fischer, Arno Pasternakii “proceedings” — 2017/9/17 — 20:19 — page 253 — #253 ii i ii iModularisierung im Informatikunterricht aus lernpsychologischer Perspektive 7 schlossen, dass auch in der Vergangenheit keine besseren Ergebnisse erzielt worden sind. Dagegen spricht allerdings folgende Beobachtung: In der folgenden Klausur, an der allerdings nur sechs der insgesamt 28 Sch ¨ulerinnen und Sch ¨uler teilgenommen haben, wurden wie in vergleichbaren Klausuren der vergangenen Jahre diese Begriffe erneut erfragt. Diese Aufgabe ist normalerweise als reproduktive Aufgabe ein”Punktelieferant“ f ¨ur die Klausurteilnehmer. Bis auf eine L ¨osung waren die Antworten wieder nicht ausreichend. Die Kurse in den fr ¨uheren Jahren sind didaktisch mit deutlich kleineren Beispielen an die Thematik herangef ¨uhrt worden. Die Antworten der Sch ¨uler, die vor einem Jahr an der Klausur teilgenommen haben, waren deutlich besser. Da wir immerhin noch auf 8 der damals geschriebenen 22 Klausuren Zugriff hatten, konnten wir die Antworten an diesen Klausuren veriﬁzieren. Zus ¨atzlich liegen ¨ahnliche Daten aus einem Kurs des 11.(!) Jahrganges aus dem Jahre 2010 vor. Dieser Kurs hatte allerdings ein etwas anderes Curriculum (und wurde in (Objekt-)Pascal unterrichtet). Die Sch¨ulerantworten stellten den Lehrer im Gegensatz zu den Antworten der beiden Kurse im aktuellen Jahr im Wesentlichen zufrieden. Spekulativer Vergleich dieser Ergebnisse Es handelt sich bei diesen Zahlen nicht um eine systematische Untersuchung. Die Ergebnisse und der Vergleich mit fr ¨uheren Kursen zeigen trotzdem, dass die Sch ¨ulerinnen und Sch ¨uler beim Vorgehen nach K ¨olling und Rosenberg die Modularisierung und deren konkrete Umsetzung mit der Objektorientierung nicht verstanden haben. Selbst die unter Groovy niedrigere Syntax-H ¨urde konnte dies nicht verhindern. Die Sch ¨ulerinnen und Sch ¨uler aus den Kursen vor einem Jahr und dem Jahre 2010 konnten die Begriffe der OOP im Wesentlichen wiedergeben. Aufgrund der schwierigen Vergleichbarkeit der Materialien und der unterschiedlichen Kursverl¨aufe d ¨urfen diese Ergebnisse nicht ¨uberbewertet werden. Deutlich wird aber, dass dringender Bedarf nach empirischen Untersuchungen besteht. 5 Lernpsychologische Sicht Die aus fachlicher Sicht ¨uberzeugende Position von K ¨olling und Rosenberg hatte uns angeregt, in diesem Schuljahr nach dieser Konzeption vorzugehen. Das Ergebnis war ern ¨uchternd. Es erscheint uns naheliegend, dass hier lernpsychologische Gr ¨unde f ¨ur das Scheitern verantwortlich sind. In den letzten ca. zwanzig Jahren hat es erhebliche Fortschritte in der Lernpsychologie gegeben. Mit diesen ist es m ¨oglich, die Funktionsweise des Lernens im menschlichen Gehirn zu verstehen. Eine wesentliche Theorie stellt die Cognitive Load Theorie (CLT) [PRS03] dar, die in inzwischen vielf ¨altigen Untersuchungen best ¨atigt wurde. Nach dieser Theorie l¨asst sich die Arbeitsweise des Gehirns als das Zusammenspiel zwischen einem Arbeitsged¨achtnis und einem Langzeitged ¨achtnis vorstellen. Das nur gering belastbare Arbeitsged¨achtnis nutzt dabei das Langzeitged ¨achtnis als Wissensund Kompetenzspeicher. Es lassen sich aber nur wenige neue Eindr ¨ucke mit diesem Speicher gleichzeitig verarbeiten. Daher ist es sinnvoll, in einen Lernprozess zu einem bestimmten Zeitpunkt nur we-Modularisierung im Informatikunterricht aus lernpsychologischer Perspektive 253ii “proceedings” — 2017/9/17 — 20:19 — page 254 — #254 ii i ii i8 Johannes Fischer und Arno Pasternak nige neue Elemente einzugliedern. Die empirischen Untersuchungen von Hattie [HBZ13] und die neurowissenschaftlichen Begr ¨undungen von ihm und Yates best¨atigen dies auf eindrucksvolle Weise [Ha15, S.107ff]. F ¨ur die Informatik bedeutet dies, dass gerade im Anfangsunterricht das bottom-up -Prinzip oft dem top-down -Prinzip vorzuziehen ist. Mit diesen neurowissenschaftlichen ¨Uberlegungen k ¨onnen die Theorien von Piaget und van der Hiele aus der Mitte des letzten Jahrhunderts begr ¨undet werden [PI93, HHG78]. Entsprechend dieser Erkenntnisse hat die Gruppe der Neo-Piagisten wie beispielsweise Lister [Li16] diese Theorien weiterentwickelt. F ¨ur den Informatikunterricht speziell folgertLister [Li16, S.9ff] ein intensives Arbeiten an und mit dem Quellcode eines Programmes. Entsprechendes wurde auch einige Jahre zuvor von Shaffer, Doub undTuovinen aus der CLT-Theorie gefolgert [Sh03]. Eigene Untersuchungen aus dem Anfangsunterricht mit einer Programmiersprache best ¨atigen dies [Pa16]. Nach der CLT-Theorie ist das aus Sicht der Objektorientierung sinnvolle Vorgehen mit dem Erarbeiten eines gr ¨oßeren Softwareprojektes als Einf ¨uhrung in die Modellierung und Programmierung eine ¨Uberlast des lernenden Gehirns und muss daher im Allgemeinen scheitern. Es ist daher nach einem anderen Vorgehen zu suchen. 6 Eine m ¨ogliche Alternative Datenabstraktion bleibt das Ziel. Die objektorientierte Programmierung ist eine M ¨oglichkeit, die offensichtlich im Unterricht der allgemeinbildenden Schulen nicht auf jedem Weg — wie gezeigt — zum Ziel f ¨uhrt. Auch wenn die OOM und die OOP als programmiertechnisches Vorgehen angestebt wird, ist es sinnvoll, den Weg dorthin anders zu gestalten. Das l ¨asst sich nur mit Programmiersprachen realisieren, die verschiedene Umsetzungen der Datenabstraktion erm ¨oglichen. Gut ist es, wenn die verschiedenen Techniken in der Darstellung sich nicht groß unterscheiden, sodass ein Wechsel der Darstellung aus didaktischer Sicht keine unn ¨otigen syntaktischen Schwierigkeiten bereitet. Hierzu sind allerdings noch empirische Untersuchungen n ¨otig. Module und Klassen in einer geeigneten Sprache Im Folgenden wird ein Beispiel bez¨uglich der Datenabstraktion in der Programmiersprache Tcl[Fl12] vorgestellt. Es geht hier nicht um diese konkrete Sprache, sondern um das Prinzip. In Tclsind alle Formen der Datenabstraktion m ¨oglich. Die Nutzung der entsprechenden Techniken weist in der Darstellung kaum Unterschiede auf. Als Beispiel diene das Einf ¨ugen in bin¨are B ¨aume . Ohne Nutzung von Modulen bzw. mit importierten Modulen lautet der Aufruf: fuege ein mein baum $info . Bei der Nutzung von Klassen ¨andert sich beim Aufruf mein baum fuege ein $info nur die Reihenfolge in der Anweisung. Bei Verwendung einer abstrakten Datenstruktur statt eines abstrakten Datentypes vereinfacht sich die Anweisung sogar noch: fuege ein $info . Die fast gleichartige Darstellung bei der Verwendung von Modulen oder Klassen f ¨ur abstrakte Typen macht deutlich, dass das Denken in diesen Strukturen sich programmiersprachlich ohne große Br ¨uche in der jeweils gew ¨unschten Form umsetzen l ¨asst. Das254 Johannes Fischer, Arno Pasternakii “proceedings” — 2017/9/17 — 20:19 — page 255 — #255 ii i ii iModularisierung im Informatikunterricht aus lernpsychologischer Perspektive 9 erm¨oglicht die Umsetzung einer abstrakten Struktur in die technische Form einer Programmiersprache, die zu dem unterrichtlichen Zeitpunkt entsprechend dem Stand der Sch ¨uler angemessen ist und kann eine ¨Uberforderung an technischem und begrifﬂichem Overhead im Anfangsunterricht verhindern helfen. Auf diese Weise k ¨onnen die Sch ¨ulerinnen und Sch¨uler sanft ohne intellektuelle ¨Uberforderung von der Strukturierung der Abl ¨aufe mit Prozeduren ¨uber die Gestaltung von Modulen bis zur objektorientierter Programmierung gef¨uhrt werden und damit die Gedanken und Ideen der Modularisierung auf vielf ¨altige Weise erfahren und erlernen. Das erfordert allerdings die Auswahl einer Programmiersprache f ¨ur den Unterricht, die verschiedene Darstellungsm ¨oglichkeiten gleichberechtigt erm¨oglicht. Mit einem derartigen Vorgehen wird auch einem weiteren wichtigen Prinzip gefolgt, das nicht nur, aber auch in der Informatik G ¨ultigkeit besitzt, das Kiss-Prinzip [Ri95]: Keep it small and simple . Eine Hoffnung aus der Anwendung dieses Prinzip in der Modellierung und vor allem in der Umsetzung in eine konkrete Programmiersprache ist, die H ¨urden f ¨ur die Sch ¨uler so niedrig wie m ¨oglich zu setzen, sodass diese auch außerhalb des Unterrichts und im sp ¨ateren Leben f ¨ur sich selbst nicht ausschließen, ein konkretes Problem durch ein informatisches Vorgehen selber programmieren und l ¨osen zu wollen. 7 Zusammenfassung Ein wesentliches”Denkwerkzeug“ der Informatik ist die Modularisierung , die mit verschiedenen Techniken durchgef ¨uhrt werden kann. Eine davon ist die objektorientierte Modellierung und Programmierung . Diese hat allerdings oft einen erheblichen Overhead zur Folge. Bei einem Vergleich von Sch ¨ulerleistungen verschiedener Jahrg ¨ange zeigte sich, dass vor ein Vorgehen nach den”guidelines“ von K ¨olling und Rosenberg vielen Sch ¨ulerinnen und Sch¨ulern große Schwierigkeiten macht. Es ist daher zu ¨uberlegen, ob es zweckm ¨aßig ist, den Schulunterricht nicht von Beginn an mit objektorientierten Sprachen zu beginnen. Im Rahmen der didaktischen Reduktion k ¨onnte ein Vorgehen, dass den Aufbau der Elemente der Modularisierung stufenweise erm ¨oglicht, geeigneter sein. Dieser Weg realisiert die Ideen, wie sie von Kortenkamp u.a. unter dem Begriff genetischer Unterricht [Ko09] beschrieben sind. Ein solches Vorgehen verlangt eine didaktisch begr ¨undete Auswahl der Programmiersprache, mit der diese Ideen sukzessive im Unterricht vermittelt werden. Literaturverzeichnis [B¨o01] B¨osz¨orm´enyi, L ´aszl´o: Java f ¨ur Anf ¨anger? LOG IN, (1/2001):14–19, 2001. [CS03] Claus, Volker; Schwill, Andreas: Duden Informatik. Dudenverlag, Mannheim, 2003. [Eh12] Ehlert, Albrecht: Empirische Studie: Unterschiede im Lernerfolg und Unterschiede im subjektiven Erleben des Unterrichts von Sch ¨ulerinnen und Sch ¨ulern im InformatikAnfangsunterricht (11. Klasse Beruﬂiches Gymnasium) in Abh ¨angigkeit von der zeitlichen Reihenfolge der Themen (OOP-First und OOP-Later) . Dissertation, Freie Universit ¨at Berlin, Berlin, 2012.Modularisierung im Informatikunterricht aus lernpsychologischer Perspektive 255ii “proceedings” — 2017/9/17 — 20:19 — page 256 — #256 ii i ii i10 Johannes Fischer und Arno Pasternak [Fl12] Flynt, Clif: Tcl/Tk: A Developer’s Guide. The Morgan Kaufmann Series in Software Engineering and Programming. Amsterdam, 2012. [Ha15] Hattie, John; Yates, Gregory C.R.; Beywl, Wolfgang; Zierer, Klaus: Lernen sichtbar machen aus psychologischer Perspektive. Schneider Verlag GmbH, Baltmannsweiler, 2015. [HBZ13] Hattie, John; Beywl, Wolfgang; Zierer, Klaus: Lernen sichtbar machen. Schneider Verlag GmbH, Baltmannsweiler, 2013. [He96] Heymann, Hans Werner: Allgemeinbildung und Mathematik. Studien zur Schulp ¨adagogik und Didaktik ; 13. Beltz, Weinheim [u.a.], 1996. [HHG78] Hiele, Pierre Marie van; Hiele-Geldorf, Dina van: Die Bedeutung der Denkebenen im Unterrichtssystem nach der deduktiven Methode. Wege der Forschung. Wissenschaftliche Buchgesellschaft, Darmstadt, 1978. [KL14] Kempe, Thomas; L ¨ohr, Annika: Informatik 1. Sch ¨oningh, Paderborn, 2014. [Ko09] Kortenkamp, Ulrich; Modrow, Eckart; Oldenburg, Reinhard; Poloczek, J ¨urgen; Rabel, Magnus: Objektorientierte Modellierung aber wann und wie? LOG IN, (160/161):41–47, 2009. [KR01] K¨olling, Michael; Rosenberg, John: Guidelines for Teaching Object Orientation with Java. In: Proceedings of the 6th Annual Conference on Innovation and Technology in Computer Science Education. ITiCSE ’01, ACM, New York, NY, USA, S. 33–36, 2001. [KT10] Kempe, Thomas; Tepaße, David: Informatik 1 * Softwareentwicklung mit Greenfoot und BlueJ. Sch ¨oningh, Paderborn, 2010. [Li16] Lister, Raymond: Toward a Developmental Epistemology of Computer Programming. In: Proceedings of the 11th Workshop in Primary and Secondary Computing Education. WiPSCE 2016, ACM, New York, NY, USA, S. 5–16, 2016. [MS13] MSW NRW: Kernlehrplan f ¨ur die Sekundarstufe II, Gymnasium/Gesamtschule in Nordrhein-Westfalen, Informatik. D ¨usseldorf, 2013. [Pa13] Pasternak, Arno: Fachund bildungswissenschaftliche Grundlagen f ¨ur den Informatikunterricht in der Sekundarstufe I. Dissertation, Westf ¨alische Wilhelms-Universit ¨at, M ¨unster, 2013. [Pa16] Pasternak, Arno: Contextualized Teaching in the Lower Secondary EducationLong-term Evaluation of a CS Course from Grade 6 to 10. In: Proceedings of the 47th ACM Technical Symposium on Computing Science Education. SIGCSE ’16, ACM, New York, NY, USA, S. 657–662, 2016. [PI93] Piaget, Jean; Inhelder, B ¨arbel: Die Psychologie des Kindes. dtv-Taschenb ¨ucher dialog und praxis. Dt. Taschenbuch-Verlag, Stuttgart, 1993. [Po84] Pomberger, Gustav: Softwaretechnik und Modula 2. Hanser Fachbuchverlag, M ¨unchen, 1984. [PRS03] Paas, Fred; Renkl, Alexander; Sweller, John: Cognitive Load Theory and Instructional Design: Recent Developments. Educational Psychologist, 38(1):1–4, 2003. [Ri95] Rich, Ben R.: Clarence Leonard (Kelly) Johnson, A Biographical Memoir. National Academies Press, Washington DC, USA, 1995. [Sh03] Shaffer, Dale; Doube, Wendy; Tuovinen, Juhani; Sturt, Charles; Wagga, Wagga; Wales, New South: In (Petre, M.; Budgen, D., Hrsg.): Proceedings of the Joint Conference EASE & PPIG 2003. 2003. [SS11] Schubert, Sigrid; Schwill, Andreas: Didaktik der Informatik. Spektrum Akademischer Verlag, Heidelberg, 2. Auﬂage, 2011. [Wi91] Wirth, Niklaus: Die Dinge beim Namen nennen. In: Erstes European Software Festival. Chip – Vogel-Verlag, W ¨urzburg, S. 60–64, 1991. [Wi03] Witten, Helmut: Allgemeinbildender Informatikunterricht? Ein neuer Blick auf H. W. Heymanns Aufgaben allgemeinbildender Schulen. INFOS 2003, GI, Bonn, S. 59–75, 2003. [Wi06] Wing, Jeannette M.: Computational Thinking. Commun. of the ACM, 49(3):33–35, 2006. [Wi08] Wing, Jeannette M.: Computational thinking and thinking about computing. Philosophical Transactions of The Royal Society, (366):3717–3725, 2008.256 Johannes Fischer, Arno Pasternakii “proceedings” — 2017/9/17 — 20:19 — page 257 — #257 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 11 Von Eingebetteten Systemen zu Physical Computing: Grundlagen für Informatikunterricht in der digitalen Welt Mareen Przybylla1, Ralf Romeike2 Abstract: Der digitale Wandel basiert neben der zunehmenden Durchdringung des täglichen Lebens mit digitalen Systemen auch auf der parallel stattﬁndenden Entwicklung von untereinander vernetzten allgegenwärtigen, sogenannten cyber-physischen Systemen. Diese sind in der Lage, mit Sensorik ihre Umwelt zu erfassen und mittels Aktorik in die menschliche Erfahrungswelt zurückzuwirken. Für die Schulinformatik wird das Potenzial dieser Innovationen häuﬁg noch unzureichend umgesetzt, was nicht zuletzt in Ermangelung eines geeigneten fachlichen Rahmens und daraus resultierend fehlender Lehr-Lern-Materialien begründet ist. Dieser Beitrag untersucht daher die fachlichen Grundlagen des Themenkomplexes und identiﬁziert für die Schulinformatik relevante Inhalte und stellt sie strukturiert dar. Anhand einer interaktiven Modellstadt wird exemplarisch gezeigt, wie die Inhalte im Informatikunterricht verankert werden können. Keywords: Eingebettete Systeme; Physical Computing; Fachstruktur; Unterrichtsbeispiel 1 Einleitung Immer weniger technische Entwicklungen der heutigen Zeit nutzen klassische Computer mit Bildschirm, Tastatur und Maus. Wir sind vorwiegend von mobilen Geräten und reaktiven Systemen umgeben, die anhand von Sensoren und Aktoren kontinuierlich mit ihrer Umwelt kommunizieren. Mikrocontroller dominieren in Gestalt von eingebetteten Systemen unseren Alltag. Im Schulunterricht werden hingegen meist klassische Desktop-PCs als Beispiel herangezogen, die nur einen Bruchteil aller Informatiksysteme ausmachen. Der Umgang mit eingebetteten Systemen erfordert neues Wissen und neue Kompetenzen, die im traditionellen Unterricht nicht erworben werden. Damit Schüler am gesellschaftlichen Diskurs teilhaben, der Medienberichterstattung folgen und informiert Urteile fällen können, ist es notwendig, die relevanten Aspekte im Unterricht zu thematisieren. Um ihnen darüber hinaus einen produktiven und kreativ-gestalterischen Umgang mit modernen Informatiksystemen zu ermöglichen, muss Unterricht sich an den Gegebenheiten der realen Welt orientieren und entsprechende Kompetenzen ausbilden. Zwar gibt es bereits zahlreiche Beispiele zur Verwendung von Mikrocontrollern im Unterricht, jedoch werden diese häuﬁg rein als Werkzeug und nicht als Unterrichtsgegenstand thematisiert. Hierzu fehlt bisher ein geeigneter fachlicher Rahmen. Dieser Beitrag untersucht daher Literatur der Fachwissenschaft mit 1Universität Potsdam, Didaktik der Informatik, Augut-Bebel-Straße 89, 14482 Potsdam przybyll@uni-potsdam.de 2Friedrich-Alexander-Universität Erlangen-Nürnberg, Didaktik der Informatik, Martensstraße 3, 91058 Erlangen, ralf.romeike@fau.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 257ii “proceedings” — 2017/9/17 — 20:19 — page 258 — #258 ii i ii i12 Mareen Przybylla, Ralf Romeike dem Ziel, für den Informatikunterricht relevante Inhalte zu extrahieren und geeignet zu strukturieren. Die Ergebnisse können dann genutzt werden, um in diesem Bereich angesiedelten Unterricht zu strukturieren, geeignete Unterrichtsmethoden zu etablieren oder Lernund Lehrmaterialien zu erstellen, die auf die entsprechende Zielgruppe zugeschnitten sind. Anhand einzelner Beispiele aus einem Projekt zur Gestaltung einer interaktiven Modellstadt wird schließlich gezeigt, wie sich ausgewählte Probleme dieses Fachbereichs im Rahmen von Physical Computing im Informatikunterricht thematisieren lassen. 2 Eingebettete Systeme in der informatischen Schulbildung Unter anderem durch die immer stärkere Präsenz unzähliger Mikrocontroller in autonomen Fahrzeugen, „Smart“-Entwicklungen und Alltagsgegenständen sind eingebettete Systeme seit einiger Zeit einer der wichtigsten und innovativsten Forschungsund Entwicklungsschwerpunkte der Informatik. Auch die Schulinformatik beschäftigt sich grundsätzlich seit langem mit diesem Themenbereich. Baumann zeigte beispielsweise in einem historischen Abriss zu Entwicklungen in der Schulinformatik im Forschungsgebiet Eingebettete Systeme , dass seit etwa 30 Jahren regelmäßig Artikel zu den Themen Messen – Steuern – Regeln , Prozessdatenverarbeitung undAutomatisierung verö entlicht wurden [Ba11]. Im kürzlich erschienenen LOGIN-Themenheft „Eingebettete Systeme“ [Fa16] werden zahlreiche Unterrichtsbeispiele und verschiedenste Ansätze und Werkzeuge für den Unterricht vorgestellt. Aus fachdidaktischer Sicht analysiert z. B. Stechert ausführlich den Informatiksystembegri und schlussfolgert, dass es zur Kompetenzentwicklung in diesem Bereich nötig sei, „Informatiksysteme in ihrer Einheit aus Hardware, Software und Vernetzung anhand ihres nach außen sichtbaren Verhaltens, der inneren Struktur und Implementierungsaspekten zu analysieren“ und typische Repräsentanten von Informatiksystemen mit Schülern zu untersuchen und sie zu erklären [St09]. In den GI-Bildungsstandards Informatik für die Sekundarstufe II wird empfohlen, zur Entwicklung von Informatiksystemen maschinell verarbeitbare Sachverhalte der realen Welt zu identiﬁzieren und modellieren. Als typische Einsatzbereiche werden u. a. Robotik ,Prozesssteuerung undProzessregelung genannt [Ar16]. Auch in den neueren Curricula einiger Bundesländer wird diese Entwicklung ersichtlich. So empﬁehlt der Berlin-Brandenburger Rahmenlehrplan beispielsweise die Realisierung eines eigenen Physical-Computing-Projektes und die Verwendung externer Hardware innerhalb des Themenfeldes Informatiksysteme [BM15]. Im Wahlthemenfeld Physical Computing wird die Charakterisierung eingebetteter Systeme , die Verarbeitung elektrischer Größen oder auch die Verwendung von Mikrocontrollern in verschiedenen Kontexten verlangt [BM15]. Lehrkräfte zeigen immer wieder reges Interesse an Fortbildungen, Bausätzen und Unterrichtsmaterialien. Verfügbare Ressourcen beschränken sich jedoch häuﬁg auf die Verwendung von Werkzeugen zur motivierenderen Gestaltung des traditionellen Unterrichts und gehen nur selten über die Grundlagen der Sensor-Aktor-Ansteuerung hinaus (z. B. [Ba11; NW16; PR12]), sodass Phänomene des Ubiquitous Computing mit den bisherigen Ansätzen im Unterricht nicht ausreichend erklärt werden.258 Mareen Przybylla, Ralf Romeikeii “proceedings” — 2017/9/17 — 20:19 — page 259 — #259 ii i ii iVon Eingebetteten Systemen zu Physical Computing 13 3 Phänomene der digitalen Welt: Ubiquitous Computing Informatiksysteme entwickelten sich in den letzten Jahrzehnten immer mehr entsprechend der Vision des Ubiquitous-Computing -Pioniers Mark Weiser, der bereits Anfang der 1990er Jahre allgegenwärtige, e  ziente und gleichzeitig unsichtbare Computer vorhersagte [We93]. Diese Vision ist durch entsprechende Technologien heute alltäglich und wird durch das Internet der Dinge (engl. Internet of Things, IoT) und Internet von Allem (engl. Internet of Everything, IoE) noch ausgeweitet. Im IoT werden „Dinge“, die eingebettete Systeme enthalten, untereinander und mit Diensten im Internet vernetzt. Geräte und Maschinen erfassen mit Sensorik ihre Kontexte und übermitteln diese Daten. Insbesondere durch den Zusammenﬂuss der Daten vieler Dinge entstehen neue Möglichkeiten der Informationsgewinnung, die physikalische Welt verschmilzt mit der virtuellen. Für die Industrie ist dies vor allem im Bereich intelligenter Maschinen von Bedeutung, aber auch in der Heimanwendung ﬁnden sich Beispiele: Autos, Haushaltsgeräte oder beliebige Einrichtungsgegenstände können mit Diensten aus dem Internet verknüpft werden. Die Daten werden beispielsweise zur Fahrzeugnavigation, automatisierten Ersatzteilbestellung oder Marktanalyse genutzt. Die Einbindung solcher Dienste ermöglicht schließlich dank Echtzeitanalysen, Einﬂuss auf die reale Welt zu nehmen. Durch das stetige Anwachsen der Informationsvielfalt im Internet und über das Vernetzen der Dinge mit Personen und Prozessen, wird aus dem IoT immer mehr das IoE [BHV14]. Um hierzu inhaltlich fundierten Unterricht anbieten zu können, bedarf es einer fachlichen Klärung unter didaktischen Gesichtspunkten. Die Sichtung von Lehrund Lernmaterialien zu den genannten Themen zeigte, dass es eine große Fülle an Lehrbüchern der Fachwissenschaft gibt, die jedoch für eine gänzlich andere Zielgruppe konzipiert worden sind (oft Studierende der Ingenieurswissenschaften und Informatik, Hardund Software-Entwickler in der Praxis). Diese können nicht unmittelbar für den allgemeinbildenden, wissenschaftspropädeutischen Einsatz im Schulunterricht genutzt werden. Es stellt sich die Frage, wie die Fachstruktur zu beschreiben ist, sodass ihre zentralen Inhalte im Unterricht adäquat vermittelt werden können. Daher wurden vorhandene Lehrbücher mit dem Ziel analysiert, die Grundlagen herauszuarbeiten und Inhalte für die Gestaltung entsprechender Unterrichtseinheiten im Informatikunterricht zu extrahieren und geeignet zu strukturieren. Hierzu wurde in einem ersten Analyseschritt aus der Literatur zunächst zusammengetragen, welche informatischen Inhalte zu den jeweiligen Fachgebieten allgemein thematisiert werden. Im zweiten Schritt wurde der daraus entstandene Katalog hinsichtlich zentraler Aspekte analysiert, also solcher Inhalte, Methoden und Konzepte, die in allen Werken als charakteristische Merkmale des betre  enden Gebietes beschrieben und für das Verständnis erforderlich sind. Diese wurden auf ihre wesentlichen Eigenschaften reduziert. Im letzten Schritt wurden Gemeinsamkeiten zusammengefasst. In den folgenden Abschnitten werden die einzelnen Forschungsgebiete näher charakterisiert. 3.1 Eingebettete Systeme Eingebettete Systeme (ES) vereinen Hardund Softwarekomponenten, werden im Gegensatz zu Mehrzweckcomputern in größere Produkte eingebettet und erfüllen in der Regel genauVon Eingebetteten Systemen zu Physical Computing 259ii “proceedings” — 2017/9/17 — 20:19 — page 260 — #260 ii i ii i14 Mareen Przybylla, Ralf Romeike einen Zweck. Sie sind meist mit physischen Prozessen in ihrer Umgebung durch Sensoren und Aktoren verbunden und erfordern oft keine menschlichen Eingaben (vgl. [VG02]). Beispiele für ES ﬁnden sich in allen denkbaren Bereichen unseres Lebens: im Straßenund Bahnverkehr, in medizinischen Geräten oder im „Smart Home“. Der Verband BITKOM deﬁniert ES insbesondere unter Einbezug ihres typischen Zwecks, Systeme zu steuern, regeln oder überwachen. ES erfüllen vordeﬁnierte Aufgaben, oft unter Echtzeit-Anforderungen [BI10]. Sensorund Aktor-Schnittstellen ermöglichen es, Veränderungen in der Umwelt zu erfassen und Änderungen an der Umwelt vorzunehmen. Im Gegensatz zu transformationellen Systemen, die Eingabe, Verarbeitung und Ausgabe linear durchlaufen und dann ihr Programm beenden, laufen ES kontinuierlich und interagieren stetig mit ihrer Umgebung. Typische Hardware für den Informatikunterricht stellen Mikrocontroller, wie z. B. Arduino dar. 3.2 Robotik Ein spezielles Anwendungsgebiet von ES ist die Robotik. Roboter sind insbesondere autonom agierende Maschinen, die in einen Bewegungsapparat eingebunden sind und beispielsweise Arme, Beine oder Räder zur Fortbewegung oder für Greiftätigkeiten nutzen. Sie unterstützen und ersetzen Menschen durch physische Aktivität beim Ausführen konkreter Aufgaben und können ihre Umwelt modiﬁzieren [Si10]. Hertzberg et al. betonen zudem die mit der Autonomie von mobilen Robotern verbundene Schwierigkeit, vorhersehbare Programme zu erstellen. Dadurch, dass all ihre Aktionen von ihrer Umgebung abhängig sind, die erst zur Ausführungszeit bekannt ist, müssen Roboter diese mit Sensoren erfassen, die Daten bewerten und passende Handlungsweisen initiieren [HLN12]. Robotik befasst sich eingehend mit Themen wie Kinetik, mechanischen Bewegungsabläufen, Wahrnehmung, Navigation und Hindernisvermeidung. Roboter können auch dort eingesetzt werden, wo es für Menschen schwierig ist zu arbeiten, z. B. im All, in der Wüste oder im Meer. Sie werden zur E  zienzsteigerung in der Lebensmittelund Güterherstellung, Landund Forstwirtschaft oder Medizintechnik verwendet. Immer häuﬁger ﬁnden sie sich beispielsweise in Form von Staubsaugeroder Bodenwischrobotern auch in Haushalten wieder. Unterrichtsbeispiele mit LEGO Mindstorms sind überwiegend der Robotik zuzuordnen. 3.3 Cyber-Physische Systeme Cyber-physische Systeme (CPS) haben viele Gemeinsamkeiten mit ES und werden in der Literatur oft synonym behandelt. In CPS überwachen und steuern untereinander und mit dem Internet vernetzte ES physische Prozesse. Dies geschieht üblicherweise mit Regelungstechnik, indem Daten aus der Umwelt die Berechnungsprozesse beeinﬂussen und umgekehrt. Neben der physischen Umgebung (z. B. mechanische Teile, chemische Prozesse, menschliche Bediener, also die direkte Umgebung des Systems) bestehen CPS aus Rechnerplattformen, die neben den Mikrocontrollern auch Sensorik und Aktorik bereitstellen und Netzwerkkomponenten, die die Kommunikation der Teilsysteme untereinander und über das Internet ermöglichen [LS14].260 Mareen Przybylla, Ralf Romeikeii “proceedings” — 2017/9/17 — 20:19 — page 261 — #261 ii i ii iVon Eingebetteten Systemen zu Physical Computing 15 3.4 Gemeinsamkeiten von ES, Robotern und CPS Obwohl die beschriebenen Systemarten jeweils in verschiedene Richtungen spezialisiert sind, gibt es eine Reihe an Eigenschaften und Anforderungen, die übergeordnet als zentral angesehen werden können und aus denen sich zentrale Konzepte und Ideen ableiten lassen. Grundsätzlich werden in allen Systemen Sensoren verwendet, um Eingangssignale auszuwerten, zu verarbeiten und entsprechend der darauf basierenden und durch Software bestimmten Entscheidungen Aktoren angesteuert, um etwas zu kontrollieren, zu steuern, zu bewegen – also ein Signal in die Außenwelt zu geben. Man unterscheidet hinsichtlich der Datenerfassung allgemein zwischen zeitkontinuierlichen Systemen , die, meist als Regelungssysteme, ununterbrochen Signalströme verarbeiten und diskreten Systemen , die ereignisoder zeitgesteuert diskrete Signale verarbeiten. Je nach Anwendungsbereich müssen ES, Roboter und CPS strengen Anforderungen genügen, wie beispielsweise Echtzeit-Anforderungen , innerhalb eines vordeﬁnierten Zeitraums korrekte Ergebnisse zu liefern [VG02, pp. 69-74]. Dies ist vor allem in sicherheitskritischen Bereichen von Bedeutung, wie in automatisierten Zugsystemen oder in der computergestützten Chirurgie. Bei Echtzeitsystemen wird zwischen weicher ,moderater undharter Echtzeit unterschieden, also danach, ob ein Überschreiten einer Zeitschranke als Systemfehler gewertet wird oder in gewissem Maß tolerabel ist. Während im ersten Fall ein Versagen katastrophale Folgen haben kann, beeinﬂusst es in letzterem lediglich die Qualität des Systems. Die Laufzeit kann daher kritisch werden und Einﬂuss auf die Korrektheit nehmen, statt nur auf Performanz oder Bedienkomfort [LS14]. Die meisten ES und CPS lassen die Ausgabe eines physischen Systems einer gegebenen Referenzeingabe folgen (z. B. Thermostat). Im deutschsprachigen Raum werden hierbei weiter Steuern und Regeln unterschieden: Im Steuersystem wird z. B. das Heizungsventil anhand der Temperatureingabe 22 °C entsprechend der Berechnung für die Referenzeingabe geö  net. In Regelungssystemen wird entsprechend der gemessenen Realtemperatur nachreguliert, sollte die erreichte Temperatur nicht 22 °C betragen. Solche Systeme sollen sich sinnvoll verhalten und die Referenzeingabe auch bei Rauschen, Modellfehlern oder Störungen verfolgen. Auch hier gibt es wieder spezielle Anforderungen (vgl. [LS14; VG02]): • Stabilität: Ausgangssignale sollen bei gleichbleibenden Eingangssignalen ihre Werte möglichst nicht verändern • Performanz: gewünschte Ausgabe wird möglichst exakt in möglichst kurzer Zeit an Referenzeingabe angepasst • Störungsabwehr : Minimaler Einﬂuss von Störungen auf das System • Robustheit: Minimaler Einﬂuss von Modellfehlern auf Stabilität und Performanz In aller Regel unterliegen ES, Roboter und CPS in der Entwicklung strengen Vorgaben (sogenannten Entwurfsmetriken ) bezüglich Kosten ,Stromverbrauch ,Formfaktor undPerformanz . Auch die Entwicklungszeit spielt in der Wirtschaft eine große Rolle. Unterschieden wird hierbei zwischen Time-to-Prototype (TTP) undTime-to-Market (TTM) , die häuﬁg ausschlaggebend für den Erfolg oder Misserfolg eines Produktes sind. Alle genanntenVon Eingebetteten Systemen zu Physical Computing 261ii “proceedings” — 2017/9/17 — 20:19 — page 262 — #262 ii i ii i16 Mareen Przybylla, Ralf Romeike Metriken stehen gegenseitig in Konkurrenz [VG02]. So hat erhöhte Performanz z. B. oft auch einen höheren Stromverbrauch und damit sinkende Energiee  zienz zur Folge. Der Entwurf von ES, CPS und Robotern bringt eine Reihe an Problemstellungen mit sich, aus denen sich typische Methoden und Konzepte zur Problemlösung ableiten lassen. Dazu gehören u. a. Nebenläuﬁgkeit ,Trade-O  sundHeterogenität : • Nebenläuﬁgkeit: Prozesse in der realen, physischen Welt ﬁnden parallel statt, müssen aber in einer sequentiellen Semantik abgebildet werden. Daher werden Konzepte wie Interrupts ,Multitasking oder Semaphore genutzt, um beispielsweise Nachrichtenaustausch zu ermöglichen und Deadlocks zu vermeiden [LS14]. • Trade-O  s:Es muss bei der Gestaltung solcher Systeme abgewogen werden zwischen schnell berechneten, aber weniger genauen und langsamer berechneten, aber akkuraten Ergebnissen [Wo09]. • Heterogenität: ES, Roboter und insbesondere CPS sind schwieriger zu analysieren und entwerfen als homogene Systeme, da sie neben der Kombination aus Netzwerkkommunikation und der eigentlichen Berechnung zusätzlich dynamische, physische Prozesse einbeziehen, die nie vollumfänglich vorhersehbar sind [LS14]. 3.5 Zusammenfassung der Fachstruktur Es zeigt sich, dass die beschriebenen Forschungsgebiete stark verzahnt sind und dass das Verständnis bestimmter Inhalte und Konzepte Voraussetzung ist, um andere Gebiete zu erschließen. Da sie die fachliche Grundlage für das gesamte Fachgebiet bilden, sollten die vorgestellten Eigenschaften, Anforderungen und Problemstellungen sowie daraus resultierende Methoden und Konzepte eingebetteter Systeme auch im Informatikunterricht thematisiert werden. Die in Abb. 1 dargestellte Struktur des Fachgebietes verortet die einzelnen Forschungsgebiete im größeren Zusammenhang und stellt ihre Unterscheidungsmerkmale dar. Neben den oben beschriebenen Bereichen gibt es noch zahlreiche weitere Technologien im Kontext der Mensch-Maschine-Interaktion , beispielsweise Interaktive Systeme ,Wearable Computer oder auch Elektronische Textilien , die sich aus weniger technischen Perspektiven mit dem Gegenstandsbereich eingebetteter Systeme auseinandersetzen. 4 Fachdidaktische Aufarbeitung Die vorgestellte Struktur kann herangezogen werden, um notwendige Vorkenntnisse der Schüler und Zusammenhänge zwischen den Teilgebieten herstellen und sichern zu können. Zentrale Inhalte und Konzepte eingebetteter Systeme werden zur Entwicklung verschiedenster interaktiver Systeme benötigt, sodass je nach Zielgruppe und Interessen unterschiedliche Themengebiete mit verschiedenen Schwerpunkten als Kontexte im Unterricht genutzt werden können. Auf diese Weise können Kompetenzen zur Analyse, Modellierung und Umsetzung von ES schrittweise entwickelt werden. Das Gestalten eingebetteter Systeme stellt zunächst262 Mareen Przybylla, Ralf Romeikeii “proceedings” — 2017/9/17 — 20:19 — page 263 — #263 ii i ii i Abb. 1: Überblick über die verschiedenen Forschungsgebiete im Bereich eingebetteter Systeme eine große Herausforderung dar, die die Beachtung und Bearbeitung zahlreicher Teilaspekte beinhaltet. Daher ist es wichtig, den Lernenden neben der inhaltlichen Auseinandersetzung mit dem Thema auch Werkzeuge und Methoden zur Verfügung zu stellen, die Arbeitsschritte strukturieren und so erfolgreiches Lernen ermöglichen. Eine Möglichkeit hierzu bietet Physical Computing : Programmierbare Mikrocontroller bieten als Werkzeug eine attraktive und vielversprechende Heranführung an die Gestaltung eingebetteter Systeme. 4.1 Umsetzung mit Physical Computing Physical Computing hat sich mit einer stetig wachsenden Gemeinschaft aus Künstlern, Designern und Hobby-Bastlern entwickelt, die Mikrocontroller nutzen, um interaktive Objekte herzustellen. Hierfür werden Sensoren, wie Lautstärkeoder Temperatursensoren und Aktoren, wie Servomotoren oder Lautsprecher verwendet, um kontinuierlich mit ihrer Umwelt zu interagieren. Je nach Ziel des jeweiligen Projektes, werden bestimmte Problemstellungen, Anforderungen und Entwurfsmetriken aus den in Abschnitt 3 analysierten Fachgebieten relevant. Zusammenfassend betrachten wir Physical Computing als die kreative Gestaltung und Entwicklung interaktiver, physischer Objekte und Systeme , die als programmierte, greifbare Medien über Sensoren und Aktoren mit ihrer Umwelt kommunizieren [PR12]. Physical Computing nutzt Methoden und Ideen eingebetteter Systeme, derer Spezialgebiete und Anwendungen. Es überträgt die traditionell virtuellen kreativen Möglichkeiten der Informatik durch Einbezug von Aspekten aus Kunst und Design in die reale Welt und kann das Fach vielfältiger und damit attraktiver erscheinen lassen. Auch der hohe Motivationswert selbst kreierter Produkte lässt sich für den Informatikunterricht positiv nutzen. 4.2 Beispielumsetzung: Projekttag Smart City Die nachfolgenden Beispiele von einem Projekttag, der mit 22 Schülerinnen und Schülern der achten bis elften Jahrgangsstufen durchgeführt wurde, illustrieren exemplarisch, wieVon Eingebetteten Systemen zu Physical Computing 263ii “proceedings” — 2017/9/17 — 20:19 — page 264 — #264 ii i ii i Inhalte aus den Bereichen ES, CPS und Robotik in Informatikprojekten verankert werten können. Ziel des Projektes war der Bau einer interaktiven LEGO-Stadt („Smart City“). In einer solchen Stadt gibt es zahlreiche eingebettete Systeme. Diese erfassen an verschiedenen Stellen ihre Umwelt (z. B. Wettereinﬂüsse, Verkehrsaufkommen, Müllstand) und steuern diese (z. B. Markisen einfahren, Ampelsteuerung anpassen, Müllabholung regulieren). Abb. 2: Schüler beim Bau einer „Smart City“ mit LEGO, Arduino TinkerKit und Snap4Arduino In kleinen Projektgruppen arbeiteten die Teilnehmer jeweils an Teilprojekten einer interaktiven LEGO-Stadt (siehe Abb. 2). Alle Schüler kamen unabhängig von ihrer konkreten Aufgabe mit gewissen Grundkonzepten eingebetteter Systeme in Berührung, wie beispielsweise der Kalibrierung undAnsteuerung vonSensoren undAktoren oder zeitkontinuierlichen unddiskreten Signalen. Darüber hinaus lernten sie an konkreten, nicht konstruierten Beispielen typische Probleme des Entwurfs eingebetteter Systeme kennen und mit ihnen umzugehen. Durch das Projektziel, die „Smart City“ noch am selben Tag zu präsentieren, wurde eine Situation gescha  en, in der die Time-to-Market , wie auch in industriellen Projekten, unausweichlich festgelegt war. Das Projekt wurde mit agilen Methoden umgesetzt, sodass auch dieTime-to-Prototype begrenzt war, indem die Schüler nach vorab deﬁnierten Zeiträumen ihre Prototypen den „Bürgermeistern“ (Betreuern) vorstellen mussten. Unsere früheren Erfahrungen zeigten, dass es für Schüler häuﬁg eine besondere Herausforderung darstellt, physikalische Prozesse der Umgebung dem Ziel entsprechend zu erfassen. Dies lässt sich mit Physical Computing gut bewerkstelligen, indem sich Unterricht an Leitfragen von O’Sullivan und Igoe [OI04] orientiert, z. B. Was soll das Produkt aus Sicht des Benutzers tun? ( Planung aus Nutzersicht ), Was sind Eingaben, Verarbeitungsschritte und Ausgabe des Produktes aus nicht-technischer Sicht? Welche Einund Ausgaben sind diskret, welche zeitkontinuierlich? ( Planung aus Entwicklersicht ). Im Projekt umfasste die Planung aus Nutzersicht eine Beschreibung der Ziele derart, dass sie für die „Bürgermeister“ der Stadt verständlich sein sollte, da von ihnen keinerlei Technikverständnis vorausgesetzt werden durfte. Auch die Bürgermeister selbst konnten Wünsche äußern und an das Projektboard heften. Die Planung aus Entwicklersicht wurde gruppenintern in der Kürze der Zeit nur rudimentär umgesetzt. Die Betreuer regten in den Gruppen entsprechende Diskussionen an. Während harte Echtzeit in Schulprojekten meist keine Rolle spielen wird, sind weiche264 Mareen Przybylla, Ralf Romeikeii “proceedings” — 2017/9/17 — 20:19 — page 265 — #265 ii i ii iVon Eingebetteten Systemen zu Physical Computing 19 Echtzeitanforderungen an die zu erstellenden ES häuﬁg zu erfüllen. Typische Probleme tauchen immer dann auf, wenn Verzögerungen für die Nutzer wahrnehmbar werden. Insbesondere bei gezielten Nutzerinteraktionen ist dies der Fall. In einem Teilprojekt hatten Schüler beispielsweise das Problem zu lösen, dass die Rathausbeleuchtung in der Stadt drahtlos aktiviert werden sollte, jedoch die Übertragungsverzögerung über WLAN deutlich spürbar war. Die Vorhersehbarkeit von Umwelteinﬂüssen ist ein typisches Problem heterogener Systeme . In der Stadt sollten zum Beispiel Fahrzeuge gezählt werden, die einen Parkplatz befahren. Bei der Verwendung eines Helligkeitssensors in der Bodenplatte wurde schnell deutlich, dass Umwelteinﬂüsse die Zählung verfälschen können. Die Schüler mussten daher eine Lösung für das Problem ﬁnden, dass Schwankungen in der Helligkeit über dem Sensor nicht immer bedeuteten, dass ein Fahrzeug die Stelle überfuhr. In Bezug auf Zuverlässigkeit ist Störungsabwehr einer der zentralen Aspekte neben Robustheit im Entwurf eingebetteter Systeme. So sollte in der Stadt zum Beispiel ein beschrankter Bahnübergang zuverlässig sensorgesteuert schließen und nach Zugdurchfahrt wieder ö  nen. Dabei war es besonders wichtig, keine Fehler in der Durchfahrterkennung zuzulassen. 5 Diskussion Allgemeinbildender Informatikunterricht steht vor der Herausforderung, zeitbeständige Ideen und Konzepte zu vermitteln und Kompetenzen zu schulen, die in der digitalen Welt von Bedeutung sind. Einige Innovationen der letzten Jahrzehnte und damit zusammenhängende Ideen und Konzepte sind bisher im Schulunterricht jedoch nicht ausreichend verankert: Moderne Informatiksysteme sind immer häuﬁger eingebettete Systeme, die hochgradig vernetzt und überall zu jeder Zeit verfügbar sind. In diesem Beitrag wurde begründet, dass Themen aus den Bereichen eingebettete Systeme, cyber-physische Systeme und Robotik mit all den dazugehörigen Konzepten (wie z. B. Steuern und Regeln, Nebenläuﬁgkeit oder TradeO s) im Informatikunterricht geeignet sind, Schüler dazu zu befähigen, produktiv und kreativ solche Systeme zu gestalten und kompetent mit ihnen umzugehen. Anhand der Erkenntnisse aus den Forschungsgebieten wurde deutlich, dass es zahlreiche gemeinsame Merkmale gibt, die für den Unterricht relevant sind und somit eine fachlich-inhaltliche Grundlage liefern. Die dargestellte Struktur des Fachgebietes kann genutzt werden, um eine inhaltlich logisch aufgebaute Unterrichtsplanung vorzunehmen, Teilgebiete im größeren Zusammenhang zu verorten und geeignete Lehr-Lernszenarien und -materialien für die Schule zu entwerfen. Mit den zugrundeliegenden Konzepten lassen sich auf sehr motivierende und kreative Weise interaktive Objekte und Systeme gestalten, wie z. B. Arbeiten aus der Maker-Kultur zeigen. Es wurde am Beispiel einer Modellstadt aufgezeigt, wie solche Inhalte im Rahmen von Physical Computing kontextualisiert werden können. Unsere Unterrichtserfahrungen zeigen, dass Physical Computing eine attraktive Herangehensweise ist, sich den Inhalten nicht nur auf theoretischer Ebene zu nähern, sondern mit geeigneten Werkzeugen auch praktisch umzusetzen. Beim Entwurf interaktiver, physischer Objekte und Systeme werden Interaktionen zwischen Teilsystemen mit allen dazugehörigen Problemen thematisiert. Diese Inhalte werden mit Physical Computing für den Informatikunterricht auf einer sehr konkreten Ebene zugänglich gemacht.Von Eingebetteten Systemen zu Physical Computing 265ii “proceedings” — 2017/9/17 — 20:19 — page 266 — #266 ii i ii i20 Mareen Przybylla, Ralf Romeike Literatur [Ar16] Arbeitskreis »Bildungsstandards SII« der Gesellschaft für Informatik e.V.: Bildungsstandards Informatik für die Sekundarstufe II, 2016. [Ba11] Baumann, R.: Eingebettete Systeme verstehen. Teil 1: Kreatives Experimentieren mit Arduino. LOG IN 171/, S. 33–45, 2011. [BHV14] Bojanova, I.; Hurlburt, G.; Voas, J.: Imagineering an Internet of Anything. Computer 47/6, S. 72–77, 2014. [BI10] BITKOM: Eingebettete Systeme – Ein strategisches Wachstumsfeld für Deutschland, 2010. [BM15] Berliner Senatsverwaltung für Bildung Jugend und Familie; Ministerium für Bildung Jugend und Sport des Landes Brandenburg: Teil C Informatik, 2015. [Fa16] Eingebettete Systeme. LOG IN Informatische Bildung und Computer in der Schule/185/186, hrsg. von Fachbereich Erziehungswissenschaft und Psychologie der Freien Universität Berlin, 2016. [HLN12] Hertzberg, J.; Lingemann, K.; Nüchter, A.: Mobile Roboter Eine Einführung aus Sicht der Informatik. Springer-Verlag, Berlin Heidelberg, 2012. [LS14] Lee, E. A.; Seshia, S. A.: Introduction to Embedded Systems A Cyber-Physical Systems Approach. 2014. [NW16] Neutens, T.; Wy  els, F.: Teacher professional development through a physical computing workshop. In: Proceedings of the 11th Workshop in Primary and Secondary Computing Education (WiPSCE ’16). S. 108–109, 2016. [OI04] O’Sullivan, D.; Igoe, T.: Physical Computing: Sensing and Controlling the Physical World with Computers. Thomson Course Technology, Boston, 2004. [PR12] Przybylla, M.; Romeike, R.: My Interactive Garden A Constructionist Approach to Creative Learning with Interactive Installations in Computing Education. In: Proceedings of Constructionism 2012. Athen, S. 395–404, 2012. [Si10] Siciliano, B.; Sciavico, L.; Villani, L.; Oriolo, J.: Robotics: Modeling, Planning and Control. 2010. [St09] Stechert, P.: Fachdidaktische Diskussion von Informatiksystemen und der Kompetenzentwicklung im Informatikunterricht, Diss., Universität Siegen, 2009, 45  ., 309. [VG02] Vahid, F.; Givargis, T. D.: Embedded System Design: A Uniﬁed Hardware/Software Introduction. Wiley, 2002. [We93] Weiser, M.: Some Computer Science Issues in Ubiquitous Computing. Communications of the ACM 36/7, S. 75–84, 1993. [Wo09] Wolf, W.: Cyber-physical systems. IEEE Computer 42/3, S. 88–89, 2009.266 Mareen Przybylla, Ralf Romeikeii “proceedings” — 2017/9/17 — 20:19 — page 267 — #267 ii i ii i Quadrologik  – Modellbildung und Modularisierung auf  Basis von Rechnertechnik   Tobias Jördens1, Jens Gallenbacher2   Abstract:  Auf der Abstraktionsebene oberhalb von Transistoren sind für den Computerentwurf  Logikgatter wichtige Grundbausteine. Die Behandlung  von Logikgattern im Unterricht gehört aber  nicht nur zu einer vertieften Beschäftigung mit dem Aufbau von Informatiksystemen.  Anhand des  Entwurfs mit Logikgattern kann man Kompetenzentwicklung in Modellbildung fördern und die  fundamentale Idee der Modula risierung adressieren. Eine Vorentlastung oder Rückbindung an die  notwendige Einführung boolescher Ausdrücke im Rahmen der Einführung der algorithmischen  Grundbausteine ist möglich. Für die Beschäftigung von Logikgattern im Unterricht entwickelten  wir ein neues Logikgatterstecksystem, welches in diesem Artikel vorstellt wird und dessen erste  Einsätze im Unterricht erläutert werden. Schwerpunkt sind hier Unterrichtsstunden mit  Schülerinnen und Schülern  der Jahrgangsstufe n 4 und 5.   Keywords:  Modularisierung, Modellbildung, Technische Informatik, Digitaltechnik, Logikgatter,  Logikstecksystem, Logische Schaltungen, Rechnertechnik   1 Einleitung   Andreas Schwill hat in seiner Erläuterung der fundamentalen Ideen der Informatik  [Sc93 ] als eine von drei Masterideen die s trukturierte Zerlegung begründet und diese  aufgefächert in Hie rarchisierung,  Modularisierung  und Orthogonalisierung. Wie kann  man diese im Unterricht adressieren ? Unser Ansatz ist es , insbesondere Modularisierung   im Kontext von Rechnertechnik zu vermitteln .   Auch die wichtige Kompetenz der Modellierung kann darüber gefördert werden.  Logikgatter auf Papier, in Simulatoren oder in Logikstecksystemen sind Modelle realer  elektronischer Bauteile. Die Erstellung von Schaltungen aufgrund einer Problemstellung  ist an sich bereits  ein Modellierungsprozess. Geht man auf höhere Abstraktionsebenen  des Rechnerentwurfs, so wird dies er Aspekt noch verstärkt .  Warum wir Rechnertechnik als Unterrichtsgegenstand zur Vermittlung von  Modularisieru ng und Modellierung als sinnvoll  erachten, erläutern wir  in Kapitel 2  dieses Beitrags . Für die Frage nach dem wie des Unterrichts ist für uns die Beachtung  der enaktiven Ebene wichtig. Eine kurze Vorstellung und Bewertung bisher vorhandener  Möglichkeiten erfolgt daher in Kapitel 3, bevor  dort das aktuell bei uns in der                                                              1 Schuldorf Bergstraße und Technische Universität Darmstadt, Didaktik der Informatik, Hochschulstraße 10,  64289 Darmstadt, tj @di.tu -darmstadt.de   2 Technische Universität Darmstadt, Didaktik der Informatik, Hochschulstraße 10, 64289 Darmstadt, jg@di.tu darmstadt.de  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 267ii “proceedings” — 2017/9/17 — 20:19 — page 268 — #268 ii i ii i Entwicklung befindliche System Quadrologik vorges tellt und erläutert wird. Die  bisherigen Unterrichtsversuche mit diesem System werden wir im Kapitel 4 vorstell en,  bevor in Kapitel 5 der Ausblick gegeben wird.   2 Motivation und Legitimation für Rechnertechnik  als  Unterrichtsthema   Computer sind heute allgegenwärti g. Für Schülerinnen und Schüler ist es   selbstverständlich, dass sie sich nicht nur für die in Software realisierten Konzepte der  Informatik interessieren , sondern auch für die Wirk und Gestaltungsprinzipien der  darunterliegenden Informat iksysteme.    Wenngleich die Motivation für die Schülerinnen und Schüler also einfach geklärt ist, so  existieren für  die Frage der Behandlung spezifischer Inhalte im Informatikunterricht i n  der Literatur verschiedene Legitimationsgrundlagen.  In den Bildungsstandards  Informa tik [GI08] wird für den Inhaltsbereich Informatiksysteme als Kompetenz  formuliert: „Schülerinnen und Schüler aller Jahrgangsstufen verstehen die Grundlagen  des Aufbaus vo n Informatiksystemen und deren Funktionsweise“  [ebd. S.37] . Bei der  Präzisierung dieser Kompetenz verbleibt die Behandlung jedoch, fast ausschließlich, auf  der Ebene der mit dem bloßen Auge sichtbaren Hardwarekomponenten  [vgl. ebd.] .  In  Lehrplänen3 findet  man allerdings auch die Behandlung von Abstraktionsebenen  unterhalb der sichtbaren Hardware . Entsprechend gibt es auch Unterrichtseinheiten  zu  diesem Thema . So stellt Urs Lautenbach eine Unterrichtseinheit vor, die „Vom Gatter  zum Compiler“ als „Durchstic h durch viele Abstraktionsebenen“ dien en soll  [La15 ].  Jens Gallenbacher stellt ganz ähnlich einen Unterrichtsgang durch die verschiedenen  Abstraktionsebenen vor [ vgl. Ga16]  und in seinem Buch Abenteuer Informatik [Ga17]   beschäftigt er sich mit der Funktion sweise von Computern auf der Ebene von  Transistoren und Gattern.  Auch di e Plattform www.inf -schule.de  beschäftigt sich mit  Digitaltechnik  [vgl. Pä16] .  Passend zu diesen Unterrichtseinheiten findet man im Internet eine Reihe von  Simulatoren für Logikgatter  (vgl. etwa [DB05], [Te09] , [Bu11]).  Digitaltechnik wird  also durchaus in bestehendem Informatikunterricht thematisiert.   In Kapitel 1 wurde schon Andreas Schwills Ansatz  erwähnt,  Bruners Idee der  fundamentalen Ideen auf die Informatik zu übertragen [vgl. K apitel 1] . Bei der  Konkretisierung dieser Ideen  führt  er bzgl. der Hierarchisierung „Ebenenmodelle der  Rechnerarchitektur“ [Sc93 , S.20] und „boolesche Funktionen “ bei der Orthogonalität  [ebd. , S.21] auf. Auch die Modularisierung sehen wir bei der Thematik  der  Rechnertechnik/Rechnerarchitektur gut thematisierbar.  Daher dient  die Behandlung  dieser Thematik als übersichtliches, eingängiges Beispiel dieser fundamentalen Ideen.                                                               3 Vgl. etwa: Hessen [He16 S.40 ff.]  und [He05 S. 24f.] , Rheinland -Pfalz [Rh17a S.16]   und [Rh17b  S.24],  ansatzweise  Thüringen [Th12 S. 18f.]  und Berlin [Se06  S.20] 268 Tobias Jördens, Jens Gallenbacherii “proceedings” — 2017/9/17 — 20:19 — page 269 — #269 ii i ii i „Der Prozess der Modellierung ist nicht nur Lerninhalt, sondern auch durchgängige  Methode des Informatikunterrichts.“ , lautet es in den Bildungsstandards Informatik  [GI08 , S.45]. Auch wenn Modellierung eigentlich durchgängige Methode des  Informatikunterrichts sein soll, so ist sie das in der Praxis nicht immer und bei jeder  Thematik  gege ben, evtl. auch aufgrund der weiteren Anforderungen und  Randbedingungen, die in den Bildungsstandards aufgestellt werden: so sei die  Implementierung beim informatischen Modellieren „unverzichtbar , um das Ergebnis der  Modellbildung erlebbar zu machen.“ [ebd.  S.46]. Für die Jahrgangsstufe 5 -7 wird aber  erklärt: „In diesen Jahrgangsstufen kann der Prozess der Modellierung nicht vollständig  durchlaufen werden, da die Fähigkeit zur Abstraktion bei Schülerinnen und Schülern  noch nicht hinreichend ausgeprägt ist. I nsbesondere wird es kaum möglich sein, in dieser  Alter sstufe Modelle selbst zu implementieren.“  [ebd.].   Modellierung im Bereich Rechnertechnik , insb esondere  auf der Ebene der Logikgatter  kann  nach Meinung der Autoren des vorliegenden Beitrags diese Problem atik umgehen:  Digitale Simulatoren oder Stecksysteme für Logikgatter bieten , anders als bei vielen  anderen Modellen, die Möglichkeit einer „Quasi -Implementierung“ dieser Modelle, als  dass die Funktionsweise des Modells ausprobiert werden kann.   Für die Them atisierung von Hierarchisierung ist der Gang durch mehrere  Abstraktionsebenen der Rechnerarchitektur notwendig, bei der Modularisierung  hilfreich.   Betrachtet man nur die Ebene der Logikgatter, so kann ein weiterer Kompetenzbereich  gefördert werden. Die mathematische Entsprechung für die Logikgatter ist die boolesche  Algebra.  Boolesche Operatoren  sind notwendig  zur Ko nstruktion komplexer  Bedingungen in algorithmischen Grundbausteinen.  Im Inhaltsbereich Algorithmen der  Bildungsstandards wird die Arbeit mit d en algorithmischen Grundbausteinen als  zentraler Aspekt identifiziert [vgl. GI08 , S. 30]. Entscheidungen und Schleifen, außer  Zählschleifen, benötigen Bedingungen, welche boolesche Ausdrücke darstellen. Zur  Behandlung komplexer Bedingungen werden keine Aus sagen gemacht.  In vielen  Unterrichtszenarien des Anfangsunterrichts mag es auch nicht notwendig sein , den  Aufbau dieser Bedingungen intensiv zu thematisieren, weil etwa durch die Blöcke einer  visuellen Programmiersprache Vergleiche implizit benutzt werden , oder Rückgabe werte   von Methoden direkt einen booleschen Wert darstellen . Auch können  durch  Schachtelung oder Reihung von if -Strukturen AND und OR -Terme implizit umgesetzt  werden.  Andererseits kennen selbst kindgerechte Programmiersprachen wie Scratch oder  die Lego Mindstorms -Software logische Operatoren.  Komplexe logische Bedingungen  sind somit auch rein im Kontext der Arbeit mit einer Programmiersprache erlernbar .  Auch mittels eines Spieles wie Erkennungsdienst  können die logischen Funktionen  erarbeitet werden [vgl. Ga17].  Über die Arbeit mit Logikgattern kann darüber hinaus  eine Vorentlastung für die Einführung von Bedingungen bei a lgorithmischen  Grundbausteinen oder eine Rückbindung /Wiederholung erfolgen.  Quadrologik Modellbildung und Modularisierung auf Basis von Rechnertechnik 269ii “proceedings” — 2017/9/17 — 20:19 — page 270 — #270 ii i ii i 3 Quadrologik   Behandelt man Rechnertechnik  im Unte rricht, sowohl die Ebene einfacher Schaltnetze  aus Lo gikgattern  als auch Schaltwerke oder komplexere Strukturen wie ALU,  Steuerwerk und Rechenwerk, stellt sich die Frage des wie. Wie in Kapitel 2 aufgezeigt,  existi eren eine Reihe von Simulatoren für Logik gatter.   Werner Hartmann hat zur INFOS2005 erläutert, dass Informatik geprägt sei durch  Abstraktion und „[v]ielleicht müssten auch im Informatikunterricht vermehrt die drei  klassischen Repräsentationsebenen eingesetzt werden. […] Abstraktes im wahrsten  Sinne des Wortes begreifbar machen […]“ [Ha05] . Auch die Autoren des vorliegenden  Textes sind der Meinung, dass der Unterrichtsgegenstand, wenn möglich, im wörtlichen  Sinne begriffen werden sollte.  Im Bereich der Rechnertechnik, insb. der Logikgatter, ist  es m öglich nicht nur die ikonische Repräsentationsebene mittels Simulatoren  anzusprechen, sondern eben auch die enaktive Repräsentationsebene durch haptische  Systeme. Hierfür existieren verschiedene käuflich zu erwerbende Systeme.   3.1 Vorführsysteme aus der Physik  und Steuerungstechnik   Für den Physikunterricht existieren umfangreiche Stecksysteme für Analog und  Digitaltechnik, etwa LOGITRON [ GR17 ], welches aufgrund von Größe und Kosten  jedoch eher zur Vorführung durch die Lehrkraft geeignet scheint.   3.2 littleBits   littleBits [sic] ist das Pro dukt eines New -Yorker Start -Ups. Dabei handelt es sich um  modulare Elektronikbauteile, als Bits bezeichnet, welche durch magnetische  Konnektoren  (bitSnaps) zusammengesteckt werden  (vgl. Li17] . Zu diesem System  gehören auch Logikga tter, die bei littleBits in der Kategorie WireBits  zusammen mit  anderen Verbin dungselementen  geführt werden.  Gegenüber Schaltungssymbolen haben  diese Bits jedoch ihre Eingänge nicht an der linken Seite, sondern oben und unten  anliegend.    3.3 Quadrologik   Die au f dem Markt vorhandenen Systeme konnten die Autoren des vorliegenden Artikels  nicht überzeugen. Daher entwickelt die Arbeitsgruppe ein eigenes  Logikstecksystem :  Quadrologik .   Für dieses System gilt:  270 Tobias Jördens, Jens Gallenbacherii “proceedings” — 2017/9/17 — 20:19 — page 271 — #271 ii i ii i x Logikgatter werden , wie allgemein üblich, mit (zwei)  Eing ängen auf der linken  Seite und einem Ausgang auf der rechten Seite eines Bausteines realisiert.4   x Verbindungen zwischen Logikgattern  werden nicht mit Kabeln gelegt, sondern mit  speziellen Verbindungselementen, welche Verbindungen von links nach rechts  und oben nach unten implizierten  (vgl. u nten). Die „Verkabelung“ kann dadurch  nicht „kreuz und quer“ erfolgen, sondern muss geplant werden. Darüber hinaus  wäre ein derart gelegtes Verbindungsnetz immer auf einer zweilagigen Platine  abbildbar.   x Zur Verbindung de r Bausteine dienen die Steckverbindungen (bitSnaps) von  littleBits . Die Stromversorgu ng erfolgt über USB (5V). Beides sind Maßnahmen,  welche die  Kompatibilität zum littleBits -System ermöglichen.   x Die Logikgatter mit zwei Eingängen einerseits und die Verbindu ngselemente,  Taster und das Not -Gatter andererseits werden jeweils durch eine generische  Platine realisiert. Erst durch Bestückung bzw. Lötpunkte werden die konkreten  Steckelemente festgelegt.   In der bisherigen Entwicklungsstufe sind Schaltnetze möglich.     Abb. 1: Halbaddierer mit Quadrologik   4 Erster Einsatz im Unterricht   Der erste Satz Prototypen wurde bisher in unterschiedlichen Unterrichtssituationen  getestet.                                                                4 Das Not -Gatter besitzt selbstverständlich nur einen Eingang.  Quadrologik Modellbildung und Modularisierung auf Basis von Rechnertechnik 271ii “proceedings” — 2017/9/17 — 20:19 — page 272 — #272 ii i ii i Mit mehreren Lerngruppen aus einem fünften Schuljahr (Gymnasium) sowie einer  Lerngruppe eines vierten Schuljahres wurde jeweils eine Doppelstunde mit Quadrologik  gearbeitet.  Aufgrund der bisher begrenzten Anzahl an Quadrologik -Bausteinen  wurden  jeweil s nur 6 S chülerinnen und Schüler  aus verschiedenen  Klassen „ausgeliehen “. In der  Regel wurden dafür von Mathematikkollegen Schülerinnen und Schüler ausgewählt , für  die aufgrund ihrer Leistungsstärke die verpasste Mathematik -Einheit  entbehrlich war.  Für sie stellten diese Stunden ihre ersten Informatikstunden überhaupt dar.  Ziel wa r  somit auch , auszuprobieren, was in diesem Anfangsunterricht möglich ist  –auch vor dem  Hintergrund, dass in dieser Altersstufe noch kein Physikunterricht zu Elektrik  stattgefunden hat.   Als Rahmen für die Stunde wurde ein Anchored Instruction -Szenario gewä hlt [vgl.   GH13 ]: in der Rolle eines  Indiana Jones auf einem fremden Planeten erkundeten die  Schülerinnen und Schüler eine alte Ruine, bei der die Funktionsweise von „komischen“  Schalttafeln verstanden werden musste , um die Lampen am Ende der Schaltungen zu m  Leuchten zu bringen, um dadurch sinnbildlich die Türen einer Ruine zu öffnen.     Abb. 2: Aufgabe mit „heruntergefallenen“ Leitungsmodulen     Im Laufe dieser interaktiven Geschichte haben sie sich die Funktionsweise des  Stecksystems mit seinen Komponenten und insbesondere de r Logikbausteine  erschlossen. Bei der ersten Aufgabe gaben wir den Schülerinnen und Schülern  eine  fertige Schaltung vor. Sie mussten dann die beiden Lampen an den Ausgängen zum  Leuchten bekommen. Bei der zweiten mussten sie „heruntergefal lene“ Leitung smodule  korrekt  in eine teilweise vorgegebene Schaltung einfügen  (s. auch Abb. 2) . Es folgten   Übungen  zur Funktionsweise der Logikbausteine wie e twa: „Der Taster lässt sich nicht 272 Tobias Jördens, Jens Gallenbacherii “proceedings” — 2017/9/17 — 20:19 — page 273 — #273 ii i ii i drücken“, was die Verwendung eines NOT -Gatters erzwang, um die L ampe am Ausgang  leuchten zu lassen  (s. auch Abb. 3) .  Auf v ier Aspekte für die oben benannte Kompetenzentwicklung (vgl. Kapitel 2) wurde  geachtet und in den verschiedenen Lerngruppen variiert, auch da in einer Doppelstunde   nicht alles behandelbar war.   Mit a llen Gruppen gelang die Konstruktion von Wahrheitsta feln (als „An-Aus-Tabelle “).  Den leistungsstärksten Gruppen gelang es , die vollständigen Tafeln selbständig  aufzu stellen . Andere vergaßen zunächst die Variante  (Eingang1 aus, Eingang2 aus) mit  zu benennen . Spätestens nach der gemeinsamen , exemplarischen  Konstruktion einer  Tabelle konnten die anderen Tabellen selbstständig hergeleitet werden. Zweimal gab es  beim NOT das Problem,  dass zunächst auch zwei Eingänge angesetzt wurden.  Die  Reihenfolge der Zeilen e ntsprach, erwartungsgemäß, noch nicht der üblichen  Konvention.      Abb. 3: Spielkarten vom Erkennungsdienst[Ga17] und Aufgabe zum Not   Die Analyse von Schaltungen ist eine Vorstufe zum Erstellen eigener Schaltungsmodelle  (vgl. [GI08 , S.46]). Durch Nachbau d er Schaltungen und Ausprobieren aller  Kombinationen konnten die Schülerinnen und Schüler selbstständig vollständige  Wahrheitstabellen für drei Eingänge aufstellen. Der theoretische Nachvollzug anhand  des Schaltungsplans wurde mit einer Gruppe versucht. Hie r zeigte sich, dass das  Verständnis des Schaltungsaufbaus noch nicht vollständig durchdrungen war. So  konnten die Schülerinnen und Schüler zwar benennen, wie in einer mehrstufigen Logik  die Signalleitungen verlaufen, sie erkannten aber nicht selbstständig,  dass die Eingänge  eines späteren Logikgatters nicht direkt von den Eingängen /Tastern  abhängen, sondern  dass sie an den Ausgängen der ersten Logikelemente Zwischenergebnisse ermitteln  müssen.   Um den Zusammenhang mit logischen Aussagen zu bekommen, wurde mi t Spielkarten Quadrologik Modellbildung und Modularisierung auf Basis von Rechnertechnik 273ii “proceedings” — 2017/9/17 — 20:19 — page 274 — #274 ii i ii i des Spiels Erkennungsdienst [vgl. Ga17] gearbeitet  (s. auch Abb. 3) . Zunächst wurden  logische Aussagen über die Merkmale der Personen vorgegeben (etwa: rothaarig UND  grüne Augen) , die S chülerinnen und Schüler  mussten  dann  die entsprechende(n)   Karte(n) benennen. Ein Teil hatte anfangs Probleme , mehr als eine Karte zu benennen,  wenn eine Teilmenge von mehr als einer Karte gefordert war. Dieses Problem war  allerdings schnell behoben. Der Umgang mit dem UND -Operator war erwartungsgemäß  unproblemat isch. Aber auch Aussagen mit der NICHT -Operator und das inklusive  ODER funktionierten gut. Im Rahmen der Wahrheitstabellen wurde thematisiert, dass  ein Unterschied zwischen mathematischer Logik und Alltagssprache besteht .  Im zweiten Schritt durften die S chülerinnen und Schüler  logische Aussagen für  Teilmengen der Karten formulieren (z.B.: „Erstelle eine Aussage, welche nur auf K evin  und Felix zutrifft “). Dies k lappte erstaunlich gut. Einzelne Schülerinnen und Schüler  kamen auf Ausdrücke , die mathematisch nu r mit Klammerung formulierbar wären . Dies  wurde im Einzelgespräch erfolgreich thematisiert . Die Schülerinnen und Schüler waren  danach in der Lage, gegebenen logischen Aussagen die entsprechenden korrekten  Teilmengen an Personenkarten zuzuordnen.   Das eigent lich mit Quadrologik  verfolgte Ziel , die Konstruktion einer eigenen Schaltung,  wurde zuletzt erprobt . Bei einer Lerngruppe wurde die Konstruktion einer Schaltung  gefordert, für welche nur eine Wertetabelle vorgegeben war. Einer Gruppe gelang es  NAND und NO R Schaltungen sowie eine weitere Funktion ( ein Und-Gatter  mit einem  negierten Eingang) zu konstruieren, scheiterten dann jedoch am XOR , allerdings auch  aus Zeitgründen . Bei drei weiteren Lerngruppen wurde im Rahmen de s Rollenspiels die  Aufgabe gestellt, da ss ein bestimmter Roboter in Menschengestalt durch eine  Einlasskontrolle passieren darf  und die anderen Roboter nicht. Dazu wurde eine aus acht  Erkennungsdienstkarten gezogen. Sämtlichen Gruppen gela ng es , diese Aufgabe zu  meistern. In der Menge der acht Karten waren die Merkmale so verteilt, dass für die  Selektion einer Karte alle drei Merkmale entweder regulär oder negiert abgefragt und  mit UND verknüpft werden mussten. Aufgrund dessen  der lediglich  zweiwertige n  Logikbausteine  bei Quadrologik  mussten also  alle eine mehrstufige Logik  mit  geschachtelte r Aussage realisieren.   Auch auf der subjektiven Ebene  waren die Unterrichtsversuche erfolgreich. So erklärten  alle SuS , dass der Unterricht ihnen Spaß gemacht hätte , fanden d as Quadrologik -System  sehr toll und  wollten mehr Unterricht dazu.   Im Wahlunterricht Informatik im Jahrgang 9 wurde Digitaltechnik „klassisch“  unterrichtet. Der Teil mit Logikgattern wurde diesmal jedoch mit Quadrologik  ausgeführt. Die Schüler5 besaßen vertieftes Vorwissen, und alle nahmen a uch schon an  der Juniorliga des BWInf teil. In 2,5 Doppelstunden wurde die Thematik von der  Einführung von Logikgattern, über die Analyse komplexer Schaltung bis zum Entwurf  eigener Schaltungen behandelt. Für die  Modellierung verschiedener Schaltungen   beka men die Schüler eine Sammlung diverser Textaufgaben zu Logikgattern, von                                                              5 Der Kurs besteht leider nur aus männlichen Individuen.  274 Tobias Jördens, Jens Gallenbacherii “proceedings” — 2017/9/17 — 20:19 — page 275 — #275 ii i ii i Tresorsteuerungen über Gurtkontrollen im Auto bis hin zu Multiplexern und Halb /Volladdierer n. Die Bearbeitung dieser Problembeschreibungen gelang gut bis sehr gut,  entsprechend den a llgemeinen Leistungsunterschieden im Kurs. Beim Entwurf des  Volladdierers war die Analyse der Problemstellung schnell erfolgt , eigene  Wahrheitstafeln aufgestellt  und der Baustein mit Quadrologik  gesteckt  (s. auch Abb. 1)    5 Ausblick   Rechnertechnik  sollte  im Informatikunterricht behande lt werden, um  dabei  Modellbildungskompetenz und Verständnis von Modularisierung zu fördern. Da s gelingt  mit dem  Logikstecksystem Quadrologik  auf motivierende Art und Weise. Erste  Tests mit  Schülergruppen sind sehr vielverspreche nd. Es zeigte sich, dass der erhoffte  Kompetenzzuwachs erreicht wird.   Wir möchten  die Weiterentwicklung von Quadrologik betreiben. Dazu gehört die  Realisierung von Schaltnetzen und die Unterstützung der  Modularisierung durch ein  eigenes Bauteil, sodass ko nstruierte Schaltungen in diese Bauteile einprogrammiert  werden können.  Wir erhoffen uns Impulse für die konkrete Ausgestaltung der  Weiterentwicklung aus der Diskussion auf der INFOS  und danach.   Sofern diese Entwicklungsprozesse abgeschlossen sind, können eine größere Anzahl an  Bauteilen produziert werden, sodass Test s in Klassenstärke und über unterschiedliche  Kompetenzstufen  sowie eine wissenschaftliche Evaluation möglich sind.    Literaturverzeichnis    [Bu11]  Burch, C .: Logisim v.2.7.1., http://www.cburch.c om/logisim/ , Stand 05.02.2017.   [DB05]  Damm, M; Brauner, O.: LogiFlash v3.03, 2005       http://tiweb.hsu -hh.de/  LogiFlash/index.html , Stand 05.02.2017.    [Ga16]  Gallenbacher, J.: Rechnerorganisation – Vom Relais zum Prozessor. Vortrag beim  Schweizer Tag für d en Informatikunterricht.  Zugriff über:  http://www.abz.inf.ethz.ch/schweizer -tag-fur-den-informatikunterricht/stiu -2016 -7schweizer -tag-fuer-den-informatikunterricht/stiu -2016 -workshops/ , Stand  09.02.2017   [Ga17]  Gallenbacher, J: Abenteuer Informatik: IT zum  Anfassen für alle von 9 bis 99 – vom  Navi bis Social Media, 4. Auflage, 2017.   [GH13]  Gallenbacher, J.,  Heun, D.: Ein moderner Ansatz für Anchored Instrucion im  Informatikunterricht. In (Breier, N., Stechert, P., Wilke, T. Hrsg.): Proc. Informatik  erweiter t Horizonte, INFOS2013, 15. GI -Fachtagung Informatik und Schule, 2013.   [GI08] Gesellschaft für Informatik e.V.: Grundsätze und Standards für die Informatik in der  Schule: Bildungsstandards Informatik für die Sekundarstufe I, 2008.   [GR17]  GRS Lehrgeräte KG:  Logitron – Digitalbausteine mit starken Eigenschaften, Quadrologik Modellbildung und Modularisierung auf Basis von Rechnertechnik 275ii “proceedings” — 2017/9/17 — 20:19 — page 276 — #276 ii i ii i http://www.grs -physik -shop.de/index.php?option=com_content&task=view&id=37   &Itemid=60 , Stand 05.02.2017.   [Ha05]  Hartmann, W.: Informatik – EIN/AUS – Bildung. In (Friedrich, Sreffen Hrsg.): Proc.  Unter richtskonzepte für informatische Bildung,  INFOS2005,  11. GI -Fachtagung  Informatik und Schule, 2005.   [He05]  Hessisches Kultusministerium: Berufliche Schulen des Landes Hessen. Lehrplan  Berufliches Gymnasium. Fachrichtung Technik. Schwerpunkt Daten verarbeit ungstechnik, 2005.    https://kultusministerium.hessen.de/sites/default/files/   media/hkm/lp_bg_fr_technik_sp_datenverarbeitungstechnik_05.pdf ,  Stand 09.02.2017   [He16]  Hessische s Kultusministerium: Kerncurricula Gymnasiale Oberstufe – Informatik,  2016. https ://kultusministerium.hessen.de/schule/kerncurricula/gymnasiale -oberstufe/   informatik , Stand: 05.02.2017 .  [La15]  Lautebach, U.: Vom Gatter zum Compiler: Im Unterricht durch sieben  Abstraktionsebenen.  In (Gallenbacher, J. Hrsg.): Proc. Informatik allgemeinbi ldend  begreifen, INFOS2015, 16. GI -Fachtagung Informatik und Schule, S.239 -246.  [Li17]  LittleBits Electronics Inc.: What is littleBits? http://littlebits.cc/how -it-works, Stand  05.02.2017.   [Pä16]  Pädagogisches Landesinstitut Rheinland -Pfalz: Digitaltechnik , 2016, http://www.inf schule.de/rechner/digitaltechnik , Stand: 05.02.2017.   [Rh17a]  Rheinlan d-Pfalz Mini sterium für Bildung, W issenschaft, Jugend und Kultur. Lehr plan  Informatik Wahlfach und Wa hlpflichtfach an Gymnasien und Integrierten  Gesamtschulen (Seku ndarstufe I), ohne Jahresangabe. Zugriff über:  http://lehrplaene.bildung -rp.de/gehezu/startseite.html?keyword=informatik , Stand  09.02.2017.   [Rh17b]  Rheinland -Pfalz Ministerium für Bildung, Wissenschaft, Jugend und Kultur. Lehrplan  Informatik  Grund und Lei stungsfach, ohne Jahresangabe. Zugriff über:  http://lehrplaene.bildung -rp.de/gehezu/startseite.html?keyword=informatik ,   Stand 09.02.2017.   [Sc93]  Schwill, A..: Fundamentale Ideen der Informatik, 1993. http://ddi.cs.uni potsdam.de/Forschung/Schriften/ZDM.pd f, Stand 09.02.2017   [Se06]  Senatsverwaltung für Bildung, Jugend und Sport Berlin: Rahmenlehrplan für die  gymnasiale Oberstufe – Informatik, 2006 .     https://www.berlin.de/imperia/md/content/sen -bildung/unterricht/lehrplaene/sek2_   informatik.pdf?start&ts=14 50262874&file=sek2_informatik.pdf  Stand: 10.02.2017.   [Te09]  Tetzl, A.: LogicSim, 2009, http://www.tetzl.de/java_logic_simulator.html , Stand  05.02.2017.   [Th12]  Thüringer Ministerium für Bildung, Wissenschaft und Kultur: Lehrplan für den Erwerb  der allgemein en Hochschulreife – Informatik, 2012. Zugriff über:  https://www.schulportal -thueringen.de/media/detail?tspi=3657  Stand 09.02.2017    276 Tobias Jördens, Jens Gallenbacherii “proceedings” — 2017/9/17 — 20:19 — page 277 — #277 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft fr Informatik, Bonn 2017 1 Integration des Erwerbs von Basiskonzepten der Informatik in den mathematisch-naturwissenschaftlichen Unterricht der Sekundarstufe I Marlene Lindner1, Sandra Schulz1und Niels Pinkwart1 Abstract: Als Beitrag zu einer ﬂchendeckenden informatischen Bildung kann sich eine Verknpfung der Informatik mit anderen Schulfchern gewinnbringend auswirken. Mit Unterrichtseinheiten inPhysical Computing ist es mglich den Erwerb von Basiskonzepten und -kompetenzen der Informatik in den mathematisch-naturwissenschaftlichen Unterricht zu integrieren. In diesem Beitrag werden unter Ber ¨ucksichtigung der Bildungsstandards der Kultusministerkonferenz und der Gesellschaft f ¨ur Informatik Verkn ¨upfungsm ¨oglichkeiten f ¨ur die Sekundarstufe I aufgezeigt, die sich aus den Bildungsstandards ergeben. Anschlieend werden zwei entwickelte Unterrichtseinheiten mit LEGO Mindstorms detailliert vorgestellt. Keywords: MINT-Unterricht, Bildungsstandards, Physical Computing , LEGO Mindstorms. 1 Einleitung 1.1 F ¨acher ¨ubergreifender MINT-Unterricht Im Allgemeinen kann ein fcherbergreifender Unterricht genutzt werden, um verschiedene Zugnge zu einer Thematik zu ermglichen. Damit knnen bisher bestehendes Wissen gefestigt sowie zusammengehrige Inhalte miteinander verknpft werden. Kompetenzen in Mathematik, Informatik, Naturwissenschaft und Technik (MINT) sind in den letzten Jahren zunehmend als Schl ¨usselqualiﬁkationen f ¨ur den Einstieg in vielf ¨altige Berufsm ¨oglichkeiten identiﬁziert worden und eine grundlegende Scientiﬁc Literacy ist mittlerweile ein erkl ¨artes Bildungsziel f ¨ur Sch ¨ulerInnen aller Schulformen [OE99, NG13]. Obwohl MINT-F ¨acher Gemeinsamkeiten in Bezug auf Probleml ¨osung, Erkenntnisgewinnung und lebensweltliche Anwendung haben, werden sie in den meisten Curricula-Dokumenten der Welt getrennt aufgef ¨uhrt [BB14]. Betrachtet man jedoch die Bildungsstandards der Kultusministerkonferenz (KMK) f ¨ur die Mathematik und die Naturwissenschaften bzw. die Standards der Gesellschaft f ¨ur Informatik (GI) und des Vereins Deutscher Ingenieure (VDI) f ¨ur die Informatik und die Technik, ergeben sich viele Verkn ¨upfungsm ¨oglichkeiten sowohl in Bezug auf den Erwerb von Basiskonzepten als auch Basiskompetenzen. Im Folgenden wird nun speziell auf inhaltliche und konzeptuelle ¨Uberschneidung der Informatik mit den mathematisch-naturwissenschaftlichen F ¨achern eingegangen und Unterrichtseinheiten in Physical Computing pr¨asentiert, die sowohl einen Lernzuwachs bzgl. 1Humboldt-Universit ¨at zu Berlin, Institut f ¨ur Informatik, Unter den Linden 6, 10099 Berlin, marlene.lindner@hu-berlin.de; saschulz@informatik.hu-berlin.de; niels.pinkwart@hu-berlin.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 277ii “proceedings” — 2017/9/17 — 20:19 — page 278 — #278 ii i ii iInformatik als auch einem der weiteren F ¨acher erm ¨oglichen sollen. Physical Computing besch ¨aftigt sich mit interaktiven, physischen Objekten, in denen mithilfe von Sensoren und Aktuatoren ein Bezug zwischen virtueller und realer Welt hergestellt wird [OI04]. Zustzlich bietet es die M ¨oglichkeit, Informatik in den MNT-Unterricht zu integrieren [SP15]. F¨ur Mathematik, Physik und Technik gibt es viele Unterrichtsbeispiele, die eine Verkn¨upfung zur Informatik herstellen und ¨uber die bloße Anwendung von Software hinausgehen. Es wurden jedoch keine Unterrichtsbeispiele gefunden, die explizit die deutschen Bildungsstandards ber ¨ucksichtigen. LEGO Education bietet ausgearbeitete Unterrichtseinheiten f ¨ur LEGO Mindstorms EV3-Roboter zum Verkauf an, die Inhalte aus Mathematik, Physik und Technik aufgreifen [Th16]. Vernier Software & Technology [Ve16] bietet eine Vielzahl an Sensoren an, um den Roboter fr den mathematisch-naturwissenschaftlichen Unterricht durch Inhalte wie z. B. Messungen des pH-Werts oder eines magnetischen Felds zu erweitern. Zusammenfassend l ¨asst sich feststellen, dass frei verf ¨ugbare, deutschsprachige Unterrichtseinheiten, die als Ziel haben Informatik fcherbergreifend mit den MNT-Disziplinen zu unterrichten und die Bildungsstandards bercksichtigen, bisher kaum vorliegen. Daher werden im Folgenden m ¨ogliche Verknpfungspunkte diskutiert und entsprechende Unterrichtseinheiten exemplarisch vorgestellt. 1.2 Bildungsstandards und Rahmenlehrpl ¨ane der MINT-F ¨acher Seit 2003 liegen von der KMK”Bildungsstandards im Fach Mathematik f ¨ur den Mittleren Schulabschluss“ vor [KMc] und seit 2004 gibt es auch Bildungsstandards f ¨ur Biologie, Chemie und Physik [KMa, KMb, KMd]. Sie ﬁnden starke Ber ¨ucksichtigung in den jeweiligen Rahmenlehrpl ¨anen der Bundesl ¨ander. F ¨ur den Informatikunterricht an deutschen Schulen gibt es keine von der KMK verfassten Bildungsstandards. Bisher wurde ein erster Ansatz im Strategiepapier”Bildung in der digitalen Welt“ formuliert, das jedoch nicht konkret auf den Informatikunterricht eingeht [KM16]. Die GI hat 2008 unter”Grunds ¨atze und Standards f ¨ur die Informatik in der Schule“ [Ge08] sogenannte Mindeststandards f ¨ur die Sekundarstufe I ver ¨offentlicht, die als methodische und inhaltliche Empfehlung f ¨ur den Informatikunterricht z. B. in dem aktuellen Rahmenlehrplan von Berlin ber ¨ucksichtigt sind [Se06]. Da die KMK auch keine Bildungsstandards f ¨ur das Fach Technik ver ¨offentlicht hat, hat der Verein Deutscher Ingenieure (VDI) 2007”Bildungsstandards Technik f ¨ur den Mittleren Schulabschluss“ konzipiert [VD07]. Bisher konnte sich in den Bildungsstandards und Rahmenlehrpl ¨anen der MINT-F ¨acher noch keine einheitliche Terminologie f ¨ur grundlegende Konzepte und Kompetenzen durchsetzen. Im Folgenden wird der Begriff ”Basiskonzepte“ f ¨ur Inhaltsbereiche, inhaltsbezogene Kompetenzen, Kompetenzbereich Fachwissen und Leitideen verwendet, wohingegen mit”Basiskompetenzen“ Prozessbereiche, allgemeine Kompetenzen und die Kompetenzbereiche Erkenntnisgewinnung, Kommunikation und Bewertung beschrieben werden. Im Rahmen dieses Beitrags kann jedoch nicht n ¨aher auf die Verkn ¨upfungspunkte in den Bildungsstandards bzgl. der Basiskompetenzen eingegangen werden.278 Marlene Lindner, Sandra Schulz, Niels Pinkwartii “proceedings” — 2017/9/17 — 20:19 — page 279 — #279 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft fr Informatik, Bonn 2017 3 2M ¨ogliche Verkn ¨upfungspunkte in den Bildungsstandards bzgl. der Basiskonzepte Als Basiskonzepte der Informatik hat die GI folgende f ¨unf Bereiche identiﬁziert:”Information und Daten“ (C1),”Algorithmen“ (C2),”Sprachen und Automaten“ (C3),”Informatiksysteme“ (C4) und”Informatik, Mensch und Gesellschaft“ (C5). Im Folgenden werden exemplarisch berschneidungspunkte zu MN-Fchern aufgezeigt, die in Tab. 1 zusammengefasst sind. Fr den Mathematik -Unterricht lassen sich die Konstruktion und Berechnung von geometrischen Strukturen und das kartesische Koordinatensystem in”Raum und Form“ (L3) mit C1 vernetzen. Dies sind Grundlagen f ¨ur das Erfassen von Daten und Informationen in Graﬁken und Graphen. Dafr kann ein Graﬁkprogramm Anwendung ﬁnden. In derBiologie ist ein wesentlicher Aspekt des Basiskonzepts”System“ (F1) die Steuerung, Regelung und Informationsverarbeitung in lebenden Systemen. Es lsst sich mit (C3) z. B. durch das EV A-Prinzip und Zustnde der Automatentheorie verknpfen.”Entwicklung“ (F3) beinhaltet die Auseinandersetzung mit artspeziﬁscher Individualentwicklung und evolution¨arer Entwicklung, wobei Mutation, Selektion und Variabilit ¨at behandelt werden. Das Beschreiben der Eigenschaften bedeutsamer Stoffe in der Chemie ist ein Kernthema von ”Stoff-Teilchen-Beziehungen“ (F1), wohingegen in”Struktur-Eigenschafts-Beziehungen“ (F2) das Ableiten von Stoffeigenschaften aus dessen Struktur betrachtet wird. In”Chemische Reaktion“ (F3) verlangt das Erstellen von ausgeglichenen Reaktionsgleichungen (F3.4) quantitatives Verst ¨andnis, was auch f ¨ur die daraus abgeleiteten Handlungsvorschriften f ¨ur Experimente relevant ist.”Energetische Betrachtung bei Stoffumwandlung“ (F4) betrachtet Energieformen und Energieaustausch mit der Umgebung. Energieumwandlung und die Abh ¨angigkeit von Reaktionsbedingungen und Katalysatoren (F4.3) ist auch relevant f ¨ur einige Komponenten in Informatiksystemen (C4), wie z. B. Sensoren oder Elemente zur K ¨uhlung von Rechneranlagen. Das Materiekonzept in Physik l¨asst sich lediglich mit C4 in Bezug auf Hardwarekomponenten von Informatiksystemen und deren Kenngr¨oßen verbinden. Das Wechselwirkungskonzept l ¨asst sich hingegen mit fast allen Basiskompetenzen der Informatik verkn ¨upfen. Die newtonsche Mechanik, Optik, sowie elektrische und magnetische Felder sind f ¨ur die Eingabe-, Verarbeitungsund Ausgabeger ¨ate von Informatiksystemen (C4) von Bedeutung, beeinﬂussen aber auch Wechselwirkungen zwischen Informatik, Mensch und Gesellschaft (C5). 3 Exemplarische Unterrichtseinheiten im Physical Computing Aufgrund der herausgearbeiteten berschneidungen erscheint Physical Computing als geeigneter Lerngegenstand, um eine Verknpfung sinnvoll umzusetzen. Folgende Beispiele f¨ur Unterrichtseinheiten im Physical Computing sollen es erm ¨oglichen, den Erwerb von Basiskonzepten und -kompetenzen der Informatik in den naturwissenschaftlichen Unterricht zu integrieren. Dabei geht es nicht darum, besonders vielschichtige, komplexe Aufgaben zu stellen, sondern vielmehr Beispiele aufzuzeigen, die sowohl in den normalen Fachunterricht als auch in den Projektunterricht eingebunden werden k ¨onnen und in Bezug auf Zeit und Material keine großen Herausforderungen darstellen. Auf Sensoren, die nicht in der Standardverkaufseinheit der LEGO Mindstorms EV3-Robotor enthaltenIntegration des Erwerbs von Basiskonzepten 279ii “proceedings” — 2017/9/17 — 20:19 — page 280 — #280 ii i ii iInformatik Mathematik Biologie Chemie Physik Information und Daten (C1)Zahl (L1), Messen (L2), Raum und Form (L3), Funktionaler Zusammenhang (L4), Daten und Zufall (L5)System (F1), Struktur und Funktion (F2), Entwicklung (F3)Energie (F4), Stoff-TeilchenBeziehungen (F1), StrukturEigenschaftsBeziehungen (F2)Wechselwirkung, Energie Algorithmen (C2) Zahl (L1), Raum und Form (L3), Funktionaler Zusammenhang (L4), Daten und Zufall (L5)System (F1), Struktur und Funktion (F2)Stoff-TeilchenBeziehungen (F1), StrukturEigenschaftsBeziehungen (F2), Chemische Reaktion (F3)Wechselwirkung, System Sprachen und Automaten (C3)Zahl (L1), Funktionaler Zusammenhang (L4)System (F1), Struktur und Funktion (F2)Chemische Reaktion (F3)System Informatiksysteme (C4)Funktionaler Zusammenhang (L4)System (F1), Struktur und Funktion (F2), Entwicklung (F3)Energie (F4), Stoff-TeilchenBeziehungen (F1), StrukturEigenschaftsBeziehungen (F2)Materie, Wechselwirkung, System, Energie Informatik, Mensch und Gesellschaft (C5)Raum und Form (L3), Funktionaler Zusammenhang (L4), Daten und Zufall (L5)System (F1), Struktur und Funktion (F2), Entwicklung (F3)Energie (F4), Stoff-TeilchenBeziehungen (F1), StrukturEigenschaftsBeziehungen (F2), Chemische Reaktion (F3)Wechselwirkung, Energie Tab. 1: Verkn ¨upfung der Basiskonzepte (Inhaltsbereiche) der Bildungsstandards Informatik f ¨ur die Sekundarstufe I [Ge08] mit Basiskonzepten (inhaltsbezogenen Kompetenzen, Kompetenzbereich Fachwissen (F), Leitideen (L)) der Bildungsstandards im Fach Mathematik, Biologie, Chemie und Physik f ¨ur den Mittleren Schulabschluss [KMc, KMa, KMb, KMd].280 Marlene Lindner, Sandra Schulz, Niels Pinkwartii “proceedings” — 2017/9/17 — 20:19 — page 281 — #281 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft fr Informatik, Bonn 2017 5 sind, wird bewusst verzichtet. Auch wird auf die Umsetzbarkeit jeder Unterrichtseinheit in einer Doppelstunde (90 min) geachtet, wobei jeweils insgesamt 10 min f ¨ur Unterrichtsbeginn und -abschluss veranschlagt werden, da die Organisation von Gruppen und Material ber ¨ucksichtigt werden muss. Es wird davon ausgegangen, dass gen ¨ugend Roboter vorhanden sind um jeweils zu zweit mit einem Roboter zu arbeiten. Bei den meisten Aufgaben bietet es sich an, mit bereits zusammengebauten Robotern zu arbeiten. F¨ur einen selbstst ¨andigen Zusammenbau m ¨ussten zustzlich ca. 30 min eingeplant werden. Weitere Unterrichtsbeispiele der MINT-Fcher sowie Unterrichtsmaterialien werden unter https://cses.informatik.hu-berlin.de/de/for schools/ zur Verfgung gestellt. 3.1 Unterrichtseinheit in der Biologie: Informationsverarbeitung Klassenstufe: 9 (abh ¨angig von der Schulform) Vorwissen in Informatik: Kenntnisse von algorithmischen Grundstrukturen Informatische Inhalte: Roboter als Informatiksysteme, Implementieren von Algorithmen, Verarbeitung elektrischer Gr ¨oßen ( Physical Computing ) Robotortyp: Standardfahrgestell der LEGO Mindstorms EV3-Roboter mit zwei Lichtsensoren Zus¨atzliches Material: Taschenlampen Tab. 2: Aufgabenproﬁl der Unterrichtseinheit”Informationsverarbeitung“ F¨ur alle Organismen ist die Verarbeitung von Informationen aus ihrer Umwelt von zentraler Bedeutung f ¨ur Nahrungsund Partnersuche. Sogenannte Reiz-Reaktions-Zusammenh¨ange sind mitunter sehr komplex, abh ¨angig von vielen Faktoren und somit schwer zu verstehen (vgl. EV A-Prinzip der Informatik). Braitenberg-Vehikel hingegen haben eine sehr einfache Struktur (Abb. 1), verdeutlichen aber die Vielfalt, die schon mit einfachen neuronalen Strukturen erzeugt werden kann. Zwei Sensoren werden auf unterschiedliche Weise (inhibitorisch oder exzitatorisch) mit zwei Motoren gekoppelt und erzeugen somit ein”Verhalten“, das unterschiedlichen Emotionen bzw. Verhaltensstrategien zugeordnet werden kann. Mit LEGO Mindstorms EV3-Robotern k ¨onnen Braitenberg-Vehikel nachgebaut und beobachtet werden. Der Fokus dieser Unterrichtseinheit bzgl. Biologie liegt somit auf der Erkl ¨arung der Variabilit ¨at von Lebewesen (Basiskonzept”Entwicklung“ (F3)) durch den Einsatz eines Modells (Basiskompetenz E10). Innerhalb der Informatik wird insbesondere das Verstehen und Anwenden von Informatiksystemen adressiert. Schleifen und Schalter werden als bekannt voraus gesetzt. Bei Aufgabe 1 ist abh ¨angig vom Umgebungslicht ein geeigneter Schwellwert f ¨ur den Lichtsensor zu ﬁnden. Als Programmierblock f ¨ur den Motor sollte Hebelsteuerung mitAn f¨ur n Sekunden undAm Ende Bremsen: Falsch gew¨ahlt werden. Rauschen ist ein wichtiger Aspekt bei der Informationserfassung und -verarbeitung, sowohl in der Technik als auch in lebenden Organismen. In diesem Zusammenhang sollte kurz auf das Nervensystem des Menschen eingegangen werden und erl ¨autert werden, dass Synapsen auch zuf ¨allig feuern, wodurch sich ein Rauschen bei der Reiz ¨ubertragung ergibt. Des Weiteren kann bei der Verarbeitung elektrischer Gren auf Messunsicherheiten eingegangen und Algorithmen zur Fehlerminimierung entwickelt werden. Im Rahmen von Aufgabe 2 kann Rauschen mit dem ProgrammierblockIntegration des Erwerbs von Basiskonzepten 281ii “proceedings” — 2017/9/17 — 20:19 — page 282 — #282 ii i ii i Abb. 1: Braitenberg-Vehikel als Modellkonstrukte f ¨ur die Informationsverarbeitung in einfachen Organismen: Zwei Sensoren werden auf unterschiedliche Weise (inhibitorisch oder exzitatorisch) mit zwei Motoren gekoppelt und erzeugen somit ein”Verhalten“, das unterschiedlichen Emotionen zugeordnet werden kann. 2a) Angst b) Aggression; 3a) Liebe b) Entdeckungslust [Br84]. Zufall simuliert werden. Bei der Chemotaxis z. B. peritrich begeißelter Bakterien wechseln sich Vorw ¨artsbewegung entlang eines Stoffkonzentrationsgradienten und zuf ¨allige Taumelbewegungen ab, die eine Richtungs ¨anderung erm ¨oglichen, wenn die Stoffkonzentration sinkt. Die Geschwindigkeit bei der Phototaxis soll bei Aufgabe 3 proportional zu der Lichtintensit ¨at steigen – dies ist ein Braitenberg-Vehikel vom Typ I [Br84]. F ¨ur eine efAufgabe Zeit 1. Lasst euren Roboter geradeaus auf euch zufahren, wenn ihr ihn mit einer Taschenlampe anstrahlt. Sobald die Taschenlampe aus ist, soll er anhalten und warten. Verwendet zun ¨achst nur einen der Lichtsensoren.10 min 2. Lasst euren Roboter sich zuf ¨allig leicht nach rechts und links bewegen, wenn er wie unter 1. auf euch zu f ¨ahrt.10 min 3. Lasst euren Roboter nun schneller auf euch zufahren, wenn ihr ihn direkt anstrahlt und langsamer werden, wenn die Lichtquelle weiter entfernt ist. Vergleicht das Verhalten eures Roboters mit der Chemotaxis von Bakterien. Was muss f ¨ur eine effektive Phototaxis des Roboters ver ¨andert werden?15 min 4. Baut euer Programm nun so um, dass beide Lichtsensoren gleichzeitig messen und jeweils einen der Motoren ansteuern. Testet, ob sich eurer Roboter nun Lichtquellen zuwendet, die nicht direkt vor ihm sind.15 min 5. Schreibt nun ein Programm f ¨ur ein weiteres Braitenberg-Vehikel und testet seine Reaktion auf eine Lichtquelle. Von welchen Tieren w ¨urdet ihr eine vergleichbare Reaktion erwarten?15 min 6. Dunkelt den Raum nun ab und schafft eine große freie Fl ¨ache, auf der ihr eure Braitenberg-Vehikel aussetzt. Erzeugt einen Lichtkegel etwa in der Mitte der Fl ¨ache und beobachtet das Verhalten aller Roboter. Ordnet ihr Verhalten jeweils Typen von Braitenberg-Vehikel zu und diskutiert Verbesserungsm ¨oglichkeiten bei der Umsetzung. ¨Andert ggf. das Programm eures Roboters und setzt ihn erneut auf die Freiﬂ¨ache.15 min Tab. 3: Unterrichtseinheit”Informationsverarbeitung“: Arbeitsaufgaben und Durchf ¨uhrungsdauer fektive Phototaxis fehlt noch die Implementation einer Bewegungsrichtungs ¨anderung. F¨ur Aufgabe 4 gibt es mehrere L ¨osungsm ¨oglichkeiten. Zwei parallele Schleifen mit jeweils einem einzelnen Motor lassen sich hierbei gut umsetzen. Dies ist nun das”aggressive“ Braitenberg-Vehikel (Typ 2b). Die Braitenberg-Vehikel sollten mit Abb. 1 kurz vor-282 Marlene Lindner, Sandra Schulz, Niels Pinkwartii “proceedings” — 2017/9/17 — 20:19 — page 283 — #283 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft fr Informatik, Bonn 2017 7 gestellt werden und bei Aufgabe 5 sollte jeder Vehikel-Typ von mindestens einer Gruppe bearbeitet werden, wobei der Typ 2a) sehr einfach aus 2b) ableitbar ist. Durch die inhibitorische oder exzitatorische Verkn ¨upfung der zwei Sensoren mit den beiden Motoren k¨onnen vier unterschiedliche Verhaltensmuster erzeugt werden: einige Roboter ﬂiehen vor dem Licht, andere greifen den Lichtkegel an, einige bleiben darin stehen und wieder andere betrachten den Lichtkegel kurz und ziehen dann weiter. Diese Verhaltensmuster werden mitunter Emotionen zugeordnet. Hier ist jedoch f ¨ur einen sprachbewussten Biologieunterricht wichtig, den Unterschied zwischen Verhalten und Emotionen zu verdeutlichen und im Ausdruck auf das Vermeiden von Begriffen zur Vermenschlichung der Roboter zu achten. Tiere, die mitunter vergleichbares Verhalten zeigen, sind z. B. Kellerassel (2a), Motte (2b), Eidechse (3a) und Katze (3b). Bei Aufgabe 6 werden sich Zusammenst ¨oße nicht ganz vermeiden lassen und die Typen 2a) und 3b) m ¨ussen eingefangen werden, bevor sie in dunklen Ecken des Raumes verschwinden bzw. gegen die Wand fahren. 3.2 Unterrichtseinheit in der Chemie: Photometrie Klassenstufe: 9 (abh ¨angig von der Schulform) Vorwissen in Informatik: Kenntnisse von algorithmischen Grundstrukturen, Variablen und Arrays Informatische Inhalte: Roboter als Informatiksysteme, Arrays in der Messwerterfassung, Implementieren von Algorithmen, Physical Computing Robotortyp: LEGO Mindstorms EV3-Stein mit zwei Lichtsensoren Zus¨atzliches Material: K ¨uvetten und K ¨uvettenhalterung, Lebensmittelfarbe (z. B. E132), Wasser, Pipetten, Bechergl ¨aser Tab. 4: Aufgabenproﬁl der Unterrichtseinheit”Photometrie“ Die Absorption von Licht durch farbige L ¨osungen ist ein Alltagsph ¨anomen, das mit Hilfe von photometrischen Untersuchungen quantiﬁziert werden kann. Der Transmissionsgrad tergibt sich aus dem Quotienten der Intensit ¨at des Lichtstrahls vor ( I0) und nach ( I1) dem Durchtritt durch die L ¨osung. Die Extinktion Eergibt sich aus dem Logarithmus des Kehrwerts von tund ist proportional zu der Konzentration cdes lichtabsorbierenden Stoffes und der Wegl ¨ange ddes Lichtstrahls in der L ¨osung. Der Proportionalit ¨atsfaktor ewird als stoffspeziﬁscher, molarer Extinktionskoefﬁzient bezeichnet. So ergibt sich das LambertBeersche Gesetz mit: E=log✓I0 I1◆ =e·c·d (1) Der LEGO Mindstorms EV3-Stein kann verwendet werden um photometrische Messungen durchzuf ¨uhren. Hierbei wird die duale Eigenschaft des Lichtsensors ausgenutzt, der sowohl Lichtintensit ¨aten detektieren, als auch rotes Licht einer Wellenl ¨ange von 632 nm ± 3 nm erzeugen kann. Diese Unterrichtseinheit orientiert sich an dem Artikel”Using LEGO MINDSTORMS NXTTMRobotics Kits as a Spectrophotometric Instrument“ [KWB10], in dem Messungen mit dem Lichtsensor der LEGO Mindstorms mit denen eines Hitachi U-2000 Spektrophotometer verglichen wurden. LEGO Mindstorms k ¨onnen nicht verwendet werden um ekorrekt zu bestimmen, jedoch k ¨onnen Stoffkonzentrationen relativ genau ermittelt und somit das Lambert-Beersche Gesetz im Experiment verdeutlicht werden.Integration des Erwerbs von Basiskonzepten 283ii “proceedings” — 2017/9/17 — 20:19 — page 284 — #284 ii i ii iDer Fokus dieser Unterrichtseinheit bzgl. Chemie liegt somit auf der Durchf ¨uhrung einfacher qualitativer und quantitativer experimenteller Untersuchungen (Basiskompetenz E3) und der Modellnutzung zur Deutung der Lichtabsorption eines Farbstoffs (Basiskonzept ”Struktur-Eigenschafts-Beziehungen“ (F2)). Indigocarmin ist als Lebensmittelfarbstoff Aufgabe Zeit 1. Nehmt euch 10 ml der Indigocarmin-Stamml ¨osung, 10 K ¨uvetten, destilliertes Wasser, eine Pipette und ein leeres Becherglas. Setzt eine Verd ¨unnungsreihe an und f¨ullt jeweils 1 ml in eine K ¨uvette. Notiert euch die Mischungsverh ¨altnisse! Eine der K¨uvetten soll als Leerprobe nur mit destilliertem Wasser gef ¨ullt werden.10 min 2. Baut aus LEGO-Steinen eine K ¨uvettenhalterung mit zwei Lichtsensoren und schließt die Sensoren an euren LEGO Mindstorms EV3-Stein an.5 min 3. Schreibt ein Programm, bei dem die Intensit ¨at des Umgebungslichts von einem der Lichtsensoren mehrfach gemessen, in einem Array gespeichert und auf dem SteinDisplay angezeigt wird. Verwendet die Steintasten um euch die Werte nacheinander anzeigen zu lassen.15 min 4. Ver ¨andert euer Programm nun so, dass der zweite Lichtsensor permanent rotes Licht ausstrahlt. Notiert euch die gemessenen Intensit ¨atswerte ohne Probe und messt nun eine Probe mit mittlerer Verd ¨unnung.10 min 5. Vergleicht eure Messwerte mit denen der anderen Gruppen und diskutiert in Anbetracht der Messwertschwankungen ¨uber eine geeignete Zahl von Wiederholungsmessungen.5 min 6. Erweitert euer Programm nun so, dass ihr alle Proben nacheinander mehrfach vermessen k ¨onnt, ohne das Programm neu starten zu m ¨ussen. Verwendet die Steintasten um die jeweils n ¨achste Messung zu starten und euch die Messwerte nacheinander anzeigen zu lassen. Das Einbauen von Signalt ¨onen hilft, das Ende einer Messreihe zu erkennen. Ihr bekommt zus ¨atzlich eine Probe mit einem euch unbekannten Mischungsverh ¨altnis.20 min 7. Rechnet eure Messwerte mithilfe des Lambert-Beerschen Gesetzes in Extinktionswerte um, subtrahiert den Wert der Leerprobe und stellt die Endergebnisse graﬁsch dar. Legt eine Ausgleichsgerade durch eure Messwerte und bestimmt deren Steigung. Berechnet das Mischungsverh ¨altnis eurer zus ¨atzlichen Probe und diskutiert eure Ergebnisse.15 min Tab. 5: Unterrichtseinheit”Photometrie“: Arbeitsaufgaben und Durchf ¨uhrungsdauer zugelassen und somit in der Handhabung unbedenklich. Er eignet sich f ¨ur dieses Experiment, da sein Absorptionsmaximum bei 608 nm liegt und so das rote Licht des EV3Lichtsensors stark absorbiert. Der Farbstoff ist in vielen Formen erh ¨altlich. Im Rahmen dieses Beispiels wurde eine Tablette Heitmann IRIS-Eierfarbe in 250 ml heißem Wasser gel¨ost und daraus eine Verd ¨unnungsreihe angesetzt. Idealerweise sind Carbons ¨auren schon aus dem Chemieunterricht bekannt, damit ein geeignetes Strukturmodell zur Deutung der Lichtabsorption erarbeitet werden kann. Dieses Experiment k ¨onnte jedoch auch auf rein ph¨anomenologischer Ebene durchgef ¨uhrt werden, ohne dass der Aufbau und die Ursache f¨ur die Lichtabsorption von Indigocarmin im Detail erl ¨autert werden. Der Zusammenhang von Informationen und Daten sollte als Dimension der Informatik thematisiert werden. F ¨ur den Umgang mit Variablen und Arrays in der EV3-Software ist ggf. eine kurze Einf ¨uhrung n¨otig. Lichtsensoren und Steintasten sind hingegen durch erkl ¨arte Wahlm ¨oglichkeiten relativ verst ¨andlich implementiert. Unter Messen muss einer der Lichtsensoren auf St¨arke des Umgebungslichts und der auf St¨arke des reﬂektierten Lichts eingestellt werden. Hier284 Marlene Lindner, Sandra Schulz, Niels Pinkwartii “proceedings” — 2017/9/17 — 20:19 — page 285 — #285 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft fr Informatik, Bonn 2017 9 Abb. 2: Aufbau des Experiments mittels Stein, zwei Lichtsensoren und Kvettenhalterung fr photometrische Messungen sollten aus informatischer Sicht Sensorik, Mglichkeiten der Informationsaufnahme und die Funktionsweise des konkreten Sensors besprochen werden. Die Programmver ¨anderung in Aufgabe 6 ist fakultativ, jedoch l ¨asst sich der Messablauf dadurch beschleunigen und der Umgang mit einer weiteren Variable und verschachtelten Schleifen ¨uben. Das LambertBeersche Gesetz und das Umrechnen der Messwerte sollte erl ¨autert werden, da das Rechnen mit Leerprobe und Logarithmus ggf. Schwierigkeiten bereitet. Die Steigung der Messwerte war in einem Kontrollversuch ann ¨ahernd linear bis zu einem Verh ¨altnis von 1:3. Wenn die Verwendung eines Tabellenkalkulationsprogramms bereits ge ¨ubt wurde, kann die Steigung der Ausgleichsgeraden nat ¨urlich auch von dem Programm bestimmt werden. ¨Uber die Geradengleichung kann nun das Mischungsverh ¨altnis der zus ¨atzlich ausgeteilten Proben ermittelt werden. 4 Zusammenfassung und Ausblick Frei verf ¨ugbare, deutschsprachige Unterrichtseinheiten, die als Ziel haben, Informatik f¨acher ¨ubergreifend mit den MNT-F ¨achern zu unterrichten sowie die konkrete Einbettung in Rahmenlehrplne, sind rar. Neben den pr ¨asentierten Unterrichtseinheiten wurden auch Einheiten zu rationalen Zahlen, ebenen Figuren (Dreiecken und Vierecken), Steuerung und Regelung (Hom ¨oostase durch negative R ¨uckkopplung) der thermischen Zustandsgleichung idealer Gase, gleichf ¨ormiger Bewegung und ged ¨ampften mechanischen Schwingungen ausgearbeitet. Ob sich diese Unterrichtseinheiten positiv auf die Motivation und die Kompetenzentwicklung von SuS auswirken, ist zu ¨uberpr ¨ufen. Sie bieten in jedem Fall die M ¨oglichkeit, erste Pilot-Studien durchzuf ¨uhren und werden interessierten LehrerInnen als OER frei zur Verf ¨ugung gestellt. Zur berprfung der Einsetzbarkeit der vorgeschlagenen Aufgaben sollten diese zunchst in kleinen Gruppen z. B. an Projekttagen mit SchlerInnen getestet und anschlieend ihr Einsatz im Regelunterricht erprobt werden. Im Frhling 2017 wurde das Beispiel zur Biologie (Abschnitt 3.1) mit 7 Schlerinnen der 9. Klasse durchgefhrt. Diese gaben anschlieend an, dass sie dem Kurs gut folgen konnten und sich wnschen wrden, diese Inhalte mit Robotern in der Schule zu behandeln. Unser Dank gilt dem Humboldt-ProMINT-Kolleg fr anregende Gesprche und inhaltliche Untersttzung bei der Entwicklung der Unterrichtseinheiten.Integration des Erwerbs von Basiskonzepten 285ii “proceedings” — 2017/9/17 — 20:19 — page 286 — #286 ii i ii iLiteraturverzeichnis [BB14] Banks, Frank; Barlex, David: Teaching STEM in the Secondary School. Taylor & Francis Ltd, 2014. [Br84] Braitenberg, Valentio: Vehicles: Experiments in Synthetic Psychology. MIT University Press Group Ltd, 1984. [Ge08] Gesellschaft f ¨ur Informatik e.V.: Grunds ¨atze und Standards f ¨ur die Informatik in der Schule. https://www.gi.de/ﬁleadmin/redaktion/empfehlungen/Bildungsstandards 2008.pdf. – Zugriffsdatum: 31.12.16, 2008. [KMa] KMK: Bildungsstandards im Fach Biologie f ¨ur den Mittleren Schulabschluss (Beschluss der Kultusministerkonferenz vom 16.12.2004). [KMb] KMK: Bildungsstandards im Fach Chemie f ¨ur den Mittleren Schulabschluss (Beschluss der Kultusministerkonferenz vom 16.12.2004). [KMc] KMK: Bildungsstandards im Fach Mathematik f ¨ur den Mittleren Schulabschluss (Beschluss der Kultusministerkonferenz vom 04.12.2003). [KMd] KMK: Bildungsstandards im Fach Physik f ¨ur den Mittleren Schulabschluss (Beschluss der Kultusministerkonferenz vom 16.12.2004). [KM16] KMK: Bildung in der digitalen Welt. Strategie der Kultusministerkonferenz. https://www.kmk.org/ﬁleadmin/Dateien/pdf/PresseUndAktuelles/2016/Bildung digitale Welt Webversion.pdf – Zugriffsdatum: 31.12.16, 2016. [KWB10] Kocanda, Martin; Wilke, Bryn M.; Ballantine, David S.: Using LEGO MINDSTORMS NXTTMRobotics Kits as a Spectrophotometric Instrument. International Journal on Smart Sensing and Intelligent Systems, 3(3), 2010. [NG13] NGSS Lead States: Next Generation Science Standards. http://nextgenscience.org. – Zugriffsdatum: 31.12.16, 2013. [OE99] OECD: Measuring Student Knowledge and Skills – A New Framework for Assessment. http://www.oecd.org/edu/school/programmeforinternationalstudentassessmentpisa/ 33693997.pdf – Zugriffsdatum: 31.12.16, 1999. [OI04] O’Sullivan, Dan; Igoe, Tom: Physical Computing: sensing and controlling the physical world with computers. Course Technology Press, 2004. [Se06] Senatsverwaltung f ¨ur Bildung, Sport und Jugend Berlin: Rahmenlehrplan f ¨ur die Sekundarstufe I. Jahrgangsstufe 7–10. ITG Informatik als Wahlpﬂichtfach. 2006. [SP15] Schulz, Sandra; Pinkwart, Niels: Physical Computing in STEM Education. In: Proceedings of the Workshop in Primary and Secondary Computing Education. WiPSCE ’15, ACM, New York, NY, USA, S. 134–135, 2015. [Th16] The LEGO Group: LEGO MINDSTORMS Education EV3; Aufgaben f ¨ur den MINTUnterricht. https://le-www-live-s.legocdn.com/sc/media/ﬁles/curriculum/le ev3aufgabenfuer unterricht-30d0cec3ed3ce82fe35811eed0b42a2e.pdf. – Zugriffsdatum: 31.12.16, 2016. [VD07] VDI: Bildungsstandards Technik f ¨ur den Mittleren Schulabschluss. https://www.vdi.de/ﬁleadmin/vdi de/redakteur dateien/sk dateien/VDI%20Bildungsstandards 2007.pdf. – Zugriffsdatum: 31.12.16, 2007. [Ve16] Vernier Software & Technology: Vernier Engineering Projects with LEGO MINDSTORMS Education EV3. http://www.vernier.com/products/books/ep-ev3/. – Zugriffsdatum: 31.12.16, 2016.286 Marlene Lindner, Sandra Schulz, Niels Pinkwartii “proceedings” — 2017/9/17 — 20:19 — page 287 — #287 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017    15 Ein Framework zur Einordnung programmierbarer Baukästen in interdisziplinäre Bildungskontexte Eva-Sophie Katterfeldt1, Nadine Dittert2  Abstract: Aktuell gibt es eine große Anzahl verschiedener programmierbarer Baukästen mit Mikrocontroller für den Bildungsbereich und ständig kommen neue hinzu – das jüngste Beispiel ist Calliope. Sie ermöglichen es nicht nur, informatische und elektrotechnische Themen in kreati-vem Umgang zu vermitteln, sondern bieten im Sinne einer umfassenden digitalen Bildung An-knüpfungspunkte an eine Vielzahl von Schulfächern. In unserer langjährigen Erfahrung mit dem Einsatz solcher Kits in informellen Bildungskontexten mit diversen interdisziplinären Themen-schwerpunkten hat sich gezeigt, dass die jeweiligen Kit-Designs unterschiedliche Eignung aufwei-sen. Wir präsentieren ein Framework mit Taxonomie, das Lehrende in formellen und informellen Bildungskontexten bei der Wahl passender Baukästen für ihren Anwendungsfall leitet.  Keywords: Construction Kits; programmierbare Baukästen; Framework; Interdisziplinarität. 1 Einleitung und Hintergrund Programmierbare Baukästen kamen in den 1990er Jahren am MIT auf. Es handelt sich um programmierbare Mikrocontroller für junge Anwender*innen, die mit Sensoren und Aktuatoren erweitert werden. Mittlerweile gibt es eine unglaubliche Vielzahl solcher ‘Kits’ die verschiedene Designs aufweisen [Bl15]. Um eine Orientierungshilfe ihrer Eignung für interdisziplinäre Projekte zu bieten, haben wir ein Framework entwickelt. 2 Framework und Taxonomie Das Framework wurde in einem Diskurs wöchentlicher Diskussionen über einen Zeit-raum von drei Monaten anhand langjähriger praktischer Erfahrungen mit programmier-baren Baukästen (‚Construction Kits’) mit jungen Menschen im Alter von 9-18 Jahren [Ka15] sowie Literaturrecherchen entwickelt. Gegenstand dieses Artikels ist eine Taxo-nomie innerhalb des Frameworks, die Merkmale von Kits auf interdisziplinäre Anwen-dungen bezieht: ‘Welche Merkmale programmierbarer Baukästen sind für bestimmte Anwendungsgebiete relevant?’ Für die ersten „programmable bricks“ wurden Projekt-ideen in verschiedenen Anwendungsbereichen vorgeschlagen: das Tracking des eigenen Körpers, die Überwachung von Räumen, das Kreieren ‘intelligenter’ Gegenstände, na-turwissenschaftliche Experimente oder das Erschaffen autonomer Wesen [Re96]. Zwar                                                              1 Universität Bremen, FB3/dimeb, Bibliothekstr. 5, 28359 Bremen, evak@tzi.de 2 Universität Bremen, FB3/dimeb, Bibliothekstr. 5, 28359 Bremen, ndittert@tzi.de I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 287ii “proceedings” — 2017/9/17 — 20:19 — page 288 — #288 ii i ii i Ein Framework für programmierbare Baukästen    16 sind bei aktuellen Kits neue Möglichkeiten hinzugekommen (z.B. IoT), die genannten sind aber nach wie vor gültig, wie Literaturrecherchen belegen [Pa17]. Basierend darauf wurden folgende Anwendungsfälle für die Taxonomie festgelegt: ● Geschichtenerzählen: Projekte, bei denen Artefakte (auch als autonome Wesen) am Rollenspiel beteiligt sind, z.B. einer interaktiven Theateraufführung. ● Spieldesign: Entwicklung von Computerspielen, die mit einem Kit (oder Artefakt, in das dies eingebettet ist) als Eingabegerät gesteuert werden.  ● ‘Intelligente’ Gegenstände: Erfinden und Gestaltung intelligenter Objekte, z.B. durch ‘Hacken’ bestehender oder Basteln neuartiger Artefakte. ● Autonome Wesen: Roboter oder Fahrzeuge, die sich autonom bewegen können. ● Erfassung körperlicher Aktivität: ‘Tracking’ von Bewegungen und Aktivitäten des menschlichen Körpers. Erfordert das Verbinden von Komponenten mit dem Körper.  ● Naturwissenschaftliche Experimente: Das Erstellen von Messgeräten, die Sensorda-ten z.B. von Temperatur, Luft, Wasserqualität erfassen und ggf. auswerten. Diesen Anwendungskategorien werden Merkmale zugeordnet, die erforderlich sind, um entsprechende Projekte möglichst erfolgreich umzusetzen, und die sich auf äußerliche Designmerkmale, technische Schnittstellen und Programmiermöglichkeiten beziehen. ● Alleinstehend: Das Kit kann ohne dauerhaften Anschluss an einen Rechner verwen-det werden. Wichtig für Projekte, bei denen das Artefakt herumgetragen werden soll. Bspw. nicht erfüllt von LEGO Wedo1.0, im Gegensatz zu Wedo2.0 [LW17].  ● All-in-one: Sensoren und Aktuatoren sind auf dem Mainboard integriert, so dass es ohne Anschluss weiterer Komponenten einsatzbereit ist. Z.B. [Ca17], [En17]. ● Möglichkeit der Einbettung: Inwiefern das Kit oder einzelne Komponenten in ande-re physische Objekte integrierbar sind, z.B. durch flexible Kabellängen, Anschlüsse für nicht-technische Materialien [LM17, PC17] oder geringe Größe ([AB17] Nano).  ● Wearable: Unterkategorie von ‘Einbettung’. Erfüllt von Kits, die sich mit dem Kör-per verbinden lassen z.B. über Kleidung [BE08].  ● Sensorenvielfalt: Verfügbarkeit mehrerer verschiedener Sensortypen, die Projekt-vielfalt und -komplexität unterstützen. Kits mit Breadboards [AB17] oder [AT17]  unterstützen durch Erweiterbarkeit viele, LEGO Wedo2.0 nur zwei Sensortypen. ● Motorik: Die Anschlussfähigkeit von Motoren, die das Artefakt beweglich machen, z.B. [LW17, LM17]. [AB17] erfordern i.d.R. Erweiterungsshields, die sich auf Ein-bettung und Tragbarkeit negativ auswirken. ● Zahlreiche I/O-Schnittstellen: Relevant für den Anschluss vieler externer Sensoren, Aktuatoren oder zusätzlicher Shields. Z.B. hat [AB17] Mega viele, [Ca17] wenige.  ● USB-Client: Das Kit wird als Eingabemedium von einem Rechner erkannt, um z.B. 288 Eva-Sophie Katterfeldt, Nadine Dittertii “proceedings” — 2017/9/17 — 20:19 — page 289 — #289 ii i ii i Ein Framework für programmierbare Baukästen    17 Maus und Tastatur zu ersetzen, z.B. [MM17]. Relevant für Game-Controller-Bau.  ● Kabellose Vernetzbarkeit: Kits können miteinander oder mit anderen Geräten draht-los kommunizieren. Relevant für Theateraufführungen oder IoT, z.B. [LM17] EV3. ● Programmierbarkeit: Inwiefern Kits programmierbar sind. Z.B. sind [LB17] origi-när nicht programmierbar, daher ist ihr Verhalten begrenzt. Erhöht sich bei Kits, die umfangreiche textuelle Programmiersprachen (z.B. Arduino IDE) unterstützen. ● Datenspeicherung: Das Board kann größere Datenmengen speichern. Relevant u.a. bei naturwissenschaftlichen Experimenten. Z.B. [En17] mit SD-Kartensteckplatz. Tabelle 1 ordnet relevante Kit-Merkmale den Anwendungsfällen zu.  Merkmal erWünscht o. erForderlich für Anwen-dungsfall Ge-schich-tenerz. Spielde-sign Intel. Objekte Auton. Wesen Erf. körperl. Akt. naturw. Exp. Alleinstehend F  F W F W All-in-one  W     Einbettung   F  F W Wearable W    F  USB-client  F     Sensorvielfalt W  W W F F Motorik F   F   Zahlreiche I/O   W  W W kabellose Konnektivität W  W  W W Programmierbarkeit W W W W F F Datenspeicherung      W Tab. 1: Taxonomie der Objekt-Perspektive: Kit-Eigenschaften nach Anwendungsfall. 3 Anwendung und Diskussion des Frameworks Unser Framework konzentriert sich darauf, Kits mit Anwendungsgebieten in Verbindung zu bringen, für die sie sich anhand ihrer baulichen Merkmale am ehesten eignen. Für ein Projekt können mehrere Anwendungsfälle der Taxonomie relevant sein. Z.B. ein Thea-terstück mit Robotern (Geschichtenerzählen und Autonome Wesen) oder Messung und Auswertung eigener Bewegungen (Naturwiss. Experimente und Erfassung körperlicher Aktivität). Ebenso kann die Taxonomie genutzt werden, um geeignete Anwendungen für vorrätige Kits zu identifizieren. Mitunter ist kein klares Ergebnis hinsichtlich der Eig-nung eines Kit-Typs zu erwarten und weitere kontextuelle Aspekte sind abzuwägen (z.B. Vorkenntnisse). Beispielsweise hängt eine ausreichende Vielfalt an Sensoren ab von der Ein Framework zur Einordnung programmierbarer Baukästen im Bildungskontext 289ii “proceedings” — 2017/9/17 — 20:19 — page 290 — #290 ii i ii i Ein Framework für programmierbare Baukästen    18 angestrebten Artefaktkomplexität, vom Vorwissen der Beteiligten und Projektdauer. 4 Fazit und Ausblick Dieser Beitrag liefert ein Framework, das Merkmale programmierbarer Baukästen typi-schen interdisziplinären Anwendungsfällen zuordnet und Orientierung bei der Wahl passender Kits im Bildungsbereich bietet. Zukünftig wollen wir das Framework um Perspektiven auf beteiligte Akteur*innen und Lernumgebung und -kontext erweitern.  5 Danksagung Diese Forschung war Teil des Projekts PELARS innerhalb des 7. Rahmenforschungs-programms der Europäischen Union unter Förderkennzeichen 619738.  Literaturverzeichnis [AB17] Arduino Boards, https://www.arduino.cc/en/Main/Products, Stand: 26.05.2017. [AT17] Arduino TinkerKit, http://arduino.org/products/tinkerit, Stand: 11.02.2017.  [Bl15]  Blikstein, P.: Computationally Enhanced Toolkits for Children: Historical Review and a Framework for Future Design. Foundations and Trends® in HCI. 9, 1, 1–68, 2015. [BE08] Buechley, L., Eisenberg, M.: The LilyPad Arduino: Toward Wearable Engineering for Everyone. IEEE Pervasive Computing. 7, 2, 12–15, 2008.  [Ca17] Calliope, http://www.calliope.cc, Stand: 11.02.2017. [En17] Engduino, http://www.engduino.org, Stand: 11.02.2017. [Ka15] Katterfeldt, E.-S. et al.: Designing digital fabrication learning environments for Bil-dung: Implications from ten years of physical computing workshops. International Journal of Child-Computer Interaction. 5, 3–10, 2015. [LB17] LittleBits. https://littlebits.cc, Stand: 26.05.2017. [LM17] LEGO Mindstorms, https://www.lego.com/de-de/mindstorms, Stand: 11.02.2017. [LW17]  LEGO WeDo, https://education.lego.com/de-de/grundschule/shop, Stand: 11.02.2017. [MM17] MakeyMakey, http://makeymakey.com, Stand: 11.02.2017.1. [Pa17] Papavlasopoulou, S. et al.: Empirical studies on the Maker Movement, a promising approach to learning: A literature review. Entertainment Computing. 18, 57–78, 2017. [PC17] PicoCricket, http://picocricket.com, Stand: 11.02.2017. [Re96] Resnick, M. et al.: Programmable Bricks. IBM Sys. Journal. 35, 3.4, 443–452, 1996. 290 Eva-Sophie Katterfeldt, Nadine Dittertii “proceedings” — 2017/9/17 — 20:19 — page 291 — #291 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017     Das EduFab-Kit – Ein modularer FabLab-Baukasten für Lehrer*innen Nadine Dittert1, Eva-Sophie Katterfeldt2 Abstract: Das digitale Herstellen von Produkten – oder Making – ist in den Bildungsbereich vorgedrungen. Die Idee des konstruktiven Arbeitens mit digitalen Medien ist nicht neu, erhält aber durch FabLabs und Makerspaces und dem damit geschaffenen Zugang zu 3D-Druckern, Laser-Cuttern, etc. neuen Nährboden für das Lernen. Neue Anwendungsmöglichkeiten allein genügen jedoch nicht: es braucht Konzepte, Materialien und konkrete Ideen, wie Technologie Teil eines Lernprozesses werden kann. Wir präsentieren das EduFab Kit, das Lernaktivitäten im FabLab für Anfänger*innen unterstützt. Das Kit hilft Lehrer*innen dabei, Lernumgebungen zu schaffen, in denen Schüler*innen ausgehend von ihren eigenen Ideen Produkte mit dem 3D-Drucker, dem Laser-Cutter, Mikrocontrollern o.ä. entwickeln. Das Kit besteht aus Materialien in einem modularen Koffer, einem generellen Konzept zur Arbeit mit jungen Menschen im FabLab im Bildungskontext und Beispielworkshops, die mit dem Kit durchgeführt werden können. Weiterhin beinhaltet das Kit Anleitungen und Listen für zusätzlich notwendiges Material und Maschinen des FabLabs.  Keywords: FabLab; Kit; außerschulischer Lernort; Informatik; Digitale Medien; Lernen; Schüler*innen; Konstruktionismus. 1 Einleitung Fabrication Laboratories (FabLabs) ermöglichen Menschen verschiedenen Hintergrunds den Zugang zu High-Tech-Maschinen, die zuvor einem eher begrenzten Teil der Bevölkerung vorbehalten war. Technologien wie Mikrocontroller, 3D-Drucker, 3D-Scanner, Laser-Cutter und CNC-Fräsen bieten grundlegend neue Möglichkeiten zur kreativen Gestaltung von (digital entwickelten) Produkten. Genutzt wird dies von Menschen, die aus verschiedenen persönlichen und auch beruflichen Interessen heraus Dinge herstellen. Dieses Herstellen – Englisch making – rückt nicht ohne Grund mehr und mehr in den Mittelpunkt von Lernprozessen: es macht digitale Modelle „be-greifbar“.  2 Hintergrund Der Begriff „Be-greifbarkeit“ verdeutlicht das Zusammenspiel von Anfassen und Verstehen, von Fühlen und Denken [RS12], was der aktive Umgang mit FabLab                                                            1 Universität Bremen, FB3/dimeb, Bibliothekstr. 5, 28359 Bremen, ndittert@tzi.de 2 Universität Bremen, FB3/dimeb, Bibliothekstr. 5, 28359 Bremen, evak@tzi.de I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 291ii “proceedings” — 2017/9/17 — 20:19 — page 292 — #292 ii i ii i 16 Nadine Dittert und Eva-Sophie Katterfeldt  Technologien grundsätzlich in sich birgt. Im FabLab steht das Erschaffen von Objekten im Mittelpunkt. In einem konstruktionistischen Lernprozess ist ein solches Objekt der sogenannte „Gegenstand-mit-dem-man-denkt“ – es ist Ausdruck gedanklicher Modelle, die reflektiert und angepasst werden können [Pa80]. Nicht jede Konstruktionstätigkeit im FabLab bedeutet gleichzeitig, dass konstruktionistisches Lernen stattfindet. Neben der Notwendigkeit der Reflexion des Prozesses verlangt dieses Lernparadigma einen wesentlichen Aspekt: die persönliche Bedeutsamkeit des erschaffenen Produkts.  Aus diesem Blickwinkel betrachtet das Projekt EduFab das FabLab als Lernort für Schüler*innen. Die Möglichkeiten, die die Maschinen an sich bieten, müssen didaktisch aufbereitet werden, um einen konstruktionistischen Lernprozess zu ermöglichen. Die Schüler*innen müssen dabei begleitet werden, aus einer Idee mit der vorhandenen Technologie ein Produkt zu entwickeln. Gleichzeitig soll die persönliche Bedeutsamkeit berücksichtigt werden. Dazu soll der Prozess um die Ideenfindung und die Präsentation des Produkts erweitert werden. Um ein FabLab – oder ähnlich ein Makerspace oder Hackerspace – zu einer Lernumgebung nach diesen Kriterien zu machen, braucht es passende Konzepte und Materialien.  Für diesen Zweck haben wir das EduFab-Kit entwickelt. Es ist eine Zusammenstellung von Materialien, Werkzeugen und Listen, die die Nutzung des FabLabs als Lernort für und mit jungen Menschen fördert. In einem didaktischen Konzept werden Anfänger*innen zu Aktivitäten angeregt und dazu befähigt, zum Maker oder zur Makerin zu werden. In unterschiedlichen von uns ausgearbeiteten Szenarien geht es darum, dass Schüler*innen fantasieren, explorieren, kreieren, modellieren, programmieren, drucken und cutten. Schlussendlich halten sie ein Produkt in der Hand, das ausgehend von ihrer Lebenswelt und nach ihren Ideen entsteht.  Als Arbeitsgruppe „Digitale Medien in der Bildung“ (dimeb) blicken wir auf langjährige Forschungsund Entwicklungserfahrung zum Einsatz Digitaler Medien im Bildungskontext zurück. Das Aufkommen von FabLabs und deren Nutzen für das Lernen ist in den letzten Jahren ins Zentrum unserer Forschung gerückt. Dabei haben wir unsere Erkenntnisse, die vor allem aus dem Bereich des Umgangs mit Mikrocontroller-Baukästen in Lernkontexten stammen, auf die neuen Technologien angewandt und in diesem erweiterten Bereich geforscht und entwickelt. Ein Ergebnis ist das hier dargestellte EduFab-Construction Kit.  3 Das EduFab-Kit Das EduFab-Construction Kit (kurz: EduFab–Kit) wurde entwickelt, um Schüler*innen die FabLab-Umgebung und deren Technologien konkret anhand von Beispielen erfahrbar zu machen. Eingebettet in ein didaktisches Konzept können die Technologien erkundet und mit ihnen experimentiert werden, um zu Grunde liegende Funktionsweisen zu „be-greifen“. Das EduFab-Kit soll Lehrer*innen Wege eines geeigneten Zugangs zur Arbeit mit Kindern und Jugendlichen im FabLab zeigen und zur Vermittlung und 292 Nadine Dittert, Eva-Sophie Katterfeldtii “proceedings” — 2017/9/17 — 20:19 — page 293 — #293 ii i ii i Das EduFab Kit   17 produktiven Nutzung von FabLab-Technologien für Kinder und Jugendliche anregen. Es richtet sich zunächst an Menschen ohne Vorerfahrung mit FabLab-Technologien und soll dabei helfen, deren Neugier zu wecken. Es kann jedoch auch erweitert und darüber hinaus genutzt werden. Das EduFab-Construction Kit besteht aus verschiedenen Teilen: • einem (Material-) Koffer mit „Tools“ zum Arbeiten,  • einem (Workshop-) Konzept als Vorschlag für die Arbeit mit jungen Menschen im FabLab, • ausgearbeiteten Beispielworkshops, bei denen Anfänger*innen im FabLab mit verschiedenen Technologien in Berührung kommen sowie • Anleitungen, wie einer Bauanleitung zum Koffer, und Listen über weitere benötigte (Arbeits-) Materialien, Software und Anregungen für weitere Arbeiten im FabLab. Zusätzlich wird zu diesem Kit ein Materiallager benötigt, in dem beispielsweise Filament für den 3D-Drucker sowie Holz-, Acryloder Pappplatten für die Arbeit mit dem Laser-Cutter in ausreichenden Mengen vorhanden sind. Dies ist meist in FabLabs vorzufinden. Vorschläge für eine Mindestausstattung an Material, das für die spezifischen Workshops zur Verfügung stehen sollte, sind in den Anleitungen enthalten und dienen als Grundlage für Absprachen mit dem FabLab, in dem gearbeitet wird.  Das EduFab-Construction Kit selbst folgt der Idee des „Learning-by-doing“. Lehrer*innen werden selbst aktiv, bevor sie mit den Schüler*innen arbeiten. Ihre Arbeit beginnt „Hands on“ mit dem Bau eines eigenen EduFab-Koffers. Dieser liegt als digitales Modell zur eigenständigen Produktion vor. Der Inhalt des Koffers steht (zunächst) in Form von Materiallisten zur Verfügung, Handreichungen und Materialien stehen in Papierform oder als druckfertige Dateien bereit. Der Koffer „wächst“ mit den Erfahrungen der Lehrenden – je mehr Workshops durchgeführt wurden, umso mehr Ebenen existieren für den Koffer. Seine Modularität lädt zusätzlich dazu ein, eigene Workshops zu entwickeln und dafür eigene Ebenen zu erstellen.  3.1 Der EduFab-Koffer Der EduFab-Koffer ist ein im FabLab mit dem Laser-Cutter hergestellter modular gestalteter Kasten (siehe Abbildung 1). Er enthält die „Tools“, die für die Arbeit im FabLab benötigt werden. Unter anderem ist damit seine eigene Produktion bzw. die weiterer Koffer möglich – der Koffer selbst ist ein autoreplikatives System. Der Grundgedanke ist dabei, mit dem Bauen des Koffers die erste eigene praktische Arbeit im FabLab umzusetzen, sozusagen ein „Hello World“ mit dem Laser-Cutter. Bei Das EduFab-Kit – Ein modularer FabLab-Baukasten für Lehrer*innen 293ii “proceedings” — 2017/9/17 — 20:19 — page 294 — #294 ii i ii i 18 Nadine Dittert und Eva-Sophie Katterfeldt  der Konzeption des Koffers wurde darauf geachtet, eine möglichst vielfältige Bandbreite an Arbeitstechniken mit dem Laser-Cutter abzudecken (Schnitt und Gravur, Steckmechanismen, Flexibilität) um eine aktive Auseinandersetzung mit diesen Techniken anzuregen.     Abb. 1: Der EduFab-Materialkoffer  Der EduFab-Koffer besteht aus verschiedenen Ebenen, die aufeinander stapelbar sind. Diese Bauweise ermöglicht es, individuell Inhalte zu verändern, auf verschiedene Bedürfnisse anzupassen und sie selbst zu erweitern.  Die unterste Ebene beinhaltet das Basiskit, das grundsätzlich für die Arbeit im FabLab hilfreich ist und vorwiegend für die Anfertigung des Koffers selbst notwendig ist. Sie ist, im Gegensatz zu den weiteren Ebenen, ständiger Bestandteil des Materialkoffers und personalisierbar. Die Grundebene besteht aus einem Sortierkasten mit einem nach oben herausragenden Griff und einem Deckel. Die Größe wird durch ein darunter liegendes Fach bestimmt, in das Papier der Größe DIN A4 passt. Zusätzlich gibt es für verschiedene Workshops weitere Ebenen, die das spezifische Material für ein konkretes Workshopszenario enthalten (siehe Abbildung 2). Diese Sortierkästen ähneln der Grundebene, haben jedoch statt des Griffs eine Öffnung und  294 Nadine Dittert, Eva-Sophie Katterfeldtii “proceedings” — 2017/9/17 — 20:19 — page 295 — #295 ii i ii i Das EduFab Kit   19 können so auf die Grundebene aufgesetzt werden. Sie enthalten herausnehmbare Elemente, so dass die Größe der jeweiligen Fächer anpassbar ist. Auf die oberste Ebene wird der Deckel gepackt und der Kasten lässt sich als geschlossener Materialkoffer transportieren. Auf diese Weise ist der EduFab-Materialkoffer modular gehalten. Für einen speziellen Workshop werden Grundebene und Workshop-spezifische Ebene zusammengesteckt. Gleichzeitig ist der Materialkoffer flexibel erweiterbar: Nutzende sind eingeladen, Teile des bestehenden Systems auf eigene Bedürfnisse anzupassen oder auch weitere Ebenen und Materialien zu entwickeln und mit der Community der Maker*innen und Fabber*innen zu teilen.    Abbildung 2: Die Schmuckebene des EduFab-Materialkoffers Aktuell existieren fünf verschiedene Ebenen, die den diversen Möglichkeiten der Digitalen Fabrikation im FabLab – orientiert an den Geräten des FabLab Bremen – zugeordnet sind und in dem Dokument „Der EduFab-Koffer :: Der Inhalt“3 näher erläutert werden. Für jede dieser Ebenen stehen zusätzlich zu den „Tools“ Materialien zur Erläuterung bzw. zum Umgang im Workshop zur Verfügung.                                                              3 http://www.dimeb.de/edufab/wordpress/wp-content/uploads/2016/11/edufab_koffer_inhalt.pdf  Das EduFab-Kit – Ein modularer FabLab-Baukasten für Lehrer*innen 295ii “proceedings” — 2017/9/17 — 20:19 — page 296 — #296 ii i ii i 20 Nadine Dittert und Eva-Sophie Katterfeldt  3.2 Das Workshopkonzept Das Workshopkonzept dient als Vorschlag für den Einstieg in die Arbeit mit jungen Menschen im FabLab. Es beschreibt, wie die digitale Fabrikation mittels FabLab-Technologien (z.B. 3D-Drucker, Laser-Cutter, Plotter, Arduino) in einem Workshop mit Kindern und Jugendlichen didaktisch begleitet werden kann. Es ist angelehnt an das TechKreativ-Konzept [Di12], das nun seit mehr als 10 Jahren angewandt und weiterentwickelt wird, um es (jungen) Menschen ohne Vorkenntnissen zu ermöglichen, selbst Technologie zu konstruieren und gleichzeitig einen Bildungsbeitrag zu leisten [Ka15]. In diesem Rahmen wird Informatik „gemacht“ – von einer Problemstellung über eine praktische Lösung (inklusive eines Programmierteils) zur Präsentation. Die Kinder und Jugendlichen werden dazu in ihrer Erlebniswelt „abgeholt“ und dabei begleitet, eigene Ideen umzusetzen und am Ende zu präsentieren. Der Prozess verläuft in fünf Phasen, die im Folgenden beschrieben werden.  Ziel der ersten Phase, der Fantasiephase, ist eine freie Idee, die aus der Lebenswelt der Teilnehmenden kommt. Sie wird mittels Kreativmethoden, beispielsweise durch ein Brainstorming, generiert. Die Teilnehmenden sollen sich mit der Aufgabe identifizieren und ihre eigenen Ideen einbringen können, da die persönliche Bedeutsamkeit eine wichtige Grundlage für das Lernen im Workshop darstellt.  Im Anschluss an die Fantasiephase wird die Technologie vorgestellt (Phase 2: Technologieeinführung). In kleinen Gruppen werden den Teilnehmenden an Stationen die verschiedenen zur Verfügung stehenden Technologien erklärt. Dies geschieht so praktisch wie möglich, ohne jedoch konkrete Beispiele zu benennen, die im Workshop nachgebaut werden können. Eine kleine Hands-on–Aufgabe, bei der die Teilnehmenden erfolgreich aktiv werden, beendet die Technologieeinführung. An dieser Stelle wird auch das zu verwendende Material gezeigt.  Das Wissen über Technologie und Material und die Ergebnisse der Fantasiephase dienen als Ausgangspunkt zur Entwicklung konkreter Ideen (Phase 3: Ideenfindung). Aufgabe der Tutorin oder des Tutors ist es, gemeinsam mit den Teilnehmenden eine im Rahmen des Workshops umsetzbare Idee pro Kleingruppe zu entwickeln. Diese hat am Ende dieser Phase eine wahrnehmbare Form, z.B. als Beschreibung oder Zeichnung.  In der vierten Phase (Konzeptentwicklung, Konstruktion und Programmierung bzw. Modellierung) beginnt nun die genauere Konzeption des Objekts sowie dessen Umsetzung. Die Teilnehmenden setzen aktiv ihre Ideen um und werden dabei von den Tutor*innen unterstützt, jedoch nicht instruiert. Am Ende der vierten Phase steht der „finale Prototyp“ – das Produkt.  Zuletzt wird das Produkt präsentiert (Phase 5: Präsentation) und durch die Verbalisierung reflektiert. Der Workshop endet mit einem positiven Erlebnis.  Im Laufe des Workshops ist es wichtig, kontinuierlich Bezüge der aktuellen Arbeit zur Erlebniswelt der Teilnehmenden, zum Alltag und zur Welt herzustellen. Dabei wird auf 296 Nadine Dittert, Eva-Sophie Katterfeldtii “proceedings” — 2017/9/17 — 20:19 — page 297 — #297 ii i ii i Das EduFab Kit   21 ähnliche Anwendungen sowie auf Anwendungsbereiche wie Forschung, Medizin, Kunst und Hobby eingegangen.  3.3 Drei ausgearbeitete Beispielworkshops Im Rahmen des Projekts sind drei beispielhafte Workshops, bei denen Anfänger*innen im Alter von 13 bis 19 Jahren im FabLab mit verschiedenen Technologien in Berührung kommen, entstanden. Mit diesen konkreten Anleitungen können Lehrer*innen oder Tutor*innen die Workshops durchführen4. Dabei wird das zuvor beschriebene Konzept angewandt. Das notwendige Material befindet sich in der dazu gehörenden Ebene des Koffers.  Der Kurzworkshop ,,Stoffdrucke programmieren” bietet Anfänger*innen einen praktischen Einstieg in textuelle Programmierung mit Processing und setzt das Programmierte künstlerisch um. In drei Stunden programmieren die Teilnehmenden aus einfachen Formen eine Figur oder ein Muster, die sie mit dem Plotter ausschneiden und dann auf einen Stoffbeutel aufbügeln können. Inhaltlich sehr ähnlich ist der Kurzworkshop „Programmierte Schmuckstücke” in dem ebenso ein Muster in Processing programmiert wird. Hierbei entstehen jedoch Muster für Kettenanhänger oder Ohrringe, die mit dem Laser-Cutter ausgeschnitten und – wenn gewünscht – graviert werden. In dem Workshop „Analytische Geometrie am Beispiel von Gebäuden“ werden Grundelemente der analytischen Geometrie am Beispiel des Modellbaus von Gebäuden eines zentralen Platzes im Lebensraum der Lernenden erarbeitet. Arbeitsteilig in Kleingruppen werden einzelne Gebäudemodelle erstellt und dann auf dem Modellplatz gemäß ihrer exakten Position aufgestellt. 3.4 Weitere Anleitungen Als weitere Anleitungen stehen u.a. eine Bauanleitung zum Koffer, die Schnittdatei und der Inhalt des Koffers einschließlich Listen über weitere benötigte (Arbeits-) Materialien online zur Verfügung. 4 Erfahrungen im Umgang mit dem EduFab-Kit Besonders viel Arbeit und Überlegungen sind in die Anpassung des  bewährten TechKreativ-Konzeptes auf die „neuen“ Maschinen geflossen. Dabei waren uns zwei Aspekte besonders wichtig: der Anschluss an die Lebenswelt der Teilnehmenden und die Nutzung der Produktionsmaschinen für einen konstruktiven Einblick in die Informatik. Die im Folgenden beschriebenen Erfahrungen beziehen sich insbesondere auf die                                                              4 Alle Anleitungen zu den Workshops sowie zum Koffer sind unter http://www.dimeb.de/edufab/material zu finden. Das EduFab-Kit – Ein modularer FabLab-Baukasten für Lehrer*innen 297ii “proceedings” — 2017/9/17 — 20:19 — page 298 — #298 ii i ii i 22 Nadine Dittert und Eva-Sophie Katterfeldt  Workshops „Stoffdrucke programmieren“ und „Programmierte Schmuckstücke“5.  Um an die Interessen der Kinder und Jugendlichen anzuschließen, suchten wir nach Szenarien, in denen Dinge entstehen, die sie im Alltag nutzen können und die gleichzeitig eine persönliche Note zulassen. Die Wahl von Schmuckstücken und Stoffbeuteln hat sich hierbei als geeignet und darüber hinaus als interessantes Thema für diverse Zielgruppen (u.a. Mädchen, Programmierinteressierte, Geflüchtete) erwiesen. Die Teilnehmer*innen waren stolz auf ihre Produkte, deren Nutzung im Alltag sie in den Workshops angekündigt hatten. Persönliche Bezüge zeigten sich in den entworfenen Mustern und Formen: zwei Teilnehmerinnen, die in der Fantasiephase einen Fisch zeichneten, weil sie gerne schwimmen, setzten diesen um, ebenso wie zwei Mädchen, die gerne Eis essen und in der Fantasiephase eine Eiswaffel zeichneten. Beides wurde programmiert und geplottet (siehe Abbildung 3). Zahlreiche weitere umgesetzte Beispiele dieser Art zeigen, dass der Umgang mit dem EduFab-Kit einschließlich der Anwendung des Konzeptes die Konstruktion persönlich bedeutsamer Objekte fördert.  Das Ziel, mit dem EduFab-Kit einen aktiven Einblick in die Informatik zu geben, wurde umgesetzt, indem einerseits der Prozess der Problemlösung aktiv durchlaufen wird und andererseits darin Formen und Muster programmiert werden, statt sie mit einem Grafikprogramm zu erzeugen. Diese Szenarien sind nur ein kleiner Einblick und zeigen lediglich allererste Programmierschritte. Nichtsdestotrotz wurde durch Programmierung, also durch „dem Computer in einer seiner Sprachen zu sagen, was er tun soll“, ein Objekt erschaffen, statt den Computer als Zeicheninstrument zu nutzen. Die Szenarien sind durchaus erweiterbar, was bereits teilweise erfolgreich getestet wurde.  Das eigenständige Konstruieren eines EduFab-Koffers durch Lehrer*innen konnte aus Zeitgründen bisher nicht getestet werden. Ein Testlauf mit zwei Teilnehmerinnen hat jedoch gezeigt, dass es sinnvoll ist, die Konstruktion eines Koffers durch Tutor*innen zu begleiten, die an einigen Stellen hilfreiche Tipps geben können. Für Workshops mit mehreren Lehrer*innen sollten einige Teile des Koffers aus zeitlichen Gründen bereits im Vorfeld gecuttet werden. Das Design des Koffers fand bisher viel Lob und Zustimmung, ebenso wie die Idee, darin Workshopmaterialien aufzubewahren. In unseren Workshops nutzen wir gerne diese Gelegenheit, uns ist jedoch nicht bekannt, ob Lehrer*innen tatsächlich mit dem entworfenen Koffer und ihrer Klasse ins FabLab gehen.  Ein nicht zu verschweigender Aspekt ist der Kostenaufwand der beschriebenen Aktivitäten. Die Produkte selbst, die Nutzung der Maschinen und das (zusätzlich notwendige) Personal müssen berücksichtigt werden. Im Rahmen des Projekts haben wir teilweise versucht, Kostenfaktoren gering zu halten. Das Stoffdrucke-Szenario gleicht inhaltlich bewusst dem Schmuckszenario, weil ein Plotter wesentlich günstiger zu                                                              5 Im Geometrie-Workshop steht das Anwendungsfeld Geometrie im Vordergrund, nicht die Informatik. Die persönliche Bedeutsamkeit ist nicht vergleichbar mit den beiden genannten Workshops. Dennoch wurde bewusst der heimische Marktplatz als Szenario ausgewählt, um einen persönlichen Bezug zuzulassen. 298 Nadine Dittert, Eva-Sophie Katterfeldtii “proceedings” — 2017/9/17 — 20:19 — page 299 — #299 ii i ii i Das EduFab Kit   23 betreiben ist bzw. aufgrund seiner vergleichsweise geringen Anschaffungskosten eventuell sogar Teil der Schulausstattung sein könnte. Nichtsdestotrotz ist ein EduFab-Workshop nicht vergleichbar mit einer Klassenraumsituation, in der eine Lehrkraft mit 25 Schüler*innen an Rechnern arbeitet.   Abb. 3: Skizze, Quellcode, Processing-Ergebnis und Stoffdruck einer Eiswaffel 5 Fazit und Ausblick Das EduFab-Kit bietet Lehrer*innen einen Zugang zum FabLab bzw. zu Technologien des FabLabs und Ideen für Workshops mit jungen Menschen. Die dargestellten Beispiele zeigen, dass es möglich ist, FabLab-Technologien zu nutzen, um jungen Menschen einen praktischen Zugang zur Informatik zu bieten, in dem ein (persönlich bedeutsames) Produkt entwickelt wird.  Am Ende eines EduFab-Workshops steht ein Produkt, das i.d.R. den Teilnehmenden am Ende gehört. Dieses Produkt kann getragen und gezeigt werden, wodurch wieder und wieder Anerkennung für die verrichtete Arbeit erfahren wird. Dennoch steht in EduFabWorkshops der Prozess im Vordergrund. Es wäre durchaus weniger kompliziert, fertige Designs aus dem Netz zu laden, oder mit Zeichenprogrammen zu modellieren und diese auf Taschen zu drucken. Mit hoher Wahrscheinlichkeit wären diese sogar ästhetischer  Das EduFab-Kit – Ein modularer FabLab-Baukasten für Lehrer*innen 299ii “proceedings” — 2017/9/17 — 20:19 — page 300 — #300 ii i ii i 24 Nadine Dittert und Eva-Sophie Katterfeldt  als die programmierten Werke, die (insbesondere im vorgeschlagenen Zeitrahmen) einen eher stilistischen Charakter haben. Sie wären nur eben nicht selbst programmiert. Das EduFab-Kit hat den Anspruch, Wege und Möglichkeiten zu zeigen, mit heute zugänglichen Produktionsmaschinen Informatik „zu machen“.  Die bisherigen Beispielworkshops sind lediglich Einstiegworkshops, die bezüglich der Informatik das Potential der Maschinen im FabLab nicht ausreizen. Die Szenarien sind erweiterbar. So eignen sich Schleifen zur Erzeugung von sich wiederholenden Mustern, die hervorragende Taschenoder Schmuckdesigns darstellen können. Für das Entwickeln interaktiver Gadgets befindet sich Mikrocontroller-Material in der SmartFab-Ebene. Schlussendlich sind die bisher vorhandenen Ebenen und Konzepte Vorschläge, die auch als Anregung für eigene Entwicklungen dienen sollen. Aus diesem Grund ist der Koffer modular gehalten. Das allgemeine Workshopkonzept lässt sich in diversen Settings anwenden und darf und soll für eigene Zwecke angepasst und verändert werden.  6 Danksagung Das Projekt EduFab wurde vom Bundesministerium für Bildung und Forschung gefördert. An der Implementierung und dem Design des Koffers war Marvin Lange maßgeblich beteiligt. Es basiert auf einer Arbeit unseres Kollegen Florian Lütkebohmert. Literaturverzeichnis [Di12] Dittert, N. et al.: TechKreativ: Tangible Interfaces in Lernwelten. In Robben, B. & Schelhowe H., eds. Be-greifbare Interaktionen  Der allgegenwärtige Computer: Touchscreens, Wearables, Tangibles und Ubiquitous Computing. Bielefeld: transcript. 2012. [Ka15] Katterfeldt, E.-S. et al.: Designing digital fabrication learning environments for Bildung: Implications from ten years of physical computing workshops. International Journal of Child-Computer Interaction. 5, 3–10, 2015. [Pa80] Papert, S.: Mindstorms: children, computers, and powerful ideas. Basic Books, Inc. New York, NY, 1980.  [RS12] Robben, B.; Schelhowe, H.: Be-greifbare Interaktionen Der allgegenwärtige Computer: Touchscreens, Wearables, Tangibles und Ubiquitous Computing. Transcript, Bielefeld, 2012. 300 Nadine Dittert, Eva-Sophie Katterfeldtii “proceedings” — 2017/9/17 — 20:19 — page 301 — #301 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,   Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017     15  3D-Druck als Motivation für die Einführung in die   Programmierung in der Realschule   Oliver Krisch1, Petra Kastl2 und Ralf Romeike3   Abstract:  3D-Drucker gehören derzeit zu den Informatiksystemen, die für die Schüler noch neu  sind, Neugier hervorrufen und sich somit gut einsetzen lassen, um sie zu motivieren. Erschöpft sich  die Nutzung eines 3D -Druckers allerdings allein im Herunterladen und Ausd rucken vorgeferti gter  Modelle, haben die Schüler  aber wenig über Informatik gelernt. In diesem Beitrag wird eine Unterrichtssequenz von 7 Doppelstunden zum Erlernen grundlegender Programmierkenntnisse vorgestellt , die die Programmierung dreidimensionaler O bjekte mithilfe von Turtle -Grafiken in Beetle   Blocks zum Ziel hat . Zudem sollte noch eine fächerübergreifende Verbindung zu den im Mathematikunterricht kennengelernten Funktionen geknüpft werden. Als Motivation diente das Erstellen eines 3D -Körpers, der am  Ende der Sequenz mit Hilfe eines 3D -Druckers ausgedruckt werden sollte .  Die dargestellten Erfahrungen zeigen, dass s ich die Schüler von der Idee begeistern lassen, die Verknüpfung mit mathematischen Grundlagen allerdings eine Herausforderung darstellt.    Keywords:  3D-Druck , Realschule, Programmierung , Beetle Blocks   1 Einleitung   Nachdem lange Zeit der wahrnehmbare technische  Fortschritt vor allem durch bessere  Grafikleistungen bestimmt war, die in der Schule im Bereich der Computergrafik Schülerinnen und Schüler  motiviere n konnten, sind 3D-Drucker eine jüngere technische Entwicklung, die i.d.R. (noch) nicht im typischen Schülerhaushalt zu finden ist, aber durch  erstaunliche  Ergebnisse Schüler, Kollegen und Eltern zu faszinieren weiß . An verschiedenen Schulen werden deshalb  3D-Drucker angeschafft, um Schülern die beeindruckenden   Möglichkeiten des 3D -Drucks zu eröffnen. In der Praxis beschränkt sich die Verwendung  von 3D -Druckern allerdings häufig auf das Konfigurieren des Druckers und das Ausdrucken von aus dem Internet heru ntergeladenen vorgefertigten Modellen. Für die Nu tzung  des fachübergreifenden Potenz ials im Informatiku nterricht wurden  bisher wenig überzeugende Beispiele publiziert. Im Folgenden  stellen wir ein Beispiel vor, in dem von Schülern  algorithmisch erzeugte 3D -Modelle und deren 3D -Ausruck als Gegenstand und Motivierung der Einführung in die Programmierung herangezogen  werden . Dabei experimentie1 Friedrich -Alexander -Universität Erlangen -Nürnberg, Didaktik der Informatik, Martensstr. 3, 91058 Erlangen,   oliver.krisch@fau.de   2 Friedrich -Alexander -Universität Erlangen -Nürnberg, Didaktik der Informatik, Martensstr. 3, 91058 Erlangen,   petra.kastl@fau.de   3 Friedrich -Alexander -Universität Erlangen -Nürnberg, Didaktik der Informatik, Martensstr. 3, 91058 Erlangen,   ralf.romeike@fau.de                                                             I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 301ii “proceedings” — 2017/9/17 — 20:19 — page 302 — #302 ii i ii i ren die Schüler mit ihnen aus dem Mathematikunterricht bekannte n Konzepte n, deren Verwendung in Verbindung mit einfachen algorithmischen Grundstrukturen erst die beeindruckenden Figuren ermöglicht und damit den Anwendungskontext außerhalb der Mathematik eröffnet.   2 Geometrische Formen und algorithmische 3D -Modelle   2.1 Turtlegrafik a ls Basis für algorithmische 3D -Modelle   Seymour Papert stellte  in den 1980 er Jahren mit Logo eine Programmierumgebung  vor,  mit der Kinder geometrische Formen erkunden können , indem sie diese mit einfachen  Programmieranweisungen  am Bildschirm selbst zeichnen . Papert [Pa82] unterstreicht mit  dem von ihm gleichzeitig als Konstruktionismus vorgestellten Ansatz die Rolle des Schaffens konk reter Artefakte, die persönlich bedeutungs voll sind und  anderen gezeigt, erprobt  und auch bewunde rt werden können . Der  als Tur tle-Grafik bek annte Ansatz liegt auch den  folgenden Beispielen zugrunde, allerdings erweitert auf den dreidimensionalen  Raum: Die  Ausgabe des 3D -Druckers bzw. deren virtuelle Darstellung entspricht dem nachgezeichneten Weg der Schildkröte in Logo oder dem Stift eines Objekts in Scratch.   Viele Gegenstände des alltäglichen Lebens  lassen sich  aus mathematischen Körpern und  Formen aufbauen , welche sich sehr gut als Grundlage für Turtle -Grafiken eignen . Ausgangspunkt in unserem Beispiel war ein Salzstreuer, dess en Form einem Hyperboloid mit  der Formel x² 5,5²−y2 2,52=1 ähnelt (vgl. Abb. 1) und die zugrundeliegende Idee, Körper aus  mathematischen Funktionen  zu erstellen und  mit einem 3D -Drucker auszudrucken. Zur  Umsetzung wurde die blockorientierte Programmiersprache Beetle Blo cks [KR12] verwendet.     Abb. 1: Salzstreuer – Hyperboloid als Vorlage für 3D -Objekte.     302 Oliver Krisch, Petra Kastl, Ralf Romeikeii “proceedings” — 2017/9/17 — 20:19 — page 303 — #303 ii i ii i  3D-Druck als Motivation für die Einführung in die Programmierung in der Realschule     17  Für den vorliegenden Salzstreuer diente der Kreis als Ausgangsfigur. Die Schülerinnen  und Schüler erzeugten die K reislinie mit Hilfe der Formel 𝑟𝑟2=𝑥𝑥2∙𝑦𝑦2. Diese stellten sie  zuerst um zu 𝑦𝑦=±√𝑟𝑟2−𝑥𝑥2 und teilten das Zeichnen des Kreises auf in das Zeichnen  zweier Halbkreise. Damit konnten die Schülerinnen und Schüler nun einen Zylinder zeichnen, indem sie die Höhe z langsam erhöhten. In einem zweiten Schritt lernten sie dann den  Radius der einzelnen Kreise in Abhängigkeit von der Höhe zu verändern. Dies geschah  exemplarisch erst durch einfache mathematische Operationen, die dann im Verlauf der  Stunde durch komplexere  ersetzt wurden. Der Vorteil, den Körper aus einzelnen Schichten  aufzubauen, liegt darin, dass der 3D -Drucker seine Objekte auch durch Hinzufügen einzelner Schichten aufbaut. Die Schülerinnen und Schüler konnten so im Vorfeld sehen, wie  aus einzelnen Schic hten der Gesamtkörper entsteht.   2.2 Visuelle Programmierung mit Beetle  Blocks   Mit der Einführung von Scratch [MRR10] wurde die Einstiegshürde für Programmieranfänger deutlich gesenkt, was insbesondere den Schülerinnen und Schülern an der Realschule sehr entgeg en kommt. Durch die visuelle Darstellung der programmierten Objekte  auf der Bühne wird die Programmierung im Sinne Paperts ‘ Konstruktionism us unmittelbar  erfahrbar, die multimediale Bandbreite ermöglicht de n Schülerinnen und Schülern persönlich bedeutsame Ideen umzusetzen und die Folgen ihrer Programmierentscheidungen unmittelbar nachzuvollziehen. Durch die Repräsentation der Anweisungen als Blöcke werden zudem Syntaxfehler vermieden und die zur Verfügung stehen den Programmierkonstrukte sind unmittelbar zur  Auswahl präsent. So wie Strecker [St15] auf der INFOS 2015  über den Einsatz grafischer Programmiersprachen im Abitur berichtete, überzeugt der visuelle Zugang aufgrund seiner Intuitivität und leichten Bedienung auch in der Realschule.  Koschitz und Rosenba um [KR12] übertragen nun die Konzepte und Bedienung von  Scratch und die Idee der Turtle -Grafik unter Verwendung von Snap [HM10] in den dreidimensionalen Raum. Mit Beetle Blocks4 können mit Hilfe der algorithmischen Grundstrukturen dreidimensionale Objekte programmiert  werden, die anschießend als 3D -Modell exportierbar sind und mittels eines 3D -Druckers ausgedruckt werden können. Algorithmische, mathematische und künstlerische Objekte können somit unmittelbar „erfassbar“ werden. Im Unterricht haben wir gute Erfahrungen gemacht mit Schmuck, Alltagsgegenständen wie Vasen und Schalen und künstlerischen Figuren  (vgl. Abb. 7). Das Potenzial eines an solchen Zielen orientierte n Unterrichts liegt darin, dass auch vordergründig nicht an der Programmierung interessierte Schülerinnen und Schüler durch die kreative Erstellung von Produkten, die so erstmal nicht im Informatikunterricht erwartet wird,  motiviert  werden können.   4 http://beetleblocks.com/                                                             3D-Druck als Motivation für die Einführung in die Programmierung in der Realschule 303ii “proceedings” — 2017/9/17 — 20:19 — page 304 — #304 ii i ii i  18    Oliver Krisch, Petra Kastl und  Ralf Romeike      Abb. 2: Beetle  Blocks.   3 Umsetzung   3.1 Kontext und Einordnung   Spätestens i n der zehnten Klasse an bayerischen Realschulen lernen die Schüler im Modul  „Modellierung und Codierung von Algorithmen“ des Lehrplans für das Fach Informationstechnologie die Grundstrukturen Sequenz, Auswahl und Wiederholung kennen und  anzuwenden. Ein wei terer Punkt ist die Implementierung von Algorithmen mit einem geeigneten Programmierwerkzeug. Die Motivierung der Schüler ist  hierbei  ein wesentliches  Anliegen des U nterricht s. Entsprechend haben sich d ie zum Erlernen verwendeten Programmiersprachen im Lau fe der Zeit gewandelt. So wurde an unserer  Schule zuerst die  Programmiersprache Pascal verwendet. Um einen größeren Anreiz zu schaffen, sind wir  dann auf Delphi umgestiegen. Mit Delphi haben die Schüler am Ende der Unterrichtss equenz einen Taschenrechner o der Getränkeautomaten programmiert und dabei die neu erworbenen Fähigkeiten in einem komplexeren Kontext angewandt . So ein selbst programmierter Taschenrechner motivierte schon etwas, weckte aber in der Schülergruppe auch  keine Begeisterungsstürme. Grund d afür war zum einen  die doch sehr statische Interaktion  mit selbige m und zum anderen  die hohe Fehlerquote wegen syntaktischer Fehler. Geändert  304 Oliver Krisch, Petra Kastl, Ralf Romeikeii “proceedings” — 2017/9/17 — 20:19 — page 305 — #305 ii i ii i hat sich das Ganze mit der Einführung der visuellen Programmiersprache Scratch. Mit  dieser Programmiersprache konn ten die Schüler sehr schnell und ohne syntaktische Fehler  zu einem ansprechenden Ergebnis kommen. Die ersten kleinen Spiele waren sehr schnell  programmiert und konnten mit nach Hause genommen werden. Mit Beetle Blocks verhielt  es sich ebenso wie mit Scratc h. Mit ein paar Befehlen konnten die Schülerinnen und Schüler sehr schnell den Käfer über den Bildschirm bewegen. Dies sorgte für Erheiterung in  der Gruppe.   3.2 Unterrichtsziele  und -gliederung   Ziel des Unterrichts war es, aus einfachen mathematischen Grundfor men, wie z.  B. Kreis,  Quadra t oder gleichseitigem  Dreieck, dreidimensionale Objekte zu entwickeln und diese  zu programmieren. Als Vorlage konnten die Schüler sich an bekannten Gegenständen des  täglichen Lebens orientieren, gleichfalls durften sie ihre 3D-Körper frei wählen , da sie  unterschiedliche Vorstellungen hatten, welchen Gegenstand sie gern kreieren wollten . Ein  Ziel hierbei  war auch, dass den Schülerinnen und Schülern die Möglichkeit gegeben werde  sollte, selbständig ihre eigene Kreativität zu nutzen  und eigene Vorstellungen umzusetzen.   Hierzu  mussten die Schüler ihre Kenntnisse aus der Geometrie heranziehen. Für die  Grundformen kamen neben dem allseits bekannten Satz des Pythagoras auch weitere  grundlegende Kenntnisse, wie z. B. das Teilungsverhältni s der Höhen in einem gleichseitigen Dreieck, zum Einsatz. Mit diesem Wissen waren dann die Grundformen sehr schnell  erstellt.   Für die dritte Dimension kamen mathematische Funktionen zum Einsatz: Mit Hilfe von  Sinus, Kosinus und anderen Funktionen wurd e die Größe der Grundformen in Abhängigkeit von der Höhe verändert, um den Objekten eine schöne geschwungene Form zu geben.   In Abb. 3 sieht man eine eingefärbte Schnecke, die aus gleichseitigen Dreiecken aufgebaut  ist. Bei der Schnecke wurde die Seitenlänge sukzessive konstant verkleinert.      Abb. 3: Schnecke aus gleichseitigen Dreiecken.   3D-Druck als Motivation für die Einführung in die Programmierung in der Realschule 305ii “proceedings” — 2017/9/17 — 20:19 — page 306 — #306 ii i ii i  20    Oliver Krisch, Petra Kastl und  Ralf Romeike    Der Unterricht gliedert  sich in 3 Phasen:   1. Kennenlern en der algorithmischen Grundstrukturen Sequenz und Wiederholung  und  Anwendung/Übung mit der Programmiersprache Beetle  Blocks. Hierbei erstellen die  Schülerinnen und Schüler einfache geometrische Figuren , wie z. B. Rechtecke oder  Quadrate  (3 Doppelstunden)     2. Erweiterung in die dritte Dimension , indem  die Schüler die einfachen geomet rischen  Figuren als Turm aufbau en (1 Doppelstunde)     3. Mathematische  Veränderung  des Turms  (3 Doppelstunden)   3.3 Unterrichtsverlauf und Beobachtungen   Bei der 10. Klasse handelte es sich um Schülerinnen und Schüler aus dem wirtschaftlichen  Realschulzweig. Daher  war die  anfängliche  Begeisterung der Schülerinnen und Schüler  Programmieren zu lernen nicht gerade sehr groß. Dass das Ganze dann auch noch mit dem  allseits geliebten Fach Mathemati k verknüpft werden sollte , trug  auch  erstmal nicht gerad e  zur Motivationssteigerung bei. Dies zeigte sich  z. B. in der  Aussage der Schülerin C.: „Ich  kann eh kein Mathe und jetzt muss ich auch noch damit Programmieren lernen.“ Entsprechend  gestalteten sich  die Anfangsstunden etwas zäh. Die Schülerinnen und Schüler sollten zuerst einmal den Begriff „Sequenz“ kennen und anwenden lernen. Dazu programmierten wir einfache geometrische Figuren, wie z.  B. ein Rechteck. Etwas aufwändiger  war die Programmierung eine s gleichseitigen Dreiecks, da hier mit Hilfe des Satzes von  Pythagoras die Koordinaten des dritten Eckpunkt s erst einmal berechnet werden mussten.   Die vierte Doppelstunde war für di e Schülerinnen und Schüler etwas leichter, da h ier nur  die bis dahin nicht  verwendete Variable z  neu hinzukam . Bis zu diesem Zeitpunkt sind sie  noch ohne die Wiederholung ausgekommen. Bei der Erstellung des Turms haben die  Schülerinnen und Schüler die Höhe ihres Turms durch wiederholte Erhöhung der Variable  z mit einer Zählersch leife realisiert.  306 Oliver Krisch, Petra Kastl, Ralf Romeikeii “proceedings” — 2017/9/17 — 20:19 — page 307 — #307 ii i ii i   Abb. 4: Ausdruck eines Beetle Block -3D-Modells mit einem Ultimaker 2.   Ab der fünften Doppels tunde stieg die Motivation der Schülerinnen und Schüler  deutlich  an. Ich habe einen von mir mit dem 3D -Drucker ausgedruc kten Körper mitgebracht und  den Schülerinnen und Schülern versprochen, ihre Objekte  auch mit dem 3D -Drucker auszudrucken. Nach dem konstruierenden Einstieg im Sinne des bottom -up verfolgte der weitere Unterricht nun einen experimentell -dekonstruierenden An satz. Hierzu wurden  den  Schülerinnen und Schülern verschiedene Methoden in Form von Beetle  Blocks -Blöcke n  zum Experimentieren  zur Verfügung gestellt, die zusätzlich zu den  von den Schülerinnen  und Schülern entwickelten Blöcke n die Möglichkeit bereitstellten, dass die geometrischen  Figuren noch um einen Winkel α gedreht werden konnten  (vgl. Abb. 5).      Abb. 5: Program mierung des Turms unter Verwendung eines vorgegeben Blocks (rechts).   Der Grund für die Bereitstellung war, dass die Schülerinnen und Schüler die zugrunde   liegende mathematische Modellierung noch nicht im Ma thematikunterricht behandelt hatten. Außerdem ist die Zeit mit sieben Doppelstunden knapp bemessen und es sollte den  Schülerinnen und Schülern die Möglichkeit gegeben  werden , mehr Zeit auf die Entwicklung ihrer eigenen 3D -Objekte  zu verwenden.  Dabei vertieften sie die bis dahin erlernte  Vorgehensweise übe r den Aufbau der einzelnen Körper aus Schichten.  Im Laufe der Zeit  3D-Druck als Motivation für die Einführung in die Programmierung in der Realschule 307ii “proceedings” — 2017/9/17 — 20:19 — page 308 — #308 ii i ii i änderte sich auch die Einstellung der Schülerin C. Mit Aussagen wie  „Welche mathematische Funktion gibt es noch, die ich ausprobieren kann ?“ wollte C. immer weitere  Variationen ihres Turms ausprobieren. So kamen nicht nur einfach gedrehte Türme heraus, sondern auch z.  B. kleine Schalen.  Andere Schülerinnen und Schüler bauten ineinander  geschachtelte Körper.       Abb. 6: Schüler ergebnisse: Vari ationen der Türme.   Das in meinen Augen schönste Modell kreierte Schülerin C. Ein Schneckenhaus, welches  aus gedrehten, gleichseitigen Dreiecken besteht, die nach oben immer eine kleinere Seitenlänge besitzen  (vgl. Abb. 3). Alle Ergebnisse wurden dann mit einem 3D -Drucker ausgedruckt und konnten von den Schülerinnen und Schülern mit nach Hause genommen  werden .  4 Fazit und Ausblick   Als Resümee lässt sich  feststellen, dass die Motivation der Schülerinnen und Schüler stieg,  als klar wurde, dass die 3D -Objekte, die sie programmierten, dreidimensional ausgedruckt  werden sollten. Ihr Engagement, sich mit dem Erlernen von Programmierstrukturen zu  beschäftigen, war vor diesem Zeitpunkt vergleichbar mit  dem einer Gruppe, die mit  Scratch das Programmieren erlernt. Auch in der Geschwindigkeit des Erlernens konnte  kein Unters chied zu Scratch  festgestellt werden.   Bei den ersten geometrischen Grundfiguren wurde es schwieriger. Die Sc hülerinnen und  Schüler konnten zwar noch ohne Probleme die Koordinaten der Ecken eines Quadrates  berechnen, aber bei einem gleichseitigen Dreieck ergaben sich gravierende Probleme. Hier  muss für die Zukunft eine andere Vorgehensweise, mit einfacheren mathe matischen Mitteln gefunden und erprobt werden. Die Anwendung der Mathematik wich hier doch von  dem gewohnten Umgang im Mathematikunterricht ab. Vielleicht haben an dieser Stelle  Schülerinnen und Schüler aus dem mathematischen Zweig oder am Gymnasium wenige r  Schwierigkeiten. Eine Gruppe aus zwei Schülern ist hier etwas anders vorgegangen. Anstatt die Koordinaten zu berechnen, haben sie ein gleichseitiges Dreieck auf einem Blatt  Papier konstruiert, ungefähr in den Schwerpunkt des Dreiecks den Ursprung des Koo rdinatensystems gelegt und die Koordinaten des gleichseitigen Dreiecks abgelesen. In der  308 Oliver Krisch, Petra Kastl, Ralf Romeikeii “proceedings” — 2017/9/17 — 20:19 — page 309 — #309 ii i ii i dritten Dimension konnten die beiden Schüler  dann aber nicht mehr die Größe der Seite  verändern.     Abb. 7: Vase, Kunstobjekt und Schnecke aus d em 3D -Drucker.   Der Weg in die dritte Dimension war hingegen wieder einfacher. Da die Grundfiguren so  programmiert waren, dass ihr e Größe von der Seitenlänge abhängt, konnte diese sehr  leicht mit Hilfe von mathematischen Funktionen verändert werden. Die Sch ülerinnen und  Schüler ließen hier ihrer Kreativität freien Lauf. Sie konnten dabei die Funktionen, die sie  bis jetzt kennengelernt hatt en, anwenden. In diesem Schritt variierten ein paar Schüler die  Dicke der Linien, die vom Käfer gezeichnet wurden. Eine a ndere Schülergruppe veränderte mit der Höhe auch die Farbe der gezeichneten Linien. Zwei Schülerinnen haben ihr e  3D-Körper mit einer Bodenplatte versehen, um eine Vase zu erhalten. Dieser Teil hat den  Schülerinnen und Schülern besonderen Spaß gemacht. Eine  Verknüpfung mit anderen  Modulen aus dem Lehrplan, z. B. mit Arduinos (Modul: Mikrocontroller)  als Steuerung  für eine Leuchte  (vgl. Abb. 7), wäre gut vorstellbar.   Für die Wiederholung der Unterrichtssequenz empfiehlt es sich,  die Erstellung der Grundfiguren zunächst mit einfacheren mathematischen Mitteln aus zuprobieren. Die Verknüpfung der Höhe mit mathematischen Funktionen hat sich bewährt . Hier seh en die Schülerinnen  und Schüler , dass die Mathematik nicht nur trocken ist, sondern auch eine Anwendung hat, um der eigenen Kreativität Raum zu geben und neue Gegenstände zu entwickeln.  Ein weiterer neuer Ansatzpunkt wäre, reale Gegenstände (vgl. Salzstreuer) in mathematische Grundkörper zu zerlegen und diese nachzuprogrammieren. In diesem Ansatz wäre  wieder eine Verknüpfung zum Modul  „Technisch Zeichnen “ gegeben.   3D-Druck als Motivation für die Einführung in die Programmierung in der Realschule 309ii “proceedings” — 2017/9/17 — 20:19 — page 310 — #310 ii i ii i  24    Oliver Krisch, Petra Kastl und  Ralf Romeike    Literaturverzeichnis   [HM19]  Harvey, B.  and Mönig , J.: Bringing “no ceiling” to scratch: Can one language serve kids  and computer scientists. Proc. of Constructionism Paris, 2010.   [KR12]  Koschitz , D., and Rosenbaum, E.: Exploring algorithmic geometry with “beetle blocks:”  a graphical programming la nguage for g enerating 3d forms.  15th International Conference on Geometry and Graphics Proceedings, Montreal. 2012.   [MRR10]  Maloney, J., Resnick,  M., Rusk, N., Silverman, B., Eastmond, E. : The scratch programming language and environm ent. ACM Transactions on Comput ing Education (TOCE),  10(4), 16, 2010.   [Pa82]  Papert, S.: Mindstorms: Kinder, Computer und Neues Lernen. Birkhäuser Verlag, Basel,  1982.    [St15]  Strecker, K.: Grafische Programmiersprachen im Abitur. In: Gallenbacher, J. (Hrsg.):  INFOS 2015: Informatik allgemeinbildend begreifen (16. GI -Fachtagung Informatik  und Schule, Darmstadt). Bonn: Köllen, 2015 .     310 Oliver Krisch, Petra Kastl, Ralf Romeikeii “proceedings” — 2017/9/17 — 20:19 — page 311 — #311 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 1 Nutzung eines Robotiksystems zur Förderung der Berufssprache Deutsch Michael Brinkmeier1, Stanislav Pisarenko2 Abstract: Schulen und Lehrkräfte stehen vor der Aufgabe, jugendlichen Flüchtlingen sowohl sprachliche als auch beruﬂiche Kompetenzen zu vermitteln. Im Projekt Berufssprache Deutsch wurden Methoden und Konzepte entwickelt, die beides miteinander verknüpfen. Darauf basierend entstand eine Unterrichtsreihe, die informatische Inhalte mit Sprachunterricht verbindet, und in einer Lerngruppe praktisch erprobt wurde. Die Verwendung des Roboters Thymio II und einer visuellen Programmiersprache ermöglichte dabei die explorative Vermittlung von Prinzipien der Programmierung und Automaten. Durch die gezielte Koppelung von fachlichen Aufgaben mit sprachlichen Aufgaben und Plenumsdiskussionen zu den erarbeiteten Lösungen konnten die Schülerinnen und Schüler ihre fachlichen und sprachlichen Kompetenzen koppeln und als Experten miteinander kommunizieren. Problemund handlungsorientierte Aufgaben förderten zudem die Kommunikation zwischen den Teilnehmern. Keywords: Roboter, Thymio, Robotik im Unterricht, Sprachlernklassen, Mealy-Automaten, Visuelle Programmiersprachen, Berufssprache Deutsch 1 Einführung Die erhöhte Anzahl von jugendlichen Flüchtlingen, die in den letzten Jahren nach Deutschland kam, stellt das Bildungssystem und konkret die Schulen und Lehrkräfte vor große Herausforderungen. Einerseits müssen die Schülerinnen und Schüler die deutsche Sprache erlernen. Zum anderen sollen sie möglichst schnell fachlich und beruﬂich qualiﬁziert werden. Letzteres ist aber aufgrund der geringen Sprachkenntnisse und der gebrochenen Bildungsbiographien besonders schwierig. Integrative Konzepte, wie das des Projektes Berufssprache Deutsch [Be13 ], bieten hier Ansätze, um parallel fachliche und sprachliche Kompetenzen zu vermitteln. Die hier beschriebene Einheit verwendet diesen Ansatz, um in einer Sprachlernklasse 3 einerseits Inhalte der Informatik und Technik zu vermitteln und gleichzeitig den fachlichen Bezug für Sprachübungen zu nutzen. Ein besonderer Schwerpunkt soll dabei auf der Erzeugung von fachbezogenen Anlässen zur verbalen Kommunikation liegen, indem die 1Universität Osnabrück, Institut für Informatik, Wachsbleiche 27, 49040 Osnabrück, mbrinkmeier@uniosnabrueck.de 2BBS Technik Cloppenburg, Lankumer Feldweg, 49661 Cloppenburg, Stanislav.Pisarenko@bbst-clp.de 3Details dazu in Abschnitt 4.I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 311ii “proceedings” — 2017/9/17 — 20:19 — page 312 — #312 ii i ii iSchülerinnen und Schüler gemeinsam an Problemlösungen arbeiten. Dabei ist es von großer Bedeutung, dass sie sich die fachlichen Aspekte ohne große sprachliche Barrieren erschließen können. Um dies zu erreichen, wird der Roboter Thymio II [ th17b ] verwendet. Er kann mittels der rein ikonographischen und visuellen Programmiersprache VPL programmiert werden, wodurch ein sehr leichter Einstieg ermöglicht wird. Dadurch können die Schülerinnen und Schüler sich im ersten Schritt auf die Aneignung der fachlichen Kompetenzen konzentrieren. Im Anschluss erfolgt jeweils eine sprachliche Fixierung und Vertiefung der gelernten Inhalte, entweder in Form kurzer Texte, einer verbalen Diskussion oder Übungen zu grammatikalischen Strukturen, wie z. B. Konditionalgefügen. Durch die Bearbeitung o  ener und experimenteller Aufgabestellungen ergeben sich für die Schülerinnen und Schüler Gelegenheiten zur fachbezogenen, verbalen Kommunikation. Daher ist ein Schwerpunkt der Evaluation die Beobachtung, ob diese tatsächlich genutzt werden, und ob sie zu einer aktiven Verwendung von Fachbegri  en beiträgt. Die Einheit wurde in drei Tagesblöcken von jeweils sechs Stunden an einer berufsbildenden Schule durchgeführt. Zur Evaluation wurden verschiedene qualitative Methoden herangezogen. Neben Beobachtungsbögen zur Häuﬁgkeit der verbalen Kommunikation, die von zwei Lehrkräften ausgefüllt wurden, wurde an jedem Tag das Feedback der Schülerinnen und Schüler sowie eine abschließende Beurteilung eingesammelt. Ergänzt wurde die Evaluation durch ein Kurzinterview mit einer über die gesamte Zeit anwesenden, beobachtenden Lehrkraft. 2 Berufssprache Deutsch Das Projekt Berufssprache Deutsch des Staatsinstituts für Schulqualität und Bildungsforschung München (ISB) beschäftigt sich mit der berufsspeziﬁschen Sprachförderung von Jugendlichen (16-20 Jahre) in der Ausbildung oder in Klassen der Berufsorientierung und Berufsvorbereitung [ Be13 ,SRG13 ]. Im Rahmen des Projektes wurde eine Reihe von Materialien und Konzepten entwickelt, die die Grundlage der hier dargestellten Unterrichtssequenz bilden [ St15,Le10 ]. Ihre vier Hauptkomponenten sind in Tab. 1 dargestellt (vgl. [Be13, S.2]. DasSprachhandeln basiert auf einer beruﬂichen oder fachlichen Handlungssituation in Kombination mit sprachlichen Anforderungen. Die Lerngruppe soll sich durch die motivierend wirkende, beruﬂich orientierte Aufgabenstellung sprachlich ausdrücken. Über die Unterrichtsgestaltung unterstützt die Lehrkraft die Lernenden mit eine bedarfsgerechten, kontinuierlichen und zielgerichteten Methodik. Die Formulierung von Aufgaben, Rückmeldungen und Lösungen muss in einer sprachsensiblen Unterrichtssprache erfolgen. Dies wird unter anderem durch einheitliche Arbeitsaufträge, Verwendung kurzer Sätze und alltagssprachlicher Wendungen erreicht [ St15, S. 10]. Die Identiﬁkation von Förderschwerpunkten ermöglicht an die Lerngruppe angepasste Hilfestellungen. Im Fokus stehen hierbei die Art der Aufgabenstellung, das Lerntempo und Formen des kooperativen Lernens.312 Michael Brinkmeier, Stanislav Pisarenkoii “proceedings” — 2017/9/17 — 20:19 — page 313 — #313 ii i ii iIntegrierte Sprachbildung Sprachhandeln: Handlungsund RealitätsbezugSprachsensible Unterrichtsgestaltung durch angepasste Methodik (sprachliches Wissen und kommunikatives Handeln)(Methoden, Strategien, Arbeitstechniken) Konzentration auf Förderschwerpunkte Sprachsensible Unterrichtssprache (Umgang mit Heterogenität, Binnendi  erenzierung)(Aufgabenstellung, Rückmeldung) Tab. 1: Unterrichtskonzept Berufssprache Deutsch In [St15] werden zusätzliche Aspekte thematisiert, die im Rahmen der vorliegenden Arbeit von Bedeutung sind. Streinz weist darauf hin, dass in Fällen von Flüchtlingen Traumata vorliegen können, die ein konzentriertes Lernen erschweren [ St15, S. 8]. Spielerische Herangehensweisen können dies durchbrechen und die Kreativität der Lerner gezielt fördern. Hinzu kommt, dass ein nicht zu vernachlässigender Anteil der Jugendlichen bislang noch nie beschult worden ist oder nur Frontalunterricht kennengelernt hat. Dadurch ergeben sich besondere Probleme bei der selbstständigen Arbeit und o  eneren Aufgaben. In [Le10 ] wird eine Reihe von Methoden zur Kombination von Fachund Sprachlernen vorgestellt. Leisen formuliert dort auch drei Grundthesen für sprachsensiblen Fachunterricht [Le10, S. 6, 22]: • Die Lerner werden in fachlich authentische, bewältigbare Sprachsituationen gebracht. • Die Sprachanforderungen liegen knapp über dem individuellen Sprachvermögen. • Die Lerner erhalten so wenige Sprachhilfen wie möglich, aber so viele, wie individuell zum erfolgreichen Bewältigen der Sprachsituationen nötig. Im informatischen Bereich ist außerdem der Wechsel zwischen sprachlichen, symbolischen und mathematischen Darstellungen von fachlichen Sachverhalten von Bedeutung: Die Methode Wechsel der Darstellungsform 4, hilft den Anschauungsgrad über verbalsprachliche Texte zu erhöhen und die Nutzung wird aus fachlichen, didaktischen, methodischen, lernpsychologischen und pädagogischen Gründen zwingend empfohlen (vgl. [ Le10 , S.37]). 3 Der Thymio Die Behandlung informatischer Themen ist in der Regel sehr sprachlastig. Dies beruht zum einen auf der Verwendung von textuellen Programmiersprachen, als auch der notwendigen Beschreibung von algorithmischen Abläufen oder Funktionsweisen informatischer Systeme. Daher erscheint eine möglichst sprachunabhängige Einführung schwierig. Dies ist auch für die meisten graﬁschen Programmiersprachen der Fall. 4Damit ist der Übergang zwischen der sprachlichen, symbolischen und mathematischen Darstellung gemeint.Nutzung eines Robotiksystems zur Förderung der Berufssprache Deutsch 313ii “proceedings” — 2017/9/17 — 20:19 — page 314 — #314 ii i ii i Abb. 1: Der Thymio II und eine Regel in VPL: Wenn „links“gedrückt wird, dann leuchte rot. Abb. 2: Umsetzung einer VPL-Regel in den Übergang eines Mealy-Automaten Im Rahmen der hier vorgestellten Einheit wird der Thymio II [ th17b ] – ein für didaktische Zwecke entworfener Roboter – verwendet, der bereits erfolgreich eingesetzt wurde [Ma15 ,Ma14 ,Ro15 ]. Insbesondere die für ihn entworfene graﬁsche Programmiersprache VPL [ th17a ] zeichnet sich dadurch aus, dass sie vollständig auf Schriftsprache verzichtet. Die Programmierung des Roboters erfolgt in der einfachsten Variante in Form von Konditionalgefügen, die aus einer Bedingung und einer sich daraus ergebenden Aktion bestehen (vgl Abb. 1). Auch wenn diese Form der Programmierung als sehr einfach erscheint, bietet sie bereits eine Vielzahl von Möglichkeiten. Durch die Verwendung eines internen Speichers und LEDs zur Visualisierung werden die Möglichkeiten deutlich erweitert und es wird möglich, das Verhalten des Thymio durch Mealy-Automaten zu modellieren [ Wi16 ] (vgl. Abb 2). 4 Lerngruppe Die Lerngruppe bestand im Untersuchungszeitraum aus neun jugendlichen Flüchtlingen, vier Mädchen und fünf Jungen, aus verschiedenen Ländern. Vier von ihnen waren seit ungefähr einem halben Jahr in der Gruppe, vier seit ca. zwei Monaten und einer erst seit wenigen Wochen. Die schulische Vorbildung war sehr inhomogen, ebenso wie die Altersstruktur (16-20 Jahre). Der Unterricht fand in wöchentlichen Blöcken von je sechs Schulstunden statt. Ziel war es, den Schülerinnen und Schülern praktische Erfahrungen im Bereich der technischen Berufe und die Berufsund Fachsprache Deutsch zu vermitteln. Die Lerngruppe wurde regulär von zwei Lehrkräften unterrichtet. Die beschriebene Sequenz wurde von einer der Lehrkräfte (dem zweiten Autor) in einem Zeitraum von drei aufeinander folgenden Wochen durchgeführt, während die andere Lehrkraft nur als Beobachter fungierte.314 Michael Brinkmeier, Stanislav Pisarenkoii “proceedings” — 2017/9/17 — 20:19 — page 315 — #315 ii i ii iAlle Schülerinnen und Schüler waren nicht in der Lage, ﬂüssig auf Deutsch zu kommunizieren oder frei zu sprechen. Sie konnten einfache alltägliche Ausdrücke und Sätze verstehen und formulieren. Fachund Berufssprache war ihnen weitgehend unbekannt. Das Erkennen und Verwenden von grammatikalischen Strukturen ﬁel ihnen sehr schwer. Außer grundlegenden Anwenderkenntnissen hatten alle Schülerinnen und Schüler keinerlei Erfahrung mit Informatiksystemen. Keiner von ihnen hatte vorher programmiert oder mit Robotern gearbeitet. 5 Methodik der Evaluation Aufgrund der geringen Zahl der Teilnehmer wurden bei der Evaluation der Intervention qualitative Methoden verwendet. Im Rahmen einer teilnehmenden Beobachtung [ DBP16 , S. 323] durch die zwei Lehrkräfte wurde dabei ein besonderer Fokus auf die Häuﬁgkeit und die Qualität der Kommunikation gelegt. Beide Beobachter protokollierten ihre Beobachtungen auf einem Erfassungsbogen. Dabei wurde aufgabenbzw. phasenweise erfasst, ob eine fachbezogene Kommunikation stattfand, ob Fachbegri  e benutzt wurden oder ob fachfremde Themen erörtert wurden. Um eine Beeinﬂussung des Ergebnisses durch die Beobachtung auszuschließen, wurde den Schülerinnen und Schülern nicht mitgeteilt, wo der Schwerpunkt der Beobachtung lag [At08, S. 101]. Am Ende jedes der drei Tage war geplant, die Meinung der Schülerinnen und Schüler mittels Kartenfeedback abzufragen [ Me15 ]. Dabei sollten sie kurze, schriftliche Antworten zu vorformulierten Fragen geben. Bei der ersten Durchführung wurde jedoch festgestellt, dass lediglich kurze, nicht wesentlich von vorgegebenen Phrasen abweichende Formulierungen, wie z.B. „weil ich gut ﬁnde“, genutzt wurden. Ausführlichere Antworten wurden nicht gegeben. Da die Verbalisierung Sprachanfängern deutlich leichter fällt als das Verschriftlichen [Le10 , S. 22], wurden daher an den beiden folgenden Tagen die Fragen projiziert und die Schülerinnen und Schüler nacheinander befragt. Am dritten Tag wurde diese Befragung durch eine Gruppendiskussion über die gesamte Einheit ergänzt und die Äußerungen protokolliert. Im Anschluss an die Einheit wurde ein Experteninterview mit der zweiten, beobachtenden Lehrkraft geführt [ DBP16 , S.365]. Da diese Lehrkraft – gemeinsam mit der durchführenden Lehrkraft – die Klasse regulär unterrichtet, konnte so eine unabhängige Beurteilung der erzielten E  ekte erreicht werden. Es handelte sich um ein halb-strukturiertes Interview [DBP16, S. 372], bei dem zwei Fragen gestellt wurden: • Wie ist der Gesamteindruck hinsichtlich der Motivation? • Eignet sich der Thymio, um in einer sprachinhomogenen Schülergruppe eine anlassund themenbezogene Kommunikation zu fördern?Nutzung eines Robotiksystems zur Förderung der Berufssprache Deutsch 315ii “proceedings” — 2017/9/17 — 20:19 — page 316 — #316 ii i ii iProblemstellungentdeckenVorstellungentwickelnLernmaterialbearbeitenLernproduktdiskutierenLernzugewinndefnierenSicher werdenund¨ubenSprachliche&Fachliche KompetenzenLernumgebungThymioVideo zeigen (Problembzw.Aufgabenstellung)Hypothesenbildung bzw.ProblemformulierungLernaufgabeFormulierungKompetenzzuwachs¨Ubungsbzw.VertiefungsaufgabenAufgabenstellung)Video zeigen (Problembzw.Abb. 3: Schrittfolge im Lernprozess basierend auf Leisen [Le10, S. 74] 6 Der Unterrichtsaufbau Jede der drei evaluierten Sitzungen, im Umfang von jeweils sechs Schulstunden, wurde entlang der von Leisen (vgl. [ Le10 , S. 74]) entwickelten, lernpsychologisch begründeten Schrittfolge geplant und durchgeführt (Abb. 3). 5Damit wird beabsichtigt, den fachlichen und den sprachlichen Kompetenzzuwachs miteinander zu verbinden. In der ersten Phase sollen die Schülerinnen und Schüler die Problemstellung entdecken 6. Dabei wird gezielt das nonverbale Medium des Videos genutzt. Es wird eine Problemsituation gezeigt, die von den Schülern gelöst werden. Das Video endet in allen Fällen mit einer kurzen, schriftlichen Frage, die als Impuls für die folgenden Arbeitsphasen dient. Im Anschluss daran wird der Arbeitsauftrag von den Schülern selbst schriftlich ausformuliert. Um dies zu unterstützen, erhielten die Schülerinnen und Schüler gestufte Hilfestellungen in Form von Wortlisten oder Blockdiagrammen (vgl. Abb. 4). Die in Einzelarbeit erarbeiteten Beschreibungen werden mit einem Partner abgeglichen und anschließend im Plenum vorgestellt. Durch die Verschriftlichung wird die Entwicklung von Vorstellungen und eine erste Hypothesenbildung hinsichtlich der Problemlösung gefördert. Diese wird in den ersten Schritten derBearbeitung des Lernmaterials fortgeführt und um praktische Tätigkeiten erweitert. Die Lernaufgaben sind dabei entdeckend, experimentell und handlungsorientiert gestaltet. Sie orientieren sich zum Teil an den in [ Ro15 ] vorgestellten Aufgaben. Entsprechend der Struktur der graﬁschen Programmiersprache VPL werden dabei häuﬁg Konditionalgefüge (Wenn-dann-Sätze) genutzt (vgl. Abb. 5). Im Anschluss an die Bearbeitung der Lernaufgabe werden die erarbeiteten Lösungen im Plenum diskutiert und mit dem ursprünglichen Video abgeglichen. 5Die Materialien stehen unter http://inf-didaktik.rz.uos.de/thymio/unterricht/sprachlernklassen.php zur Verfügung. 6Vgl. in Abb. 3 dargestellte Schrittfolge316 Michael Brinkmeier, Stanislav Pisarenkoii “proceedings” — 2017/9/17 — 20:19 — page 317 — #317 ii i ii i grün. Bei Boden leuchten der hellen Roboter leuchten der Bei Boden dunklen Roboter rot. Abb. 4: Beispiel für Blockdiagramme und Wortgeländer Abb. 5: Auszug aus dem Arbeitsmaterial des ersten Tages Auf fachlicher Ebene wird das Sicher werden und üben durch sich anschließende, o  enere Aufgaben realisiert. Diese greifen die vorher gelernten neuen Aspekte auf und nutzen Sie zur Lösung des eingangs vorgestellten oder eines neuen Problems. Die Kommunikation untereinander bildet den – für die Schülerinnen und Schüler nicht expliziten – Schwerpunkt. Der Aspekt Sichern und Üben ist daher nur zum Teil auf den fachlichen Anteil bezogen. Ergänzend soll insbesondere gesprochene Sprache als Werkzeug während des Problemlöseprozesses genutzt werden. Die fachlichen Inhalte bieten die Gelegenheit zum Experten zu werden und anschließend das eigene Handeln zu reﬂektieren und die eigenen Lernzugewinne und Problemlösungen zu formulieren. Dadurch sollen gezielt sprachliche Einzelkompetenzen, wie z.B. Texte planen, umstrukturieren und schreiben, sowie Lesekompetenz gefördert werden. 7 Die Ergebnisse der Evaluation Eines der Hauptziele der Einheit war es, die Schülerinnen und Schüler dazu zu motivieren, über fachliche Inhalte zu kommunizieren. Die von der durchführenden und der beobachteten Lehrkraft ausgefüllten Beobachtungsbögen 7zeigen, dass dieses Ziel erreicht wurde. Dabei variierte die Anzahl der Gruppen, in denen über die Inhalte gesprochen wurde, mit der Art der Aufgabe. Bei solchen, die eine Verschriftlichung erforderten, war der E  ekt schwächer, während insbesondere die experimentellen, explorativen und o  eneren Aufgaben die Kommunikation deutlich förderten. Es wird auch deutlich, dass die Nutzung von Fachbegri  en anfänglich Schwierigkeiten bereitete. So wurden sie am ersten Tag innerhalb keiner Gruppe verwendet, am zweiten und dritten Tag aber durchgängig in ein bis drei Gruppen. Die Beobachter stellten auch fest, dass Gespräche über inhaltsfremde Themen nur stattfanden, wenn eine Gruppe die Arbeit bereits beendet hatte und auf die anderen wartete. Dies trat nur am dritten Tag ein. 7Die Beobachtungsbögen stehen unter http://inf-didaktik.rz.uos.de/thymio/unterricht/sprachlernklassen.php zur Verfügung.Nutzung eines Robotiksystems zur Förderung der Berufssprache Deutsch 317ii “proceedings” — 2017/9/17 — 20:19 — page 318 — #318 ii i ii iTag Kurzcharakteristik Aufgabe(n) Erkunden der Verhaltensweisen des Roboters, Konditionalgefüge Aufgaben 1-4 1. Tag Einführung in die Programmierung, Ereignisse Aufgaben 5 & 6 Erstellen eines textuell beschriebenen Programms Aufgabe 7 Entfernungsund Bodensensoren Aufgaben 1-4 2. TagImplementieren im Video gezeigten und textuell beschriebenen Verhaltens (Bodensensoren)Aufgabe 5 Implementierung eines Linienfolgers Aufgabe 6 Beschreibung von Vorgängen mit Zuständen (Schranke und Farbwechsel) Aufgaben 1-2 3. TagProgrammierung einer Sequenz von Farben unter Verwendung von Zuständen und Darstellung als ÜbergangsgraphAufgabe 3, 4 & 7 Implementieren des Programms für die Schranke Aufgabe 8 Tab. 2: Der inhaltliche Verlauf der Intervention Nachdem am ersten Tag festgestellt wurde, dass die Befragung in schriftlicher Form wenig ergiebig war, wurde auf eine mündliche Form gewechselt, bei der die Fragen der Gruppe vorgelesen und anschließend die Antworten abgefragt wurden. Die Verwendung von Videos zur Beschreibung der Aufgabenstellung wurde dabei einhellig als sehr positiv empfunden. Auch die explorativen Aufgaben, bei denen das Verhalten des Roboters durch Experimenten mit kleinen Programmen erkundet wurde, wurden als sehr positiv bewertet. Der dafür genannte Grund war der geringe Schwierigkeitsrad der Aufgaben auf technischer Seite. Aufgaben, die eine Verschriftlichung erforderten, wurden insgesamt als sinnvoll aber sehr schwer empfunden. Die Schülerinnen und Schüler nutzten dabei häuﬁg die angebotenen Lernhilfen. Dies betraf insbesondere Aufgaben, bei denen nicht nur das beobachtbare Verhalten des Roboters beschrieben werden sollte, sondern auch inhaltliche Aspekte behandelt wurden. So ﬁel es den Schülerinnen und Schülern besonders schwer, Hypothesen über die Funktionsweise von Sensoren zu entwickeln. Dies kann zum einen auf die Schwierigkeit der Verschriftlichung, zum anderen auf fachliche Unsicherheit zurückgeführt werden. In allen Fällen konnte durch Gespräche im Plenum allerdings gemeinsam eine sinnvolle und korrekte Antwort formuliert werden. Dadurch war eine Konzentration auf die sprachlichen Aspekte möglich. O eneren Aufgaben (beschriebenes Verhalten implementieren, Linien folgen, Schranke implementieren) wurden insgesamt als sehr schwer empfunden. Der erste Fall, der Umsetzung eines Textes in ein Programm, ﬁel den Schülerinnen und Schülern anfänglich besonders schwer, da die Konditionalgefüge dort nicht in der bisher verwendeten Wenn-dann-Form verwendet wurden, sondern in Soll-wenn-Form (Der Thymio soll ..., wenn ...). Nachdem das Prinzip erläutert wurde, wurde die Aufgabe hingegen als sehr einfach betrachtet. Die entsprechende Aufgabe des zweiten Tages wurde ebenfalls wieder als sehr schwer empfunden, jedoch gelang es einer Gruppe, sie ohne Hilfestellung erfolgreich zu bearbeiten. Die Implementierung des Linienfolgers war den Schülerinnen und Schülern nur mit Hilfestellung möglich. Dennoch erschienen sie hochgradig motiviert und testeten häuﬁg ihre Programme. Ähnlich verhielt es sich mit der Realisierung eines Schrankenroboters am dritten Tag. Die Umsetzung in eine Abfolge von Zuständen ﬁel den Schülerinnen und Schüler sehr schwer und wurde gemeinsam im Plenum entwickelt und anschließend umgesetzt.318 Michael Brinkmeier, Stanislav Pisarenkoii “proceedings” — 2017/9/17 — 20:19 — page 319 — #319 ii i ii iIn der abschließenden Gruppendiskussion äußerten sich die Schülerinnen und Schüler sehr positiv über die Beschreibungen der Verhaltensweisen des Thymios. Dabei empfanden sie es als besonders nachhaltig, erst selbstständig zu formulieren und dies anschließend im Plenum vorzustellen und an einer gemeinsamen, grammatikalisch und semantisch korrekten Verschriftlichung zu arbeiten. Die Frage ob der Thymio sich als Kommunikationsanlass und als Werkzeug zum Erlernen der deutschen Sprache eignen würde, äußerten sich alle acht anwesenden Teilnehmer der Gruppe positiv. Fünf empfanden die Verwendung eines solchen Werkzeugs als sehr motivierend und besser als den „üblichen“ Sprachunterricht. Sie führten dies insbesondere auf den explorativen und spielerischen Charakter des Thymios zurück, sowie auf die Motivation etwas über Programmierung lernen zu wollen. Die drei anderen Gruppenmitglieder empfanden die Arbeit mit dem Thymio als mindestens so gut wie einen abwechslungsreichen Grammatikund Spielunterricht. Alle empfanden die Einheit aber als deutlich nachhaltiger als reinen Theorieunterricht. Der insgesamt positive Eindruck wurde durch das Interview der beobachtenden Lehrkraft bestätigt. Die Verwendung des Thymios und von Videos führte ihrer Ansicht nach zu einer deutlich spürbaren Steigerung der intrinsischen Motivation. Diese konnte zwar nicht über die gesamte Zeit aufrechterhalten werden, das wäre aber angesichts der Länge eines Tages (sechs Schulstunden, unterbrochen durch die üblichen Pausen) nicht anders zu erwarten. Die beobachtende Lehrkraft bewertete die Eignung des Thymios, um Kommunikationsanlässe zu scha  en und Sprachübungen inhaltlich zu verankern, als durchweg positiv. Besonders erstaunt äußerte sie sich darüber, dass die Schülerinnen und Schüler ihren aktiven Wortschatz sehr schnell um Fachbegri  e erweiterten und sie sowohl in der verbalen und schriftlichen Kommunikation verwendeten. Zum Abschluss äußerte die beobachtenden Lehrkraft die Absicht, künftig auch weiterhin mit ähnlichen Methoden, anderen Robotiksystemen und Programmierung in der Lerngruppe arbeiten zu wollen. 8 Fazit Der Ansatz, ein Robotiksystem wie den Thymio im Sprachunterricht zu verwenden, erscheint im Anschluss an die hier beschriebene Einheit als tragfähiges und vielversprechendes Konzept. Er ermöglicht die sinnvolle inhaltliche Einbettung von Sprachübungen in einen informatisch-technischen Kontext. Dabei wurde allerdings im Vorfeld die Schwierigkeit, relativ kurze, fachbezogene Texte zu verstehen, unterschätzt. Auch die Bearbeitung von o eneren Aufgaben erforderte in der Regel zusätzliche Unterstützung, die bislang über eine Gruppendiskussion oder verbal über die Lehrkraft erfolgte. Insbesondere die Plenumsrunden wurden von den Schülerinnen und Schülern, auch im Zusammenhang mit anderen Aufgaben, wie z.B. der Verschriftlichung von Beobachtungen, als besonders nachhaltig erachtet. Die beobachtende Lehrkraft hob insbesondere die häuﬁge Verwendung von Fachbegri  en hervor. Insgesamt wurde die Einheit von allen Beteiligten als motivierend und zielführend beschrieben.Nutzung eines Robotiksystems zur Förderung der Berufssprache Deutsch 319ii “proceedings” — 2017/9/17 — 20:19 — page 320 — #320 ii i ii iDurch die kleine Anzahl an Teilnehmern können die Ergebnisse der Evaluation nur eine grundsätzliche Tendenz beschreiben. Um belastbare Resultate zu erzielen, müssen weitere Versuche mit angepassten Materialien durchgeführt werden. Zudem fand keine objektive Erhebung der vermittelten informatischen und sprachlichen Kompetenzen statt. Literaturverzeichnis [At08] Atteslander, Peter; Cromm, Jürgen; Grabow, Busso; Klein, Haral d; Maurer, Andrea; Siegert, Gabriele: Methoden der empirischen Sozialforschung. Erich Schmidt Verlag, Berlin, 2008. [Be13] Berufssprache Deutsch. Online unter: http://www.isb.bayern.de/ schulartspezifisches/materialien/berufssprache-deutsch/ (Zuletzt aufgerufen am 14.09.2016), 2013. [DBP16] Döring, Nicola; Bortz, Jürgen; Pöschl, Sandra: Forschungsmethoden und Evaluation in den Sozialund Humanwissenschaften. Springer, Berlin & Heidelberg, 2016. [Le10] Leisen, J.: Handbuch Sprachförderung im Fach: Sprachsensibler Fachunterricht in der Praxis. Varus, 2010. [Ma14] Magnenat, Stéphane; Shin, Jiwon; Riedo, Fanny; Siegwart, Roland; Ben-Ari, Morderchai: Teaching a Core CS Concept Through Robotics. In: Proceedings of the 2014 Conference on Innovation & Technology in Computer Science Education. ITiCSE ’14, ACM, New York, NY, USA, S. 315–320, 2014. [Ma15] Magnenat, S.; Ben-Ari, M.; Klinger, S.; Sumner, R. W.: Enhancing Robot Programming with Visual Feedback and Augmented Reality. In: Proceedings of the 2015 ACM Conference on Innovation and Technology in Computer Science Education. ACM, New York, NY, USA, S. 153–158, 2015. [Me15] Meyer, H.: Praxisbuch: Leitfaden Unterrichtsvorbereitung. Cornelsen Scriptor, Berlin, 2015. [Ro15] Roy, Didier; Gerber, Gordana; Magnenat, Stéphane; Riedo, Fanny; Chevalier, Morgane; Oudeyer, Pierre-Yves; Mondada, Francesco: IniRobot : a pedagogical kit to initiate children to concepts of robotics and computer science. In: RIE 2015. 2015. [SRG13] Sogl, P.; Reichel, P.; Geiger, R.: „Berufssprache Deutsch“ Ein Projekt zur berufsspeziﬁschen Sprachförderung im Unterricht an der Berufsschule bzw. Berufsfachschule in Bayern. bwp@ Spezial, 6, 2013. Online unter: http://www.bwpat.de/ht2013/ft18/sogl_etal_ft18ht2013.pdf (Zuletzt aufgerufen am 28.05.2017). [St15] Streinz, A.: Berufsschulpﬂichtige Asylbewerber und Flüchtlinge. ISB Staatsinstitut für Schulqualität und Bildungsforschung, 2015. Online unter: https://www.isb.bayern.de/ berufliche-schulen/materialien/baf_beschulung/ (Zuletzt aufgerufen am 26.09.2016). [th17a] thymio.org: Anleitung zum visuellen Programmieren. 2017. Online unter: https://www. thymio.org/de:thymiovpl (Zuletzt aufgerufen am 28.5.2017). [th17b] thymio.org: Thymio & Aseba. 2017. Online unter: https://www.thymio.org/de:thymio (Zuletzt aufgerufen am 28.5.2017). [Wi16] Winterboer, S.; Zilke, R.: Zustandsbasierte Modellierung und Implementierung von Schwarmverhalten im Unterricht. Masterarbeit, 2016. Masterthesis, Universität Osnabrück.320 Michael Brinkmeier, Stanislav Pisarenkoii “proceedings” — 2017/9/17 — 20:19 — page 321 — #321 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 11 Schülerinteresse an Informatik und Informatikunterricht Torsten Brinda1, David Tobinski2, Stefan Schwinem3 Abstract: Bislang ist noch relativ wenig empirisch erforscht, was das Interesse von Schülerinnen und Schülern an Informatik und Informatikunterricht weckt bzw. beeinﬂusst. In Betracht kommen dazu bspw. didaktische Entscheidungen seitens der Lehrkraft zu informatischen Kontexten, betrachteten Phänomenen, Situationen, beteiligten informatischen Inhaltsfeldern, erforderlichen Schülertätigkeiten und vielem mehr. Der vorliegende Beitrag berichtet von einer explorativen empirischen Studie, welche das Ziel hatte, ein Instrument zur Erhebung des Interesses von Lernenden am Fach Informatik, an informatischen Alltagserscheinungen, Situationen und Kontexten sowie den vorgesehenen Unterrichtsinhalten in den Sekundarstufen zu entwickeln und zu erproben. Weiterhin sollten erste Hinweise auf Unterschiede zwischen verschiedenen Schülergruppen herausgearbeitet werden. Dazu wurden Lernende verschiedener Schulformen und Jahrgangsstufen mittels eines standardisierten Online-Fragebogens schriftlich befragt. Ein insgesamt stärker ausgeprägtes Interesse zeigte sich bei männlichen Schülern sowie Lernenden, die angaben, einen informatikbezogenen Berufswunsch zu verfolgen, dass Informatik ihr Lieblingsfach sei oder gute bis sehr gute Mathematikoder Informatiknoten zu haben. Keywords: Schülerinteresse; Informatikinteresse; Interessensforschung; Sachinteresse; Fachinteresse; Fragebogen; empirische Studie; explorative Studie 1 Einleitung Allgemeinbildender Schulunterricht hat u. a. das Anliegen, Lernende jeweils für die Auseinandersetzung mit fachlichen Gegenständen zu motivieren, zu interessieren – idealerweise sogar zu begeistern und darüber ein längerfristiges Domäneninteresse zu entfalten und zu festigen. Krapp und Prenzel geben einen Überblick über das Forschungsfeld Interesse im Bereich der Pädagogischen Psychologie [ KP11 ]. Interesse kann aus der Interaktion eines Individuums mit seiner Umwelt entstehen und wird durch Werte und Gefühle des Individuums beeinﬂusst. Unterschieden werden dabei individuelles Interesse, das in der Persönlichkeitsstruktur des Individuums verankert ist, sowie situationales, durch externe Faktoren generiertes Interesse. Aus schulischer Perspektive möchte man erreichen, dass Schülerinnen und Schüler sich für ein Unterrichtsfach, dessen Inhalte und das Geschehen in der jeweiligen Unterrichtsstunde interessieren. Da Interesse in der Informatik bislang kaum empirisch untersucht wurde, verfolgte die vorliegende Arbeit (s. a. [Sc16]) das Ziel, einen Beitrag zur Beschreibung und zur Erhebung von Informatikinteresse zu leisten. 1Univ. Duisburg-Essen, Didaktik der Informatik, Schützenbahn 70,45127 Essen torsten.brinda@uni-due.de 2Univ. Duisburg-Essen, Fak. f. Bildungswissensch., Universitätsstr. 2, 45127 Essen david.tobinski@uni-due.de 3Univ. Duisburg-Essen, ICB, Schützenbahn 70, 45127 Essen stefan.schwinem@stud.uni-due.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 321ii “proceedings” — 2017/9/17 — 20:19 — page 322 — #322 ii i ii i12 Torsten Brinda, David Tobinski, Stefan Schwinem 2 Verwandte Arbeiten Eine bedeutende Arbeit aus dem Bereich der Interessensforschung stammt aus dem Unterrichtsfach Physik. In der sogenannten IPN-Interessensstudie Physik wurden das Sachund Fachinteresse an Physik in verschiedenen Jahrgangsstufen der Sek. I über einen längeren Zeitraum mittels eines umfangreichen Fragebogens erhoben und analysiert [ HHL98 ]. Basis der Untersuchung bildete ein dreidimensionales Interessensmodell mit den Dimensionen Fachinhalte ,Kontexte undTätigkeiten . Dieses Modell wurde auch für die vorliegende Arbeit zugrunde gelegt. In der internationalen Relevance of Science Education (ROSE) -Studie [HB07 ] wurden Ranglisten der interessantesten und uninteressantesten Themen mit Bezug zu den Naturwissenschaften erstellt – aus Informatikperspektive bemerkenswert ist der Befund, dass das Thema „Wie Computer funktionieren“ das für Jungen drittinteressanteste Thema in dieser naturwissenschaftsbezogenen Untersuchung war. Für die Informatik liegt eine umfangreichere Studie zu „Schülerwünschen im Informatikunterricht“ vor (vgl. [ Ba10 ]), die ebenfalls am IPN entstand. Die Wünsche von Schülerinnen und Schülern zum Unterricht wurden basierend auf dem zum Zeitpunkt der Studie gültigen Informatiklehrplan des Landes Schleswig-Holstein sowie den Empfehlungen zu Bildungstandards Informatik für die Sek. I der Gesellschaft für Informatik e. V. (GI) [ Ge08 ] erhoben. Weitergehende Untersuchungen zu einer topologischen Struktur von Informatikinteresse (wie in der IPN-Interessensstudie Physik) waren nicht enthalten. 3 Erhebung von Informatikinteresse Obige Vorüberlegungen bildeten den Ausgangspunkt für die Entwicklung und Pilotierung eines Online-Fragebogens zur explorativen Erhebung von Informatikinteresse. Ein Online-Fragebogen wurde gewählt, um im Wesentlichen ortsunabhängig eine potenziell größere Gruppe von Teilnehmenden erreichen zu können. Der Aufbau des Fragebogens orientierte sich an [ HHL98 ], Informatikinteresse wurde analog dazu in Fachund Sachinteresse di  erenziert. Neben soziodemographischen Fragen und Fragen zur Belegung von Informatikunterricht war der Fragebogen strukturiert in Blöcke mit Aussagen zum Fachinteresse, zur etwaigen Wahlentscheidung für das Unterrichtsfach, zum Stellenwert von Informatik in der eigenen Freizeit, zum Interesse an lebensweltlichen Situationen und Kontexten mit Informatikbezug sowie zum Interesse an Gegenständen und Tätigkeiten innerhalb der Informatik. Diese waren jeweils jeweils mittels vierstuﬁger Ratingskala („tri  t zu“ bis „tri  t nicht zu“) hinsichtlich des damit verbundenen Interesses zu bewerten. Der Online-Fragebogen wurde mittels LimeSurvey erstellt (www.limesurvey.org). Zur Gewinnung von Teilnehmenden wurden über bestehende E-Mail-Verteiler für Informatiklehrkräfte in Nordrhein-Westfalen, Baden-Württemberg und Rheinland-Pfalz ein Anschreiben mit einer Erläuterung der geplanten Untersuchung, eine pdf-Fassung des Fragebogens sowie der Link zur Teilnahme verteilt. Weiterhin wurden regionale Schulen einbezogen, zu denen persönliche Kontakte bestanden. Die Erhebung fand dann in der zweiten Junihälfte 2016 statt. Insgesamt wurden dabei 172 Datensätze erfasst, von denen N=141auswertbar waren.322 Torsten Brinda, David Tobinski, Stefan Schwinemii “proceedings” — 2017/9/17 — 20:19 — page 323 — #323 ii i ii iSchülerinteresse an Informatik und Informatikunterricht 13 4 Ergebnisse einer ersten Pilotierung Im Bereich Fachinteresse an Informatik wurden sechs von acht Items zwischen 56% und 73% mit „tri  t zu“ oder „tri  t eher zu“ beantwortet. Im Folgenden angegebene Prozentzahlen beziehen sich immer auf die Summe der Werte der beiden zustimmenden bzw. ablehnenden Kategorien. Zur Fächerwahl wurde Items (eher) zugestimmt, die Hilfe zur Selbsthilfe fokussierten (55%), das Verständnis informatischer Zusammenhänge adressierten (58%) oder den Erwerb von Softwarenutzungskompetenzen in den Blick nahmen (54%). Aussagen zur Auseinandersetzung mit Gefahren im Internet, Berufsoder Studienentscheidungen, Fachbelegungen durch Geschwister, im Informatikbereich tätige Freunde oder Verwandte oder für andere Fächer erho  te Vorteile wurden mehrheitlich (eher) abgelehnt oder ergaben ein uneinheitliches Bild. Eine Beschäftigung mit Informatik im Alltag war für die Teilnehmenden eher von untergeordneter Bedeutung – alle dsbzgl. Items wurden von 60% bis 86% der Teilnehmenden (eher) abgelehnt. Bzgl. der Situationen und Kontexte bewerteten Lernende in der Sek. I (n=73) die Auseinandersetzung mit Schadsoftware (im Mittel der Summe aller zugeordneten positiven Aussagen: 57%), Computerspielen (62%) sowie Smartphones und Tablets (53%) mehrheitlich als (eher) interessant, die entsprechende Beschäftigung mit Textverarbeitung (entsprechend negative Aussagen: 60%) sowie sozialen Netzwerken (54%) jedoch als (eher) von geringem Interesse. Das erfragte Vorwissen hatte auf diese Bewertungen keinen erkennbaren Einﬂuss: das Vorwissen zu Textverarbeitung, Computerspielen sowie Smartphones und Tablets wurde als eher hoch eingeschätzt, das zu den übrigen Themen als eher gering. Explizit gefragt nach verschiedenen Einﬂussfaktoren auf das jeweilige Interesse zeigte sich, dass im Zusammenhang mit Textverarbeitung die vermutete Relevanz für die eigene beruﬂiche Zukunft (53%) und bei Computerspielen der Stellenwert im Freundeskreis (66%) sowie diesbezügliches Freizeitinteresse (59%) positiv auf das Interesse wirkten. Dass dsbzgl. Interesse durch die Thematisierung im Informatikunterricht oder Medienberichte induziert worden wäre, wurde mehrheitlich (eher) abgelehnt – das gilt auch analog für die Sek. II . Diese Teilnehmenden ( n=68) bewerteten ihr Interesse an den Kontexten Computerspiele (im Mittel der Summe aller zugeordneten positiven Aussagen: 66%), Suchmaschinen (55%), Clouds (51%), Smartphones und Tablets (62%), Hausautomatisierung (48%, ca. 8% der Teilnehmenden gaben hierzu keine Antwort; bei den übrigen Kontexten ca. 1%-3%) insgesamt (eher) als groß, lediglich einige Items mit anwendungsbezogenen und gesellschaftlich-kulturellen Bezug (Kontexte Suchmaschinen, Clouds, Hausautomatisierung) zeigten ein unentschiedenes oder leicht negatives Bild. Gefragt nach verschiedenen Inhalten und Tätigkeiten im Informatikunterricht zeigte sich bei den Lernenden der Sek. I folgendes Bild: das Modellieren und Implementieren von Algorithmen und Programmen zur Lösung von Problemen – allein oder in Kooperation mit anderen –, das Verständnis der Funktionsweise von Informatiksystemen sowie die korrekte Verwendung informatischer Fachbegri  e wurden als (eher) interessant bewertet, Aussagen mit Bezug zum Inhaltsfeld Informatik, Mensch und Gesellschaft, z. B. zu sicheren Passwörtern, zum Verhalten in sozialen Netzwerken und zur Entwicklung der Informatik als (eher) wenig interessant eingestuft. Bei den Teilnehmenden in der Sek. II zeigte sich im Kern die gleiche Tendenz.Schülerinteresse an Informatik und Informatikunterricht 323ii “proceedings” — 2017/9/17 — 20:19 — page 324 — #324 ii i ii i14 Torsten Brinda, David Tobinski, Stefan Schwinem Lernende in der Sek. I zeigten sich insgesamt interessierter als Lernende in der Sek. II. Ein stärker ausgeprägtes Interesse hatten auch Lernende mit informatikbezogenem Berufswunsch, Lieblingsfach Informatik sowie (sehr) guten Mathematikoder Informatiknoten. Bezüglich der Geschlechter war die Interessensbewertung häuﬁg nicht signiﬁkant unterschiedlich. Weiterhin zeigte sich bei den Teilnehmenden ein insgesamt eher geringes Interesse, sich in der Freizeit mit informatischen Themen zu befassen, es sei denn, hierbei war ein persönlicher Nutzen o  ensichtlich (Bedienung von Smartphones, Suchmaschinen). 5 Fazit und Ausblick Wenn das eigene lebensweltliche Interesse im Vordergrund stand, beantwortete ein höherer Anteil Lernender die entsprechenden Items positiv. Gegenstände, die in der alltäglichen Lebenswelt der Lernenden keine besonders große Bedeutung besaßen, standen ebenfalls weniger in deren Interesse. Gesellschaftlich-kulturelle Aspekte trafen – im Gegensatz zu technischen und anwendungsbezogenen Aspekten – auf geringes Interesse. Mit der Studie liegt nun ein einmalig erprobtes Instrument vor, das im Weiteren bearbeitet und verfeinert werden muss. Die Auswahl der Situationen und Kontexte bedarf der weiteren Entwicklung, ebenso sollten zu bewertende Aussagen zu Unterrichtsinhalten noch systematischer variiert werden. Es wäre wünschenswert, zukünftig noch mehr über die Interessen von Schülerinnen und Schülern zu erfahren, um diese stärker bei didaktischen Entscheidungen berücksichten zu können. Das in dieser Untersuchung eher geringe Interesse an gesellschaftlich-kulturellen Aspekten sollte zur Prüfung und ggfs. Überarbeitung der zugeordneten Items führen, weiterhin zu der Erkenntnis, dass eine interessante Unterrichtsgestaltung hier besonders wichtig sein könnte. Literaturverzeichnis [Ba10] Barthel, Hannelore: Informatikunterricht. Wünsche und Erwartungen von Schülerinnen und Schülern. Dissertation, Philosophische Fakultät, Christian-Albrechts-Universität, Kiel, Januar 2010. [Ge08] Gesellschaft für Informatik e.V.: Grundsätze und Standards für die Informatik in der Schule – Bildungsstandards Informatik für die Sekundarstufe I. LOG IN, 28(150/151):Beilage, 2008. [HB07] Holstermann, Nina; Bögeholz, Susanne: Interesse von Jungen und Mädchen an naturwissenschaftlichen Themen am Ende der Sekundarstufe I. Zeitschrift für Didaktik der Naturwissenschaften, 13:71–86, 2007. [HHL98] Ho mann, Lore; Häusler, Peter; Lehrke, Manfred: Die IPN-Interessenstudie Physik. IPN, Kiel, 1998. [KP11] Krapp, Andreas; Prenzel, Manfred: Research on Interest in Science: Theories, methods, and ﬁndings. International Journal of Science Education, 33(1):27–50, January 2011. [Sc16] Schwinem, Stefan: Schülerinteresse im Informatikunterricht. Masterarbeit, Universität Duisburg-Essen, Essen, August 2016.324 Torsten Brinda, David Tobinski, Stefan Schwinemii “proceedings” — 2017/9/17 — 20:19 — page 325 — #325 ii i ii iWorkshopsii “proceedings” — 2017/9/17 — 20:19 — page 326 — #326 ii i ii iii “proceedings” — 2017/9/17 — 20:19 — page 327 — #327 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 1 Willkommen im Programmierzirkus – Ein Programmierkurs für Grundschulen Katharina Geldreich1, Alexandra Funke2, Peter Hubwieser3 Abstract: Informatik soll in den kommenden Jahren immer stärker in die frühe Bildung integriert werden und somit den Weg in die Grundschulen sowie die Kindergärten ﬁnden. Dafür ist es erforderlich, Methoden und Inhalte zu erforschen, die für Schülerinnen und Schüler der Primarstufe geeignet sind. Auf dieser Basis haben wir einen dreitägigen Kurs, den Programmierzirkus, für Drittund Viertklässler entwickelt, der den Kindern einen Einblick in die Programmierung geben soll. Die Kinder sind zwischen acht und zehn Jahren alt und beﬁnden sich kurz vor dem Übergang an die weiterführende Schule. Im Jahr 2016 nahmen 58 Schülerinnen und Schüler erfolgreich an dem Kurs teil. Weitere Durchführungen sind im Juni und Juli 2017 mit 63 Drittund Viertklässlern geplant. Dieser Beitrag beschreibt den Aufbau der einzelnen Kurstage und die verwendeten Lehr-Lern-Methoden. Weiterhin werden die Aufzeichnungen und Auswertungen des Programmierzirkus beschrieben, bei dem eine Vielzahl an Methoden zum Einsatz kam. Keywords: Programmieren; informatische Bildung; Grundschule; CS unplugged; Scratch 1 Einleitung Das Fach Informatik wird an Schulen und Universitäten mit verschiedenen Herausforderungen konfrontiert. Beispielsweise haben Schülerinnen und Schüler sowie Studentinnen und Studenten unterschiedliche Fehlvorstellungen und Vorurteile bezüglich des Faches [FBH16 ], die sich zum Großteil bereits in der Kindheit entwickeln und manifestieren [ Pr14]. Um zu verhindern, dass die Lernenden solche meist negativen Einstellungen entwickeln, ist ein aktueller Forschungsansatz, informatische Konzepte wie Programmierung bereits in die Grundschule zu integrieren. Dies ermöglicht den Kindern, eigene Erfahrungen mit Informatik und neuen digitalen Medien zu sammeln. Sie lernen, den Computer nicht nur als Benutzer einzusetzen, sondern mit dessen Hilfe kreativ zu werden [ AGE14 ]. Dieser Rollenwechsel in Kombination mit interessanten Erfahrungen könnte die Selbstwirksamkeit der Schülerinnen und Schüler im Allgemeinen und speziell bezüglich der Informatik und Programmierung erhöhen [ To15 ]. Zeitgleich dazu steigt die Diskussion über die Notwendigkeit der Informatik in der frühen Bildung stetig. Während mehrere Länder bereits das Fach 1Technische Universität München, School of Education, Professur für Didaktik der Informatik, Arcisstr. 21, 80333 München, katharina.geldreich@tum.de 2Technische Universität München, School of Education, Professur für Didaktik der Informatik, Arcisstr. 21, 80333 München, alexandra.funke@tum.de 3Technische Universität München, School of Education, Professur für Didaktik der Informatik, Arcisstr. 21, 80333 München, peter.hubwieser@tum.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 327ii “proceedings” — 2017/9/17 — 20:19 — page 328 — #328 ii i ii i2 Katharina Geldreich et al. Informatik in die Grundschulcurricula integriert haben (z. B. Großbritannien [ Br14 ] und Australien [ FVF14 ]), hat Deutschland noch keine verbindlichen Richtlinien für den Umgang mit diesen Themen entwickelt. Um herauszuﬁnden, welche Lehrmethoden und Inhalte für Kinder im Grundschulalter geeignet wären, haben wir einen einführenden Programmierkurs für Schülerinnen und Schüler der Grundschule entworfen. 2 Kurskonzept Der Kurs wurde zunächst für die vierte Klasse konzipiert und hat das Ziel, den Schülerinnen und Schülern innerhalb von drei Tagen einen Einblick in die Programmierung zu geben. Dabei sollen sie ganz grundsätzlich verstehen, wie ein Computerprogramm funktioniert, und darüber hinaus befähigt werden, sich in der Programmierumgebung Scratch zurechtzuﬁnden und dort eigene multimediale Projekte zu programmieren. Das Thema „Zirkus“ zieht sich aus mehreren Gründen als durchgängiges Motiv durch den Kursablauf, die Aufgaben und die Materialien. Ein wichtiger Aspekt bei der Wahl dieses Themas war die Motivation der Schülerinnen und Schüler. Da die meisten Kinder persönliche Erfahrungen mit einem Zirkusbesuch verbinden können, ist die Themenwahl ein erster Schritt, um die Kursinhalte lebendig und interessant zu vermitteln und dabei an die Lebenswirklichkeit der Schülerinnen und Schüler anzuknüpfen. Des Weiteren ho  ten wir, Mädchen und Jungen mit diesem Thema gleichermaßen anzusprechen, da weder Mädchen noch Jungen vorrangig damit assoziiert werden. Zusätzlich bietet ein Zirkus vielfältige Aufgabenanlässe, in denen die Handlungen von Tieren und Personen simuliert werden können. An jedem der drei Kurstage haben wir vier Stunden mit der Klasse verbracht, die nach und nach ein detaillierteres Bild vom Programmieren erhalten sollte. Am Ende des Kurses sollten alle Schülerinnen und Schüler dazu fähig sein, mit der Programmierumgebung Scratch zu arbeiten und algorithmische Kontrollstrukturen anzuwenden und zu kombinieren. Da man in der Grundschule prinzipiell mit einer hohen Variabilität von Schülerleistungen, Lernvoraussetzungen und Lerntypen konfrontiert ist, haben wir uns für eine Kombination verschiedener Lehrund Arbeitsmethoden entschieden. Einen schematischen Überblick über den Ablauf, die Inhalte und die Ziele des Kurses zeigt Abb. 1. Abb. 1: Ablauf, Inhalte und Ziele des Kurses328 Katharina Geldreich, Alexandra Funke, Peter Hubwieserii “proceedings” — 2017/9/17 — 20:19 — page 329 — #329 ii i ii iWillkommen im Programmierzirkus – Ein Programmierkurs für Grundschulen 3 Stets im Vordergrund stand durchgängig das Prinzip des aktiven Lernens [ PI69][Vo97 ]. Die Schülerinnen und Schüler sollten die Möglichkeit haben, sich eigentätig und aktiv mit den Lerngegenständen auseinanderzusetzen. Des Weiteren sollte die Möglichkeit gegeben sein, den informatischen Konzepten auf unterschiedliche Art und Weise zu begegnen [ Br66 ]. 2.1 Aufbau des Kurses Tag 1. Da die meisten Schülerinnen und Schüler keinerlei Vorwissen im Bereich Programmierung oder allgemein in Informatik mitbrachten, war das Ziel des ersten Tages, ihnen eine Grundidee über die Funktionsweise eines Computerprogramms zu geben. Sie sollten begreifen, dass Programme eine bestimmte Aufgabe bewältigen, indem sie präzisen und klaren Anweisungen folgen. Um die Kinder nicht zu überfordern, wurden diese grundlegenden algorithmischen Konzepte „unplugged“ [ CS17 ], das heißt ohne die Verwendung von Computern, eingeführt. Um zu lernen, komplexe Aufgaben in kleinere Teile zu zerlegen, bearbeiteten die Kinder eine Vielzahl von Übungen, in denen Vorgänge in eindeutige Anweisungen umgewandelt werden mussten. Verschiedene einfache Aufgaben wurden zunächst gemeinsam im Plenum gelöst, im Anschluss daran wurden verhältnismäßig komplexere Aufgaben in Kleingruppen bearbeitet. Dabei „programmierten“ die Schülerinnen und Schüler zuerst die Lehrkraft und im Anschluss daran sich gegenseitig. Um das Zirkusthema aufzugreifen, mussten in den Aufgaben beispielsweise vermisste Gegenstände gefunden oder entlaufene Tiere eingefangen werden. Sobald eine Aufgabe gelöst wurde, konnte man die Lösung in einem im Zimmer aufgebauten Spielfeld überprüfen (Abb. 2, rechts). Für die Bearbeitung der Aufgaben fertigten wir haptische Programmierblöcke an, die optisch den Programmierbefehlen in Scratch entsprechen (Abb. 2, links). Abb. 2: Ein Schüler arbeitet mit den haptischen Scratchblöcken (links); die fertigen Programme werden im Parcours getestet (rechts) Da die ausgedruckten und laminierten Blöcke mit Magneten und Klettverschlüssen versehen sind, kann mit ihnen sowohl an der Tafel als auch auf großen Filzbahnen gearbeitet werden. Zum einen konnten die Kinder auf diesem Wege ihre Programme ohne Probleme verändernWillkommen im Programmierzirkus Ein Programmierkurs für Grundschulen 329ii “proceedings” — 2017/9/17 — 20:19 — page 330 — #330 ii i ii i und im Raum transportieren, zum anderen erho  ten wir uns, den Übergang zur Weiterarbeit in Scratch zu erleichtern. Tag 2. Am zweiten Tag sollten die Schülerinnen und Schüler lernen, einfache Programme am Computer zu erstellen. Da wir eine kinderfreundliche Programmierumgebung verwenden wollten und um mögliche Frustrationen durch syntaktische Fehler zu vermeiden, entschieden wir uns für die visuelle Programmiersprache Scratch [ Ma10 ]. Wir entwickelten einen Lernzirkel mit zunehmend schwierigen Stationen, in dem die Grundfunktionen von Scratch nacheinander behandelt wurden und die jedes Kind in seinem eigenen Tempo bearbeiten konnte. Ausgehend von Fragen der Bedienung führten die erstellten Zirkelkarten (Abb. 3) über einfachen Sequenzen hin zu Kontrollstrukturen wie Wiederholungen und bedingte Anweisungen. An jeder Station wurde die entsprechende Funktion zunächst schrittweise erklärt und die Schülerinnen und Schüler wiederholten jeden Schritt an ihrem eigenen Rechner. Im Anschluss daran bearbeiteten sie eine dazu passende Aufgabe, bei der die eingeführte Funktion in einem anderen Kontext oder leicht abgewandelt verwendet werden musste. Um die heterogene Gruppe gleichermaßen zu unterstützen, standen zusätzliche Aufgaben sowie hilfreiche Tipps für die komplexeren Aufgabenstellungen bereit. Abb. 3: Vorderseite (links) und Rückseite (rechts) einer Karte des Scratchzirkels Tag 3. Ziel des dritten Tag war es, herauszuﬁnden, was die Schülerinnen und Schüler gelernt hatten und ob sie das Gelernte auch in einer o  eneren Aufgabe anwenden können. Darüber hinaus wollten wir den Kindern eine Möglichkeit bieten, kreativ und selbstbestimmt zu arbeiten. Jedes Kind sollte seine eigene Zirkusgeschichte in einem kurzen Drehbuch (Abb. 4, links) beschreiben und daraufhin in Scratch umsetzen. Da wir trotz der o  enen Aufgabenstellung eine Vergleichbarkeit der Schülerprojekte gewährleisten wollten, legten wir einige Anforderungen fest, die erfüllt werden mussten. Die Programme sollten a) mehr als eine Figur beinhalten, b) die Figuren bei der Ausführung bewegen, c) mindestens eine330 Katharina Geldreich, Alexandra Funke, Peter Hubwieserii “proceedings” — 2017/9/17 — 20:19 — page 331 — #331 ii i ii i Wiederholung ausführen und d) mindestens eine bedingte Anweisung enthalten. Nach dem Erfüllen dieser Anforderungen konnten die Schülerinnen und Schüler ihre Arbeit ohne weitere Richtlinien fortsetzen. Ihnen stand es frei, mit Scratch zu experimentieren und ihre eigenen Zirkusgeschichten zu erﬁnden sowie diese im Anschluss umzusetzen (Abb. 4, rechts). Am Ende des Tages präsentierte jedes Kind seine Zirkusgeschichte der Klasse und hatte Gelegenheit, das Vorgehen und mögliche Schwierigkeiten zu kommentieren. Abb. 4: Drehbuch für die Projekte (links) und das Projekt eines Kindes (rechts) 2.2 Aufzeichnung des Kurses Um das Kurskonzept und die E  ektivität des Kurses zu testen, wurden alle Kursdurchläufe mit einem Mixed-Methods Ansatz aufgezeichnet. Dafür kamen folgende Methoden kombiniert zum Einsatz: Videograﬁe. Um die Interaktionen der Kinder untereinander und mit der Lehrkraft sowie das Verhalten der Kinder allgemein zu untersuchen, wurden die kompletten Kurse mit vier Kameras aufgezeichnet. Für die entsprechende Tonaufzeichnung kamen ein Ansteckmikrophon für jede Lehrkraft und Richtmikrophone zum Einsatz. Gruppeninterviews und Fragebögen. Wir nutzten eine Vielzahl an Interviewund Reﬂektionsmethoden, um einen Einblick in das Vorwissen der Schüler zu bekommen, darüber, welche Vorstellungen sie vom Programmieren haben und wie sie sich vor bzw. nach den Kurstagen fühlten.Willkommen im Programmierzirkus Ein Programmierkurs für Grundschulen 331ii “proceedings” — 2017/9/17 — 20:19 — page 332 — #332 ii i ii i6 Katharina Geldreich et al. Bildschirmund Audioaufzeichnung. An den Kurstagen zwei und drei wurden die Bildschirme der Kinder mitgeschnitten. Die Sprache wurde über die internen Mikrophone der Laptops aufgenommen. Mit dieser Methode kann ein Einblick in die Arbeitsweise der Kinder erhalten werden. Scratch-Ergebnisse. Alle Programmierergebnisse der Kinder vom zweiten und dritten Tag wurden gespeichert, um sie im Nachhinein genauer analysieren zu können. 3 Beobachtungen und Auswertungen Basierend auf der Vielzahl an Daten, die bei der Kursdurchführung erhoben wurden, führten wir verschiedene Auswertungen durch, um einen tieferen Einblick in die Arbeit der Kinder zu erlangen. Mithilfe eines weiterentwickelten Code-Systems wurden alle 127 Scratch-Ergebnisse der Kinder des dritten Kurstages analysiert [ FGH17 ]. Dabei fanden wir heraus, dass die Projekte vorrangig in drei Projekttypen unterteilt werden können: Spiel, Geschichte und Animation. Diese unterscheiden sich nicht nur in Art und Anzahl der verwendeten Blöcke, sondern auch in der Verwendung der Figuren im Programm. Annähernd alle Kinder erfüllten in ihren Projekten die von uns vorgegebenen Pﬂichtelemente (siehe 2.1 Tag 3). Mit Hilfe von Reﬂektionsbögen, die am Ende jedes Kurstages von den Kindern ausgefüllt wurden, erhielten wir Einblicke, wie sie den Kurs empfanden. Die Bögen dienten zudem dem Erfassen des Vorwissens sowie den aufgetretenen Schwierigkeiten. Alles in allem hatte der Großteil der Kinder an allen Tagen viel Freude – vor allem an den Tagen, an denen mit den Computern gearbeitet wurde. Bei den CS unplugged Aufgaben empfanden die Kinder es als schwierig, den Kursleiter zu "programmieren". Doch nachdem diese erste Hürde gemeistert wurde, ﬁel den Kindern das Programmieren immer leichter. Dies lässt sich auch gut anhand der Videoaufzeichnungen beobachten. Am meisten Spaß hatten die Kinder am ersten Tag beim Ausprobieren der Lösungen im Spielfeld. Die Antworten des zweiten Tages waren deswegen für uns interessant, weil diese aufzeigen, welche Zirkelaufgaben besonders herausfordernd für die Kinder waren. Anhand dessen kann der Kurs entsprechend verändert werden. Alle Kinder würden gerne weiterhin in der Schule mit Scratch programmieren und etwa 90% wollen dies auch zuhause tun. Die Bildschirmund Tonaufzeichnungen der Laptops ermöglichen die Untersuchung des Vorgehens beim Programmieren. In Kombination mit den Videoaufzeichnungen lassen sich Stellen identiﬁzieren, an denen die Kinder auf Probleme gestoßen sind. Diese sind bei den Kindern sehr individuell. Im nächsten Schritt folgt die Untersuchung, ob man verschiedene Programmiertypen unterscheiden kann.332 Katharina Geldreich, Alexandra Funke, Peter Hubwieserii “proceedings” — 2017/9/17 — 20:19 — page 333 — #333 ii i ii iWillkommen im Programmierzirkus – Ein Programmierkurs für Grundschulen 7 4 Ausblick und zukünftige Arbeiten Anhand der Beobachtungen und Auswertungen wurden die Materialien, das Kurskonzept und die Aufzeichnungsmethodik evaluiert und überarbeitet. Am Ende des Schuljahres 2016/17 werden mit dem überarbeiteten Kurskonzept vier weitere Durchläufe mit dritten und vierten Klassen durchgeführt. Anschließend sollen die erhaltenen Daten, wie am Beispiel der Daten aus 2016, ausgewertet und mit denen des Vorjahres verglichen werden. Parallel arbeiten wir an einem Fortbildungskonzept, das Grundschullehrerinnen und -lehrern ohne einschlägiges Vorwissen ermöglichen soll, den Kurs an ihrer Schule zu halten. Fernziel ist hierbei, allen Viertklässlern des Landkreises Berchtesgadener Land die Teilnahme an einem Programmierkurs und somit das Erlernen grundlegender Programmierprinzipien zu ermöglichen. 5 Inhalte des Workshops Nach einer kurzen thematischen Einführung in das Themengebiet „Programmieren in der Grundschule“ können sämtliche Kursmaterialien selbstständig ausprobiert werden. Darüber hinaus werden verschiedene Schülerergebnisse ausgestellt, anhand derer die Auswertung des Kurses aufgezeigt wird. Literaturverzeichnis [AGE14] Armoni, Michal; Gal-Ezer, Judith: Early computing education. ACM Inroads, 5(4):54–59, 2014. [Br66] Bruner, Jerome: Toward a theory of instruction. Harvard University Press, Cambridge, 1966. [Br14] Brown, Neil C. C.; Sentance, Sue; Crick, Tom; Humphreys, Simon: Restart: the resurgence of computer science in UK schools. ACM Transactions on Computing Education, 14(2):1–22, 2014. [CS17] CSUnplugged.org: , Computer Science Unplugged. csunplugged.org , March 2017. [FBH16] Funke, Alexandra; Berges, Marc; Hubwieser, Peter: Di  erent Perceptions of Computer Science. In: 2016 International Conference on Learning and Teaching in Computing and Engineering (LaTICE). IEEE, S. 14–18, 2016. [FGH17] Funke, Alexandra; Geldreich, Katharina; Hubwieser, Peter: Analysis of Scratch Projects of an Introductory Programming Course for Primary School Students. In: Proceedings of the 2017 IEEE Global Engineering Education Conference (EDUCON). IEEE, S. 1233–1240, 2017. [FVF14] Falkner, Katrina; Vivian, Rebecca; Falkner, Nickolas: The Australian Digital Technologies Curriculum: Challenge and Opportunity. In: Proceedings of the Sixteenth Australasian Computing Education Conference Volume 148. ACE ’14, Australian Computer Society, Inc, Darlinghurst, Australia, Australia, S. 3–12, 2014.Willkommen im Programmierzirkus Ein Programmierkurs für Grundschulen 333ii “proceedings” — 2017/9/17 — 20:19 — page 334 — #334 ii i ii i8 Katharina Geldreich et al. [Ma10] Maloney, John; Resnick, Mitchel; Rusk, Natalie; Silverman, Brian; Eastmond, Evelyn: The Scratch Programming Language and Environment. ACM Transactions on Computing Education, 10(4):16:1–16:15, 2010. [PI69] Piaget, Jean; Inhelder, Bärbel: The psychology of the child. Basic Books, 1969. [Pr14] Prottsman, Kiki: Computer science for the elementary classroom. ACM Inroads, 5(4):60–63, 2014. [To15] Topi, Heikki: Gender imbalance in computing. ACM Inroads, 6(4):22–23, 2015. [Vo97] Vollmers, Burkhard: Learning by doing Piagets konstruktivistische Lerntheorie und ihre Konsequenzen für die pädagogische Praxis. International Review of Education, 43:73–85, 1997.334 Katharina Geldreich, Alexandra Funke, Peter Hubwieserii “proceedings” — 2017/9/17 — 20:19 — page 335 — #335 ii i ii iIra Diethelm (Hrsg.): INFOS 2017 – Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 1 Der Hamster hat das Programm erfolgreich beendet – Grundschulkinder lernen Programmieren Otto Thiele1, Petra J ¨uckstock2 Abstract: Seit 2014 f ¨uhrten die Autoren des Praxisbeitrags jedes Schuljahr eine Arbeitsgemeinschaft Informatik f ¨ur Kinder der Klassenstufe vier durch. Die Kinder wurden mittels des HamsterStruktogrammeditors”HaSE“ an das Programmieren herangef ¨uhrt. Dies erfolgte, indem die Kinder f¨ur die Probleme des Hamsters L ¨osungsalgorithmen entwickelten und als Hamster-Struktogramme implementierten. Da die Struktogramme als Programme interaktiv visuell ablaufen, konnten die Kinder testen, ob der Hamster ausf ¨uhrte, was sie sich vorgestellt und gedacht hatten. Begleitet wurde das Lernen der Kinder unter Ber ¨ucksichtigung des lerntheoretischen Ansatzes”Verst¨andnisintensives Lernen“ und des professionstheoretischen Ansatzes”Verstehen zweiter Ordnung“. Keywords: Arbeitsgemeinschaft Informatik f ¨ur Viertkl ¨assler, Algorithmen entwickeln, HamsterStruktogramme, Hamster-Strukogrammeditor”HaSE“, Programmieren,”Verst ¨andnisintensives Lernen“,”Verstehen zweiter Ordnung“ 1 Die Arbeitsgemeinschaft Anfang des Jahres 2014 wurde das Konzept zur Durchf ¨uhrung einer schul ¨ubergreifenden Arbeitsgemeinschaft Informatik f ¨ur Jenaer Kinder der vierten Klassen erstellt. Danach erfolgte die Ausschreibung. ”Mein Name ist Bommel3. Ich bin ein kleiner Hamster. Kein richtiger Hamster – denn ich lebe nicht in der Natur und auch nicht in einem K ¨aﬁg mit Laufrad. Am liebsten hamstere ich nach Herzenslust in Fantasiewelten des Computers. Diese Welten kannst Du Dir f ¨ur mich ausdenken und am Computer gestalten. Mir wird es dort bestimmt gefallen. Wenn Du auch noch meine Sprache lernst, dann werde ich auf Dich h ¨oren und mit Freude und Spaß ausf¨uhren, was Du mir sagst.“ [wi16] F¨ur die Eltern wurde in der Ausschreibung erg ¨anzt, dass das Konzept der Arbeitsgemeinschaft darauf ausgerichtet ist, das analytische, logische und algorithmische Denken der Kinder altersgerecht und spielerisch anzuregen und zu f ¨ordern. Das heißt, die Kinder sollen bef ¨ahigt werden, algorithmische Probleme am Computer mit dem an der Universit ¨at Oldenburg entwickelten Hamster-Struktogrammeditor4 ”HaSE“ zu l ¨osen [wi16]. 1Verst ¨andnisintensives Lernen e. V ., L ¨obstedter Straße 67, 07749 Jena, otto.thiele@verstehenlernen.de 2witelo e. V ., L ¨obstedter Straße 67, 07749 Jena, p.jueckstock@witelo.de 3F¨ur die Kinder war es wichtig, dass der Hamster einen Namen hatte. 4Der Hamster-Struktogrammeditor”HaSE“ verf ¨ugt¨uber eine f ¨ur die Kinder leicht bedienbare graﬁsche Benutzeroberﬂ ¨ache, die aus der gestaltbaren virtuellen Welt des Hamsters und dem Editor f ¨ur HamsterStruktogramme besteht [Bo16].I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 335ii “proceedings” — 2017/9/17 — 20:19 — page 336 — #336 ii i ii iDie Resonanz auf die Ausschreibung war groß, so dass die Arbeitsgemeinschaft im Schuljahr 2014/15 erstmals durchgef ¨uhrt werden konnte. Wie die Kinder seitdem lernten und beim Lernen begleitet wurden, wird nachfolgend beschrieben. 2 Mit dem Hamster lernen In der Arbeitsgemeinschaft waren die Aufgaben in Geschichten verpackt, die die Fantasie der Kinder anregten. Eine solche Aufgabe war beispielsweise die vom”Hamster Bommel als Nachtw ¨achter“. Jena war im Mittelalter eine kleine Stadt (Abb. 1) mit einer Stadtmauer und vier Stadttoren. Die Stadtmauer war der Schutz vor r ¨auberischen Angriffen. Das Johannistor, der Pulverturm und Teile des Anatomieturms sowie der Stadtmauer sind bis heute erhalten geblieben. Abb. 1: Das mittelalterliche Jena mit Hamster Bommel Jena hatte damals immer einen Nachtw ¨achter. Der W ¨achter lief nachts innerhalb von Jena die Stadtmauer ab. Ein Zauberer hat Bommel in das mittelalterliche Jena gebeamt. Dort muss Bommel die Aufgabe des Nachtw ¨achters ¨ubernehmen und die Stadtmauer ablaufen. Als Belohnung darf er nach dem Rundgang das leckere Korn verspeisen. Um diese und andere Aufgaben l ¨osen zu k ¨onnen, lernten die Kinder Algorithmen zu entwickeln. Dazu eigneten sie sich die Hamster-Befehle, Testbefehle, zusammengesetzten Bedingungen, Grundstrukturen (Sequenz, Selektion, Zyklus) und parameterlose Prozeduren an [Bo16].336 Otto Thiele, Petra Jückstockii “proceedings” — 2017/9/17 — 20:19 — page 337 — #337 ii i ii iIra Diethelm (Hrsg.): INFOS 2017 – Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 3 2.1 L ¨osen der Einstiegsaufgabe”Hamster Bommel und das leckere Korn“ Bommel schaut aus seinem Bau aufs Feld (Abb. 2). Pl ¨otzlich erblickt er am Feldrand ein leckeres Korn. Bommel w ¨are kein Hamster, w ¨urde er das Korn nicht hamstern wollen. Abb. 2: Die Welt des Hamsters Bommel Baue Bommels Welt am Computer. Hilf Bommel, das Korn zu hamstern. Pr¨ufe, ob Bommel die Aufgabe l ¨ost. Als hilfreich erwies sich, dass die Kinder die Aufgabe zun ¨achst in einem Rollenspiel auf den Fliesen zwischen den W ¨anden des Schulﬂurs l ¨osten (Abb.3). Abb. 3: Erfahrungen geh ¨oren zum Lernen (Foto: Thomas Corbus) Im Spiel ¨ubernahm jedes Kind die Rolle des Hamsters. Dabei galt es zu beachten, dass der Hamster beim Laufen jeden Schritt nur von einer zur n ¨achsten Fliese ausf ¨uhren kann. Obwohl alle Kinder den k ¨urzesten Weg zur gegen ¨uberliegenden Wand beschritten, ben ¨otigten sie unterschiedlich viele Schritte. ¨Uber die Ursachen nachdenkend fanden sie heraus, dass manche von ihnen die Schritte nicht immer”hamsterkonform“ ausf ¨uhrten. Das lag zum einen daran, dass es schwierig war, Fliese f ¨ur Fliese in kleinen Schritten zu durchlaufen und zum anderen an mangelnder Konzentration. Beim Wiederholen achteten die Kinder untereinander darauf, dass alle mit gleich vielen Schritten zur Wand gelangten. An der Wand angekommen, nahm jedes Kind das Korn in Form eines Papierschnipsels auf. Mit dem korrekten Ausf ¨uhren der Handlungsfolge, Schritt f ¨ur Schritt bis zur Wand zu laufenDer Hamster hat das Programm erfolgreich beendet 337ii “proceedings” — 2017/9/17 — 20:19 — page 338 — #338 ii i ii iund das Korn aufzunehmen, hatten die Kinder die Aufgabe im Rollenspiel gel ¨ost. Zum Rollenspiel sei bemerkt, dass die Kinder insbesondere durch das eigene Handeln und Erleben lernten. Das Rollenspiel hat sich zudem als geeignete Methode erwiesen, die Kinder an die Hamster-Befehle und Grundstrukturen der Algorithmen heranzuf ¨uhren. Nach einer kurzen Einf ¨uhrung war es den Kindern problemlos m ¨oglich, die virtuelle Welt des Hamsters am Computer zu bauen. Danach ging es damit weiter, einen Algorithmus zu entwickeln. Dazu ¨uberlegten sich die Kinder, dass der Hamster in der virtuellen Welt, analog zum Rollenspiel, eine Folge von Schritten ausf ¨uhren muss, um von seinem Bau zur gegen ¨uberliegenden Wand zu gelangen. Es ergab sich die Frage, wie der Hamster am Computer zum Laufen gebracht werden kann. Als Antwort auf die Frage lernten die Kinder die Notation vor() des Hamster-Befehls, sich einen Schritt vor zu bewegen, und die Darstellung im Hamster-Struktogramm kennen. Im Rollenspiel entsprach vor() , genau einen Schritt vor zur n ¨achsten Fliese zu laufen. Letztlich mussten die Kinder noch wissen, wie der Hamster am Computer ein Korn”hamstern“ kann. Dazu lernten sie die Notation nimm() des Hamster-Befehls, ein Korn aufzunehmen, und die Darstellung im Hamster-Struktogramm kennen. Mit den Erfahrungen aus dem Rollenspiel, der Kenntnis der Hamster-Befehle und deren Notationen entwickelten die Kinder Handlungsfolgen zum L¨osen der Aufgabe am Computer (Abb. 4). Abb. 4: Ein Hamster-Struktogramm erstellen (Foto: Thomas Corbus) Die Handlungsfolgen stellten sie als Struktogramme (Abb. 5) mithilfe des Hamster-Struktogrammmeditors dar. Da Hamster-Struktogramme auf graﬁsche Weise Hamster-Programme repr ¨asentieren, die interaktiv ausf ¨uhrbar sind, konnten die Kinder ¨uberpr ¨ufen, ob der Hamster tats ¨achlich von seinem Bau zur gegen ¨uberliegenden Wand l ¨auft und das Korn ”hamstert“. Es kam vor, dass Hamster-Struktogramme mancher Kinder nicht zu den von ihnen erwarteten Programmabl ¨aufen f ¨uhrten. Beispielsweise, wenn der Hamster die Wand nicht erreichte, weil er zu wenige Schritte ausf ¨uhrte und die Fehlermeldung”Hamster versucht ein Korn aufzunehmen, das nicht da ist. :-(“ ausgegeben wurde oder er zu viele Schritte ausf¨uhren sollte und die Fehlermeldung”Hamster l ¨auft gegen eine Mauer! :-(“ ausgegeben wurde. Solche Erfahrungen stimmten die Kinder nachdenklich. Sie suchten die Ursachen, weshalb der Hamster nicht tat, was sie sich vorgestellt hatten.338 Otto Thiele, Petra Jückstockii “proceedings” — 2017/9/17 — 20:19 — page 339 — #339 ii i ii iIra Diethelm (Hrsg.): INFOS 2017 – Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 5 Abb. 5: Algorithmus aus einer Sequenz von Hamster-Befehlen Beginnend mit dem Rollenspiel, dem Bauen der Hamster-Welt, dem Erstellen der HamsterStruktogramme am Computer sowie dem Testen des Programmablaufs und den sich eventuell daraus ergebenden Nachbesserungen gelang es allen Kindern, die Aufgabe zu l ¨osen. Das L ¨osen belohnte das Programm mit der Ausgabe”Hamsterprogramm erfolgreich beendet! Herzlichen Gl ¨uckwunsch, der Hamster hat das Hamsterprogramm erfolgreich beendet. :-)“. Das Hamster-Struktogramm ließ sich durch das Einf ¨uhren der while-Anweisung und des Hamster-Testbefehls vornFrei() modiﬁzieren (Abb. 6). Abb. 6: Modiﬁziertes Hamster-Struktogramm Bevor die Kinder allerdings das Struktogramm mit dem Hamster-Struktogrammeditor modiﬁzierten, f ¨uhrten sie auf den Fliesen des Schulﬂurs im Rollenspiel die Handlungsfolge ”solange vorn frei, laufe Schritt f ¨ur Schritt vor und hamstere danach das Korn“ aus. Die Aufgabenstellung wurde dar ¨uber hinaus noch dadurch erweitert, dass der Hamster mit dem Korn in seinen Bau zur ¨uckkehren, das Korn dort ablegen und wieder aus dem Bau schauen sollte. Das L ¨osen dieser und weiterer Aufgaben sowie das damit verbundene Lernen f ¨uhrte die Kinder zu einem”intuitiven Algorithmusbegriff“, der sich auf Handlungsabl ¨aufe bezieht, die als Programme auf dem Computer ausf ¨uhrbar sind. Nach und nach zeigte sich, dass die Kinder beim Entwickeln von Hamster-Struktogrammen nicht mehr auf Rollenspiele angewiesen waren, weil sie sich die vom Hamster auszuf ¨uhrenden Handlungen immer besser vorstellen konnten.Der Hamster hat das Programm erfolgreich beendet 339ii “proceedings” — 2017/9/17 — 20:19 — page 340 — #340 ii i ii i2.2 L ¨osen fortgeschrittener Aufgaben Die Aufgabe”Hamster Bommel als Nachtw ¨achter“ (Abb. 1 in Abschn. 2) l ¨osten die Kinder aufgrund der Erfahrungen, die sie bereits in den Rollenspielen und beim Entwickeln von Algorithmen gemacht hatten. Sie ¨uberlegten sich, dass der Hamster entlang der Stadtmauer zum Korn gelangt, indem im Hamster-Struktogramm viermal nacheinander die whileAnweisung und der Befehl linksUm() (Abb. 7) angeordnet und abschließend noch die Befehle vor() undnimm() anf¨ugt werden. Am Computer verfolgten die Kinder mit, wie das Programm ablief und der Hamster entlang der Stadtmauer zum Korn gelangte und es aufnahm. Damit war die Aufgabe gel ¨ost. Abb. 7: Schleife gefolgt von einem Hamster-Befehl Leistungsstarke Kinder wurden angeregt, sich weiter mit der Aufgabe zu besch ¨aftigen. Mit Hilfestellungen fanden sie heraus, dass das Wiederholen der while-Anweisung und des Befehls linksUm() im Hamster-Struktogramm durch eine ¨außere Schleife realisiert werden kann. Allerdings ergab sich dabei beispielsweise das Problem, dass der Hamster Runde f ¨ur Runde lief, nicht zum Stehen kam und dadurch auch nicht seine Belohnung bekam. Jetzt wurde es schwierig, denn die Frage ergab sich, wie der Hamster zum Stehenbleiben gebracht werden kann. In diesem Zusammenhang lernten die Kinder die zusammengesetzte Bedingung !(kornDa()) kennen (Abb. 8). Abb. 8: L ¨osungsalgorithmus mit hohem Anspruch Im Laufe der Zeit lernten die Kinder immer besser, analytisch und algorithmisch zu denken. Sie waren in der Lage, in den umrahmenden Geschichten der Aufgaben die Probleme zu erfassen und L ¨osungsalgorithmen zu entwickeln. Ebenso waren einige Kinder in der Lage, gegebene Aufgaben zu erweitern oder zu modiﬁzieren.340 Otto Thiele, Petra Jückstockii “proceedings” — 2017/9/17 — 20:19 — page 341 — #341 ii i ii iIra Diethelm (Hrsg.): INFOS 2017 – Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 7 Spaß und Freude bereitete den Kindern, sich zu gegebenen Hamster-Welten (Abb. 9) Geschichten und Aufgabenstellungen auszudenken, wie z. B. die folgende Geschichte. Abb. 9: V orgegebene Hamster-Welt ”Heute hat der kleine Hamster Bommel Lust auf einen Spaziergang. Er steckt seinen Kopf aus dem Bau. Da erblickt er die drei K ¨orner, die verteilt auf dem Feld rumliegen. Hamster Bommel folgt den K ¨ornern. Nehmen tut er sie aber nicht. Bommel l ¨asst sie lieber f ¨ur die V¨ogel ¨ubrig. Am Ende sitzt der kleine Hamster Bommel wieder in seinem Bau, als ob nichts gewesen w ¨are. :-)“ Die Kinder dachten sich auch eigene fantasievolle Hamster-Welten und dazugeh ¨orige Aufgaben aus, die sie in Geschichten einbanden. Außerdem lernten die Kinder parameterlose Prozeduren kennen und wendeten sie an. Beispielsweise erwies es sich als zweckdienlich, mithilfe einer Prozedur aus drei HamsterBefehlen linksUm() den Befehl rechtsUm() zu erstellen. Abb. 10: Eine parameterlose Prozedur Nach einem halben Jahr konnten die Kinder bereits anspruchsvolle Aufgaben mit dem Hamster-Struktogrammeditor l ¨osen. Beispielsweise entwickelten sie Algorithmen, mit denen der Hamster aus gegebenen Bildnegativen (Abb. 11) die Bildpositive machte. Nat ¨urlich bot es sich an, dass die Kinder ihre V ornamen in Bildnegativen versteckten. Dann sollte der Hamster die V ornamen schreiben.Der Hamster hat das Programm erfolgreich beendet 341ii “proceedings” — 2017/9/17 — 20:19 — page 342 — #342 ii i ii i Abb. 11: Aus dem Bildnegativ das -positiv erstellen 3 Das Lernen begleiten 3.1 Verst ¨andnisintensives Lernen Bei der p ¨adagogischen Arbeit mit den Kindern in der Arbeitsgemeinschaft wurde der lerntheoretische Ansatz”Verst ¨andnisintensives Lernen“ [Fa03, Fa08] ber ¨ucksichtigt. MetakognitionSelbstreflexive Begleitung und Optimierung des Lernens ErfahrungEigenes Erleben und HandelnVorstellungSinnesnahe, erfahrungs -analoge Formen des DenkensBegreifenDenken in Kategorien und Zusammenhängen Abb. 12: Tetraedermodell des”Verst ¨andnisintensiven Lernens“ [Vi17] Der Ansatz geht davon aus, dass die Qualit ¨at des Lernens zum einen durch das Verstehen bestimmt wird. Verstehen ist grundlegend f ¨ur das Lernen und l ¨asst sich als kognitiver Modellierungsprozess beschreiben, in dem Erfahrung, V orstellung, Begreifen5und Metakognition dynamisch zusammenwirken. In der Abb. 12 sind die vier Dimensionen des Verstehens graﬁsch veranschaulicht6. Zum anderen bestimmen die Autonomie, soziale Eingebundenheit und Kompetenzen der Lernenden die Lernqualit ¨at [Fa08, DR93]. Der lerntheoretische Ansatz erwies sich als hilfreich, die Verstehensprozesse der Kinder mitverfolgen, die individuellen Unterschiede beim Lernen genauer erfassen und besser ber¨ucksichtigen sowie die Ursachen f ¨ur Verstehensprobleme anlysieren zu k ¨onnen. Dazu einige erl ¨auternde Beispiele. 5Begreifen wird im lerntheoretischen Ansatz als eine Dimension des Verstehens aufgefasst. 6Erfahrung, V orstellung und Begreifen sind dem Denken und Metakognition ist dem Nachdenken zuordbar.342 Otto Thiele, Petra Jückstockii “proceedings” — 2017/9/17 — 20:19 — page 343 — #343 ii i ii iIra Diethelm (Hrsg.): INFOS 2017 – Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 9 Wie wichtig eigenes Erleben und Handeln beim Lernen waren, zeigte sich u. a. in den Rollenspielen, die mit den Kindern im Rahmen des L ¨osens von Aufgaben durchgef ¨uhrt wurden (Abschn. 2.1). Interessant war zu beobachten, wie die Kinder erlebten, was der Hamster bei den Programmabl ¨aufen ausf ¨uhrte oder auch nicht (Abschn. 2.1). F ¨uhrte der Hamster nicht das Erwartete aus, wurden die Kinder angeregt, ¨uber ihre Algorithmen nachzudenken, nach den Ursachen, weshalb die Algorithmen nicht das Erwartete leisteten, zu suchen und die Algorithmen nachzubessern. Verstehensprobleme ergaben sich beispielsweise, wenn in Wortlauten von Aufgaben Begriffe verwendet wurden (wie etwa Feldrain), deren Bedeutung die Kinder nicht kannten oder mit denen sie andere V orstellungen verbanden. Deshalb mussten Formulierungen von Aufgaben ge ¨andert werden. Das logische Denken der Kinder war u. a. bei den zusammengesetzten Bedingungen gefordert. Formale Notationen, wie z. B. !vornFrei() oder vornFrei() && !kornDa() , bereiteten Probleme und mussten insbesondere ge ¨ubt werden. Die Kinder lernten selbstbstimmt (”aus sich selbst heraus“) aus Interesse an den Geschichten und den vom Hamster zu bew ¨altigenden Problemen. Wenn Kinder einmal nicht lernten, am Computer in der Welt des Hamsters versanken und keine Probleme l ¨osen wollten, lag es oft am anstrengenden Schultag, den sie bereits hinter sich hatten. Dann ließ man diese Kinder auch einmal in der Welt des Hamsters spielen. Die Kinder f ¨uhlten sich stets in die Arbeitsgemeinschaft eingebunden. Zu keiner Zeit fehlte es einem Kind an Akzeptanz bzw. Anerkennung innerhalb der Lerngemeinschaft. Das auf Verstehen ausgerichtete Lernen trug mit dazu bei, dass die Kinder folgende fachliche Kompetenzen erwarben: Analysieren von Aufgaben, um zu l ¨osende Probleme zu erfassen Entwickeln von L ¨osungsalgorithmen unterschiedlicher Schwierigkeitsgrade Darstellen der L ¨osungsalgorithmen in Hamster-Struktogrammen Suchen von Fehlern und Korrigieren fehlerbehafteter Algorithmen Lesen und Verstehen gegebener Hamster-Struktogramme Erweitern und Modiﬁzieren gegebener Aufgaben Erstellen und Verwenden von parameterlosen Prozeduren Konstruieren von Aufgaben, Schreiben umrahmender Geschichten f ¨ur diese Aufgaben und Erstellen von Musterl ¨osungen 3.2 Verstehen zweiter Ordnung Neben dem lerntheoretischen Ansatz fand der professionstheoretischen Ansatz”Verstehen zweiter Ordnung“ [Fa08] Ber ¨ucksichtigung. Das heißt, es wurde ein professionell kontrollierter Perspektivwechsel zum Lernen der Kinder vollzogen, der ein ko-konstruierendesDer Hamster hat das Programm erfolgreich beendet 343ii “proceedings” — 2017/9/17 — 20:19 — page 344 — #344 ii i ii iBegleiten des Lernens erm ¨oglichte. Durch Ko-Konstruktion fand ein Lernen statt, dass durch Interaktion und Zusammenarbeit mit den Kindern bestimmt war. Beispielsweise wurden beim Ko-Konstruieren immer wieder Differenzerfahrungen bzgl. des eigenen Verstehens und dem der Kinder gemacht, wenn Kinder Aufgaben und Probleme auf unerwartete und teils bemerkenswerte Art und Weise l ¨osten. Diese Erfahrungen waren ausschlaggebend daf ¨ur, den Kindern die Denkwege offen zu halten. F ¨uhrten die Gedankeng ¨ange bei Kindern zu inkorrekten oder keinen L ¨osungen, erwies sich Ko-Konstruktion ebenso als helfend. Dabei wurde in der Interaktion mit diesen Kindern anerkannt, dass sie sich bei ihren L ¨osungsversuchen etwas dachten. Was sie sich gedacht hatten, ließ man sich von ihnen erkl¨aren. Keinesfalls wurde gegen ¨uber den Kindern ge ¨außert, dass das, was sie gemacht hatten, falsch sei. Stattdessen wurden die Kinder angeregt, ¨uber ihre Gedankeng ¨ange nachzudenken und Korrekturen vorzunehmen oder andere Wege hin zu den L ¨osungen einzuschlagen. 4 Fazit Ein Journalist der Ostth ¨uringer Zeitung, der ¨uber die Arbeitsgemeinschaft den Artikel”Informatik kommt bei Viertkl ¨asslern gut an“ verfasste, stellte die Frage, ob Grundschulkinder ¨uberhaupt die V oraussetzungen mitbringen, sich mit informatischen Problemen zu befassen [Zi15]. Die Frage kann aufgrund der guten Erfahrungen aus der Arbeitsgemeinschaft, der erzielten Lernergebnisse und -qualit ¨at sowie dem Spaß und der Freude der Kinder beim Lernen bejaht werden. Literaturverzeichnis [Bo16] Boles, D.: HaSE-Hamster-Struktogrammeditor. http://www.boles.de/hamster/ hase.html , 2016. Stand: 09.03.2017. [DR93] Deci, E.; Ryan, R.: Die Selbstbestimmungstheorie der Motivation und ihre Bedeutung f ¨ur die P ¨adagogik. Zeitschrift f ¨ur P¨adagogik 39, S. 223–237, 1993. [Fa03] Fauser, P.: Lernen als innere Wirklichkeit. ¨Uber Imagination, Lernen und Verstehen. In (Rentsch, I.; Madelung, E.; Fauser, P., Hrsg.): Bilder im Kopf. Texte zum Imaginativen Lernen, S. 201–213. Kallmeyer, Seelze-Velber, 2003. [Fa08] Fauser, P.: Theorie des Verst ¨andnisintensiven Lernens. In (Fauser, P.; Prenzel, M.; Schratz, M., Hrsg.): Was f ¨ur Schulen! Proﬁle, Konzepte und Dynamik guter Schulen in Deutschland, S. 5–26. Kallmeyer, Seelze-Velber, 2008. [Vi17] ViL e.V .: Das Tetraeder im ViL. http://www.verstehenlernen.de/?page_id=2788 , 2017. Stand: 09.03.2017. [wi16] witelo e.V .: Hamster Bommel und der Computer. http://witelo.de/lernorte/ projekt/hamster-bommel-und-der-computer , 2016. Stand: 10.03.2017. [Zi15] Zippel, T.: Informatik kommt bei Viertkl ¨asslern gut an. Ostth ¨uringer Zeitung, 14. Februar 2015.344 Otto Thiele, Petra Jückstockii “proceedings” — 2017/9/17 — 20:19 — page 345 — #345 ii i ii iInfos 2017 Informatische Bildung zum Verstehen und Gestalten    1  Workshop: Ein Durchgang durch das Grundfach Informatik (nur) mit dem elektronischen Schulbuch inf-schule.de  Heiko Jochum1, Klaus Becker2, Martin Zimnol3, Daniel Jonietz4, Oliver Schneider5, Manuel Froitzheim6 Abstract: Anhand eines möglichen Durchgangs durch das Grundfach Informatik wird in einem ersten Teil ein Überblick über die Inhalte des elektronischen Schulbuchs inf-schule.de vermittelt. Der Umfang des Schulbuchs ist dabei so groß, dass er alle Inhalte des Grundfachs (zumindest in einigen Bundesländern) abdeckt. Innerhalb des Workshops wird neben diesen Inhalten auch ein Ausblick auf alternative Heransgehensweisen und optionale Inhalte gegeben. In einem zweiten Teil entwickeln die Teilnehmenden einen möglichen Durchgang durch das Grundfach Informatik für ihr Bundesland. Die Teilnehmenden benötigen nur ein Endgerät mit Internetzugang. Keywords: Elektronisches Schulbuch, Digitales Schulbuch, Informatikunterricht, Lernen, Didaktik der Informatik, Web-Applikation, Grundfach 1 Das Schulbuchprojekt inf-schule Das Schulbuchprojekt inf-schule.de (vgl. https://www.inf-schule.de/) wurde 2008 initiiert und inzwischen ist ein elektronisches Schulbuch für den Informatikunterricht entwickelt worden, das fast die gesamten Unterrichtsinhalte des Faches Informatik abdeckt. Bezüglich des Umfangs (mit mehr als 2000 Webseiten) und der Nutzerzahlen (mit mehr als 100.000 Zugriffen pro Schulwoche) hat sich inf-schule.de inzwischen zum akzeptierten Lehrwerk für den Informatikunterricht entwickelt. Genau wie gedruckte Schulbücher orientiert es sich an den Lehrplänen und den Bildungsstandards und bietet vielfältiges Material zum Lernen und Lehren. ([F+17], ebenfalls in diesem Band) Das Schulbuch inf-schule.de wird als digitales Schulbuch im Internet angeboten. In der nach Sanguo, Xuehai und Chenglin [Sa12] vorgeschlagen Entwicklungshierarchie für digitale Schulbücher ist es der Stufe 2.0 (Schulbücher ohne analoge Vorlage) zuzurechnen. In weiten Teilen erreicht es inzwischen auch die Stufe 3.0, die eine Mitgestaltung durch die Nutzer vorsieht.                                                               1 Werner-Heisenberg-Gymnasium Bad Dürkheim, Kanalstr. 19, 67098 Bad Dürkheim, jom@whgonline.de 2 BurgGymnasium Kaiserslautern, Burgstraße 18, 67659 Kaiserslautern, beckerkp@web.de 3 Pädagogisches Landesinstitut Rheinland-Pfalz, Butenschönstraße 2, 67346 Speyer, martin.zimnol@pl.rlp.de 4 BurgGymnasium Kaiserslautern, Burgstraße 18, 67659 Kaiserslautern, daniel@jonietz.de 5 Sickingen-Gymnasium Landstuhl, Philipp-Fauth-Straße 3, 66849 Landstuhl, o.schneider@mac.com 6 Universität Siegen, Zentrum für ökonomische Bildung in Siegen (ZöBiS), Kohlbettstraße 15, 57068 Siegen, froitzheim@zoebis.de I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 345ii “proceedings” — 2017/9/17 — 20:19 — page 346 — #346 ii i ii i 2    Manuel Froitzheim et al.  2 Workshopbeschreibung Durch den recht großen Umfang des Schulbuchs inf-schule.de können nahezu alle Unterrichtsinhalte des Grundund auch des Leistungsfachs Informatik abgedeckt werden. Darüber hinaus gibt es etliche optionale Themenbereiche (wie z.B. Messwert-Erfassung mit dem RaspberryPi), die zusätzlich in den Unterricht integriert werden können.    Abbildung 1: Startseite mit der Übersicht über die verschiedenen Themenbereiche auf inf-schule.de (vgl. https://inf-schule.de/) Innerhalb des Workshops wird ein Überblick über den Aufbau und die verschiedenen Themenbereiche vermittelt. Dazu soll zunächst ein möglicher Durchgang durch das Grundfach Informatik skizziert werden, der vollständig durch das Schulbuch inf-schule.de abgedeckt wird und dem rheinland-pfälzischen Lehrplan entspricht. Des Weiteren werden die darüber hinausgehenden Themenbereiche skizziert. Durch die Vielzahl der zusätzlichen Optionen innerhalb des Schulbuchs sind verschiedene Wege durch das Schulbuch denkbar. Deshalb sollen in einem zweiten Teil die Teilnehmenden einen eigenen Durchgang durch das Grundfach Informatik für ihr Bundesland erarbeiten und überprüfen, inwieweit dieser sinnvoll durch das Schulbuch inf-schule.de abgedeckt wird. Da es sich bei inf-schule.de um ein kostenloses online-Schulbuch handelt, benötigen die Teilnehmenden nur ein Endgerät mit Internetzugang.  346 Heiko Jochum et al.ii “proceedings” — 2017/9/17 — 20:19 — page 347 — #347 ii i ii iFörderung digitaler Bildung mit elektronischen Schulbüchern      3  Literaturverzeichnis [Da16]  Dagstuhl-Erklärung: Bildung in der digitalen vernetzten Welt, www.gi.de/fileadmin/redaktion/Themen/dagstuhl-erklaerung-bildung-in-der-digitalen-welt-2016.pdf,  Stand: 23.01.2017. [F+17] Froitzheim, M.; Becker, K.; Zimnol, M.; Jonietz, D.; Schneider, O.; Jochum, Heiko: Förderung digitaler Bildung mit digitalen Schulbüchern. (ebenfalls in diesem Band) [Sa12]  Sanguo, C.; Xuehai, M.; Schenglin, L. (2012). The Pace of Ebook Development in China. IN:  LOGOS: The Journal of the World Book Community, 23(2), 14-20. [ScFr14]  Schuhen, M.; Froitzheim, M. (Hrsg.): Das Elektronische Schulbuch. Fachdidaktische Anforderungen und Ideen treffen auf Lösungsvorschläge der Informatik. Münster: LIT Verlag. [ScFr15]  Schuhen, M.; Froitzheim, M. (Hrsg.): Das Elektronische Schulbuch 2015. Fachdidaktische Anforderungen und Ideen treffen auf Lösungsvorschläge der Informatik. Münster: LIT Verlag. [ScFr16]  Schuhen, M.; Froitzheim, M. (Hrsg.): Das Elektronische Schulbuch 2016. Fachdidaktische Anforderungen und Ideen treffen auf Lösungsvorschläge der Informatik. Münster: LIT Verlag. [Wi03]  Wiater, W. (2003): Schulbuchforschung in Europa. Bestandsaufnahme und Zukunftsperspektive. Bad Heilbrunn: Klinkhardt. Ein Durchgang durch das Grundfach Informatik 347ii “proceedings” — 2017/9/17 — 20:19 — page 348 — #348 ii i ii iii “proceedings” — 2017/9/17 — 20:19 — page 349 — #349 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017     15 Analogien für Programmierkonzepte: Ein Weg zum Computational Thinking Barbara Wieczorek1, Liz Ribe2, Christina B. Class3 und Michael Brinkmeier4 Abstract: Im Rahmen einer Informatikausbildung ist das Erlernen einer Programmiersprache für Schüler und Studenten ein wichtiger Zugang, um Computational Thinking zu erlernen. Jedoch stellen die Grundlagen der Programmierung häufig eine schwer überwindbare Hürde dar, die Lernende vom eigentlichen Ziel abhält, Programmierkonzepte als Problemlöseoperatoren einzusetzen. In diesem Beitrag wird untersucht, inwieweit Analogien als Brücke zwischen dem Vorwissen des Lernenden und Programmierkonzepten dienen können. Es wird ein anschauliches Modell zur Verdeutlichung von Beziehungen und Wechselwirkungen von Lerner, Analogien und Fachkonzepten vorgestellt. In einem Workshop werden in Arbeitsgruppen Praxisbeispiele von Analogien für konkrete Programmierkonzepte zusammengestellt und deren Vorund Nachteile sowie Grenzen und resultierende Herausforderungen diskutiert. Keywords: Computational Thinking, Programmierung, Informatikunterricht, Analogien, Problemlösen, duale Kodierung 1 Einleitung Computational Thinking wurde bereits in den 1950er und 60er Jahren als Teil der Informatik, unter dem Begriff algorithmic thinking (Algorithmisches Denken) gesehen [De09]. 2006 forderte Jeannette Wing, dass Computational Thinking neben Lesen, Schreiben und Rechnen als grundlegende Fähigkeit erlernt werden soll [Wi06]. Hierunter versteht sie eine Reihe von mentalen Werkzeugen, um Probleme zu lösen, Systeme zu entwerfen und menschliches Verhalten zu verstehen [Wi06]. Grundlagen des Computational Thinking sollen daher in die Curricula der Schule integriert werden [BS11]. Hierzu wurde eine Matrix mit Konzepten und verschiedenen Schulfächern entwickelt, in denen diese Konzepte angewandt und trainiert werden. Auch wenn Aspekte des Computational Thinking auf verschiedenste Wege gelehrt werden können, ist es zutiefst mit Programmieraktivitäten verbunden.  Das Erlernen einer Programmiersprache kann die Ausbildung von Computational                                                            1 Ernst-Abbe-Hochschule Jena, Grundlagenwissenschaften, Carl-Zeiss-Promenade 2, 07745, Jena, Barbara.Wieczorek@eah-jena.de 2 Ernst-Abbe-Hochschule Jena, Grundlagenwissenschaften, Carl-Zeiss-Promenade 2, 07745, Jena, Elizabeth.Ribe-Baumann@eah-jena.de 3 Ernst-Abbe-Hochschule Jena, Grundlagenwissenschaften, Carl-Zeiss-Promenade 2, 07745, Jena, Christina.Class@eah-jena.de 4 Universität Osnabrück, Institut für Informatik, Albrechtstr. 28, 49076, Osnabrück, Michael.Brinkmeier@uni-osnabrueck.de I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 349ii “proceedings” — 2017/9/17 — 20:19 — page 350 — #350 ii i ii i 16    Vorname1 Nachname1 und Vorname2 Nachname2  Thinking-Fähigkeiten unterstützen, indem das automatisierte Lösen von Problemen geschult wird [Wo17]. Die Einführung in eine Programmiersprache findet häufig bereits zu Beginn einer Informatikausbildung statt.  Um genauer beleuchten zu können, wie Fachkonzepte der Programmierung so erschlossen werden können, dass sie letztendlich zur Lösung von Problemen eingesetzt werden können, betrachten wir die kognitive Psychologie des Lösens von Problemen. In diesem Kontext ist unser Ziel die Verankerung von Fachkonzepten in Wissensstrukturen, sodass sie als Operatoren im Sinne der Problemlösetheorie eingesetzt werden können. Hierbei gehen wir von folgender Begriffsbildung aus [Sp03]: • Problem als Zustand: Ein Problem kann aufgefasst werden als ein Ausgangszustand. Die Lösung des Problems entspricht einem Zielzustand.  • Lösungsprozess als Transformation: Um den Ausgangszustand in den Zielzustand zu transformieren, müssen Problemlöseoperatoren angewendet werden. Eine Transformation besteht aus einer konkreten Reihenfolge von Operationen unter Einsatz geeigneter Operatoren und kann mehrere Übergangszustände beinhalten. Wir können diese Begriffe auf die Programmierung übertragen: Ein zu lösendes Ausgangsproblem kann durch eine geeignete Repräsentation [An13] als Ausgangszustand eines Programmes betrachtet werden. Die Durchführung von Operationen, die durch das Programm festgelegt sind, stellt den Lösungsprozess dar. Der Zustand des Programms wird während seiner Durchführung transformiert, bis ein definierter Endzustand erreicht ist. Der Endzustand ist eine Repräsentation der Lösung des Problems. Um geeignete Operationen für den Lösungsprozess zu finden, müssen entsprechende Fachkonzepte aus der Programmierung als Problemlöseoperatoren eingesetzt werden. Ein zentrales Problem in der Ausbildung von Programmieranfängern ist also der Erwerb von entsprechenden Problemlöseoperatoren. Nach der Theorie des Problemlösens gemäß Anderson [An13] erfolgt dieser Erwerb durch Entdecken, direkte Instruktion oder den Einsatz von Analogien. Im Abschnitt 2 werden Probleme diskutiert, die bei der allgemeinen Vermittlung von Programmierkonzepten auftreten. Danach richten wir den Fokus auf den Einsatz von Analogien, denen eine möglichst große Bildhaftigkeit innewohnt. Im Abschnitt 3 werden unsere Erwartungen an bildhafte Analogien und die Voraussetzungen für deren Verwendung erläutert. Anschließend werden im Abschnitt 4 spezifische Aspekte, die bei der Verwendung von bildhaften Analogien auftreten können, anhand von Beispielen geschildert.  Die Inhalte dieses Beitrags sollen in einem Workshop vertieft werden. Dazu werden in Arbeitsgruppen Praxisbeispiele von Analogien für konkrete Programmierkonzepte zusammengestellt. Deren Vorund Nachteile sowie Grenzen und resultierende Herausforderungen werden anschließend diskutiert. 350 Barbara Wieczorek, Liz Ribe, Christina B. Class, Michael Brinkmeierii “proceedings” — 2017/9/17 — 20:19 — page 351 — #351 ii i ii i Der Kurztitel des Beitrags    17 2 Herausforderungen bei der Vermittlung von Programmierkonzepten Trotz der Tatsache, dass einige Lernende auch ohne Vorkenntnisse zum Bereich der Programmierung einen leichten Zugang finden und die vermittelten Konzepten schnell einsetzen können, stellen Inhalte, die bereits am Anfang der Programmierausbildung stehen (z.B. Variablen, Datentypen, Verzweigung, Iteration), für einen erheblichen Teil der Studierenden oft schwer überwindbare Hürden dar. Diese Beobachtung wird in Abbildung 1 illustriert durch die Auswertung von Prüfungen des ersten Semesters im Bereich Informatik von Studierenden einer Ingenieurwissenschaft. Während man möglicherweise andere Verteilungen der Noten erwarten würde, tritt ein in der landläufigen Meinung von Lehrenden als typisch angesehenes Phänomen auf: Es gibt eine Häufung von guten und sehr guten ebenso wie von schlechten und sehr schlechten Noten bei vergleichsweise wenigen mittelmäßigen Noten. Nach Meinung der Autoren deutet diese Notenverteilung auf eine große Anzahl an Studierenden hin, die keinerlei oder fast keinen Zugang zu den entsprechenden Konzepten finden konnten. Insbesondere gibt es recht wenige Studierende, deren Leistungen im Mittelfeld liegen und die recht passabel mit dem Stoff und damit den Konzepten zurechtkommen.  Wir führen dies darauf zurück, dass Fachkonzepten aus dem Bereich der Programmierung oft ein hoher Grad an Abstraktion innewohnt. Um Konzepte erfolgreich einsetzen zu können, müssen in hohem Ausmaß formale Denkoperationen durchgeführt werden. Bereits der Entwurf einfacher Programme geht oft mit einem Prozess der Hypothesenbildung einher, zum Beispiel um Nutzereingaben, die vor Ausführung des Programmes unbekannt sind, zu verarbeiten oder Iterationen, deren Häufigkeit vom Zustand des Programmes abhängt, zu realisieren. Auch die Verwendung von  Abbildung 2: Notenspiegel von zwei Informatik-Prüfungen im ersten Studiensemester 051015 1,01,31,72,02,32,73,03,33,74,05,0StudentenanzahlErreichte NoteNotenspiegel -Einführung in die InformatikKurs 1Kurs 2 Abbildung 1: Notenspiegel von zwei Informatik-Prüfungen im ersten Studiensemester Analogien für Programmierkonzepte: Ein Weg zum Computational Thinking 351ii “proceedings” — 2017/9/17 — 20:19 — page 352 — #352 ii i ii i 18    Vorname1 Nachname1 und Vorname2 Nachname2  Hilfsvariablen, zum Beispiel für die Bildung einer Summe über die Elemente einer Liste, geht über das konkret-operative Denken hinaus, auf welches der Lernende hinsichtlich des Problemlöseprozesses zurückgreifen kann. Hinsichtlich der Hilfestellung für Lernende mit Schwierigkeiten haben die Autoren wenig Erfolg mit schrittweisem, ausführlichem Erläutern von einfachen Quelltextbeispielen beobachtet. Wesentlich bessere Erfahrungen wurden hingegen mit bildhaften Vergleichen gemacht, um betroffene Konzepte anschaulich zu machen. Bei der Veranschaulichung wird entweder Bezug auf Objekte aus der Lebenswelt der Lernenden genommen oder auf Prozesse, die aufgrund der Erfahrung der Lernenden bekannt oder leicht zugänglich sind. Somit werden Verstehensprozesse hinsichtlich deklarativen oder prozeduralen Wissens unterstützt. 3 Erwartungen und Voraussetzungen an die Verwendung bildhafter Analogien Schwierigkeiten beim Zugang zu Fachkonzepten sollen also durch den Einsatz von bildhaften Analogien gemindert werden. Die Nutzung von bildhaften Analogien hat folgende Vorteile: • Ist eine Analogie ausreichend bildhaft und aus dem Erfahrungsbereich des Lernenden gegriffen, so kann eine Einbindung an die Wissensstrukturen des Lernenden erleichtert werden. Dies stellt wichtige Dimensionen im verständnisintensiven Lernen dar [ViL17]. Betrachten wir das Vorwissen des Lerners und das zu vermittelnde Fachwissen als Objekte, so kann mit einer bildhaften Analogie eine Verknüpfung zwischen Vorwissen und Fachwissen wie in Abbildung 2 hergestellt werden. • Die Anknüpfung an vorhandenes Wissen kann beim Lernenden bereits zu einer positiven Selbsteinschätzung hinsichtlich des Lernprozesses führen und damit zu einer Erhöhung der Lernmotivation [DR13].  • Im fortgeschrittenen Lernprozess, nachdem das Fachwissen und das Verständnis für die Analogie sich gefestigt haben, kann eine duale Kodierung des Wissens erreicht werden: Das erworbene verbale Wissen wird durch die nonverbale Bildhaftigkeit der Analogie ergänzt. Es ist anzunehmen, dass dual kodiertes Wissen besser abgerufen werden kann [Ma01] und dadurch ebenso besser auf andere Situation übertragen und somit als Problemoperator eingesetzt werden kann. • In umgekehrter Richtung kann ein Fachkonzept Einzug in alltägliche Situationen 352 Barbara Wieczorek, Liz Ribe, Christina B. Class, Michael Brinkmeierii “proceedings” — 2017/9/17 — 20:19 — page 353 — #353 ii i ii i Der Kurztitel des Beitrags    19  erhalten, wenn ein Objekt als Analogon verwendet wird, welchem ein Lernender häufig begegnet. Somit kann eine Veränderung der Betrachtungsweise alltäglicher Gegenstände und Prozeduren hinsichtlich des Computational Thinking möglich sein. Wird z.B. ein Snackautomat als Analogon für eine Funktion verwendet (siehe Abschnitt 4.4), erinnert sich der Lernende ggf. bei künftigen Snackautomaten-Einkäufe an den Funktionsbegriff. Analogien werden in der Lehre und in Lehrbüchern schon lange eingesetzt, und bereits im letzten Jahrtausend gab es umfangreiche Untersuchungen zu deren Einsatz in den Naturwissenschaften. In einer Literaturstudie stelle Duit die Ergebnisse verschiedenster Untersuchungen zusammen und wies auf diverse Probleme hin [Du91]. Bereits 1982 wurde vor dem unbedachten Einsatz von Analogien in der Informatikbildung gewarnt, da diese das Lernen erschweren könnten [HM82]. Voraussetzung für den Einsatz einer Analogie ist daher eine hohe Passgenauigkeit. Hierzu müssen die Elemente eines Fachkonzeptes, die durch den Einsatz einer Analogie abgedeckt werden, identifiziert werden. Um die erfolgreiche Verknüpfung der Analogie zum Fachkonzept herzustellen, ist laut Anderson sicherzustellen, dass bei „jedem Akt des Analogiebildens“ die „Elemente von der Quelle auf das Ziel […] übertragen“ werden [An13]. Eine bloße Nennung eines Bildes im Umfeld der Vorstellung eines Fachkonzeptes ist demzufolge nicht ausreichend. Studien haben gezeigt, dass oft eine Anleitung notwendig ist, um die Analogien richtig in die Denkprozesse zu integrieren [Du91]. Auch ist wichtig, auf die Unterschiede zwischen Analogie und der Quelle hinzuweisen, um deutlich zu machen, wo die Gemeinsamkeiten nicht helfen. Hier kann es hilfreich sein, verschiedene Analogien für die einzelnen Aspekte zu verwenden [Du91].  Das Verständnis von Konzepten ist im Bereich der Programmierung oftmals nicht ausreichend.  Weinberg [We98] stellte in seiner Beobachtung von Lernen von Programmiersprachen fest, dass ein Wissenserwerb über Fachkonzepte möglicherweise nicht stattfinden kann ohne handlungsorientierte Auseinandersetzung mit dem  Abbildung 2: Vorwissen und Fachwissen mit Analogien zusammenführen und mithilfe handlungsorientierten Auseinandersetzungen zum dual-kodierten Wissen des Lerners führen. Analogien für Programmierkonzepte: Ein Weg zum Computational Thinking 353ii “proceedings” — 2017/9/17 — 20:19 — page 354 — #354 ii i ii i 20    Vorname1 Nachname1 und Vorname2 Nachname2  entsprechenden System. Entscheidend ist also die Verzahnung der Wissensvermittlung durch den Lehrenden und des eigenständigen Handelns durch den Lernenden. Hierbei kann die Verwendung von Analogien zum Einstieg in ein Programmierkonzept hilfreich sein, ein handelnder Bezug zum Programmieren muss dennoch hergestellt werden. Für den Wissenserwerb soll ein Lernender jedes neue Konzept aktiv anwenden und entsprechende Programme am Rechner implementieren. Der Bezug zur Analogie kann während dieses Prozesses immer wieder unterstützend hergestellt werden.  Dies ist jedoch nur so lange sinnvoll, wie die relevanten Gemeinsamkeiten der Analogien zum Tragen kommen und Lernende nicht verwirrt werden. Aus diesem Grund kommen Auswahl und zielführendem Einsatz von Analogien eine große Bedeutung zu. Hierbei gilt es sowohl die Frage nach der Wahl der Analogien zu betrachten, als auch zu entscheiden, wann von der Verwendung der Analogie abgesehen werden und der Lernende auf relevante Unterschiede hingewiesen werden soll. 4 Probleme und Fragen hinsichtlich des Einsatzes von bildhaften Analogien Um zu verdeutlichen, wie ein Programm einen Problemlöseprozess im Sinne von Anderson darstellt, soll das folgende Beispiel betrachtet werden. Es soll für eine Menge von Zahlen in einem Programm das Minimum dieser Zahlen bestimmt werden. Eine Automatisierung des Lösungsprozesses in der Programmiersprache Python könnte folgendermaßen aussehen:  liste = [2,4,6,3,5] minimum = liste[0] zaehler = 1 while zaehler<len(liste): if minimum > liste[zaehler]: minimum = liste[zaehler]  zaehler = zaehler + 1 print(minimum)   Die Repräsentation des Problems beinhaltet die Variablen liste, zaehler und minimum mit ihren anfänglich definierten Werten. Der Zielzustand ist erreicht, wenn die Variable minimum das tatsächliche Minimum der Zahlen bezeichnet. Um durch geeignete Operationen zum Zielzustand zu gelangen, wird eine Reihe von Transformationen angewendet: • zaehler wird in jeder Iteration inkrementiert. • Ein Vergleich von aktuellem Listenelement und aktuellem Minimum findet statt, falls nötig, wird minimum angepasst. 354 Barbara Wieczorek, Liz Ribe, Christina B. Class, Michael Brinkmeierii “proceedings” — 2017/9/17 — 20:19 — page 355 — #355 ii i ii i Der Kurztitel des Beitrags    21 • Ein Abbruchkriterium wird überprüft. Notwendige Konzepte für die Operationen sind hierbei die Wertzuweisung, die Auswertung logischer Ausdrücke sowie die Iteration. 4.1 Funktionale Fixierungen  Unter funktionaler Fixierung wird verstanden, dass für einen Problemlöseoperator nicht der volle Umfang seiner Möglichkeiten erkannt wird, sondern er nur in ausgewählten (bekannten) Kontexten eingesetzt wird. Der von Anderson [An12] beschriebene Effekt der funktionalen Fixierung im Zusammenhang mit Problemlöseoperatoren hat womöglich auch Bedeutung für die Verwendung von bildhaften Analogien.  Während Programmierkonzepte allgemeingültigen Charakter haben, sind bildhafte Analogien häufig in einer konkreten Situation verankert. Für jede bildhafte Analogie muss untersucht werden, inwieweit die Gefahr der Einschränkung des Operators im Sinne einer funktionalen Fixierung durch fehlende allgemeingültigen Charakter der Analogie besteht.  Mit der Vielfalt an Ausprägungen von Programmierkonzepten stellen sich daher beim didaktischen Einsatz von Analogien immer die Fragen:  • Wie lange kann diese als übergangsweise Veranschaulichung dienen, um später zu einer Abgrenzung zu gelangen? • Wie sehr ist eine Vereinfachung eines entsprechenden Programmierkonzeptes möglich und wie wird diese später korrigiert? 4.2 Deklarative Analogie: Schachtel als Analogie für Variablenkonzept Unter einer deklarativen Analogie verstehen wir eine Analogie, welche Verstehensprozesse unterstützt, die auf deklaratives Wissen bezogen sind. Häufig wird z.B. das Bild eines beschrifteten Gefäßes (oder Schachtel) verwendet, um das Konzept einer Variablen einzuführen. In obigem Bespiel könnte man mit einer Schachtel darstellen, welche Rolle minimum im Algorithmus hat.  Aber auch wenn hierfür die von Anderson geforderten Passgenauigkeit einer Analogie erfüllt ist, repräsentiert das Bild der Schachtel das Konzept der Variable als Ganzes noch nicht völlig korrekt:  • In der Realität kann eine Schachtel leer sein. Dies trifft auf Variable nicht zu, da sie als Speicherbereich immer einen, wenn auch zufälligen, Wert enthalten. In Sprachen wie C, welche das Lesen einer Variable ohne vorherige Initialisierung ermöglichen, ist dies ein relevanter Unterschied. Dies kann also zu einer falschen Vorstellung einer Variablenzuweisung führen.  Analogien für Programmierkonzepte: Ein Weg zum Computational Thinking 355ii “proceedings” — 2017/9/17 — 20:19 — page 356 — #356 ii i ii i 22    Vorname1 Nachname1 und Vorname2 Nachname2  • In der Realität kann eine Schachtel durchaus mehrere Elemente enthalten. Eine Zuweisung eines Wertes an eine Variable führt aber dazu, dass der vorherige Wert unwiderruflich überschrieben wird.   • In der Realität hat eine Schachtel eine gegebene Größe. In C/C++ wird zwar durch Deklaration einer Variablen ein bestimmter Speicherbereich bezeichnet, in welchem Daten des deklarierten Typs gespeichert sind. In Python kann das Bild der Schachtel aber zu einer fehlerhaften funktionalen Fixierung führen, da die gleiche Variable im Laufe der Zeit Werte unterschiedlichen Typs und unterschiedlicher Größe speichern kann. Eine Variable in Python stellt lediglich den Namen eines Objektes im Speicher dar durch Zuweisung eines anderen Wertes bezeichnet die Variable meist ein anderes Objekt im Speicher.  Hat sich die Vorstellung einer Schachtel als Analogon zu einer Variable manifestiert, können Probleme auftreten, wenn weitere Konzepte eingeführt werden, z.B.  statische und dynamische Variablen oder Listen. Diese sind mit dem Schachtelmodell nicht unmittelbar zugänglich und bei Einführung dieser muss Abstand von der bisher verwendeten Analogie genommen werden oder weitere Analogien hinzugefügt werden, um die anderen Eigenschaften aufzuzeigen. Solche multiplen Analogien können notwendig sein, um einen Konzept umfassend zu erlernen [Du91].  4.3 Deklarative Analogie: Snackautomat als Analogie für  Funktionskonzept Die Kapselung von Quelltext in Funktionen ist ein wichtiges Konzept in der Programmierung. Funktionen stellen bereits ein relativ hohes Abstraktionsniveau dar und bereiten Lernenden häufig Schwierigkeiten. Ein grundlegendes Problem ist die Trennung von Definition und Ausführung von Funktionen. Lernenden fällt es oft schwer zu verstehen, dass Funktionen erst durch einen Funktionsaufruf ausgeführt werden und Parameter erst durch den Funktionsaufruf konkrete Werte erhalten. Als bildhafte Analogie für eine Funktion mit Rückgabewert, unter Verwendung zweier Parameter, kann ein Snackautomat dienen. Ein Funktionsparameter steht für den Geldbetrag, der in den Automaten eingeworfen wird, ein weiterer für die Nummer, die zur Auswahl des Produktes über eine Tastatur eingegeben wird. Während der Funktionsabarbeitung werden verschiedene Operationen von dem Snackautomaten durchgeführt und als Rückgabewert erhält man das gewünschte Produkt. Das Ausgabefach kann als Analogie für das return-Statement in der Funktionsdefinition betrachtet werden.  Das Beispiel knüpft an die Vorstellungswelt der Lernenden an und ist hilfreich, um das Konzept von Funktion, Funktionsaufruf und Aufrufer zu verdeutlichen. Dennoch kann auch hier eine funktionale Fixierung erfolgen, wenn der Lernende zu einer der folgenden Schlussfolgerungen gelangt: 356 Barbara Wieczorek, Liz Ribe, Christina B. Class, Michael Brinkmeierii “proceedings” — 2017/9/17 — 20:19 — page 357 — #357 ii i ii i Der Kurztitel des Beitrags    23 • Eine Funktion hat immer zwei Parameter. • Eine Funktion muss immer einen Rückgabewert liefern. • Der Rückgabewert einer Funktion muss immer von allen Parametern abhängen. Um eine Manifestation dieser Fixierung zu verhindern, müssen gezielt Verallgemeinerungen anhand geeigneter Programmieraufgaben stattfinden, z.B. von:  • Einer Funktion mit nur einem Argument. • Einer Funktion ohne Parameter. • Einer Funktion ohne Rückgabewert. • Einer Funktion, deren Rückgabewert nur von einer Teilmenge ihrer Parameter abhängt. 4.4 Operative Analogie: Finden der kürzesten Spielzeit aus einer CD-Regal als Analogie für Bestimmung des Minimums Unter einer operativen Analogie verstehen wir eine Analogie, welche Verstehensprozesse unterstützt, die auf prozedurales Wissen bezogen sind. Das Abarbeiten eines Rezepts kann z.B. als operative Analogie für das Abarbeiten eines Algorithmus dienen. Mit Hilfe einer operativen Analogie kann der Prozess zur Entwicklung des obigen Algorithmus zur Minimumbestimmung unterstützt werden. In diesem Zusammenhang wird folgende analoge Aufgabe gestellt: Die kürzeste Spieldauer von CDs in einem Regal soll gefunden werden. Durch eigene Überlegungen kommen Lernende schnell auf die Idee, dass es sinnvoll ist, alle CDs der Reihe nach zu betrachten und sich die bisherige kürzeste Spieldauer zu merken. Wenn das Problem des Minimums mehrerer Zahlen gestellt wird, muss der Lernende Gemeinsamkeiten mit der Analogie identifizieren, um einen Transfer des Lösungsprozesses vorzunehmen: Das Regal ist eine Liste; die CDs sind die Zahlen; die gemerkte kürzeste Spielzeit ist eine Variable. Durch die Analogie werden die Lernenden dabei unterstütz, eigene Algorithmen mithilfe ihrem prozeduralen Vorwissen zu entwickeln.  5 Zusammenfassung Die Nutzung von bildhaften Analogien für Fachkonzepte, die im Rahmen der Programmierausbildung vermittelt werden sollen, dient als Hilfsmittel, um anfängliche Verständnisschwierigkeiten zu überwinden. Wichtig hierbei ist eine wiederholte Auseinandersetzung mit der Analogie während der Bearbeitung von Programmieraufgaben, welche im Zusammenhang mit dem zu lernenden Fachkonzept Analogien für Programmierkonzepte: Ein Weg zum Computational Thinking 357ii “proceedings” — 2017/9/17 — 20:19 — page 358 — #358 ii i ii i 24    Vorname1 Nachname1 und Vorname2 Nachname2  stehen, um Fehlvorstellungen durch mangelnde Passgenauigkeit und Effekte funktionaler Fixierung zu vermeiden. Analogien sollen helfen, Programmierkonzepte besser in Wissensstrukturen zu verankern, um Problemlösefähigkeiten in Bezug auf Programmierung zu verbessern. Ebenso sollen Analogien es ermöglichen, vermehrt alltägliche Situationen aus dem Blickwinkel des Computational Thinking zu betrachten.  Literaturverzeichnis [An13] Anderson, J.R.: Kognitive Psychologie. VS Verlag für Sozialwissenschaften, S. 165, 249, 2013.  [BS11] Barr, V; Stephenson, C.: Bringing Computational Thinking to K-12: What is Involved and What ist he Role of the Computer Science Education Commmunity?. acm Inroads, 2/1, S. 48, 2011. [De09] Denning, P.J.: The Profession of IT Beyond Computational Thinging, Communcations of the ACM, 52/6, S. 28-30, 2009. [DR93] Deci, E.L.; Ryan, R.M.: Die Selbstbestimmungstheorie der Motivation und ihre Bedeutung fuer die Paedagogik. Zeitschrift für Pädagogik, 39/2, S. 223-238, 1993. [Du91] Duit, R.: On the Role of Analogies and Metaphors in Learning Science, Science Education, 75/6, S. 649-672, 1991. [HM82] Halasz, F.; Moran, T.: Analogy Considered Harmful, CHI '82 Proceedings of the 1982 Conference on Human Factors in Computing Systems, S. 383-386, 1982. [Ma01] Martschinke, S.: Aufbau mentaler Modelle durch bildliche Darstellungen. Waxmann Verlag, Münster [u.a.], S. 61, 2001. [Sp03] Spering, M.: "Praktisches Problemlösen", 2003, http://www.psychologie.uni-heidelberg.de/ae/allg/mitarb/ms/PH_Einfuehrung.pdf, zuletzt besucht am 9.6.2017. [ViL17] Verein für Verständnisintensives Lernen e.V., http://www.verstehenlernen.de/?page_id=672, zuletzt besucht am 6.6.2017.  [We98] Weinberg, G.M.: The Psychology of Computer Programming. Silver Anniversary ed, Dorset House Publ., 1998. [Wi06] Wing, J.: Computational Thinking, Communications of the ACM, 49/3, S. 33-35, 2006. [Wo17] Stephan Wolfram Blog, http://blog.stephenwolfram.com/2016/09/how-to-teach-computational-thinking/, zuletzt besucht am 9.3.2017. [YSH17] Yadav, A; Stephenson C.; Hong, H.: Computational Thinking for Teacher Education, Communications of the ACM, 60/4, S. 55-62, 2017.  358 Barbara Wieczorek, Liz Ribe, Christina B. Class, Michael Brinkmeierii “proceedings” — 2017/9/17 — 20:19 — page 359 — #359 ii i ii iInfos 2017 Informatische Bildung zum Verstehen und Gestalten    1  Workshop: Datenbank-Anfragen mit SQL und dem elektronischen Schulbuch inf-schule.de   Heiko Jochum1, Klaus Becker2, Martin Zimnol3, Daniel Jonietz4, Oliver Schneider5, Manuel Froitzheim6 Abstract: Anhand einer konkreten Unterrichtseinheit zum Thema Datenbanken wird exemplarisch die Arbeit mit dem elektronischen Schulbuch inf-schule.de vorgestellt. Die Unterrichtseinheit beruht auf der Verwendung einer auch online verfügbaren Datenbank und wird anhand vieler Übungsphasen nachvollzogen. Die Teilnehmenden benötigen nur ein Endgerät mit Internetzugang. Für die Datenbankabfragen kann alternativ auch ein bereits installiertes XAMPP-Paket verwendet werden. Keywords: Elektronisches Schulbuch, Digitales Schulbuch, Informatikunterricht, Lernen, Didaktik der Informatik, Web-Applikation, Datenbank 1 Einleitung und Motivation Digitale Bildung wird inzwischen als unverzichtbar in einer immer stärker digital geprägten und vernetzten Welt angesehen. Die Aneignung grundlegender Konzepte zum Verständnis dieser Welt und die Entwicklung von Kompetenzen zur Mitgestaltung einer solchen Welt sollte in einem eigenständigen Lernbereich erfolgen – so die einhellige Forderung aller mit digitaler Bildung befassten Fachdidaktiker [Da16]. Nur in einem fundierten Informatikunterricht kann die anwendungsbezogene Perspektive (Wie nutze ich das?) und die gesellschaftlich-kulturelle Perspektive (Wie wirkt das?) um die zum Verständnis der digitalen Welt erforderliche technologische Perspektive (Wie funktioniert das?) erweitert werden ([F+17], ebenfalls in diesem Band). Der Erwerb digitaler Bildung wird im Informatikunterricht gezielt gefördert. Das Schulbuch als Leitmedium bei der Unterrichtsplanung und Unterrichtsgestaltung spielt dabei eine zentrale Rolle [Wi03], weil hier „Lerninhalte eines Faches oder Lernbereichs in systematischer, didaktischer und methodischer Form“ bereitgestellt werden [Sa10].                                                                1 Werner-Heisenberg-Gymnasium Bad Dürkheim, Kanalstr. 19, 67098 Bad Dürkheim, jom@whgonline.de 2 BurgGymnasium Kaiserslautern, Burgstraße 18, 67659 Kaiserslautern, beckerkp@web.de 3 Pädagogisches Landesinstitut Rheinland-Pfalz, Butenschönstraße 2, 67346 Speyer, martin.zimnol@pl.rlp.de 4 BurgGymnasium Kaiserslautern, Burgstraße 18, 67659 Kaiserslautern, daniel@jonietz.de 5 Sickingen-Gymnasium Landstuhl, Philipp-Fauth-Straße 3, 66849 Landstuhl, o.schneider@mac.com 6 Universität Siegen, Zentrum für ökonomische Bildung in Siegen (ZöBiS), Kohlbettstraße 15, 57068 Siegen, froitzheim@zoebis.de I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 359ii “proceedings” — 2017/9/17 — 20:19 — page 360 — #360 ii i ii i 2    Manuel Froitzheim et al.  Schulbücher wurden bisher in Buchform erstellt. Mit der Entwicklung digitaler bzw. elektronischer Schulbücher ist ein neues Forschungsfeld entstanden, das der Entwicklung von Lernumgebungen neue Impulse verleiht [ScFr14][ScFr15][ScFr16].  2 Workshopbeschreibung Innerhalb des Workshops wird die Arbeit mit dem Schulbuch inf-schule.de anhand einer Unterrichtseinheit zu dem Thema „Datenbanksysteme“ vorgestellt. Ziel ist es, die Unterrichtseinheit durch eigenständige Arbeit am Computer nachzuvollziehen. Die Unterrichtseinheit [Mo16] beruht auf der sukkzessiven Normalisierung und Erweiterung einer vorhandenen Datenbank für Geodaten. Durch die Verwendung einer vorhandenen Datenbank müssen die Schülerinnen und Schüler keinen Datenbankentwurf vornehmen, bevor sie nicht die Arbeit mit einer Datenbank kennengelernt haben. Durch verschiedene Versionen erkennen die Schülerinnen und Schüler zum einen die Notwendigkeit der Vermeidung von Redundanz und können sich zum anderen durch Verfolgung des didaktischen Prinzips der Isolation von Schwierigkeiten zunächst auf wenige Tabellen (z.B. Länder, Orte)  innerhalb der Datenbank konzentrieren, bevor diese nach und nach durch weitere Tabellen (z.B. Flüsse) ergänzt werden.   Abbildung 1: Datenbankschema der vollständigen Geodatenbank "terra" (vgl.: https://inf-schule.de/information/datenbanksysteme/terra/selbstreferenz/uebungen)    360 Heiko Jochum et al.ii “proceedings” — 2017/9/17 — 20:19 — page 361 — #361 ii i ii iFörderung digitaler Bildung mit elektronischen Schulbüchern      3  Die Durchführung der SQL-Anfragen an die Datenbank kann zum einen durch online-Anfragen innerhalb des Schulbuchs inf-schule.de erfolgen, zum anderen ist es auch möglich, die verschiedenen Datenbank-Versionen auf einem eigenen Server bzw. einem lokalen Computer zu installieren und auf diesem Wege die Anfragen zu stellen. Literaturverzeichnis [Da16]  Dagstuhl-Erklärung: Bildung in der digitalen vernetzten Welt, www.gi.de/fileadmin/redaktion/Themen/dagstuhl-erklaerung-bildung-in-der-digitalen-welt-2016.pdf,  Stand: 23.01.2017. [F+17] Froitzheim, M.; Becker, K.; Zimnol, M.; Jonietz, D.; Schneider, O.; Jochum, Heiko: Förderung digitaler Bildung mit digitalen Schulbüchern. (ebenfalls in diesem Band) [Mo16]  Mohr, T.: Datenbanksysteme, www.inf-schule.de/information/ datenbanksysteme, Stand: 10.02.2017.  [Sa12]  Sanguo, C.; Xuehai, M.; Schenglin, L. (2012). The Pace of Ebook Development in China. IN:  LOGOS: The Journal of the World Book Community, 23(2), 14-20. [ScFr14]  Schuhen, M.; Froitzheim, M. (Hrsg.): Das Elektronische Schulbuch. Fachdidaktische Anforderungen und Ideen treffen auf Lösungsvorschläge der Informatik. Münster: LIT Verlag. [ScFr15]  Schuhen, M.; Froitzheim, M. (Hrsg.): Das Elektronische Schulbuch 2015. Fachdidaktische Anforderungen und Ideen treffen auf Lösungsvorschläge der Informatik. Münster: LIT Verlag. [ScFr16]  Schuhen, M.; Froitzheim, M. (Hrsg.): Das Elektronische Schulbuch 2016. Fachdidaktische Anforderungen und Ideen treffen auf Lösungsvorschläge der Informatik. Münster: LIT Verlag. [Wi03]  Wiater, W. (2003): Schulbuchforschung in Europa. Bestandsaufnahme und Zukunftsperspektive. Bad Heilbrunn: Klinkhardt. Datenbank-Anfragen mit SQL und dem elektronischen Schulbuch inf-schule.de 361ii “proceedings” — 2017/9/17 — 20:19 — page 362 — #362 ii i ii iii “proceedings” — 2017/9/17 — 20:19 — page 363 — #363 ii i ii i  Online kooperieren im Informatikunterricht   Thomas Rohde1, Kolja Strauss2, Gregor Alexander Benedikt3, René Levens4, Lina Haji5,  Olaf Müller6  Abstract:  Der Verzicht auf kooperative Lernformen in Rechnerräumen mit der Begründung, dass  diese au fgrund der meis t unveränderlichen Tischanordnung und ortsfest montierten Rechner nur  schwer zu realisieren seien, ist üblich – wird aber der Forderung nach kompetenzorientiertem  Unterricht nicht gerecht. Die Begründung ist dennoch nachvollziehbar, da es an Konzepten  mang elt, die aus der räumlich und technisch bedingten Not eine Tugend machen. Daher wird hier  anhand der bekannten  Methode n „Placemat“, „Kartenabfrage “, „Evaluationszielscheibe“ und  „Lerntempoduett“ beispielhaft gezeigt, wie das Potenzial der im Raum befindlic hen Rechner  genutzt werden kann, um auf Basis von Weba nwendung en Kooperation zu ermöglichen . Darüber  hinaus wird ein „Methodenkoffer“ vorgestellt, mit dem sich die Onl inekooperation unter Einsatz  von schülereigenen Smartphones/Tablets in jedem Klassenraum realisieren lässt, der über einen   WLAN -fähigen PC mit Beamer verfügt.  Die vorgestellten Lernwe rkzeuge bieten weitere Vorteile   wie hohe Flexibilität  im Einsatz , Unabhängigkeit von kostspieligen und umweltschädlichen  Materialien  (insb. Papier) sowie  Möglichk eiten einer unkomplizierten dauerhaften Sicherung  und  Wiederverwendbarkeit  der Arbeitsergebnisse.   Keywords: Kooperative Lernform , Think -Pair-Share, Informatikunterricht, Webanwendung,   BYOD, Raspberry Pi, Placemat, Lerntempoduett, Kartenabfrage, Metaplanka rten, Brainstorming,  Evaluationszielscheibe .  1 Einleitung   Die Realisierung von Methodenvielfalt im Informatikunterricht ist eine besondere  Herausforderung, da Tische und Hardware im Rechnerraum meist ortsfest aufgestellt  sind und ohne unverhältnismäßig große n Aufwand nicht verändert werden können.  Häufig stehen die Tische zusätzlich in engen Reihen oder U -Form, so dass gemeinsames  Arbeiten um einen Gruppentisch herum unmöglich wird. Kleine Tafeln oder  Whiteboards limitieren die Menge der anschreibbaren Inform ationen und für gewöhnlich  fehlen Pinnwände oder Magnetleisten an den Wänden. Weiterhin zwingt der  Nachhaltigkeitsgedanke zum schonenden Umgang mit Ressourcen wie Papier, Stiften,  Klebstoff usw. Andererseits verfügen die Schülerinnen und Schüler (SuS) über  vernetzte                                                              1 BBS Lingen – Agrar und Soziales , Beckstraße 23, 49809 Lingen , rohde@bbs -lingen -as.net   2 GBS Grafschaft Bentheim, Denekamper Str. 1, 48529 Nordhorn, strauss@gbs -grafschaft.de   3 Berufskolleg Lübbecke, Rahdener Str. 1, 32312 Lübbecke, benedikt@berufskolleg -lk.de   4 BBS Gesundheit und Soziales, Am Bölt 5, 48527 Nordhorn, rene.levens@bbs -gs-nordhorn.de   5 BBS Brinkstraße, Brinkstraße 17, 49080 Osnabrück, haji@bbs -os-brinkstr.de   6 Studienseminar für das Lehramt an BBS Osnabrück, Blumenthalstraße 32, 49076 Osnabrück,  o.mueller@s tudienseminar -os.de  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 363ii “proceedings” — 2017/9/17 — 20:19 — page 364 — #364 ii i ii i  und universell einsetzbare Werkzeuge in Form von Standrechnern oder Smartphones  bzw. Tablets. Diese Konstellation ist vor dem Hintergrund der in (niedersächsischen)  Curricula geforderten Förderung der Sozialkompetenz inakzeptabel.   Werkzeuge zur  Online -Kollaboration gibt es bereits einige , siehe  z.B. [St14] . Leider sind  sie entweder kostenpflichtig7 und/oder sie unterstützen die gewünschte Phasierung ( z.B.  Think -Pair-Share) des Unterrichts nicht.  Daher wurden im Fachseminar Informatik am  Studiens eminar für das Lehramt an Berufsbildenden Schulen in Osnabrück  einige  bekannte Unterrichtsmethoden in Form von Webanwendungen in Online -Versionen  überführt .  Alle Online -Versionen der Methoden sind zum direkten Einsatz im Unterricht unter  http://www.oncoo.d e erreichbar.   2 Die Methoden   Im Folgenden werden die bisher als Webanwendung realisierten Methoden jeweils unter  Nennung  der Nachteile der klassischen offline bzw. tafel -/papierbasierten  Variante sowie  Skizzierung der Vorteile der Online -Version dargestellt . Alle Webanwendungen sind in  Standardbrowsern lauffähig. Die Anforderungen unterscheiden sich nur geringfügig und  der Einsatz kann z.T. in verschiedenen Unterrichtsphasen erfolgen (s. Tab. 1). Methode  Lehrer -Client  SuS-Clients  Java-Script im  SuS-Client  Unterrichtsphase  Placemat  PC PC, Tablet  ja Erarbeitung  Evaluations zielscheibe  PC PC, Tablet,  Smartphone  nein Reflexion  Kartenabfrage  PC PC, Tablet,  Smartphone  ja Planung, Erarbeitung  Lerntempoduett  PC PC, Tablet,  Smartphone  ja Erarbeitung  Tab. 1: Anforderungen und Einsatzmöglichkeiten der einzelnen Methoden   2.1 Das Placemat   Einsatzzweck, Ablauf und Vorteile der Placemat -Methode wurden z.B. in [Re14] oder  [GG06] bereits ausführlich beschrieben.  Die Nachteil e der klassischen Variante der  Methode auf Papier sind:   • Es wird pro Gruppe ein Tisch benötigt , um den die M itglieder gemeinsam sitzen  können.                                                               7 Es wird z.B. entweder Geld oder  die Herausgabe personenbezogener Daten (z.B. Telefonnummer) verlangt.  364 Thomas Rohde et al.ii “proceedings” — 2017/9/17 — 20:19 — page 365 — #365 ii i ii i  • Rechteckige Blätter lassen sich bei drei Gruppenmitgliedern nicht in drei  gleichgroße Bereiche teilen.   • Während der  Think -Phase ist „Spicken“ möglich.   • Das sukzessive Lesen/Betrachten/Erfassen der Einzellösungen zu Beginn der Pair Phase g elingt den einzelnen  Schülerinnen und Schülern  unterschiedlich schnell.  Einige müssen warten, bis das Placemat weiter gedreht werden k ann.  • Während der Diskussion in der Pair -Phase ist der Großteil der Teillösungen für  jedes Gru ppenmitglied verdreht.   • Am Ende der Pair -Phase ist das Gruppenergebnis für alle SuS verdreht, die gerade  nicht daran schreiben.   • Das Gruppenergebnis muss von einem G ruppenmitglied mit leserlicher  Handschrift komplett neu auf geschrieben werden , obwohl es zum größten Teil aus  Formulierungen der Teilergebnisse besteht.   • Die Präsentation des Gruppenergebnisses durch Aufhängen des Plakates i n der  Share -Phase ist in manchen  Klassen und vielen Fachräumen problematisch.   • Das Plakat kann in Fachräumen häufig nicht bis zur nächsten Stunde verbleiben.   Die Webanwendung Online -Placemat wurde entwickelt, um die Methode Placemat im  Rechnerraum unter Umg ehung der genannten räumlichen Probleme und Verbesserung  der Nachteile der Papierversion zu re alisieren.     Abb. 1: Dauerhaft über den Beamer projizierte Gesamtansicht mit Informationen zu den  verbleibenden Zeiten, Gruppenzusammensetzungen und Bearbeitungsstän den  Die Lehrkraft legt auf ihrer  Startseite der Webanwendung zunächst di e Gruppengrößen  sowie die Dauer der Think und die der Pair -Phase fest. Dann erscheint die Online kooperieren im Informatikunterricht 365ii “proceedings” — 2017/9/17 — 20:19 — page 366 — #366 ii i ii i  Gesamtansicht , die dauerhaft in der Projektion sichtbar bleibt und es erlaubt, sowohl die  Gruppenzuordnung als auch den Bearbeitungsstand der SuS zu überblicken  (s. Abb. 1:  Dauerhaft über den Beamer projizierte Gesamtansicht mit Informationen zu den  verbleibenden Zeiten, Gruppenzusammensetzungen und Bearbeitungsstän den).  Die einzelnen SuS registrieren sich auf der Schülerstartseite mit ihrem Namen und  werden per Zufall einer Farbgruppe zugeordnet. In der Think -Phasen -Ansicht tippt jede  Schülerin und jeder Schüler das eigene A rbeitsergebnis ein und schickt es spätestens am  Phasenende ab. Zu Beginn der Pair -Phase trifft sich jede Farbgruppe am Rechner des  Mitglieds A , wo anhand der Pair -Phasen -Ansicht (entspricht dem Papier -Placemat) die  einzelnen Ergebnisse diskutiert werden und das gemeinsame Gruppenergebnis  durch  Copy&Pas te beschleunigt erstellt und gespeichert wird  (s. Abb. 2).    Abb. 2: Online -Placemat mit Think -Phase -Ergebnissen links und Gruppenergebnis rechts.   In der abschließenden Share -Phase stellen eine oder meh rere Farbgruppen ihr jeweiliges  Ergebnis am Lehrerrechner vor, indem sie es in der Gesamtansicht aufrufen.  Abschließend kann die Lehrkraft alle Gruppenergebnisse in Form eines Zip -Archives  herunterladen und den SuS zur Verfügung stellen.   2.2 Die Evaluationsz ielscheibe   Einsatzzweck, Ablauf und Vorteile der Zielscheiben -Methode wurden z.B. in [Be01]  oder [Bp12] bereits ausführlich beschrieben.   Die Nachteile der klassischen Variante der Methode auf Papier /an der Tafel  sind:   • Es werden Papier und Klebepunkte benöt igt und verbraucht.   • Die Punkte müssen entweder zeitaufwändig sequenziell oder in einer  Schülertraube parallel aufgeklebt werden . 366 Thomas Rohde et al.ii “proceedings” — 2017/9/17 — 20:19 — page 367 — #367 ii i ii i  • Das Feedback geschieht nicht völlig anonym. Später aufklebende SuS können  durch früher aufklebende SuS beeinflusst werden.   • Die Zielscheibe  kann aus Platzgründen und aufgrund von Manipulationsgefahr  häufig nicht bis zur nächsten Stunde im Klassen  bzw. Rechner raum  verbleiben.   Die Webanwendung Online -Zielscheibe wurde entwickelt, um die Methode Zielscheibe  im Klassen oder Rechnerr aum unter Umg ehung der genannten räumlichen Probleme  und Verbesserung der Nachteile der Papierversion zu re alisieren.   Die Lehrkraft legt auf ihrer Startseite der Webanwendung zunächst die zu evaluierenden  Aspekte  fest. Anschließend erscheint die Zielscheib e und darauf im Laufe der Zeit die  Punkte der SuS.  Neben jedem Abschnitt wird der  entsprechende Aspekt  zusammen mit   dem Mittelwert und der Standardabweichung seines Feedbacks angezeigt. Die zusätzlich  angezeigte Anzahl der SuS, die ihr Feedback abgegeben haben, erlaubt  der Lehrkraft,  den Fortgang der  Feedbackabgabe  im Blick zu behalten  (s. Abb. 3). Um die Anonymität  und einen fairen Ablauf zu gewährleisten, werden die IP -Adressen der teilnehmenden  SuS unsichtba r im Hintergrund ges ammelt und a nhand dieser Sammlung werden  versuchte Mehrfachteilnahmen abgewiesen. Die Diskussion der Feedbackergebnisse  kann durch erneutes Aufrufen der Zielscheibe  jederzeit fortgesetzt werden.     Abb. 3: Online -Zielscheibe mit  Evaluationsergebnis von 27 SuS   Die Ansicht der Webanwendung für die SuS besteht aus einer Reihe von Radiobuttons  neben jedem zu evalu ierenden Aspekt. Die SuS geben i hre Meinung durch die Auswahl  der entsprechenden Buttons an und senden anschließend ihr Er gebnis zur Zielscheibe (s.  Abb. 4).  Online kooperieren im Informatikunterricht 367ii “proceedings” — 2017/9/17 — 20:19 — page 368 — #368 ii i ii i     Abb. 4: SuS -Ansicht mit Evaluationsaspekten und einer zehnstufigen Skala zur Bewertung   2.3 Die Kartenabfrage   Die Kartenabfrage ist eine Methode, die im Unterricht zu u nterschiedlichen Zwecken  eingesetzt werden kann. Dazu gehören u. a. das Planen weiterer Vorgehensweisen, das  Strukturieren von Vorwissen und das Finden von Kompromissen , vgl. z.B. [Ma11 ] oder  [Re07] .   Bei der Umsetzung sind einige Hürden und Nachteile zu b eachten: Es ist sicherzustellen,  dass ausreichend Material zur rechten Zeit am rechten Ort vorrätig ist. Häufig werden  die benötigten Materialien in Form von Methodenkoffern vorgehalten. Erfahrungen aus  der Praxis zeigen jedoch, dass der Einsatz solcher Ko ffer nicht immer reibungslos  funktioniert, insbesondere im Hinblick auf die Aspekte Vollständigkeit und  Verfügbarkeit. Das benötigte Papier ist in der Regel nicht wiederverwendbar. Dadurch  verursacht jede Kartenabfrage Materialkosten und belastet die Umwel t. Das Ergebnis  einer Kartenabfrage ist nur über Umwege (z. B. Abfotografieren oder langwieriges  Abschreiben) möglich. Das so gesicherte Ergebnis lässt sich im späteren Verlauf (z. B.  in der folgenden Sitzung) nur unter großem Aufwand reproduzieren und  weiterbearbeiten. Vor allem in Rechnerräumen ist das Angebot an ausreichend großen  Flächen zur Sammlung und Clusterung der Karten häufig stark begrenzt8.    Abb. 5: Clustern und E ditieren von Karten   Die Webanwendung Kartenabfrage bi etet die Möglichkeit, Karten im Browser eines                                                              8  Siehe Kapitel 1.  368 Thomas Rohde et al.ii “proceedings” — 2017/9/17 — 20:19 — page 369 — #369 ii i ii i  beliebigen Endgerätes9 zu erfassen. Analog zur papierbasierten Kartenabfrage besteht  die Möglichkeit, Ideen zunächst zu sammeln und bei Bedarf zu verwerfen. Nach  Abschluss der Sammlung können die Karten einzeln  oder als Gesamtpaket abgeschickt  und damit an die Projektionsfläche gebracht werden (s. Abb. 6). Die Tafelansicht lässt  sich an eine geeignete Stelle im Unterrichtsraum projizieren (s. Abb. 5). Am  Präsentationsgerät lassen sich die gesammelten Karten beli ebig anordnen, editieren und  farblich codieren. Die Anzahl der Nennungen der einzelnen Aspekte lässt sich erfassen.  Es lassen sich Überschriften ergänzen. Das Ergebnis wird im Hintergrund automatisch  gesichert und ist so über die Angabe eines 4 -stelligen  Codes auch zu einem späteren  Zeitpunkt editierbar. Die Webanwendung bietet außerdem die Möglichkeit, die  Tafelansicht als Bilddatei zu exportieren und so für die Unterlagen zu sichern .     Abb. 6: Erfassen von Karten   2.4 Das Lernt empoduett   Das Lerntempoduett ist eine Methode, bei der SuS Unterrichtsinhalte in mehreren  Phasen zunächst alleine und später in Partnerarbeit – und im eigenen Lerntempo  erarbeiten , vgl. z.B. [Ma11] . Die Kombination des Lerntempoduetts mit einem  Helfersys tem hat sich in der Praxis des Informatikunterrichts bewährt , vgl. z.B. [Re10] .    Das Lerntempoduett erfordert  – durch  seine verschiedenen Phasen und das gewollt  ungleichmäßige Vorankommen der SuS  – eine gute Methodenkenntnis der SuS und eine  wohl durchdac hte Begleitung durch die Lehrperson . Die besondere Herausforderung  besteht darin, die Vorgehensweise so transparent und eindeutig zu gestalten, dass jedem  Schüler und jeder Schülerin zu jedem Zeitpunkt bewusst ist, welche Schritte oder  Aufgaben als nächste s zu erledigen sind. Sollen SuS eine helfende Rolle übernehmen,  muss den arbeitenden SuS transparent gemacht werden, an wen sie sich wenden können.  Aus der Perspektive der Lehrenden ist es im Rahmen des Lerntempoduetts häufig  schwierig , das Vorankommen der  SuS einzuschätzen und zu beurteilen .                                                              9 Siehe Kapitel  2, Tabelle 1.  Online kooperieren im Informatikunterricht 369ii “proceedings” — 2017/9/17 — 20:19 — page 370 — #370 ii i ii i     Abb. 7: Tafelansicht des Online -Lerntempoduetts   Das Online -Lerntempoduett bietet einen Organisationsrahmen, in dem die SuS  schrittweise durch die verschiedenen Phasen des Lerntempoduetts g eleitet werden und  dazu entsprechende Hinweise erhalten. Gleichzeitig wird eine hohe Transparenz  hinsichtlich des Vorankommens erreicht. Um das Online -Lerntempoduett zu nutzen,  registrieren sich die SuS zunächst in der Webanwendung  und werden anschließend  durch die verschiedenen Phasen der Methode gelotst. Die Partner für die  Partnerarbeitsphase werden vom System automatisch zugewiesen und bekannt gegeben  (s. Abb. 8). Das Vorankommen der SuS kann an eine geeignete Stelle im Klassenraum  projiziert und damit transparent gemacht werden (siehe Abb. 7). Potenzielle Helfer  werden farblich grün hervorgehoben. Um das Verunsicherungspotenzial („naming and  shaming“) zu minimieren und die Manipulation der Partnerfindung durch Warten auf  einen anderen Partner zu verhind ern, lassen sich die SuS in den Phasen „Arbeiten“ und  „Warten“ in der Tafelansicht ausblenden .     Abb. 8: Verschiedene Phasen des Lerntempoduetts. Schüleransichten auf dem Smartphone  370 Thomas Rohde et al.ii “proceedings” — 2017/9/17 — 20:19 — page 371 — #371 ii i ii i  3 Ein digitaler Methodenkoffer auf Basis eines Raspberry Pi   Der Einsatz der vorgestellten Webanwendungen setzt  voraus, dass die Geräte10 mit dem  Internet verbunden werden. Der Zugriff auf die Anwendungen kann ohne dass ein  Internetzugang von der Schule zur Verfügung gestellt wird zwar über das mobil e  Datennetz erfolgen, allerdings wird hierdurch das Datenvolumen der SuS belastet und es  entstehen direkte oder indirekte Kosten. Darüber hinaus geht mit dem Einsatz von  schülereigenen Smartphones ein nicht zu unterschätzendes Ablenkungspotenzial einher .  Im Rahmen eines Modellprojektes an der BBS Lingen – Agrar und Soziales konnte  erfolgreich ein digitaler Methodenkoffer für die Kartenabfrage auf der Basis eines   Raspberry Pi , siehe [Ra17a],  entwickelt und getestet werden. Der Raspberry Pi dient als  WLAN -Accesspoint und Webserver, auf welchem  die Anwendung bereitgestellt we rden  kann . Dazu muss zunächst eine WLAN -Schnittstelle mittels eines entsprechenden USB Adapters mit Accesspoint -Unterstützung nachgerüstet werden. Nach der Installation  muss das System „Ras pbian“, siehe [Ra17b],  um einen Webserver erweitert werden11.  Mittels  der Softwaremodule Hostapd und Dnsmasq lässt sich der Raspberry Pi als  mobiler WLAN -Hotspot einrichten , siehe [El16], [MF10] und  [Me14] .   Der Einsatz des digitalen Methodenkoffers auf der  Basis eines Raspberry Pi b ietet  verschiedene Vorteile: Die Betriebskosten und der  Anschaffungspreis der eingesetzten  Hardware ist gering12. Das Netzwerk des Methodenkoffers ist unabhängig vom  Schulnetzwerk , wodurch  keine Gefahr des Missbrauchs der schulisc hen Infrastruktur  besteht . Eine Verbindung zum Internet besteht nicht , wodurch das Ablenkungspotenzial  durch Internetdienste verringert wird . Durch die Nutzung des WLAN entstehen keine  Kosten für die Nutzung des Mobilfunknetzes. Der Raspberry Pi ist durch seine geringe  Größe höchst transportabel im Vergle ich zu gängigen Methodenkoffern .  4 Fazit und Ausblick   Die Hoffnung, dass die hier vorgestellten rechnergestützten Realisierungen der vier  Methoden die in Kapitel  2 genannten Probleme lösen, hat sich bei der E rprobung durch  die Autoren und zusätzlicher Lehrkräfte im Informatik unterricht  und im Unterricht in  weiteren Fächern an berufsbildenden Schulen in und um Osnabrück erfüllt.  Eine  ausführliche Darstellung aller beobachteten Aspekte würde den Rahmen sprengen.   Zusammenfassend lässt sich sagen, dass die Webanwendungen von den Lerngruppen  motiviert genutzt wurden. Sie ließen sich problemlos und gewinnbringend in den  Unterrichtsablauf integrieren und die verwendete Technik zeigte sich sowohl in  Rechnerräumen als a uch in normalen Klassenräumen unter Einsatz von BYOD Szenarien stabil. Bis heute haben die Webanwendungen etliche Veränderungen in                                                              10 Siehe Kapitel  2.  11 Im Modellversuch wurde der Apache HTTP -Server  genutzt  [Ap16 ].  12 Unter Einsatz  eines Raspberry Pi Zero etwa 25€.  Online kooperieren im Informatikunterricht 371ii “proceedings” — 2017/9/17 — 20:19 — page 372 — #372 ii i ii i  Aussehen und Ablauf erfahren und es ist davon auszugehen, dass die se Entwicklung sich  bis zu r Tagung  fortsetzt.   Literaturverze ichnis   [Ap16]  apache.com: Apache HTTP Server Project. https://httpd.apache.org/, Stand: 7.2.2017.   [Be01 ] Becker, G.: Qualität entwickeln: evaluieren . Friedrich Verlag, Seelze, 2001.   [Bp12 ] Bundeszentrale für politische Bildung (Hrsg.): Auswertungszielsche ibe,  Evaluationszielscheibe . http://www.bpb.de/lernen/formate/methoden/62269/   methodenkoffer -detailansicht?mid=3,  Stand: 09.02.2017.   [El16]  elinux.org: RPI -Wireless -Hotspot. http://elinux.org/RPI -Wireless -Hotspot, Stand:  07.02.2017.   [GG06 ] Green, N.; Gre en, K.: Kooperatives Lernen im Klassenraum und Kollegium,  Kallmeyersche Verlagsbuchhandlung GmbH, 2. Auflage, Seelze -Velber,  2006.   [Ma11]  Mattes, W.: Methoden für den Unterricht. Bildungshaus Schulbuchverlage, Paderborn,  2011.   [Me11] Menzerath, M.: Raspbe rry Pi als WLAN Access Point nutzen.  https://menzerath.eu/artikel/raspberry -pi-als-wlan -access -point -nutzen/, Stand:  07.02.2017.   [MF10]  Merkel, H. -P.; Feilner, M.: Mobile WLAN -Accesspoints mit Hostapd. Linux -Magazin  06/2010. http://www.linux -magazin.de/Au sgaben/2010/06/Macht -Schule, Stand:  07.02.2017.   [Ra17a]  Raspberry PI Foundation: Raspberry PI Model B.  https://www.raspberrypi.org/products/model -b/, Stand: 03.02.2017.   [Ra17b]  Raspberry PI Foundation: Downloads. https://www.raspberrypi.org/downloads/, St and:  07.02.2017.   [Re07]  Reich, K. : Unterrichtsmethoden im konstruktiven und systemischen M ethodenpool  Brainstorming. www. methodenpool.uni -koeln.de/download/brainstorming.pdf, Stand:  10.02.2017.  [Re10]  Reich, K.: Unterrichtsmethoden im konstruktiven und  systemischen M ethodenpool –  Partnerarbeit . http://methodenpool.uni -koeln.de/download/partnerarbeit.pdf, Stand:  10.02.2017.   [Re14 ] Reich , K.: Unterrichtsmethoden im konstruktiven und systemischen M ethodenpool  Placemat -Methode.  www.methodenpool.uni -koeln. de/download/placemat.pdf ,  Stand:  04.02.2017 .  [St14]  Stommel, J. ; Morris, S. M. : Tools for Collaborative Writing,  www. jessestommel.com/ tools -for-collaborative -writing, Stand: 04.02.2017.   372 Thomas Rohde et al.ii “proceedings” — 2017/9/17 — 20:19 — page 373 — #373 ii i ii i Workshop: M usikprogrammierung mit Sonic Pi   Esther Alzate Romero1, Leonore Dietrich2   Abstract:  Die Musikprogrammiersprache Sonic Pi3 , die an der University of  Cambridge speziell  für Kinder und Jugendliche entwickelt wurde, eröffnet einen kreativen, kontextbasierten Zugang  zur Informatik. Ganz nach dem Motto „Technik zum Anfassen“ können durch den Einsatz der  günstigen Hardwarelösung Raspberry Pi Berührungsängst e zu Informatiksystemen abgebaut  werden. Mithilfe des Design -Based -Research -Ansatzes wird eine Unterrichtseinheit zum Thema  Musikprogrammieren unter gendersensiblen Aspekten entwickelt und untersucht. In  diesem  Workshop werden vor allem die Unterrichtsein heit zu m Einstieg in die Programmierung sowie  erste Ergebnisse aus der Praxisphase, die daraus resultierenden Erkenntnisse und damit  verbundenen Verbesserungs bzw. Überarbeitungsschritte thematisiert. Hierbei stehen vor allem  die Gestaltungsaspekte der Un terrichtseinheit im Vordergrund, ebenso die Frage, welche zentralen  Inhalte und Konzepte der Informatik in diesem Rahmen vermittelt werden können Die  Workshopteilnehmer _innen  erhalten einen Einblick in die Umgebung und Sprache Sonic Pi, den  Unterrichtsgang  sowie Materialien und die praktische Umsetzung in der Schule. Zum Abschluss  wird ein Ausblick auf die empirische Studie gegeben.   Keywords: Informatikdidaktik, Genderforschung, Unterrichtsforschung, Musikinformatik, Live   Coding, Sonic Pi, Design -Based -Rese arch, Programmiereinstieg, Informatik im Kontext,  Raspberry Pi   1 Einleitung   Der Workshop stellt eine Unterrichtseinheit vor, die im Rahmen eines  Dissertationsvorhabens zur Entwicklung und Untersuchung einer gendersensiblen  Einführung in die Programmierung en twickelt und erprobt wurde.   Der Zugang zur Programmierung über eine Musikprogrammiersprache soll insbesondere  Mädchen ansprechen. Die Durchführung im Musikunterricht wurde gewählt, da  Pflichtunterricht Informatik in der Mittelstufe im Evaluationsgebiet nic ht existiert. Die  Erprobung im Rahmen einer Arbeitsgemeinschaft oder Wahlunterricht hätte dem Ziel,  insbesondere Mädchen für Programmierung zu begeistern, widersprochen. Darüber  hinaus bestätigen erste Erfahrungen die Erwartung der Autorinnen, dass die Ein bettung  in einen künstlerischen Kontext mit geringeren Berührungsängsten nicht -technikaffiner  Schüler_innen einhergeht.                                                               1 Heidelberg School of Education, Voßstraße 2, Geb. 4330, 69115 Heidelberg, romero@heiedu.ph heidelberg.de   2 Universität Heidelberg, Didaktik der Informatik, INF 205, 69120 Heidelberg, leonore.dietrich@uni heidelberg.de   3 http://sonic -pi.net/ [15.1.2017]  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 373ii “proceedings” — 2017/9/17 — 20:19 — page 374 — #374 ii i ii i Da es im Wesentlichen um informatische Konzepte geht, die an einem musikalischen  Kontext erarbeitet werden, ist die informatische Fachli chkeit der Lehrkraft ein wichtiger  Faktor. Ideal ist der Unterricht als Teamteaching -Ansatz mit Informatik als Leit und  Musik als Anwendungsfach umgesetzt. Muss auf eine der Fachlehrkräfte verzichtet  werden, dann kann die Einheit auch gut von einer Inform atiklehrkraft mit musikalischem  Interesse umgesetzt werden.   2 Entwicklung der Unterrichtseinheit   Die Unterrichtseinheit wurde fächerübergreifend von den Autorinnen als  Musikinformatikerin und Informatiklehrerin gemeinsam mit einer Musiklehrerin  entwickelt. S ie orientiert sich am Mittelstufenunterricht des Faches Musik in Baden Württemberg und ist ab Klasse 8 geeignet, einen Programmiereinstieg zu erarbeiten.   Die Fachkonzepte wurden sowohl nach informatischen als auch nach musikalischen und  den jeweiligen dida ktischen Konzepten aufbereitet und die Fachsprache  in der  Unterrichtsvorbereitung auf beide beteiligten Fächer abgestimmt.   Die Einheit wurde erstmals in einer achten Klasse im Rahmen des Musikunterrichts  erprobt – unterrichtet wurde sie zum Großteil von e iner der Autorinnen als  Informatiklehrkraft. Die Musiklehrkraft gestaltete dabei die Verankerung im  musikalischen Kontext und übernahm kleinere musikalische und musikdidaktische  Anteile des Unterrichts. Bei der ersten Erprobung wurden mehrere kleinere Stüc ke in  Sonic Pi umgesetzt. Die ersten Stunden orientierten sich an bekanntem Liedgut, das neu  arrangiert wurde.   Da die Schüler_innen den Teil der eigenen Kompositionen am Ende der  Unterrichtseinheit als zu kurz, aber besonders motivierend empfanden, wurde dieses  Ergebnis in die Anpassung der Einheit für die zweite Praxisphase übernommen und es  wird früher zu eigenen Kompositionen übergegangen. Darüber hinaus wurde ab der  zweiten Erprobung als Plattform der Raspberry Pi eingesetzt, da auf diesem Sonic Pi  zuverlässiger läuft als auf den in den Schulen vorhandenen Windows -Systemen.   Dieser Workshop stellt den aktuellen, stärker an den eigenen Kompositionen orientierten  Unterrichtsverlauf vor.  374 Esther Alzate Romero, Leonore Dietrichii “proceedings” — 2017/9/17 — 20:19 — page 375 — #375 ii i ii i 3 Vorwissen der Lernenden   Da die Einheit für den Mittelstufenunterricht  entwickelt wurde, waren bei den bisher  erprobten Lerngruppen Vorkenntnisse in den Fächern Musik und Physik vorhanden.   3.1 Physik   Die Vorkenntnisse aus dem Physikunterricht im Bereich Akustik sind hilfreich bei dem  Verständnis der Parameter einiger Befehle in Sonic  Pi, müssen aber nicht vorausgesetzt  werden. Sie können ebenso im Rahmen des Unterrichts erarbeitet und auf die Begriffe  Amplitude und Phase beschränkt werden.    3.2 Musik   Für die praktische Umsetzung der eigenen Kompositionen in Sonic Pi sind  musiktheoret ische Grundkenntnisse  hilfreich. Notenlesen muss keine Voraussetzung  sein, ist jedoch gerade in der Einstiegsphase, in der ein bekanntes Stück in Sonic Pi  nachprogrammiert wird, hilfreich. Auch sind Kenntnisse über den Aufbau musikalischer  Stücke hilfreic h. In der Praxis zeigte sich, dass vor allem Analogien zu Pop und  Rocksongs und der klassischen Bandstruktur für die Schüler_innen hilfreich waren. So  konnte beispielsweise die Synchronisation mehrerer Loops auf einen Loop, der das  Metrum vorgibt, gut mit  der Rolle des Schlagzeugers in einer Band verglichen werden.  Sonic Pi eignet sich vor allem für die Umsetzung von loop -basierter, stark rhythmus orientierter Musik wie Techno, House, Drum  'n' Bass  etc. oder für experimentelle Noise Experimente und flächige Ambientmusik. Da sich die Umsetzung der Komposition ab  der zweiten Erprobung mit der Vertonung eines Videos  oder Bildes  beschäftigt , ist es  hilfreich, wenn im Musikunterricht bereits frei zu vorg egebenen Themen/Inhalten  improvisiert oder komponiert wurde.  Auch die Thematisierung von programmatischer  Musik und Filmmusik kann hilfreich sein. Wichtig in diesem Kontext ist die Reflexion  des eigenen künstlerischen Schaffens. Das gemeinsame Beschreiben , das Sprechen und  die Reflexion über die entstandene Musik, das Finden von geeigneten beschreibenden  Adjektiven sind wichtig für den künstlerischen Gestaltungsprozess.   3.3 Informatik   Haben die Lernenden bereits Kontakt mit einer Programmiersprache gehabt, so ist davon  auszugehen, dass ihnen der Umgang mit Sonic Pi anfangs leichter fällt, die  Erprobungsklassen hatten aber  vorher  keinen Informatikunterricht. Fachwissen in  Informatik wird daher nicht vorausgesetzt und die relevanten Konzepte werden alle als  neu z u erarbeiten eingestuft.  Musikprogrammierung mit Sonic Pi 375ii “proceedings” — 2017/9/17 — 20:19 — page 376 — #376 ii i ii i 4 Ablauf   Die  Unterrichtseinheit ist in sechs Doppelstunden angelegt und gliedert sich grob in eine  Einführungs und eine Projektphase.   Stunde  Thema  Bemerkungen  1-2 Einstieg Einheit  Geschichte der Computermusik, Live Coding,  Unplugged Modul zu ersten Befehlen mit  Parametern  3-4 Einstieg Sonic Pi  Synthesizer, Einzelnoten , Parameter (amp,  release..), Schleifen,  Samples  5-6 Komposition  Vereinfachte Schreibweise mit Modulo Operation (Datenstrukturen), Syntax Highlighting , Debugging, Auskommentieren  7-8 Komposition  Variablen, Effekte, Zufallsfunktionen  9-10 Komposition  Freies Arbeiten  11-12 Präsentation  Freies Arbeiten und Präsentation  Tab. 1: Grobplanung der Unterrichtseinheit Sonic Pi   4.1 Einführungsphase    Nach einer kurzen Einführung in die Computermusikgeschichte  über zentrale Figuren  der Geschichte der Informatik und der elektronischen Musik folgt eine kurze  Demonstration und theoretische Einführung  in das Live -Coding, das Programmieren  und Improvisieren in Echtze it von elektronischer Musik und audiovisueller Kunst   [Gu13], [BS09], [C o03], [Ro15].   Den ersten Kontakt mit Musikprogrammierung erfahren die Schüler_innen dann  unplugged: Zunächst müssen sie herausfinden, welche  Parameter beim Musizieren an  einem Instrum ent verändert werden können. Über vorgegebene Schablonen schreiben sie  dann entsprechende Befehle an ihre Mitschüler, die von diesen an unterschiedlichen  Instrumenten interpretiert werden.   Abb. 1: Musikprogrammierung unplugged – Vorlage für den Unterricht   376 Esther Alzate Romero, Leonore Dietrichii “proceedings” — 2017/9/17 — 20:19 — page 377 — #377 ii i ii i Hierbei kommen bereits mehrere zentrale informatische Konzepte zum Einsatz und  werden benannt: Befehl oder Anweisung, Parameter, Konstante, Codierung und  Interpretation.   Zentrale Aspekte von Sonic Pi können so erfahrbar gemacht werden: schreibt ein_e  Schüler_in bspw. den Pseudocode „spiele auf dem Klavier Ton C1 leise für 20  Sekunden” bleibt ihm/ihr nichts anderes übrig, als die Taste 20 mal hintereinander zu  drücken, da traditionelle Instrumente eine durch die Bauart festgelegte  Nachschwingzeit  haben. Sonic Pi hat diese Begrenzung (außer es ahmt ein traditionelles Instrument nach)  nicht. Daher unterscheidet das Programm zwischen der Nachschwingzeit ( release ), also  der Klangdauer und der Dauer, bis der nächste Ton anfängt ( sleep ). Die Begrifflichkeiten  werden an dieser Stelle eingeführt und gesichert. Ebenso werden die aus dem  Physikunterricht meist bereits bekannten Begriffe der Amplitude und Phase eines  Klanges besprochen. Durch den spielerischen Umgang mit der vorgegebenen Notat ion  schreiben die Schüler_innen Pseudocode, der sehr nah an der späteren Umsetzung in  Sonic Pi ist.     Abb 2: Arbeitsblatt Sonic Pi Codieren von Noten, vom Pseudocode zum Code   In der zweiten Doppelstunde wird der Pseudocode in Sonic Pi -Code übertragen. W ichtig  hierfür ist eine kurze Einführung in die MIDI -Notation. Die Schülerinnen und Schüler  übertragen zunächst ein einfaches, ihnen bekanntes Stück in Sonic Pi. Zentrale Konzepte  wie Befehl, Parameter, Codierung und Schleife werden hierbei thematisiert un d zugleich  Musikprogrammierung mit Sonic Pi 377ii “proceedings” — 2017/9/17 — 20:19 — page 378 — #378 ii i ii i hörbar gemacht. Sonic Pi arbeitet für die Erzeugung der Töne mit Synthesizern – die  Idee eines Synthesizers kann bereits in der Einführungsstunde vorgestellt und hier  wieder aufgegriffen werden. Neben analogen Synthesizern (z.B. Korg Monotron4)  dürfen die Schülerinnen und Schüler auch digitale Synthesizer (demonstrierbar über eine  DAW5  mit Plugins) ausprobieren und sich so ein Bild von dieser Klangwelt machen.  Die Schüler_innen finden den im unplugged -Teil genutzten Parameter Instrument  in der  Funktion use_synth  wieder. Zu Beginn wird der Befehlssatz auf einfache Noten mit den  Parametern Tonhöhe, Lautstärke, Länge und Metrum beschränkt, die alle bereits in der  vorangegangenen Stunde real erlebbar waren.   Um Melodien leichter umzusetzen werden ein fache Schleifen in Form von loops   eingeführt und als informatisches Konzept herausgearbeitet.     Abb 3: Schleifen und ihre Umsetzung in Sonic Pi   Die für das Live -Coding erforderlichen live_loops  werden im Zusammenhang mit der  sync -Funktion erarbeitet, da be ides dem synchronen Ablauf dient. Bei Einführung eines  solchen Konzeptes werden immer die informatische Bedeutung und die Übertragbarkeit  in andere Programmiersprachen hervorgehoben. So werden beispielsweise zunächst  Zählschleifen ( x.times ) eingeführt – insbesondere 2.times  wird in Musikstücken häufig  verwendet, da es der einfachen Wiederholung dient. Das Konzept wird aus  informatischer Sicht besprochen und die musikalische Entsprechung thematisiert. Auch  die in der Programmiersprache erweiterte  Flexibilitä t für eigene Kompositionen durch  eine wählbare Anzahl von  Iterationen wird diskutiert. Mit loops werden anschließend  Endlosschleifen als Konzept eingeführt. Erst nach dem Einüben dieser zentralen                                                              4 http://www.korg.com/us/products/dj/monotron/  [10.03.2017]   5 Digital Audio Workstation   378 Esther Alzate Romero, Leonore Dietrichii “proceedings” — 2017/9/17 — 20:19 — page 379 — #379 ii i ii i informatischen Konzepte folgt die Sonderfunktion benannter s ynchronisierter Schleifen  als spezielle Live -Coding Funktion. Diese wird auch als Ausprägung einer  spezialisierten Programmiersprache vorgestellt.   4.2 Projektphase   In den folgenden Sitzungen werden zentrale Funktionen inn erhalb von Sonic Pi erklärt  (Samples, Zufallsfunktion, Effekte) und ein eigenes Stück erarbeitet. Dieses kann alleine  oder in Zweierteams erarbeitet werden. Da die vollkommen freie Komposition eines  Stückes für manche  Schüler_innen in der erst en Erprobungsphase schwierig war , ist eine   angeleitete, eher programmatische Komposition ratsamer. Hierfür eignet sich die  Vertonung eines Bildes, einer Geschichte oder eines Kurzfilms. Sonic Pi eignet sich für  sphärische Klänge und rhythmisc he Pattern besonders gut, daher ist eine Arbeit mit  Klan gcollagen statt dem Erstellen eines „Songs“ empfehlenswert. Ob das erarbeitete  Stück live performed und im Sinne des Live -Codings mit dem Programmcode  improvisiert wird, oder ob ein fertiges Stück „nur“ abgespielt wird, kann zusammen mit  den Schüler_innen entschieden werden.   In dieser Phase können Musiklehrer_innen und Informatiklehrer_innen sehr gut im  Team -Teaching interagieren. Der/die Musiklehrer_in kann Fragen zu den künstlerischen  Gestaltungsaspekten (wi e drücke ich das, was ich sagen, will musikalisch aus? Wie kann  ich einzelne musikalische Ideen miteinander verbinden?) beantworten. Der/die  Informatiklehrer_in kann bei komplexeren Umsetzungsideen innerhalb des Programms  helfen, ebenso kann er/sie beim Debugging unterstützen.   Schüler_inn en fragen bald nach Schreibweisen für Akkorde und setzen einfache  Datenstrukturen für Melodieschreibweisen ein – Sonic Pi bietet hier beispielsweise einen  Ring an, der über einen synchronisierenden Zähler durchlaufen werden kann.  Komplexere Indexoperatione n können mithilfe mehrerer solcher Ringe experimentell  erarbeitet und durch das direkte auditive Feedback sehr einfach verstanden werden. Der  Umgang mit gestuften Hilfen und dem in der Umgebung eingebauten Tutorial führen die  Schüler_innen schrittweise zu immer selbständigerem Erarbeiten eines größeren  Befehlsfundus für die Gestaltung ihrer eigenen Kompositionen.   Die letzte Sitzung dient der Präsentation und einer kurzen Reflexion. Die Schüler_innen  präsentieren ihre Stücke und beschreiben, wie sie bei der Komposition vorgegangen sind  und was sie mit ihrer Musik ausdrücken möchten. Die Mitschüler_innen geben  Feedback, gemeinsam wird über die entstandenen Klänge reflektiert. Hierbei hilft die  Übung zur Beschreibung elektronischer Klänge aus der ersten Stunde.    5 Erste Durchführungsphase und Erkenntnisse   Die ersten Ergebnisse des Forschungsvorhabens werden ausführlich im Praxisbeitrag Musikprogrammierung mit Sonic Pi 379ii “proceedings” — 2017/9/17 — 20:19 — page 380 — #380 ii i ii i ([AD17a], ebenfalls in diesem Band) beschrieben. Die Schülerinnen und Schüler waren  hoch motiviert und begeistert während des Proj ekts, die Pausen wurden regelmäßig  vergessen, stattdessen wurde mit Begeisterung am eigenen Stück gearbeitet. Auch  Monate nach Ende des Projektes sprachen Schüler_innen begeistert von der Arbeit mit  Sonic Pi im Musikunterricht. Insbesondere die Mädchen der  Lerngruppe zeigten  langfristiges Interesse. Als sie in der Schule Gelegenheit hatten, erneut Musik zu  programmieren, nahmen sie diese begeistert an. Grundlegende Konzepte wie Schleifen  und Datenstrukturen wurden von ihnen dabei ohne Unterstützung wieder e ingesetzt.  Diese zentralen Konzepte waren bei den Schülerinnen also trotz der kurzen Projektdauer  und langen Pause noch präsent.   Als problematisch stellte sich die Anwendung unter Windows heraus, da Sonic Pi hier  teilweise sehr instabil war. Die Autorinnen  empfehlen daher die Anwendung mit einem  Raspberry Pi, wie sie ab der zweiten Erprobung auch im Projekt umgesetzt wurde.  Positiver Nebeneffekt der Nutzung des Raspberry Pis ist der Abbau von  Berührungsängsten mit neuer Hardware. Ganz nach dem Motto „Techni k zum  Anfassen“ wird der Umgang mit einem alternativen Hardwaresystem auf kreative Weise  eingeführt.   Als schwierig empfanden die Schüler_innen zudem den Umgang mit den  Fehlermeldungen in Sonic Pi. Aufgrund dessen wurde im überarbeiteten  Unterrichtskonzept  das Debugging stärker in den Fokus gerückt. Künftig erhalten  Schüler ein Cheatsheet mit den wichtigsten Fehlermeldungen und deren Erklärung sowie  Lösungsvorschlägen dazu. Darüber hinaus wird der Umgang mit Fehlermeldungen im  Unterricht stärker thematisier t. Dies soll auch zu einer weiteren Festigung des  Verständnisses der informatischen Aspekte führen.  Trotz dieser Schwierigkeiten waren  die Schüler_innen bis zum Projektende hoch motiviert.   Aus musikalischer Sicht schufen die Schüler_innen begeisternde, k omplexe und  vielschichtige Klangerlebnisse mit einer abwechslungsreichen Auswahl an Klängen: von  Techno bis hin zu sphärischen, naturnahen Kompositionen.   6 Workshopinhalt   Vorkenntnisse in Sonic Pi sind für diesen Workshop nicht erforderlich. Zunächst geben  wir eine kurze Einführung in das Feld der Musikinformatik und des Live -Codings. In  Anlehnung an den Verlauf der von den Autorinnen konzipierten Unterrichtseinheit  werden im Workshop grundlegende Funktionen der Programmiersprache Sonic Pi  gemeinsam Schritt für Schritt erarbeitet. Zunächst wird anhand eines bekannten,  einfachen Stückes das Schreiben von Melodien erarbeitet. Danach wird eine kleine  Klangcollage erstellt, bei der vor allem das Benutzen von Samples (im Programm  enthaltene Klangaufnahmen) im Vord ergrund steht. Die von den Autorinnen erstellten  Arbeitsmaterialien für den Schulunterricht (7. -10.Klasse, alle Schultypen) werden  außerdem kurz vor und den Teilnehmern in der aktuellen Fassung zur Verfügung 380 Esther Alzate Romero, Leonore Dietrichii “proceedings” — 2017/9/17 — 20:19 — page 381 — #381 ii i ii i gestellt. Anmerkungen und Verbesserungsvorschlä ge sind sehr willkommen. Nach  Abschluss des Forschungsvorhabens werden sämtliche Unterrichtsmaterialien zusammen  mit Stundenverlaufsplänen und anderen Handlungsempfehlungen veröffentlicht.   Den Abschluss bildet eine Diskussion der Unterrichtsvorschläge mit Fokus auf den  informatischen Wert und die unterrichtliche Umsetzbarkeit.   7 Ausb lick: weitere Erprobung  und Forschungsvorhaben   In der zweiten und dritten  Durchführungsphase wird das überarbeitete Konzept erprobt  und erneut verbessert und angepasst. Ebenfalls wird ein abschließender Wissenstest  entworfen. Daran schließt sich ein weiterer Forschungsteil an, in dem die gendersensible  Unterrichtsgestaltung thematisiert und reflektiert wird. Nach ausführlicher  Datensichtung und -auswertung wird die Unterrichtseinhe it final überarbeitet.   Literaturverzeichnis   [AD17 a] Alzate Romero, E.; Dietrich, L.: Musikprogrammierung mit Sonic Pi. Entwicklung  und Untersuchung einer gendersensiblen Unterrichtseinheit zum Programmieren in der  Sekundarstufe I. In (Ira Diethelm, Hrsg.):  Informatische Bildung zum Verstehen un d  Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für  Informatik, Bonn 2017 .      [BS09]  Brown, A. R.; Sorensen, A.: Interacting with Generative  Music through Live Coding.  Contemporary Mu sic Review, 28(1), S.17–29, 2009.   [Co03]  Collins, N.; McLean, A.; Rohrhuber, J.; Ward, A.: Live coding in laptop performance.  In: Organised Sound, 8(3) /03, S.321–329, 2003.   [Gu13]  Guzdial, M.: Live -Coding in Education. In (Blackwell, A.; McLean, A.; Noble, J.;  Rohrhuber, J., Hrsg.): Collaboration a nd learning through live codi ng (Dagstuhl  Seminar 13382).  Dagstuhl Reports, 39/13, S. 135 -136, 2013.   [Ro15]  Rohrhuber, J.: Lehre als Forschung: Grundlagen der Musikinformatik  im  künstlerischen Kontext. Zeitschri ft für Hochschulentwicklung, 10(1)/15 , S.79-91,  2015.      Musikprogrammierung mit Sonic Pi 381ii “proceedings” — 2017/9/17 — 20:19 — page 382 — #382 ii i ii iii “proceedings” — 2017/9/17 — 20:19 — page 383 — #383 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 11 Herausforderungen durch neue Programmierkonzepte in blockbasierten Programmiersprachen Sven Jatzlau1, Ralf Romeike2 Abstract: Blockbasierte Programmiersprachen stehen für einen Zugang zur Programmierung, der von Programmieranfängern erfolgreich genutzt wird und zunehmend auch als Möglichkeit gesehen wird, nicht-professionellen Programmierern das Gestalten von Informatiksystemen zu ermöglichen. Als Gründe hierfür werden u. a. die intuitive Bedienung, schnelle Erfolgserlebnisse und ein breites und kontextualisiertes Anwendungsspektrum genannt, die zu einer großen Beliebtheit unter jungen Programmierern führen und sich als Kernmerkmale in den populären Programmierumgebungen Scratch und BYOB/Snap! wiederﬁnden. Diese graﬁsche, blockbasierte Programmierung unterscheidet sich jedoch von klassischer textbasierter Programmierung nicht nur auf der Bedienebene, sondern bringt gegenüber gängigen im Unterricht genutzten Programmiersprachen auch verschiedene konzeptuelle Unterschiede mit sich. Solche ergeben sich zum einen aus der visuellen Darstellung von Objekten auf der Bühne, zum anderen aus der historischen Genese sowie didaktischen und pragmatischen Entscheidungen. Für Lehrerinnen und Lehrer ist ein konzeptuelles Verständnis wichtig, um Möglichkeiten und Probleme beim Programmierenlernen mit Scratch-ähnlichen Programmiersprachen zu erkennen und didaktisch darauf einzugehen. Im vorliegenden Beitrag werden verschiedene zentrale Konzepte, wie z. B. Nesting von Graﬁkobjekten, herausgearbeitet und verdeutlicht. Es zeigt sich, dass der Ansatz des „Programmierens für alle“ mit passenden Werkzeugen in greifbare Nähe rückt, eine didaktische Aufarbeitung zum Erreichen eines informatischen Grundverständnisses aber unerlässlich ist. Keywords: visuelle Programmierung, Scratch, Snap!, BYOB, GP, blockbasierte Programmiersprachen 1 Motivation und Ziele Blockbasierte Programmierung ist spätestens seit Scratch ein relevantes Thema für Programmieranfänger, ob in Schule oder Freizeit. Programmiersprachen, die sich auf das Konzept der blockbasierten Programmierung stützen, unterscheiden sich von textbasierten Sprachen sowohl auf konzeptioneller Ebene als auch in ihrer Interaktion mit dem Benutzer. Aufgrund ihrer Einfachheit und niedrigen Einstiegshürde (u.a. durch wegfallende Syntaxfehler) sind besonders die blockbasierten Sprachen, zu denen etwa Scratch undSnap! gehören, unter Anfängern und Einsteigern beliebt (vgl. [LKG17]). Aber auch abseits der Syntaxreduzierung wurden weitere Entscheidungen getro  en, die das Verständnis der Schüler fördern: Im Folgenden soll herausgearbeitet werden, welche 1Friedrich-Alexander-Universität Erlangen-Nürnberg, Didaktik der Informatik, Martensstr. 3, 91058 Erlangen, Germany sven.jatzlau@fau.de 2Friedrich-Alexander-Universität Erlangen-Nürnberg, Didaktik der Informatik, Martensstr. 3, 91058 Erlangen, Germany ralf.romeike@fau.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 383ii “proceedings” — 2017/9/17 — 20:19 — page 384 — #384 ii i ii i12 Sven Jatzlau, Ralf Romeike Unterschiede blockbasierte Programmiersprachen mit sich bringen und welche neuen Konzepte in diesem Zusammenhang wichtig sind. Zu diesem Zweck werden zunächst die historischen Ursprünge blockbasierter Programmierung analysiert und dann die wichtigsten neuen Konzepte anhand von Sprachen wie Scratch ,Snap! und einem neuen Vertreter der Familie, GP, verdeutlicht. Die Konzepte nichtatomarer Interpreter, Klassen und Objekte, Nested Sprites, First-class-Strukturen, Entwickler-Modus, Block-to-Text-Slider und Class Browser wurden ausgewählt, da sie entweder in ihrer Darstellung neuartig oder aber für Neulinge in der blockbasierten Programmierung noch gänzlich unbekannt sind, weshalb es wichtig ist, dass sie didaktisch behandelt und aufgearbeitet werden. 2 Forschungsstand Zum Thema Didaktik der blockbasierten Programmierung wurde bis heute nur relativ wenig Forschungsarbeit geleistet. Mitchel Resnick, verantwortlich für die Entwicklung der Sprache Scratch , kritisierte bereits 2002, dass Computer zwar einerseits immer zugänglicher und verbreiteter werden und dadurch eine Revolution der Lerngewohnheiten möglich ist, aber oftmals digitale Medien nur dazu verwendet werden, veraltete Herangehensweisen an den Lernprozess zu unterstützen [ Re02 ]. Resnick et al. [ RMMH09 ] machen darauf aufmerksam, dass digitale Kompetenz nicht nur Interaktion und Kommunikation beinhalten darf, sondern auch das Erscha  en und die Weiterentwicklung von Inhalten. Durch Modrow et al. [ Mo11 , MMS11] wurden die Einstellungen von Schülern zu Scratch untersucht. Dabei war klar erkennbar, dass Sprachen wie Scratch an Schulen zwar gerne von ihnen verwendet werden, jedoch als reine Einsteigerprogramme verstanden werden. Für komplexere Aufgabenstellungen oder im Berufsleben wird Scratch etwa als nicht angemessen empfunden. Gleichzeitig jedoch sind beispielsweise alle untersuchten Abituraufgaben (Niedersachsen, 2011) problemlos in Scratch oder Snap! lösbar, sodass eine Abwendung von textbasierter Programmierung hin zu blockbasierter durchaus denkbar wäre. Die Forschungsergebnisse von Strecker [ St15] unterstützen diese These: Sie verglich die Leistungen von Schülern, die mitSnap! auf das Abitur vorbereitet wurden, mit denen, die reine Java-Kurse besuchten. Im Durchschnitt erbrachten Erstere bessere Leistungen, v.a. im Hinblick auf Teillösungen. Außerdem waren sie den Herausforderungen besser gewachsen, da ihnen weniger Konzepte oder Kompetenzen fehlten. Besonders im Bereich der Algorithmik konnten dadurch bessere Ergebnisse erzielt werden. Price et al. [ PB15 ] erforschten das Verhalten von Schülern bei der Verwendung blockbasierter Programmiersprachen. Laut ihren Forschungen waren diese Schüler in der Lage, Programmieraufgaben deutlich schneller zu lösen als solche, die textbasierte Programmiersprachen verwendeten. Dieses Ergebnis deutet darauf hin, dass blockbasierte Programmiersprachen und Benutzeroberﬂächen leistungsfördernd wirken. Dies könnte mit der Motivation der Lerner zusammenhängen: Ruf et al. [ RMH14 ] verglichen intrinsische Motivation und Programmierfähigkeiten von zwei Gruppen von Lernern. Eine Gruppe verwendete Scratch zum Erlernen der Programmierung, die andere die textbasierte Programmiersprache Karol . Hierbei zeigte sich, dass sowohl Motivation als auch Programmierkompetenz in der Scratch Klasse stärker vertreten waren. Die Forschungsergebnisse von384 Sven Jatzlau, Ralf Romeikeii “proceedings” — 2017/9/17 — 20:19 — page 385 — #385 ii i ii iHerausforderungen durch neue Programmierkonzepte in blockbasierten Programmiersprachen 13 Weintrop et al. [ WW15 ] zeigen ähnliche Ergebnisse: Schülern wurden Aufgaben vorgelegt, die sie bearbeiten sollten. Der zu bearbeitende Code wurde jeweils in Blöcken bzw. in Textform vorgelegt, doch die blockbasierten Aufgaben wurden deutlich häuﬁger korrekt beantwortet. Dwyer et al. [ DHH15 ] erforschten, wie Informationen in blockbasierten Userinterfaces aufgenommen und verarbeitet werden und zeigten, dass die visuelle Natur solcher Programmierumgebungen oftmals hilfreich für Lerner ist. Trotzdem besteht die Gefahr, dass Nutzer Funktionen der Umgebung übersehen oder visuelle Hinweise falsch interpretieren (etwa wenn die Position oder das Aussehen der Objekte auf der Bühne fälschlicherweise als Hinweise für ihr Verhalten gedeutet werden). Aber auch auf motivationaler Ebene zeigen sich nicht ausschließlich Vorteile: Lewis [ Le10 ] untersuchte die Wahrnehmung von Lernern bei der Verwendung von Scratch undLogo . Zwischen den Gruppen zeigten sich keine bedeutenden Unterschiede hinsichtlich ihrer Motivation, zukünftig zu programmieren. Es wird deutlich, dass blockbasierte Programmiersprachen besonders für Programmieranfänger eine große Chance darstellen, schnell und sicher Kompetenzen im Bereich der Algorithmik und Programmierung zu erlangen. Dies wirkt sich positiv auf deren intrinsische Motivation und Selbsteinschätzung aus. 3Meilensteine in der Entwicklung der blockbasierten Programmiersprachen Ein großer Teil der konzeptionellen Neuerungen, die sich in blockbasierten Programmiersprachen ﬁnden, lassen sich auf die historische Entwicklung zurückführen. Daher ist es bedeutsam, die Meilensteine in der Entwicklung dieser Programmiersprachenfamilie zu kennen. Hierzu sind drei essentielle Programmierumgebungen als Meilensteine zu nennen, die neben Scratch undSnap! die Genese visueller Sprachen beeinﬂussen: Morphic ,Smalltalk undGP. Diese sollen im Folgenden kurz erläutert und ihre Bedeutung für die blockbasierte Programmierung herausgestellt werden. Diese Umgebungen wurden gewählt, da sich ihre Konzepte schließlich in den aktuellen Programmierumgebungen wiederﬁnden, sodass sie ihre Entwicklung maßgeblich beeinﬂussten bzw. Ansätze der zukünftigen Weiterentwicklung aufzeigen ( GP). Morphic ist ein Framework, das es dem Benutzer ermöglicht, auf einfache Art und Weise ein graﬁsches Userinterface zu erstellen und mit diesem zu interagieren. Das Framework basiert dabei sowohl auf einer direkten Manipulation der jeweiligen Objekte (anhand von Kontextmenüs) als auch einer Manipulation innerhalb von Programmen. Ursprünglich wurde es als Teil der Sprache Self bei Sun entworfen, die erstmals in den 80ern und 90ern als experimentell verwendetes Testsystem für Sprachendesign eingesetzt wurde. Grundlegend für diese Umgebung ist, dass alle sichtbaren Objekte sog. „Morphs“ sind und somit etwa auf Ereignisse reagieren (wie etwa Mausklicks), eine Überlappung mit anderen Objekten erkennen oder aus Teilobjekten bestehen können [ SWM13 ]. Dadurch besteht die Möglichkeit, Objekte zu verschachteln, sodass diese in einer Teil-Ganzes-Beziehung stehen, wodurch jeder „Morph“ eine bestimmte Stelle in einer Hierarchie einnimmt (an deren SpitzeHerausforderungen durch neue Programmierkonzepte 385ii “proceedings” — 2017/9/17 — 20:19 — page 386 — #386 ii i ii i14 Sven Jatzlau, Ralf Romeike die „World“ bzw. die Bühne steht). Einige der Konzepte ﬁnden sich etwa in Scratch wieder: So dürfte das Prinzip der Verschachtelung als Vorlage für „Nested Sprites“ in Snap! gedient haben. Smalltalk ist das Resultat langwieriger Forschung, deren Ziel es war, dem Benutzer die Interaktion mit einem Computer auf einer funktionalen Ebene möglich zu machen [ GR83 , 8]. Es handelt sich hier um eine objektorientierte Programmiersprache, die gezielt zum Einstieg in die Programmierung konzipiert wurde. Wichtig war laut Entwickler Alan Kay die Bereitstellung einer Umgebung, in der Erkundung belohnt wird (nach Montessori), die enaktives, ikonisches und symbolisches Lernen ermöglicht und fördert (nach Piaget und Bruner), in der die Magie im Bekannten steckt (Negroponte) und die als verstärkender Spiegel für die Intelligenz des Benutzers dient (Coleridge, [ Ka96 , 33]). Die Sprache basiert auf dem Kernkonzept „Alles ist ein Objekt“. Ausgehend von diesem Konzept gelten bestimmte Regeln für Objekte, wie etwa, dass sie untereinander mithilfe von Nachrichten (die Objekte sind) kommunizieren oder, dass Objekte über ein eigenes Gedächtnis verfügen (das wiederrum ein Objekt ist). Smalltalk und seine spätere Weiterentwicklung, bzw. Modiﬁkation Squeak sind in ihrer Entwicklungslaufbahn zur Basis von diversen visuellen Programmierumgebungen geworden, wie z. B. Scratch oder Snap! . Die objektorientierte Natur dieser Sprache, in der mit graﬁschen Objekten anhand von Nachrichten kommuniziert wird (etwa eine Nachricht an eine Box, sich zu drehen oder zu vergrößern) wurde als sehr motivierend aufgefasst, sodass bereits Kinder in der Lage waren, Malprogramme oder Notenblatt-Lesesysteme zu entwerfen. Diese Tatsache könnte ein Grund dafür sein, dass sich das Prinzip des Nachrichtenversands auch in Scratch oder Snap! wiederﬁndet. GP ist der neueste Vertreter der Sprachenfamilie von Scratch und beﬁndet sich momentan noch in der Entwicklungsphase. Es wird derzeit u.A. von Jens Mönig und John Maloney entwickelt und basiert auf der Vision, dass dem Benutzer weniger Grenzen vorgegeben werden sollen als etwa in Scratch . Das bedeutet, dass komplexe Programmierkonzepte, die in den verwandten Sprachen aus didaktischen Gründen fehlen, umsetzbar sein sollen. Außerdem war es das Ziel, eine erweiterbare Plattform zu erscha  en der interne Code der gesamten Programmierumgebung ist einsehbar und manipulierbar, sodass Modiﬁkationen inhärent unterstützt werden. Die Programmierumgebung ist Scratch undSnap! sehr ähnlich, weist jedoch einige Unterschiede auf: Sie ist beinahe vollständig in sich selbst implementiert, d.h. wenn Codeblöcke untersucht werden, um deren interne Funktionsweise sichtbar zu machen, enthüllt sich wiederrum Code aus graﬁschen Blöcken. Dieses Konzept ﬁndet sich durchgehend bis zur untersten Ebene, sog. „primitives“, also primitiven Funktionen, die nicht weiter einsehbar sind, da sie in C implementiert sind. Neben diesem Konzept ﬁnden sich in GPjedoch noch weitere konzeptionelle Neuerungen: Wie in den anderen Vertretern der Sprachenfamilie verfügt es über einen nichtatomaren Interpreter. Außerdem ist es in der Lage, „Nested Sprites“ zu erscha  en, mit Dateisystemen zu interagieren und graﬁsche Codeblöcke als Text darzustellen. Alle diese Phänomene werden im folgenden Kapitel näher erläutert.386 Sven Jatzlau, Ralf Romeikeii “proceedings” — 2017/9/17 — 20:19 — page 387 — #387 ii i ii iHerausforderungen durch neue Programmierkonzepte in blockbasierten Programmiersprachen 15 4 Neue Konzepte blockbasierter Programmierung Im Folgenden sollen nun fünf der wichtigsten konzeptionellen Unterschiede und Neuerungen aufgezeigt werden. Die Konzepte sind bedeutsam, da sie klare Neuerungen darstellen, die durch visuelle, blockbasierte Programmiersprachen eingeführt wurden: Sie existieren in dieser Form nicht in den bekannten textbasierten Programmierumgebungen, die momentan noch etwa in der Schule Verwendung ﬁnden. Daher ist es wichtig, dass Lehrer sich dieser Neuerungen bewusst sind, sodass sie didaktisch behandelt werden können. Diese Konzepte ﬁnden sich in den aktuellen Vertretern blockbasierter Programmierumgebungen: Scratch , Snap! undGP. Nichtatomare Interpreter und Debugging Die wichtigsten Neuerungen haben eins gemeinsam: Sie sind auf didaktische Gründe zurückzuführen, d.h. die Motivation war es, die Programmiersprache intuitiver zu gestalten. Hierzu gehört z. B. die Eigenschaft, dass Codeblöcke verzögert ausgeführt werden. Das bedeutet, dass bestimmte Skripte langsamer ausgeführt werden als die Umgebung (und der Computer) es eigentlich zulassen würde(n). Ohne diese Verzögerung könnten z. B. Sprites sofort nach Programmstart die Grenzen der Leinwand verlassen, ohne dass für den Benutzer ersichtlich wäre, warum. Um Anfänger vor diesem Phänomen zu bewahren, wurde die Verzögerung für bestimmte Block-Arten eingeführt: Alle Schleifen-, Warteund Bewegungsblöcke haben diese Verzögerung. Diese Verzögerung kann etwa in Snap! mithilfe zweier verschiedener Maßnahmen umgangen werden: Entweder durch die Verwendung eines speziellen „Warp“-Blocks oder durch Aktivierung des “Turbo”-Modus. Dieser Unterschied in der Ausführung des Codes ist ein wichtiges Konzept, das für fortgeschrittene Lerner u.U. zu großer Verwirrung führen kann. Daher ist es wichtig, bei der Vermittlung der Programmierung auf die neuen Anforderungen einzugehen. Besonders für Debugging ist das Konzept der verzögerten Ausführung nützlich: Snap! bietet beispielsweise die Möglichkeit, die Ausführungsgeschwindigkeit von Blöcken manuell zu regeln. Die Option „visible stepping“ erweitert die Benutzeroberﬂäche um einen Schieberegler, der die Ausführungsgeschwindigkeit des Codes stufenlos reduziert, sodass der Programmablauf einfach verfolgt und nachvollzogen werden kann. Der Verstehensprozess wird zusätzlich durch Hervorhebung des momentan ausgeführten Codeblocks unterstützt. Hier wird deutlich, wie die Visualisierung des Codes (nicht nur auf der Leinwand, sondern auch in der direkten Darstellung) verständnisfördernd aufbereitet werden kann. Klassen-/Objekt-Darstellung Auch die Darstellung von Klassen und Objekten (als Instanzen von Klassen) unterliegt einigen Änderungen im Kontext der blockbasierten Programmierung: Hier wird der „Prototyping“-Ansatz verwendet, nach dem Objekte („Sprites“) geklont werden und dadurch neue Objekte erzeugt werden, die ihrerseits exakte Kopien sind und alle Codeblöcke und Attribute des ursprünglichen Objektes übernehmen. Dadurch „beschreibt“ der Benutzer ein Beispiel einer Instanz, keinen abstrakten Bauplan (Klasse). Dieser Prototyp kann dann weitere Instanzen von sich selbst erzeugen, die seinen Code teilen. Diese Form der Darstellung wurde von der Arbeit von Henry Lieberman inspiriert,Herausforderungen durch neue Programmierkonzepte 387ii “proceedings” — 2017/9/17 — 20:19 — page 388 — #388 ii i ii i der verdeutlichte, dass durch das Prinzip von Prototypen „Standards“ und Abweichungen von solchen intuitiv verständlich sind [ Li86]. Der verständnisfördernde Charakter des Prototypen-Konzepts wurde als didaktisch sinnvoll erfasst, sodass es in vielen blockbasierten Programmiersprachen, wie etwa Scratch undSnap! , Verwendung ﬁndet. Modrow zeigt auf, wie hier das objektorientiete Konzept der Vererbung über das Delegations-Modell realisiert werden kann [ Mo13 ]. Prinzipiell sind zwei Arten des Klonens zu unterscheiden: Das Klonen zur Laufzeit (durch Ausführung der entsprechenden Codeblöcke) und das Klonen zur Programmierzeit (durch „duplicate“-Befehl im Kontextmenü eines Objekts). Ersteres erscha  t eine exakte Kopie des Originals, die bei Programmende entfernt wird, während Letzteres einen permanenten Klon erscha  t, dessen Aussehen und Verhalten danach verändert werden können ohne das ursprüngliche Objekt zu beeinﬂussen (Abb. 1). Abb. 1: Visuelle Darstellung des Klon-Konzepts in Scratch [Sc17a] Abb. 2: Klasse und ihre Instanzen in GP Auch GP folgt der Idee des Prototyping, greift aber für die Darstellung auf das von Smalltalk bekannte und aus der textbasierten Programmierung verbreitete Klasse-Objekt-Konzept zurück, wie es beispielsweise in Java oder C++ implementiert wird. Die Abb. 2 ist ein Ausschnitt aus der Programmieroberﬂäche. Es ist eine Auﬂistung aller Klassen zu sehen, die im laufenden Projekt Verwendung ﬁnden und rechts davon eine Übersicht über die Instanzen dieser Klasse (und ihrem momentanen Aussehen). Für beide Bereiche gibt es +-Knöpfe, deren Betätigung eine neue Klasse bzw. eine Instanz von ihr erzeugt. Objekte derselben Klassen teilen sich alle den Code, der für diese Klasse deﬁniert wurde sie reagieren auf dieselben Ereignisse und führen dieselben Codeblöcke aus. Jedes Objekt ist dadurch die graﬁsche Instanz einer Klasse. Wird eine neue Klasse erzeugt, so wird gleichzeitig die erste Instanz dieser Klasse auf der Leinwand erscha  en, die somit als Prototyp fungiert. Existiert nur eine Instanz pro Klasse, so ist das Verhalten der Programmierumgebung funktional ähnlich zu Scratch – mit dem Unterschied, dass eine explizite Auswahl des Klassennamens aus der Liste (vgl. Abb. 2) notwendig ist, um die konkrete Instanz anwählbar zu machen. Werden von einer Klasse mehrere Instanzen erzeugt, machen sich die Unterschiede zu Scratch undSnap! bemerkbar: In GPbezieht sich der Code immer auf eine ganze Klasse. Wird dieser verändert, so ändert er sich für alle Instanzen dieser Klasse (analog zum Laufzeit-Klonen in Scratch/Snap! ).Scratch erlaubt hingegen zusätzlich, nach dem Klonen den Code eines Objektes zu ändern, ohne dabei den anderer Klone oder des „Originals“ zu beeinﬂussen (durch Klonen zum Programmierzeitpunkt).388 Sven Jatzlau, Ralf Romeikeii “proceedings” — 2017/9/17 — 20:19 — page 389 — #389 ii i ii iHerausforderungen durch neue Programmierkonzepte in blockbasierten Programmiersprachen 17 Es wird deutlich, dass die Frage, in welcher Form das Klassen/Objekt-Prinzip vermittelt werden soll, zentral ist. Die Unterschiede in der Darstellung von Vererbung und Klassen/Objekten müssen für eine didaktisch wertvolle Vermittlung beachtet und reﬂektiert werden. „Nested Sprites“ Das Konzept der „Nested Sprites“ ist ein gutes Beispiel dafür, dass visuelle Programmiersprachen neue Problemlöseansätze erö  nen (die im Unterricht thematisiert werden müssen). Es handelt sich hierbei um eine örtliche Verbindung von Objekten bzw. von „Sprites“ auf der Leinwand: Sie stehen in einer Teil-Ganzes-Beziehung zueinander und nehmen dadurch einen Platz in einer Objekthierarchie ein. Ein Objekt kann aus mehreren Teilen bestehen und selbst Teil eines Objektes sein. Die Rotationen und Bewegungen der beteiligten Objekte sind demnach voneinander abhängig (bewegt sich der Besitzer, so bewegen sich alle seine Teilobjekte mit ihm). Das Konzept ist charakteristisch für visuelle Sprachen, da es nur durch die visuelle Repräsentation von Objekten möglich gemacht wird (gäbe es keine Leinwand, um Objekte zu visualisieren, gäbe es auch das Konzept der verschachtelten Objekte nicht). Es kann beispielsweise verwendet werden, um Simulationen zu implementieren, wie etwa die mechanische Funktionsweise eines Verbrennungsmotors: Ein Teil bewegt sich, wodurch sich wiederrum andere Teile bewegen, sodass schließlich eine Verbrennung stattﬁndet (Abb. 3). Abb. 3: Vereinfachte Simulation eines Verbrennungsmotors aus GP InSnap! kann eine solche Beziehung zwischen Objekten durch Drag-and-drop erzeugt werden, sodass Objekte an andere Objekte angefügt werden. In GPmuss hierzu ein Objekt mit einem Anderen überlappen, woraufhin per Kontextmenü eine Zuweisung „attach“ verfügbar wird. „First class Strukturen“ Smalltalk, Morphic, Snap! undGPsetzen ein aus der funktionalen Programmierung bekanntes und mächtiges Konzept um, das durch die visuelle Programmierung intuitiv verständlich und damit gut handhabbar umgesetzt wird: Alle vorhandenen Strukturen und Objekte sind „ﬁrst class“. Strukturen und Objekte werden als „First class objects“ bezeichnet, wenn sie folgende Eigenschaften erfüllen (vgl. [HM17]): • sie können Werte von Variablen sein, • sie können Parameter und Rückgabewerte von Funktionen sein, • sie sind anonym (werden bei Erstellung nicht benannt), • sie können Teil eines Aggregats sein. Geprägt wurde der Begri  von Christopher Strachey, der um 1960 forderte, dass jederHerausforderungen durch neue Programmierkonzepte 389ii “proceedings” — 2017/9/17 — 20:19 — page 390 — #390 ii i ii i18 Sven Jatzlau, Ralf Romeike Datentyp einer Sprache „ﬁrst class data“ sein sollte [ Sc17b ], sodass jeder Datentyp völlig uneingeschränkt benutzbar ist. Dies ist eines der fundamentalen Prinzipien von Snap! . Durch die daraus resultierenden Anwendungsmöglichkeiten (wie etwa Listen von Listen) bieten sich neue Herangehensweisen und Lösungsmöglichkeiten für bekannte Probleme an. Beispielsweise können mapping-Funktionen über Listen durchgeführt werden oder Blöcke als Eingabeparameter für andere Blöcke fungieren. Entwicklermodus, Block-to-Text-Slider, Class Browser Diese Konzepte stehen bislang nur in der Umgebung GPzur Verfügung. Der Entwicklermodus stellt eine optional zuschaltbare Erweiterung der Funktionalität der Programmierumgebung dar. Bei aktivem Entwicklermodus werden einige Paletten erweitert, wie z. B. Variablen um den Typ script oder die „New Class“-Funktion um die „helper“-Variante. Auch der „Class Browser“ wird zugänglich: Hier ﬁndet sich der Systemcode von GP(näheres hierzu weiter unten). Die wohl interesanteste Erweiterung o  enbart sich als Schieberegler in der Menüleiste: ein stufenloser Regler der Codedarstellung von Blöcken zu Text. Dieser soll die Brücke zu textbasierten Programmiersprachen repräsentieren und die Äquivalenz der beiden Repräsentationen verdeutlichen – je nach subjektiver Präferenz kann der Benutzer seine Bedienung entweder blockbasiert oder textbasiert einstellen (vgl. Abb. 4). Abb. 4: Beispielcode in Blockund in Textmodus Fließende Übergänge ergeben sich aus der alternativen Bedienung mit der Tastatur. Wie Snap! bietet GPdie Möglichkeit, Codeblöcke durch Tastatureingaben (mit Autovervollständigung) zu erzeugen: Die Umgebung reagiert auf neu eingegebene Zeichen damit, dass alle verfügbaren Kategorien nach passenden Blöcken durchsucht und in einer Liste dargestellt werden. Der passendste Block wird stets ganz oben in der Liste angezeigt, und eine Bestätigung per Enter-Knopf fügt diesen an die momentan ausgewählte Stelle im Skript an. Die Kategorie, der der angefügte Block angehört, wird zudem direkt angewählt, sodass ähnliche Blöcke sofort sichtbar sind – eine Funktionalität, die Scratch nicht bietet. Dadurch ist eine vollständige Bedienung der Oberﬂäche durch die Tastatur möglich. Zweifellos ist dieser Eingabemodus, v.a. gepaart mit dem Block-zu-Text-Slider auch als Brücke zu textbasierten Programmiersprachen intendiert. Wenn beide Modi aktiviert sind, gibt die Benutzung das Gefühl, eine textbasierte Programmierumgebung mit starker Syntaxunterstützung zu verwenden (wie beispielsweise Strides in Greenfoot ). Hier zeigt sich erneut, dass GPals „Lösung“ dafür erscha  en wurde, dass das visuelle Programmieren390 Sven Jatzlau, Ralf Romeikeii “proceedings” — 2017/9/17 — 20:19 — page 391 — #391 ii i ii iHerausforderungen durch neue Programmierkonzepte in blockbasierten Programmiersprachen 19 nicht „echt“ erscheint, zu unprofessionell präsentiert wird und nicht wirklich übertragbar auf andere Programmiersprachen scheint. Das letzte Konzept, der Class Browser, verkörpert die Vision von GP, dass selbst komplexeste Projekte realisierbar sind – „high ceiling“ nach Seymour Papert. Im Class Browser sind alle Skripte gelistet, die in der Palette zu ﬁnden sind und darüber hinaus alle Skripte, die das interne Verhalten der Umgebung beschreiben. Der Class Browser macht es möglich nachzuvollziehen, wie die Funktionsweisen der Programmierumgebung bis zur untersten Ebene hin implementiert sind (Abb. 5); so lässt sich die Implementierungshierarchie von Skripten bis zur primitiven Ebene hin verfolgen. Nutzbar ist er dadurch beispielsweise, um vordeﬁnierte Skripte zu ändern, ergänzen oder zu löschen und somit eine eigene GP-Version völlig den eigenen Ansprüchen entsprechend zu erstellen. Abb. 5: Verwendung des Class Browsers: „implementations...“ Bei diesen Konzepten ist eine besondere Bedeutung für Schüler sichtbar: Anfangs werden komplexe Funktionen und Blöcke verborgen, sodass eine niedrige Einstiegshürde gegeben ist. Bei aktiviertem Entwickler-Modus wird dann die selbstständige Erkundung der Programmierumgebung und ihres Codes durch den Class Browser möglich, sodass interessierten Schülern kaum Grenzen gesetzt sind. Gleichzeitig ermöglicht der Block-zu-Text-Schalter eine subjektive Regelung der Programmieroberﬂäche, sodass Lerner sie je nach Präferenz, Kenntnisstand oder Programmierfähigkeit individuell anpassen können. 5 Fazit Die wachsende Präsenz blockbasierter Programmiersprachen kann für Schüler große Vorteile mit sich bringen. Dennoch birgt diese neuartige Form der Programmierung auch Herausforderungen durch neue Konzepte, die verstanden und erforscht werden müssen. Prinzipien wie der nichtatomare Interpreter, der Skripte verlangsamt ausführt, sodass diese intuitiver ablaufen oder Nested Sprites, die beinahe ausschließlich auf der visuellen Repräsentation von Objekten basieren, sind neu und aus didaktischer Sicht noch praktisch unerforscht. Trotz der intuitiven Natur visueller und insbesondere blockbasierter Programmiersprachen ist hier also noch viel Forschungsarbeit zu leisten bisher wurden erst Ansätze für eine Didaktik visueller Programmiersprachen geliefert.Herausforderungen durch neue Programmierkonzepte 391ii “proceedings” — 2017/9/17 — 20:19 — page 392 — #392 ii i ii i20 Sven Jatzlau, Ralf Romeike Literaturverzeichnis [DHH15] Dwyer, H.; Hill, C.; Hansen, A. et al.: Fourth Grade Students Reading Block-Based Programs: Predictions, Visual Cues, and A  ordances. In: Proceedings of the eleventh annual International Conference on International Computing Education Research. ACM, S. 111–119, 2015. [GR83] Goldberg, A.; Robson, D.: Smalltalk-80: the language and its implementation. AddisonWesley Longman Publishing Co., Inc., 1983. [HM17] Snap! Reference manual online, snap.berkeley.edu/SnapManual.pdf, Stand: 09.06.2017. [Ka96] Kay, A.: The early history of Smalltalk. In: History of programming languages—II. ACM, S. 511–598, 1996. [Le10] Lewis, C.: How programming environment shapes perception, learning and goals: logo vs. scratch. In: Proceedings of the 41st ACM technical symposium on Computer science education. ACM, S. 346–350, 2010. [Li86] Lieberman, H.: Using prototypical objects to implement shared behavior in objectoriented systems. In: ACM Sigplan Notices. Jgg. 21. ACM, S. 214–223, 1986. [LKG17] Scratch: Statistics, scratch.mit.edu/statistics/, Stand: 09.06.2017. [Mo11] Modrow, E.: Visuelle Programmierung – oder: Was lernt man aus Syntaxfehlern? In (Thomas, M., Hrsg.): Informatik in Bildung und Beruf. Jgg. 14 in Lecture Notes in Informatics (LNI), Köllen, Bonn, S. 27–36, 2011. [Mo13] Informatik mit BYOB / Snap!, www.uni-goettingen.de/de/informatik-mitbyob/423680.html, Stand: 09.06.2017. [PB15] Price, T.; Barnes, T.: Comparing textual and block interfaces in a novice programming environment. In: Proceedings of the eleventh annual International Conference on International Computing Education Research. ACM, S. 91–99, 2015. [Re02] Resnick, M.: Rethinking learning in the digital age. The Global Information Technology Report: Readiness for the Networked World. Oxford University Press, 2002. [RMH14] Ruf, A.; Mühling, A.; Hubwieser, P.: Scratch vs. Karel: impact on learning outcomes and motivation. In: Proceedings of the 9th Workshop in Primary and Secondary Computing Education. ACM, S. 50–59, 2014. [RMMH09] Resnick, M.; Maloney, J.; Monroy-Hernández, A. et al.: Scratch: programming for all. Communications of the ACM, 52(11):60–67, 2009. [Sc17a] Scratch-Wiki: Cloning, wiki.scratch.mit.edu/wiki/Cloning, Stand: 09.06.2017. [Sc17b] Scratch-Wiki: Snap!, wiki.scratch.mit.edu/wiki/Snap, Stand: 09.06.2017. [St15] Strecker, K.: Graﬁsche Programmiersprachen im Abitur. In (Jens Gallenbacher, Hrsg.): INFOS 2015: Informatik allgemeinbildend begreifen. Jgg. 16 in Lecture Notes in Informatics (LNI), Köllen, Bonn, S. 293–300, 2015. [SWM13] Squeak-Wiki: Morph, wiki.squeak.org/squeak/1820, Stand: 09.06.2017. [WW15] Weintrop, D.; Wilensky, U.: Using Commutative Assessments to Compare Conceptual Understanding in Blocks-based and Text-based Programs. In: ICER. Jgg. 15, S. 101–110, 2015.392 Sven Jatzlau, Ralf Romeikeii “proceedings” — 2017/9/17 — 20:19 — page 393 — #393 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017    1 Alltagsvorstellungen in der Informatik: Erhebungsmetho-dik und Implikationen für den Unterricht Michael T. Rücker1, Nils Pancratz2, Carolin Gold-Veerkamp3, Niels Pinkwart4, Torsten Brinda5 Abstract: Ein zentrales Konzept jeder konstruktivistisch geprägten Auffassung von Lernen ist, dass das Vorwissen, die Präkonzepte und ggf. Fehlvorstellungen der Lernenden einen direkten Einfluss auf den Lernprozess haben: sowohl negativ als auch positiv. Speziell für die Informatik gilt, dass Lernende heutzutage von Beginn an in einer Welt aufwachsen, die von informatischen Artefakten und Systemen nahezu vollständig durchdrungen ist. Sie beobachten sie, interagieren mit ihnen und formen so Vorstellungen über ihre Funktionsweisen und Eigenschaften. Sie bilden somit bereits im Alltag und vor dem Beginn jeglicher Schulbildung kohärente Konzeptionen über zentrale Gegen-stände und Inhalte der Informatik. Im Rahmen dieses Workshops werden zunächst verschiedene methodische Ansätze und erste Ergebnisse zu Erhebungen solcher Lernervorstel-lungen vorgestellt. Anschließend sollen diese anhand von drei Leitfragen verglichen und diskutiert werden: Welche Stärken und Schwächen haben die jeweils verwendeten empirischen Methoden bei der Erhebung von Lernervorstellungen in der Informatik? Wie können sie sich ggf. sinnvoll ergänzen? Welche Implikationen haben die erhobenen Vorstellungen für die Unterrichtspraxis? Keywords: Konstruktivismus, Lernervorstellungen, Alltagsvorstellungen, Forschungsmethodik, Unterrichtspraxis 1 Alltagsvorstellungen in der Informatik Informatische Artefakte, Produkte und Systeme sind heutzutage allgegenwärtig. Sie sind Teil der unmittelbaren sowie medialen Umwelt von Kindern und Jugendlichen. Sie be-obachten sie, interagieren mit ihnen und formen so mentale Modelle und Konzeptionen darüber, wie diese Artefakte und Systeme funktionieren, welche Eigenschaften sie haben und wie sie ggf. zusammenhängen. Mit anderen Worten, sie formen bereits im Alltag ko-härente Vorstellungen und Erklärungsmodelle für Dinge, die ihnen der Informatik-unter-richt vermitteln soll. Ein zentrales Konzept jeder konstruktivistisch geprägten Auffassung                                                              1 Humboldt-Universität zu Berlin, Institut für Informatik, Unter den Linden 6, 10099 Berlin, rueckerm@infor-matik.hu-berlin.de 2 Carl von Ossietzky Universität Oldenburg, Didaktik der Informatik, Uhlhornsweg 84, 26129 Oldenburg, nils.pancratz@uni-oldenburg.de 3 Hochschule Aschaffenburg, Fakultät Ingenieurwissenschaften, Würzburger Straße 45, 63743 Aschaffenburg, carolin.gold-veerkamp@h-ab.de 4 Humboldt-Universität zu Berlin, Institut für Informatik, Unter den Linden 6, 10099 Berlin, pinkwart@infor-matik.hu-berlin.de 5 Universität Duisburg-Essen, Didaktik der Informatik, Schützenbahn 70, 45127 Essen, torsten.brinda@uni-due.de I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 393ii “proceedings” — 2017/9/17 — 20:19 — page 394 — #394 ii i ii i 2    M. T. Rücker, N. Pancratz, C. Gold-Veerkamp, N. Pinkwart, T. Brinda  von Lehren und Lernen ist, dass derartige Alltagsund ggf. Fehlvorstel-lungen einen sig-nifikanten Einfluss auf den Lernprozess haben. Als „points of departure“ [Du07] bilden sie einerseits notwendige Voraussetzungen dafür, dass Lernen überhaupt stattfinden kann, können aber andererseits auch im Widerspruch zum Lernstoff stehen und den Lernprozess somit behindern. Es wird dann zwar gelernt, aber nicht unbedingt das, was beabsichtigt wurde.  Am ausführlichsten untersucht ist diese Thematik in der Didaktik der Naturwissenschaf-ten. Duit hat hier eine ausführliche Bibliographie zusammengestellt [Du09]. Aber auch in der Informatik existiert ein zunehmendes Interesse und somit eine wachsende Literatur-basis zu Alltagsund Fehlvorstellungen [Be15, DWZ12, Kn11, Ra13, RP16, Se13]. Da es sich bei derartigen Vorstellungen um latente – d.h. nicht direkt beobachtbare – Konstrukte handelt, ist die Frage nach geeigneten Erhebungsmethoden von zentraler Bedeutung. Die Ansätze und somit auch die generierten Daten, die dazu in verschiedenen Arbeiten zum Einsatz kommen, rangieren von rein quantitativen und statistischen Verfahren [Be15], über Freitextfragebögen [Ra13] bis hin zu rein qualitativen und hoch interpretativen Inter-viewanalysen [Se13]. Die allgemeinen Stärken und Schwächen quantitativer und qualita-tiver Forschung sind hinreichend bekannt. Sie werden jedoch selten im konkreten Kontext ihrer jeweiligen Anwendung diskutiert. Letztlich schafft der konkrete Untersuchungsge-genstand weitere Anforderungen an ein Erhebungsinstrument. Angesichts dessen wird die Entscheidung für oder gegen eine bestimmte Methode leider nur selten explizit begründet oder gar im Vergleich zu möglichen Alternativen evaluiert. Welche Einsichten und Aus-sagen ermöglichen ver-schiedene methodische Ansätze überhaupt im konkreten Kontext der Erhebung von Lernervorstellungen? Sind einige Ansätze eventuell inhärent ungeeig-net zur Erhebung derartiger latenter Konstrukte? Nicht zuletzt bleiben viele Arbeiten nach wie vor sehr vage bei der Frage, welche Konsequenzen ihre jeweils erhobenen Vorstel-lungen nun für die entsprechende Unterrichtspraxis haben. Ziel dieses Workshops ist es, die Fragen nach geeigneten Erhebungsmethoden sowie der unterrichtlichen Relevanz von Lernervorstellungen in der Informatik weiterführend zu er-örtern. Dazu sollen verschiedene methodische sowie inhaltliche Ansätze einander gegen-übergestellt werden. Es soll herausgearbeitet werden, welche Vorund Nachteile die je-weils angewandten Methoden im konkreten Kontext der Erhebung von Lerner-vorstellun-gen in der Informatik haben und wie sie sich ggf. komplementieren können. Nicht zuletzt soll diskutiert werden, welche Implikationen die jeweils erhobenen Vorstellungen nun für die Praxis des Informatikunterrichts oder -studiums haben. 2 Methodische Ansätze und erste Ergebnisse Die im Folgenden vorgestellten Arbeiten wurden von den verschiedenen Co-Autor/innen dieses Beitrags bzw. innerhalb der jeweiligen Arbeitsgruppen an insgesamt vier verschie-denen deutschen Hochschulen unabhängig voneinander konzipiert und durchgeführt. 394 Michael T. Rücker et al.ii “proceedings” — 2017/9/17 — 20:19 — page 395 — #395 ii i ii i Workshop zu Alltagsvorstellungen in der Informatik    3 Ihnen liegen zwar einerseits sehr ähnliche Fragestellungen in Bezug auf Lernervorstellun-gen in der Informatik zugrunde. Sie verfolgen jedoch andererseits sehr unterschiedliche methodische Ansätze und ermöglichen daher verschiedene Perspektiven auf bzw. Einsich-ten in den Untersuchungsgegenstand. 2.1 Focus Interviews und Grounded Theory Der erste Ansatz basiert auf der Theorie der konzeptuellen Kategorisierung [Mu04] und verwendet Focus Interviews und Methoden der Grounded Theory [Ch11] zur Erhebung von Schülervorstellungen zu informatischen Artefakten bzw. Geräten. Die zentrale For-schungsfrage ist: Welche technischen Geräte kategorisieren Schülerinnen und Schüler als „informatisch“ und wie gehen sie dabei vor? Zur Beantwortung dieser Frage wurden 28 Schülerinnen und Schüler verschiedener Al-tersgruppen (Klasse 5 bis 13) und mit unterschiedlichem Wahlverhalten bzgl. des Infor-matikunterrichts individuell interviewt. In den Interviews wurden ihnen insgesamt 33 Bildkarten vorgelegt, auf denen verschiedene alltägliche und weniger alltägliche techni-sche Geräte abgebildet waren, u.a. ein Taschenmesser, eine Plasmalampe, ein Toaster, ein Smartmeter, eine Waschmaschine, ein modernes Auto, ein Smartphone und der Curiosity Mars-Rover. Die Bilder waren nicht beschriftet. Den Proband/innen wurden folgende drei Aufgaben in unterschiedlicher Reihenfolge gestellt: „Bitte lege all die Dinge zusammen in eine Gruppe, ... • ...von denen du sagen würdest, dass sie mit Informatik zu tun haben oder dass ein Informatiker oder eine Informatikerin Ahnung davon hat oder sich damit be-schäftigen würde. • ...von denen du sagen würdest, dass sie eine Art Computer sind oder einen klei-nen Computer enthalten. • ...von denen du sagen würdest, dass sie programmierbar sind.“ Die Teilnehmenden wurden zudem angehalten, ihre Gruppierungen zu erläutern und zu begründen, warum sie welche Dinge zur Gruppe dazu gelegt haben oder nicht. Die Inter-views wurden videographiert und anschließend transkribiert. Bei der Analyse und Inter-pretation der verschiedenen Gruppierungen und insbesondere der entsprechenden Argu-mentationsprozesse traten verschiedene Phänomene bzw. Vorstellungen hervor. Für die Eingruppierung eines Artefaktes als programmierbar mussten in der Regel Eigen-schaften wie Zeitmessung, Rechnen oder die Fähigkeit, auf bestimmte Bedingungen zu reagieren, vorhanden sein. Derartige Funktionen waren für die Lernenden häufig nicht unmittelbar transparent bzw. nachvollziehbar. Folglich musste irgendwas „dahinter ste-cken“ – eben ein Programm: „Ich weiß nicht, wie das sonst funktionieren soll.“ Simplere Funktionen wie das Drehen eines Rotors oder das Erhitzen eines Drahtes waren leichter Alltagsvorstellungen in der Informatik: Erhebungsmethodiken 395ii “proceedings” — 2017/9/17 — 20:19 — page 396 — #396 ii i ii i 4    M. T. Rücker, N. Pancratz, C. Gold-Veerkamp, N. Pinkwart, T. Brinda  nachvollziehbar: „Da sind keine großen Einstellungen dahinter. [...]  Du drückst es runter und dann geht durch die Mechanik irgendwie die Wärme an.“   Für die Eingruppierung als informatisch oder Computer reichten aber auch die oben ge-nannten Funktionen häufig nicht aus. Hier waren komplexere Fähigkeiten gefordert, wie Multifunktionalität, Adaptivität oder Netzwerkkommunikation. Die Funktionen einer Waschmaschine, die man nicht „umprogrammieren“ kann, „kann ein Steuerelektroniker machen, das muss jetzt kein Informatiker sein.“ Simple Programme, Schaltkreise, Platinen oder eingebettete Rechner wurden häufig als nicht mächtig genug wahrgenommen um als „echte“ Computer oder als informatisch angesehen zu werden. 2.2 Repertory Grid Interviews Ein weiterer Ansatz befasst sich mit der Entwicklung, Durchführung und Analyse von Repertory Grid Interviews, um Schülervorstellungen von der Funktionsweise und dem Aufbau des Internets zu untersuchen. Basierend auf den allgemeinen Grundlagen von Re-pertory Grid Interviews [Fr95, Be85, Ke55] und inspiriert von den wenigen fachdidakti-schen Untersuchungen, in denen die Methode bereits verwendet wurde [bspw. BLP03, Wi01, BJS98], befragten wir in einer ersten Untersuchung fünf 11bis 13-jährige Schüler in Einzelinterviews. Dabei wurden den Versuchspersonen zwölf Elemente (Internet, Com-puter, Server, Webseite, IP-Adresse, E-Mail, Kabel, Google, Daten, Router, (Daten-)Pa-kete und (Chat-)Programm) vorgelegt, die zum einen das Grundgerüst an Begriffen aus-machen, die zu einer wissenschaftlichen Erklärung des Internets vonnöten sind, und zum anderen denjenigen Phänomenen und Artefakten entsprechen, die Jugendliche hauptsäch-lich mit dem Internet in Verbindung bringen. Zur Erhebung der Konstrukte wurden den Befragten iterativ je drei Elemente vorgelegt, mit der Aufforderung zu erörtern, inwiefern sich zwei dieser drei Elemente in einer Eigenschaft ähneln, in der sie sich vom dritten unterscheiden. Die Aussagen wurden auf Ton aufgezeichnet und in Matrizen (Grids), die zum Ende der Interviews von den Versuchsteilnehmern vervollständigt wurden, festge-halten. Im Zuge der Auswertung wurden zusätzlich Liniendiagramme erstellt, mit denen sich die Strukturen der Repertory Grids ohne nennenswerten Informationsverlust grafisch darstellen lassen und Ordnungsstrukturen und Zusammenhänge leichter zugänglich ge-macht werden können [He09, BLP03]. Ein Vergleich mit Ergebnissen vorheriger Untersuchungen [DWZ12, Se13] zeigte, dass es mit Hilfe der durchgeführten Repertory Grid Interviews möglich war, typische Fehl-vorstellungen und Misskonzepte vor allem von Servern, IP-Adressen und Google und zum Aufbau des Internets festzustellen. Dies zeigt, dass die Repertory Grid Methode durchaus eine interessante Alternative zu herkömmlichen Methoden zur Forschung nach Schüler-vorstellungen darstellt. Weitergehende Forschungen zur Analyse von kognitiven Ord-nungsstrukturen und – im Speziellen – Teil-Ganzes-Beziehungen, die Lernerinnen und Lerner von informatischen Artefakten herstellen, mit Hilfe der Repertory Grid Methode sind zum Zeitpunkt der Niederschrift dieses Artikels in Planung. 396 Michael T. Rücker et al.ii “proceedings” — 2017/9/17 — 20:19 — page 397 — #397 ii i ii i Workshop zu Alltagsvorstellungen in der Informatik    5 2.3 Halbstrukturierter Online-Fragebogen Aufgrund der Relevanz von Schlagworten wie „Big Data“ und „Datenschutz“ für die in-formatische Bildung in Schulen und deren Bezug zum Thema „Datenbanken“ wurden im Rahmen einer empirischen Untersuchung [Te16] im Jahr 2016 Schülervorstellungen von relationalen Datenbanken untersucht. Zur Erhebung wurde ein halbstrukturierter Online-Fragebogen eingesetzt, welcher zum einen Fragen zu Vorstellungen von Datenbanken und deren Anwendung, zum anderen Fragen zu informatischen Phänomenen mit indirektem Datenbankbezug enthielt. Im Einzelnen wurde gefragt: 1. Sicherlich hast du schon einmal etwas von „Datenbanken“ gehört. Wie stellst du dir so eine Datenbank eigentlich vor? Beschreibe deine Vorstellungen bitte in wenigen Sätzen. 2. Datenbanken speichern alle möglichen Arten von Daten. Welche Eigenschaften einer Datenbank hältst du für besonders wichtig? 3. Im Alltagsleben spielen Datenbanken eine wichtige Rolle. Nenne bitte einige Beispiele, wo dir in deinem täglichen Leben Datenbanken begegnen. 4. Im Folgenden werden dir sechs Situationen beschrieben, die du vielleicht selber schon erlebt hast. Erkläre bitte jeweils kurz, wie es dazu gekommen ist!  Exemplarisch werden zwei dieser Situationen angegeben: • Du möchtest dir bei einem Onlinehändler (z.B. Amazon) eine neue Smartphone-Hülle kaufen. Unten auf der Seite siehst du die Mitteilung: „Kunden, die diese Hülle kauften, haben auch …. gekauft.“ • Du bist auf einem Ausflug in einer fremden Stadt unterwegs. Dein Smartphone zeigt dir an, wo es in deiner unmittelbaren Umgebung die nächste Eisdiele gibt.  Die Auswertung der Fragebögen erfolgte mittels qualitativer Inhaltsanalyse nach Mayring und lieferte in induktiver Vorgehnsweise drei verschiedene Kategoriensysteme zu ver-schiedenen Aspekten der Betrachtung der Thematik. Besonders interessant ist das Kate-goriensystem zur ersten Frage, welches die Struktur des ANSI/SPARC 3-Ebenen-Modell von Datenbankmanagementsystemen widerspiegelt. Dabei werden interne, konzeptuelle und externe Aspekte unterschieden und zwar einmal aus informatisch-fachlicher Sicht und einmal aus Sicht deren lebensweltlicher Entsprechung. 2.4 Halbstrukturierte Interviews Gemäß den Ergebnissen der jährlichen JIM-Studien (www.mpfs.de) kann im Jahr 2017 von einer nahezu flächendeckenden Verbreitung und recht intensiven, täglichen Nutzung von Smartphones durch Jugendliche ausgegangen werden. Smartphones werden schon seit einiger Zeit in der informatischen Bildung sowohl als Medium, als auch als Unterrichts-gegenstand betrachtet. Entwicklungen wie der MIT App Inventor nutzen die große Popu-larität für die Initiierung von Informatikinteresse aus. Für entsprechenden Unterricht nach dem Modell der didaktischen Rekonstruktion ist es deshalb wünschenswert, genauere Alltagsvorstellungen in der Informatik: Erhebungsmethodiken 397ii “proceedings” — 2017/9/17 — 20:19 — page 398 — #398 ii i ii i 6    M. T. Rücker, N. Pancratz, C. Gold-Veerkamp, N. Pinkwart, T. Brinda  Kenntnisse über Schülervorstellungen in diesem Bereich zu erhalten. In einer empirischen Untersuchung [Br16] wurde deshalb eine explorative Studie zu Schülervorstellungen von Smartphones durchgeführt mit dem Ziel, einen ersten Überblick über bestehende Vorstel-lungen zu erhalten. Dazu fanden zwölf halb-strukturierte Interviews mit einer Reihe von Gymnasialschülern statt. Inhaltliche Schwerpunkte der Interviews waren: • drahtlose Netzverbindung (Netzwerkstruktur von Mobilfunknetzen, Adressie-rung in Mobilfunknetzen, Übertragungsmedium, Handover, Internetprotokoll) • Apps (Definition, Aufruf, Herkunft, Installation) • Steuerung mittels Touchscreens (Bedienelemente, Touchscreen, Programmar-chitektur) • kompakte Bauart (Kompaktheit der Hardware, technische Grenzen) Acht der Interviews wurden ausgewählt, transkribiert und einer strukturierenden, qualita-tiven Inhaltsanalyse nach Mayring unterzogen. Die Kategorienbildung erfolgte deduktiv, basierend auf den Schwerpunkten des Interviewleitfadens. Innerhalb der Kategorien wur-den inhaltlich zusammengehörige Vorstellungen zusammengefasst.  2.5 Spezielle Items Basierend auf einer Arbeit zur Untersuchung von Kategorisierungsstrategien in der Bio-logie wurde eine empirische Studie durchgeführt, in welcher Schülerinnen und Schüler verschiedener Altersgruppen dazu aufgefordert wurden, rund 20 Begriffe aus der Infor-matik (darunter: Computer, Internet, Roboter, Bildschirm, YouTube, Festplatte etc.) durch verschiedenfarbige Unterstreichung Kategorien zuzuordnen und diese Kategorien dann anschließend selbst zu benennen. Vorschläge für fünf Farben und damit fünf Kategorien waren angegeben, ferner Platz für eine weitere Kategorie. Darüber hinaus wurden die Teil-nehmenden gefragt, welche Begriffe ihrer Meinung nach in der Liste fehlten und welche ihrer Meinung nach nicht kategorisierbar waren. Insgesamt wurden über 400 Fragebögen erfasst und die erstellten Kategorien im Hinblick auf Begriffszuordnungen sowie erkennbare Kategorisierungsstrategien analysiert. Eine weiterführende Analyse mittels Clusteranalyse ist zum Zeitpunkt des Verfassens dieses Textes in Vorbereitung.  2.6 Pretest und Grounded Theory Betrachtet man die Hochschulbildung, könnte man vermuten, dass Lernende ein differen-zierteres Bild der Informatik besitzen, da sie sich – vermeintlich – bewusst für ein infor-matiknahes Studium entschieden haben. In diesen Studiengängen besitzt v. a. das Software Engineering (SE) einen hohen Stellenwert.  Das zunehmende wissenschaftliche Interesse an Schülervorstellungen in der Informatik 398 Michael T. Rücker et al.ii “proceedings” — 2017/9/17 — 20:19 — page 399 — #399 ii i ii i Workshop zu Alltagsvorstellungen in der Informatik    7 (vgl. Kap. 1) lässt sich kaum auf SE übertragen [Su10, Iv06]. Daher gilt es, eine explora-tive Grundlagenforschung basierend auf der Grounded Theory [Ch11] mit der Frage „Wel-che Vorstellungen haben Studierende zu Software Engineering?“ zu begründen. In einem Pretest wurden Erstsemester6 (N = 217) implizit gebeten zu unterscheiden: „Bitte beschreiben Sie die nachfolgenden drei Begriffe (Informatik, Programmieren und SE) so genau wie möglich mit Ihren eigenen Worten.“ Die handschriftlichen Freitexte wurden im Nachhinein digitalisiert und offen kodiert [Ch11]. Bei der anschließenden Analyse fällt auf, dass… … quantitativ gesehen, beim Begriff „SE“ die wenigsten Antworten – unabhängig vom Studienfach – gegeben wurden. So haben 18 %7 das Freitextfeld leer gelassen. … der Terminus Informatik mit dem Computer/Rechner/PC, der Tätigkeit des Program-mierens und mit der Daten-/Informationsverarbeitung assoziiert wurde. … der Begriff Informatik umschrieben werden kann als „Allgemein alles, was mit Soft-ware zu tun hat“ oder „Alles, was mit Computern zu tun hat“.  … die Beschreibung der Studierenden zu SE zeigt, dass damit ein Entwicklungsprozess gemeint ist, dessen Ergebnis eine Software ist, die programmiert wird. Vergleicht man dies mit der Erklärung zum Programmieren, fallen kaum Unterschiede auf: Hier ent-steht ebenfalls eine Software durch die Tätigkeit des Schreibens mittels einer Program-miersprache.8 Zudem wird hier ebenfalls eine Entwicklungstätigkeit einbezogen. Es lassen sich demnach einige Schlussfolgerungen ziehen: • Es scheint, dass viele Studierende keine konkrete Vorstellung von SE haben. • Außerdem scheinen die Studierenden, die über ein Bild von SE verfügen, keine großen Unterscheide zum Programmieren aufzeigen zu können. • Weiterhin könnte man inferieren, dass Informatik für viele Studierende ein Ober-begriff für Computer, Software etc. darstellt. Um validere Aussagen treffen zu können, sollten weitere Gruppen befragt werden, z. B. Studierende der Informatik/Ingenieurwissenschaften anderer Hochschulen. Somit wäre es möglich die bisherigen Daten in Form einer Querschnittstudie auszuweiten.                                                              6 Studiengänge: Mechatronik (N = 80), Elektround Informationstechnik (N = 48) und Informatik (N = 89).  7 Im Vergleich dazu haben 100 % der Befragten den Begriff Programmieren beschrieben und nur 6 % keine Antworten zum Fachwort Informatik gegeben. 8 Umfasst sowohl Nennungen des Überbegriffs wie auch einzelner konkreter Sprachen (z. B. C, C++, Java). Alltagsvorstellungen in der Informatik: Erhebungsmethodiken 399ii “proceedings” — 2017/9/17 — 20:19 — page 400 — #400 ii i ii i 8    M. T. Rücker, N. Pancratz, C. Gold-Veerkamp, N. Pinkwart, T. Brinda  3 Aufbau des Workshops Im Rahmen des Workshops sollen die oben angeführten Arbeiten zunächst in Form von etwa 10-minütigen Kurzvorträgen etwas genauer vorgestellt und vor allem auch mittels konkretem Datenmaterial illustriert werden. Der Workshop ist zudem offen für weitere Beiträge von anderen Teilnehmerinnen und Teilnehmern, die ihre eigenen Ansätze oder auch eigene Erfahrungen aus der Praxis präsentieren und zur Diskussion stellen wollen. Im Anschluss sollen alle präsentierten Beiträge hinsichtlich der bereits genannten Leitfra-gen verglichen und diskutiert werden: 1. Was sind allgemeine Stärken und Schwächen der verschiedenen Ansätze hin-sichtlich der Erhebung von Lernervorstellungen in der Informatik? 2. Wie unterscheiden sich die Ansätze hinsichtlich der Qualität der Aussagen, die auf ihrer Basis über Lernervorstellungen möglich sind und wie können sie sich gegebenenfalls ergänzen? 3. Welche Implikationen haben die vorgestellten Lernervorstellungen für die Praxis des Informatikunterrichts bzw. -studiums? Literaturverzeichnis [Be85] Beail, Nigel: Repertory Grid Technique and personal constructs: applications in clinical & educational settings. Croom Helm, London [et.al.], 1985. [Be15] Bergner, Nadine: Konzeption eines Informatik-Schülerlabors und Erforschung dessen Effekte auf das Bild der Informatik bei Kindern und Jugendlichen. Dissertation, RWTH Aachen, 2015. [BJS98] Baxter, Irene A.; Jack, Frances R.; Schröder, Monika J.A.: The use of Repertory Grid Method to elicit perceptual data from primary school children. Food Quality and Prefe-rence, 9(1 2): S. 73–80, 1998. [BLP03] Bruder, Regina; Lengnink, Katja; Prediger, Susanne: Wie denken Lehramtsstudierende über Mathematikaufgaben? Ein methodischer Ansatz zur Erfassung subjektiver Theo-rien mittels Repertory-Grid-Technik. Mathematica Didactica, 1(26): S. 63–85, 2003. [Br16] Braun, Friederike Victoria: Schülervorstellungen von Smartphones. Schriftliche Haus-arbeit im Rahmen der Ersten Staatsprüfung für das Lehramt an Gymnasien/Gesamtschu-len. Universität Duisburg-Essen, 2016. [Ch11] Charmaz, Kathy: Constructing Grounded Theory. SAGE Publication, 1. Aufl., 2011. [Du07] Duit, Reinders: Science education research internationally: Conceptions, research meth-ods, domains of research. Eurasia Journal of Mathematics, Science & Technology Edu-cation, 3(1), 3-15, 2007 400 Michael T. Rücker et al.ii “proceedings” — 2017/9/17 — 20:19 — page 401 — #401 ii i ii i Workshop zu Alltagsvorstellungen in der Informatik    9 [Du09] Duit, Reinders: Bibliography: Students’ and Teachers’ Conceptions and Science Educa-tion, 3 2009. Last accessed: 07.11.2016. [DWZ12] Diethelm, Ira; Wilken, Henning; Zumbrägel, Stefan: An investigation of secondary school students’ conceptions on how the Internet works. In: Proceedings of the 12th Koli Calling International Conference on Computing Education Research. ACM, S. 67–73, 2012. [Fr95] Fromm, Martin: Repertory Grid Methodik: ein Lehrbuch. Weinheim: Dt.-Studien-Verl., 1995. [He09] Helmerich, Markus Alexander: Liniendiagramme in der Wissenskommunikation Eine mathematisch-didaktische Untersuchung. Dissertation, Technische Universität, Darm-stadt, 2009. [Iv06]  Ivins, Jim; von Konsky, Brian R.; Cooper, David; Robey, Michael: “Software Engineers and Engineering: A Survey of Undergraduate Preconceptions” In: Frontiers in Educa-tion. 36th Annual Conference, S. 6-11, 2006.  [Ke55] Kelly, George A.: The psychology of personal constructs. Norton, New York, 1955. [Kn11] Knobelsdorf, Maria: Biographische Lernund Bildungsprozesse im Handlungskontext der Computernutzung. Dissertation, FU Berlin, 2011. [Mu04] Murphy, Gregory L.: The Big Book of Concepts. MIT Press, 2004. [Ra13] Rabel, Magnus: Grundvorstellungen zu Klassen und Objekten. In: Breier, Norbert; Ste-chert, Peer; Wilke, Thomas: Informatik erweitert Horizonte. Köllen, Bonn, S. 57–66, 2013. [RP16] Rücker, Michael T.; Pinkwart, Niels: Review and Discussion of Children’s Conceptions of Computers. Journal of Science Education and Technology, 25(2), 2016. [Se13] Seifert, Oliver; Sauck, Tony; Schwarzbach, Maximilian; Lerch, Christopher; Weinert, Martin; Knobelsdorf, Maria: “Ich glaube, Google ist so was wie eine Vorhalle des Inter-nets” – Erste Ergebnisse einer qualitativen Untersuchung von Schüler-vorstellungen von der Suchmaschine Google. In: Breier, Norbert; Stechert, Peer; Wilke, Thomas: Informa-tik erweitert Horizonte. Köllen, Bonn, S. 45–56, 2013. [Su10]  Sudol, Leigh Ann; Jaspan, Ciera: “Analyzing the Strength of Undergraduate Miscon-ceptions About Software Engineering” In: Sixth International Workshop on Computing Education Research, ser. ICER ’10. New York, NY, USA: ACM, S. 31–40, 2010. [Te16] Terjung, Torsten: Schülervorstellungen von relationalen datenbanken: Eine empirische Untersuchung. Masterarbeit. Universität Duisburg-Essen, Fakultät für Wirtschafts-wis-senschaften, 2016. [Wi01] Williams, Steven R.: Predications of the Limit Concept: An Application of Repertory Grids. Journal for Research in Mathematics Education, 32(4): S. 341–367, 2001. Alltagsvorstellungen in der Informatik: Erhebungsmethodiken 401ii “proceedings” — 2017/9/17 — 20:19 — page 402 — #402 ii i ii iii “proceedings” — 2017/9/17 — 20:19 — page 403 — #403 ii i ii iPosterii “proceedings” — 2017/9/17 — 20:19 — page 404 — #404 ii i ii iii “proceedings” — 2017/9/17 — 20:19 — page 405 — #405 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017  Blended-Learning-Module für ein Lehrerfortbildungskonzept zum Informatikunterricht Kensuke Akao1 Abstract: Der Fortbildungsbedarf für Informatiklehrkräfte ist als hoch einzuschätzen, doch sehen viele Lehrkräfte Hürden, um an Fortbildungen teilzunehmen. Zwar ist die Flexibilität bezüglich Zeit und Ort eine Stärke von E-Learning, aber es ist noch ungeklärt, ob E-Learning einen wesentlichen Beitrag zur grundständigen Ausbildung von Informatiklehrkräften sein kann. Wir untersuchen das Potential von Blended-Learning für die Fortbildung von Informatiklehrkräften unter Verwendung von Prototyp-Modulen. Ziel ist die Entwicklung eines Lern-/Lehrdesigns für den Einsatz von E-Learning in Blended-Learning Szenarien, um höhere Teilnahmechancen an einer Informatik-Lehrerfortbildung zu schaffen. Keywords: Lehrerfortbildung, Informatikunterricht, E-Learning, Blended-Learning, Mediendidaktik, Backup, Datenschutz 1 Chancen und Probleme von E-Learning für Fortbildungen In Nordrhein-Westfalen (NRW) wurden viele Informatiklehrkräfte nachqualifiziert, besonders in der Sekundarstufe I (Sek-I). Oft reicht das Fachwissen nachqualifizierter Lehrkräfte für einen anspruchsvollen und professionellen Informatikunterricht, der wirklich den Vorgaben und Zielen des Kernlehrplans gerecht wird, nicht aus. Zusätzlich fällt es Lehrkräften oft aus organisatorischen Gründen schwer an Lehrerfortbildungen teilzunehmen, die ihren Unterricht verbessern könnten.  Die zeitliche und örtliche Flexibilität von E-Learning ist ein häufiger Vorschlag zur Lösung dieses Problems. Blended-Learning (Online-Module mit Präsenzterminen) bewahrt auch einen Face to Face Austausch [Ke13]. Einige Projekte, z. B. VLIN in Niedersachen [VL17] oder FLIEG in Bayern [Sp09], haben Informatiklehrkräfte mithilfe von Blended-Learning ausgebildet. Ein Ergebnis unserer Umfrage2 ist, dass sich die meisten Informatiklehrkräfte in NRW eine Fortbildung innerhalb der Dienstzeit wünschen (nur 4,5% können sich eine Fortbildung am Wochenende vorstellen und nur 1,2% am Abend). D. h. die Flexibilität von E-Learning oder Blended-Learning als 24 Std.-Lernumgebung scheint durch die Bereitschaft deutscher Lehrkräfte begrenzt.                                                  1 Westfälische Wilhelms-Universität(WWU) Münster, Didaktik der Informatik(DDI), Fliednerstrasse 21, 48149 Münster, kensuke.akao@uni-muenster.de 2 Online-Umfrage vom 5.Sep.2016 bis 9.Feb. 2017 in NRW zum Informatikangebot Sek-I und zum Fortbildungsbedarf: 247 Rückmeldungen (202 Informatiklehrkräfte; 25 Lehrkräfte, die Fächer mit informatischen Inhalte unterrichten; 20 stellvertretende/ Schulleiter)  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 405ii “proceedings” — 2017/9/17 — 20:19 — page 406 — #406 ii i ii i Kensuke Akao  2 Untersuchungsstrategie des erwogenen Fortbildungskonzepts  Wir stellen uns die Forschungsfrage, ob Blended-Learning im Bereich der Lehrerfortbildung für den Informatikunterricht wirkungsvoll eingesetzt werden kann. Zur Untersuchung der Akzeptanz von Blended-Learning erstellen wir zunächst ein neues Lehrerfortbildungsprojekt mit Prototyp-Modulen das Thema „Datensicherheit, Datenschutz und Datenbank“. Und das erste Lernmodul ist „Backup für Daten und Systeme“. Ziel ist die Schaffung höherer Teilnahmechancen für Lehrerfortbildungen, indem (a) die Anzahl der Präsenztermine möglichst verringert wird und (b) die benötigte Lernzeit durch eine effektive Präsentation der Lerninhalte verkürzt wird.  Die Fortbildungen bestehen aus Online-Modulen (Theorie-Phase), gefolgt von einer Praxis-Veranstaltung (Anwendungs-Phase). Für die Online-Module wurden Videos mit animierten Grafiken entwickelt, um komplizierte Inhalte möglichst kompakt darzustellen. Um die Akzeptanz verschiedener Medien vergleichen zu können, bieten wir die Inhalte auch als reine Audioversion oder reines Textdokument mit Grafiken an. Nach jeder Phase werden die Teilnehmer über das Konzept befragt, damit die Fortbildung in einem Verbesserungszyklus Design-Based-Research [DRC03] stetig weiterentwickelt werden kann. 3 Ausblick Aktuell planen wir zu untersuchen, inwiefern informelle Austauschmöglichkeiten die Anzahl der formellen Präsenztermine weiter reduzieren können. Beispielweise waren 40,9% der Lehrkräfte bei unserer Umfrage grundsätzlich an einem regelmäßigen Stammtisch interessiert. In den nächsten Monaten startet der erste Probelauf unseres Fortbildungskonzeptes. Wir arbeiten weiter daran, eine gehaltvolle, gern und gut besuchte Lehrerfortbildung anzubieten, welche gut auf die Bedürfnisse der Lehrkräfte abgestimmt werden kann. Literaturverzeichnis [DRC03] The Design-Based Research Collective: Design-Based Research: An Emerging Paradigm for Educational Inquiry, Educational Researcher Vol.32 No.1, S.5-8, 2003. [Ke13] Kerres, M.: Mediendidaktik – Konzeption und Entwicklung mediengestützter Lernangebote 4.Auflage, 2013. [Sp09]  Spohrer, M.: Konzeption und Analyse neuer Maßnahmen in der Fortund Weiterbildung von Informatiklehrkräften, Dissertation an der Technische Universität München, 2009 [VL17] Virtuellen Lehrerweiterbildung Informatik in Niedersachsen (VLIN), vlin.de/ Stand: 5.1.2017.  406 Kensuke Akaoii “proceedings” — 2017/9/17 — 20:19 — page 407 — #407 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 11 Unterschiede beim Memorieren von Quelltexten zwischen NovizInnen und ExpertInnen der objektorientierten Programmierung Mike Barkmin1, Matthias Kramer2, David Tobinski3, Torsten Brinda4 Abstract: Dieser Artikel befasst sich mit den unterschiedlichen Vorgehensweisen von ExpertInnen und NovizInnen der Programmierung beim Memorieren und Interpretieren von Quelltexten. ExpertInnen haben die Quelltexte überwiegend auf einer semantischen Ebenen memoriert, NovizInnen hingegen zeilenweise. Keywords: Objektorientierte Programmierung, Arbeitsgedächtnis, Programmiererfahrung. 1 Einleitung NovizInnen der Programmierung stehen oft vor dem Problem, mehrere Herausforderungen bewältigen zu müssen, wenn sie eine Programmieraufgabe lösen. Zum einen müssen sie einen Problemlöseprozess durchlaufen und passende Algorithmen entwickeln, zum anderen müssen sie die syntaktischen Elemente der verwendeten Programmiersprache beherrschen und richtig anwenden. Im Rahmen einer im Kontext des COMMOOP-Projekts [KHB16] durchgeführten Untersuchung wurden frühere Ergebnisse bestätigt, nach denen die Beherrschung syntaktischer Elemente für NovizInnen eine Herausforderung darstellt. NovizInnen orientieren sich eher an gelernten Quelltextkonventionen als an der Semantik. Basierend auf diesen Ergebnissen und denen von Adelson [Ad81] wurde postuliert, dass ExpertInnen Quelltexte in semantischen Einheiten im Arbeitsgedächtnis ablegen, wohingegen NovizInnen syntaktische Einheiten verwenden. Um diese Hypothese zu überprüfen, wurde ein Test zum Memorieren von Quelltexten entwickelt. 2 Methode, Ergebnisse und Diskussion Die ProbandInnen wurden gebeten, verdeckte Quelltexte und natürlichsprachliche Texte, welche nach Belieben aufgedeckt werden konnten, in ein Textfeld zu übertragen. Während 1Univ. Duisburg-Essen, DDI, Schützenbahn 70, 45127 Essen, Deutschland mike.barkmin@stud.uni-due.de 2Univ. Duisburg-Essen, DDI, Schützenbahn 70, 45127 Essen, Deutschland matthias.kramer@uni-due.de 3Univ. Duisburg-Essen, Institut für Psychologie, Universitätsstr.2, 45141 Essen, Deutschland david.tobinski@uni-due.de 4Univ. Duisburg-Essen, DDI, Schützenbahn 70, 45127 Essen, Deutschland torsten.brinda@uni-due.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 407ii “proceedings” — 2017/9/17 — 20:19 — page 408 — #408 ii i ii i des Vorgangs wurden alle Schritte protokolliert. Zusätzlich wurden drei psychologische Tests durchgeführt, um die allgemeine Merkfähigkeit der ProbandInnen kontrollieren zu können. Anschließend sollten die ProbandInnen eine Selbsteinschätzung ihrer Programmiererfahrung anhand validierter Likert-Skalen vornehmen (siehe [Ba17]). An der Studie haben 42 Studierende (30: Informatik, 12: andere) teilgenommen. Die protokollierten Tastenanschläge und Anschauphasen wurden genutzt, um Unterschiede zwischen NovizInnen und ExpertInnen der objektorientierten Programmierung zu ermitteln. Die Überprüfung eines aus der Theorie abgeleiteten Strukturgleichungsmodells (siehe Abb. 1 links) mittels PLSPM hat gezeigt, dass die Programmiererfahrung (PE) die Fähigkeit in den Übertragungsaufgaben (F) am besten erklärt. Das Arbeitsgedächtnis (AG) und die Konzentrationsfähigkeit (K) sind diesbezüglich schwächere Indikatoren. Eine Bootstrapping-Validierung ergab, dass nur die Pfade von PE nach F und von K nach AG signiﬁkant sind. Damit sind quantitative Hinweise gefunden, dass mit mehr Programmiererfahrung wahrscheinlich mehr Informationseinheiten eines Quelltexts memoriert werden können. Dies ist wahrscheinlich auf das Zusammenfassen von Informationseinheiten zurückzuführen. Des Weiteren wurde untersucht, ob die 0.61460.0790.06030.4899FPEAGK K>AGK>FAG>FPE>F0.20.00.20.40.60.81.0ExpertInnen NovizInnen Abb. 1: Strukturmodell und Gruppenunterschiede der Pfadkoe  zienten Pfadkoe  zienten sich zwischen NovizInnen und ExpertInnen (operationalisiert durch die PE) unterscheiden. Die unterschiedlichen Pfadkoe  zienten (siehe Abb. 1 rechts) sind nur für den Pfad PE nach F signiﬁkant. Daher ist der Einﬂuss der Programmiererfahrung bei NovizInnen deutlich größer als bei ExpertInnen. Literatur [Ad81] Adelson, B.: Problem solving and the development of abstract categories in programming languages. Memory & Cognition 9/4, S. 422–433, 1981. [Ba17] Barkmin, M.: Konstruktion und Erprobung eines Bausteins zur Kompetenzmessung im Bereich der objektorientierten Programmierung im den Dimensionen Syntax und Semantik. Unversität Duisburg-Essen, 2017. [KHB16] Kramer, M.; Hubwieser, P.; Brinda, T.: A Competency Structure Model of Object-Oriented Programming. In: 2016 International Conference on Learning and Teaching in Computing and Engineering (LaTICE). S. 1–8, März 2016.408 Mike Barkmin, Matthias Kramer, David Tobinski, Torsten Brindaii “proceedings” — 2017/9/17 — 20:19 — page 409 — #409 ii i ii iIra Diethelm (Hrsg.): Informat ische Bildung zum Verstehen und Ge stalten der digitalen Welt,   Lecture Notes in Informatics (LNI),  Gesellschaft für Informatik, Bonn 2017   Wirkmodelle zum Computational Thinking in der  Grundschule  Christine Bescherer 1 und Andreas Fest 1  Abstract:  Im Rahmen des von der Telekom  Stiftung geförderten Projekts  „Digitales Lernen in der  Grundschule Stuttgart/Ludwigsburg“ werden in Se minaren Unterrichtseinhe iten zur Förderung des  „Computational Thinking“ entwickelt und von den Studierenden in einer Grundschule erprobt. Im  Verlauf des Projekts wird über kontinuierlich  v e r f e i n e r t e  W i r k m o d e l l e  d i e  W i r k u n g  d i e s e r   Interventionen sowohl auf Ebene der Studierenden wie auch der Schülerinnen und Schüler erfasst  und dargestellt.  Keywords: Computational Thinking in der Grundschul e, Wirkmodelle, Interventionsprojekt  1 Einleitung und theoretischer Hintergrund  Die Entwicklung digitaler Lehr-/Lernszenarien in der Grundschule ist das Ziel des von der  Telekom Stiftung geförderten Projekts „Digitales Lernen in der Grundschule  Stuttgart/Ludwigsburg“ (dileg-SL, https://www.ph-ludwig sburg.de/16553.html ) an der  Pädagogischen Hochschule Ludwigsburg. Neben dem produktiven und kritischen  Umgang mit digitalen Medien in verschiedenen Kontexten ist eines der wichtigen Ziele  die Unterstützung der Grundschülerinnen und Grundschüler bei der Entwicklung  informatischer und algorithmischer Grundkompetenzen. Dazu entwickeln Studierende des  Lehramts Grundschule unter Anleitung Lehr-/Lernszenarien („halbgare Mikrowelten“  [Pa75], [Ky07]), die das „Computational Thinking“ [Gr13] von Schülerinnen und  Schülern im Mathematikunterricht der 3. oder 4. Klasse unterstützen.   2 Methode und Durchführung  In dem Projekt werden Lehramtsstudierende (Lehramt Grundschule) in einem Seminar  nach dem Kennenlernen und eigenen Erfahrungen zum „Computational Thinking“ unter  Anleitung „halbgare Mikrowelten“  [Ky07] zu  mathematischen Themen der Grundschule  entwickeln, in denen die Schülerinnen und Schüler verschiedene Elemente des  „Computational Thinking“ erlernen, erleben und reflektieren sollen. Diese Mikrowelten  werden dann in einer Grundschule in passenden Lernsettings (Projektunterricht,  Regelunterricht, Medien-AG) erprobt, videographiert und später im Seminar wieder                                                              1 Pädagogische Hochschule Ludwigsb urg, Institut für Mathematik und Informatik, Reuteallee 46, 71634  Ludwigsburg, bescherer@ph-ludwigsburg.de , fest@ph-ludwigsburg.de I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 409ii “proceedings” — 2017/9/17 — 20:19 — page 410 — #410 ii i ii i  16    Christine Bescherer und Andreas Fest   reflektiert.  Die erwartete Wirkung bezieht sich v.a. auf den Zuwachs an Fähigkeiten im Umgang mit  den Elementen des Computational Thinkings sowie z.B. auch Änderungen in der  computerspezifischen Selbstwirksamkeitserwartung. Da durch die geringen Fallzahlen  sowohl der Studierenden als auch bei den Schülerinnen und Schülern im Rahmen einer  solchen Entwicklungsund Machbarkeitsstudie kein experimentelles Design zum  Nachweis der Wirksamkeit leistbar ist, wird die Wirkung anhand der iterativen  Verfeinerung von Wirkmodellen (vgl. [Wa16]) dokumentiert.  Das Ausgangsmodell umfasst den Input, die Maßnahme und den erwarteten Output noch  in einer undifferenzierten Form:  Abb. 1: Das undifferenz ierte Wirkmodell in seiner Ausgangsform.    Im Verlauf des Projekts wird das Wirkmodell immer weiter verfeinert und sowohl der  theoretische Input, die verwendeten Lernszenar ien als auch die Instrumente zu Erfassung  der Änderungen werden nach und nach konkretisiert.  Literaturverzeichnis  [Gr13]  Grover, S.; Pea, R.: Co mputational Thinking in K–12 A Revi ew of the State of the Field.  In Educational Researcher, 42. Jg., Nr. 1, S. 38-43, 2013.  [Ky07] Kynigos, C.: Half-baked logo microworlds as boundary objects in integrated design.  In  Informatics in Education An Interna tional Journal, Vol 6_2, S. 335-359. 2007.  [Wa16] Wachsmuth, E. & Hens e, J.: Wirkmodelle zur Unterstützung der Evaluation komplexer  Hochschulprojekte. In: Qualität in der Wi ssenschaft. 3+4/2016. Universitäts-Verlag  Webler. Bielefeld. S. 80-87, 2016.  410 Christine Bescherer, Andreas Festii “proceedings” — 2017/9/17 — 20:19 — page 411 — #411 ii i ii i  Schülervorstellungen von relationalen Datenbanken:   eine empirische Untersuchung   Torsten Brinda1 und Thorsten Terjung2  Abstract:  Als Beitrag zur didaktischen Rekonstruktion verknüpft die vorliegende empirische  Untersuchung individuelle Schülervorstellungen zum Thema relationale Datenbanken mit den  zugehörigen informatischen Fachkonzepten. Zur Erhebung wurde ein Online -Fragebogen eingesetzt, welcher  zum einen Fragen zu Vorstellungen von Datenbanken und deren Anwen dung, zum  anderen Fragen zu informatischen Phänomenen mit indirektem Daten bankbezug enthielt . Die  Auswertung der Fragebögen erfolgte mittels qualitative r Inhaltsanalyse nach Mayring und lief erte  drei Kategoriensysteme, wobei die Kategorisierung der Schülervorstellungen analog zum ANSI/SPARC 3 -Ebenen -Modell als wichtigstes Ergebnis zu nennen ist. Dieses Modell konnte dabei  in zwei unterschiedlichen Ausprägungen in den Schülervorstellungen iden tifiziert werden  – einerseits als Betrachtung von informatischen  Datenbankkonzepten, andererseits mit Blick auf die  realweltliche, analoge Speicherung und Verarbeitung von Daten. Schlussfolgernd kann für die  didaktische Strukturierung des Unterrichts empfohlen werden, die verschiedenen Ebenen des  ANSI/SPARC -Modells von Beginn an zu thematisieren und deutlich voneinander zu unterscheiden.  Keywords: Schülervorstellungen, Datenbanken, empirische Studie, Kategorisierung .  1 Einleitung   Als Umsetzung des Modell s der didaktischen Rekonstruktion (vgl. [Di11]) verknüpft die  empirische Untersuchung individuelle Schülervorstellungen mit informatischen Fachkonzepten zum Thema relationale Datenbanken. Dabei wird beides im wechselseitigen  Vergleich auf Gemeinsamkeiten u nd Unterschiede untersucht und daraus eine didaktische Strukturierung für den Unterricht abgeleitet. Zur Erhebung der Schülervorstellungen wurde ein Online -Fragebogen eingesetzt, welcher zum einen Fragen zu Vorstellungen von Datenbanken und deren Anwendung , zum anderen Fragen zu informatischen  Phänomenen mit indirektem Datenbankbezug enthält.   2 Ergebnisse und Fazit   Die Auswertung der Fragebögen erfolgte mittels der qualitativen Inhaltsanalyse nach                                                            1 Didaktik der Informatik, Universität Duisburg -Essen, Schützenbahn 70, 451 27 Essen,   torsten.brinda@uni -due.de   2 Institut für Informatik u. Wirtschaftsinformatik, Universität Duisb urg-Essen,  Schützenbahn 70, 4512 7 Essen,  thorsten.terjung@stud.uni -due.de  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 411ii “proceedings” — 2017/9/17 — 20:19 — page 412 — #412 ii i ii i  Mayring [Ma10] und lieferte drei verschiedene Kategoriensyste me zu verschiedenen  Aspekten der Betrachtung der Thematik. Zentral ist hier zunächst die Kategorisierung  der Schülervorstellungen analog zum ANSI/SPARC 3 -Ebenen -Modell  [TS78] , welches  bei Datenbankmanagementsystemen die interne Ebene der physischen Speiche rung der  Daten, die konzeptuelle Ebene der Strukturierung der Daten und die externe Ebene der  benutzer definierten Sicht auf die Daten  unterscheidet. Dieses Modell konnte in zwei  Ausprägungen in den Schülervorstellungen identifiziert werden. Einerseits als Betrachtung von digitalen Datenbankkonzepten, andererseits mit Blick auf die realweltliche,  analoge Speicherung und Verarbeitung von Daten. Weiterhin zeigte sich, dass bei Schülerinnen und Schülern mit wenig bis keiner unterrichtlichen Erfahrung in der Dat enbankthematik häufig eine Vorstellung auf der internen Ebene vorherrscht, während mit  ansteigender Behandlung des Themas im Informatikunterricht ein Wechsel zur konzeptuellen Ebene erkennbar ist.  Auch bei den genannten lebensweltlichen Begegnungen mit  Datenbanken zeigte sich eine Abhängigkeit von der Thematisierung im Unterricht. Während Anf änger eher abstraktere Facetten  wie Smartphone oder Laptop benennen, rücken  bei den Schülerinnen und Schülern, die das Thema ausführlicher behandelt hatten, persönlic h erfahrene Anwendungen  wie etwa beim Online -Einkauf oder im Schulzusammenhang in den Fokus. Die Erklärungsansätze der Schülerinnen und Schüler zu den  vorgestellten Phänomenen offenbaren einen teils deutlichen Mangel an Wissen bezüglich der tatsächlichen Anw endungen von Datenbanken und der zugrundeliegenden Fachkonzepte. Insbesondere die Auswertung und Analyse von Nutzerprofilen (Data Warehouse und Data Mining -Konzept) ist den Schülerinnen und Schülerinnen nur wenig  bekannt. Die Verbindung mehrerer Teilaspek te bei der Auswertung verschiedener Datenbanken konnte nicht zufriedenstellend erklärt werden.  Schlussfolgernd kann für die  didaktische Strukturierung des Unterrichts empfohlen werden, die verschiedenen Ebenen  des ANSI/SPARC -Modells von Beginn an zu themat isieren und deutlich voneinander zu  unterscheiden. Der Schwerpunkt sollte dabei auf der Strukturierung und Ordnung von  Daten liegen, wobei zur konkreten Umsetzung im Informatikunterricht lebensweltliche  Phänomene mit Bezug zu Internetanwendung als geeignet  erscheinen.  Eine ausführliche  Darstellung der Studie findet sich in [Te16].   Literaturverzeichnis   [Di11]  Diethelm, I., Dörge, C., Mesaros, A. M.,  & Dünnebier, M. : Die Didaktische Rekonstruktion für den Informatikunterricht. In : Thomas, M. (Hrsg.): Informatik in Bildung  und Beruf. Köllen, Bonn, S . 77-86, 2011 .  [Ma10 ] Mayring, P.: Qualitative Inhaltsanalyse. Grundlagen und Techniken. 11. Auflage .  Beltz, Weinheim , 2010 .  [Te16]  Terjung, T.: Schülervorstellungen von relationalen Datenbanken. Masterarbeit. Universität Duisburg -Essen, Fakultät für Wirtschaftswissenschaften, 2016.   [TK78]  Tsichritzis, D.; Klug, A.: The ANSI/X3/SPARC DBMS framework report of the study  group on database management systems. In: Inform . Systems 3 (3), S.173 -191, 1978.  412 Torsten Brinda, Thorsten Terjungii “proceedings” — 2017/9/17 — 20:19 — page 413 — #413 ii i ii i Die Handykiste für die Grundschule   Wibke Duwe1  Abstract:  Auf Grundlage der Forderungen der Kultusministerkonferenz zur digitalen Bildung in  der Grundschule wird vorliegend ein Unterrichtskonzept zum Thema „Handy in der Grundschule“  vorgestellt. Da Mobiltelefone als komplexe IT -Systeme zu verstehen sind, können a nhand dieser  digitalen Grundkompetenzen , wie sie auch von der KMK gefordert werden, vermittelt werden.   Keywords: Digitale Bildung, Grundschule, Sachunterricht, Handy .  1 Einleitung   Mit der im Dezember 2016 beschlossenen Strategie „Bildung in der Digitalen We lt“ legt  die Kultusministerkonferenz  (KMK)  ein neues Handlungskonzept für das Lernen im  Kontext der zunehmenden Digitalisierung [KM 16] vor und erklärt dieses zu einem  integralen Bes tandteil  des Bildungsauftrages bereits in den Schulen  der Primarstufe . Für  die unmittelbare Lebensumwelt der Kinder in der Grundschule kommt insbesondere dem  Mobiltelefon , bzw. in zunehmendem Maße dem Smartpho ne, eine wichtige Bedeutung zu.  Zum Verstehen und Reflektieren der Funktionsweise von Mobiltelefonen gehören  mittler weile auch  informatische Grundkompetenzen  wie das Kennen und Verstehen von  grundlegenden Prin zipien der digitalen Welt. I m vorliegenden Beitrag  wird ein Konzept  für ein Unterrichtskonzept zum Thema „Handy in der Grundschule“ vorgestellt.   2 Das Konzept der H andykiste   Bei der Handykiste in der Grundschule handelt es sich um eine Unterrichtskiste, die  vielfältige Materialien rund um das Thema Handy und Mobilfunk enthält. Sie ist gedacht  für einen handlungsorientierten Sachunterricht in der Grundschule. Die Lern ziele dieses  Unterrichts bestehen dari n, die Schüler/innen  der dritten und vierten Klasse  dabei zu  unterstützen, ein Verständnis für Mobiltelefone als Informatiksysteme und die Bedeutung  dieser Informatik im Alltag zu entwickeln. Die Kiste enthält  didaktis ch aufbereitete  Materialien für den Einsatz im Unterricht, die je nach Alter und Leistungsniveau der  Schüler/innen ausgewählt und eingesetzt werden können, wie z.B. ein Mobiltelefon zum  Auseinanderschrauben, Bastelanleitungen zum Basteln eines Dosentelefon s und                                                            1 Carl von Ossietzky Universität, Department für Informatik, Abt. Didaktik der Informatik, Uhlhornsweg 84,  26129 Oldenburg , wibke.duwe@uni -oldenburg.de  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 413ii “proceedings” — 2017/9/17 — 20:19 — page 414 — #414 ii i ii i Modellfiguren zum Erklären und Erfahrbarmachen eines Handyfunknetzes.   Der Inhalt der Handykiste ist in folgende Lehreinheiten gegliedert:   1. Die Geschichte des Mobiltelefons : Im erste n Kapitel der Handykiste wird die  technische Entwicklung  von Mobiltelefonen  nachgezeichnet. D ie Kinder sollen  eigenständig Vorgängermodelle wie z.B. ein Dosentelefon bauen und erfahren,  wie es zu der Erfindung eines kabellosen Telefons kam.    2. Bestandteile eines Mobiltelefons : In der zweiten  Lehreinheit sollen  Schüler/innen lernen , wie ein Mobiltelefon aufgebaut ist, welche Bestandteile es  besitzt und diese auch benennen können. Praktisch erfahrbar wird dies u.a. durch  das Aufschrauben eines Handys.   3. Funktionsweise eines Mobiltelefons : Im dritten Kapitel geht es um die  Funktionsweise von Mobiltelefonen . Dabei stehen das Anrufen und das  Versenden von Kurznachrich ten über den Mobilfunk im Fokus. Mithilfe von  geeigneten Materialien wie wasserdichten Behältern, Alufolie, Tüten etc. könn en  die Schüler/innen eigene Experimente zur Funktionsw eise von Mobilfunk  durchführen.   4. Weitere Dienste beim Smartphone : Über den reinen Mobilfunk hinaus bieten  Smartphones heute viele weitere Funktionen. Als besonderes wichtig ist hier die  Internetverbindung hervorzuheben. Weitere insbesondere für Kinder wichtige  und vielgenutzte Funktionen eines Smartphone stellen u.a. Han dyspiele, Apps,  Instant Messenger, Musikplayer, Kamera oder Ortungsdienste/GPS dar [MP14].   5. Handysicherheit : Im fünften  Kapitel de r Handykiste sollen Schüler/innen  unterschiedliche Möglichkeiten der Verschlüsselung von Nachrichten  kennenlernen . Risiken und  Gefahren, die sich aus der Sammlung mobiler Daten  (Stichwort Big Data) ergeben, sollen ebenfalls thematisiert werden.   6. Die Zukunft von Mobiltelefonen : Im abschließenden Kapitel soll die Zukunft  der Handys daher thematisiert werden. Dieses Thema ermöglicht einen besonders  kreativen Zugang, die Kinder können beispielsweise selbst aktiv werden und  Handys der Zukunft und mögliche Funktionen erfinden und diese selbst basteln  und präsentieren.   3 Literatur   [KM16] KMK Kultusministerkonferenz (Hrsg.) 2016: Bildung in der digitalen Welt. Strate gie  der Kultusministerkonferenz,  https://www.kmk.org/aktuelles/thema -2016 -bildung -inder-digitalen -welt.html , 14.02.2017 .  [MP14] mpfs Medienpädagogischer Forschungsverbund Südwest 2014: KIM -Studie 2014.  Kinder + Medien, Computer + Internet. Basisuntersuchung zum Medienumgang 6 – 13Jähriger,  https:/ /www.mpfs.de/fileadmin/files/Studien/KIM/2014/KIM_Studie_2014.pdf ,  14.02.2017.  414 Wibke Duweii “proceedings” — 2017/9/17 — 20:19 — page 415 — #415 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017    15 „Informatik entdecken – mit und ohne Computer“  Mit ihrem Bildungsangebot unterstützt die Stiftung „Haus der kleinen Forscher“ informatische Bildung von dreibis zehnjährigen Kindern Christine Günther1  Abstract: Die Stiftung „Haus der kleinen Forscher“ stellt ein Bildungsangebot zur Verfügung, das pädagogische Fachund Lehrkräfte in Kita, Hort und Grundschule in ihrer pädagogischen Arbeit im MINT–Bereich unterstützt. Seit 2016 widmet sich die Stiftung der fachlichen Fundierung des Inhaltsbereichs Informatik und entwickelte darauf aufbauend ein eigenes Bildungsangebot. Die Basis für die inhaltliche Entwicklung des Themas bildeten Zieldimensionen informatischer Bildung im Elementarund Primarbereich.2 Im Beitrag werden die Ziele der Stiftung, die den Themenbereich Informatik strukturierenden Inhaltsund Prozessbereiche, das Fortbildungskonzept, die pädagogischen Materialien sowie die Pilotierung des Angebots der Stiftung vorgestellt.  Keywords: Informatische Bildung, frühe informatische Bildung, Fortbildungskonzept, pädagogische Materialien  1 Ziele der Stiftung „Haus der kleinen Forscher“ Das Ziel der Stiftung „Haus der kleinen Forscher“ im Bildungsbereich Informatik ist es, Kindern zwischen drei und zehn Jahren erste Erfahrungen zum Thema Informatik zu ermöglichen. Mit ihren Angeboten möchte die Stiftung pädagogische Fachund Lehrkräfte dabei unterstützen, Mädchen und Jungen in ihrer Auseinandersetzung mit informatischen Fragen, Problemen und Zielen zu begleiten.  2 Angebotsentwicklung Ausgehend von Zieldimensionen informatischer Bildung für den Elementarund Primarbereich3 wurden folgende Inhaltsbereiche im Angebot „Informatik entdecken – mit und ohne Computer“, konkret im Fortbildungskonzept und den pädagogischen Materialien, integriert: Die Bedeutung von Informatik im Alltag, Informationen und Daten, Planung, Steuerung und Optimierung.                                                             1 Stiftung „Haus der kleinen Forscher“, Abteilung: Inhaltliche Entwicklung, Rungestraße 18, 10179 Berlin, christine.guenther@haus-der-kleinen-forscher.de 2 Bergner, N. et al., (in Vorbereitung) 3 ebd. I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 415ii “proceedings” — 2017/9/17 — 20:19 — page 416 — #416 ii i ii i 16    Christine Günther  Prozessbezogene Aspekte informatischer Bildung wurden als didaktisch-methodisches Material als „Informatikkreis“4 für die Pädagoginnen und Pädagogen entwickelt. Dort wird informatisches Denken und Handeln als exploratives und gestaltendes, zyklisches Vorgehen dargestellt.5 Die Fortbildung ist nach den Empfehlungen aus den Zieldimensionen informatischer Bildung für den Elementarund Primarbereich6 so konzipiert, dass die Pädagoginnen und Pädagogen das Thema sowohl ganz ohne Computer („unplugged“), mit dem Computer (softwarebasiert) und am Beispiel von kindgerechten Robotersystemen (Robotik) selbst entdecken und erforschen können. Für die Zielgruppe entscheidend ist die Erkenntnis, dass Grundprinzipien und Vorgehensweisen der Informatik auch mit Papier und Stift, mit Alltagsmaterialien oder mit reinem Körpereinsatz für Kinder erfahrbar werden können.7 Die Pädagoginnen und Pädagogen erhalten in der Fortbildung vielfältige Anregungen zur Umsetzung des Themas mit den Kindern, die sie selbst sofort erproben können. Außerdem erhalten die Teilnehmenden das pädagogische Materialpaket. In diesem finden sie viele der Praxisideen aus der Fortbildung auf Entdeckungskarten für Pädagoginnen und Pädagogen, Entdeckungskarten für Kinder und in einer Themenbroschüre festgehalten. Letztere bietet zudem fachliches als auch didaktisch-methodisches Hintergrundwissen. Das Bildungsangebot wird durch zwei digitale Lernspiele für Kinder im Grundschulalter (Ronjas Roboter und Fabios Flächen) sowie einen Onlinekurs für Pädagoginnen und Pädagogen ergänzt. In der Pilotphase (März bis August 2017) wurden sowohl die Fortbildung als auch die Materialien durch pädagogische Fachund Lehrkräfte getestet und Überarbeitungen vorgenommen. Literaturverzeichnis [BeiV] Bergner, N., Köster, H., Magenheim, J., Müller, K., Romeike, R., Schulte, C. & Schroeder, U.: Zieldimensionen informatischer Bildung im Elementarund Primarbereich. In Stiftung Haus der kleinen Forscher (Hrsg.), Frühe informatische Bildung – Ziele und Gelingensbedingungen für den Elementarund Primarbereich. Wissenschaftliche Untersuchungen zur Arbeit der Stiftung „Haus der kleinen Forscher“ (Band 9). Verlag Barbara Budrich, Opladen, Berlin, Toronto, (in Vorbereitung).  [In17]  Stiftung „Haus der kleinen Forscher“ Informatikkreiskarte, 2017. [Sc17] Schulte, C., Magenheim, J., Müller, K., Budde, L.: The Design and Exploration Cycle as Research and Development Framework in Computing Education. In: Beiträge zur EDUCON; Global Engineering Education Conference, IEEE, 2017. [BWF15] Bell, T., Witten, I., Fellows, M., 2015. cs unplugged, verfügbar unter http://csunplugged.org/books/                                                            4 Stiftung „Haus der kleinen Forscher“, 2017 5 Schulte, C. et al., 2017 6 Bergner, N., et al., (in Vorbereitung) 7 Bell, T. et al., 2015 416 Christine Güntherii “proceedings” — 2017/9/17 — 20:19 — page 417 — #417 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 1 Informatische Grundbildung: Exploration desErstzugangs zuLego®Wedo2.0undCubelets vonDrittklässler_innen Lennart Goecke ,1Jurik Stiller ,2Detlef Pech,3Niels Pinkwart4 Abstract: Dasvorgestellte Projekt gehtderübergeordneten Frage nach, wieKinder Algorithmen  verstehen. Neben derdidaktischen Begründung informatischer Bildung imSachunterricht, werden  ersteErgebnisse einer ersten Erhebung präsentiert. DieperVideo erhobenen Daten basieren auf Explorationen vonKindern, dieerstmals mitLego®WeDo 2.0undCubelets arbeiten. Keywords: Sachunterricht; Grundschule; Algorithmusverständnis; Lebensweltzugang 1Einleitung &Stand derForschung Erkenntnisleitend fürdashierskizzierte Projekt istdieübergeordnete Frage nachdem Verhältnis vonInformatik, informatischer Bildung undSachunterricht. ImFokus stehen  dabei Fragen, diedietheoretisch undempirisch begründete Entwicklung undEvaluation  vonUnterricht betre  en.M aterialien w ieL ego®WeDo2 .0u ndC ubelets adressieren  tendenziell alleGrundschüler_innen undnicht nurInteressierte. Daher eignen siesichalsein Zugang zumKonstrukt Algorithmusverständnis vonGrundschüler_innen .Fachdidaktisch  lässtsichdieRelevanz vonInformatik -Themen alsTeilvonSachunterricht gutbegründen.  Indessen Didaktik werden Klafkis allgemeindidaktische Aspekte zurBedeutung von Inhalten weitrezipiert, sodass sichbspw. Grundbildung zumAlgorithmusbegri  u.a.gut alszukunftsbedeutsam begründen lässt. Welche E ekteb eim U mgang m ita lgorithmischen P hänomenen ind erGrundschule  auftreten undwiesichdiese Lernprozesse beschreiben lassen, wirdbislang nurwenig und nuranhand vonTeilaspekten untersucht [Is15, S.131f. SRV16; KG14; Se11] .Dies istjedoch  eineVoraussetzung zurEntwicklung undEvaluation vonUnterricht. DieVerortung des Algorithmusverständnis inderinformatischen (Grund-) Bildung begründet sichdurch deren  alltägliche Relevanz. Daher lautet dieleitende Fragestellung dieser Untersuchung: Wieverstehen Grundschüler_innen Algorithmen? DerBeantwortung wirdsichineinem ersten Schritt mittels einer 1Humboldt-Universität zuBerlin, Sachunterrichtsdidaktik undseine Didaktik, Friedrichstr. 194,10117 Berlin, lennart.goecke@hu-berlin.de 2gleiche A liation, jurik.stiller@hu-berlin.de 3gleiche A liation, detlef.pech@hu-berlin.de 4Humboldt-Universität zuBerlin, Inst.f.Informatik, Rudower Chaussee 25,12489 Berlin, pinkwart@hu-berlin.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 417ii “proceedings” — 2017/9/17 — 20:19 — page 418 — #418 ii i ii i2 Lennart Goecke, Jurik Stiller, Detlef Pech explorativen Analyse angenähert. Dazu wurden Unterrichtssituationen hergestellt, in denen der hohe Au  orderungscharakter der Materialien genutzt wird um Explorieren anzuregen. Das Material ermöglicht dabei grundsätzlich, intuitiv Algorithmen zu entwickeln und zu testen. So wurden mehrere Drittklässler_innen bei dem ersten Umgang mit Lego®WeDo 2.0 und Cubelets geﬁlmt. Aus der Analyse der Daten lassen sich verschiedene Erkenntnisse zu erreichbaren Kompetenzen und notwendigen didaktischen Entscheidungen ableiten. Diese können für weitere Untersuchungen sowie didaktische Situationen grundlegend sein. Erste Ergebnisse weisen u. a. auf verschiedene Typen des Zugangs zu den Materialien hin. Ein zu beobachtendes Handlungsmuster ist die (technisch im Ergebnis irrelevante) wiederholte Verwendung eines Programmblockes, um ein Lego®Gefährt schneller werden zu lassen. Der unangeleitete Umgang mit Cubelets hingegen lässt daneben Rückschlüsse auf kindliche Verständnisweisen von ihnen unbekannten technischen Systemen zu. Aus den Daten lässt sich dabei schließen, dass es Kindern gelingen kann, durch gezielte Manipulationen belastbare Hypothesen über Funktionen der Cubelets aufzustellen. 2 Ausblick Bei dem Projekt handelt es sich um eine Voruntersuchung im Rahmen eines Dissertationsvorhabens. Im weitere Verlauf werden präzisere Rückschlüsse auf genuin kindliche Zugänge zu algorithmischen Phänomenen erarbeitet. Hierfür lässt sich auf die ersten Ergebnisse aufbauen, indem Unterrichtssettings gezielt typische Vorstellungen berücksichtigen, um Konzeptwechsel zu ermitteln. So lassen sich etwa erreichbare Kompetenzen beschreiben und auswerten. Perspektivisch könnte dazu auch der Frage Wie hängen Algorithmusverständnis und scientiﬁc literacy zusammen? nachgegangen werden, da es sich hierbei um ein in der Sachunterrichtsdidaktik zentrales Konzept handelt und hoher Bedarf besteht, einzelne Facetten konkreter zu operationalisieren. Literatur [Is15] Israel, M.; Pearson, J. N.; Tapia, T.; Wherfel, Q. M.; Reese, G.: Supporting all learners in school-wide computational thinking: A cross-case qualitative analysis. Computers & Education 82/, S. 263–279, 2015. [KG14] Kalelioglu, F.; Gülbahar, Y.: The E  ects of Teaching Programming via Scratch on Problem Solving Skills: A Discussion from Learners’ Perspective. Informatics in Education 13/, 2014. [Se11] Seraﬁni, G.: Teaching Programming at Primary Schools: Visions, Experiences, and Long-Term Research Prospects. In (Kalas, I.; Mittermeir, R. T., Hrsg.). Springer, Berlin, Heidelberg, S. 143–155, 2011. [SRV16] Sáez-López, J.; Román-González, M.; Vázquez-Cano, E.: Visual programming languages integrated across the curriculum in elementary school: A two year case study using "Scratch" in ﬁve schools. Computers & Education 97/, 2016.418 Lennart Goecke, Jurik Stiller, Detlef Pech, Niels Pinkwartii “proceedings” — 2017/9/17 — 20:19 — page 419 — #419 ii i ii i Kindliche Modelle der digitalen Welt   Anja Gärtig -Daugs1, Katharina Weitz1, Ute Schmid1   Abstract:  Digitale Medien prägen heutzutage unser alltägliches Leben. Diesem Einfluss sind auch  Kinder ausgesetzt, selbst wenn sie selbst noch keine Medien aktiv nutze n. Die Vermutung, dass  Kinder sich gedanklich mit dem Thema beschäftigen, liegt daher nahe. Der vorliegende Beitrag  untersucht , über welche mentalen Modelle zur Funktionsweise digitaler Medien Kinder im  Grundschulalter verfügen.   Keywords: mentale Modelle, digitale Medien, Grundschule   1  Einleitung und Motivation   Technik begegnet Kindern in einer hochkomplexen Form, die einen aktiven und  verstehenden Zugang erschwert [NH13] . Kinder konzipieren jedoch vereinfachte  mentale Modelle, die ihnen als Grundlage zum  Verstehen von physikalischen oder  technischen Prozessen  dienen [Ge02]. Die vorliegende Studie untersucht mentale  Modelle von Grundschulkindern zur Digitalen Repräsentation und zu Algorithmen.   2  Empirische Studie  und Ergebnisse   Die Untersuchung wurde im Rahmen eines Informatikprojekts2 mit den  Klassen 2 bis 4  (Alter der Kinder zwischen 7 und 10 Jahren) einer Grundschule durchgeführt . Aus der 2.  Klasse wurden 15 Kinder (10 Mädchen, 5 Jungen), aus der 3. Klasse 17 Kinder (8  Mädchen, 9 Jungen) und aus der 4.  Klasse 15 Kinder (6 Mädchen, 9 Jungen) einbezogen.   Im Zentrum der empirischen Untersuchung standen  die Fragen, welche informatischen  Fachbegriffe Grundschulkindern bekannt sind und ob Kinder in diesem Alter über  mentale Modelle zu den Funktionsprinzipien von digitalen Medien verfügen.   Von den Schülerinnen und Schülern  wurde erfragt, ob sie die Begriffe „Pixel“, „digital“  und „Algorithmus “ kennen . Zusätzlich wurde erhoben, ob die Kinder einen Unterschied  zwischen dem Sortieren bei Menschen und bei Computer n kennen . Tab. 1  gibt einen  Überblick über die Anzahl der Kinder, die glaubten, den Begriff bzw. die Antwort zu  kennen, sowie eine Auswahl der genannten Beschreibungen .                                                               1  Otto-Friedrich -Universität Bamberg, Fakultät Wirtschaftsinformatik und Angewandte Informatik,  Forschungs gruppe Elementarinformatik, An der Weberei 5, 9604 5 Bamberg, anja.gaertig -daugs@uni bamberg.de, katharina -blandina.weitz@stud.uni -bamberg.de, ute.schmid@uni -bamberg.de   2  http://nachwuchs.wiai.uni -bamberg.de/i4kids.html  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 419ii “proceedings” — 2017/9/17 — 20:19 — page 420 — #420 ii i ii i Klasse  Beiträge  Exemplarische Beschreibung en Pixel  2 6 Comp uterbilder bestehen aus 1.000/vielen Pixeln (3x) 3 5 beim Computerspielen, da ist es häufig pixelig  wenn man Fotos auf dem Computer speichert; ist sehr klein, nicht  erkennbar ; ein großes Pixel enthält 100 Minipixel  4 4 minimal kleines Viereck (2x)  Pixel sind beim Computer / Fernseher ; bei schlechtem Empfang  Digital  2 3 digital ist, wenn man Fernsehen/Handy guckt (2x)  3 2 z. B. muss man den Ton am Laptop digitalisieren  4 2 weit entfernt  / nicht live gesendet  Algorithmus  2 3 Krankheit (2x)  3 2 ein Takt / hat etwas mit einer Uhr zu tun  4 1 Krankheit  Unterschied zwischen dem Sortieren bei Menschen und bei Computern  2 7 Computer sortiert schneller /sortiert mit Kamera  3 5 Computer wissen sehr viel und vergessen es nicht (2x)  Computer kann me hr Dinge vergleichen; kann Dinge ersetzen  4 5 Computer hat Speicher (2x); Zahlen/ABC/Spiele sind gespeichert  Computer sortiert blitzschnell, sortiert nach Daten, ABC  beim Computer ist das Sortieren leichter, weil er nicht so groß ist  Tab. 1: Ergebniss e der Grundschulerhebung  zum informatischen Vorwissen von Kindern   3  Diskussion  und Ausblick   Die Ergebnisse legen nahe, dass Kinder bereits in einem sehr jungen Alter mentale  Modelle zur digitalen Welt aufbauen. Die Ausdifferenz ierung und Korrektheit scheint  nicht unbedingt vom kognitiven Entwicklungsstand, sondern vom Interesse der Kinder  am Thema abzuhängen. Es bleibt zu untersuchen, inwieweit informatische  Bildungsangebote in Vor und Grundschule zu einer korrekten Ausdifferen zierung  mentaler Modelle beitragen können.   Literaturverzeichnis   [Ge02]  Gentner, D.: Me ntal models, Psychology of. In Smelser, N; Bates, P. (Hrsg.):  International Encyclopedia of the Social and Behavioral Sciences, Elsevier Science,  Amsterdam, S. 9683 -9687) , 2002.   [NH13]  Niggler, A.; Holl, P.: Perspektiven naturwissenschaftlicher Bildung in Kindergarten  und Grundschule. Plus Lucis, 1 -2, S. 31 -33, 2013.  420 Anja Gärtig-Daugs, Katharina Weitz, Ute Schmidii “proceedings” — 2017/9/17 — 20:19 — page 421 — #421 ii i ii i  Lernwelten verbinden Coding und Making mit Minecraft   Mirek Hančl1   Abstract:  Minecraft ist ein populäres, mehrspielerfähiges Videospiel. Im Bildungskontext wird  Minecraft verstärkt eingesetzt, um Fachinhalte und prozessbezogene Kompetenzen gleichermaßen  und zielgruppengerecht zu vermitteln. Die Automatisierung virtueller Schildkröten und das  Ansteuern virtueller Logikschaltungen in der mehrspiele rfähigen Lernumgebung vermitteln  den  Schülern grundlegende Kenntnisse in der Programmierung. Die Ansteuerung re aler Hardware aus  Minecraft heraus verbindet die virtuelle Lernwelt der Schüler mit ihrer realen Lebenswelt und  fördert in kreativer Art und Weise das Machen. Die Schüler lernen dabei im Sinne einer  interaktionistisch -konstruktivistischen Didaktik und des connected learning approach.   Keywords: Connected Learning, Konstruktivismus, Minecraft, Robotik, Algorithmik, Coding,  Makin g  1 Das Videospiel Minecraft   Minecraft ist ein populäres , mehrspielerfähig es Videospiel, in dem in einer  dreidimensionalen Welt aus Blö cken gebaut werden kann. Es gibt kein primäres  Spielziel, da Minecraft dem Genre der o pen world games zuzuordnen ist.   2 Minecraft im Bildungskontext   Minecraft wird seit einigen Jahren verstärkt im Bildungsbereich eingesetzt. Nahezu jede  Verwendung von Minecr aft im Unterricht macht sich den Vorteil des Mehrspielermodus  zunutze, wodurch  die gesamte Lerngruppe gemeinsam in der virtuellen Welt interagiert.  Dadurch werden die didaktis ch-methodischen Möglichkeiten aus  einer realen  Lernumgebung wie einem Unterrichts raum  verlagert  in die virtuelle Lernumgebung  [Ha16] . Unterricht  mit Minecraft  wird idealerweise durch eine interaktionistisch konstruktivistische Didaktik inspiriert . Diese  sieht Lernprozesse nicht nur durch die  individuelle Wahrnehmung der Welt durch den Lernenden beeinflusst, sondern auch  durch sein soziokulturelles Umfeld, in dem der Lernprozess stattfindet  [Re12] .  Insbesondere durch den Einsatz digitaler, vernetzter Medien  in der Projekt arbeit folgt                                                              1 Universität Osnabrück,  Institut für Informatik, AG Didaktik der Informatik,  Wachsbleiche 27, 49090  Osnabrück, mirek.hancl@uni -osnabrueck.de          I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 421ii “proceedings” — 2017/9/17 — 20:19 — page 422 — #422 ii i ii i  Coding und Making mit Minecraft einem besonderen pädag ogischen Ansatz, dem  connected learning [Co15]. Denn d igitale Medien ermöglichen erst das einfache,  vielfältige Produzieren, Teilen und Konsumieren multimodaler Produkte, was sich im  Sinne des connected learning besonders motivierend auf Lerner auswirkt [I t13].   3 Minecraft im Kontext der informatischen Bildung   3.1 Coding mit Minecraft   Schon mit dem klassischen Spiel Minecraft lassen sich die Themen Boolesche Algebra,  Wahrheitswerte und Logikgatter anschaulich vermitteln. In Minecraft ist auch ohne  Erweiterung ein  Set an Eingabe und Ausgabeelementen verfügbar, mit denen einfache  bis komplexe virtuelle Schaltkreise konstruiert werden können . Durch die Erweiterung  des Spiels mit ComputerCraftEdu kann Schülern Algorithmik  in motivierender Weise   vermittelt werden. Com puterCraftEdu erweitert Minecraft um virtuelle Schildkröten, die  sowohl mit einer visuellen  als auch textuellen  Programmiersprache programmiert  werden können  (neudeutsch: Coding) .   3.2 Making  mit Minecraft   Zeitgemäßer Informatikunterricht tut gut daran, wenn e r das aktive Tun sowohl im  realen (analogen) Raum als auch in der virtuellen  Welt der digitalen Medien fordert und  fördert. Er fördert kritisches Lernen dann am besten, wenn er beide Welten im Sinne  eines immersiven Lernprozesses , einer erweiterten Lernwel t, miteinander verknüpft und  dem Lerner die Ankn üpfungspunkte bewusst aufzeigt . In Mi necraft können Projekte zu  den Themenbereichen  Informatiksysteme sowie  Infor matik, Mensch und Gesellschaft  mit den Erweiterungen RealRobots und bitCraft anschaulich umgese tzt werden. Die  Ansteuerung realer Hardware  wie Arduino, Lego WeDo, RaspberryPi und littleBits  aus  Minecraft heraus verbindet die virtuelle Lernwelt der Schüler mit ihrer realen  Lebenswelt und fördert in kreativer Art und Weise das Machen  (Neudeutsch: Maki ng).  Literaturverzeichnis   [Co15]  Connected learning through Minecraft, http://www.informatics.uci.edu/connected learning -through -minecraft/ , geprüft am 12.02.2017 .  [Ha16]  Hančl, M.: Minecraft als Lernumgebung. Computer+Unterricht 102, S. 28 -30, 2016.   [It13 ] Ito, M. et al: Connected Learning . An Agenda for Research and Design . Digital Media  and Learning Research Hub, Irvine, CA, 2013.   [Re12]  Reich, K. : Konstruktivistische Didaktik . Das Lehr und Studienbuch mit Online Methodenpool. Beltz Pädagogik , Weinheim,  Bergstr., 2012 . 422 Mirek Hanclii “proceedings” — 2017/9/17 — 20:19 — page 423 — #423 ii i ii i  Motivierung im  Informatik unterricht: eine quantitative  Online-Studie zu Planungs grundlagen von Lehrpersonen   Stefanie  Jäckel1   Abstract:  Das didaktische Prinzip Motivierung erweist sich als besonders bedeutsam, weil  motivierte und interessierte Schülerin nen und Schüler leichter lernen [Br12] . Da Erkenntnisse über Auswahlfaktoren der Lehrpersonen für eine bestimmte Motivierung und die zur Entwicklung von Motivierungen benutzten Informationsquellen und Materialien ein Desiderat informatikdidaktischer  Forschung sind , widmet sich die vorliegende Studie diesem Untersuchungsgegenstand .  Keywords: Motivie rung, Informatikunterricht, Unterrichtseinstieg , Lehrerhandeln   1 Design der Erhebung  und Beschreibung der Stichprobe   Mit Hilfe von Mehrfachauswahl -Fragetypen mit Ergänzungsmöglichkeit wurden sowohl  Entscheidungsgrundlagen der Lehrpersonen als auch verwendete  Quellen und Materialien  erfasst.2 Die in den Fragen vorgegebenen Items wurden aus einer explorativen Studie  [Jä15], th eoretischen Modellen [Ke10 ] und von der Autorin zum Thema durchgeführten  Workshops abgeleitet. An der Studie beteiligten sich  von 06 bis 09/2016 156 Informatiklehrkräfte aus Deutschland , Österreich und der Sch weiz. Die Fachlehrerinnen (37,4 %)  und -lehrer (62,6 %) unterrichten schwerpunktmäßig  in der Sekundarstufe II (54,2 %). Die  häufigsten (kombinierten) Studienfächer sind Informatik (m:  71,4%, w:  69,2%); Mathematik (m:  65,3%, w:  67,3%) und Physik (m: 33,7%, w: 23,1%).  Bezüglich der Unterrichtserfahrung (inklusive Referendariat) ist die Zusammensetzung der Stichprobe sehr  gemischt, woraus eine  gewisse  Repräsentativität hinsichtlich  der Zusammensetzung der  Grundgesamtheit geschlussfolgert werden kann.  Die Art der Durchführung der Untersuchung setzt bei den Lehrkräften Professions und Reflexionswissen über ihr Lehrerhandeln voraus.   2 Für Motivierungen benutzte Quellen und Materialien    Die teilnehmende Lehrerschaft benutzt für die Konzeption ihrer motivierenden Unterrichtseinstiege am häufigsten das Internet (n=123) als In formations und Material quelle,  gefolgt von selbst entwickelte n Mate rialien (n=106) sowie Ideen/ Konzepte n aus Fortbil                                                            1 Friedrich -Schiller -Universität Jena , Fakultät für Mathematik und Informatik , Ernst -Abbe -Platz 2, 07743 Jena,  stefanie.jaeckel @uni -jena.de   2 Detaillierte Untersuchungergebnisse unter : http:// www.informatikideen.de/motivierung .html  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 423ii “proceedings” — 2017/9/17 — 20:19 — page 424 — #424 ii i ii i  dungsveranstaltungen (n=86) . Gruppiert  man die Items , kann  gezeigt w erden, dass Lehrkräfte mit 47,6 % im Mittel am häufigsten durch Erfahrungswerte (eigene Materialien,  Ideen /Konzepte  aus Fortbildungen, Tipps von Kollegen, an der Schule verfügbare Materialien) zu ihren Mot ivierungen gelangen. Außerdem sind Medien allgemein (Internet,  Software, Tageszeitungen/Zeitschriften) mit 35,5% für die Ideenfindung der Lehrkräfte  noch ausschlaggebender als (fach) wissenschaftliche Forschung ( Informatikfachbücher  und -zeitschriften, didaktische Literatur, pädagogische Literatur ). Je nach Unterrichtserfahrung der Teilnehmer veränder n sich auch  Planungsgewohnheiten:  so benutzen Lehrkräfte  mit über 15 Jahren Lehrtätigkeit  auch beim Motivieren an erster Stelle ihre eigenen  Materialien, was vermu ten lässt, dass sich Lehrkräfte  ein Repertoire  an Motivierungen  zulegen, da s sie in der Praxis testen,  erweitern  und regelmäßig nutzen .  3 Entscheidungsgrundlagen für motivierende Einstiege   Die meisten Lehrpersonen geben an, dass sie bei  Entscheidungen für oder gegen einen  motivierenden Einstieg vor allem Problemstellungen aus der Lebenswelt (57,4% ) sowie  Interessen der Schüler einbeziehen (50,3%) und sich an Informatikanwendungen im Alltag (51, 0%) sowie dem Vorwissen d er Schüler (44,5%) orientieren.   Die männlichen Teilnehmer berücksichtigen bei der Entscheidung für eine Motivierung  stärker als die Frauen eigene fachliche Interes sengebiete (m: 36,7%, w: 20,7%) und  aktuelle Ereignisse (m: 35,7%, w: 25,9%) . Lehre rinnen orientieren sich stär ker an räumlichen  Gegebenheiten (m: 10,2%, w: 24,1%), der Vernetzung zu anderen Unterrichtsin halten (m:  26,5%, w: 34,5%) und  Informatikanwendungen im Alltag (m: 48,0%, w: 55,2%).   Um zu untersuchen, welche Grundlage n die Entscheidung für eine Moti vierung am stärksten beeinflussen,  wurden die  Items den Faktoren Schüler , Fach Informatik  und Organisatorischem  zugeordnet. Bei der Entscheidung für einen motivierenden Einstieg richten sich  Informatiklehrkräfte am meisten nach ihren Schülern  (45,3% ). Danach berücksichtigen  sie fachliche Eigenheiten (30,7%) und organisatorische Gegebenheiten  (23,1% ).  4 Literaturverzeichnis   [Br12]  Brohm, M.:  Motivation lernen. Das Trainingsprogramm für die Schule.  Beltz, Weinheim, 2012.   [Jä15]  Jäckel, S.:  Schüler für Fachthemen interessieren und motivieren Informatikunterricht im Fokus Informatik un d Schule,  In (Jens Gallenbacher  Hrsg.):  Informatik allgemeinb ildend begreifen, INFOS 2015 , Darmstadt,  Germany. GI, 2015; S. 171 –180.  [Ke10]  Keller, J. M.:  Motivational design for lea rning and performance. The  ARCS model approach. Springer, New York, London, 2010 . 424 Stefanie Jäckelii “proceedings” — 2017/9/17 — 20:19 — page 425 — #425 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 1 Entwicklung eines Online-Tools zur Bestimmung objektorientierter Programmierkompetenzen Matthias Kramer1, Vahid Samimi2und Torsten Brinda3 Abstract: Basierend auf einem theoretisch hergeleiteten Kompetenzmodell f ¨ur objektorientierte Programmierung wird ein Prototyp eines Messwerkzeuges zur empirischen Bestimmung solcher Kompetenzen vorgestellt. Erste Tests existieren bereits, zuk ¨unftige Tests werden skizziert. Keywords: Objektorientierung, Kompetenzmessung, Messinstrument. 1 Einleitung und Hintergrund Bedingt durch die Ergebnisse internationaler Vergleichsstudien [MN13] sind die normative Bestimmung und empirische ¨Uberpr ¨ufung von Kompetenzen Themen, denen sich die Forschung im Bereich der Erziehungswissenschaft und Psychologie in den letzten Jahren ausgiebig gewidmet hat [BGS15]. Im Bereich der objektorientierten Programmierung fokussiert sich das Projekt COMMOOP auf die Identiﬁkation ebensolcher Kompetenzen. In dessen Rahmen entsteht zurzeit ein Instrument, welches sich sowohl f ¨ur Vergleichsstudien großer Kohorten als auch f ¨ur individualdiagnostische Zwecke eignen wird. Basierend auf g ¨angigen Deﬁnitionen des Begriffs Kompetenz , siehe [Kl08], werden Kompetenzen im Bereich der objektorientierten Programmierung in diesem Zusammenhang als dom ¨anenspeziﬁsche kognitive und metakognitive F ¨ahigkeiten und Fertigkeiten verstanden, die Individuen in die Lage versetzen, Probleme im Bereich der objektorientierten Programmierung zu l ¨osen. Im Projekt COMMOOP ist im Rahmen einer intensiven Literaturrecherche dabei ein vierdimensionales Kompetenzmodell f ¨ur objektorientierte Programmierung entstanden [KHB16], Testitems wurden auf dessen Basis beispielhaft abgeleitet [KTB16a] und ein erster Subskalentest mit zw ¨olf Items erstellt [KTB16b]. Die Durchf ¨uhrung mittels Stift und Papier hat sich dabei jedoch bzgl. Auswertbarkeit und Erreichbarkeit von Testpersonen als nachteilig erwiesen. Daher wurde damit begonnen, eine elektronische Version des Testinstrumentes zu erstellen, die im weiteren Verlauf des Projektes sowohl zum summativen als auch zum formativen Assessment genutzt werden soll. 1Universit ¨at Duisburg-Essen, Didaktik der Informatik, Sch ¨utzenbahn 70, 45127 Essen, matthias.kramer@uni-due.de 2Universit ¨at Duisburg-Essen, Didaktik der Informatik, Sch ¨utzenbahn 70, 45127 Essen, vahid.samimi@stud.uni-due.de 3Universit ¨at Duisburg-Essen, Didaktik der Informatik, Sch ¨utzenbahn 70, 45127 Essen, torsten.brinda@uni-due.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 425ii “proceedings” — 2017/9/17 — 20:19 — page 426 — #426 ii i ii i2 Matthias Kramer, Vahid Samimi und Torsten Brinda 2 Implementierung, bisheriger Stand und Ausblick Um eine Installation des Messwerkzeugs auf Schulrechnern zu vermeiden, ﬁel die Entscheidung auf eine skriptbasierte Webimplementierung. Nach Besuchen eines entsprechenden Links werden die Probanden schrittweise durch die einzelnen Tests gef ¨uhrt. Zu Beginn geben sie entsprechende soziodemographische Daten ein (Alter, Geschlecht, Vorerfahrungen etc.), welche am Ende mit der erhobenen Leistung korreliert werden. Diese werden ¨uber eine HTTPS-Verbindung weitergeleitet und in einer Datenbank auf Servern der Universit ¨at Duisburg-Essen abgelegt. Anschließend werden die Testpersonen gebeten, die angezeigten Aufgaben nacheinander zu bearbeiten. Zeitgleich zur Bearbeitung werden den bisherigen Ergebnissen Skalenwerte der vorher postulierten Kompetenzdimensionen zugeordnet. Am Ende erhalten die Testpersonen eine individuelle ¨Ubersicht ¨uber St ¨arken und Schw ¨achen in den einzelnen Kompetenzdimensionen. Basierend auf dem vorher genannten Kompetenzmodell werden momentan schrittweise Tests entwickelt, die sich jeweils einzelnen Kompetenzfacetten zuordnen lassen. Es existieren Implementierungen f ¨ur das Markieren objektorientierter Konzepte in Quelltexten sowie f ¨ur das Interpretieren von Quelltexten in Abh ¨angigkeit von der Leistung des Arbeitsged ¨achtnisses. Diese wurden im Vorfeld bereits pilotiert. Im weiteren Verlauf werden diese schrittweise verbessert. Weitere Tests werden bspw. die F ¨ahigkeiten des mentalen Ausf ¨uhrens von Quellcode (Tracing), des l ¨uckenweisen Auff ¨ullens einzelner Schl ¨usselw ¨orter sowie des vollst ¨andigen Erg ¨anzens gr ¨oßerer Quelltextfragmente umfassen. Literaturverzeichnis [BGS15] Bl ¨omeke, Sigrid; Gustafsson, Jan-Eric; Shavelson, Richard J: Beyond dichotomies. Zeitschrift f ¨ur Psychologie, 2015. [KHB16] Kramer, Matthias; Hubwieser, Peter; Brinda, Torsten: A Competency Structure Model of Object-Oriented Programming. In: Learning and Teaching in Computing and Engineering (LaTICE), 2016 International Conference on. IEEE, S. 1–8, 2016. [Kl08] Klieme, Eckhard; Hartig, Johannes; Rauch, Dominique; Hartig, J; Klieme, E; Leutner, D: The concept of competence in educational contexts. Assessment of competencies in educational contexts, S. 3–22, 2008. [KTB16a] Kramer, Matthias; Tobinski, David A.; Brinda, Torsten: Modelling Competency in the Field of OOP: From Investigating Computer Science Curricula to Developing Test Items. In: Stakeholders and Information Technology in Education. International Federation for Information Processing, Springer, S. 37–46, 2016. [KTB16b] Kramer, Matthias; Tobinski, David A.; Brinda, Torsten: On the Way to a Test Instrument for Object-oriented Programming Competencies. In: Proceedings of the 16th Koli Calling International Conference on Computing Education Research. Koli Calling ’16, ACM, New York, NY, USA, S. 145–149, 2016. [MN13] Martens, Kerstin; Niemann, Dennis: When do numbers count? The differential impact of the PISA rating and ranking on education policy in Germany and the US. German Politics, 22(3):314–332, 2013.426 Matthias Kramer, Vahid Samimi, Torsten Brindaii “proceedings” — 2017/9/17 — 20:19 — page 427 — #427 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017    15 Der Biber der Informatik in Österreich Anmerkungen und Perspektiven  Peter Micheuz1, Gerald Futschek2    Keywords: Informatik, Biber der Informatik, Wettbewerb, Statistiken, Aufgaben.  Der „Biber der Informatik“-Bewerb [DS16] fand 2016 in Österreich zum 10. Mal statt und wurde von der Österreichischen Computergesellschaft organisiert [OCG16]. Die bei diesem Online-Bewerb generierten administrativen und aufgabenbezogenen Daten lieferten aufschlussreiche Ergebnisse.   Abb. 1: Schulstufenund schultypenspezifische Übersicht    Abb. 2: Prozentuelle Lösungshäufigkeiten und korrespondierende absolute Teilnehmerzahlen    Beispielsweise zeigte sich auch auch 2016 wieder eine sehr heterogene quantitative Verteilung der „Biber der Informatik“-Teilnahme auf die österreichischen Schultypen Grundschule (VS), Sekundarstufe I und II (AHS, NMS, BHS), Schulen und Jahrgänge (Abb. 1). Mit diesem Wissen ist eine zielgerichtete Bewerbung in den kommenden Jahren möglich. Die ermittelten Lösungshäufigkeiten bei den Aufgaben legen den Schluss nahe, dass die Aufgaben im Schnitt schwierig waren (Abb. 2).                                                              1 Alpen-Adria-Universität Klagenfurt, Institut für Informatikdidaktik, Universitätsstraße 65-67, 9020 Klagenfurt , peter.micheuz@aau.at 2 Technische Universität Wien, Institut für Softwaretechnik und Interaktive Systeme, Favoritenstraße 9/188, 1040 Wien, gerald.futschek@tuwien.ac.at I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 427ii “proceedings” — 2017/9/17 — 20:19 — page 428 — #428 ii i ii i16    Vorname1 Nachname1 und Vorname2 Nachname2   Das Biber-Jubiläumsjahr 2016 wurde auch durch empirische Umfragen begleitet. Eine davon war an die Biber-Organisatoren an den Schulen gerichtet und lieferte interessante Aufschlüsse im Hinblick auf Aufgabenstellungen, Organisation, Durchführung und Verbesserungswünsche. Dabei zeigte es sich unter anderem, dass  • über 70% bereits dreimal oder öfter den Informatikbiber organisiert haben,  • in ca. 1/3 der Schulen der Biber der Informatik auch in Klassen ohne formellen Informatikunterricht angeboten wurde, • die niederländische Wettbewerbsplattform zu über 90% technisch gut funktio-niert hat und es auch kaum technische Probleme (weniger als 10%) an der Schule gab, • die Biber-Aufgaben 2016 zu über 90% als gut befunden wurden, • ca. 30% die Aufgaben im Schnitt als zu schwierig empfanden und sich die Hälfte im Schnitt leichtere Aufgaben wünschen.  Die Entwicklungsperspektiven für den Biber der Informatik sind mannigfaltig. Der große Fundus an öffentlich zugänglichen Biber-Aufgaben, die Daten im Rahmen der Biber-Organisation an den Schulen und die Ergebnisse stellen gute Ausgangspunkte für viele Unterrichtsszenarien dar. Diese decken das breite Spektrum Digitaler Bildung von der Kerninformatik über Anwendungsorientierung bis hin zur Computer Literacy ab.  Der Aussage „Ich habe schulbezogene Ergebnisdaten nach dem Biber-Bewerb im Unterricht auswerten lassen“ wurde von einem Viertel der organisierenden Lehrkräfte zugestimmt. Abb. 3 zeigt zwei diesbezügliche konkrete Auswertungen von Schülern.     Abb. 3: Schülerarbeiten (Rangliste, Visualisierung zweier Klassenergebnisse)  Der Zugriff auf den Biber-Datenbestand (sowohl auf Schulebene als auch anonymisiert  auf nationaler Ebene z.B. im Rahmen der Open Data Initiative) eröffnet ein weites praktisches und didaktisches Betätigungsfeld für viele Spielarten von Anwendersoftware. Literaturverzeichnis [DS16] Dagiene, V.; Sentance, S.: It’s Computational Thinking! Bebras Tasks in the Curriculum. In International Conference on Informatics in Schools: Situation, Evolution, and Perspectives, Springer International Publishing, S. 28-39, 2016. [OCG16] OCG, Österreichische Computergesellschaft, www.ocg.at/de/biber-der-informatik, Stand: 10.2.2017. 428 Peter Micheuz, Gerald Futschekii “proceedings” — 2017/9/17 — 20:19 — page 429 — #429 ii i ii i-Ira Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 11 „Informatik im Unterricht – So geht’s“ – Informatik im Primarbereich Martin Fricke, Kathrin Haselmeier, Ludger Humbert, Dorothee Müller, Daniel Siebrecht1 Abstract: An Beispielen wird veranschaulicht, wie die Verzahnung von Prozessund Inhaltsbereichen der Bildungsstandards Informatik für Schülerinnen und Schüler des Primarbereichs gestaltet wird. Keywords: Informatik im Primarbereich, Grundschule, informatische Bildung, Bildungsstandards 1 Informatik im Primarbereich Für zwei aktuelle Projekten zur informatischen Bildung im Primarbereich ist die Kompetenzebene eine zentrale Analyseund Konstruktionsebene der angestrebten informatischen Bildung. In der Informatikdidaktik hat sich die Strukturierung der Bildungsstandards durch je fünf Prozessund Inhaltsbereiche, die in den konkreten Kompetenzen verwoben sind, durchgesetzt. Dies wird in beiden Projekten für den Primarbereich adaptiert. Arbeitskreis „Bildungsstandards Primarbereich“ (   Primar) –    Der  Primar des Fachausschusses Informatische Bildung in Schulen (        ) der    erarbeitet Bildungsstandards Informatik für den Primarbereich [GI17]. Damit werden die Anforderungen für informatische Allgemeinbildung für Schülerinnen und Schüler im Primarbereich auf Kompetenzebene ausgewiesen. Projekt Informatik an Grundschulen (IaG) – Nordrhein-Westfalen IaG [MS17] ist ein Pilotprojekt zur Erprobung von Konzepten zur Förderung der informatischen Bildung an Grundschulen. Es wird in Kooperation der jeweiligen Fachdidaktik Informatik der drei universitären Standorte RWTH Aachen , Universität Paderborn und Bergische Universität Wuppertal mit dem Schulministerium Nordrhein-Westfalen durchgeführt. An jedem Standort arbeiten zwei Grundschullehrkräfte. Gemeinsam mit den Fachdidaktiken erarbeiten sie themenspeziﬁsche Module (Unterrichtseinheiten), die den Schülerinnen und Schülern einen Einblick in die Informatik ermöglichen und sie bei der Entwicklung eines grundlegenden Verständnisses von zentralen Gegenständen der Informatik unterstützen. 1Grundschule Stübchen Solingen, O  ene Ganztagsschule Liegnitzerstr. Wuppertal, Bergische Universität Wuppertal, Didaktik der Informatik – {mfricke,khaselmeier,humbert,dmueller,siebrecht}@uni-wuppertal.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 429ii “proceedings” — 2017/9/17 — 20:19 — page 430 — #430 ii i ii i12 Martin Fricke, Kathrin Haselmeier, Ludger Humbert, Dorothee Müller, Daniel Siebrecht 2 Verzahnung von Prozessund Inhaltsbereichen Informatik im Primarbereich steht derzeit in den Anfängen der theoretischen und praktischen Umsetzung. Insbesondere ist Informatik derzeit kein verpﬂichtendes Element der Lehrerbildung. Damit fehlt sowohl die informatische Expertise in der Grundschule wie auch die Grundschulexpertise in der Informatik. Die Einbeziehung von Grundschullehrkräften in die Ausarbeitung der Bildungsstandards und die Vermittlung informatischer Grundlagen für Grundschullkräfte sind zwei Seiten der selben Medaille. Der   Primar trägt dieser Verknüpfung Rechnung, dort wird gemeinsam fachwissenschaftlich und grundschuldidaktisch diskutiert. Parallel erschließen im Projekt IaG Grundschullehrkräfte grundlegende Aspekte der Informatik und entwickeln Ideen für die Umsetzung in der Grundschule. Aus diesen Arbeitsprozessen resultiert die Aufarbeitung der Prozessund Inhaltsbereiche der Informatik in eine übersichtliche Darstellung für Lehrkräfte in der Primarstufe [Fr16]. Aus der Verbindung der Prozessund Inhaltsbereiche entsteht die Kompetenzebene. Die Zuordnung erfolgt nicht in einer Eins-zu-eins-Zuordnung, damit die Fehlvorstellung vermieden wird, dass nur eine Kompetenz je Prozessoder Inhaltsbereich konstruiert werden kann. Um zudem zu verdeutlichen, dass sich nicht in jeder der Kompetenzen genau ein Prozessund ein Inhaltsbereich verbinden, wurden auch Kompetenzen gewählt, denen mehrere Bereiche zuzuordnen sind. Die Schülerinnen und Schüler erfahren die informatische Modellierung (inklusive der Implementierung), indem sie beispielsweise gemeinsam eine Steuerung für einen Roboter entwickeln. Der Inhaltsbezug ist dabei der Bereich Information und Daten. Die Vielfalt der Möglichkeiten zur Verzahnung lässt den zukünftigen Lehrkräften den benötigten Gestaltungsspielraum, um Kompetenzen in ihrem Unterricht anzubahnen und zu erreichen. Gleichzeitig werden die Prozessund Inhaltsbereiche knapp dargestellt und mit Beispielen veranschaulicht, um den Zugang zu diesem – für die Lehrkräfte an Grundschulen meist völlig fremden – Lerngegenstand zu ermöglichen. Literatur [Fr16] Fricke, M.; Haselmeier, K.; Humbert, L.; Müller, D.; Rumm, P.: Informatik im Unterricht – So geht’s, Plakatgraﬁk zu Informatik an Grundschulen, Wuppertal, 2016,    :http://metager.to/0t0xl , Stand: 16. 08. 2017. [GI17] GI: Grundsätze und Standards für die Informatik in der Schule – Bildungsstandards Informatik für den Primarbereich, Erarbeitet vom Arbeitskreis „Bildungsstandards Informatik im Primarbereich“ –   – Gesellschaft für Informatik (GI) e. V., 18. Juli 2017,    :http://metager.to/gibsppdf , Stand: 16. 08. 2017. [MS17] MSB NRW, Hrsg.: Informatik an Grundschulen, Pilotprojekt zur Erprobung von Konzepten zur informatischen Bildung im Rahmen des Sachunterrichts an Grundschulen, MSB NRW – Ministerium für Schule und Bildung des Landes Nordrhein-Westfalen, Juli 2017,    :http://IaG.nrw.de/ , Stand: 16. 08. 2017.430 Martin Fricke et al.ii “proceedings” — 2017/9/17 — 20:19 — page 431 — #431 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft f ¨ur Informatik, Bonn 2017 1 Jugendwettbewerb Informatik: BWINF f ¨ullt die L ¨ucke Wolfgang Pohl, Robert Czechowski1 Abstract: Durch Einf ¨uhrung des Jugendwettbewerbs Informatik (JwInf) mit begleitenden Lernangeboten zu Informatik-Grundlagen und Programmierung schließen die Bundesweiten Informatikwettbewerbe (BWINF) die L ¨ucke zwischen Informatik-Biber und Bundeswettbewerb Informatik. Keywords: Informatikwettbewerbe, Sch ¨ulerwettbewerbe, Talentf ¨orderung Das Projekt”Bundesweite Informatikwettbewerbe“ (BWINF) soll im Sinne der Vereinigung von Breitenund Spitzenf ¨orderung pyramidal organisiert sein [Poh16], mit Wettbewerbsformaten, die einerseits aufeinander aufbauen, deren (potenzieller) Teilnahmekreis sich andererseits durch steigende fachliche Anforderungen nach und nach verkleinert. Bis 2016 gab es drei Stufen in dieser Wettbewerbspyramide: • Auf der Eingangsstufe steht der Informatik-Biber [PSH09]. Dieses Online-Format wird seit 2007 j ¨ahrlich angeboten, bis 2015 f ¨ur die Sekundarstufe und seit 2016 auch f ¨ur die Primarstufe (Jahrgangsstufen 3 und 4). In diesem Format k ¨onnen Teilnehmende ihre Neigung f ¨ur das”digitale Denken“ (engl.: computational thinking) der Informatik entdecken und werden motiviert, sich n ¨aher mit der Disziplin auseinanderzusetzen. Am Informatik-Biber nahmen im Jahr 2016 in Deutschland ¨uber 290.000 Kinder und Jugendliche teil. • Die zentrale Stufe bildet der Bundeswettbewerb Informatik (BwInf) [Poh06]. 1980 gegr¨undet, wird er seit 1984 j ¨ahrlich als Aufgabenwettbewerb durchgef ¨uhrt. Ein Erfolg in diesem Leistungswettbewerb setzt erste Fachkenntnisse wie Wissen ¨uber grundlegende algorithmische Prinzipien und erste Programmierfertigkeiten voraus. Neben der fachlichen Vertiefung tr ¨agt der BwInf dazu bei, Jugendliche mit besonderem Potenzial zu erkennen, und erm ¨oglicht den Teilnehmenden, ihre Begabung auszuloten. • Die besten Teilnehmenden des BwInf haben schließlich die Chance, sich ¨uber ein Auswahlverfahren f ¨ur das deutsche Team bei der Internationalen Informatikolympiade (IOI) zu qualiﬁzieren. Diese dritte Wettbewerbsstufe f ¨ordert Jugendliche mit außerordentlichem Potenzial und vermittelt Fachkenntnisse auf Hochschulniveau. Dieser Aufbau weist aber noch eine deutliche L ¨ucke auf. Eine Teilnahme am InformatikBiber ist ohne Fachkenntnisse und mit wenig Aufwand m ¨oglich. Wird durch die BiberTeilnahme das Interesse an Informatik erfolgreich geweckt, m ¨ussen zur Teilnahme am BwInf erste Fachkenntnisse erworben werden; in der Schulbildung werden diese in der 1BWINF (Bundesweite Informatikwettbewerbe), Reuterstr. 159, 53113 Bonn, {pohl|czechowski }@bwinf.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 431ii “proceedings” — 2017/9/17 — 20:19 — page 432 — #432 ii i ii i Abb. 1: Die”BWINF-Wettbewerbskarriere“ Regel erst in der Sekundarstufe 2 vermittelt. Außerdem ist die BwInf-Teilnahme mit hohem Aufwand verbunden. Um Biber-TeilnehmerInnen eine fr ¨uhere und weniger arbeitsreiche Wettbewerbsteilnahme zu erm ¨oglichen, f ¨uhrt BWINF ab 2017 ein neues Wettbewerbsangebot ein: den Jugendwettbewerb Informatik (JwInf). In der ersten Runde wird die Teilnahme in einer Online-Plattform realisiert; zu l ¨osen sind in Mikrowelten eingebettete Probleme, in der Regel durch graﬁsche Programmierung mit kontextbezogener Semantik. In der zweiten Runde sollen dann Aufgaben wie im BwInf zu Hause bearbeitet werden, mit Hilfe frei w ¨ahlbarer Werkzeuge. Auch hierzu sind allerdings erste fachliche Kompetenzen n ¨otig oder zumindest hilfreich. Deshalb werden im Kontext des JwInf passende Lernangebote gemacht: etwa der seit einigen Jahren erfolgreich erprobte Online-Programmierkurs CS Circles2oder der Kurs ”Grundlagen der Informatik“ von code.org3, an dessen Lokalisierung sich BWINF beteiligt hat. Mit dem neuen Wettbewerbsformat und den begleitenden Lernangeboten wird es m¨oglich, die BWINF-Wettbewerbsformate fast nahtlos zu durchlaufen (vgl. Abb. 1). Es wird zu beobachten sein, wie gut der L ¨uckenschluss zwischen Informatik-Biber und Bundeswettbewerb Informatik gelingt. Wesentliches Maß f ¨ur den Erfolg wird die Resonanz auf die neuen Angebote und mittelfristig auch die Entwicklung der Teilnahme am Bundeswettbewerb Informatik sein. Literatur [Poh06] Wolfgang Pohl. Wettbewerb im Silberglanz. LOG IN , 26(141/142):10–13, 2006. [Poh16] Wolfgang Pohl. BWINF: Informatik mit Begeisterung entdecken. In Heinrich C. Mayr, Martin Pinzger (Hrsg.): INFORMATIK 2016 , Seiten 1149–1152, Bonn, 2016. Gesellschaft f¨ur Informatik. [PSH09] Wolfgang Pohl, Kirsten Schl ¨uter und Hans-Werner Hein. Informatik-Biber: InformatikEinstieg und mehr. In Bernhard Koerber, Hrsg., Zukunft braucht Herkunft: 25 Jahre INFOS – Informatik und Schule , Seiten 38–49, Bonn, 2009. Gesellschaft f ¨ur Informatik. 2cscircles.cemc.uwaterloo.ca/de 3studio.code.org/s/20-hour432 Wolfgang Pohl, Robert Czechowskiii “proceedings” — 2017/9/17 — 20:19 — page 433 — #433 ii i ii i Zur Berechnung  der Komplexität von einfachen  objektorientierten Programmen   Marc Roßner1  Abstract:  Das Komplexitätsmaß nach Peter Rechenberg lässt sich auf einfache objektorientierte  Programme übertragen. Solche Programme sind Gegenstand des Informatik -Unte rrichts . Dies stellt  eine Grundlage dafür dar, unterschiedliche Programme zu einer Aufgabe zu vergleichen.   Keywords: Komplexitätsmaß, Objektorientierung, Abituraufgaben   1 Übertragen der Software -Metrik von Rechenberg auf einfache  objektorientierte Programme  und C++   Unter  einfachen objektorientie rten Programmen sollen in dieser  Arbeit  solche Program me verstanden werden, die sich ausschließlich auf die Grundkonzepte Objekt und Klasse  beziehen. Diese Konzepte bieten die Möglichkeit des strukturierten Aufbaus vo n  Softwareprojekten. Man kann Teillösungen in Klassen auslagern und diese in einem  Hauptprogramm zur Gesamtlösung vereinen. Bei diesem Vorgehen kann die Implemen tierung der Methoden als quasi -prozedural angesehen werden; die Methoden können in  der Softwar e-Metrik wie gewöhnliche Prozeduren behandelt  werden.  Für das Berechnen  der Anweisungs und der Ausdruckskomplexität können die Regelungen aus [Re86]  unmittelbar übernommen werden. Das Berechnen der  Datenkomplexität kann bei den  Methoden so erfolgen, wie e s bei Rechenberg für die  modulare Programmierung  beschrieben ist . Bei der Datenkomplexität werden Namen in Modulen  als lokal  und erst  bei deren Verwendung im Hauptprogramm als global  bewertet. Sollten Module  ineinander geschachtelt sein, greift die Bewert ung mit der Blocktiefendifferenz . Für  Attribute soll gelten , dass sie im Sinne gekapselte r Zustandsdate n, auf die alle oder fast  alle Methoden der Klasse zugreifen, als global  bewertet werden  – unabhängig davon, ob  innerhalb der Implementierung der Klasse oder im Hauptprogramm.    2 Analysieren der A ufgabe „Plumpsack“   Das Spiel „Plumpsack“ [Ab08] ist mithilfe einer Ringliste zu realisieren. Die Ringliste  wird per Array implementiert. In Tabelle 1  sind die Bewertungen der vollständigen   prozedural en und objektori entierten Programme zum Spiel „Plumpsack“ angegeben .                                                              1 Friedrich -Schiller -Universität Jena, Fakultät für Mathematik und Informatik, Ernst -Abbe -Platz 2, 07743 Jena,  marc.rossner @uni -jena.de  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 433ii “proceedings” — 2017/9/17 — 20:19 — page 434 — #434 ii i ii i  prozedural  objektorientiert  Anweisungskomplexität  121.75  112.75  Ausdruckskomplexität  118 110 Datenkomplexität  122 136 Gesamtkomplexität  361.75  358.75  Tab. 1: Bewertung von Programmen zur Aufgabe „P lumpsack“.   Die Gesamtkomplexitäten der erarbeiteten Programme sind praktisch gleich. Daraus   lässt sich ableiten, dass man es in der Abiturprüfung dem Pr üfungsteilnehmer überlassen  kann, ob er eine Aufgabe prozedural ode r objektorientiert löst (bei Beschrän kung auf die  Grundkonzepte Klasse und Objek t).  3 Analysieren der A ufgabe „Liste“   Eine einfach verkettete L iste ist mit Hilfe eines Arrays  zu realisieren [Ab07].  In Tabelle  2 sind die Bewertungen von drei  unterschiedlichen Lösungsmöglichkeiten der Aufgabe  angegeben .  Zwei 1D Arrays  Ein 2Dstring -Array  Ein 1D struct -Array  Anweisungskomplexität  339.5  377 338.5  Ausdruckskomplexität  200 258 221.5  Datenkomplexität  308 312 361 Gesamtkomplexität  847.5  947 921 Tab. 2: Bewertung von drei Musterlösungen zur Aufgabe  „Liste“.  Wenn man dem Prüfungsteilnehmer die konkrete Realisierung der Datenstruktur  überlässt , muss man damit rechnen, dass sich die Gesamtkomplexitäten der entwickelten  Programme in der Größenordnung 10% voneinander unterscheiden. Diese  Größenordnung er scheint auch in einer Abiturprüfung vertretbar.  Nachdenklich stimmt  der Unterschied in den Gesamtkomplexität en von Programmen zu den beiden  Abituraufgaben , obwohl mit beiden Aufgaben die gleiche Anzahl von  Bewertungseinheiten erreichbar war (jeweils 30 BE v on 60 BE für die gesamte  Abiturpüfung).   Literaturverzeichnis   [Ab07] Freistaat Thüringen: Abiturprüfung 2007 Leistungsfach Informatik (Haupttermin) .  [Ab08 ] Freistaat Thüringen: Abiturprüfung 2008 Leistungsfach Informatik (Haupttermin) .  [Re86]  Rechenberg, P eter: Ein neues Maß für die softwaretechnische Komplexität von  Programmen. In: Informatik Forschung und Entwicklung (1986) 1: 26 -37. 434 Marc Roßnerii “proceedings” — 2017/9/17 — 20:19 — page 435 — #435 ii i ii i Wie stellen sich S chülerinnen und Schüler  informatische  Konzepte vor und welche sprachlichen Bilder nutzen sie?   Arne Saathoff1  Abstract:  Viele Jugendliche wissen nicht, wie grundlegende Technologien der Informatik bzw.  bestimmte informatische Konzepte funk tionieren. Die Kompetenzen jüngerer SuS2 beschränken  sich oftmals auf das Benutzen bestimmter Hard und Softwares, wodurch sie lediglich  Produktwissen erlangen. Erstrebenswerter ist es aber, den SuS ebenfalls Konzeptwissen zu  vermitteln, damit sie in der L age sind, Gelerntes in einen größeren Zusammenhang einzuordnen  und früher erworbene Kompetenzen auf neue Situationen anzuwenden. In dieser Untersuchung  werden Interviews mit SuS analysiert, um Kenntnisse darüber zu erlangen, wie sich SuS  informatische Inha lte erschließen und welche Formen des Relational Reasoning dabei von ihnen  genutzt werden.   Keywords: Relational Reasoning, Analogie, Anomalie, Antinomie, Antithese, Metapher   1 Einleitung   In der durchgeführten Studie sollen die Vorkenntnisse und Vorstellungen  von SuS  bezüglich informatischer Sachverhalte, die insbesondere alltägliche Aktivitäten im  Internet betreffen, untersucht werden. Das Erkenntnisinteresse liegt darin, die von SuS  verwendeten Formen des Relational Reasoning zu ermitteln, damit Rückschlüsse  auf den  Gebrauch von sprachlichen Konstrukten, wie Vergleiche mit bereits bekannten  Sachverhalten oder die konkrete Abgrenzung von unzutreffenden Ko nzepten, gezogen  werden können . Jablansky, Alexander, Dumas und Compton [JADC15] hypothetisierten  im Jahr 2 015, dass die Analyse technologischer Objekte, vor allem solcher , die neuartig  und unbekannt sind, Kindern und Jugendlichen die Möglichkeit bietet, vergleichend zu  begründen („to reason relationally“ [JADC15], p. 3). Ein Teil des Ergebnisses war die  Erkenn tnis, dass alle befragten SuS in irgendeiner Form das Relational Reasoning  anwenden, wobei die Analogie die am häufigsten auftretende Form war. Analogien  zeichnen sich durch das Heranziehen von Vergleichen aus. Gerade deshalb können sie  genutzt werden, um komplexe Sachverhalte mithilfe von analogen Sprachbildern  (Metaphern) zu verdeutlichen. Besonderes Augenmerk liegt daher auf der Frage, welche  Rolle Metaphern dabei spielen könnten, informatische Inhalte zu versinnbildlichen.  Somit dient diese Ausarbeitung  einerseits der Forschung im Bereich der Didaktik der  Informatik, andererseits soll sie Lehrkräften einen Einblick in die Vorstellungen von SuS  geben und diesbezüglich deren Verwendung von Sprache aufzeigen.                                                               1 Universität Oldenburg, Department für Informatik, Abteilung Informatik in der Bildung, 26111 Oldenburg,  arne.saathoff@uni -oldenburg.de   2 Im Folgenden als Abkürzung für Schülerinnen und Schüler  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 435ii “proceedings” — 2017/9/17 — 20:19 — page 436 — #436 ii i ii i 2 Auswertung der Interviews   Das Datenmaterial  dieser Untersuchung entstamm t einer im Jahr 2010 verfassten  Masterarbeit. Dabei wurden 11 Interviews mit insgesamt 23 SuS geführt. Die  Interviewpartner konnten damals durch eine Kooperation mit zwei Schulen gewonnen  werden.  Daher handelt es sich um eine Sekund äranalyse, die  mithilfe der qualitativen  Inhaltsanalyse nach Mayring [May15]  durchgeführt wurde. Dabei fiel auf, dass die SuS  fast ausschließlich die Analogie heranzogen, indem sie einen unbekannten Sachverhalt  bzw. eine unbekannte Funktionsweise des Inter nets mit einem ihnen vertrauten  Sachverhalt verglichen. Im Zuge dieses Vergleichens wurde in allen Fällen ein  sprachliches Bild (Metapher) verwendet.  Um einen Einblick in die vollständige  Auswertung und die Datensätze zu erhalten, sei auf die Masterarbeit [Saa16] verwiesen.   3 Ergebnisse und Fazit   Analogien, wie d ie Männchen bzw.  Post-Metapher , sind gut geeignet , um die  allgemeinen Vorgänge und Abläufe im Internet zu versinnbildlichen. Einzelne  Phänomene, wie Streaming, können durch den Vergleich mit dem Kurz zeitgedächtni s  oder einem Kopierer erklärt werden. Die Geschwindigkeit der Da tenübertragung wird  mithilfe von  Multitasking  oder dem Gespräch beschrieben. Die Klötzchen -Metapher  dient dazu , die Paketierung im Zuge der Datenübertragung zu veranschaulichen.   Lehrkräfte könnten  die genannten Analogien  als Grundlag e für die Unterrichtsplanung  nutzen. Dabei eigenen sich Metaphern insbesondere zur bildlichen Darstellung von  komplexen informatischen Sachverhalten, die zum ersten Mal behandelt werden. Die  Komplexitä t eines informatischen Konzepts kann durch ein analoges Konzept, welches  SuS vertraut ist, reduziert werden . Auf Grundlage dieser Versinnbildlichung muss dann  wiederum der Bezug zu der tatsächlichen wissenschaftlichen Sichtweise hergestellt  werden. Dieser V organg birgt einerseits Gefahren, wenn sich SuS womöglich nicht  ausreichend von einer Metapher distanzieren können. Andererseits birgt der Einsatz  geeigneter Metaphern durchaus Potenzial, SuS eine Hilfestellung bzw. ein  Gedankengerüst zu bieten, um inform atische Konzept e zu durchdringen .  Literaturverzeichnis   [JADC15 ] Jablansky, S.; Alexander, P. A.; Dumas, D. & Compton, V. (2015). Developmental  Differences in Relational Reasoning Among Primary and Secondary School Students.  Journal of Educational Psychology , 108(4), pp. 592 –608.  [May15 ] Mayring, P. (2015). Qualitative Inhaltsanalyse Grundlagen und Techniken (12.  Aufl.). Weinheim und Basel: Beltz Verlag.   [Saa16 ] Saathoff, A. (2016). Analyse der Verwendung von Relational Reasoning in  Schülerinterviews über i nformatische Konzepte. Masterarbeit. Universität Oldenburg . 436 Arne Saatho  ii “proceedings” — 2017/9/17 — 20:19 — page 437 — #437 ii i ii i-Ira Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 11 Sei selbst der Igel! – Umsetzung ausgewählter Elemente der phänomenorientierten Informatik Daniel Siebrecht1 Abstract: In diesem Beitrag wird ein Konzept vorgestellt, das Bewegung bewusst als informatischen Unterrichtsgegenstand au  asst und ihn mit der Algorithmik verknüpft. Dadurch bieten sich nicht nur die klassischen Formen der symbolischen oder ikonischen Visualisierung von Problemstellungen an: Naheliegend kann ebenso ein enaktiver Zugang gewonnen werden. Die Lernenden führen im vorliegenden Konzept die Algorithmen selbst durch, sodass sich schließlich das Ausführen algorithmisierter Bewegung als ergänzende Alternative zur gewohnten Implementation am Informatiksystem herausstellt. Keywords: Implementation; Bewegung; Algorithmik; enaktiv 1 Bewegung als informatischer Unterrichtsgegenstand Üblicherweise wird Bewegung im Zusammenhang mit Informatikunterricht methodisch assoziiert. Namhafte Arbeiten in der internationalen Informatikdidkatik legen nahe, dass sich die enaktive Erarbeitung informatischer Konzepte in Form größerer Motivation und ergiebigeren Lernerfolgs rentiert (z. B. [BWF15]). Rollenspiele und Aktivitäten sind eindeutig einer methodischen Aufwertung des Informatikunterrichts zuzurechnen. Ein Informatikunterricht, der aber beispielsweise die Straßenüberquerung oder den „Tanz der Bienen“ analysiert und modelliert, versteht Bewegung als Sachgegenstand . Als wesentliche Bezugsthematik ist die Algorithmik der Bewegung zuzuorden: Bei der Notation von Bewegungsabläufen (Kinetographie) werden algorithmische Strukturen verwendet. Verkehrsnetze – etwa auch Labyrinthe – bergen vornehmlich „Weg-Problemstellungen“. Hüpfekästchen und schrittmusterartiges Bewegen oder gar Tanzen bieten hingegen keine direkte Problemstellung, setzen sich aber aus Strukturen algorithmischer Elemente zusammen. Nicht kinetisch bedingte Algorithmen wären hingegen beispielsweise der Euklid-Algorithmus, String-Matching-Algorithmen oder Algorithmen zur Datenbankanalyse. Somit lässt sich eine Schnittmenge zwischen Algorithmik und Bewegung (Kinalgorithmik) ﬁnden, „die sich mit der Untersuchung, Lösung und Umsetzung von kinetographischen Problemstellungen auseinandersetzt“ ([Si15, S. 27]). Zieldimension ist das Analysieren und Modellieren kinetischer Strukturen und Probleme, deren Lösung perspektivisch zu einer Ausführung gebracht werden soll, sei es nun auf einem Informatiksystem oder durch einen Menschen. 1Bergische Universität Wuppertal, Didaktik der Informatik – siebrecht@uni-wuppertal.deI. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 437ii “proceedings” — 2017/9/17 — 20:19 — page 438 — #438 ii i ii i12 Daniel Siebrecht 2 Alternative Implementation durch Bewegung Der Vorschlag ist also eine Alternative zur „klassischen“ Implementation am Informatiksystem in Form menschlicher Bewegungsausführung (anthropokinetische Implementationsalternative). Dabei mögen virtuelle Systeme, die vornehmlich den visuellen Lernkanal bedienen, in den Hintergrund treten, um durch Haptik und Motorik enaktiv Lernprozesse zu initiieren und zu fördern, welche zur Aneignung informatischer Kompetenzen auf konzeptueller Ebene befähigen sollen. Statt einen Editor zu ö  nen, um Quelltext zu verfassen, und diesen anschließend kompilieren zu lassen oder interpretieren zu lassen , böte sich den Schülerinnen und Schülern die Möglichkeit, nach einer zeite  zienten Notation der Programmsequenz mit Stift und Papier dieses Programm unmittelbar im Anschluss an die Entwicklung selbst als Programm ausführende Instanz zu übersetzen und zwar in eigene Körperbewegungen. Dies kann aber nur umgesetzt werden, wenn der modellierte Gegenstand kinalgorithmischer Natur ist. „Die eigentliche Sprache, die es dabei zu lernen gilt, ist [nämlich] weniger eine beliebige Programmiersprache, sondern eher die Algorithmik selbst“ ([Si15, S. 28]). D       fordert in diesem Sinne eine zielgerichtete Handlungsfähigkeit „im Umgang mit den programmtechnischen Konzepten“ ([Di03, S. 226]); der „Einsatz der natürlichen Fähigkeiten“ ([Di03, S. 228]) sei dabei besonders wichtig; er verweist darauf, dass die Lernenden bei einer Informatiksystem gestützten Implementation mit dem „trial and error“-Prinzip auf die Rückmeldungen des Compilers antworten. Bei der angedachten Alternative zeigt sich ein eindeutiger Vorteil darin, dass die Lernenden dazu angehalten wären, sich selbst hinsichtlich einer fehlerbehaftet notierten Programmsequenz korrigieren zu müssen – ohne dabei die Schuld auf „Dritte“ schieben zu können. Literatur [BWF15] Bell, T.; Witten, I. H.; Fellows, M.: Teaching Computer Science Unplugged. Teachers’ Edition. An enrichment and extension programme for primary-aged students. Computer Science Unplugged, 2015. [Di03] Dißmann, S.: Handlungsorientiertes Erlernen von Programmkonstruktionen anhand von Rollenspielen. In (Hubwieser, P., Hrsg.): Informatische Fachkonzepte im Unterricht, INFOS 2003, 10. GI-Fachtagung Informatik und Schule, 17.-19. September 2003 in Garching bei München. Bd. 32. Lecture Notes in Informatics, Gesellschaft für Informatik, Bonn, S. 225–235, 2003. [Si15] Siebrecht, D.: Einführung algorithmischer Elemente unter kinetographischen Aspekten, 2015,    :http://bscw.ham.nw.schule.de/pub/bscw.cgi/ 6586882 , Stand: 17. 08. 2017.438 Daniel Siebrechtii “proceedings” — 2017/9/17 — 20:19 — page 439 — #439 ii i ii iIra Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 Ergänzendes eLearning-Angebot für pädagogische Fachkräfte aus dem Vorund Grundschulbereich zum leichten Einstieg in die Elementarinformatik Anke Steinhäuser1 Abstract: Um informatische Ansätze bereits in der Vorund Grundschule zu etablieren, müssen gezielte eLearning-Konzepte entwickelt werden, die auch bei weniger medienaffinen pädago-gischen Fachkräften Freude und Interesse hervorrufen. Exemplarisch wird eLEx vorgestellt, ein eLearning-Angebot zum leichten Einstieg in die Elementarinformatik. Die digitalen Lerneinheiten bilden ein eigenes Konzept, das sich aus der Experimentierkiste Informatik [Sc16] begründet und dabei helfen soll, bei Lehrenden Synergien zwischen Elementarinformatik und Medienbildung zu erzeugen.  Keywords: Elementarinformatik, digitale Lerneinheiten, Medienbildung 1 Einleitung und Motivation Die digitale Bildungsoffensive ist eine große Herausforderung für alle Lehrkräfte, die weiterhin im „Anlogen“ verhaftet sind und digitalen Technologien skeptisch gegenüber-stehen [In14]. Um auch die Gruppe von medienund informatikfernen Pädagoginnen und Pädagogen für die Grundlagen der Informatik zu begeistern, braucht es gezielte mo-tivationale Schulungskonzepte, um Ängste abzubauen, Verständnis zu fördern und praxisorientierte Grundlagen [Re05] zu vermitteln. Daraus entstand die Idee von eLEx, einem e-Learning-Angebot, aufbauend auf der Handreichung zur Experimentierkiste In-formatik [Sc16] unter Berücksichtigung multimedialer, mediendidaktischer und motiva-tionaler Grundlagen. 2 Projektziele und Vorgehen Die digitalen Lerneinheiten von eLEx haben hohen Praxisbezug und sollen Lehrkräfte zur reflexiven Auseinandersetzung anregen. Ziel ist es, Synergien zwischen digitaler Medienbildung und Einstellungsänderungen zur Informatik zu erzeugen. Mit eLEx wurde deshalb ein leicht zugängliches und anschauliches Fortbildungsangebot als Vorbereitung für den Einsatz der Experimentierkiste Informatik konzipiert.                                                              1Otto-Friedrich-Universität Bamberg, Fakultät Wirtschaftsinformatik und Angewandte Informatik, Forschungsgruppe Elementarinformatik, An der Weberei 5, 96045 Bamberg, ute.schmid@uni-bamberg.de, zgl. Friedrich-Alexander-Universität, Erlangen-Nürnberg, Philosophische Fakultät, Master Multimedia Didaktik, eLEx unveröffentlicht, erhältlich via E-Mail von anke-steinhaeuser@gmx.de. I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 439ii “proceedings” — 2017/9/17 — 20:19 — page 440 — #440 ii i ii i16    Anke Steinhäuser   3 Empirische Studie und Ergebnisse  Die qualitative Erhebungsmethode wurde mit einem teilstrukturierten Interviewleitfaden und der Auswertung durch MAXQDA an fünf Testpersonen durchgeführt. Produktund lernprozessbezogene Fragen zu Usability, Selbstwirksamkeit, Kompetenzerleben und die Teilnahme an weiteren ähnlichen Schulungen standen im Fokus. Die Zielgruppe schätzte die Darbietung praxisnaher Beispiele für ihren pädagogischen Kontext als relevant und praxistauglich ein, hatte Spaß an eLEx und traute sich infolgedessen auch den Einsatz der Experimentierkiste Informatik in der eigenen Einrichtung zu.   Die Abb. zeigt die Bedürfnisse der Zielgruppe in Bezug auf eLEx: Die helle Füllung wird als positiv, die zweifarbige als he-terogen und die dunkle als ver-besserungswürdig eingestuft. Der Wunsch nach kleinschrittigeren Anleitungen wurde mehrfach ge-äußert. Insgesamt wurde eLEx  als bereichernd empfunden. Zu-dem wurde vorgeschlagen, eLEx in der Arbeit mit jungen Flücht-lingen einzusetzen und die „Kis-te“ modifiziert für fünfte und sechste Klassen anzubieten. 4 Diskussion und Ausblick Medienbildung verknüpft mit informatischen Grundlagen fördern ein nachhaltiges Verständnis für Informatik in der digitalen Welt. Lehrkräfte aus dem Vorund Grund-schulbereich ohne informatische und mit nur geringen digitalen Vorkenntnissen werden mit eLEx stärker in den Prozess miteinbezogen [Th16]. Weitere Studien sind in Planung. Literaturverzeichnis [In14] Initiative D21 (2014). Medienbildung an deutschen Schulen. Handlungsempfehlungen für die digitale Gesellschaft. URL: www.initiatived21.de (Stand 02.06.2017). [Sc16] Schmid, U., Weitz, K., Wolking, M. (2016). Handreichung zur Experimentierkiste Informatik, Otto-Friedrich-Universität Bamberg, unveröffentlicht, erhältlich via E-Mail von ute.schmid@uni-bamberg.de.  [Th16] Thomas, M., Weigend, M. (Hrsg.) (2016). Informatik für Kinder. 7. Münsteraner Workshop zur Schulinformatik – 20. Mai 2016. Universität Münster: BoD, S.113-119.  440 Anke Steinhäuserii “proceedings” — 2017/9/17 — 20:19 — page 441 — #441 ii i ii i Informatik in der Elementarpädagogik – Herausforderung  für die Professionalisierung pädagogischer Fachkräfte   Maarit Stierle1  Abstract:  Die Realisierung  und der Erfolg informatische r Frühförderangebote  in Kindertages stätten sind hauptsächlich von der Quali fizierung der pädagogischen Fachkräfte abhängig. Dieser  Beitrag betont notwendige Maßnahmen im Rahmen der Professionalisierung frühpädagogischer  Fachkräfte. Abschließend führt er weitere relevante Vorarbeiten und Forschungsdesiderate für die  Implementierun g des Bildungsbereichs Informatik an.  Keywords: Elementarpädagogik, P rofessionalisierung, pädagogische Fachkräfte, informatische  Frühförderung,  Kinder tagesstätte,  MINT, Informatikdidaktik in der beruflichen Bildung   1 Professionalisierung pädagogischer Fachk räfte für die  informatische  Frühförderung   MINT -Fächer  sind für viele ErzieherInnen mit negativen Emotionen besetzt . Nicht  selten entschieden  sie sich mit ihrer Ausbildung bewusst gegen einen Beruf mit natur wissenschaftlichen und technischen Inhalten. Es müssen daher dringend Maßnahmen  ergriffen werden, um Vorurteile und Ängste zu überwinden sowie das generelle   Interesse an MINT -Themen  zu stimulieren . Angehenden pädagogischen Fachkräften  ist die Angst zu nehmen , dass informatische Erziehung  zu komplex für sie sei.  Außerdem sollten sie die informatische Frühförderung als Bestandteil ihres Berufs bilds erkennen. Mit ersten Workshops im Rahmen der Forschungsgruppe Elementar informatik konnten angehende  ErzieherInnen  an einer Fachakademie für Sozial pädagogik bereits für die informatische Frühförderung sensibilisiert werden. Die  ErzieherInnen zeigten sich anfangs zwar noch skeptisch , verstanden aber nach kurzer  Zeit, warum Informatik schon im Kinder garten alter eine wichtige Rolle spielt . Sie  entwicke lten nach  einer thematischen  Einführung sogar  eigene Ideen zur Umsetzung  in der Praxis.   Die Integration informatischer Frühförderung in die schulische Ausbildung der  pädagogischen Fachkräfte ist dringend erforderlich.  Sinnvoll erscheint es den MNE  durch die Etabli erung eines MINT -Unterrichts abzulösen, damit  auch die technische  Bildung in die beruflichen Schulen Einzug hält  und die Naturwissenschaftliche  Erziehung den Anforderungen des digitalen 21. Jahrhunderts angepasst wird . Der  Unterricht sollte didaktisch so g estaltet werden, wie die Förderung  auch tat sächlich in                                                              1 Universität Bamberg/Forschungsgruppe Elementarinformatik (FELI), An d er Weberei 5, 96045 Bamberg,  maarit.stierle@gmail.com  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 441ii “proceedings” — 2017/9/17 — 20:19 — page 442 — #442 ii i ii i den frühkindlichen Institutionen  für Kinder durchgeführt w ird, die weder lesen noch  schreiben können . Dement sprechend handelt es sich um eine kindgerechte  Unterrichtsgestaltung , sodass den Auszubild enden  didaktische und methodische  Kenntnisse für die Praxis vermittelt werden. Darüber hinaus benötigen  die  SchülerInnen und Studierenden auch Hintergrundwissen . Grundprinzipien für den  MINT -Unterricht als auch später für die informatische Erziehung in den  Kindertages stätten sind handlungs orientiertes, problem lösendes und entdeckendes Lernen. Die  Auszubildenden können sich im Unterricht in ihre späteren Kindergartenkinder hinein versetzen und dabei u.a. mögliche aufkommende Fragen entwickeln, diese stell en und  darauf angemessene Antworten oder Reaktionen finden. Die Lehrkraft nimmt  eine  tendenziell begleitende Rolle im MINT -Unterricht ein und hält sich im Hintergrund des  Geschehens. Die Auszubildenden  dürfen  möglichst viel selbst testen und dabei ihre  kommunikativen Kompetenzen aus bilden, um in ihrem späteren Beruf ko -konstruktive  Lernprozesse in den Kindertages stätten anregen zu können.   Die höhere Gewichtung der informatischen Frühförderung in der Ausbildung  pädagogischer Fachkräfte setzt entsprechende Kenntnisse bei den Lehrkräften für  berufliche Schulen voraus. Der doppelte pädagogische Bezug der Lehrkräfte erfordert , dass diese über fachliche sowie fachdidaktische Kompetenzen verfügen und  den Auszubildenden  praktisch vermit teln können, wie informatis che Frühf örderung in  der Praxis  stattfinden kann. Auch hier gilt  es, die MINT -Hochschuldidaktik in der  LehrerInnen -Ausbildung an die Umsetzung in den Kindertages stätten anzupassen.   2 Ausblick   Die informatische Frühförderung wird in den nächsten Jahren verst ärkt in den Fokus der  Bildungsdiskussionen rücken. Für die Realisierung der Informatik als Bildungsbereich in  Kindertagesstätten sind Maßnahmen bei der Ausbildung pädagogischer  Fachkräfte not wendig. Daneben stehen weitere Aufgaben für die erfolg reiche Im plementierung  informatischer Frühförderung aus: die Festlegung von Bildungsstandards und die Über arbeitung der Bildungspläne der Länder, die Ent wicklung konkreter Materialien zur  Frühförderung sowie Handreichungen für päda gogische Fachkräfte, Ausbau von  Fort und Weiterbildungsangeboten, die Erar beitung von Instrumenten zur Messung  informatischer Kompetenzen und der Effektivität von Förderangeboten,  Untersuchungen , wie sich Angebote zur Förderung informatischer Kompetenzen in  bestehende pädagogische Kon zepte von Kindertagesstätten integrieren lassen und viele  weitere Handlungsschritte , die sich sowohl direkt als auch indirekt auf die  Bildungsqualität der Kindertagesstätten auswirken.  442 Maarit Stierleii “proceedings” — 2017/9/17 — 20:19 — page 443 — #443 ii i ii i   Förderung digitaler Bildung mit digitalen Schulbüchern   Manuel Froitzheim1, Klaus Becker2, Martin Zimnol3, Daniel Jonietz4, Oliver Schneider5,  Heiko Jochum6  Abstract : Das elektronische Schulbuch inf -schule.de ist ein interaktives und multimediales  Schulbuch für den Informatikunterricht. Im folgenden Beitrag werden die Idee des elektronischen  Schulbuchs, sowie die Förderung der informatorischen Bildung durch inf -schule.de dargestellt und  mit Hilfe einer umfangreichen Evaluierung belegt. Die Befragun g per Fragebogen von 1170  Lernen den und 175 Lehrenden gibt zum Beispiel Aufschluss über die Möglichkeiten , die für den  Informatikunterricht durch den Einsatz des Schulbuchs entstehen.   Keywords: Elektronisches Schulbuch, Digitales Schulbuch, Informatikunterricht, Lernen,  Didaktik der Informatik, Web -Applikation   1 Einleitung und Motivation   Digitale Bildung wird inzwischen als unverzichtbar in einer immer stärker digital  geprägten und vernetzten Welt angesehen. Die Aneignung grundlegender Konzepte zum  Verständnis dieser Welt und die Entwicklung von Kompetenzen zur Mitgestaltung einer  solchen Welt sollte in einem eigenständigen Lernbereich erfolgen – so die einhellige  Forderung aller mit digitaler Bildu ng befassten  Fachdidaktiker [Da16]. Nur in einem  fundierten Informatikunterricht kann die anwendungsbezogene Perspektive (Wie nutze  ich das?) und die gesellschaftlich -kulturelle Perspektive (Wie wirkt das?) um die zum  Verständnis der digitalen Welt erforde rliche technologische Perspektive (Wie  funktioniert das?) erweitert werden.   Der Erwerb digitaler Bildung wird im Informatikunterricht gezielt gefördert. Das  Schulbuch als Leitmedium bei der Unterrichtsplanung und Unterrichtsgestaltung spielt  dabei eine zen trale Rolle  [Wi03], weil hier „Lerninhalte eines Faches oder Lernbereichs  in systematischer, didaktischer und methodischer Form“ bereitgestellt werden [Sa10].  Schulbücher wurden bisher in Buchform erstellt. Mit der Entwicklung digitaler bzw.                                                              1 Universität Siegen, Zentrum für ökonomische Bildung in Siegen (ZöBiS), Kohlbettstraße 15, 57068 Siegen,  froitzheim@zoebis.de   2 BurgG ymnasium Kaiserslautern, Burgstraße 18, 67659 Kaiserslautern , becker kp@web.de   3 Pädagogisches Landesinstitut Rheinland -Pfalz , Butenschönstraße 2, 67346 Speyer,  martin. zimnol@pl.rlp.de   4 Burg Gymnasium Kaiserslautern, Burgstraße 18, 67659 Kaiserslautern , daniel@jonietz.de   5 Sickingen -Gymnasium Landstuhl, Philipp -Fauth -Straße 3, 66849 La ndstuhl , o.schneider@mac.com   6 Werner -Heisenberg -Gymnasium Bad Dürkheim, Kanalstr. 19, 67098 Bad Dürkheim, jom@whgonline.de  I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017 443ii “proceedings” — 2017/9/17 — 20:19 — page 444 — #444 ii i ii i elektronischer  Schulbücher ist ein neues Forschungsfeld entstanden, das der  Entwicklung von Lernumgebungen neue Impulse verleiht [ScFr14][ScFr15][ScFr16] .  Gerade für die Förderung digitaler Bildung ergeben sich interessante Ansatzpunkte  durch das Lernen mit einem digita len Schulbuch – was im Folgenden genauer aufgezeigt  werden soll.   Im Zentrum unseres Forschungsansatzes steht u nter anderem  die Frage, welche  Möglichkeiten ein elektronisches  Schulbuch bietet, um den Erwerb digitaler Bildung im  Informatikunterricht noch eff ektiver und adressatengerechter zu gestalten, als d ieses  mit  gedruckten  Schulbüchern erfolgen kann.   Um dieser Frage nachzugehen, wurde und wird nach der Methode der fachdidaktischen  Entwicklungsforschung  [Pr12a][Pr12b]  ein Schulbuch entwickelt und im Unter richt breit  eingesetzt und getestet. Die Akzeptanz bei Lernenden  und Lehrenden  wurde durch eine  Erhebung quantitativ und qualitativ  evaluiert.  [Fr16a] [Fr16 b] Im Folgenden wird der  aktuelle Entwicklungsstand unter der Perspektive „Möglichkeiten eines digita len  Schulbuchs zur Förderung digitaler Bildung“ aufgezeigt.   2 Das Schulbuchprojekt inf -schule .de  Das Schulbuchprojekt inf -schule .de (vgl. http s://www.inf -schule.de/) wurde 2008  initiiert und inzwischen  ist ein elektronisches  Schulbuch für den Informatikunterricht  entwickelt  worden, das fast die gesamten Unterrichtsinhalte des Faches Informatik  abdeckt . Bezüglich  des Umfang s (mit mehr als 2000 Webseiten) und der Nutzerzahlen  (mit mehr als 100 .000 Zugriffen pro Schulwoche) hat  sich inf -schule .de inzwischen zum  akzeptierte n Lehrwerk für den Informatikunterricht  entwickelt . Genau w ie gedruckte  Schulbücher orientiert es sich an  den Lehrplänen und  den Bildungsstandards und bietet  vielfältiges Material zum Lernen und Lehren.   Das Schulbuch inf -schule .de wird als digitales Schulbuch im Internet angeboten. In der  nach Sanguo, Xuehai und Chenglin [Sa12] vorgeschlagen en Entwicklungshierarchie für  digitale Schulbücher ist es der Stufe 2.0 (Schulbücher ohne analoge Vorlage)  zuzurechnen. In weiten Teilen erreic ht es inzwischen auch die Stufe 3.0, die eine  Mitgestal tung durch die Nutzer vorsieht.    3 Forschungsdesign   Mit einer breit angelegten Online -Fragebogenaktion wurde die Nutzung und Akzeptanz  des digitalen Schulbuchs inf -schule.de bei Lernen den und Lehrenden  ermittelt und unter  wissentlichen Kriterien quantitativ und qualitativ evaluiert.  Die hohen Nutzerzahlen   ermöglich en es, über einen Online -Fragebogen zum  einen eine ausreichend große  Rückmeldung zu erhalten und zum anderen mit  den vorhandenen Ressourcen m öglichst  viele Lehrende und Lernende zu erreichen,  um die Akzeptanz und die Nutzung  bezüglich des elektronischen  Schulbuchs bei einer möglichst breiten Zielgruppe zu  messen. Ein weiteres Ziel  der Evaluieru ng bestand in der Erfassung von  444 Manuel Froitzheim, Klaus-Peter Becker, Martin Zimnol, Heiko Jochumii “proceedings” — 2017/9/17 — 20:19 — page 445 — #445 ii i ii i   Verbesserungsmöglichkeiten  und Anregungen für die weitere Entwicklung, um in den  folgenden Entwicklungszyklen  entsprechende Verbesserungen in das elektronische  Schulbuch  zu integrieren.   An der Befragung haben sich 242 Schülerinnen (20,2%) und 928 Schüler ( 77,5%)  beteiligt. Der geringe Anteil an Schülerinnen ist auf die Geschlechterverteilung in  Informatikkursen zurückzuführen. Der Wert von 20,2% entspricht ungefähr dem Anteil  der Frauen in den neuen IT -Berufen [HP10][ BB15 ]. Die Lernenden sind durchschnittli ch  16,9 Jahre alt. Der größte Teil der Lernenden ist der Sekundarstufe II (907 Lernende)  zuzuordnen. In der Sekundarstufe I sind 150 Lernende, und aus dem tertiären  Bildungsbereich (z.B. Universität und Fachhochschule) haben sich nur 12 Lernende an  der Eva luierung beteiligt.  An der Evaluierung haben zudem 175 Lehrende  Teilgenommen. Davon sind 29% weiblich und 71% männlich. Alle im Schuldienst  vertretenen Altersgruppen haben sich an der Evaluierung beteiligt.   4 Möglichkeiten eines digitalen Schulbuchs   Attrakt ive Lernangebote sind Ausgangspunkt für eine gezielte Förderung digitaler  Bildung. Im Folgenden werden die im digitalen Schulbuch inf -schule.de bereits  umgesetzten Möglichkeiten eines digitalen Schulbuchs zur Gestaltung solcher  Lernumgebungen aufgezeigt un d die Ergebnisse der Evaluierung dargestellt .   Verfügbarkeit   Das digitale Schulbuch inf -schule.de wird frei verfügbar als Webs eite im Internet  bereitgestellt. Das Schulbuch kann daher von jedem Interessierten jederzeit an (fast)  jedem Ort ohne irgendwelche Zugangsbarrieren genutzt werden.  Der Aspekt der   universelle n und freie n Verfügbarkeit im Internet wurde in der Evaluation mit Abstand  am höchsten bewertet.  Für 45% der befragten Personen (Lehrende und Lernende) hat  dieser Aspekt die größte Bedeutung am Erf olg des elektronischen Schulbuchs. Hier  spiegelt sich eine Entwicklung weg von Printmedien hin zu digitalen Medien wider, die  insbesondere bei Jugendlichen zu beobachten ist  [JIM15 ]. Wichtig ist es Jugendlichen  auch, dass die dargestellte Information auf v erschiedenen Endgeräten , vom Desktop Computer bis zum  Smartphone , flexibel angezeigt werden k önnen. Die Personen nutzen  das elektronische Schulbuch zu 35,6% auf einem Computer, zu 43,3% auf einem Laptop,  zu 13,2% auf einem Tablet und zu 7,9% auf einem Sma rtphone. Im Fragebogen war di e  Auswahl mehrerer Endgeräte möglich und der hohe Anteil an Desktop -Computer n lässt  sich durch die genutzte Ausstattung während des Unterrichts erklären. Die Nutzung auf  mobilen Endgeräten (21,1%) führt zur Notwendigkeit eines  responsive n Design s des  elektronischen Schulbuchs. Die befragten Personen äußerten eine starke Zustimmung  oder Zustimmung bei der Darstellung auf Computern (97,9%) und Laptops (97,2%) . Bei  Tablets ist die Zustimmung zur guten Darstellung mit 74,3% etwas s chlechter und bei  Smartphones liegt die Zustimmung bei 57,4%. Eine entsprechende Optimierung der  Darstellung auf mobilen Endgeräten ist in der Zukunft wünschenswert.  Förderung digitaler Bildung mit elektronischen Schulbüchern 445ii “proceedings” — 2017/9/17 — 20:19 — page 446 — #446 ii i ii i Mit der bisherigen Verfügbarkeit und Darstellung der Informationen im elektronischen  Schulbuch gelingt es,  Lernende  und Lehrende  anzusprechen und ihnen in  zufriedenstellender Art Lernangebote zur digitalen Bildung zu unterbreiten.   Die freie Verfügbarkeit im Internet hat zudem zur Folge, dass nicht nur die ursprünglich  vorgesehene Lerngruppe „ Schülerinnen und Schüler“ angesprochen wird, sondern auch  andere Interessierte. Aus vielfältigen Rückmeldungen , auch außerhalb der gezogenen  Stichprobe,  geht hervor, dass die Materialien zur Studienvorbereitung empfohlen werden  oder unterstützend im Studiu m verwendet werden. Diese zunächst unbeabsichtigte  Ausweitung des Nutzerkreises ist aber ganz im Sinne einer breit angelegten Vermittlung  digitaler Bildung.    Digitale Darstellung der Inhalte   Die digitale Darstellung von Materialien erlaubt es, Lerninhalte i n ihrer „natürlichen  Form“ vorzugeben. Dies soll anhand eines Lernszenarios erläutert werden.  Viele  Fachkonzepte der Informatik lassen sich effektiv vermitteln, wenn geeignete  Lernszenarien (z.B. als Programmfragment oder als ausführbares Modell) zum  Analy sieren , Variieren und Weiterentwickeln bereitgestellt  werden.  Nach einer  einführenden Aufgabe, die den Sinn von eigenständigen Unterprogrammeinheiten  motiviert , wird dem Lernenden  ein ausführbares Programmfragment vorgegeben, das  aufzeigt, wie die neue Ide e umgesetzt werden kann. Dieses Programmfragment soll von  den Lernenden  analysiert und per Analogiebildung vervollständigt werden.  (vgl.  Abb. 1)    Abb.  1: Beispiel: Einführung von Unterprogrammen (vgl. http://www.inf schule.de/programmierung/kara/unterprog ramme/erkundung_unterprogramm )  Aufwendig ist das Abtippen des Programmfragmentes, wenn es in einem Buch  abgedruckt ist. Natürlicher ist es, wenn man direkt auf das Lernmaterial zugreifen kann.  In einem digitalen Schulbuch lässt sich dies bei Quelltexten per „Copy and Paste “  erledigen, bei anderen vorgegebenen Materialien, indem man einem Link folgt.   446 Manuel Froitzheim, Klaus-Peter Becker, Martin Zimnol, Heiko Jochumii “proceedings” — 2017/9/17 — 20:19 — page 447 — #447 ii i ii i   Gerade bei der Vermittlung digitaler Bildung ist es günstig, wenn Lernmaterialien zu  den digital geprägten Lerninhalten in digitaler Form darg estellt und verfügbar gemacht  werden. Ein digitales Schulbuch ist von seiner Konzeption hierfür prädestiniert. Zudem  unterstützt es die digitale Aufbereitung von Lernprodukten, indem das Schulbuch als  Materiallieferant für ein digitales Heft oder digitales  Portfolio fungiert.  Durch die  digitale Verfügbarkeit der Materialien kann die Unterrichtszeit für die digitale Bildung  genutzt werden und  muss  nicht zum Abtippen von Quellcode verschwendet werden.    Multimediale Darstellung der Inhalte   Ein elektronisches  Schulbuch kann neben der text und bilderbasierten Darstellung  weitere Darstellungsmöglichkeiten nutzen. Mit Videos, Animationen usw. lassen sich  Sachzusammenhänge oft noch lerngerechter  aufbereiten.  Als Beispiel soll hier das  Teddy -Spiel zum Erlernen objek torientierter Fachkonzepte betrachtet werden.  Zusätzlich  zu den textuell dargestellten Spielregeln wird ein möglicher Spielablauf mit einem Video  aufgezeigt und die Projektvorlage für Greenfoot zum Herunterladen angeboten.   Abb.  2: Das Teddy -Spiel (vgl. http://www.inf schule.de/programmierung/oopjava/klassen/aufbau/teddy )  Aus den Rückmeldungen geht hervor, dass d ie Integration von multimedialen Inhalten  (z.B. Diagramme, Fotos und Videos) von 69,9% der Lernenden als wichtig erachtet wird   und die Animation von  dynamischen Vorgängen (z.B. Sortierverfahren) von 76,9% der  Lernenden . Allerdings wird das Schulbuch inf-schule.de immer noch als textlastig  angesehen. Die Bereitschaft, längere Textpassagen zu lesen, ist bei vielen Lernen den nur  eingeschränkt vorhanden.  Gewünscht wird eine weitere multimediale Aufbereitung.   Durch das unbegrenzte Platzangebot in einem elektronischen Schulbuch können weitere  Darstellungsformen hinzugefügt werden und vom Lehrenden passend zur Lerngruppe  oder auch individuell vom Lernenden pa ssend zu seinem Lernprofil  ausgewählt werden.  Die multimediale Darstellung ermöglicht es, Lerninhalte noch besser auf die  unterschiedliche n Bedürfnisse der Lern er abzustimmen.    Förderung digitaler Bildung mit elektronischen Schulbüchern 447ii “proceedings” — 2017/9/17 — 20:19 — page 448 — #448 ii i ii i   Interaktionsmöglichkeiten   Lernen ist dann besonders effektiv, wenn Lern ende  sich aktiv -konstruktiv mit den  Lerninhalten auseinandersetzen.  Zur Erkundung von Informatiksystemen sind  insbesondere solche Lernsysteme geeignet, die ein experimentelles Vorgehen  ermöglichen , indem einige Parameter des zu erkundenden Systems variiert und  die  Auswirkungen beobachtet werden . Dadurch lassen  sich das Sys temverhalten und die  zugrunde liegende Systemstruktur vom Lernenden erschließen.   Zum Beispiel  können  in der  Animation zur Erschließung von Dualzahlen im  elektronischen Schulbuch die  Lernenden  interaktiv die binäre Darstellung von Zahlen  mit einem Zweizustandssystem erkunden.  (vgl. Abb . 3)                          Abb. 3: Animation zur Erschließung von Dualzahlen (vgl. http://www.inf schule.de/information/darstellunginformation/binaerdarstellungzahlen/einsti eg _gefaengnisausbruch )  Ein weiteres Beispiel für eine Animation ist a uf den Seiten zum Thema Datenbanken zu  finden. In einem integrierten SQL -Interpreter, der es ermöglicht, SQL -Befehle zu einer  vorgegebenen Datenbank direkt auf inf -schule .de auswerten zu lassen ( vgl. z.B.  http://inf -schule -db.cs.uni -kl.de/SQLgbuch1.php ), können die Nutzer ohne  Installationsaufwand SQL -Statements testen.  Für das Lernen muss also keine lokale  Datenbankinfrastruktur aufgebaut werden , diese Infrastruktur wurde di rekt in das  elektronische Schulbuch „integriert “. Das Schulbuch ist nicht mehr nur Lieferant von  Lernmaterial, es wird zur Lernumgebung, die von Lern enden  in Teilen aktiv mitgestaltet   448 Manuel Froitzheim, Klaus-Peter Becker, Martin Zimnol, Heiko Jochumii “proceedings” — 2017/9/17 — 20:19 — page 449 — #449 ii i ii i   werden kann.  Die integrierten Werkzeuge stoßen bei 75,6% der befragten L ernenden  auf  große Zustimmung. Von den Lehrenden wurde insbesondere der nicht vorhandene  Installationsaufwand positiv erwähnt. Dies ermöglicht  es auch , eine entsprechende  Aufgabe als Hausaufgabe bearbeiten zu lassen, weil die Lernenden die Aufgaben mit  jedem beliebigen Browser ohne weitere Software bearbeiten können.    Individualisierung   In der Didaktik gilt der Grundsatz, Lernende  möglichst viele Lernwege anzubieten.  Gedruckte  Schulbücher können dem nur in Ansätzen gerecht werden, weil eine stark  begrenzte Ressource in Form von Seiten für das Schulbuch zur Verfügung steht. Solche  Beschränkungen gibt es bei einer digitalen Bereitstellung nicht. Das Schulbuch inf schule .de nutzt diese Möglichkeit, indem es für gleiche Inhalte unterschiedliche  didaktische Aufbe reitungen anbietet. Lehrende und Lern ende  haben so  Wahlmöglichkeiten und können die für sie geeignetsten Materialien auswählen.   Im Schulbuch inf -schule.de w urden verschiedene Ansätze zur Bereitstellung alternativer  Lernwege integriert:   • alternative Programm ierparadigmen: control first, data first, objects first,  functions first   • alternative didaktische Strukturierungen: systematisch, genetisch, exemplarisch   • alternative kognitive Werkzeuge   • alternative Kontexte   • alternative A nsprüche   Eine genauere Beschreibung dieser Wahlmöglichkeiten wird im elektronischen  Schulbuch dargestellt  [Be16] . Elektronische  Schulbücher ermöglichen es den Autoren  viel besser als gedruckte  Schulbücher, individualisierte Lernangebote zu machen. Durch  erweiterte Ressourcen und mehr Darstellungsmöglichkeiten lassen sich unterschiedliche  Lernwege für verschiedene  Lerntypen auf differenziertem  Anspruchsniveau realisieren.   Die unterschiedlichen Darstellungen werden von 73% der Lerner als sehr wichtig  erachtet. Als Freitext wurde zum Beispiel zurückgemeldet: „Ferner finde ich es sehr gut,  dass die einzelnen [Lernwege] strukturiert aufgebaut sind, um meistens aus einer  spezif ischen Anfangsproblemstellung durch Analyse und Induktion auf eine allgemeine  Aussage zu gelangen.“ Dadurch , dass die allgemeinen Aussagen bei allen Lernwegen  identisch sind, können auch in Lerngruppen unterschiedliche Lernwege  passend zum  Lernverhalten der Lerner bearbeitet werden und trotzdem gelangen alle Lerner zum  gleichen Ziel. Um auf das unterschiedliche Leistungsniveau der Schüler einzugehen,  wurden Aufgaben mit unterschiedlichem Schwierigkeitsgrad integriert. Die  verschiedenen Aufgaben wurden z u 71,6% als sehr wichtig bzw. wichtig eingestuft.    Aktualität der Darstellung   Die digitale Welt ändert sich sehr schnell. Initiativen wie das soziale Netzwerk  „schülerVZ“ sind heute kaum  noch bekannt und zum Großteil durch andere soziale Förderung digitaler Bildung mit elektronischen Schulbüchern 449ii “proceedings” — 2017/9/17 — 20:19 — page 450 — #450 ii i ii i Netzwerke ersetzt w orden.  Im Jahr 2010 hatten die VZ -Netzwerke ( „schülerVZ “,  „studiVZ “ und „meinVZ “) noch über 16 Millionen aktive Nutzer [ OI10 ] und heutzutage  ist das soziale Netzwerk den meisten Schülern nicht mehr bekannt. Gedruckte   Schulbücher haben es schwer, das Intere sse an digitalen Bildungsinhalten mit stets  aktuellen Themen zu wecken. Zu groß ist die Gefahr, dass ein Thema sehr schnell aus  dem Blickfeld verschwindet.    Digitale Schulbücher bieten dagegen die Möglichkeit, schnell und unkompliziert aktuelle  Themen aufz ugreifen und ggf. alte durch neuere Themen zu ersetzen. Das ist  insbesondere in einem sich dynamisch entwickelnden Fach wie der Informatik, bei dem  sich  der inhaltliche Kanon noch nicht ganz etabliert hat, von besonderer Bedeutung.   Die Vermittlung von dig italer Bildung erfordert flexible Lernumgebungen. Auch wenn  die zu vermittelnden Fachkonzepte stabil bleib en, so müssen die hierzu bereit gestellten  Lernumgebungen doch ständig aktualisiert werden. Nur ein digitales Schulbuch kann das  leisten, indem ständig  Teile des Schulbuchs überarbeitet und ergänzt werden.    Die ständige Weiterentwicklung des elektronischen Schulbuchs inf -schule.de wird von  83,3% der befragten Personen als sehr wichtig erachtet. Die Gefahr der Veränderung,  durch die Aktualisierung der Inh alte stellt für die Nutzer kein Problem dar, weil zum  Ende eines jeden Schuljahres eine fixierte Version des Schulbuchs archiviert wird. Über  einen ergänzenden Parameter beim Aufruf des Schulbuchs kann jede archivierte Version  aufgerufen werden und zum Bei spiel auch nach drei Jahren zur Prüfungsvorbereitung  verwendet werden.    Kommunikation und Kooperation   Gedruckte Schulbücher werden von kleine ren Autoren teams erstellt. Das hat den Vorteil,  dass ein didaktisches Konzept profiliert umgesetzt werden kann.  Mehr autorensysteme ,  wie es zum Beispiel von Wikipedia  verwendet wird,  verfolgen dagegen die Idee des  kollaborierenden Schreibens, bei dem jeder Autor die Möglichkeit hat, am  Entwicklungsprozess mitzuwirken. Mit diesem Ansatz wird versucht, das Wissen,  Können u nd die Kreativität von möglichst vielen Autoren zu nutzen. Schwierig ist es  dabei, das Gesamtwerk konsistent und einheitlich zu gestalten.  Des Weiteren stellt die  Qualitätskontrolle, insbesondere bei der Entwicklung eines Schulbuchs, eine große  Herausforde rung bei einem Mehrautorensystem dar.   Inwieweit sich Mehrautorensysteme für die Schulbuchentwicklung eignen, ist wohl noch  nicht hinreichend erprobt. Klar ist, dass ein digitales Schulbuch mit einer digitalen  Mehrautoreninfrastruktur die Schulbuchentwicklu ng erleichtert.   Das Schulbuchprojekt inf -schule .de hat einen moderaten Weg der Öffnung des  Autorenkreises eingeschlagen. Jeder Nutzer kann über ein Rückmeldeformular Hinweise  geben, die zu einer partiellen Überarbeitung der Lernmaterialien führen können. Nutzer  können auch leicht Kontakt mit dem Autorente am aufnehmen und Material zur  Ergänzung bereitstellen. Nutzer können auf diese Weise direkt zu Mitautoren werden.  Die Liste der Autoren ist auf diese Weise auf inzwischen über 50 Personen  450 Manuel Froitzheim, Klaus-Peter Becker, Martin Zimnol, Heiko Jochumii “proceedings” — 2017/9/17 — 20:19 — page 451 — #451 ii i ii i   angewachsen . Nach wie vor gibt es ein festes Autorenteam, das über d ie  Weiterentwicklung des Schulbuches entscheidet  und Qualitätssicherung durch  stattfindende Redaktionssitzungen ermöglicht.   Elektronische  Schulbücher ermöglichen die Entwickl ung für viele Autoren zu öffnen  und die Kompetenz im Schulbuch zu vereinen. Durch  die vielen Autoren ist der direkte  Kontakt zu den Autoren möglich und dies ist für 45,1% der befragten Personen wichtig.  Auch die Möglichkeit , einen Beitrag zum elektronischen Schulbuch als Autor  beizusteuern , wird von 26,7% der Befragten als wichtig erac htet, wobei die tatsächliche  Nutzung bisher deutlich geringer ist.   5 Fazit   Das digitale Schulbuch inf -schule.de kann einen wesentlichen Beitrag zur  informatorischen Bildung leisten, indem es wie beschrieben auf unterschiedliche Art die  vielfältigen Inhalte d er Informatik zur Vermittlu ng niederschwellig bereitstellt,  damit  diese mit möglichst niederschwelligen Einstiegsvoraussetzungen von Lehrenden gelehrt  und von Lernenden erlernt werden können.  Denn nur , wenn Lernende in der Schule die  Grundlagen zum Versteh en und Gestalten der digitalen Welt erhalten, können diese an  der digitalisierten Gesellschaft partizipieren und diese aktiv mitgestalten.   Literaturverzeichnis   [Be16]  Becker, K.: Alternative Didaktisierungen, www.inf -schule.de/infschule/  konzeption/didakt ischestruktur/didaktisierungen, Stand: 27.01.2017.   [BB15]  Bundesministerium für Bildung und Forschung: Berufsbildungsbericht 2015.  www.bmbf.de/pub/Berufsbildungsbericht_ 2015.pdf, Stand: 29.03.2016.   [Da16]  Dagstuhl -Erklärung: Bildung in der digitalen ver netzten Welt,  www.gi.de/fileadmin/redaktion/Themen/dagstuhl -erklaerung -bildung -in-derdigitalen -welt-2016.pdf,  Stand: 23.01.2017.   [Fr16a]  Froitzheim, M.; Jonietz, D.; Schneider, O.; Becker, K.; Zimnol, M.: Nutzung  eines elektronischen Schulbuchs im Inform atikunterricht am Beispiel des  Projektes inf -schule. In: (Lucke, U.; Schwill, A.; Zender, R): DelFI 2016 –  Die 14. E -Learning Tagung Fachtagung Informatik. Bonn: Köllen  Druck+Verlag. 2016, S.71 -82.  [Fr16b]  Froitzheim, M; Jonietz, D.; Schneider, O.; Becker, K.; Zimnol, M.:  Evaluierung der Akzeptanz des elektronischen Schulbuchs inf -schule. In:  (Schuhen, M; Froitzheim, M.; Schuhen, K.): Das elektronische Schulbuch  2016. Fachdidaktische Anforderungen und Ideen treffen auf  Lösungsvorschläge der Informatik, Münster 2016, S. 83 -98.  Förderung digitaler Bildung mit elektronischen Schulbüchern 451ii “proceedings” — 2017/9/17 — 20:19 — page 452 — #452 ii i ii i [HP10]  Humbert, L.; Panske, J.: Informatik und Gender nehmt die  Forschungsergebnisse ernst!, http://bscw.  ham.nw.schule.de/pub/bscw.cgi/d2009202/HumbertPanske2010.pdf, Stand:  29.03.201 6.  [Pr12a]  Prediger, S.; Link, M.: Fachdidaktische Entwicklungsforschung – ein  entwicklungsprozessfokussierendes Forschungsprogramm mit Verschränkung  fachdidaktischer Arbeitsbereich. In: (Bayrhuber, H.; Harms, U.; Muszynski,  B.; Ralle, B.; Rothgangel, M.;  Schön, L. -H.; Vollmer, H.; Weigand, H. -G.):  Formate Fachdidaktischer Forschung. Fachdidaktische Forschungen, Bd. 2,  Münster, S. 29 -46.  [Pr12b]  Prediger, S.; Link, M.; Hinz, R.; Hußmann, S.; Thiele, J.; Ralle, B.: Lehr Lernprozesse initiieren und erforsche n – Fachdidaktische  Entwicklungsforschung im Dortmunder Modell. In: MNU 65 (8), S. 452 -457.  [OI10]  Online ich: Top 100 Soziale Netzwerke in Deutschland, http://online ich.de/20100125/top -100-soziale -netzwerke -deutschland/, Stand: 27.01.2017.   [Sa10]  Sandf uchs, U. (2010). Schulbücher und Unterrichtsqualität historische und  aktuelle Reflexionen. In: (Fuchs, E.; Kahlert, J. ; Sandfuchs, U. (Hg.)):  Schulbuch konkret. Bad Heilbrunn: Julius Klinkhardt, 11 -24.  [Sa12]  Sanguo, C.; X uehai , M.; Schenglin, L. (2012 ). The Pace of Ebook  Development in China. IN:  LOGOS: The Journal of the World Book  Community, 23(2), 14 -20.  [ScFr14]  Schuhen, M.; Froitzheim, M. (Hrsg.): Das Elektronische Schulbuch.  Fachdidaktische Anforderungen und Ideen treffen auf Lösungsvorschläge der  Informatik. Münster: LIT Verlag.   [ScFr15] Schuhen, M.; Froitzheim, M. (Hrsg.): Das Elektronische Schulbuch 2015.  Fachdidaktische Anforderungen und Ideen treffen auf Lösungsvorschläge der  Informatik. Münster: LIT Verlag.   [ScFr16]  Schuhen, M.; Froitzhei m, M. (Hrsg.): Das Elektronische Schulbuch 2016.  Fachdidaktische Anforderungen und Ideen treffen auf Lösungsvorschläge der  Informatik. Münster: LIT Verlag.   [JIM15]  Behrens, P.; Rathgeb, T.; Feierabend, S.; Plankenhorn, T: JIM 2015 Jugend,  Information, ( Multi -) Media. Basisstudie zum Medienumgang 12 bis 19 Jähriger in Deutschland. Stuttgart: Medienpädagogischer Forschungsverbund  Südwest. www.mpfs.de/fileadmin/files/Studien/JIM/2015/JIM_Studie_  2015.pdf, Stand: 29.03.2016.   [Wi03]  Wiater, W. (2003): Schu lbuchforschung in Europa. Bestandsaufnahme und  Zukunftsperspektive. Bad Heilbrunn: Klinkhardt.  452 Manuel Froitzheim, Klaus-Peter Becker, Martin Zimnol, Heiko Jochumii “proceedings” — 2017/9/17 — 20:19 — page 453 — #453 ii i ii iAutorenverzeichnis A Akao, Kensuke, 405 B Barkmin, Mike, 407 Becker, Klaus, 345,359 Becker, Klaus-Peter, 443 Benedikt, Gregor Alexander, 363 Bergner, Nadine, 53,63,237 Bescherer, Christine, 409 Best, Alexander, 83 Borsch, Johanna, 211 Braun, Friederike, 119 Brinda, Torsten, 119,321,393,407, 411,425 Brinkmeier, Michael, 311,349 C Class, Christina B., 349 Czechowski, Robert, 431 D Dengel, Andreas, 87 Diekmann, Leonard, 181 Dietrich, Leonore, 191,373 Dittert, Nadine, 287,291 Duwe, Wibke, 413 E Engbring, Dieter, 227 F Fest, Andreas, 409 Fischer, Johannes, 247 Förster, Klaus-Tycho, 171 Fricke, Martin, 429Froitzheim, Manuel, 345,359,443 Funke, Alexandra, 327 Futschek, Gerald, 427 G Gallenbacher, Jens, 19,267 Gärtig-Daugs, Anja, 419 Geldreich, Katharina, 327 Goecke, Lennart, 417 Gold-Veerkamp, Carolin, 393 Grillenberger, Andreas, 157 Grimm, Rüdiger, 167 Günther, Christine, 415 H Haji, Lina, 363 Hancl, Mirek, 421 Haselmeier, Kathrin, 429 Heuer, Ute, 87 Heun, Dominik, 201 Hielscher, Michael, 97 Hildebrandt, Claudia, 137 Ho mann, Sabrina, 73 Honegger, Beat Döbeli, 97 Hubwieser, Peter, 327 Hug, Alexander, 167 Humbert, Ludger, 429 J Jäckel, Stefanie, 423 Jatzlau, Sven, 383 Jochum, Heiko, 345,359,443 Jonietz, Daniel, 345 Jördens, Tobias, 267 Jückstock, Petra, 335ii “proceedings” — 2017/9/17 — 20:19 — page 454 — #454 ii i ii iK Kastl, Petra, 301 Katterfeldt, Eva-Sophie, 287,291 Knaus, Thomas, 31 Knobelsdorf, Maria, 181 Köster, Hilde, 53 Kramer, Matthias, 407,425 Krisch, Oliver, 301 L Leonhardt, Thiemo, 237 Levens, René, 363 Lindner, Marlene, 277 M Magenheim, Johannes, 53 Meyer, Hilbert, 29 Micheuz, Peter, 427 Mühling, Andreas, 123 Müller, Dorothee, 127,429 Müller, Kathrin, 53,109 Müller, Olaf, 363 N Noller, Stephan, 49 O Otto, Jonathan, 181 P Pancratz, Nils, 393 Pasternak, Arno, 247 Pech, Detlef, 417 Petrut, Sandra-Jasmin, 63 Pinkwart, Niels, 277,393,417 Pisarenko, Stanislav, 311 Pohl, Wolfgang, 431 Prädel, Lars, 221 Przybylla, Mareen, 257 R Ribe, Liz, 349Rohde, Thomas, 363 Romeike, Ralf, 53,157,257,301,383 Romero, Esther Alzate, 191,373 Roßner, Marc, 433 Rücker, Michael T., 393 S Saatho  , Arne, 435 Samimi, Vahid, 425 Schmid, Ute, 419 Schneider, Yannick, 123 Schreiber, Gerlinde, 221 Schroeder, Ulrik, 53,63,237 Schulte, Carsten, 53,109 Schulz, Sandra, 277 Schwinem, Stefan, 321 Siebrecht, Daniel, 429,437 Steinbach, Nico, 147 Steinhäuser, Anke, 439 Stierle, Maarit, 441 Stiller, Jurik, 417 Strauss, Kolja, 363 T Terjung, Thorsten, 411 Thiele, Otto, 335 Thomas, Marco, 211 Tobinski, David, 321,407 W Weitz, Katharina, 419 Welke, Michel, 181 Wendlandt, Katharina, 73 Wendlandt, Matthias, 73 Wieczorek, Barbara, 349 Z Zimnol, Martin, 345,359,443 Zitzler, Eckart, 147P-1 Gregor Engels, Andreas Oberweis, Albert Zündorf (Hrsg.): Modellierung 2001. P-2 Mikhail Godlevsky, Heinrich C.Mayr (Hrsg.): Information Systems Technology anditsApplications, ISTA’2001. P-3 AnaM.Moreno, Reind P.vande Riet(Hrsg.): Applications ofNatural Lan-guage toInformation Systems, NLDB’2001. P-4 H.Wörn, J.Mühling, C.Vahl, H.-P. Meinzer (Hrsg.): Rechnerundsensorgestützte Chirurgie; Workshop desSFB 414. P-5 Andy Schürr (Hg.): OMER –ObjectOriented Modeling ofEmbedded RealTime Systems. P-6 Hans-Jürgen Appelrath, Rolf Beyer, Uwe Marquardt, Heinrich C.Mayr, Claudia Steinberger (Hrsg.): Unternehmen Hochschule, UH’2001. P-7 Andy Evans, Robert France, AnaMoreira, Bernhard Rumpe (Hrsg.): Practical UMLBased Rigorous Development Methods – Countering orIntegrating theextremists, pUML’2001. P-8 Reinhard Keil-Slawik, Johannes Magenheim (Hrsg.): Informatikunterricht und Medienbildung, INFOS’2001. P-9 JanvonKnop, Wilhelm Haverkamp (Hrsg.): Innovative Anwendungen in Kommunikationsnetzen, 15.DFN Arbeitstagung. P-10 Mirjam Minor, Steffen Staab (Hrsg.): 1st German Workshop onExperience Management: Sharing Experiences about the Sharing Experience. P-11 Michael Weber, Frank Kargl (Hrsg.): Mobile Ad-Hoc Netzwerke, WMAN 2002. P-12 Martin Glinz, Günther Müller-Luschnat (Hrsg.): Modellierung 2002. P-13 JanvonKnop, Peter Schirmbacher and Viljan Mahni_ (Hrsg.): TheChanging Universities –TheRole ofTechnology. P-14 Robert Tolksdorf, Rainer Eckstein (Hrsg.): XML-Technologien fürdasSemantic Web –XSW 2002. P-15 Hans-Bernd Bludau, Andreas Koop (Hrsg.): Mobile Computing inMedicine. P-16 J.Felix Hampe, Gerhard Schwabe (Hrsg.): Mobile andCollaborative Business 2002. P-17 JanvonKnop, Wilhelm Haverkamp (Hrsg.): Zukunft derNetze –Die Verletzbarkeit meistern, 16.DFN Arbeitstagung.P-18 Elmar J.Sinz, Markus Plaha (Hrsg.): Modellierung betrieblicher Informationssysteme –MobIS 2002. P-19 Sigrid Schubert, Bernd Reusch, Norbert Jesse (Hrsg.): Informatik bewegt –Informatik 2002 –32.Jahrestagung derGesellschaft fürInformatik e.V.(GI) 30.Sept.-3. Okt. 2002 inDortmund. P-20 Sigrid Schubert, Bernd Reusch, Norbert Jesse (Hrsg.): Informatik bewegt –Informatik 2002 –32.Jahrestagung derGesellschaft fürInformatik e.V.(GI) 30.Sept.-3. Okt. 2002 inDortmund (Ergänzungsband). P-21 Jörg Desel, Mathias Weske (Hrsg.): Promise 2002: Prozessorientierte MethodenundWerkzeuge fürdieEntwicklung vonInformationssystemen. P-22 Sigrid Schubert, Johannes Magenheim, Peter Hubwieser, Torsten Brinda (Hrsg.): Forschungsbeiträge zur“Didaktik der Informatik” –Theorie, Praxis, Evaluation. P-23 Thorsten Spitta, Jens Borchers, Harry M. Sneed (Hrsg.): Software Management 2002 –Fortschritt durch Beständigkeit P-24 Rainer Eckstein, Robert Tolksdorf (Hrsg.): XMIDX 2003 –XMLTechnologien fürMiddleware –Middleware fürXML-Anwendungen P-25 KeyPousttchi, Klaus Turowski (Hrsg.): Mobile Commerce –Anwendungen und Perspektiven –3.Workshop Mobile Commerce, Universität Augsburg, 04.02.2003 P-26 Gerhard Weikum, Harald Schöning, Erhard Rahm (Hrsg.): BTW 2003: Datenbanksysteme fürBusiness, Technologie undWeb P-27 Michael Kroll, Hans-Gerd Lipinski, Kay Melzer (Hrsg.): Mobiles Computing in derMedizin P-28 Ulrich Reimer, Andreas Abecker, Steffen Staab, Gerd Stumme (Hrsg.): WM 2003: Professionelles Wissensmanagement – Er-fahrungen undVisionen P-29 Antje Düsterhöft, Bernhard Thalheim (Eds.): NLDB’2003: Natural Language Processing andInformation Systems P-30 Mikhail Godlevsky, Stephen Liddle, Heinrich C.Mayr (Eds.): Information Systems Technology anditsApplications P-31 Arslan Brömme, Christoph Busch (Eds.): BIOSIG 2003: Biometrics andElectronic SignaturesGI-Edition Lecture Notes inInformaticsP-32 Peter Hubwieser (Hrsg.): Informatische Fachkonzepte imUnterricht –INFOS 2003 P-33 Andreas Geyer-Schulz, Alfred Taudes (Hrsg.): Informationswirtschaft: Ein Sektor mitZukunft P-34 Klaus Dittrich, Wolfgang König, Andreas Oberweis, KaiRannenberg, Wolfgang Wahlster (Hrsg.): Informatik 2003 – Innovative Informatikanwendungen (Band 1) P-35 Klaus Dittrich, Wolfgang König, Andreas Oberweis, KaiRannenberg, Wolfgang Wahlster (Hrsg.): Informatik 2003 – Innovative Informatikanwendungen (Band 2) P-36 Rüdiger Grimm, Hubert B.Keller, Kai Rannenberg (Hrsg.): Informatik 2003 – MitSicherheit Informatik P-37 Arndt Bode, Jörg Desel, Sabine Rathmayer, Martin Wessner (Hrsg.): DeLFI 2003: e-Learning Fachtagung Informatik P-38 E.J.Sinz, M.Plaha, P.Neckel (Hrsg.): Modellierung betrieblicher Informationssysteme –MobIS 2003 P-39 Jens Nedon, Sandra Frings, Oliver Göbel (Hrsg.): IT-Incident Management &ITForensics –IMF 2003 P-40 Michael Rebstock (Hrsg.): Modellierung betrieblicher Informationssysteme –MobIS2004 P-41 Uwe Brinkschulte, Jürgen Becker, DietmarFey, Karl-Erwin Großpietsch, ChristianHochberger, Erik Maehle, Thomas Runkler (Edts.): ARCS 2004 –Organic andPervasive Computing P-42 KeyPousttchi, Klaus Turowski (Hrsg.): Mobile Economy –Transaktionen und Prozesse, Anwendungen undDienste P-43 Birgitta König-Ries, Michael Klein, Philipp Obreiter (Hrsg.): Persistance, Scalability, Transactions –Database Mechanisms forMobile Applications P-44 JanvonKnop, Wilhelm Haverkamp, Eike Jessen (Hrsg.): Security, E-Learning. E-Services P-45 Bernhard Rumpe, Wofgang Hesse (Hrsg.): Modellierung 2004 P-46 Ulrich Flegel, Michael Meier (Hrsg.): Detection ofIntrusions ofMalware & Vulnerability Assessment P-47 Alexander Prosser, Robert Krimmer (Hrsg.): Electronic Voting inEurope – Technology, Law, Politics andSocietyP-48 Anatoly Doroshenko, Terry Halpin, Stephen W.Liddle, Heinrich C.Mayr (Hrsg.): Information Systems Technology anditsApplications P-49 G.Schiefer, P.Wagner, M.Morgenstern, U.Rickert (Hrsg.): Integration undDatensicherheit –Anforderungen, Konﬂikte und Perspektiven P-50 Peter Dadam, Manfred Reichert (Hrsg.): INFORMATIK 2004 –Informatik verbindet (Band 1)Beiträge der34.Jahrestagung derGesellschaft fürInformatik e.V. (GI), 20.-24. September 2004 inUlm P-51 Peter Dadam, Manfred Reichert (Hrsg.): INFORMATIK 2004 –Informatik verbindet (Band 2)Beiträge der34.Jahrestagung derGesellschaft fürInformatik e.V. (GI), 20.-24. September 2004 inUlm P-52 Gregor Engels, Silke Seehusen (Hrsg.): DELFI 2004 –Tagungsband der2. e-Learning Fachtagung Informatik P-53 Robert Giegerich, Jens Stoye (Hrsg.): German Conference onBioinformatics – GCB 2004 P-54 Jens Borchers, Ralf Kneuper (Hrsg.): Softwaremanagement 2004 –Outsourcing undIntegration P-55 JanvonKnop, Wilhelm Haverkamp, Eike Jessen (Hrsg.): E-Science undGrid Adhoc-Netze Medienintegration P-56 Fernand Feltz, Andreas Oberweis, Benoit Otjacques (Hrsg.): EMISA 2004 –Informationssysteme imE-Business und E-Government P-57 Klaus Turowski (Hrsg.): Architekturen, Komponenten, Anwendungen P-58 Sami Beydeda, Volker Gruhn, Johannes Mayer, Ralf Reussner, Franz Schweiggert (Hrsg.): Testing ofComponent-Based Systems andSoftware Quality P-59 J.Felix Hampe, Franz Lehner, Key Pousttchi, KaiRanneberg, Klaus Turowski (Hrsg.): Mobile Business – Processes, Platforms, Payments P-60 Steffen Friedrich (Hrsg.): Unterrichtskonzepte fürinforrmatische Bildung P-61 Paul Müller, Reinhard Gotzhein, Jens B. Schmitt (Hrsg.): Kommunikation inverteilten Systemen P-62 Federrath, Hannes (Hrsg.): „Sicherheit 2005“ –Sicherheit –Schutz undZuverlässigkeit P-63 Roland Kaschek, Heinrich C.Mayr, Stephen Liddle (Hrsg.): Information Systems –Technology andistApplicationsP-64 Peter Liggesmeyer, Klaus Pohl, Michael Goedicke (Hrsg.): Software Engineering 2005 P-65 Gottfried Vossen, Frank Leymann, Peter Lockemann, Wolffried Stucky (Hrsg.): Datenbanksysteme inBusiness, Technologie undWeb P-66 Jörg M.Haake, Ulrike Lucke, Djamshid Tavangarian (Hrsg.): DeLFI 2005: 3. deutsche e-Learning Fachtagung Informatik P-67 Armin B.Cremers, Rainer Manthey, Peter Martini, Volker Steinhage (Hrsg.): INFORMATIK 2005 –Informatik LIVE (Band 1) P-68 Armin B.Cremers, Rainer Manthey, Peter Martini, Volker Steinhage (Hrsg.): INFORMATIK 2005 –Informatik LIVE (Band 2) P-69 Robert Hirschfeld, Ryszard Kowalcyk, Andreas Polze, Matthias Weske (Hrsg.): NODe 2005, GSEM 2005 P-70 Klaus Turowski, Johannes-Maria Zaha (Hrsg.): Component-oriented Enterprise Application (COAE 2005) P-71 Andrew Torda, Stefan Kurz, Matthias Rarey (Hrsg.): German Conference on Bioinformatics 2005 P-72 Klaus P.Jantke, Klaus-Peter Fähnrich, Wolfgang S.Wittig (Hrsg.): Marktplatz Internet: Von e-Learning bise-Payment P-73 JanvonKnop, Wilhelm Haverkamp, Eike Jessen (Hrsg.): “Heute schon dasMorgen sehen“ P-74 Christopher Wolf, Stefan Lucks, Po-Wah Yau(Hrsg.): WEWoRC 2005 –Western European Workshop onResearch in Cryptology P-75 Jörg Desel, Ulrich Frank (Hrsg.): Enterprise Modelling andInformation Systems Architecture P-76 Thomas Kirste, Birgitta König-Riess, Key Pousttchi, Klaus Turowski (Hrsg.): MobileInformationssysteme –Potentiale, Hindernisse, Einsatz P-77 Jana Dittmann (Hrsg.): SICHERHEIT 2006 P-78 K.-O. Wenkel, P.Wagner, M.Morgenstern, K.Luzi, P.Eisermann (Hrsg.): LandundErnährungswirtschaft imWandel P-79 Bettina Biel, Matthias Book, Volker Gruhn (Hrsg.): Softwareengineering 2006P-80 Mareike Schoop, Christian Huemer, Michael Rebstock, Martin Bichler (Hrsg.): Service-Oriented Electronic Commerce P-81 Wolfgang Karl, Jürgen Becker, KarlErwin Großpietsch, Christian Hochberger, Erik Maehle (Hrsg.): ARCS´06 P-82 Heinrich C.Mayr, Ruth Breu (Hrsg.): Modellierung 2006 P-83 Daniel Huson, Oliver Kohlbacher, Andrei Lupas, KayNieselt andAndreas Zell (eds.): German Conference onBioinformatics P-84 Dimitris Karagiannis, Heinrich C.Mayr, (Hrsg.): Information Systems Technology anditsApplications P-85 Witold Abramowicz, Heinrich C.Mayr, (Hrsg.): Business Information Systems P-86 Robert Krimmer (Ed.): Electronic Voting 2006 P-87 Max Mühlhäuser, Guido Rößling, Ralf Steinmetz (Hrsg.): DELFI 2006: 4. e-Learning Fachtagung Informatik P-88 Robert Hirschfeld, Andreas Polze, Ryszard Kowalczyk (Hrsg.): NODe 2006, GSEM 2006 P-90 Joachim Schelp, Robert Winter, Ulrich Frank, Bodo Rieger, Klaus Turowski (Hrsg.): Integration, Informationslogistik undArchitektur P-91 Henrik Stormer, Andreas Meier, Michael Schumacher (Eds.): European Conference oneHealth 2006 P-92 Fernand Feltz, Benoît Otjacques, Andreas Oberweis, Nicolas Poussing (Eds.): AIM 2006 P-93 Christian Hochberger, Rüdiger Liskowsky (Eds.): INFORMATIK 2006 –Informatik fürMenschen, Band 1 P-94 Christian Hochberger, Rüdiger Liskowsky (Eds.): INFORMATIK 2006 –Informatik fürMenschen, Band 2 P-95 Matthias Weske, Markus Nüttgens (Eds.): EMISA 2005: Methoden, Konzepte und Technologien fürdieEntwicklung von dienstbasierten Informationssystemen P-96 Saartje Brockmans, Jürgen Jung, York Sure (Eds.): Meta-Modelling andOntologies P-97 Oliver Göbel, Dirk Schadt, Sandra Frings, Hardo Hase, Detlef Günther, Jens Nedon (Eds.): IT-Incident Mangament &ITForensics –IMF 2006P-98 Hans Brandt-Pook, Werner Simonsmeier undThorsten Spitta (Hrsg.): Beratung inderSoftwareentwicklung –Modelle, Methoden, Best Practices P-99 Andreas Schwill, Carsten Schulte, Marco Thomas (Hrsg.): Didaktik derInformatik P-100 Peter Forbrig, Günter Siegel, Markus Schneider (Hrsg.): HDI 2006: Hochschuldidaktik derInformatik P-101 Stefan Böttinger, Ludwig Theuvsen, Susanne Rank, Marlies Morgenstern (Hrsg.): Agrarinformatik imSpannungsfeld zwischen Regionalisierung undglobalen Wertschöpfungsketten P-102 Otto Spaniol (Eds.): Mobile Services and Personalized Environments P-103 Alfons Kemper, Harald Schöning, Thomas Rose, Matthias Jarke, Thomas Seidl, Christoph Quix, Christoph Brochhaus (Hrsg.): Datenbanksysteme inBusiness, Technologie undWeb (BTW 2007) P-104 Birgitta König-Ries, Franz Lehner, Rainer Malaka, CanTürker (Hrsg.) MMS 2007: Mobilität undmobile Informationssysteme P-105 Wolf-Gideon Bleek, Jörg Raasch, Heinz Züllighoven (Hrsg.) Software Engineering 2007 P-106 Wolf-Gideon Bleek, Henning Schwentner, Heinz Züllighoven (Hrsg.) Software Engineering 2007 – Beiträge zudenWorkshops P-107 Heinrich C.Mayr, Dimitris Karagiannis (eds.) Information Systems Technology anditsApplications P-108 Arslan Brömme, Christoph Busch, Detlef Hühnlein (eds.) BIOSIG 2007: Biometrics and Electronic Signatures P-109 Rainer Koschke, Otthein Herzog, KarlHeinz Rödiger, Marc Ronthaler (Hrsg.) INFORMATIK 2007 Informatik trifft Logistik Band 1 P-110 Rainer Koschke, Otthein Herzog, KarlHeinz Rödiger, Marc Ronthaler (Hrsg.) INFORMATIK 2007 Informatik trifft Logistik Band 2 P-111 Christian Eibl, Johannes Magenheim, Sigrid Schubert, Martin Wessner (Hrsg.) DeLFI 2007: 5.e-Learning Fachtagung InformatikP-112 Sigrid Schubert (Hrsg.) Didaktik derInformatik in Theorie undPraxis P-113 Sören Auer, Christian Bizer, Claudia Müller, Anna V.Zhdanova (Eds.) TheSocial Semantic Web 2007 Proceedings ofthe1stConference on Social Semantic Web (CSSW) P-114 Sandra Frings, Oliver Göbel, Detlef Günther, Hardo G.Hase, JensNedon, Dirk Schadt, Arslan Brömme (Eds.) IMF2007 IT-incident management &IT-forensics Proceedings ofthe3rdInternational Conference onIT-Incident Management &IT-Forensics P-115 Claudia Falter, Alexander Schliep, Joachim Selbig, Martin Vingron and Dirk Walther (Eds.) German conference onbioinformatics GCB 2007 P-116 Witold Abramowicz, Leszek Maciszek (Eds.) Business Process andServices Computing 1stInternational Working Conference on Business Process andServices Computing BPSC 2007 P-117 Ryszard Kowalczyk (Ed.) Grid service engineering andmanegement The4thInternational Conference onGrid Service Engineering andManagement GSEM 2007 P-118 Andreas Hein, Wilfried Thoben, HansJürgen Appelrath, Peter Jensch (Eds.) European Conference onehealth 2007 P-119 Manfred Reichert, Stefan Strecker, Klaus Turowski (Eds.) Enterprise Modelling andInformation Systems Architectures Concepts andApplications P-120 Adam Pawlak, Kurt Sandkuhl, Wojciech Cholewa, Leandro Soares Indrusiak (Eds.) Coordination ofCollaborative Engineering -State oftheArtandFuture Challenges P-121 Korbinian Herrmann, Bernd Bruegge (Hrsg.) Software Engineering 2008 Fachtagung desGI-Fachbereichs Softwaretechnik P-122 Walid Maalej, Bernd Bruegge (Hrsg.) Software Engineering 2008 Workshopband Fachtagung desGI-Fachbereichs SoftwaretechnikP-123 Michael H.Breitner, Martin Breunig, Elgar Fleisch, LeyPousttchi, Klaus Turowski (Hrsg.) Mobile undUbiquitäre Informationssysteme –Technologien, Prozesse, Marktfähigkeit Proceedings zur3.Konferenz Mobile und Ubiquitäre Informationssysteme (MMS 2008) P-124 Wolfgang E.Nagel, RolfHoffmann, Andreas Koch (Eds.) 9thWorkshop onParallel Systems and Algorithms (PASA) Workshop oftheGI/ITG Speciel Interest Groups PARS andPARVA P-125 Rolf A.E. Müller, Hans-H. Sundermeier, Ludwig Theuvsen, Stephanie Schütze, Marlies Morgenstern (Hrsg.) Unternehmens-IT: Führungsinstrument oder Verwaltungsbürde Referate der28.GILJahrestagung P-126 Rainer Gimnich, Uwe Kaiser, Jochen Quante, Andreas Winter (Hrsg.) 10thWorkshop Software Reengineering (WSR 2008) P-127 Thomas Kühne, Wolfgang Reisig, Friedrich Steimann (Hrsg.) Modellierung 2008 P-128 Ammar Alkassar, Jörg Siekmann (Hrsg.) Sicherheit 2008 Sicherheit, Schutz undZuverlässigkeit Beiträge der4.Jahrestagung des Fachbereichs Sicherheit derGesellschaft fürInformatik e.V.(GI) 2.-4. April 2008 Saarbrücken, Germany P-129 Wolfgang Hesse, Andreas Oberweis (Eds.) Sigsand-Europe 2008 Proceedings oftheThird AISSIGSAND European Symposium onAnalysis, Design, UseandSocietal Impact of Information Systems P-130 Paul Müller, Bernhard Neumair, Gabi Dreo Rodosek (Hrsg.) 1.DFN-Forum Kommunikationstechnologien Beiträge derFachtagung P-131 Robert Krimmer, Rüdiger Grimm (Eds.) 3rdInternational Conference onElectronic Voting 2008 Co-organized byCouncil ofEurope, Gesellschaft fürInformatik andE-Voting. CC P-132 Silke Seehusen, Ulrike Lucke, Stefan Fischer (Hrsg.) DeLFI 2008: Die6.e-Learning Fachtagung InformatikP-133 Heinz-Gerd Hegering, Axel Lehmann, Hans Jürgen Ohlbach, Christian Scheideler (Hrsg.) INFORMATIK 2008 Beherrschbare Systeme –dank Informatik Band 1 P-134 Heinz-Gerd Hegering, Axel Lehmann, Hans Jürgen Ohlbach, Christian Scheideler (Hrsg.) INFORMATIK 2008 Beherrschbare Systeme –dank Informatik Band 2 P-135 Torsten Brinda, Michael Fothe, Peter Hubwieser, Kirsten Schlüter (Hrsg.) Didaktik derInformatik – Aktuelle Forschungsergebnisse P-136 Andreas Beyer, Michael Schroeder (Eds.) German Conference onBioinformatics GCB 2008 P-137 Arslan Brömme, Christoph Busch, Detlef Hühnlein (Eds.) BIOSIG 2008: Biometrics andElectronic Signatures P-138 Barbara Dinter, Robert Winter, Peter Chamoni, Norbert Gronau, Klaus Turowski (Hrsg.) Synergien durch Integration und Informationslogistik Proceedings zurDW2008 P-139 Georg Herzwurm, Martin Mikusz (Hrsg.) Industrialisierung desSoftwareManagements Fachtagung desGI-Fachausschusses Management derAnwendungsentwicklung und-wartung imFachbereich Wirtschaftsinformatik P-140 Oliver Göbel, Sandra Frings, Detlef Günther, Jens Nedon, Dirk Schadt (Eds.) IMF 2008 -ITIncident Management & ITForensics P-141 Peter Loos, Markus Nüttgens, Klaus Turowski, Dirk Werth (Hrsg.) Modellierung betrieblicher Informationssysteme (MobIS 2008) Modellierung zwischen SOA und Compliance Management P-142 R.Bill, P.Korduan, L.Theuvsen, M.Morgenstern (Hrsg.) Anforderungen andieAgrarinformatik durch Globalisierung und Klimaveränderung P-143 Peter Liggesmeyer, Gregor Engels, Jürgen Münch, Jörg Dörr, Norman Riegel (Hrsg.) Software Engineering 2009 Fachtagung desGI-Fachbereichs SoftwaretechnikP-144 Johann-Christoph Freytag, Thomas Ruf, Wolfgang Lehner, Gottfried Vossen (Hrsg.) Datenbanksysteme inBusiness, Technologie undWeb (BTW) P-145 Knut Hinkelmann, Holger Wache (Eds.) WM2009: 5thConference onProfessional Knowledge Management P-146 Markus Bick, Martin Breunig, Hagen Höpfner (Hrsg.) Mobile undUbiquitäre Informationssysteme –Entwicklung, Implementierung undAnwendung 4.Konferenz Mobile undUbiquitäre Informationssysteme (MMS 2009) P-147 Witold Abramowicz, Leszek Maciaszek, Ryszard Kowalczyk, Andreas Speck (Eds.) Business Process, Services Computing andIntelligent Service Management BPSC 2009 ·ISM 2009 ·YRW-MBP 2009 P-148 Christian Erfurth, Gerald Eichler, Volkmar Schau (Eds.) 9thInternational Conference onInnovative Internet Community Systems I2CS2009 P-149 Paul Müller, Bernhard Neumair, Gabi Dreo Rodosek (Hrsg.) 2.DFN-Forum Kommunikationstechnologien Beiträge derFachtagung P-150 Jürgen Münch, Peter Liggesmeyer (Hrsg.) Software Engineering 2009 -Workshopband P-151 Armin Heinzl, Peter Dadam, Stefan Kirn, Peter Lockemann (Eds.) PRIMIUM Process Innovation for Enterprise Software P-152 JanMendling, Stefanie Rinderle-Ma, Werner Esswein (Eds.) Enterprise Modelling andInformation Systems Architectures Proceedings ofthe3rdInt‘l Workshop EMISA 2009 P-153 Andreas Schwill, Nicolas Apostolopoulos (Hrsg.) Lernen imDigitalen Zeitalter DeLFI 2009 –Die7.E-Learning Fachtagung Informatik P-154 Stefan Fischer, Erik Maehle Rüdiger Reischuk (Hrsg.) INFORMATIK 2009 ImFocus dasLebenP-155 Arslan Brömme, Christoph Busch, Detlef Hühnlein (Eds.) BIOSIG 2009: Biometrics andElectronic Signatures Proceedings oftheSpecial Interest Group onBiometrics andElectronic Signatures P-156 Bernhard Koerber (Hrsg.) Zukunft braucht Herkunft 25Jahre »INFOS –Informatik und Schule« P-157 IvoGrosse, Steffen Neumann, Stefan Posch, Falk Schreiber, Peter Stadler (Eds.) German Conference onBioinformatics 2009 P-158 W.Claupein, L.Theuvsen, A.Kämpf, M.Morgenstern (Hrsg.) Precision Agriculture Reloaded –Informationsgestützte Landwirtschaft P-159 Gregor Engels, Markus Luckey, Wilhelm Schäfer (Hrsg.) Software Engineering 2010 P-160 Gregor Engels, Markus Luckey, Alexander Pretschner, Ralf Reussner (Hrsg.) Software Engineering 2010 – Workshopband (inkl. Doktorandensymposium) P-161 Gregor Engels, Dimitris Karagiannis Heinrich C.Mayr (Hrsg.) Modellierung 2010 P-162 Maria A.Wimmer, Uwe Brinkhoff, Siegfried Kaiser, Dagmar LückSchneider, Erich Schweighofer, Andreas Wiebe (Hrsg.) Vernetzte ITfüreinen effektiven Staat Gemeinsame Fachtagung Verwaltungsinformatik (FTVI) und Fachtagung Rechtsinformatik (FTRI) 2010 P-163 Markus Bick, Stefan Eulgem, Elgar Fleisch, J.Felix Hampe, Birgitta König-Ries, Franz Lehner, KeyPousttchi, KaiRannenberg (Hrsg.) Mobile undUbiquitäre Informationssysteme Technologien, Anwendungen und Dienste zurUnterstützung vonmobiler Kollaboration P-164 Arslan Brömme, Christoph Busch (Eds.) BIOSIG 2010: Biometrics andElectronic Signatures Proceedings oftheSpecial Interest Group onBiometrics and Electronic SignaturesP-165 Gerald Eichler, Peter Kropf, Ulrike Lechner, Phayung Meesad, Herwig Unger (Eds.) 10thInternational Conference on Innovative Internet Community Systems (I2CS)–Jubilee Edition 2010 – P-166 Paul Müller, Bernhard Neumair, Gabi Dreo Rodosek (Hrsg.) 3.DFN-Forum Kommunikationstechnologien Beiträge derFachtagung P-167 Robert Krimmer, Rüdiger Grimm (Eds.) 4thInternational Conference on Electronic Voting 2010 co-organized bytheCouncil ofEurope, Gesellschaft fürInformatik and E-Voting.CC P-168 IraDiethelm, Christina Dörge, Claudia Hildebrandt, Carsten Schulte (Hrsg.) Didaktik derInformatik Möglichkeiten empirischer Forschungsmethoden undPerspektiven derFachdidaktik P-169 Michael Kerres, Nadine Ojstersek Ulrik Schroeder, Ulrich Hoppe (Hrsg.) DeLFI 2010 -8.Tagung derFachgruppe E-Learning derGesellschaft fürInformatik e.V. P-170 Felix C.Freiling (Hrsg.) Sicherheit 2010 Sicherheit, Schutz undZuverlässigkeit P-171 Werner Esswein, Klaus Turowski, Martin Juhrisch (Hrsg.) Modellierung betrieblicher Informationssysteme (MobIS 2010) Modellgestütztes Management P-172 Stefan Klink, Agnes Koschmider Marco Mevius, Andreas Oberweis (Hrsg.) EMISA 2010 Einﬂussfaktoren aufdieEntwicklung ﬂexibler, integrierter Informationssysteme Beiträge desWorkshops derGI-Fachgruppe EMISA (Entwicklungsmethoden fürInformationssysteme undderen Anwendung) P-173 Dietmar Schomburg, Andreas Grote (Eds.) German Conference onBioinformatics 2010 P-174 Arslan Brömme, Torsten Eymann, Detlef Hühnlein, Heiko Roßnagel, Paul Schmücker (Hrsg.) perspeGKtive 2010 Workshop „Innovative undsichere Informationstechnologie fürdas Gesundheitswesen vonmorgen“P-175 Klaus-Peter Fähnrich, Bogdan Franczyk (Hrsg.) INFORMATIK 2010 Service Science –Neue Perspektiven für dieInformatik Band 1 P-176 Klaus-Peter Fähnrich, Bogdan Franczyk (Hrsg.) INFORMATIK 2010 Service Science –Neue Perspektiven für dieInformatik Band 2 P-177 Witold Abramowicz, Rainer Alt, Klaus-Peter Fähnrich, Bogdan Franczyk, Leszek A.Maciaszek (Eds.) INFORMATIK 2010 Business Process andService Science – Proceedings ofISSS andBPSC P-178 Wolfram Pietsch, Benedikt Krams (Hrsg.) Vom Projekt zum Produkt Fachtagung desGIFachausschusses Management der Anwendungsentwicklung und-wartung imFachbereich Wirtschafts-informatik (WI-MAW), Aachen, 2010 P-179 Stefan Gruner, Bernhard Rumpe (Eds.) FM+AM`2010 Second International Workshop on Formal Methods andAgile Methods P-180 Theo Härder, Wolfgang Lehner, Bernhard Mitschang, Harald Schöning, Holger Schwarz (Hrsg.) Datenbanksysteme fürBusiness, Technologie undWeb (BTW) 14.Fachtagung desGI-Fachbereichs „Datenbanken undInformationssysteme“ (DBIS) P-181 Michael Clasen, Otto Schätzel, Brigitte Theuvsen (Hrsg.) Qualität undEfﬁzienz durch informationsgestützte Landwirtschaft, Fokus: Moderne Weinwirtschaft P-182 Ronald Maier (Hrsg.) 6thConference onProfessional Knowledge Management From Knowledge toAction P-183 Ralf Reussner, Matthias Grund, Andreas Oberweis, Walter Tichy (Hrsg.) Software Engineering 2011 Fachtagung desGI-Fachbereichs Softwaretechnik P-184 Ralf Reussner, Alexander Pretschner, Stefan Jähnichen (Hrsg.) Software Engineering 2011 Workshopband (inkl. Doktorandensymposium)P-185 Hagen Höpfner, Günther Specht, Thomas Ritz, Christian Bunse (Hrsg.) MMS 2011: Mobile undubiquitäre Informationssysteme Proceedings zur 6.Konferenz Mobile undUbiquitäre Informationssysteme (MMS 2011) P-186 Gerald Eichler, Axel Küpper, Volkmar Schau, Hacène Fouchal, Herwig Unger (Eds.) 11thInternational Conference on Innovative Internet Community Systems (I2CS) P-187 Paul Müller, Bernhard Neumair, Gabi Dreo Rodosek (Hrsg.) 4.DFN-Forum Kommunikationstechnologien, Beiträge derFachtagung 20.Junibis21.Juni2011 Bonn P-188 Holger Rohland, Andrea Kienle, Steffen Friedrich (Hrsg.) DeLFI 2011 –Die9.e-Learning Fachtagung Informatik derGesellschaft fürInformatik e.V. 5.–8. September 2011, Dresden P-189 Thomas, Marco (Hrsg.) Informatik inBildung undBeruf INFOS 2011 14.GI-Fachtagung Informatik undSchule P-190 Markus Nüttgens, Oliver Thomas, Barbara Weber (Eds.) Enterprise Modelling andInformation Systems Architectures (EMISA 2011) P-191 Arslan Brömme, Christoph Busch (Eds.) BIOSIG 2011 International Conference ofthe Biometrics Special Interest Group P-192 Hans-Ulrich Heiß, Peter Pepper, Holger Schlingloff, Jörg Schneider (Hrsg.) INFORMATIK 2011 Informatik schafft Communities P-193 Wolfgang Lehner, Gunther Piller (Hrsg.) IMDM 2011 P-194 M.Clasen, G.Fröhlich, H.Bernhardt, K.Hildebrand, B.Theuvsen (Hrsg.) Informationstechnologie füreine nachhaltige Landbewirtschaftung Fokus Forstwirtschaft P-195 Neeraj Suri, Michael Waidner (Hrsg.) Sicherheit 2012 Sicherheit, Schutz undZuverlässigkeit Beiträge der6.Jahrestagung des Fachbereichs Sicherheit der Gesellschaft fürInformatik e.V.(GI) P-196 Arslan Brömme, Christoph Busch (Eds.) BIOSIG 2012 Proceedings ofthe11thInternational Conference oftheBiometrics Special Interest GroupP-197 Jörn vonLucke, Christian P.Geiger, Siegfried Kaiser, Erich Schweighofer, Maria A.Wimmer (Hrsg.) Aufdem Weg zueiner offenen, smarten undvernetzten Verwaltungskultur Gemeinsame Fachtagung Verwaltungsinformatik (FTVI) und Fachtagung Rechtsinformatik (FTRI) 2012 P-198 Stefan Jähnichen, Axel Küpper, Sahin Albayrak (Hrsg.) Software Engineering 2012 Fachtagung desGI-Fachbereichs Softwaretechnik P-199 Stefan Jähnichen, Bernhard Rumpe, Holger Schlingloff (Hrsg.) Software Engineering 2012 Workshopband P-200 Gero Mühl, JanRichling, Andreas Herkersdorf (Hrsg.) ARCS 2012 Workshops P-201 Elmar J.Sinz Andy Schürr (Hrsg.) Modellierung 2012 P-202 Andrea Back, Markus Bick, Martin Breunig, KeyPousttchi, Frédéric Thiesse (Hrsg.) MMS 2012:Mobile undUbiquitäre Informationssysteme P-203 Paul Müller, Bernhard Neumair, Helmut Reiser, Gabi Dreo Rodosek (Hrsg.) 5.DFN-Forum Kommunikationstechnologien Beiträge derFachtagung P-204 Gerald Eichler, Leendert W.M. Wienhofen, Anders Kofod-Petersen, Herwig Unger (Eds.) 12thInternational Conference on Innovative Internet Community Systems (I2CS 2012) P-205 Manuel J.Kripp, Melanie Volkamer, Rüdiger Grimm (Eds.) 5thInternational Conference onElectronic Voting 2012 (EVOTE2012) Co-organized bytheCouncil ofEurope, Gesellschaft fürInformatik andE-Voting.CC P-206 Stefanie Rinderle-Ma, Mathias Weske (Hrsg.) EMISA 2012 DerMensch imZentrum derModellierung P-207 Jörg Desel, Jörg M.Haake, Christian Spannagel (Hrsg.) DeLFI 2012: Die10.e-Learning Fachtagung Informatik derGesellschaft fürInformatik e.V. 24.–26. September 2012P-208 Ursula Goltz, Marcus Magnor, Hans-Jürgen Appelrath, Herbert Matthies, Wolf-Tilo Balke, Lars Wolf (Hrsg.) INFORMATIK 2012 P-209 Hans Brandt-Pook, André Fleer, Thorsten Spitta, Malte Wattenberg (Hrsg.) Nachhaltiges Software Management P-210 Erhard Plödereder, Peter Dencker, Herbert Klenk, Hubert B.Keller, Silke Spitzer (Hrsg.) Automotive –Safety &Security 2012 Sicherheit undZuverlässigkeit für automobile Informationstechnik P-211 M.Clasen, K.C.Kersebaum, A. Meyer-Aurich, B.Theuvsen (Hrsg.) Massendatenmanagement inder AgrarundErnährungswirtschaft Erhebung -Verarbeitung -Nutzung Referate der33.GIL-Jahrestagung 20.–21.Februar 2013, Potsdam P-212 Arslan Brömme, Christoph Busch (Eds.) BIOSIG 2013 Proceedings ofthe12th International Conference oftheBiometrics Special Interest Group 04.–06. September 2013 Darmstadt, Germany P-213 Stefan Kowalewski, Bernhard Rumpe (Hrsg.) Software Engineering 2013 Fachtagung desGI-Fachbereichs Softwaretechnik P-214 Volker Markl, Gunter Saake, Kai-Uwe Sattler, Gregor Hackenbroich, Bernhard Mit schang, Theo Härder, VeitKöppen (Hrsg.) Datenbanksysteme fürBusiness, Technologie undWeb (BTW) 2013 13.–15.März 2013, Magdeburg P-215 Stefan Wagner, Horst Lichter (Hrsg.) Software Engineering 2013 Workshopband (inkl. Doktorandensymposium) 26.Februar –1.März 2013, Aachen P-216 Gunter Saake, Andreas Henrich, Wolfgang Lehner, Thomas Neumann, Veit Köppen (Hrsg.) Datenbanksysteme fürBusiness, Technologie undWeb (BTW) 2013 – Workshopband 11.–12.März 2013, Magdeburg P-217 Paul Müller, Bernhard Neumair, Helmut Reiser, Gabi Dreo Rodosek (Hrsg.) 6.DFN-Forum Kommunikationstechnologien Beiträge derFachtagung 03.–04. Juni2013, ErlangenP-218 Andreas Breiter, Christoph Rensing (Hrsg.) DeLFI 2013: Die11e-Learning Fachtagung Informatik derGesellschaft fürInformatik e.V.(GI) 8.–11.September 2013, Bremen P-219 Norbert Breier, Peer Stechert, Thomas Wilke (Hrsg.) Informatik erweitert Horizonte INFOS 2013 15.GI-Fachtagung Informatik undSchule 26.–28.September 2013 P-220 Matthias Horbach (Hrsg.) INFORMATIK 2013 Informatik angepasst anMensch, Organisation undUmwelt 16.–20.September 2013, Koblenz P-221 Maria A.Wimmer, Marijn Janssen, Ann Macintosh, Hans Jochen Scholl, Efthimios Tambouris (Eds.) Electronic Government and Electronic Participation Joint Proceedings ofOngoing Research of IFIP EGOV andIFIP ePart 2013 16.–19.September 2013, Koblenz P-222 Reinhard Jung, Manfred Reichert (Eds.) Enterprise Modelling andInformation Systems Architectures (EMISA 2013) St.Gallen, Switzerland September 5.–6.2013 P-223 Detlef Hühnlein, Heiko Roßnagel (Hrsg.) Open Identity Summit 2013 10.–11.September 2013 Kloster Banz, Germany P-224 Eckhart Hanser, Martin Mikusz, Masud Fazal-Baqaie (Hrsg.) Vorgehensmodelle 2013 Vorgehensmodelle –Anspruch und Wirklichkeit 20.Tagung derFachgruppe Vorgehensmodelle imFachgebiet Wirtschaftsinformatik (WI-VM) der Gesellschaft fürInformatik e.V. Lörrach, 2013 P-225 Hans-Georg Fill,Dimitris Karagiannis, Ulrich Reimer (Hrsg.) Modellierung 2014 19.–21.März 2014, Wien P-226 M.Clasen, M.Hamer, S.Lehnert, B.Petersen, B.Theuvsen (Hrsg.) IT-Standards inderAgrarund Ernährungswirtschaft Fokus: Risikound Krisenmanagement Referate der34.GIL-Jahrestagung 24.–25.Februar 2014, BonnP-227 Wilhelm Hasselbring, NilsChristian Ehmke (Hrsg.) Software Engineering 2014 Fachtagung desGI-Fachbereichs Softwaretechnik 25.–28.Februar 2014 Kiel, Deutschland P-228 Stefan Katzenbeisser, Volkmar Lotz, Edgar Weippl (Hrsg.) Sicherheit 2014 Sicherheit, Schutz undZuverlässigkeit Beiträge der7.Jahrestagung des Fachbereichs Sicherheit der Gesellschaft fürInformatik e.V.(GI) 19.–21.März 2014, Wien P-229 Dagmar Lück-Schneider, Thomas Gordon, Siegfried Kaiser, Jörn von Lucke,Erich Schweighofer, Maria A.Wimmer, Martin G.Löhe (Hrsg.) Gemeinsam Electronic Government ziel(gruppen)gerecht gestalten und organisieren Gemeinsame Fachtagung Verwaltungsinformatik (FTVI) und Fachtagung Rechtsinformatik (FTRI) 2014, 20.-21. März 2014 inBerlin P-230 Arslan Brömme, Christoph Busch (Eds.) BIOSIG 2014 Proceedings ofthe13thInternational Conference oftheBiometrics Special Interest Group 10.–12.September 2014 in Darmstadt, Germany P-231 Paul Müller, Bernhard Neumair, Helmut Reiser, Gabi Dreo Rodosek (Hrsg.) 7.DFN-Forum Kommunikationstechnologien 16.–17.Juni2014 Fulda P-232 E.Plödereder, L.Grunske, E.Schneider, D.Ull(Hrsg.) INFORMATIK 2014 BigData –Komplexität meistern 22.–26.September 2014 Stuttgart P-233 Stephan Trahasch, Rolf Plötzner, Gerhard Schneider, Claudia Gayer, Daniel Sassiat, Nicole Wöhrle (Hrsg.) DeLFI 2014 –Die12.e-Learning Fachtagung Informatik derGesellschaft fürInformatik e.V. 15.–17.September 2014 FreiburgP-234 Fernand Feltz, Bela Mutschler, Benoît Otjacques (Eds.) Enterprise Modelling andInformation Systems Architectures (EMISA 2014) Luxembourg, September 25-26, 2014 P-235 Robert Giegerich, Ralf Hofestädt, TimW.Nattkemper (Eds.) German Conference on Bioinformatics 2014 September 28–October 1 Bielefeld, Germany P-236 Martin Engstler, Eckhart Hanser, Martin Mikusz, Georg Herzwurm (Hrsg.) Projektmanagement und Vorgehensmodelle 2014 Soziale Aspekte undStandardisierung Gemeinsame Tagung derFachgruppen Projektmanagement (WI-PM) und Vorgehensmodelle (WI-VM) im Fachgebiet Wirtschaftsinformatik der Gesellschaft fürInformatik e.V., Stuttgart 2014 P-237 Detlef Hühnlein, Heiko Roßnagel (Hrsg.) Open Identity Summit 2014 4.–6. November 2014 Stuttgart, Germany P-238 Arno Ruckelshausen, Hans-Peter Schwarz, Brigitte Theuvsen (Hrsg.) Informatik inderLand-, Forstund Ernährungswirtschaft Referate der35.GIL-Jahrestagung 23.–24.Februar 2015, Geisenheim P-239 Uwe Aßmann, Birgit Demuth, Thorsten Spitta, Georg Püschel, Ronny Kaiser (Hrsg.) Software Engineering &Management 2015 17.-20. März 2015, Dresden P-240 Herbert Klenk, Hubert B.Keller, Erhard Plödereder, Peter Dencker (Hrsg.) Automotive –Safety &Security 2015 Sicherheit undZuverlässigkeit für automobile Informationstechnik 21.–22. April 2015, Stuttgart P-241 Thomas Seidl, Norbert Ritter, Harald Schöning, Kai-Uwe Sattler, Theo Härder, Steffen Friedrich, Wolfram Wingerath (Hrsg.) Datenbanksysteme fürBusiness, Technologie undWeb (BTW 2015) 04.–06.März 2015, HamburgP-242 Norbert Ritter, Andreas Henrich, Wolfgang Lehner, Andreas Thor, Steffen Friedrich, Wolfram Wingerath (Hrsg.) Datenbanksysteme fürBusiness, Technologie undWeb (BTW 2015) – Workshopband 02.–03.März 2015, Hamburg P-243 Paul Müller, Bernhard Neumair, Helmut Reiser, Gabi Dreo Rodosek (Hrsg.) 8.DFN-Forum Kommunikationstechnologien 06.–09. Juni2015, Lübeck P-244 Alfred Zimmermann, Alexander Rossmann (Eds.) Digital Enterprise Computing (DEC 2015) Böblingen, Germany June 25-26, 2015 P-245 Arslan Brömme, Christoph Busch , Christian Rathgeb, Andreas Uhl(Eds.) BIOSIG 2015 Proceedings ofthe14th International Conference oftheBiometrics Special Interest Group 09.–11. September 2015 Darmstadt, Germany P-246 Douglas W.Cunningham, Petra Hofstedt, Klaus Meer, Ingo Schmitt (Hrsg.) INFORMATIK 2015 28.9.-2.10. 2015, Cottbus P-247 Hans Pongratz, Reinhard Keil (Hrsg.) DeLFI 2015 –Die13.E-Learning Fachtagung Informatik derGesellschaft fürInformatik e.V.(GI) 1.–4. September 2015 München P-248 Jens Kolb, Henrik Leopold, JanMendling (Eds.) Enterprise Modelling andInformation Systems Architectures Proceedings ofthe6thInt.Workshop on Enterprise Modelling andInformation Systems Architectures, Innsbruck, Austria September 3-4,2015 P-249 Jens Gallenbacher (Hrsg.) Informatik allgemeinbildend begreifen INFOS 2015 16.GI-Fachtagung Informatik undSchule 20.–23. September 2015P-250 Martin Engstler, Masud Fazal-Baqaie, Eckhart Hanser, Martin Mikusz, Alexander Volland (Hrsg.) Projektmanagement und Vorgehensmodelle 2015 Hybride Projektstrukturen erfolgreich umsetzen Gemeinsame Tagung derFachgruppen Projektmanagement (WI-PM) und Vorgehensmodelle (WI-VM) im Fachgebiet Wirtschaftsinformatik derGesellschaft fürInformatik e.V., Elmshorn 2015 P-251 Detlef Hühnlein, Heiko Roßnagel, Raik Kuhlisch, JanZiesing (Eds.) Open Identity Summit 2015 10.–11. November 2015 Berlin, Germany P-252 Jens Knoop, Uwe Zdun (Hrsg.) Software Engineering 2016 Fachtagung desGI-Fachbereichs Softwaretechnik 23.–26. Februar 2016, Wien P-253 A.Ruckelshausen, A.Meyer-Aurich, T.Rath, G.Recke, B.Theuvsen (Hrsg.) Informatik inderLand-, Forstund Ernährungswirtschaft Fokus: Intelligente Systeme –Stand der Technik undneue Möglichkeiten Referate der36.GIL-Jahrestagung 22.-23. Februar 2016, Osnabrück P-254 Andreas Oberweis, Ralf Reussner (Hrsg.) Modellierung 2016 2.–4. März 2016, Karlsruhe P-255 Stefanie Betz, Ulrich Reimer (Hrsg.) Modellierung 2016 Workshopband 2.–4. März 2016, Karlsruhe P-256 Michael Meier, Delphine Reinhardt, Steffen Wendzel (Hrsg.) Sicherheit 2016 Sicherheit, Schutz undZuverlässigkeit Beiträge der8.Jahrestagung des Fachbereichs Sicherheit der Gesellschaft fürInformatik e.V.(GI) 5.–7. April 2016, Bonn P-257 Paul Müller, Bernhard Neumair, Helmut Reiser, Gabi Dreo Rodosek (Hrsg.) 9.DFN-Forum Kommunikationstechnologien 31.Mai–01.Juni2016, RostockP-258 Dieter Hertweck, Christian Decker (Eds.) Digital Enterprise Computing (DEC 2016) 14.–15. Juni2016, Böblingen P-259 Heinrich C.Mayr, Martin Pinzger (Hrsg.) INFORMATIK 2016 26.–30. September 2016, Klagenfurt P-260 Arslan Brömme, Christoph Busch, Christian Rathgeb, Andreas Uhl(Eds.) BIOSIG 2016 Proceedings ofthe15th International Conference oftheBiometrics Special Interest Group 21.–23. September 2016, Darmstadt P-261 Detlef Rätz, Michael Breidung, Dagmar Lück-Schneider, Siegfried Kaiser, Erich Schweighofer (Hrsg.) Digitale Transformation: Methoden, Kompetenzen undTechnologien fürdie Verwaltung Gemeinsame Fachtagung Verwaltungsinformatik (FTVI) und Fachtagung Rechtsinformatik (FTRI) 2016 22.–23. September 2016, Dresden P-262 Ulrike Lucke, Andreas Schwill, Raphael Zender (Hrsg.) DeLFI 2016 –Die14.E-Learning Fachtagung Informatik derGesellschaft fürInformatik e.V.(GI) 11.–14. September 2016, Potsdam P-263 Martin Engstler, Masud Fazal-Baqaie, Eckhart Hanser, Oliver Linssen, Martin Mikusz, Alexander Volland (Hrsg.) Projektmanagement und Vorgehensmodelle 2016 Arbeiten inhybriden Projekten: Das Sowohl-als-auch vonStabilität und Dynamik Gemeinsame Tagung derFachgruppen Projektmanagement (WI-PM) und Vorgehensmodelle (WI-VM) im Fachgebiet Wirtschaftsinformatik derGesellschaft fürInformatik e.V., Paderborn 2016 P-264 Detlef Hühnlein, Heiko Roßnagel, Christian H.Schunck, Maurizio Talamo (Eds.) Open Identity Summit 2016 derGesellschaft fürInformatik e.V.(GI) 13.–14. October 2016, Rome, ItalyP-265 Bernhard Mitschang, Daniela Nicklas,Frank Leymann, Harald Schöning, Melanie Herschel, Jens Teubner, Theo Härder, Oliver Kopp, Matthias Wieland (Hrsg.) Datenbanksysteme fürBusiness, Technologie undWeb (BTW 2017) 6.–10. März 2017, Stuttgart P-266 Bernhard Mitschang, Norbert Ritter, Holger Schwarz, Meike Klettke, Andreas Thor, Oliver Kopp, Matthias Wieland (Hrsg.) Datenbanksysteme fürBusiness, Technologie undWeb (BTW 2017) Workshopband 6.–7. März 2017, Stuttgart P-267 JanJürjens, Kurt Schneider (Hrsg.) Software Engineering 2017 21.–24. Februar 2017, Hannover P-268 A.Ruckelshausen, A.Meyer-Aurich, W.Lentz, B.Theuvsen (Hrsg.) Informatik inderLand-, Forstund Ernährungswirtschaft Fokus: Digitale Transformation – Wege ineinezukunftsfähige Landwirtschaft Referate der37.GIL-Jahrestagung 06.–07. März 2017, Dresden P-269 Peter Dencker, Herbert Klenk, Hubert Keller, Erhard Plödereder (Hrsg.) Automotive –Safety &Security 2017 30.–31. Mai2017, Stuttgart P-271 Paul Müller, Bernhard Neumair, Helmut Reiser, Gabi Dreo Rodosek (Hrsg.) 10.DFN-Forum Kommunikationstechnologien 30.–31.Mai2017, Berlin P-272 Alexander Rossmann, Alfred Zimmermann (eds.) Digital Enterprise Computing (DEC 2017) 11.–12. Juli2017, Böblingen P-273 Christoph Igel, Carsten Ullrich, Martin Wessner (Hrsg.) BILDUNGSRÄUME DeLFI 2017 Die15.e-Learning Fachtagung Informatik derGesellschaft fürInformatik e.V.(GI) 5.bis8.September 2017, ChemnitzP-274 IraDiethelm (Hrsg.) Informatische Bildung zum Verstehen undGestalten derdigitalen Welt 13.–15. September 2017 Oldenburg P-277 Lothar Fritsch, Heiko Roßnagel, Detlef Hühnlein (Hrsg.) Open Identity Summit 2017 5.–6.October 2017 Karlstad, Sweden Thetitles canbepurchased at: KöllenDruck +Verlag GmbH Ernst-Robert-Curtius-Str. 14·D-53117 Bonn Fax: +49(0)228/9898222 E-Mail: druckverlag@koellen.de“Informatische Bildung zum Verstehen und Gestalten der digitalen Welt – INFOS  2017”  ist die 17. Konferenz der Reihe Informatik und Schule, die ihren Fokus auf  das breite Spektrum der informatischen Bildung allgemein und der Informatik als  Schulfach im Speziellen legt. Dieser Band steht im Kontext der bundesweiten Dis kussionen zur Bildung  in der digitalen Welt und zeichnet sich daher durch eine  große Spannweite aus – sowohl in der Gruppe der Lerner beginnend mit dem  Kindergarten als auch in den behandelten Themengebieten. Der Tradition folgend  legt auch diese viel Wert drauf , sowohl Theroie und Forschung als auch Praxisbeiträgen angemessenen Raum zu geben.ISSN 1617 -5468 ISBN 978 -3-88579 -668-8Gesellschaft für Informatik e.V . (GI) publishes this series in order to make available to a broad public  recent ﬁndings in informatics (i.e. computer science and informa tion systems), to document conferences that are organized in co operation with GI and to publish the annual GI Award dissertation. Broken down into • seminars • proceedings • dissertations • thematics current topics are dealt with from the vantage point of research and  development, teaching and further training in theory and practice. The Editorial Committee uses an intensive review process in order  to ensure high quality contributions. The volumes are published in German or English. Information: http://www.gi.de/service/publikationen/lni/ I. Diethelm (Hrsg.): Informatische Bildung zum Verstehen   und Gestalten der digitalen Welt – INFOS 2017