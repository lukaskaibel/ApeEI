- 123 -Ein kleiner  Schritt für LehrerInnen,  ein großer  Schritt für SchülerInnen.  Peter Micheuz Institut für InformatikSysteme Universität Klag enfurt Universitätsstraße 65-67 A-9020 Klagenfurt Österre ich peterm@isys.uni-klu.ac.atAbstract:  Die Schulinfo rmatik an den allgemein  bildend en höheren Schulen Ös-terreichs ist geprägt von einer nahezu unübersch auba ren Vielfalt an Organisations-form en, die auf schulau tonome Profilbildung en zurückzuführen sind. Dennoch gibt es an der Schn ittste lle zwischen Seku ndars tufe I und Seku ndars tufe II ein Pflicht-fach Informatik in der 9. Jahrgan gsstuf e im Ausmaß von zwei Wochenstunden, für das es ab dem Schuljahr 2004/2 005 einen  neuen zentral verordneten Lehrplan gibt. In diesem Beitrag wird beleuch tet, ob und wie ein Teil dieses sehr offenen undabstrakten Lehr plans, nämlich das Thema Programmierung, der konkreten Unter -richts arbeit zugä nglich gemacht werden kann . Einerseits werden die entsprech en-den Formulierungen dieses Lehrplanabschn ittes kommentiert,  andererseits führt eine empirische Untersuch ung über elementa re Algorithmen auf dieser Alterss tufe zu einigen  interessante n Schlussfolgerungen und Thesen.   Nicht s ist so gefährlich wie das „Allzu  modern  Sein“.  Man gerät  in Gefahr, plötzlic h aus der Mod e zu komme n. Oscar Wilde 1  Einleitung„Nat ürlich kommtman ohne eine Programmiersprac he nicht aus. Aber mehrmals habeich feststellen müssen, dass Schüler angeblich eine ganze Programmiersprac he gelernthatten und die einfache Aufgabe, die W erte zweier Variablen zu vertausc hen, nicht lösen konnten. Das ist ersch ütternd: Man lernt Rekursion, aber der Schüler kann die Wertezwei er Variablen nicht vertauschen!Zu diesem  Kapitel gehören nochandere Dinge, z. B. die Unterscheidung zwischen der Gleichhei tsrelation und der Zuweisungsoperati-on." Ist diese r Tausc h der Werte zweier Variablenwirklich sowichtig, dass dieses Be-daue rn von Peter Rechen berg [Re94] gerechtfertig t wäre?  Diese Aussage wirft Fragen auf, die in vieler Hinsichtden Kern der Informatik-Fach didaktik treffen: Was soll auswelch enGründ en inwelch er Altersst ufe wie vermittelt werden?Der Tren d inÖsterreichin Richtung Output-Steuerung legt außerdem nahe, die Frage nach Standards und Evalu-ationen unddamit der tatsächlichen Sc hülerleistungen mit einzubeziehen. Das mangelhafteWissen und Können der SchülerInnen im Grundlagenberei ch betrifft- 124 -derzeit (in Österreich ) weniger die Informatik1 als vielm ehr bereits etablie rte Fächer wie Math ematik undnaturwissensch aftlich eFächer, wie es eine einschlägigeStudie2 belegt.Diese tradierten Fäche r haben im Untersc hied zum Schulfach Informatik ihren weitest gehe ndgesicherten Platz imFächerkanon und zeichnen sichdurch einen über Jahrhun-derte gewachse nen, system atischen und soliden Aufb au, verteilt über die einzelnenJahr-gangsstufen, aus. Zweifellos sind das notwendige, aber noch lange nicht hinreichende Bedingungenfür  nachhaltige Kompetenzen der SchülerIn nen.Die Klag envon (übli-cherweise nicht larmoyanten) Math ematik-LehrerInnen, dass angehe nde AbsolventInne nnicht gut rechnen können undmit Bruch- und Prozentrechnungen auf Kriegsfuß stehen,hört man immer öfter. Wenn die Schül erInnen berei ts in einem Fach wie Mathematik, das imFäche rkanonab der Grundschule mitmindest ens 3 Woc henstunden dotiertist,gravierende Defizite aufweis en, wie sieht es dann erstmit der Nach haltigkeit informati-scher Kom petenzen3aus? Umdiese r Frage nachzugehen,müssen wir uns zunächst die organisatorischen Rahmenbed ingungen ansehen.2  Informatikunterricht an den AHS Österreichs Abbi ldung 1: Informat ik andenGymnasien Österreich s  Die einzige Invari ante informatis cher Unte rrichtserteilu ng in Österre ichs Gymnasien  seitnunmehr 20 Jahren ist das zweistündige Pflichtfach  Informatik [Re03] in der 9. Jahr-gangsst ufe(5. Klasse der AHS4). Im schlechtesten Fallbestehtdas minimale Lehrange-bot innerhalb der gymnasialen Laufbahn aus zweiWoc henstunden,das sind2 von insge-1 In Österreich ist die (minister iell abgesegnete)  Entwicklung von Standar ds derzeit auf die Fächer  Mathema-tik, Englisch und Deutsch beschr änkt. Sehr wohl aber definieren die weit verbreiteten und in Österr eichs Schulen  gut angeno mmenen Zertif ikate wie der ECDL Standar ds, die unabhängig von der Altersstu fe erworbenwerden können.2 Die Ergebnisse der PISA-Studie 2003 waren für Österreich ernüchter nd.3 Auf die Kompetenzen der Informatik-Lehrer  wird in diesem  Beitrag nicht eingegangen.  Nebenbei sei ver-merkt, dass es seit 2000 in Öster reich ein vollwer tiges Informatik-L ehramtstudiu m an vier Univer sitäten gibt.4 In Österreich besuchen ca. 20% eines  Jahrgangs die 5. Klasse eines Gymnasiums(AHS).- 125 -samt unge fähr250 Wochenstunden. Allerdings ist dieses worst-case Szenario nicht mehroft anzutreffen, zumal die Schulautonomie in Österre ich seit 1995 eine Vielzah l vonSchwerpunkten und Schulprofilbildungen gerade im Bereich der Schulinformatik be-wirkt hat. Es liegen derzeit allerd ings(noch) keine exakten Zahlen über diese Entwick-lung im zuständigen Ministerium vor. So beda uerlich aus Sichtder Pr otagonisten der Schulinformatik der Zustand des  minima-len verpflichtenden Angebots nur in der 9. Jahrgangsstufe ist, so erfreulich ist die Tatsa-che, dass es auch SchülerInnen  gibt, die (in Ausnahmefällen) im Gymnasium das Fach Informatik durchge hend vonder 1. bis zur 8. Klasse besuchen und aus diesem Fach auchmaturieren (könne n). Zwei Beispiele aus dem Gym nasium, an dem ich unterrichte unddas in einem Schultyp in einer Klasse seit Jahren einen Informatikschwerpunkt setzt, mögen die enorm e Bandbreit e inform atischer  Kompetenz verde utlichen. Eine Schüleri n der 6.Klasse (10. Jg.) wollte ein halbes Jahr nach dem Pflichtfach Informatik  in der 5. Klasse in einem andere n Fach eine Präse ntation vorführen, die sie auf einer CD von zuHaus e mitbrachte. Sie konnte  diese Präsen tation nicht öffnen,  weil sie das CD-La ufwerk über das Betri ebssystem  nicht ansprechen konnte. Dies ist ein extremes Negativbeispiel eines wenignach haltigenUnterrich ts. Das andere Extrem auf der fast unendlichen In-formatik-Kompetenzskala repräsentieren SchülerInnen5, die bei der Informatik-M atura6mit außerordentlichen Leistu ngen brillieren  undanschließend das Informatik -Studiummit Brav our absolvieren .AnÖsterre ichs Gymnasien  findet Schu linfo rmatik in verschiedenstenAusprägun gsfor-men statt (Abb ildung 1). Die Ausnahme istdie Regel. Es ist nicht Ziel dieses Beitrages darüber zureflek tieren ,obdiese Disparitäten  in der Schulinformatik an Österre ichs Gymnasien als Ergebnis schulautonomer Profilbildungen gutoder schlecht sind. Ebensogebe  ich andieser Stelle auch keinWert urteil über diesen "Fleckerlteppich" (euphemis-tisch  ausgedrück t: "bunte blühende Wiese") ab, solange keine aktuellen quantitativ en und qualitati venStudien vorliegen.73  Vom abstrakten Lehrplan  zum konkreten Unterricht Im Zuge einer inhaltlichen Reform des Gymnasiums sind ab dem Schu ljahr 2004/2005neue  Lehrpläne für die Oberstufe der AHS, also für die 9.-12. Jahrgangsstufe, inKraftgesetzt worden. Dam it ist eine neuegesetzliche Grundlage, warum undwie welche In-halte im FachInform atik unterrich tet werd en sollen, Teil österreich ischer Schulrealitä t,zumindest auf dem Papi er.  Indiesem  Beitrag liegtder Schwerpunkt in der Interpretation des Lehrp lanabschnittes über Algorithmen und Programmierung inder 9. Jahrgangsstufe8. Für die Lehr planauto-5 In Österreich ist der Anteil der SchülerInnen an den AHS,  die im Fach Inform atik maturieren, klein.6 In Deutschland ist es das Abitur .7 Ein Über blick über die Inform atik an den AHS kann im CDA-Sonder heft [CD05]  nachgelesen werden.8 Bezüglich des Lehrplanes des Wahl pflichtfaches Informatik wird auf http://www. gemeinsam lernen.at  verwie -sen. - 126 -ren gab es von ministerieller Seite aus die Vorgabe, diesen - nicht zuletzt wegen derRücksic htnahme auf das unterschied liche Vorwissen der Schü lerInnenaus der Sekun-darst ufe I (gymnasiale Unterstu fe) - sooffen wie möglich zu halten. Dieses gelangauch, allerdings aufKostenvon jedwedenkonkreten stofflichen Vorgaben. Die Freiräume fürenga gierte InformatiklehrerInnen sind dementsprechend groß. Für weniger einfallsreiche LehrerInnen sind die Vorg aben dieses Lehrplanes zu abstrakt. Studienhinsichtlich der unterschiedlichen Interpretationen und Exekutionen dieser geset zlichen Vorgabe könnenerst nachdiesem Schul jahrdurchgeführtwerden. Sowirddas Thema Programmierung  ineinem Absatz kurz abgehandelt:  "Die Schülerinnen und Schüler sollenEinblicke in wesentliche Begriffe und Methode n der Informatik, ihre typischen Denk-undArbeitsweisen , ihre historische Entwicklung sowie ihre technischen und theoretischen Grundlagen gewinnen und Grun dprinzipi envon Aut omaten, Algorithme n und Programmen kennen lernen."  Ein wenig konk reter, aberfür unbedarfte Informatik-Lehrkräfte nicht wirklichhilfreich, wird es in einem Kom mentar zu diesem  Lehrplanauszug von Caba [CD05]: "Eine Be-handlung dieser Them en im Rahmen von schül errelevanten Problemstellunge n stelltaber s icher eine ganz besondere didaktische Hera usforderung dar, zumal im Lehrplander5. Klasse die Programmierung bzw. Programmiersprac henkonzepteals Lehrstoff nichtexplizit vorgesehensind. Es sei … auf die in [Hu00 ] vorgestellte n Unterrichtsbeispiele … hingewiesen. Dort werden Aspe kte von Konzeptwissen (z. B.Objektorientierung)bzw. von Methoden(wie Mod ellierun gstechn iken)und Begriffen (wie Algorithmus oder Automat) im Rahmen der Verwendu ngvon Anwendersoftware aufgegriffen."  Eine wei tere Konkretisierung in Form  von o perationalisierten9 Lernzielen  tut Not. Unter-richtsarbeit bedeutet, mühsam einen Fuß vor den anderen zu setzen. ImfachdidaktischenElfenb einturmist es zwar angenehm, doch profitieren  können die Kolleginnen und Kol-legen nur davon,dass sichmanche durch den ebenso altersgem äßen wie forderndenUnterricht quälen. Insofern untersch eidet sich der Informatikunterrich t nicht vom Unter-richt in den tradierten Fäch ern.4  Programmierung als  wichtiger Teil des Informatikunterrich ts Sehen wir uns eine mögliche Umsetzungund Evaluation zum Thema Prog rammierungin der 9. Jahrgangsstufe an. Im Novem ber 2004 wurde imRahmen einer Di plomarbei t ander Universität Klagenfurt eine diesbezü gliche St udie durchgeführt.Der Anlass,  dieses Them a zu beforschen , ergab sich aus den Lehrplanvorgaben, die Program mierung (im weitesten Sinn) auf dieser konkreten Alterstufe als Notwendigkeitvorsehen. Eine immanente Aufgabe jeder Fachdi daktikbesteht darin, mit geeigneten fachs pezifisc hen Lernzielen den Nachweis  zu erbringen, dass kein anderes Fach diesenspezi fischen Beitrag zur Allge meinbildung zu erbringen vermag [Re03]. In diesem  Zu-9 Operationalisie rteLernziele  beschreiben das erwünschte beobachtbar e Verhalten des Schülers möglichst eindeutig [vgl. den Syllabus des ECDL auf http://www. ecdl.at]. - 127 -samme nhang könnten leichte Zweifel auftau chen, das Thema Programmierung und Al-gorithmen den Mathematikern zuüberlassen. Im neuen österreichischen Mathematik-Lehr plan ist Programmierung nicht explizit vorgesehe n.Wir könnendie Kirche also imDorf lassen. Bei Ottmann [OW96] finden wir: „Sie [Algorithmen] sind das zentrale Thema der Informatik. Die Entwicklungund Untersuchung vonAlgorithmen  zur Lösung vielfältig er Probleme gehört zu denwichtigsten Aufgabender Inform atik.“ Und sogar bei Hentig[He9 3] ist nachzulesen: "Schwer schließlich ist das Programmi eren - aber das müssen nicht sehr viele Leute indieser Gese llschaft tun, es müssen sich nur alle einmal an einem Programm versuc ht haben, um zu verstehen, wasda vor sichgeht." War diese Aussage gar Grundlage der sanften Formulierung im Lehr plan "DieSchüler sollen ...Grundprinzipien von Automaten, Algorithmen und Programme n kenne n lernen" . Diesimpliziert folgende Fragenund einen großenInterpretationsraum. •Wie soll die Primärerfahr ung der SchülerInnen mit Progr ammierung gestaltetwerden? WelcheZugänge und Unterrichtsmethoden sind adäquat?•Gibt es einen Katalo g allgemein  bildender und altersstufen-adä quater Aufga-benstellungen für die 5. Klasse (9. Jg.)?•Welche(Programm)-Entwicklungsumgebung ist besond ers zu empfehlen?•Wie lange und in welchem Umfang soll das Thema Prog rammierung in einemgeschätzten Rahmen von ca. 60-70 Unterrichtstunden behandelt werden?•Was darf vonden SchülerInnen amBeginndieser Altersstufe vorausgeset ztwerden?•Welche Schülerleistungen sind im Programmierunt errichterwa rtbar?Die eingangs erwä hnte fachdidaktische Diplomarbei t der Lehram tskandidatin MarinaGlatz  aus Informatik  unter dem Titel: "Visualisieru ngvon elementaren Algorithmen imInformatikunterricht", die an zwei  Schulen in vier 5. Klassen durchgeführt wurde, be-schäftigt sich mit der Forschu ngsfrage, inwieweit die Visu alisierun gvon grundlegenden Program mieraufga ben den Lernerfolg positiv beeinflusst. Erge bnisse aus dieser Studie werd en indiesem Beitrag  nur insoweit dargestellt, als sie in direktem Zusamm enhangmit Schülerleistu ngen ingrund legender Programmieru ng stehen. Der Ausdruck"grundlegende" Algorithmen istmehr denn je gerechtfertigt, da beidieserStudie keine Vorerfahrungender SchülerInnen im Programmieren vorausgesetzt wurden. Es hat sichbei den Voruntersuchungen gezeigt, dass die TestschülerInnen in nur ganz wenigen Ausnahmefällen diesbez ügliche Vorkenntnisse aus der gymnasialen Unterstufe(Sekundarstufe I)hatten.Dies ist nicht sonder lichüberraschend, da bis aufwenigeAus-nahm en der Programmierunterrichtin der Sekundarstufe I, das ist die Altersstufe der- 128 -10 bis 14-jährigen SchülerInnen, anden AHS aus verschiedene n Gründen10 fast nicht (mehr) existent ist. Die Frage, obdas einwünschenswerter Zustand ist, wird an dieser Stelle, obwohl von Interesse , nicht erörtert. Um welchen programmiertechni schen Kerngeht es in dieser Studie?•Sichere Handhabung von Wertzuweisungen inSequenzen•Beherrschung von Vergleichsoperatorenin einfachenAbfragen•Elementare Ereignissteuerung  Nich t viel, würd e manmeinen. Ein informatischer "Sub standard", bestenfalls vergleich-bar mit dem großen Einmaleins in der Mathematik. Die Ergebnisse allerdings, sovielkannbereits als wesen tlichstes Ergebnis vorweg genommen werden, waren ernüchternd. Die bei den Tests gestellten Aufgab en wurden, nach einer - im Nach hinein betrachtet - viel zu kurzenInstruktionsphase (ei ne Doppelstunde), wenig zufrieden stellend gelöst.•Was bedeutet X = Y?•Ist Y=X das gleiche wie X=Y?•Ergä nze den Algorithmus, we lcher die Inhalteder Zel lenB2 und D2 vertauscht:x = cells(2 ,2)    y = cells(2 ,4) ...........   ..........   ........... cells(2 ,2) = x   cells(2 ,4) = y•Ein verwirrter Tierhändler bietet seine Tierchen online an. Er hat die Fotos lei-der falsch zugeordnet. Die Datei vogel .jpg repräsentiert einen Fisch, die Datei fisch.jpgeinen Vogel. Wie bringst du das in Ordnung?•Ein einfac her Automat (Wechselsc halter)besteht aus einem einzigen Button mit der Beschriftung AUS. Nach  Betätig endieses Buttonssoll die Beschriftu ngauf EIN gesetzt werden usw. Wie realisierst dudiesen Automaten?Diese repräse ntative Auswahl der Aufgabenstellungen soll einen Eindruck über dasangepeilte Niveau vermitteln, um die anschließendenAusfüh rungenund Thesen ein-schät zen zu können.Ist die schei nbar so triviale Wertzuweisung und der Tausch der Werte von Variablenüberhauptnoch zeitgemäß und die klassische Trennung von Daten undAlgorithmen inZeiten von Objektorientierung für die Schulinformatik überhauptnoch ein Thema?Hartmann [HN02]bemerkt zu der überzogenen Erwartungshaltung im Hinblick auf10 Ein Grund ist der in den 90-er Jahren erfolgte Paradigm enwechsel vomalgorithmenorientier ten zuman Anwendungen orientierten Unterr icht und einer  beobach tbaren "ECDLisierung"  nicht nur imBereich derSekundarstufe I.- 129 -realistische Schül erleistungen: "Es wird heute den Schulen nahegel egt, von Anfang andie Objektorientierung ins Zentrum der Ausbildung zu stellen. Dabei wird übersehen, dass Objektorientierungals Entwurfsmethode für große Software systeme kaum für denEinstieg  in die Inform atik geeignet ist."  Es geht hier dezidiert um Vorbehalte bei der allzu rasche n Einführung inobjektorientier-te Software-Entwicklung und nicht um die legitime Forderungnach moderat objektori-entierten Sicht weisen bereits im Anfangsunterricht.  Ich möchte an diese rStelle in Zwei-fel ziehen, ob die objektorientierte Modellierung im Anfangsunterricht in Form  vonUML-Diagrammen soweit gehen darf, Anweisungen wie z. B. i++; ohne eine vorange-gange ne Vermittlung von Grundlag en über Daten und Wertzuweis unge n stehe n zu las-sen11. Wurde im Mathematikunterricht jemals Anal ysis unterrichtet,ohne vorher alge-braische Umform unge n ausführlich behandelt und geübt zu haben?Übung macht denMeister, heißt ein Sprichwort. Der österreichische Komponist Anton Bruckner drücktdas so aus: "Will man hohe Türme bauen, so muss man lange beim Fundament verwei-len." Dam it soll ausgedrückt werd en, dass ohne ausgiebige "Trai ningsphasen" mit einer einhergehenden Festigung grundlegender Programmierken ntnisse das ehrgeizige Vorha-ben,SchülerInnenselbst an bescheidenen Softwaree ntwicklungsprozessen konstruktivzubeteilig en, zum Scheiternverurteilt ist.  Auchder noch so trivial anmutende Tausch des Wert es zweie r Varia blen, in der infor-matischen Literatur auch als Ring- oder Dreieckstauschbezeic hnet, bedeutet für dieSchü lerIn neneine nicht zuuntersch ätzende  kognitive Leistu ng. Für die gesetzte, über denDingen des informatisch en Schulalltags stehende routin ierte Informatik-Lehrkraft, die dies berei ts verinnerlicht hat, weil sie ja bereits Jahre unterrichtet, mag dieses Fun-dament des Wert etausch es als atomares Modul von Sortieralgorithmen ein kleiner Schrittim Unterricht sein. Für die SchülerInnen istes inder Regel ein sehr großer. 5  Ein Blick z urück in das Jahr 1992  Um die Programmierung im gegen wärtigen Informatikunterrichtbesser verorten zukönnen, ist es lehrreich, einen kurzen Blick in die Vergangenheit zu wagen.Wer erinnertsich noch andie COMPED12–Studie 1992, die von der IEA13 durchgeführt wurde? Es war die letzte groß angelegte Studie imRahmen der internationalen vergleichendenBildungsforschung zum Informa tikunterricht [Ha94].  Diese Studie liefert wertvo lle nationale und internationale Informationen zu den Rah-menbedi ngungen und die Praxis des Com putereinsatzes an Schulen, Einstellunge n von SchülerInnen und LehrerInnen sowie die Leistungen der SchülerInnen in "Informations-technischer Grundbildung", in "Textverarbeitung" und im"Programmieren". Aus dieser 11 Der Autor  erlebte dies bei einem Vortr ag eines Informatiklehrers anlässlich  derfachdidakt ischen Tagung in Königstein im März 2004.12 COMPED: Computers in Education Study13 IEA : International Associatio n for the Evaluation of Educational Achievem ent, seit 1960.  Als letztes  OECD-L and ist Österreich 1989 der IEA beigetr eten.- 130 -Studie möchte ich nur den letzten Teil heraus greifen, der für diesen Artikel Relevanz hat, nämlich die Schülerleistungen im "Prog rammieren" und hier auch nur das Segment der 14-jährigen SchülerInnen. Man lese und staune: Ein internationaler Vergleichstest,der Programmierkenntnisse für SchülerInnen bereits in dieser Altersstufe abfragt!Ichrufe in Erinnerung, dass es sich um das Jahr 1992 handelt. Aus den 20gestellten Aufga-ben seien hier sechs ausgewäh lt: •Welcher der folgenden Ausdrücke wäre mathematisch korrekt, aber in einemCom puterprogramm ist ein Fehler ?a)  x = y + z  b)   x + 2 = yc)   x = x +z – 2   d)  x = x + 1 •Der folgende Programmteil wurde entworfen, um die Summe einer Anzahl vonWerten  zu ermitteln . WelcheReihenfolge der Anweisung en ist richtig?1. s = 0 a ) 3,1,2,4 2. s = s + x b) 1,3,4,2 3. for x = 1 to n c) 1,3,2,4 4. next x d ) 1,2,3,4 •Den Variablen p, q, r werden beliebige Werte zugewiese n. Dann wird folgender Algorithmus vom Computer durchgeführt:Wenn p größer ist als q, dann Welche Zahl wird ausgegebe n? Wenn p größer ist als r, dann setze t gleich p a) die größt e Zahl von p,q,r  Sonst  setze t gleich r b) die kleinst e Zahl von p,q,r Sonst c) die größe re Zahl von p,q Wenn r kleiner ist als q, dann setze t gleich q d) die kleinere  Zahl von q,r Sonst setze t gleich r Drucke t•Was ist der effizienteste Weg, die Summe von vorgegebenen Zahlen in einemFeld a(1), a(2), a(3),  .... a(n)zu berec hnen,wennn sehrgroß ist?a) mit einem Ausdruck s = a(1)+a (2)+a(3)+ ... +a(n)  b ) mit einer Auswahl-Anweisung c) mit einer Schleif en-Anweisung     d) mit einer Input-Anweisung •Wähl e den richtigen Output für die untenaufgelisteteProzedur. a = 2     b = 3 a) 2,3,5 b = a + bb ) 2,6,8 c = a + bc ) 2,3,8 write a,b,c d) 2,6,5 - 131 -•Die Praxisaufgabe: Schreibe ein Com puterprogramm (BAS IC, PASCAL,LOG O, usw.), das dich zuerst um die Eingabe von Länge und Breite (in Zenti-metern) fragt unddaraus die Fläche u nd den Umfang berec hnet.Der Informatikunterricht inÖsterreichs Gymnasien fand inden frühen 90-er Jahrenfür 13 bis 14-jährige SchülerInnen bis auf weni ge Ausnahmen in unverbindlichen Übungenmit einem  Anteil von ca. 60% statt, wobei  in wiederumca. zwei Drittel der 4. Klasse n (8. Jg.) programmiert wurde und zwar im Mittelmehr als 20 Stunden im Schuljahr.Die Testaufgaben wurden internationalakkordiert. Allerdings wurde wegen Term innotder Test nicht in allen ander COMPED-Studie teilnehmenden  Staaten durchgeführt.Aber auch ein nur auf Salzburg beschränkternationaler Test gab interessanteAufschlüs-se.  Diese Studie über die Programmierleistungen war im gleichen Maße interessa nt, wie das Ergebnis schlecht. Bedenktman, dass die getesteten Schül erInnen angaben, bis zumTestzeitpunkt im Unterrichtbis zu 40 Stunden programmiert zu haben, so muss der indas Testergebnis direkt einge flossene Unterrichtsertra g als insuffizient bezeichnet  wer-den. Dies umso mehr, als die weni gen guten Testleistungen das Ergebnis zusät zlicherProgrammier-Üb ungen der SchülerInnen zu Hause waren. Die ernüchternde Quintessenzdieser nostalgischen Retrospektive ist wohl, dass damals Programmierung im Unter-schie d zu heute zwar einen beträchtlichen Teil des Inform atikunte rrichts ausm achte, die Erfolgserlebn isse und nenn enswert nachh altige Programmi erkenntnisse bei den Schüle-rInnen abernicht inkorrespondierendem  Ausmaß nac hgewiesen werdenkonnten.6  Ringtausch und Umfüllaufgabe Nun könnte man bei großzügig er Auslegung  des Lehrplanes der 5.Klasse interpretieren,aufProgrammierung unddas Variablenkonzept überhaupt verzichten zukönnen und es dabei  bewenden zu lassen, SchülerInnen frei nachHentig nur zu zeigen, wie schwierigdas ist. Außerdem würd en später die wenigsten vom "Programmieren" leben müssen.Das wäre allerdingszu kurz gegriffen. Dieser Ringtausc h, auch Dreie cksta usch, findetsich fast in jedem Lehrbuch über die Einführung indie Programmierung . So auch in[HU04, S 48], wo als Beispiel Zähler und Nenner eines Bruches unter Zuhi lfenahmeeiner Hilfsvariablen getauscht werden. Viele SchülerInnen werden im Laufe ihrer schul-informatisch en Ausbildung mit den drei Zuweisung en  h ← a;a←  b; b ← h konfron-tiert. Ich habe bewusst Zuweisungspfeile gewählt, um die Dynamik der Zustandsände-rung auszudrücken . Die in den gängigen Programmiersprachen verwendete Darst ellungder Zuweis ung durch ein statisches " = "14 erschwertdas Verständnis in einer nicht zuuntersch ätzenden Weise. In einem allfällig en Pseudocode sollte das Gleic hheitszeich en auf jeden Fal lvermieden werden.  14 Sowohl BASIC, als auch die gesamte C-Fa milie wie C++, Javascript, Java, PHP, Python verwenden dieses Zuweisungssy mbol. Pascal bzw. Delphi bildet hier mit dem Oper ator "  := " eine Ausnah me. - 132 -Abbild ung 2: GW-Basi c  Abbildung 3: Python-Source Ist es den n überhaupt notwendig, sich über diese Zu weisungsfolge Gedanken zu m achen ,wo es doch bereits vor über 20 Jahren in BASICdie im Sprac humfang implementierte "SWAP- Prozedur" gab (Abbildung 2). Es gehört zu den Rätseln der "Entwicklungsum-gebungsentwickler", waru m dies in Visual Basic nicht mehr der Fall ist. Vielleic ht aber ware n Didaktiker am Werk, um Informatiklehrkräften mitdiesem  Beispiel das Mod ular-konzept förmlich aufzudrängen, in dem die häufig benötigte Routine des Wert etausches,als Modul (Funktion,Prozedur) implementiert, für weitere Algorithmen  als Biblio-theksm odul zur Verfügung steht? Eine raffinierte Zuweisungsvariante ist in der Sprache Python implementiert. Die Zuweisu ng a, b = b, a vertausc ht die Werte der Inhalte derVariablen a undb(Abbildung 3). Soeinfachgehtdas, wenn man es weiß.  Aber was lernt der Schülerdaraus? Soll ihm der beschwerlichere Weg, der auch inPython gegangen werden kann, den Ringtausch vorzuenthalten, erspart werden?Daswirftnatürlich die grundsätzliche Frage auf, wie weit im Informatikunterricht Black-box-Denk en erlaub t sein soll. Wo ist es legitim, auf einer höheren Abstraktionsstuf eanzusetzen und wo erforde rlich, "black boxes" zuöffnen und die zuGrunde liegendenAlgorithmen zuverstehen?Muss es überhaupt ein Ringtausch sein?Kann das Problem des Platztausches der Werte zweier (numerischer) Variablen ausschließlich mit einer Hilfsv ariab lengelöst werd en?Bei dieser Frage betretenwir die Domäne der Denksportaufgaben. Abbild ung 4: Tausc h der Inhalte zweier numerischer Variablen Die Zuwei sungsfolge b  ← b – a; a ←  a + b; b  ←  a – b  tut es, wie aus Abbildung4 ersich tlich, für numerisch e Variab len auch.  - 133 -Ein weiterer reizvoller Weg, sich die Algorithmik des "Platz tausches" jenseits des Vari-ablenkonzepts zu erschließen, ist der in den neue n bayerischen Informatik-Leh rbüchernfür den 6./7. Jg. empfohlene Karel , der Roboter" [Ka05], der die (allerdings nicht trivia-le) Aufgabe lösen muss, zwei  verschieden hohe Ziegelhaufen zu vertausche n, der inAbbildung 4 gestellten  "Umfüllaufgabe" nicht unähnlich.Schließlich könnte diese Um-füllaufgabe auch mit dem legendä ren "Knowhow-Computer" [Ba97]von Back und Roh-de realisiert werden. Dieser Modellcomputer (Abbildung 5) ist ein Beispiel für eine sogena nnten Registermaschine mit ganzen  fünfAnweisungen (Sprungbefehl, Vergleich,In- und Dekrementierer, St op-Anweisung).Abbild ung 5: Knowhow-Co mput er  In diesem Kapit el ist nuranged eutet word en, welch  reichh altiges, didaktisch wertvolles Potential bereits in (einfachen) Aufgabenstellunge n, wie dem Tausch der Inhalte zweierVariablen steckt. Die Legitim ation, den "Platztausch" imInform atikunterric ht zu thema-tisieren , ist aber auch durch unzählige lebensweltl icheAnwendu ngen und die Tatsachegegeben, dass er das Fundamen t vieler Algorithmen darstellt, in denen es um Misch-sowi e Sortierverfahrengeht. 7  Resümee Die 5.Klasse an denAHS Österre ichs ist an der Schnittstelle zwischenUnterstufe und Oberstufe angesi edelt. Mit dieser Klasse ende t auch die offizielle Schulpflicht und be-ginnt die Frage, was von einem 15-Jä hrigenan inform atischer Bildung und Kompetenzerwartetwerdendarf. Neben der Schulungvon Standardsoftware, die in vielen Fäl len aufden ECDL (Europäischer Computerführerschein) ausgerichtet ist und auch einen (derzeitnoch nicht absehbaren) Einfluss auf die Inhalte des Informatikunterrichts an den AHShat, sollen imRahmen von weni ger als 70 Unterrichtsstunden auch noch Grundprinzi-pien überAutomaten, Algorithmen und Programme vermittelt werde n. Gibtder ECDLin Form eines detaillierten  Syllab us mit weit über hundert operation alisie rten Lehrzielenund den daraufausgerichteten Tests ganz klar vor, was an Schülerleistungenfür eineallfällig e Zertifik atserreich ung einzufordern ist, so stehenwir indenkerninformatischen Bereich en, an der Schn ittstelle zwisch enAnw endersch ulung undAnwen dungsprogram-mierung, auch nach mehr als 20Jahren vor offenen Problemen. - 134 -Es bestehtösterreichweit kein Konsens darüber, in welchem Ausmaß Algorithmen und Programmierung im Informatikunterricht der 5. Klasse eine Rolle spielen sollen15. Wennman sich auf dieser Altersst ufe auf Progra mmierung im weitesten Sinne einlässt, muss sich der/d ie Informatik-Leh rendeüberfolgende Thesen und Forde rungen im Klaren sei n: •Informatikunterricht, indem aktive Programmierleistungen und Problemlöse-strategien der SchülerInneneingefordert werden,ist sch wer. •Es muss überlegt werden, welche diesbez üglichen Lehrziele im Sinne von Re-produktion und Transferleistu ngen der/die (durchschnittliche) Schü ler/in  errei-chen soll.  •In der Unterrichtsmethodik gibt es keinen Königsweg.Die obengenannte Stu-die hat gezei gt, dass der Unterrichtsertr ag unabhä ngig von der gewählten Unte r-richtsmethode16 in Sinne der Erreichungkonkreter Testziele unbefriedigend ist. •Daher müssen in der Unterrichtsplanung unbedingt entsprech endeÜbungs-und Festigungsphasen in Formvon lösbaren Aufgabenstellungen berücksichtigtwerden. Das kostet Zeit. •Informatiklehrende  stehenje nach  persönlichem Interesse vor dem Problem deradäquaten Werkzeugwah l. Das Spektrum vieler mehr oder weni ger geeigneterEntwicklungsumgebun gen, die von Pascal , Delphi, Visual Basic, Javasc ript bis Python reichen, macht diese Wahl nicht  einfache r.  •Der Inform atikunterrich t darf sich nicht in einseitig er Werk zeug -Schu lung er-schöpfen.  Die DagstuhlerEmpfehlung [Da04]betont die Bedeutung von Standards für Ziele, Inhal-te und Methoden eines verpflichtende n Informatikunterrichts und fordert die Einbezie-hungder Informatik in Schulleistun gsstudienwie z. B. PISA oder einer andas 21. Jahrh undert angepassten  aktuellen COMPED-Stud ie. Die Defin ition dieser Stand ardsinder Alterstufe der 15-Jährig en auf internatio naler Ebene könnte sich nachh altig undnormativ auf die Unterrichtsgestaltung im Hinblick auf Algorithmen und Programmie-rung auswirken. Das Erarbeiten der Standards ist im Hinblick auf die enorme Bandbreitean Software-Werk zeugen kein einfaches Unterfan gen,die Destillatio n konzeptueller informatischer Fundam ente und deren Überprüfbarkeit ein noch schwierigeres.Allei n im Bereich der elem entaren Algorithmen wie demW ertetaus ch zweier Variable n steck t (noch immer) ein großes didaktisches Potential. Der im Titel dieses Beitrag s sug-15 Die Extreme, dass fast ein ganzes Schuljahr  lang in der 5. Klasse einer  österreichischen AHS nur in einerProgra mmiersprac he progra mmiert wird, sollten eigentlich der Vergangenh eit angehören. Auszus chließen ist es aber nicht. Ander s sieht es in den höher en technisch en Lehranstalten (HTBLA) in dieser Alter sstufe aus, wo z. T. die Lehrpläne konkr eten Programmierunter richt in einer  dezidierten Sprache vorgeben.16 Die Schüler Innen wurden in drei Gruppen mit jeweils  unterschiedlichen  Methoden (Animation, interaktiveKonstr uktion , Arbeitsblätter ) unterr ichtet.- 135 -gerierte kleine Schritt für LehrerInnenkönnte sich dann allerd ings leich t zu einem Rie-senschritt auswach sen.Literaturv erzeichnis [Ba97] http://www .wolfgan g-back .com/ knowhow_home.php (geprüft am 20.2.2005).   [CD05] CDA-Sonderheft 5/2005 , Micheuz, P. (Hrsg.), CDA-Verla g, Linz, 2005.  [Da04] Zweite Dagstuhler Empfehlung vom 24.9.2004 (geprüft am 20.2.20 04)  h ttp://ddi.un i-paderborn.de/did aktik/gi/dagstuhl_2004/dagsthuhl_empfehlung_2004l.pdf. [EX03] Deutsches Institut für Internationale Pädagogis che Forschung, Frankfurt a. M., 2003. [Ha94] Haider G., Schu le und Computer, Infor matio nstechn ische Grun dbildung in Österre ich, Österreichischer  Studienve rlag, Innsbruck, 1994 . [HN02]Hartmann, Niev ergelt: Informatik und Bildung  zwische n Wan del und Bestä ndigkeit, Informatik-Spektrum, Dez. 2002 . [He9 3] von Hent ig H., Die Schule neu denken, Beltz 1993, S. 69.  [Hu00] Hubwieser P, Didaktik  der Informatik, Spring er, Berlin  2000, S. 105. [Hu04] Hubwieser P. Fundamente der Inform atik, Olden burg, Münch en, 2004, S. 47. [Ka05] http://www .schule.b ayern.de/karol  (geprüft am 20.2.2005) . [ILP04] http://www.bmbwk.gv.at/med ienpool/11866/lp_neu_ahs_14.pdf - Informatik-LehrplanAHS- Obers tufe Österr eich (geprüft am 20.2.200 5). [NB03] Expertise zur Entwicklung nation aler Bildungss tandards,  2003. [OW96 ]Ottmann T. Widmay er P., Algorithme n und Daten strukt uren, 3. Auflag e. 1996, Spektrum  Akade mischer Verlag,Heidelb erg u.a.[Re94] Rechenb erg P., Was ist Informa tik, Hans er Verlag, S. 264. [Re03] Reite r, Schulinf ormatik in Österreich , Ueberreuter-Verlag , Wien, S. 150. - 123 -Ein kleiner  Schritt für LehrerInnen,   ein großer  Schritt für SchülerInnen.   Peter Micheuz  Institut für InformatikSysteme  Universität Klag enfurt  Universitätsstraße 65-67  A-9020 Klagenfurt  Österre ich  peterm@isys.uni-klu.ac.at Abstract:  Die Schulinfo rmatik an den allgemein  bildend en höheren Schulen Ös- terreichs ist geprägt von einer nahezu unübersch auba ren Vielfalt an Organisations- form en, die auf schulau tonome Profilbildung en zurückzuführen sind. Dennoch gibt  es an der Schn ittste lle zwischen Seku ndars tufe I und Seku ndars tufe II ein Pflicht- fach Informatik in der 9. Jahrgan gsstuf e im Ausmaß von zwei Wochenstunden, für  das es ab dem Schuljahr 2004/2 005 einen  neuen zentral verordneten Lehrplan gibt.  In diesem Beitrag wird beleuch tet, ob und wie ein Teil dieses sehr offenen und abstrakten Lehr plans, nämlich das Thema Programmierung, der konkreten Unter - richts arbeit zugä nglich gemacht werden kann . Einerseits werden die entsprech en- den Formulierungen dieses Lehrplanabschn ittes kommentiert,  andererseits führt  eine empirische Untersuch ung über elementa re Algorithmen auf dieser Alterss tufe  zu einigen  interessante n Schlussfolgerungen und Thesen.    Nicht s ist so gefährlich wie das „Allzu  modern  Sein“.   Man gerät  in Gefahr, plötzlic h aus der Mod e zu komme n.  Oscar Wilde  1  Einleitung „Nat ürlich kommtman ohne eine Programmiersprac he nicht aus. Aber mehrmals habe ich feststellen müssen, dass Schüler angeblich eine ganze Programmiersprac he gelernt hatten und die einfache Aufgabe, die W erte zweier Variablen zu vertausc hen, nicht lösen  konnten. Das ist ersch ütternd: Man lernt Rekursion, aber der Schüler kann die Werte zwei er Variablen nicht vertauschen!Zu diesem  Kapitel gehören nochandere Dinge,  z. B. die Unterscheidung zwischen der Gleichhei tsrelation und der Zuweisungsoperati- on." Ist diese r Tausc h der Werte zweier Variablenwirklich sowichtig, dass dieses Be- daue rn von Peter Rechen berg [Re94] gerechtfertig t wäre?  Diese Aussage wirft Fragen  auf, die in vieler Hinsichtden Kern der Informatik-Fach didaktik treffen: Was soll aus welch enGründ en inwelch er Altersst ufe wie vermittelt werden?Der Tren d inÖsterreich in Richtung Output-Steuerung legt außerdem nahe, die Frage nach Standards und Evalu- ationen unddamit der tatsächlichen Sc hülerleistungen mit einzubeziehen.  Das mangelhafteWissen und Können der SchülerInnen im Grundlagenberei ch betrifft- 124 -derzeit (in Österreich ) weniger die Informatik1 als vielm ehr bereits etablie rte Fächer wie  Math ematik undnaturwissensch aftlich eFächer, wie es eine einschlägigeStudie2 belegt. Diese tradierten Fäche r haben im Untersc hied zum Schulfach Informatik ihren weitest  gehe ndgesicherten Platz imFächerkanon und zeichnen sichdurch einen über Jahrhun- derte gewachse nen, system atischen und soliden Aufb au, verteilt über die einzelnenJahr- gangsstufen, aus. Zweifellos sind das notwendige, aber noch lange nicht hinreichende  Bedingungenfür  nachhaltige Kompetenzen der SchülerIn nen.Die Klag envon (übli- cherweise nicht larmoyanten) Math ematik-LehrerInnen, dass angehe nde AbsolventInne n nicht gut rechnen können undmit Bruch- und Prozentrechnungen auf Kriegsfuß stehen, hört man immer öfter. Wenn die Schül erInnen berei ts in einem Fach wie Mathematik,  das imFäche rkanonab der Grundschule mitmindest ens 3 Woc henstunden dotiertist, gravierende Defizite aufweis en, wie sieht es dann erstmit der Nach haltigkeit informati- scher Kom petenzen3aus? Umdiese r Frage nachzugehen,müssen wir uns zunächst die  organisatorischen Rahmenbed ingungen ansehen. 2  Informatikunterricht an den AHS Österreichs  Abbi ldung 1: Informat ik andenGymnasien Österreich s   Die einzige Invari ante informatis cher Unte rrichtserteilu ng in Österre ichs Gymnasien  seit nunmehr 20 Jahren ist das zweistündige Pflichtfach  Informatik [Re03] in der 9. Jahr- gangsst ufe(5. Klasse der AHS4). Im schlechtesten Fallbestehtdas minimale Lehrange- bot innerhalb der gymnasialen Laufbahn aus zweiWoc henstunden,das sind2 von insge- 1 In Österreich ist die (minister iell abgesegnete)  Entwicklung von Standar ds derzeit auf die Fächer  Mathema- tik, Englisch und Deutsch beschr änkt. Sehr wohl aber definieren die weit verbreiteten und in Österr eichs  Schulen  gut angeno mmenen Zertif ikate wie der ECDL Standar ds, die unabhängig von der Altersstu fe erworben werden können. 2 Die Ergebnisse der PISA-Studie 2003 waren für Österreich ernüchter nd. 3 Auf die Kompetenzen der Informatik-Lehrer  wird in diesem  Beitrag nicht eingegangen.  Nebenbei sei ver- merkt, dass es seit 2000 in Öster reich ein vollwer tiges Informatik-L ehramtstudiu m an vier Univer sitäten gibt. 4 In Österreich besuchen ca. 20% eines  Jahrgangs die 5. Klasse eines Gymnasiums(AHS).- 125 -samt unge fähr250 Wochenstunden. Allerdings ist dieses worst-case Szenario nicht mehr oft anzutreffen, zumal die Schulautonomie in Österre ich seit 1995 eine Vielzah l von Schwerpunkten und Schulprofilbildungen gerade im Bereich der Schulinformatik be- wirkt hat. Es liegen derzeit allerd ings(noch) keine exakten Zahlen über diese Entwick- lung im zuständigen Ministerium vor.  So beda uerlich aus Sichtder Pr otagonisten der Schulinformatik der Zustand des  minima- len verpflichtenden Angebots nur in der 9. Jahrgangsstufe ist, so erfreulich ist die Tatsa- che, dass es auch SchülerInnen  gibt, die (in Ausnahmefällen) im Gymnasium das Fach  Informatik durchge hend vonder 1. bis zur 8. Klasse besuchen und aus diesem Fach auch maturieren (könne n). Zwei Beispiele aus dem Gym nasium, an dem ich unterrichte und das in einem Schultyp in einer Klasse seit Jahren einen Informatikschwerpunkt setzt,  mögen die enorm e Bandbreit e inform atischer  Kompetenz verde utlichen. Eine Schüleri n  der 6.Klasse (10. Jg.) wollte ein halbes Jahr nach dem Pflichtfach Informatik  in der 5.  Klasse in einem andere n Fach eine Präse ntation vorführen, die sie auf einer CD von zu Haus e mitbrachte. Sie konnte  diese Präsen tation nicht öffnen,  weil sie das CD-La ufwerk  über das Betri ebssystem  nicht ansprechen konnte. Dies ist ein extremes Negativbeispiel  eines wenignach haltigenUnterrich ts. Das andere Extrem auf der fast unendlichen In- formatik-Kompetenzskala repräsentieren SchülerInnen5, die bei der Informatik-M atura6 mit außerordentlichen Leistu ngen brillieren  undanschließend das Informatik -Studium mit Brav our absolvieren . AnÖsterre ichs Gymnasien  findet Schu linfo rmatik in verschiedenstenAusprägun gsfor- men statt (Abb ildung 1). Die Ausnahme istdie Regel. Es ist nicht Ziel dieses Beitrages  darüber zureflek tieren ,obdiese Disparitäten  in der Schulinformatik an Österre ichs  Gymnasien als Ergebnis schulautonomer Profilbildungen gutoder schlecht sind. Ebenso gebe  ich andieser Stelle auch keinWert urteil über diesen "Fleckerlteppich" (euphemis- tisch  ausgedrück t: "bunte blühende Wiese") ab, solange keine aktuellen quantitativ en  und qualitati venStudien vorliegen.7 3  Vom abstrakten Lehrplan  zum konkreten Unterricht  Im Zuge einer inhaltlichen Reform des Gymnasiums sind ab dem Schu ljahr 2004/2005 neue  Lehrpläne für die Oberstufe der AHS, also für die 9.-12. Jahrgangsstufe, inKraft gesetzt worden. Dam it ist eine neuegesetzliche Grundlage, warum undwie welche In- halte im FachInform atik unterrich tet werd en sollen, Teil österreich ischer Schulrealitä t, zumindest auf dem Papi er.   Indiesem  Beitrag liegtder Schwerpunkt in der Interpretation des Lehrp lanabschnittes  über Algorithmen und Programmierung inder 9. Jahrgangsstufe8. Für die Lehr planauto- 5 In Österreich ist der Anteil der SchülerInnen an den AHS,  die im Fach Inform atik maturieren, klein. 6 In Deutschland ist es das Abitur . 7 Ein Über blick über die Inform atik an den AHS kann im CDA-Sonder heft [CD05]  nachgelesen werden. 8 Bezüglich des Lehrplanes des Wahl pflichtfaches Informatik wird auf http://www. gemeinsam lernen.at  verwie - sen. - 126 -ren gab es von ministerieller Seite aus die Vorgabe, diesen - nicht zuletzt wegen der Rücksic htnahme auf das unterschied liche Vorwissen der Schü lerInnenaus der Sekun- darst ufe I (gymnasiale Unterstu fe) - sooffen wie möglich zu halten. Dieses gelangauch,  allerdings aufKostenvon jedwedenkonkreten stofflichen Vorgaben. Die Freiräume für enga gierte InformatiklehrerInnen sind dementsprechend groß. Für weniger einfallsreiche  LehrerInnen sind die Vorg aben dieses Lehrplanes zu abstrakt. Studienhinsichtlich der  unterschiedlichen Interpretationen und Exekutionen dieser geset zlichen Vorgabe können erst nachdiesem Schul jahrdurchgeführtwerden. Sowirddas Thema Programmierung  in einem Absatz kurz abgehandelt:   "Die Schülerinnen und Schüler sollenEinblicke in wesentliche Begriffe und Methode n  der Informatik, ihre typischen Denk-undArbeitsweisen , ihre historische Entwicklung  sowie ihre technischen und theoretischen Grundlagen gewinnen und Grun dprinzipi en von Aut omaten, Algorithme n und Programmen kennen lernen."   Ein wenig konk reter, aberfür unbedarfte Informatik-Lehrkräfte nicht wirklichhilfreich,  wird es in einem Kom mentar zu diesem  Lehrplanauszug von Caba [CD05]: "Eine Be- handlung dieser Them en im Rahmen von schül errelevanten Problemstellunge n stellt aber s icher eine ganz besondere didaktische Hera usforderung dar, zumal im Lehrplander 5. Klasse die Programmierung bzw. Programmiersprac henkonzepteals Lehrstoff nicht explizit vorgesehensind. Es sei … auf die in [Hu00 ] vorgestellte n Unterrichtsbeispiele  … hingewiesen. Dort werden Aspe kte von Konzeptwissen (z. B.Objektorientierung) bzw. von Methoden(wie Mod ellierun gstechn iken)und Begriffen (wie Algorithmus oder  Automat) im Rahmen der Verwendu ngvon Anwendersoftware aufgegriffen."   Eine wei tere Konkretisierung in Form  von o perationalisierten9 Lernzielen  tut Not. Unter- richtsarbeit bedeutet, mühsam einen Fuß vor den anderen zu setzen. Imfachdidaktischen Elfenb einturmist es zwar angenehm, doch profitieren  können die Kolleginnen und Kol- legen nur davon,dass sichmanche durch den ebenso altersgem äßen wie fordernden Unterricht quälen. Insofern untersch eidet sich der Informatikunterrich t nicht vom Unter- richt in den tradierten Fäch ern. 4  Programmierung als  wichtiger Teil des Informatikunterrich ts  Sehen wir uns eine mögliche Umsetzungund Evaluation zum Thema Prog rammierung in der 9. Jahrgangsstufe an. Im Novem ber 2004 wurde imRahmen einer Di plomarbei t an der Universität Klagenfurt eine diesbezü gliche St udie durchgeführt. Der Anlass,  dieses Them a zu beforschen , ergab sich aus den Lehrplanvorgaben, die  Program mierung (im weitesten Sinn) auf dieser konkreten Alterstufe als Notwendigkeit vorsehen. Eine immanente Aufgabe jeder Fachdi daktikbesteht darin, mit geeigneten  fachs pezifisc hen Lernzielen den Nachweis  zu erbringen, dass kein anderes Fach diesen spezi fischen Beitrag zur Allge meinbildung zu erbringen vermag [Re03]. In diesem  Zu- 9 Operationalisie rteLernziele  beschreiben das erwünschte beobachtbar e Verhalten des Schülers möglichst  eindeutig [vgl. den Syllabus des ECDL auf http://www. ecdl.at]. - 127 -samme nhang könnten leichte Zweifel auftau chen, das Thema Programmierung und Al- gorithmen den Mathematikern zuüberlassen. Im neuen österreichischen Mathematik- Lehr plan ist Programmierung nicht explizit vorgesehe n.Wir könnendie Kirche also im Dorf lassen. Bei Ottmann [OW96] finden wir: „Sie [Algorithmen] sind das zentrale  Thema der Informatik. Die Entwicklungund Untersuchung vonAlgorithmen  zur Lösung  vielfältig er Probleme gehört zu denwichtigsten Aufgabender Inform atik.“ Und sogar  bei Hentig[He9 3] ist nachzulesen: "Schwer schließlich ist das Programmi eren - aber das  müssen nicht sehr viele Leute indieser Gese llschaft tun, es müssen sich nur alle einmal  an einem Programm versuc ht haben, um zu verstehen, wasda vor sichgeht." War diese  Aussage gar Grundlage der sanften Formulierung im Lehr plan "DieSchüler sollen ... Grundprinzipien von Automaten, Algorithmen und Programme n kenne n lernen" . Dies impliziert folgende Fragenund einen großenInterpretationsraum.  •Wie soll die Primärerfahr ung der SchülerInnen mit Progr ammierung gestaltet werden? WelcheZugänge und Unterrichtsmethoden sind adäquat? •Gibt es einen Katalo g allgemein  bildender und altersstufen-adä quater Aufga- benstellungen für die 5. Klasse (9. Jg.)? •Welche(Programm)-Entwicklungsumgebung ist besond ers zu empfehlen? •Wie lange und in welchem Umfang soll das Thema Prog rammierung in einem geschätzten Rahmen von ca. 60-70 Unterrichtstunden behandelt werden? •Was darf vonden SchülerInnen amBeginndieser Altersstufe vorausgeset zt werden? •Welche Schülerleistungen sind im Programmierunt errichterwa rtbar? Die eingangs erwä hnte fachdidaktische Diplomarbei t der Lehram tskandidatin Marina Glatz  aus Informatik  unter dem Titel: "Visualisieru ngvon elementaren Algorithmen im Informatikunterricht", die an zwei  Schulen in vier 5. Klassen durchgeführt wurde, be- schäftigt sich mit der Forschu ngsfrage, inwieweit die Visu alisierun gvon grundlegenden  Program mieraufga ben den Lernerfolg positiv beeinflusst. Erge bnisse aus dieser Studie  werd en indiesem Beitrag  nur insoweit dargestellt, als sie in direktem Zusamm enhang mit Schülerleistu ngen ingrund legender Programmieru ng stehen.  Der Ausdruck"grundlegende" Algorithmen istmehr denn je gerechtfertigt, da beidieser Studie keine Vorerfahrungender SchülerInnen im Programmieren vorausgesetzt wurden.  Es hat sichbei den Voruntersuchungen gezeigt, dass die TestschülerInnen in nur ganz  wenigen Ausnahmefällen diesbez ügliche Vorkenntnisse aus der gymnasialen Unterstufe (Sekundarstufe I)hatten.Dies ist nicht sonder lichüberraschend, da bis aufwenigeAus- nahm en der Programmierunterrichtin der Sekundarstufe I, das ist die Altersstufe der- 128 -10 bis 14-jährigen SchülerInnen, anden AHS aus verschiedene n Gründen10 fast nicht  (mehr) existent ist. Die Frage, obdas einwünschenswerter Zustand ist, wird an dieser  Stelle, obwohl von Interesse , nicht erörtert. Um welchen programmiertechni schen Kern geht es in dieser Studie? •Sichere Handhabung von Wertzuweisungen inSequenzen •Beherrschung von Vergleichsoperatorenin einfachenAbfragen •Elementare Ereignissteuerung   Nich t viel, würd e manmeinen. Ein informatischer "Sub standard", bestenfalls vergleich- bar mit dem großen Einmaleins in der Mathematik. Die Ergebnisse allerdings, soviel kannbereits als wesen tlichstes Ergebnis vorweg genommen werden, waren ernüchternd.  Die bei den Tests gestellten Aufgab en wurden, nach einer - im Nach hinein betrachtet -  viel zu kurzenInstruktionsphase (ei ne Doppelstunde), wenig zufrieden stellend gelöst. •Was bedeutet X = Y? •Ist Y=X das gleiche wie X=Y? •Ergä nze den Algorithmus, we lcher die Inhalteder Zel lenB2 und D2 vertauscht: x = cells(2 ,2)    y = cells(2 ,4)  ...........   ..........   ...........  cells(2 ,2) = x   cells(2 ,4) = y •Ein verwirrter Tierhändler bietet seine Tierchen online an. Er hat die Fotos lei- der falsch zugeordnet. Die Datei vogel .jpg repräsentiert einen Fisch, die Datei  fisch.jpgeinen Vogel. Wie bringst du das in Ordnung? •Ein einfac her Automat (Wechselsc halter)besteht aus einem einzigen Button  mit der Beschriftung AUS. Nach  Betätig endieses Buttonssoll die Beschriftu ng auf EIN gesetzt werden usw. Wie realisierst dudiesen Automaten? Diese repräse ntative Auswahl der Aufgabenstellungen soll einen Eindruck über das angepeilte Niveau vermitteln, um die anschließendenAusfüh rungenund Thesen ein- schät zen zu können. Ist die schei nbar so triviale Wertzuweisung und der Tausch der Werte von Variablen überhauptnoch zeitgemäß und die klassische Trennung von Daten undAlgorithmen in Zeiten von Objektorientierung für die Schulinformatik überhauptnoch ein Thema? Hartmann [HN02]bemerkt zu der überzogenen Erwartungshaltung im Hinblick auf 10 Ein Grund ist der in den 90-er Jahren erfolgte Paradigm enwechsel vomalgorithmenorientier ten zuman  Anwendungen orientierten Unterr icht und einer  beobach tbaren "ECDLisierung"  nicht nur imBereich der Sekundarstufe I.- 129 -realistische Schül erleistungen: "Es wird heute den Schulen nahegel egt, von Anfang an die Objektorientierung ins Zentrum der Ausbildung zu stellen. Dabei wird übersehen,  dass Objektorientierungals Entwurfsmethode für große Software systeme kaum für den Einstieg  in die Inform atik geeignet ist."   Es geht hier dezidiert um Vorbehalte bei der allzu rasche n Einführung inobjektorientier- te Software-Entwicklung und nicht um die legitime Forderungnach moderat objektori- entierten Sicht weisen bereits im Anfangsunterricht.  Ich möchte an diese rStelle in Zwei- fel ziehen, ob die objektorientierte Modellierung im Anfangsunterricht in Form  von UML-Diagrammen soweit gehen darf, Anweisungen wie z. B. i++; ohne eine vorange- gange ne Vermittlung von Grundlag en über Daten und Wertzuweis unge n stehe n zu las- sen11. Wurde im Mathematikunterricht jemals Anal ysis unterrichtet,ohne vorher alge- braische Umform unge n ausführlich behandelt und geübt zu haben?Übung macht den Meister, heißt ein Sprichwort. Der österreichische Komponist Anton Bruckner drückt das so aus: "Will man hohe Türme bauen, so muss man lange beim Fundament verwei- len." Dam it soll ausgedrückt werd en, dass ohne ausgiebige "Trai ningsphasen" mit einer  einhergehenden Festigung grundlegender Programmierken ntnisse das ehrgeizige Vorha- ben,SchülerInnenselbst an bescheidenen Softwaree ntwicklungsprozessen konstruktiv zubeteilig en, zum Scheiternverurteilt ist.   Auchder noch so trivial anmutende Tausch des Wert es zweie r Varia blen, in der infor- matischen Literatur auch als Ring- oder Dreieckstauschbezeic hnet, bedeutet für die Schü lerIn neneine nicht zuuntersch ätzende  kognitive Leistu ng. Für die gesetzte, über  denDingen des informatisch en Schulalltags stehende routin ierte Informatik-Lehrkraft,  die dies berei ts verinnerlicht hat, weil sie ja bereits Jahre unterrichtet, mag dieses Fun- dament des Wert etausch es als atomares Modul von Sortieralgorithmen ein kleiner Schritt im Unterricht sein. Für die SchülerInnen istes inder Regel ein sehr großer.  5  Ein Blick z urück in das Jahr 1992   Um die Programmierung im gegen wärtigen Informatikunterrichtbesser verorten zu können, ist es lehrreich, einen kurzen Blick in die Vergangenheit zu wagen.Wer erinnert sich noch andie COMPED12–Studie 1992, die von der IEA13 durchgeführt wurde? Es  war die letzte groß angelegte Studie imRahmen der internationalen vergleichenden Bildungsforschung zum Informa tikunterricht [Ha94].   Diese Studie liefert wertvo lle nationale und internationale Informationen zu den Rah- menbedi ngungen und die Praxis des Com putereinsatzes an Schulen, Einstellunge n von  SchülerInnen und LehrerInnen sowie die Leistungen der SchülerInnen in "Informations- technischer Grundbildung", in "Textverarbeitung" und im"Programmieren". Aus dieser  11 Der Autor  erlebte dies bei einem Vortr ag eines Informatiklehrers anlässlich  derfachdidakt ischen Tagung in  Königstein im März 2004. 12 COMPED: Computers in Education Study 13 IEA : International Associatio n for the Evaluation of Educational Achievem ent, seit 1960.  Als letztes   OECD-L and ist Österreich 1989 der IEA beigetr eten.- 130 -Studie möchte ich nur den letzten Teil heraus greifen, der für diesen Artikel Relevanz  hat, nämlich die Schülerleistungen im "Prog rammieren" und hier auch nur das Segment  der 14-jährigen SchülerInnen. Man lese und staune: Ein internationaler Vergleichstest, der Programmierkenntnisse für SchülerInnen bereits in dieser Altersstufe abfragt!Ich rufe in Erinnerung, dass es sich um das Jahr 1992 handelt. Aus den 20gestellten Aufga- ben seien hier sechs ausgewäh lt:  •Welcher der folgenden Ausdrücke wäre mathematisch korrekt, aber in einem Com puterprogramm ist ein Fehler ? a)  x = y + z   b)   x + 2 = y c)   x = x +z – 2    d)  x = x + 1  •Der folgende Programmteil wurde entworfen, um die Summe einer Anzahl von Werten  zu ermitteln . WelcheReihenfolge der Anweisung en ist richtig? 1. s = 0 a ) 3,1,2,4  2. s = s + x b) 1,3,4,2  3. for x = 1 to n c) 1,3,2,4  4. next x d ) 1,2,3,4  •Den Variablen p, q, r werden beliebige Werte zugewiese n. Dann wird folgender  Algorithmus vom Computer durchgeführt: Wenn p größer ist als q, dann Welche Zahl wird ausgegebe n?  Wenn p größer ist als r, dann setze t gleich p a) die größt e Zahl von p,q,r   Sonst  setze t gleich r b) die kleinst e Zahl von p,q,r  Sonst c) die größe re Zahl von p,q  Wenn r kleiner ist als q, dann setze t gleich q d) die kleinere  Zahl von q,r  Sonst setze t gleich r  Drucke t •Was ist der effizienteste Weg, die Summe von vorgegebenen Zahlen in einem Feld a(1), a(2), a(3),  .... a(n)zu berec hnen,wennn sehrgroß ist? a) mit einem Ausdruck s = a(1)+a (2)+a(3)+ ... +a(n)  b ) mit einer Auswahl-Anweisung  c) mit einer Schleif en-Anweisung     d) mit einer Input-Anweisung  •Wähl e den richtigen Output für die untenaufgelisteteProzedur.  a = 2     b = 3 a) 2,3,5  b = a + bb ) 2,6,8  c = a + bc ) 2,3,8  write a,b,c d) 2,6,5 - 131 -•Die Praxisaufgabe: Schreibe ein Com puterprogramm (BAS IC, PASCAL, LOG O, usw.), das dich zuerst um die Eingabe von Länge und Breite (in Zenti- metern) fragt unddaraus die Fläche u nd den Umfang berec hnet. Der Informatikunterricht inÖsterreichs Gymnasien fand inden frühen 90-er Jahrenfür  13 bis 14-jährige SchülerInnen bis auf weni ge Ausnahmen in unverbindlichen Übungen mit einem  Anteil von ca. 60% statt, wobei  in wiederumca. zwei Drittel der 4. Klasse n  (8. Jg.) programmiert wurde und zwar im Mittelmehr als 20 Stunden im Schuljahr. Die Testaufgaben wurden internationalakkordiert. Allerdings wurde wegen Term innot der Test nicht in allen ander COMPED-Studie teilnehmenden  Staaten durchgeführt. Aber auch ein nur auf Salzburg beschränkternationaler Test gab interessanteAufschlüs- se.  Diese Studie über die Programmierleistungen war im gleichen Maße interessa nt, wie  das Ergebnis schlecht. Bedenktman, dass die getesteten Schül erInnen angaben, bis zum Testzeitpunkt im Unterrichtbis zu 40 Stunden programmiert zu haben, so muss der in das Testergebnis direkt einge flossene Unterrichtsertra g als insuffizient bezeichnet  wer- den. Dies umso mehr, als die weni gen guten Testleistungen das Ergebnis zusät zlicher Programmier-Üb ungen der SchülerInnen zu Hause waren. Die ernüchternde Quintessenz dieser nostalgischen Retrospektive ist wohl, dass damals Programmierung im Unter- schie d zu heute zwar einen beträchtlichen Teil des Inform atikunte rrichts ausm achte, die  Erfolgserlebn isse und nenn enswert nachh altige Programmi erkenntnisse bei den Schüle- rInnen abernicht inkorrespondierendem  Ausmaß nac hgewiesen werdenkonnten. 6  Ringtausch und Umfüllaufgabe  Nun könnte man bei großzügig er Auslegung  des Lehrplanes der 5.Klasse interpretieren, aufProgrammierung unddas Variablenkonzept überhaupt verzichten zukönnen und es  dabei  bewenden zu lassen, SchülerInnen frei nachHentig nur zu zeigen, wie schwierig das ist. Außerdem würd en später die wenigsten vom "Programmieren" leben müssen. Das wäre allerdingszu kurz gegriffen. Dieser Ringtausc h, auch Dreie cksta usch, findet sich fast in jedem Lehrbuch über die Einführung indie Programmierung . So auch in [HU04, S 48], wo als Beispiel Zähler und Nenner eines Bruches unter Zuhi lfenahme einer Hilfsvariablen getauscht werden. Viele SchülerInnen werden im Laufe ihrer schul- informatisch en Ausbildung mit den drei Zuweisung en  h ← a;a←  b; b ← h konfron- tiert. Ich habe bewusst Zuweisungspfeile gewählt, um die Dynamik der Zustandsände- rung auszudrücken . Die in den gängigen Programmiersprachen verwendete Darst ellung der Zuweis ung durch ein statisches " = "14 erschwertdas Verständnis in einer nicht zu untersch ätzenden Weise. In einem allfällig en Pseudocode sollte das Gleic hheitszeich en  auf jeden Fal lvermieden werden.   14 Sowohl BASIC, als auch die gesamte C-Fa milie wie C++, Javascript, Java, PHP, Python verwenden dieses  Zuweisungssy mbol. Pascal bzw. Delphi bildet hier mit dem Oper ator "  := " eine Ausnah me. - 132 - Abbild ung 2: GW-Basi c  Abbildung 3: Python-Source  Ist es den n überhaupt notwendig, sich über diese Zu weisungsfolge Gedanken zu m achen , wo es doch bereits vor über 20 Jahren in BASICdie im Sprac humfang implementierte  "SWAP- Prozedur" gab (Abbildung 2). Es gehört zu den Rätseln der "Entwicklungsum- gebungsentwickler", waru m dies in Visual Basic nicht mehr der Fall ist. Vielleic ht aber  ware n Didaktiker am Werk, um Informatiklehrkräften mitdiesem  Beispiel das Mod ular- konzept förmlich aufzudrängen, in dem die häufig benötigte Routine des Wert etausches, als Modul (Funktion,Prozedur) implementiert, für weitere Algorithmen  als Biblio- theksm odul zur Verfügung steht? Eine raffinierte Zuweisungsvariante ist in der Sprache  Python implementiert. Die Zuweisu ng a, b = b, a vertausc ht die Werte der Inhalte der Variablen a undb(Abbildung 3). Soeinfachgehtdas, wenn man es weiß.   Aber was lernt der Schülerdaraus? Soll ihm der beschwerlichere Weg, der auch in Python gegangen werden kann, den Ringtausch vorzuenthalten, erspart werden?Das wirftnatürlich die grundsätzliche Frage auf, wie weit im Informatikunterricht Black- box-Denk en erlaub t sein soll. Wo ist es legitim, auf einer höheren Abstraktionsstuf e anzusetzen und wo erforde rlich, "black boxes" zuöffnen und die zuGrunde liegenden Algorithmen zuverstehen? Muss es überhaupt ein Ringtausch sein?Kann das Problem des Platztausches der Werte  zweier (numerischer) Variablen ausschließlich mit einer Hilfsv ariab lengelöst werd en? Bei dieser Frage betretenwir die Domäne der Denksportaufgaben.  Abbild ung 4: Tausc h der Inhalte zweier numerischer Variablen  Die Zuwei sungsfolge b  ← b – a; a ←  a + b; b  ←  a – b  tut es, wie aus Abbildung4  ersich tlich, für numerisch e Variab len auch.  - 133 -Ein weiterer reizvoller Weg, sich die Algorithmik des "Platz tausches" jenseits des Vari- ablenkonzepts zu erschließen, ist der in den neue n bayerischen Informatik-Leh rbüchern für den 6./7. Jg. empfohlene Karel , der Roboter" [Ka05], der die (allerdings nicht trivia- le) Aufgabe lösen muss, zwei  verschieden hohe Ziegelhaufen zu vertausche n, der in Abbildung 4 gestellten  "Umfüllaufgabe" nicht unähnlich.Schließlich könnte diese Um- füllaufgabe auch mit dem legendä ren "Knowhow-Computer" [Ba97]von Back und Roh- de realisiert werden. Dieser Modellcomputer (Abbildung 5) ist ein Beispiel für eine so gena nnten Registermaschine mit ganzen  fünfAnweisungen (Sprungbefehl, Vergleich, In- und Dekrementierer, St op-Anweisung). Abbild ung 5: Knowhow-Co mput er   In diesem Kapit el ist nuranged eutet word en, welch  reichh altiges, didaktisch wertvolles  Potential bereits in (einfachen) Aufgabenstellunge n, wie dem Tausch der Inhalte zweier Variablen steckt. Die Legitim ation, den "Platztausch" imInform atikunterric ht zu thema- tisieren , ist aber auch durch unzählige lebensweltl icheAnwendu ngen und die Tatsache gegeben, dass er das Fundamen t vieler Algorithmen darstellt, in denen es um Misch- sowi e Sortierverfahrengeht.  7  Resümee  Die 5.Klasse an denAHS Österre ichs ist an der Schnittstelle zwischenUnterstufe und  Oberstufe angesi edelt. Mit dieser Klasse ende t auch die offizielle Schulpflicht und be- ginnt die Frage, was von einem 15-Jä hrigenan inform atischer Bildung und Kompetenz erwartetwerdendarf. Neben der Schulungvon Standardsoftware, die in vielen Fäl len auf den ECDL (Europäischer Computerführerschein) ausgerichtet ist und auch einen (derzeit noch nicht absehbaren) Einfluss auf die Inhalte des Informatikunterrichts an den AHS hat, sollen imRahmen von weni ger als 70 Unterrichtsstunden auch noch Grundprinzi- pien überAutomaten, Algorithmen und Programme vermittelt werde n. Gibtder ECDL in Form eines detaillierten  Syllab us mit weit über hundert operation alisie rten Lehrzielen und den daraufausgerichteten Tests ganz klar vor, was an Schülerleistungenfür eine allfällig e Zertifik atserreich ung einzufordern ist, so stehenwir indenkerninformatischen  Bereich en, an der Schn ittstelle zwisch enAnw endersch ulung undAnwen dungsprogram- mierung, auch nach mehr als 20Jahren vor offenen Problemen. - 134 -Es bestehtösterreichweit kein Konsens darüber, in welchem Ausmaß Algorithmen und  Programmierung im Informatikunterricht der 5. Klasse eine Rolle spielen sollen15. Wenn man sich auf dieser Altersst ufe auf Progra mmierung im weitesten Sinne einlässt, muss  sich der/d ie Informatik-Leh rendeüberfolgende Thesen und Forde rungen im Klaren sei n:  •Informatikunterricht, indem aktive Programmierleistungen und Problemlöse- strategien der SchülerInneneingefordert werden,ist sch wer.  •Es muss überlegt werden, welche diesbez üglichen Lehrziele im Sinne von Re- produktion und Transferleistu ngen der/die (durchschnittliche) Schü ler/in  errei- chen soll.   •In der Unterrichtsmethodik gibt es keinen Königsweg.Die obengenannte Stu- die hat gezei gt, dass der Unterrichtsertr ag unabhä ngig von der gewählten Unte r- richtsmethode16 in Sinne der Erreichungkonkreter Testziele unbefriedigend ist.  •Daher müssen in der Unterrichtsplanung unbedingt entsprech endeÜbungs-und  Festigungsphasen in Formvon lösbaren Aufgabenstellungen berücksichtigt werden. Das kostet Zeit.  •Informatiklehrende  stehenje nach  persönlichem Interesse vor dem Problem der adäquaten Werkzeugwah l. Das Spektrum vieler mehr oder weni ger geeigneter Entwicklungsumgebun gen, die von Pascal , Delphi, Visual Basic, Javasc ript bis  Python reichen, macht diese Wahl nicht  einfache r.   •Der Inform atikunterrich t darf sich nicht in einseitig er Werk zeug -Schu lung er- schöpfen.   Die DagstuhlerEmpfehlung [Da04]betont die Bedeutung von Standards für Ziele, Inhal- te und Methoden eines verpflichtende n Informatikunterrichts und fordert die Einbezie- hungder Informatik in Schulleistun gsstudienwie z. B. PISA oder einer andas  21. Jahrh undert angepassten  aktuellen COMPED-Stud ie. Die Defin ition dieser Stand ards inder Alterstufe der 15-Jährig en auf internatio naler Ebene könnte sich nachh altig und normativ auf die Unterrichtsgestaltung im Hinblick auf Algorithmen und Programmie- rung auswirken. Das Erarbeiten der Standards ist im Hinblick auf die enorme Bandbreite an Software-Werk zeugen kein einfaches Unterfan gen,die Destillatio n konzeptueller  informatischer Fundam ente und deren Überprüfbarkeit ein noch schwierigeres. Allei n im Bereich der elem entaren Algorithmen wie demW ertetaus ch zweier Variable n  steck t (noch immer) ein großes didaktisches Potential. Der im Titel dieses Beitrag s sug- 15 Die Extreme, dass fast ein ganzes Schuljahr  lang in der 5. Klasse einer  österreichischen AHS nur in einer Progra mmiersprac he progra mmiert wird, sollten eigentlich der Vergangenh eit angehören. Auszus chließen ist  es aber nicht. Ander s sieht es in den höher en technisch en Lehranstalten (HTBLA) in dieser Alter sstufe aus, wo  z. T. die Lehrpläne konkr eten Programmierunter richt in einer  dezidierten Sprache vorgeben. 16 Die Schüler Innen wurden in drei Gruppen mit jeweils  unterschiedlichen  Methoden (Animation, interaktive Konstr uktion , Arbeitsblätter ) unterr ichtet.- 135 -gerierte kleine Schritt für LehrerInnenkönnte sich dann allerd ings leich t zu einem Rie- senschritt auswach sen. Literaturv erzeichnis  [Ba97] http://www .wolfgan g-back .com/ knowhow_home.php (geprüft am 20.2.2005).    [CD05] CDA-Sonderheft 5/2005 , Micheuz, P. (Hrsg.), CDA-Verla g, Linz, 2005.   [Da04] Zweite Dagstuhler Empfehlung vom 24.9.2004 (geprüft am 20.2.20 04)   h ttp://ddi.un i-paderborn.de/did aktik/gi/dagstuhl_2004/dagsthuhl_empfehlung_2004l.pdf.  [EX03] Deutsches Institut für Internationale Pädagogis che Forschung, Frankfurt a. M., 2003.  [Ha94] Haider G., Schu le und Computer, Infor matio nstechn ische Grun dbildung in Österre ich,  Österreichischer  Studienve rlag, Innsbruck, 1994 .  [HN02]Hartmann, Niev ergelt: Informatik und Bildung  zwische n Wan del und Bestä ndigkeit,  Informatik-Spektrum, Dez. 2002 .  [He9 3] von Hent ig H., Die Schule neu denken, Beltz 1993, S. 69.   [Hu00] Hubwieser P, Didaktik  der Informatik, Spring er, Berlin  2000, S. 105.  [Hu04] Hubwieser P. Fundamente der Inform atik, Olden burg, Münch en, 2004, S. 47.  [Ka05] http://www .schule.b ayern.de/karol  (geprüft am 20.2.2005) .  [ILP04] http://www.bmbwk.gv.at/med ienpool/11866/lp_neu_ahs_14.pdf - Informatik-Lehrplan AHS- Obers tufe Österr eich (geprüft am 20.2.200 5).  [NB03] Expertise zur Entwicklung nation aler Bildungss tandards,  2003.  [OW96 ]Ottmann T. Widmay er P., Algorithme n und Daten strukt uren, 3. Auflag e. 1996,  Spektrum  Akade mischer Verlag,Heidelb erg u.a. [Re94] Rechenb erg P., Was ist Informa tik, Hans er Verlag, S. 264.  [Re03] Reite r, Schulinf ormatik in Österreich , Ueberreuter-Verlag , Wien, S. 150. 123 -Ein kleiner  Schritt für LehrerInnen,   ein großer  Schritt für SchülerInnen.   Peter Micheuz  Institut für InformatikSysteme  Universität Klag enfurt  Universitätsstraße 65-67  A-9020 Klagenfurt  Österre ich  peterm@isys.uni-klu.ac.at Abstract:  Die Schulinfo rmatik an den allgemein  bildend en höheren Schulen Österreichs ist geprägt von einer nahezu unübersch auba ren Vielfalt an Organisationsform en, die auf schulau tonome Profilbildung en zurückzuführen sind. Dennoch gibt  es an der Schn ittste lle zwischen Seku ndars tufe I und Seku ndars tufe II ein Pflichtfach Informatik in der 9. Jahrgan gsstuf e im Ausmaß von zwei Wochenstunden, für  das es ab dem Schuljahr 2004/2 005 einen  neuen zentral verordneten Lehrplan gibt.  In diesem Beitrag wird beleuch tet, ob und wie ein Teil dieses sehr offenen und abstrakten Lehr plans, nämlich das Thema Programmierung, der konkreten Unter richts arbeit zugä nglich gemacht werden kann . Einerseits werden die entsprech enden Formulierungen dieses Lehrplanabschn ittes kommentiert,  andererseits führt  eine empirische Untersuch ung über elementa re Algorithmen auf dieser Alterss tufe  zu einigen  interessante n Schlussfolgerungen und Thesen.    Nicht s ist so gefährlich wie das „Allzu  modern  Sein“.   Man gerät  in Gefahr, plötzlic h aus der Mod e zu komme n.  Oscar Wilde  1  Einleitung „Nat ürlich kommtman ohne eine Programmiersprac he nicht aus. Aber mehrmals habe ich feststellen müssen, dass Schüler angeblich eine ganze Programmiersprac he gelernt hatten und die einfache Aufgabe, die W erte zweier Variablen zu vertausc hen, nicht lösen  konnten. Das ist ersch ütternd: Man lernt Rekursion, aber der Schüler kann die Werte zwei er Variablen nicht vertauschen!Zu diesem  Kapitel gehören nochandere Dinge,  z. B. die Unterscheidung zwischen der Gleichhei tsrelation und der Zuweisungsoperation." Ist diese r Tausc h der Werte zweier Variablenwirklich sowichtig, dass dieses Bedaue rn von Peter Rechen berg [Re94] gerechtfertig t wäre?  Diese Aussage wirft Fragen  auf, die in vieler Hinsichtden Kern der Informatik-Fach didaktik treffen: Was soll aus welch enGründ en inwelch er Altersst ufe wie vermittelt werden?Der Tren d inÖsterreich in Richtung Output-Steuerung legt außerdem nahe, die Frage nach Standards und Evaluationen unddamit der tatsächlichen Sc hülerleistungen mit einzubeziehen.  Das mangelhafteWissen und Können der SchülerInnen im Grundlagenberei ch betrifft124 -derzeit (in Österreich ) weniger die Informatik1 als vielm ehr bereits etablie rte Fächer wie  Math ematik undnaturwissensch aftlich eFächer, wie es eine einschlägigeStudie2 belegt. Diese tradierten Fäche r haben im Untersc hied zum Schulfach Informatik ihren weitest  gehe ndgesicherten Platz imFächerkanon und zeichnen sichdurch einen über Jahrhunderte gewachse nen, system atischen und soliden Aufb au, verteilt über die einzelnenJahrgangsstufen, aus. Zweifellos sind das notwendige, aber noch lange nicht hinreichende  Bedingungenfür  nachhaltige Kompetenzen der SchülerIn nen.Die Klag envon (üblicherweise nicht larmoyanten) Math ematik-LehrerInnen, dass angehe nde AbsolventInne n nicht gut rechnen können undmit Bruchund Prozentrechnungen auf Kriegsfuß stehen, hört man immer öfter. Wenn die Schül erInnen berei ts in einem Fach wie Mathematik,  das imFäche rkanonab der Grundschule mitmindest ens 3 Woc henstunden dotiertist, gravierende Defizite aufweis en, wie sieht es dann erstmit der Nach haltigkeit informatischer Kom petenzen3aus? Umdiese r Frage nachzugehen,müssen wir uns zunächst die  organisatorischen Rahmenbed ingungen ansehen. 2  Informatikunterricht an den AHS Österreichs  Abbi ldung 1: Informat ik andenGymnasien Österreich s   Die einzige Invari ante informatis cher Unte rrichtserteilu ng in Österre ichs Gymnasien  seit nunmehr 20 Jahren ist das zweistündige Pflichtfach  Informatik [Re03] in der 9. Jahrgangsst ufe(5. Klasse der AHS4). Im schlechtesten Fallbestehtdas minimale Lehrangebot innerhalb der gymnasialen Laufbahn aus zweiWoc henstunden,das sind2 von insge1 In Österreich ist die (minister iell abgesegnete)  Entwicklung von Standar ds derzeit auf die Fächer  Mathematik, Englisch und Deutsch beschr änkt. Sehr wohl aber definieren die weit verbreiteten und in Österr eichs  Schulen  gut angeno mmenen Zertif ikate wie der ECDL Standar ds, die unabhängig von der Altersstu fe erworben werden können. 2 Die Ergebnisse der PISA-Studie 2003 waren für Österreich ernüchter nd. 3 Auf die Kompetenzen der Informatik-Lehrer  wird in diesem  Beitrag nicht eingegangen.  Nebenbei sei vermerkt, dass es seit 2000 in Öster reich ein vollwer tiges Informatik-L ehramtstudiu m an vier Univer sitäten gibt. 4 In Österreich besuchen ca. 20% eines  Jahrgangs die 5. Klasse eines Gymnasiums(AHS).125 -samt unge fähr250 Wochenstunden. Allerdings ist dieses worst-case Szenario nicht mehr oft anzutreffen, zumal die Schulautonomie in Österre ich seit 1995 eine Vielzah l von Schwerpunkten und Schulprofilbildungen gerade im Bereich der Schulinformatik bewirkt hat. Es liegen derzeit allerd ings(noch) keine exakten Zahlen über diese Entwicklung im zuständigen Ministerium vor.  So beda uerlich aus Sichtder Pr otagonisten der Schulinformatik der Zustand des  minimalen verpflichtenden Angebots nur in der 9. Jahrgangsstufe ist, so erfreulich ist die Tatsache, dass es auch SchülerInnen  gibt, die (in Ausnahmefällen) im Gymnasium das Fach  Informatik durchge hend vonder 1. bis zur 8. Klasse besuchen und aus diesem Fach auch maturieren (könne n). Zwei Beispiele aus dem Gym nasium, an dem ich unterrichte und das in einem Schultyp in einer Klasse seit Jahren einen Informatikschwerpunkt setzt,  mögen die enorm e Bandbreit e inform atischer  Kompetenz verde utlichen. Eine Schüleri n  der 6.Klasse (10. Jg.) wollte ein halbes Jahr nach dem Pflichtfach Informatik  in der 5.  Klasse in einem andere n Fach eine Präse ntation vorführen, die sie auf einer CD von zu Haus e mitbrachte. Sie konnte  diese Präsen tation nicht öffnen,  weil sie das CD-La ufwerk  über das Betri ebssystem  nicht ansprechen konnte. Dies ist ein extremes Negativbeispiel  eines wenignach haltigenUnterrich ts. Das andere Extrem auf der fast unendlichen Informatik-Kompetenzskala repräsentieren SchülerInnen5, die bei der Informatik-M atura6 mit außerordentlichen Leistu ngen brillieren  undanschließend das Informatik -Studium mit Brav our absolvieren . AnÖsterre ichs Gymnasien  findet Schu linfo rmatik in verschiedenstenAusprägun gsformen statt (Abb ildung 1). Die Ausnahme istdie Regel. Es ist nicht Ziel dieses Beitrages  darüber zureflek tieren ,obdiese Disparitäten  in der Schulinformatik an Österre ichs  Gymnasien als Ergebnis schulautonomer Profilbildungen gutoder schlecht sind. Ebenso gebe  ich andieser Stelle auch keinWert urteil über diesen "Fleckerlteppich" (euphemistisch  ausgedrück t: "bunte blühende Wiese") ab, solange keine aktuellen quantitativ en  und qualitati venStudien vorliegen.7 3  Vom abstrakten Lehrplan  zum konkreten Unterricht  Im Zuge einer inhaltlichen Reform des Gymnasiums sind ab dem Schu ljahr 2004/2005 neue  Lehrpläne für die Oberstufe der AHS, also für die 9.-12. Jahrgangsstufe, inKraft gesetzt worden. Dam it ist eine neuegesetzliche Grundlage, warum undwie welche Inhalte im FachInform atik unterrich tet werd en sollen, Teil österreich ischer Schulrealitä t, zumindest auf dem Papi er.   Indiesem  Beitrag liegtder Schwerpunkt in der Interpretation des Lehrp lanabschnittes  über Algorithmen und Programmierung inder 9. Jahrgangsstufe8. Für die Lehr planauto5 In Österreich ist der Anteil der SchülerInnen an den AHS,  die im Fach Inform atik maturieren, klein. 6 In Deutschland ist es das Abitur . 7 Ein Über blick über die Inform atik an den AHS kann im CDA-Sonder heft [CD05]  nachgelesen werden. 8 Bezüglich des Lehrplanes des Wahl pflichtfaches Informatik wird auf http://www. gemeinsam lernen.at  verwie sen. 126 -ren gab es von ministerieller Seite aus die Vorgabe, diesen nicht zuletzt wegen der Rücksic htnahme auf das unterschied liche Vorwissen der Schü lerInnenaus der Sekundarst ufe I (gymnasiale Unterstu fe) sooffen wie möglich zu halten. Dieses gelangauch,  allerdings aufKostenvon jedwedenkonkreten stofflichen Vorgaben. Die Freiräume für enga gierte InformatiklehrerInnen sind dementsprechend groß. Für weniger einfallsreiche  LehrerInnen sind die Vorg aben dieses Lehrplanes zu abstrakt. Studienhinsichtlich der  unterschiedlichen Interpretationen und Exekutionen dieser geset zlichen Vorgabe können erst nachdiesem Schul jahrdurchgeführtwerden. Sowirddas Thema Programmierung  in einem Absatz kurz abgehandelt:   "Die Schülerinnen und Schüler sollenEinblicke in wesentliche Begriffe und Methode n  der Informatik, ihre typischen Denk-undArbeitsweisen , ihre historische Entwicklung  sowie ihre technischen und theoretischen Grundlagen gewinnen und Grun dprinzipi en von Aut omaten, Algorithme n und Programmen kennen lernen."   Ein wenig konk reter, aberfür unbedarfte Informatik-Lehrkräfte nicht wirklichhilfreich,  wird es in einem Kom mentar zu diesem  Lehrplanauszug von Caba [CD05]: "Eine Behandlung dieser Them en im Rahmen von schül errelevanten Problemstellunge n stellt aber s icher eine ganz besondere didaktische Hera usforderung dar, zumal im Lehrplander 5. Klasse die Programmierung bzw. Programmiersprac henkonzepteals Lehrstoff nicht explizit vorgesehensind. Es sei … auf die in [Hu00 ] vorgestellte n Unterrichtsbeispiele  … hingewiesen. Dort werden Aspe kte von Konzeptwissen (z. B.Objektorientierung) bzw. von Methoden(wie Mod ellierun gstechn iken)und Begriffen (wie Algorithmus oder  Automat) im Rahmen der Verwendu ngvon Anwendersoftware aufgegriffen."   Eine wei tere Konkretisierung in Form  von o perationalisierten9 Lernzielen  tut Not. Unterrichtsarbeit bedeutet, mühsam einen Fuß vor den anderen zu setzen. Imfachdidaktischen Elfenb einturmist es zwar angenehm, doch profitieren  können die Kolleginnen und Kollegen nur davon,dass sichmanche durch den ebenso altersgem äßen wie fordernden Unterricht quälen. Insofern untersch eidet sich der Informatikunterrich t nicht vom Unterricht in den tradierten Fäch ern. 4  Programmierung als  wichtiger Teil des Informatikunterrich ts  Sehen wir uns eine mögliche Umsetzungund Evaluation zum Thema Prog rammierung in der 9. Jahrgangsstufe an. Im Novem ber 2004 wurde imRahmen einer Di plomarbei t an der Universität Klagenfurt eine diesbezü gliche St udie durchgeführt. Der Anlass,  dieses Them a zu beforschen , ergab sich aus den Lehrplanvorgaben, die  Program mierung (im weitesten Sinn) auf dieser konkreten Alterstufe als Notwendigkeit vorsehen. Eine immanente Aufgabe jeder Fachdi daktikbesteht darin, mit geeigneten  fachs pezifisc hen Lernzielen den Nachweis  zu erbringen, dass kein anderes Fach diesen spezi fischen Beitrag zur Allge meinbildung zu erbringen vermag [Re03]. In diesem  Zu9 Operationalisie rteLernziele  beschreiben das erwünschte beobachtbar e Verhalten des Schülers möglichst  eindeutig [vgl. den Syllabus des ECDL auf http://www. ecdl.at]. 127 -samme nhang könnten leichte Zweifel auftau chen, das Thema Programmierung und Algorithmen den Mathematikern zuüberlassen. Im neuen österreichischen MathematikLehr plan ist Programmierung nicht explizit vorgesehe n.Wir könnendie Kirche also im Dorf lassen. Bei Ottmann [OW96] finden wir: „Sie [Algorithmen] sind das zentrale  Thema der Informatik. Die Entwicklungund Untersuchung vonAlgorithmen  zur Lösung  vielfältig er Probleme gehört zu denwichtigsten Aufgabender Inform atik.“ Und sogar  bei Hentig[He9 3] ist nachzulesen: "Schwer schließlich ist das Programmi eren aber das  müssen nicht sehr viele Leute indieser Gese llschaft tun, es müssen sich nur alle einmal  an einem Programm versuc ht haben, um zu verstehen, wasda vor sichgeht." War diese  Aussage gar Grundlage der sanften Formulierung im Lehr plan "DieSchüler sollen ... Grundprinzipien von Automaten, Algorithmen und Programme n kenne n lernen" . Dies impliziert folgende Fragenund einen großenInterpretationsraum.  •Wie soll die Primärerfahr ung der SchülerInnen mit Progr ammierung gestaltet werden? WelcheZugänge und Unterrichtsmethoden sind adäquat? •Gibt es einen Katalo g allgemein  bildender und altersstufen-adä quater Aufgabenstellungen für die 5. Klasse (9. Jg.)? •Welche(Programm)-Entwicklungsumgebung ist besond ers zu empfehlen? •Wie lange und in welchem Umfang soll das Thema Prog rammierung in einem geschätzten Rahmen von ca. 60-70 Unterrichtstunden behandelt werden? •Was darf vonden SchülerInnen amBeginndieser Altersstufe vorausgeset zt werden? •Welche Schülerleistungen sind im Programmierunt errichterwa rtbar? Die eingangs erwä hnte fachdidaktische Diplomarbei t der Lehram tskandidatin Marina Glatz  aus Informatik  unter dem Titel: "Visualisieru ngvon elementaren Algorithmen im Informatikunterricht", die an zwei  Schulen in vier 5. Klassen durchgeführt wurde, beschäftigt sich mit der Forschu ngsfrage, inwieweit die Visu alisierun gvon grundlegenden  Program mieraufga ben den Lernerfolg positiv beeinflusst. Erge bnisse aus dieser Studie  werd en indiesem Beitrag  nur insoweit dargestellt, als sie in direktem Zusamm enhang mit Schülerleistu ngen ingrund legender Programmieru ng stehen.  Der Ausdruck"grundlegende" Algorithmen istmehr denn je gerechtfertigt, da beidieser Studie keine Vorerfahrungender SchülerInnen im Programmieren vorausgesetzt wurden.  Es hat sichbei den Voruntersuchungen gezeigt, dass die TestschülerInnen in nur ganz  wenigen Ausnahmefällen diesbez ügliche Vorkenntnisse aus der gymnasialen Unterstufe (Sekundarstufe I)hatten.Dies ist nicht sonder lichüberraschend, da bis aufwenigeAusnahm en der Programmierunterrichtin der Sekundarstufe I, das ist die Altersstufe der128 -10 bis 14-jährigen SchülerInnen, anden AHS aus verschiedene n Gründen10 fast nicht  (mehr) existent ist. Die Frage, obdas einwünschenswerter Zustand ist, wird an dieser  Stelle, obwohl von Interesse , nicht erörtert. Um welchen programmiertechni schen Kern geht es in dieser Studie? •Sichere Handhabung von Wertzuweisungen inSequenzen •Beherrschung von Vergleichsoperatorenin einfachenAbfragen •Elementare Ereignissteuerung   Nich t viel, würd e manmeinen. Ein informatischer "Sub standard", bestenfalls vergleichbar mit dem großen Einmaleins in der Mathematik. Die Ergebnisse allerdings, soviel kannbereits als wesen tlichstes Ergebnis vorweg genommen werden, waren ernüchternd.  Die bei den Tests gestellten Aufgab en wurden, nach einer im Nach hinein betrachtet  viel zu kurzenInstruktionsphase (ei ne Doppelstunde), wenig zufrieden stellend gelöst. •Was bedeutet X = Y? •Ist Y=X das gleiche wie X=Y? •Ergä nze den Algorithmus, we lcher die Inhalteder Zel lenB2 und D2 vertauscht: x = cells(2 ,2)    y = cells(2 ,4)  ...........   ..........   ...........  cells(2 ,2) = x   cells(2 ,4) = y •Ein verwirrter Tierhändler bietet seine Tierchen online an. Er hat die Fotos leider falsch zugeordnet. Die Datei vogel .jpg repräsentiert einen Fisch, die Datei  fisch.jpgeinen Vogel. Wie bringst du das in Ordnung? •Ein einfac her Automat (Wechselsc halter)besteht aus einem einzigen Button  mit der Beschriftung AUS. Nach  Betätig endieses Buttonssoll die Beschriftu ng auf EIN gesetzt werden usw. Wie realisierst dudiesen Automaten? Diese repräse ntative Auswahl der Aufgabenstellungen soll einen Eindruck über das angepeilte Niveau vermitteln, um die anschließendenAusfüh rungenund Thesen einschät zen zu können. Ist die schei nbar so triviale Wertzuweisung und der Tausch der Werte von Variablen überhauptnoch zeitgemäß und die klassische Trennung von Daten undAlgorithmen in Zeiten von Objektorientierung für die Schulinformatik überhauptnoch ein Thema? Hartmann [HN02]bemerkt zu der überzogenen Erwartungshaltung im Hinblick auf 10 Ein Grund ist der in den 90-er Jahren erfolgte Paradigm enwechsel vomalgorithmenorientier ten zuman  Anwendungen orientierten Unterr icht und einer  beobach tbaren "ECDLisierung"  nicht nur imBereich der Sekundarstufe I.129 -realistische Schül erleistungen: "Es wird heute den Schulen nahegel egt, von Anfang an die Objektorientierung ins Zentrum der Ausbildung zu stellen. Dabei wird übersehen,  dass Objektorientierungals Entwurfsmethode für große Software systeme kaum für den Einstieg  in die Inform atik geeignet ist."   Es geht hier dezidiert um Vorbehalte bei der allzu rasche n Einführung inobjektorientierte Software-Entwicklung und nicht um die legitime Forderungnach moderat objektorientierten Sicht weisen bereits im Anfangsunterricht.  Ich möchte an diese rStelle in Zweifel ziehen, ob die objektorientierte Modellierung im Anfangsunterricht in Form  von UML-Diagrammen soweit gehen darf, Anweisungen wie z. B. i++; ohne eine vorangegange ne Vermittlung von Grundlag en über Daten und Wertzuweis unge n stehe n zu lassen11. Wurde im Mathematikunterricht jemals Anal ysis unterrichtet,ohne vorher algebraische Umform unge n ausführlich behandelt und geübt zu haben?Übung macht den Meister, heißt ein Sprichwort. Der österreichische Komponist Anton Bruckner drückt das so aus: "Will man hohe Türme bauen, so muss man lange beim Fundament verweilen." Dam it soll ausgedrückt werd en, dass ohne ausgiebige "Trai ningsphasen" mit einer  einhergehenden Festigung grundlegender Programmierken ntnisse das ehrgeizige Vorhaben,SchülerInnenselbst an bescheidenen Softwaree ntwicklungsprozessen konstruktiv zubeteilig en, zum Scheiternverurteilt ist.   Auchder noch so trivial anmutende Tausch des Wert es zweie r Varia blen, in der informatischen Literatur auch als Ringoder Dreieckstauschbezeic hnet, bedeutet für die Schü lerIn neneine nicht zuuntersch ätzende  kognitive Leistu ng. Für die gesetzte, über  denDingen des informatisch en Schulalltags stehende routin ierte Informatik-Lehrkraft,  die dies berei ts verinnerlicht hat, weil sie ja bereits Jahre unterrichtet, mag dieses Fundament des Wert etausch es als atomares Modul von Sortieralgorithmen ein kleiner Schritt im Unterricht sein. Für die SchülerInnen istes inder Regel ein sehr großer.  5  Ein Blick z urück in das Jahr 1992   Um die Programmierung im gegen wärtigen Informatikunterrichtbesser verorten zu können, ist es lehrreich, einen kurzen Blick in die Vergangenheit zu wagen.Wer erinnert sich noch andie COMPED12–Studie 1992, die von der IEA13 durchgeführt wurde? Es  war die letzte groß angelegte Studie imRahmen der internationalen vergleichenden Bildungsforschung zum Informa tikunterricht [Ha94].   Diese Studie liefert wertvo lle nationale und internationale Informationen zu den Rahmenbedi ngungen und die Praxis des Com putereinsatzes an Schulen, Einstellunge n von  SchülerInnen und LehrerInnen sowie die Leistungen der SchülerInnen in "Informationstechnischer Grundbildung", in "Textverarbeitung" und im"Programmieren". Aus dieser  11 Der Autor  erlebte dies bei einem Vortr ag eines Informatiklehrers anlässlich  derfachdidakt ischen Tagung in  Königstein im März 2004. 12 COMPED: Computers in Education Study 13 IEA : International Associatio n for the Evaluation of Educational Achievem ent, seit 1960.  Als letztes   OECD-L and ist Österreich 1989 der IEA beigetr eten.130 -Studie möchte ich nur den letzten Teil heraus greifen, der für diesen Artikel Relevanz  hat, nämlich die Schülerleistungen im "Prog rammieren" und hier auch nur das Segment  der 14-jährigen SchülerInnen. Man lese und staune: Ein internationaler Vergleichstest, der Programmierkenntnisse für SchülerInnen bereits in dieser Altersstufe abfragt!Ich rufe in Erinnerung, dass es sich um das Jahr 1992 handelt. Aus den 20gestellten Aufgaben seien hier sechs ausgewäh lt:  •Welcher der folgenden Ausdrücke wäre mathematisch korrekt, aber in einem Com puterprogramm ist ein Fehler ? a)  x = y + z   b)   x + 2 = y c)   x = x +z – 2    d)  x = x + 1  •Der folgende Programmteil wurde entworfen, um die Summe einer Anzahl von Werten  zu ermitteln . WelcheReihenfolge der Anweisung en ist richtig? 1. s = 0 a ) 3,1,2,4  2. s = s + x b) 1,3,4,2  3. for x = 1 to n c) 1,3,2,4  4. next x d ) 1,2,3,4  •Den Variablen p, q, r werden beliebige Werte zugewiese n. Dann wird folgender  Algorithmus vom Computer durchgeführt: Wenn p größer ist als q, dann Welche Zahl wird ausgegebe n?  Wenn p größer ist als r, dann setze t gleich p a) die größt e Zahl von p,q,r   Sonst  setze t gleich r b) die kleinst e Zahl von p,q,r  Sonst c) die größe re Zahl von p,q  Wenn r kleiner ist als q, dann setze t gleich q d) die kleinere  Zahl von q,r  Sonst setze t gleich r  Drucke t •Was ist der effizienteste Weg, die Summe von vorgegebenen Zahlen in einem Feld a(1), a(2), a(3),  .... a(n)zu berec hnen,wennn sehrgroß ist? a) mit einem Ausdruck s = a(1)+a (2)+a(3)+ ... +a(n)  b ) mit einer Auswahl-Anweisung  c) mit einer Schleif en-Anweisung     d) mit einer Input-Anweisung  •Wähl e den richtigen Output für die untenaufgelisteteProzedur.  a = 2     b = 3 a) 2,3,5  b = a + bb ) 2,6,8  c = a + bc ) 2,3,8  write a,b,c d) 2,6,5 131 -•Die Praxisaufgabe: Schreibe ein Com puterprogramm (BAS IC, PASCAL, LOG O, usw.), das dich zuerst um die Eingabe von Länge und Breite (in Zentimetern) fragt unddaraus die Fläche u nd den Umfang berec hnet. Der Informatikunterricht inÖsterreichs Gymnasien fand inden frühen 90-er Jahrenfür  13 bis 14-jährige SchülerInnen bis auf weni ge Ausnahmen in unverbindlichen Übungen mit einem  Anteil von ca. 60% statt, wobei  in wiederumca. zwei Drittel der 4. Klasse n  (8. Jg.) programmiert wurde und zwar im Mittelmehr als 20 Stunden im Schuljahr. Die Testaufgaben wurden internationalakkordiert. Allerdings wurde wegen Term innot der Test nicht in allen ander COMPED-Studie teilnehmenden  Staaten durchgeführt. Aber auch ein nur auf Salzburg beschränkternationaler Test gab interessanteAufschlüsse.  Diese Studie über die Programmierleistungen war im gleichen Maße interessa nt, wie  das Ergebnis schlecht. Bedenktman, dass die getesteten Schül erInnen angaben, bis zum Testzeitpunkt im Unterrichtbis zu 40 Stunden programmiert zu haben, so muss der in das Testergebnis direkt einge flossene Unterrichtsertra g als insuffizient bezeichnet  werden. Dies umso mehr, als die weni gen guten Testleistungen das Ergebnis zusät zlicher Programmier-Üb ungen der SchülerInnen zu Hause waren. Die ernüchternde Quintessenz dieser nostalgischen Retrospektive ist wohl, dass damals Programmierung im Unterschie d zu heute zwar einen beträchtlichen Teil des Inform atikunte rrichts ausm achte, die  Erfolgserlebn isse und nenn enswert nachh altige Programmi erkenntnisse bei den SchülerInnen abernicht inkorrespondierendem  Ausmaß nac hgewiesen werdenkonnten. 6  Ringtausch und Umfüllaufgabe  Nun könnte man bei großzügig er Auslegung  des Lehrplanes der 5.Klasse interpretieren, aufProgrammierung unddas Variablenkonzept überhaupt verzichten zukönnen und es  dabei  bewenden zu lassen, SchülerInnen frei nachHentig nur zu zeigen, wie schwierig das ist. Außerdem würd en später die wenigsten vom "Programmieren" leben müssen. Das wäre allerdingszu kurz gegriffen. Dieser Ringtausc h, auch Dreie cksta usch, findet sich fast in jedem Lehrbuch über die Einführung indie Programmierung . So auch in [HU04, S 48], wo als Beispiel Zähler und Nenner eines Bruches unter Zuhi lfenahme einer Hilfsvariablen getauscht werden. Viele SchülerInnen werden im Laufe ihrer schulinformatisch en Ausbildung mit den drei Zuweisung en  h ← a;a←  b; b ← h konfrontiert. Ich habe bewusst Zuweisungspfeile gewählt, um die Dynamik der Zustandsänderung auszudrücken . Die in den gängigen Programmiersprachen verwendete Darst ellung der Zuweis ung durch ein statisches " = "14 erschwertdas Verständnis in einer nicht zu untersch ätzenden Weise. In einem allfällig en Pseudocode sollte das Gleic hheitszeich en  auf jeden Fal lvermieden werden.   14 Sowohl BASIC, als auch die gesamte C-Fa milie wie C++, Javascript, Java, PHP, Python verwenden dieses  Zuweisungssy mbol. Pascal bzw. Delphi bildet hier mit dem Oper ator "  := " eine Ausnah me. 132 Abbild ung 2: GW-Basi c  Abbildung 3: Python-Source  Ist es den n überhaupt notwendig, sich über diese Zu weisungsfolge Gedanken zu m achen , wo es doch bereits vor über 20 Jahren in BASICdie im Sprac humfang implementierte  "SWAPProzedur" gab (Abbildung 2). Es gehört zu den Rätseln der "Entwicklungsumgebungsentwickler", waru m dies in Visual Basic nicht mehr der Fall ist. Vielleic ht aber  ware n Didaktiker am Werk, um Informatiklehrkräften mitdiesem  Beispiel das Mod ularkonzept förmlich aufzudrängen, in dem die häufig benötigte Routine des Wert etausches, als Modul (Funktion,Prozedur) implementiert, für weitere Algorithmen  als Bibliotheksm odul zur Verfügung steht? Eine raffinierte Zuweisungsvariante ist in der Sprache  Python implementiert. Die Zuweisu ng a, b = b, a vertausc ht die Werte der Inhalte der Variablen a undb(Abbildung 3). Soeinfachgehtdas, wenn man es weiß.   Aber was lernt der Schülerdaraus? Soll ihm der beschwerlichere Weg, der auch in Python gegangen werden kann, den Ringtausch vorzuenthalten, erspart werden?Das wirftnatürlich die grundsätzliche Frage auf, wie weit im Informatikunterricht Blackbox-Denk en erlaub t sein soll. Wo ist es legitim, auf einer höheren Abstraktionsstuf e anzusetzen und wo erforde rlich, "black boxes" zuöffnen und die zuGrunde liegenden Algorithmen zuverstehen? Muss es überhaupt ein Ringtausch sein?Kann das Problem des Platztausches der Werte  zweier (numerischer) Variablen ausschließlich mit einer Hilfsv ariab lengelöst werd en? Bei dieser Frage betretenwir die Domäne der Denksportaufgaben.  Abbild ung 4: Tausc h der Inhalte zweier numerischer Variablen  Die Zuwei sungsfolge b  ← b – a; a ←  a + b; b  ←  a – b  tut es, wie aus Abbildung4  ersich tlich, für numerisch e Variab len auch.  133 -Ein weiterer reizvoller Weg, sich die Algorithmik des "Platz tausches" jenseits des Variablenkonzepts zu erschließen, ist der in den neue n bayerischen Informatik-Leh rbüchern für den 6./7. Jg. empfohlene Karel , der Roboter" [Ka05], der die (allerdings nicht triviale) Aufgabe lösen muss, zwei  verschieden hohe Ziegelhaufen zu vertausche n, der in Abbildung 4 gestellten  "Umfüllaufgabe" nicht unähnlich.Schließlich könnte diese Umfüllaufgabe auch mit dem legendä ren "Knowhow-Computer" [Ba97]von Back und Rohde realisiert werden. Dieser Modellcomputer (Abbildung 5) ist ein Beispiel für eine so gena nnten Registermaschine mit ganzen  fünfAnweisungen (Sprungbefehl, Vergleich, Inund Dekrementierer, St op-Anweisung). Abbild ung 5: Knowhow-Co mput er   In diesem Kapit el ist nuranged eutet word en, welch  reichh altiges, didaktisch wertvolles  Potential bereits in (einfachen) Aufgabenstellunge n, wie dem Tausch der Inhalte zweier Variablen steckt. Die Legitim ation, den "Platztausch" imInform atikunterric ht zu thematisieren , ist aber auch durch unzählige lebensweltl icheAnwendu ngen und die Tatsache gegeben, dass er das Fundamen t vieler Algorithmen darstellt, in denen es um Mischsowi e Sortierverfahrengeht.  7  Resümee  Die 5.Klasse an denAHS Österre ichs ist an der Schnittstelle zwischenUnterstufe und  Oberstufe angesi edelt. Mit dieser Klasse ende t auch die offizielle Schulpflicht und beginnt die Frage, was von einem 15-Jä hrigenan inform atischer Bildung und Kompetenz erwartetwerdendarf. Neben der Schulungvon Standardsoftware, die in vielen Fäl len auf den ECDL (Europäischer Computerführerschein) ausgerichtet ist und auch einen (derzeit noch nicht absehbaren) Einfluss auf die Inhalte des Informatikunterrichts an den AHS hat, sollen imRahmen von weni ger als 70 Unterrichtsstunden auch noch Grundprinzipien überAutomaten, Algorithmen und Programme vermittelt werde n. Gibtder ECDL in Form eines detaillierten  Syllab us mit weit über hundert operation alisie rten Lehrzielen und den daraufausgerichteten Tests ganz klar vor, was an Schülerleistungenfür eine allfällig e Zertifik atserreich ung einzufordern ist, so stehenwir indenkerninformatischen  Bereich en, an der Schn ittstelle zwisch enAnw endersch ulung undAnwen dungsprogrammierung, auch nach mehr als 20Jahren vor offenen Problemen. 134 -Es bestehtösterreichweit kein Konsens darüber, in welchem Ausmaß Algorithmen und  Programmierung im Informatikunterricht der 5. Klasse eine Rolle spielen sollen15. Wenn man sich auf dieser Altersst ufe auf Progra mmierung im weitesten Sinne einlässt, muss  sich der/d ie Informatik-Leh rendeüberfolgende Thesen und Forde rungen im Klaren sei n:  •Informatikunterricht, indem aktive Programmierleistungen und Problemlösestrategien der SchülerInneneingefordert werden,ist sch wer.  •Es muss überlegt werden, welche diesbez üglichen Lehrziele im Sinne von Reproduktion und Transferleistu ngen der/die (durchschnittliche) Schü ler/in  erreichen soll.   •In der Unterrichtsmethodik gibt es keinen Königsweg.Die obengenannte Studie hat gezei gt, dass der Unterrichtsertr ag unabhä ngig von der gewählten Unte rrichtsmethode16 in Sinne der Erreichungkonkreter Testziele unbefriedigend ist.  •Daher müssen in der Unterrichtsplanung unbedingt entsprech endeÜbungs-und  Festigungsphasen in Formvon lösbaren Aufgabenstellungen berücksichtigt werden. Das kostet Zeit.  •Informatiklehrende  stehenje nach  persönlichem Interesse vor dem Problem der adäquaten Werkzeugwah l. Das Spektrum vieler mehr oder weni ger geeigneter Entwicklungsumgebun gen, die von Pascal , Delphi, Visual Basic, Javasc ript bis  Python reichen, macht diese Wahl nicht  einfache r.   •Der Inform atikunterrich t darf sich nicht in einseitig er Werk zeug -Schu lung erschöpfen.   Die DagstuhlerEmpfehlung [Da04]betont die Bedeutung von Standards für Ziele, Inhalte und Methoden eines verpflichtende n Informatikunterrichts und fordert die Einbeziehungder Informatik in Schulleistun gsstudienwie z. B. PISA oder einer andas  21. Jahrh undert angepassten  aktuellen COMPED-Stud ie. Die Defin ition dieser Stand ards inder Alterstufe der 15-Jährig en auf internatio naler Ebene könnte sich nachh altig und normativ auf die Unterrichtsgestaltung im Hinblick auf Algorithmen und Programmierung auswirken. Das Erarbeiten der Standards ist im Hinblick auf die enorme Bandbreite an Software-Werk zeugen kein einfaches Unterfan gen,die Destillatio n konzeptueller  informatischer Fundam ente und deren Überprüfbarkeit ein noch schwierigeres. Allei n im Bereich der elem entaren Algorithmen wie demW ertetaus ch zweier Variable n  steck t (noch immer) ein großes didaktisches Potential. Der im Titel dieses Beitrag s sug15 Die Extreme, dass fast ein ganzes Schuljahr  lang in der 5. Klasse einer  österreichischen AHS nur in einer Progra mmiersprac he progra mmiert wird, sollten eigentlich der Vergangenh eit angehören. Auszus chließen ist  es aber nicht. Ander s sieht es in den höher en technisch en Lehranstalten (HTBLA) in dieser Alter sstufe aus, wo  z. T. die Lehrpläne konkr eten Programmierunter richt in einer  dezidierten Sprache vorgeben. 16 Die Schüler Innen wurden in drei Gruppen mit jeweils  unterschiedlichen  Methoden (Animation, interaktive Konstr uktion , Arbeitsblätter ) unterr ichtet.135 -gerierte kleine Schritt für LehrerInnenkönnte sich dann allerd ings leich t zu einem Riesenschritt auswach sen. Literaturv erzeichnis  [Ba97] http://www .wolfgan g-back .com/ knowhow_home.php (geprüft am 20.2.2005).    [CD05] CDA-Sonderheft 5/2005 , Micheuz, P. (Hrsg.), CDA-Verla g, Linz, 2005.   [Da04] Zweite Dagstuhler Empfehlung vom 24.9.2004 (geprüft am 20.2.20 04)   h ttp://ddi.un i-paderborn.de/did aktik/gi/dagstuhl_2004/dagsthuhl_empfehlung_2004l.pdf.  [EX03] Deutsches Institut für Internationale Pädagogis che Forschung, Frankfurt a. M., 2003.  [Ha94] Haider G., Schu le und Computer, Infor matio nstechn ische Grun dbildung in Österre ich,  Österreichischer  Studienve rlag, Innsbruck, 1994 .  [HN02]Hartmann, Niev ergelt: Informatik und Bildung  zwische n Wan del und Bestä ndigkeit,  Informatik-Spektrum, Dez. 2002 .  [He9 3] von Hent ig H., Die Schule neu denken, Beltz 1993, S. 69.   [Hu00] Hubwieser P, Didaktik  der Informatik, Spring er, Berlin  2000, S. 105.  [Hu04] Hubwieser P. Fundamente der Inform atik, Olden burg, Münch en, 2004, S. 47.  [Ka05] http://www .schule.b ayern.de/karol  (geprüft am 20.2.2005) .  [ILP04] http://www.bmbwk.gv.at/med ienpool/11866/lp_neu_ahs_14.pdf Informatik-Lehrplan AHSObers tufe Österr eich (geprüft am 20.2.200 5).  [NB03] Expertise zur Entwicklung nation aler Bildungss tandards,  2003.  [OW96 ]Ottmann T. Widmay er P., Algorithme n und Daten strukt uren, 3. Auflag e. 1996,  Spektrum  Akade mischer Verlag,Heidelb erg u.a. [Re94] Rechenb erg P., Was ist Informa tik, Hans er Verlag, S. 264.  [Re03] Reite r, Schulinf ormatik in Österreich , Ueberreuter-Verlag , Wien, S. 150. 