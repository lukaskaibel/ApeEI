- 43-Informatik - EIN/AUS - Bildung Werner Hartmann Pädagogische Hochschule BernCH-3000 Bern 9werner.hartmann@phbern.chAbstract:  Wer nicht lesen , schreiben , rechnen und mit Informat ionstechnolog ien umgehen kann, steht heute wie ein Esel am Berg vor einem  Fahrkarten autom at, bei der Online-Rese rvation  eines Hotels und erst recht beim Ausfüllen der elektroni -schen Steuer erklärung. Der hohe Stellenwert der Informationstechnologien in un-serer Gesellschaft ist unbestri tten. Dennoch gibt es keinen Konsens über den Stel-lenwert der informatischen Bildung. Trotz vieler Anläufe hat sich im Bildungskanon kein Schulf ach Informatik etablieren können und generell wird derCom puter im Unterri cht nicht im erwartet en Maße als Hilfsmittel genutzt. Warumwird der Bildu ngswert der Informatik verkannt? Schaffen es die Inform atikernicht, den Bildu ngswert der Informatik  genügend  zu kommunizieren ? Müssten die Inhalte und die Methoden des Informatikunt errichtes neu überdacht werd en? Die nachfolg enden Gedanken sind ein Plädo yer für einen Informatikunt erricht mit ei-nem stärkeren Bezug zum Alltag der Lernen den, für eine vermehrte Gewich tungmethodischer Aspekte in der Informatik-D idaktik und für eine verstärkte Zusam-menarbeit mit den Lehrp ersonen anderer  Fächer. 1  Braucht es w irklich ein Schulfa ch Informa tik? Lesen,  Schreiben und Rechnen sindheute allgemein anerkannteKulturtechniken undGrundlage jeder Allgemeinbildung. Und natürlich wissen wir alle, dass es nichtgenügt,in der Schule nur das Einmaleins zu üben oder Prozentsätze von irgendwelchen Zahlenausrec hnen zukönnen. Wer nie ein tieferes Verst ändnis für die Prozentrechnung erwor-ben hat,wird sich als Tourist nichts ahnend über'sOhr hauen lassen, wenn der Kellnerzuerst 5%für das Gedeck, auf demresultierend enTotal 15% für den Service undauf dem neuen Total noch 5% für die Mehrwertsteuer draufschlägt. Mathematische Allge-mein bildung bedingt auch ein Verständn is für die einem Thema zugrunde liegenden Konzepte. Unbestritten  ist heute, dass die Inform atik ebenfalls zur Allgemeinbildunggehört. Die Inform atik hat unsere Gesellschaf t im Laufe weni ger Jahrzehnte verändert,wie kaum  eine andere Wissenschaft zuvor. Fast jederm ann nutzt Anwendungen wie Textverarbeitung oderWeb-Browser.Um diese Computer-Werkzeuge bedienen zukön-nen, benötigtman im Gegen satz zu früherkeine Programmierken ntnissemehr. Die effi-ziente und effektive Nutzung dieser Werkze uge ist aber keineswe gs einfach. Es genügtnicht, im richtigen Moment die richtige  Taste zu drücken. Die Komplexität von Informatiksyste men im Alltag wird einem bewusst, wenn man die Gebrauchsanweisung des neuen Einbaubackofens verlegt hat. Als gewiefter Internet-Surfer sucht man schnell mittels der Begriffe „Einba ubackofe n'', „Herstellernam e“ und„Gebrauchsanweisung “ aufGoogle, erhält 17Treffer, aber allesamt aus dem Bereich - 44-von Schnäppchena ngeboten. Mehr Erfolg zeigt die Suche auf der Web sitewww.hersteller.de. Nach 8 Klicks findet man wirklich ein Auswahlmenu für unzähligeGebrauchsanweisungen dieses Herstellers. Mittels einer getrenn tenSuche auf der Do-kumentenkollektion des Herstellers bringt man auch in Erfahrung, welche Bedeutung die Abkürzung PNC hat: Prod uktnummer ncode. Im Backofen findet sich die Produkt-Nr. 944 211 794 und damit kann die Gebrauchsanweisung als PDF-Datei der Größe 429 KBherunter geladen  werden. Falls nicht schon installiert, gibt es auch einen Down load But-ton für den Adobe AcrobatReader. Auf Seite 11 findet sich die Übersicht der Bedien- und Anzeigeel emente (Abbildung 1). Abbildung 1: Bedien- und Anzeigelemente Einbaubacko fen Ohnedas Studiu m der Gebrauchsanw eisung ist es praktisch unmöglich,dieses Bedien-feld zu durchschauen. Beim Schal ter 11 ganz links handelt es sich um eine analogeDrehschalter-Umsetzung der diskreten zweiwertigen Funktion „Feuchtigkeitszufuhrja / nein“.  BeimDruckknopf 4könnte man zuerst  erwarten, dass sich damit die Temperaturregel n lässt. Hierm it lässt sich aber nur die Temperatur abfragen. Die diskrete Tempera-turanzeige in Panel 5 wirddurch den analogen Drehknopf10 gesteuert.Die verschiede-nen Startzustände im Panel 3 des endlichen Automaten „Einbaubackofen“ (Heißluft,Pizzastufe, Turbogrill,...) werden durch den Drehknopf 1 ausgewählt. Wir gehen hiernicht ausführlicher ins Detail.  Das Beispiel spric ht für sich: ohne Com puterfertig keiten, ohne Kenn tnis wich tiger Werk zeugeoder Dateifo rmate undohne eine zumindest intuitive Vorstellu ng endlicher Automaten lässt sich selbstständig kaum  online die benötigte Gebrauchsanweisung fin-den,geschweige denn ein Kuchenbacken. Die Frage ist:Wie gelingt es, solche komple-xe „Informatiksysteme“ zu beher rschen?Würde eine ausreic hende inform atische Bil-dung diesen Problemen vorbeugen? Braucht es dazu ein Schulfach Informatik? Undverm itteln wir heute im Inform atikunterri cht die benötigten grundlegende n Konze pte und Kom petenzen ?Das Beisp iel „Back ofen“ illustriert zweierlei.  Ersten s steht es mit der Ausbildung der„Bac kofen-Ingenieure“ nicht zum Besten, sonst würden nicht die grundlegenden Design-Prinzipien in solch sträflicher Art undWeise verletzt. Der heutige Informatikunterrichtauf Stufe Ingenieura usbildung ist offensichtlich  noch unzureich end und berücksichtigt zum Beisp iel die Thematik der Mensch-Masch inen-Schn ittstellen  zuwenig.Zweiten shilft das, beispielsweise imheutigen Inform atikunterrich t auf Stufe Gymnasi-um, verm ittelte Wissen An wenderinnenbei Backo fen-Problemen weni g. Der gymnasiale Inform atikunterricht verm ittelt den Anwe ndern von Inform atiksyst emen nicht die im- 45-Alltag  benötigte inform atische Ausbildung. Darau sdenSchluss zuziehen, es brauchekein Schulfach Informatik, wäre aber v erfehlt. Vielleichtmüsst e der I nformatikunterrichtnur anders gestaltet werde n. 2  Schulfach Informatik: Was läuft schief? Soll „Backofenkunde“ im Informatikunterricht Eingang finden?Sichernicht: Ein auf die Verm ittlung kurzlebiger Anw enderfertigkeiten ausgerichteter Informatiku nterricht istnicht nachhaltig. Wer nur das Backofe nmodell2005 bedienen kann, wirdbeimM odell2007 wieder fast von vorne beginnen müssen. Soll informatische Bildung vermitteltwerd en, muss der Unterrich t auch auf langlebiges Konzeptwissen  ausgerichtet sein. Die Vielfalt und die rasante Entwicklu ngder Informatik machen es aber nicht leicht, die allgemein bildenden Grundlagen der Informatik zu bezeichnen. Das Anzweifeln des Stellen wertes der Inform atik als allgemeinbildendes Fach rückte zudemdie Legitimati-on eines Schulfaches  Informatik und die möglichen Inhalte eines solchen Faches in den Mittelpunkt der Diskussion. So entstanden Lehrplan-Dokumente mit einem  Umfang von mehr als hundert Seiten , mit hohenZielsetzu ngenundoft außer Reichw eite derVor-kenntnisse vieler Informatiklehrpersonen. Die zu behandelnden Inhalte folgen zudem ofteiner streng en Fach system atik undder Bezug zum Alltag  ist für die Schülerinn enundSchü ler nicht ersich tlich. Zur Illustration : In den Einheitlich en Prüfungsan forderung enzur Abiturprüfung(EPA) der Kultusministerkonferenz vom 12.03.2004wird als Aufga-benbeispiel die Entwicklung eines abstrakten Datentypen (ADT) Diction ary angeführt.Teil derAufgabe ist das Besch reiben unten stehender Dictionary-Methode: 01 private int gibIndex( String schluessel) { 02   Dictionar yElement element;03   int i = 0;04   while (i < size() ) { 05   element = (Diction aryElement) get(i); 06   if (element.schluessel.equals(schluessel) ) 07   return  i; 08   i++; 09   } 10   return  -1; 11 } Die Aufgabenstellung entspricht den Anforderungen im ersten Studienjahr eines Infor-matikstudiums und mag geeignet sein, um gege nüber Informatik-Experten den Tiefgangdes Informatikunterrichtes zu dokumentieren. Für die meisten Schülerinnen dürfte einAnwendungsbezug abernur schwer herst ellbar sein, für Kolleginnenaus ande ren Unter-richtsfächern bleibt der Bildungswert solcher Aufgaben schleierhaft. Eine Verknüpfungzum eigenen Unterrich t in Biolo gie oder Gesch ichte ist unvorstellb ar. Kann es sein, dass der Informatikunterricht hier den gleichen Irrweg beschreitet,wie vor einigen Jahrzehntender „neue“ Mathematikunterricht? Mit „neuer Mathematik“ war die Mengenlehre gemeint. Anstelle von Fertigkeiten und Fähigkeiten des Rechne ns als sol-ches wurde das abstrak te Denken in den Vordergrund  gesetzt. Die fachwissen schaftlich orientierte Mengenlehre entsprach aber nicht den pädagogischenund didaktischen An-- 46-forderungen,war nicht schülergerech tund führte zu einer Verwissensch aftlichu ngdes Mathematikunterrichtes. Nicht nur die Schülerinnen ware n überfordert, auch die Lehr-personen wurden  durch diesen Hangzur Wissenschaftlichkeit inBedrängnis gebrach t. Man mag nun einwenden, dass Abstraktion der Kernder Informatik sei und man deshalbim Unterrichtdas Schwergewicht auf das abstrakte Denken legen müsse. Es lohnt sich,dieser Frage genaue r auf den Grund zu gehe n. Peter J. Denni ng, ehem aliger Präsi dent der ACM, setzt sich immer wieder mit der Frage auseina nder, was Computer Science ist. Das Studium einiger seiner Artik el ist für jeden Inform atiklehrer ein Muss. In[De05 a] stellt er die Frage, obdie Informatik überhaupt eine eigenständige Wissen schaft sei. Er weistdarauf hin, dass z u dieser Fr age a uch unterden Informatikern k ein Konsens bestehtund folgert: “Computer science meets every  criterion for being a science, but it has a self-inflicted  problem.” Könnte diese Aussage auch auf den Informatikunterrich t in der heutigen Form zutreffen ? In [De05 b]führt Denning unter demTitel Look Beyond Abs-traction toDefine Comp uting zum Thema Abstra ktion aus: [..] computer science’s agend a is, and always has been, inform ation proces ses. Some arenatura l and some artificial. We study and imitate the natura l; we design and test the arti-ficial. Many of the artificial are inspired by their natural counterparts. Many programs and computer systems are means to study, simulate, and replace natur al information processes. For example, cogn itive scien tists hypothesiz e that intelligen ce is the result ofinformation processes in our brains. Experts in human-computer interaction studythe in-teractions among artific ial information processes in computers and natural processes in humans. Bioinformaticians studythe transcription of DNA as an information process that can be managed and repaired. Computa tional scientists study natural phenomena with computer  simulations. [..]Much programming practice consists of designi ng abstractions -objects and functions - to solve problem s, then letting computers  execut e the abstractions  to produce real action.What is distinctive about abstraction ? Engineers, scientists , organi zational leader s, andgame makers do it all the time.Abstraction is an important but not the defining principl e of computing. Vielleichtmüssten wir im Informatikunterricht Denning's Ausführungen mehr beherzi -gen.Genauso wie Mathematik nicht mit Menge nlehre gleichzuset zen ist, besteht Infor-matik  nicht nur aus Abstrak tionund Modellier ung. Um sich als eigenständiges Unter-richtsfach nachhaltig etablieren  zukönnen, muss für die Schülerinn enund Schüler Sinnund Zweck  der Inform atik ersich tlich sein. Lehrpersonen anderer Fäch er und Bildungs-politikern muss der grundlegende Nutzen der Informatik überzeug end kommuniziertwerden können. Um dasBackofen-Beispiel aufzunehmen: Informatikunterricht muss auch einen Beitrag daz u leisten, da ss wir unsere Pizza backen könne n. In den Lehrplä nenmüssen vermehrt Themenmit einem starken Alltag sbezug- etwa der Entwurf von Mensch-Maschinen-Schnittstellen - Einzug halten. Warum nicht imInformatikunterricht Norman's Klassiker The Design ofEvery dayThings [No88] lesen  und begleiten dunter-schiedliche Mensch-Masch inen-Schn ittstelle n analysieren ?- 47-3  Was muss in der Informatik un terrichtet werden? Die Auswah l des Unterrich tsinhaltes ist in der Informatik schwierige r als in anderen Fäch ern. Informatikunterricht deckt  ein sehr breites Spektrum an Themen und Zielset-zungen ab. Betrachten wir als Beispiel Datenbanken. Inder Hochschule wird man denSchwerpu nkt auf die Modellierung  unddas Design  vonDatenb anken legen. In einem Ausbildungsgang für IT-Supporter wird man die Anw endersicht sowie das Anpassenvon Datenbanken in den Vordergrund stellen. Für die Mehrzahlder Anwender stehenDatenbankabfragenimVordergrund. Die verschi edenen Zielgruppen bedingen verschi e-dene  Themenschwe rpunkte und andere didaktisch-m ethodische Ansätze. Als geeignetes Werkze ug zur Auswahl der Lerninhalte hat sich die Idee der fundam enta-len Ideen vonBrun er [Br60] bewährt, welc he von Schwill [Sc94 ] auf den Informatikun-terrich t adaptiert wurd en. Berü cksich tigt man die Kriterien  zur Auswahl der fundamenta-len Ideen für den Unterricht, läuft man nicht Gefahr, sich in kurzlebigenproduktspezifischen Details zu verlieren.Allerdings reicht es nicht aus, in einem The-mengebiet einfach  möglichst alle fundamentalen  Ideen zu identifizieren .In AbhängigkeitderZielgruppekönnen grundlegen de KonzepteeinesThemas für den Unterrichtsehrrelevant, aberauch vollkomme n belanglos sein.  Im Datenbank-Unterricht mit Zielpubli-kum „Anwe nder“ spielen die Normalform en bei relationalen Datenbanken keine Rolle, für künftige Datenbankentwickler hingegen schon. Es ist Aufgabe der Lehrperson, aus denfundamentalen Ideen diejenige Teilmenge zu wählen, welche fürdie Zielgruppe von Bedeutung ist. Ein Blick indie vergangenen zehn Jahre des gymnasialen Informatikun-terrichtes lässt vermuten, dass dieser bewussten Auswahlinder Vergangenheitzu wenigBeachtung geschenkt wurde. Wir plädieren dafür, dass auchimInformatikunterrichtausgehend von den fundamenta-len Ideen e ines Themengebi etes verm ehrt eine zielgruppengerechte Auswahl getroffen wird. Auch die Rahmenbedi ngungen wie Schultypus, zukünftiges Tätigkeitsgebiet der Lern enden, zur Verfü gungstehendeUnterrich tszeit undInfrastru ktur sollten in die Aus-wahl der Lernziele einfließen. Abbildung 2 zeigt das von uns in der Lehrerausbildung inden letzten Jahren eingesetzte Vorge hensmodell. Die Leitid een legen einen Bezugsrahmen fest. Sie begründen einerseitsdie Ausgangsla-ge, warum etwas überhaupt gelehrtwerdensoll.Andererseits halten sie als Konsequenzdaraus fe st, was  gelernt werden soll und schließen sogewisse Themen aus. Die Leitid eenzeigen den Schülern die Relevanz  eines Themas auf und ordnen das Thema in einen größere nKontext ein.  Die Leitid eenberücksichtigen das Zielpublikum und führen damit zur Auswah l der fun-damentalen Ideen für einen bestimmten  Unterrich tskontext. Die Dispositionsziele stehenzwisch ender eher allgemein formulierten  Leitidee undden fundamentalen Ideen einer-seitsund den o perationalisierten Lernzielen andererseits. Sie dienen als Brücke zwischendiesen unterschiedlichen Ebenen und beschreiben angestrebtes Verhalten, beispielsweisedie Bereitschaft, beim Prog rammieren den Programmcode aussagekräftig zu dokumen-tieren .- 48-WarumistdasThemafürdieLernende nrelevant?LeitideeDisposit ionszieleOpera tionalisierte Lernzie leThemadesUnterrichtesFundamentaleIdeenUnterrichtsgegenstandAusg ewählte fundamentaleIdeenRahm enbedingung en(Zeit Infrastr uktur,Vorkenntnisse,Lehrp läne…)Abbildung 2: Vorgehensm odell Auswahl Lernziele Operationa lisierte Lern ziele halten fest, was die Lernenden nachdem Unterricht könnenundwie dieses Können überprüft werd enkann. Lern ziele haben positive Effek te sowohlfür die Lern enden als auch für die Lehrpersonen. IndenEinheitlich enPrüfu ngsanforde-rungen zur Abiturprüfung(EPA) der Kultusministerko nferenz vom 12.03.2004 sinddie allgemeinen Lernziele für den gymnasialen Informatikunterricht ausführlich beschrie-ben. Zum Thema Struk turieren und Modellieren findet sichunter anderem: [..] Inform atische Methoden wie das Strukturieren, das systematische Zerlegen komple-xer Systeme inüberschaubar eTeile, das Formalisieren und Interpret ieren förder n und fordern die Abstraktionsfähigkeit und das Erfassen logisch er Zusammenhänge. Bei derModellbildun g, die bei der Konstruktion und Analyse von Infor matiksystemen eine ent-scheid ende Rolle spielt, üben die Schüler in besonderem Maße eine Situation von ver-schieden en Standpunkten aus zu beurteilen ; die system atische Überprüfung und kritischeBeurteilung der Ergebnisse sowie des gewä hlten Modells förder n die Fähigkeit zu kon-struktiver Kritik. Gleichzeitig werden die für den erfolgr eichenEinsat z des Computers nötige Sorgfalt, Genauigkeit undAusdauer gefördert. [..]Gege n diese Zi elsetzungen ist nichts einzuwenden. Genauso wie sichdie Mathematik die Förderung des logischen Denkens auf die Fahnen schreibt, kan nund muss die Informatikauch ihren Beitrag  zur Bildung leisten .ImUntersch ied zur Math ematik ist es aber der Inform atik noch nicht gelungen , diesen Beitrag  zur Allgemein bildung in einer breiterenÖffentlichk eit zu verankern. Ganzunschuldig sinddie Informatiker an diese m Umstandnicht. Informatiker wirken auf den,vondenUnzulänglichkeiten der Informatikgeplag-ten Nicht-Informatiker oft  ein weni g überheblich.  Denken wir zum Beispiel an den zweifelhaften Ruf, den die ECDL-Zertifikate inderComputer Science Community genießen. Wie schnel lmokiertman sich über Aufgabender folgenden Art:- 49-Wechseln Sie in die Ansicht Folienmaster in der Datei infos.ppt. Kopieren Sie die Grafikaus der Datei dresden.ppt und positionier en Sie sie so, dass die obere rechte  Ecke derGrafik mit der oberen rechten Ecke des Titelbereichs deckungsgleich ist.Formatieren Sie den Hintergr und der Masterf olien mit folgenden Farbeinstellungen:Farbton 106, Sättigung 255, Intensität 102. Weise n Sie die Änder ung allen Folien ab Fo-lie 5 zu.Nichtselten sindes gerade die Vertreter der Hochschulinform atik, welch e selber mit den praktischenWerkzeugen der Informatik große Mühe bekunden unddene n es nicht leichtfällt, die abstrak ten Konzep te allgemein verständ lich und mit Alltag sbezug zu vermit-teln. Der Informatikunterricht kann sich solchen praktischen Problemen gege nüber abernicht verschließen. Will die Informatik denihr zustehenden Platz als allge mein bildendes Grundlagenfach  einnehmen, muss sie die Leitid eendes Unterrich ts vermehrt anden Interessen und Bedürfnissen der Lernenden ausrichten. Für ein Gymnasiummusischer Ausrichtung dürfte eine Einführung indie objektorientierte Programmierung mit Java wenig Sinn machen . Hingegen würden sich mit Flash interessant e kleine Projekte aus dem Erfahr ungsumfeld der Schülerinnen umsetzen lassen. Auch in einem auf Flashbasierenden Informatikunterricht lässt sich eine Vielzahl wichtiger Informatikkonzeptethematisieren. Angefangen vonGrafikformaten, über programmgesteuert eAblaufpla-nung bis hin zu objektorien tierter Modellierung . Nich t das Werkzeug  „Flash “ darf im Vordergrund stehen , sonderndie diesem  Produkt zugrunde liegende n Konzepte. 4  Was ist heute in der Informatik gerade aktuell? Nebe n Überlegungen zur Auswahlvon Inhalten und Lernzielen für den Unterricht lohntes sich auch, ab und zu einen Blick auf das Gesch ehenin der Inform atikwelt insgesam t zuwerfen. Inden monatlich publizierten  „Top 10Downloads from ACM’s Digital Lib-rary“ spielen Modellierung , UML, Javaund C in allen Varian tenzurzeit eine wich tigeRolle. Daraus den Schluss zu ziehen, man müsse im Informatikunterrichtdiese Themen bevorzug t behandeln, wäre aber kurzsich tig. Die Informatik ist bekanntlich großen Ver-ände rungenunterworfen und neigt im Vergl eich zu anderen Wissenschaft en stärker dazu , einem aktuellen Trend zu erliegen. Im Bereich der Softwaree ntwicklung sprichtman heute objektorientiert und denkt in UML . Auch die Schulinformatik konnte sichdiesem Trend  nichtentziehen undlegt großes Gewichtaufden Prozess und die Werk-zeuge zur Modellierun g. Eine Beisp ielaufgab e aus dem Modul 226„Teilap plikation enobjektorientiert analysieren und implementieren“ in der Schweizer Informatik-Berufsausb ildun g lautet: Unsere Kundin, die Leiter in einer Jugendherber ge, steht vor einem immer wied erkeh-renden Problem. Wenn eine Reisegruppe ankom mt, dauer t es immer sehr lange, bis die Mitglieder auf die Zimmer verteilt sind. Die Jugendh erberge besteht aus: 3 Zimmern mit 4 Betten, 2 Zimmern mit 5Betten, 2 Zimmern mit 3 Betten und 1 Zim-mer mit 2 Betten.  Die Leiter in ist der Meinung, dass dieses Proble m mit einer IT-T eilapplikation gelöst werden kann. Sie gibt Ihnen den Auftrag, eine Teilapplik ation objektorientiert zu erstel-len und zu dokumentieren . Dazu gehören das Use Case Diagramm, das Klassendia-gramm und das Sequenzdiagr amm, das den Ablauf  des Zuordnen s der Mitglieder  einer- 50-Reisegruppe zu den einzelnen Zimmern darstellt. Danach soll die Teilapp likation benut-zerfreundlich realisiert sein.  Realisieren  Sie gemäß den Vorg aben die Teilapp likation. Testen und dokume ntiere n Siedie Anwendung . 1. Notation  und Symbolik von UML ist für die verlangten  Diagramme angewend et. 2. Die Aufgab enstel lung ist objekt orientiert program miert.  3. Die Diagr amme sind überprüft und der Code  der Teilapplik ation ist methodischgetestet.  4. Analy se und Code sind unter Beachtung von Wartba rkeit und Nachvollziehb ar-keit dokumentier t.  Das Beispiel zeigt sehr deutlich eine Schwa chstelle des Inform atikunte rrichtes auf. Umaktuell zu sein undum den Anforderungen der Firmen als Abnehmer der Absolventen einer Berufslehre Rechnung zu tragen, versucht man den Spagat zwischen der komple-xen Realität im Software-En twicklungsalltagund einer vertretbaren schulischenUmset-zung. Das Resu ltat ist eine Verteilu ngsaufgab e von nGästen auf x Zimmer mit y Betten ,wobei z Betten  belegtsind und Männlein und Weiblein wohl getrenntwerdenmüssten . Ein reinkombinatorisches Problem, einfach prozedural zu lösen, noch einfache r miteiner Excel-Tab elle und wenn  schondie Jugendh erberge modelliert werd en muss, einklassischer Fall für eine relationale Datenbank. Mit solchen Them en und Aufgabenstel-lungen könne n im besten Fall auf dem Papier  hochgestec kte Ziele dokumentiert werden. Einen Dienst erweist man aber weder den Lehrenden nochden Lernenden.Vielleicht wäre ein bisschen mehr Beschei denheitder Sache eines Faches Informatikförderlicher?Wir müssen ja in der Schule keine großen Softwaresysteme in Angriffnehm en. Wer in seiner Freizeit gern Modellflugzeuge baut, hat inder Regel auch kleinange fangen. An einfachen Modellen lernt man die grundlegenden Methoden und Tech-niken kennen: Arbeiten mitBespannpapier, Schleifklotzund Spannlack, Kurvensteue-rungen einstellen oder Auswiegen.Natürlich hat man dabei immer ein Fernzielvor Au-gen: große, schöne und elegante Modellflieger. Es ist nicht leicht, sich gegen einen Trend zu stellen. Wer heute nichtobjektorientiertspricht undUML denkt, läuft schnellGefa hr, zuden Ewiggestrigen gezählt zu werden.Natürlich  sind Objekte invielen Situation enextrem nützlich, aber so wie ein Hamm ernicht immer das richtige Werk zeug  ist, soist der objektorien tierte Ansatz nicht immer der Beste. Und nicht vergessen werden darf, dass kein Objekt von sich aus irgendwas macht. Dazubraucht es Methoden, programmiert  in prozeduraler Art und Weise. Früher wurden die Diskussionen um den Informatikunterricht von Glaubenskriegen zur Wahlder richtige n Programmiersprac he beherrscht. Heute finden ähnliche Ausei nanderset-zungen auf dem gehobe neren Niveauder Programmierpara digmen statt.Fürden Informatikunterricht wäre  es wohl nur vonGutem, wenn man diese Diskussio-nen außen vor lassen und im Unterricht die versc hiedenen Sicht-und Herangehenswei-sen beim Erstellen von Software aufzeigenwürde. Ein kleiner Trost mag sein, dass das UML-Fieber nicht nur die Schulen erfasst hat. In einem Aufse hen erregende n Artikel - 51-Deat h by UML Fever beschreibt Alex E. Bell, Software-Entwickler bei Boeing,4Metafieb er und18Fieber [Be0 4]. Bell modelliert die verschiedenenUML Fieberarten und ihre Abhängigkeiten gleich inForm von UML-Diagramme n. Unter anderem diag-nostiziert er folgende Fieberarten :Fundamental Metafev er:  At the root of most UML fevers is a lack of practical experience in those individu als re-sponsible for […] software-development efforts .Curator Fever <<instan ceof> > Delusional Metafever: Victims believe that production of UML diagra ms, as opposed to the engineering content behind them , is the single most  important activ ity in the software -developm ent life cycle. Wir gehe n hier nicht näher auf diese Krankheit in der Informatikwelt ein, merken nur noch an, dass Grady Booch – einer der Begründer von UML – in einem Kommentar zuBell’s Artik el schreibt: The entertaining  tenor of „Dea th by UML“ should not beinferred to suggest that UML fever is an imaginery ailment. It is genuine ly real, it is thriving , and its presenceiscaus-ing cost and schedule trauma on many softwar e programs right now. Auch größere Studienzum Programmierunterricht stützen die weit verbreitete Ansichtnicht,objektorientierte Programmierung erleichtere Anfängern den Einstieg ins Pro-gramm ieren (vgl. zum Beispiel [RRR03]). The papers reviewed do not support this positio n.They show that identifying objects is not an easy process and that objects identified in the problem domain are not necessarilyuseful in the program domain, that the mappi ng between  domains is not straightfor ward, and that novices need to construct a model ofthe proced ural aspect s of a soluti on in or-der to proper ly design objects/classes. Diese Erkenntnisse sind beigena uerem Hinsehen nicht überraschend. Die Hauptaufgabebei OO-An alyse undOO-Desig nbesteht ja inder Modellierung  und Beschreibung einer realen Situation durch kommunizierende Objekte. Die verwendeten Techniken wie etwaKlassen, Assoziationen, Interfaces , Vere rbung, Design Pattern oder UML beschreiben letztlich  einen komplexen Graphen mit Objekten als Knoten. Im Artikel Scale-FreeGeometry in OO Prog rams[Po05] wird sehr schön beschrieben, dass die Struktur eines solchen „Objektgraphen“ nicht den gängigen Vorstellungen entspricht. Große OO-Programme sind nicht aus vielen kleinen, überschaubaren Objekten mit ungefähr der gleichen Größeund der gleichen Kom plexität aufgeba ut. OO-Programme entspreche n inihrer Strukturvielmehr dem World Wide Web . Es gibt viele Objekte mit nur lokalerBedeutung, aber auch einige weni ge Objekte, welche mit praktisch allen anderen Objek-ten in Bezie hung stehe n.  Das Programmieren ist und bleibt eine schwierige Sache, unabhängig vom zugrundeliegende n Paradigma. Gera dein der kurzlebigen Informatik istes gefährlich, sicheinsei-tig an aktuellen  Trends zuorientieren . Die Zeit der Lehrpersonenist kostbar und jedes Einarbeiten in ein neues Gebiet, eine neue Methode oder ein neues Werkzeug muss wohlüberlegtwerden. Ein „konservativer“, aber guter Unterricht, beispielsweise Pro-gramm ieren mit Pascal, ist unter Umständen effektiver als ein „moderner“ Unterricht, - 52-der Schüler und Lehrer gleicherm aßen überfordert. Der Autor erlaubt sich hier aucheinen Seitenh ieban die Gemein schaft der Informatik-Didak tiker, der er selbst angehört: Wenn sich die Informatik im Fächerk anon etablieren soll, müssen die Veran twortlich en in der Informatiklehrer-Ausbildung verm ehrt am gleichen Strick ziehenund dürfen sichnicht in Inhaltsd iskussionenweitab  vom realen  Schulalltag verlieren .5  Werkz euge und Objekte – Konz epte und Produkte/Fertigkeiten Nach dem in den vorangehenden Kapiteln das „Was“ beleuchtet wurde, soll zum Schlussein Blick auf das „Wie“ geworfen werden. Beim Erstellen dieses Dokumentes war derAutor mit der scheinbar läppisch en Aufgabe konfron tiert, aus der als PDF-Datei vorlie-gendenGebrauchsanw eisung eines Backo fens ein Bild in ausreich ender Qualität zu extrahieren . Mit allen  notwend igen Programme n ausgestattet, hat dieses einfacheUnter-fangen eine gute Stunde Arbeit verursacht. Der Autor kennt zwar die Konzepte hinter den verschiedenen G rafikformaten und auch Algorithmen in der Bildbearbeitung. Sobaldes abe rum die konkreteUmsetzung dieser Konzeptegeht, entsteht ein Transferproblem. Das Verm itteln vieler Informatik inhalte findet auf zwei Ebenen statt. Im Beisp iel der Bildbearbeitung gibteszum einen die Objekt-Ebene , die einzelnenBilder und die damit zusam menhän genden Konzepte: Bitmap- vs. Vektorbilder, verlustbehaftete vs. verlust-freieKomprimierung von Bildern, Farbräume und vieles mehr. Zum  anderen gibt es die Werkzeug-Ebene: Bilder werden mit Hilfe einer Software  zur Bildb earbeitung oder mitGrafikprogram men erstellt und bearbeitet. Auch auf dieser Ebene gibt es Konze pte, beispielsw eise die Verwendung  von Ebenen, Mask enoder Filtern . Sowo hlauf der Werk -zeug-E bene als auch auf der Obje kt-Ebene müssen die Konze pte und deren konkret e Umsetzung unterschieden werden. So sind zum Beispiel auf der Obje kt-Ebe ne GIF und JPEG beides Bitmap-Formate, aber sie untersch eiden sichdennoch beträchtlich in ihren Eigensc haften sowohl die Unt erschei dungder Objekt- undWerkzeug-Ebene als auch de r Konzepte und ihrer Umsetzung auf diesen beiden Ebenen ist für die Schüler nicht imme r einfach.Das eigentliche Lern ziel ist häufig auf den primären Unterrich tsgegenstandausgerichtet, im Beispiel der Bildverarbeitung etwa auf die verschiedenen Arten vonBildern und die konkretenBildformate, also die Obje ktebene . Die Werkze ug-E bene stellt einen sekundären Lern gegenstand  dar. Es besteht die Gefah r, dass der Zusammen -hang zwischen primärem und sekundärem Lern gegenst andverlorengeht:Wo finden sichinPhotoshop die Farbtabellen,die Auflösung oder die Ebenen? Wie kombiniert Illustra-tor Vektorgrafiken mit Bitmaps ? Lehrpersonen fühlen sich zudem aufder sich schnell ände rnden Werkzeug-Ebene oftunsicher und neigen dazu, die WerkzeugaspekteimInformatikunterricht unbewusst zu verdrängen oder aber nur den Werkzeugaspekt zubeha ndeln. Man könnte vermuten, dass die Aufteilung in Konzepte und deren Umsetzung in Pro-dukte sowie die Aufteilung in Obje kte und Werkzeuge informatikspezifisch  sei. Ein Blick über den Gartenzaun zeigt, dass andere Berufe mit genau  der gleichen Problematikkonfrontiert sind. Bleiben wir in derNähe derBildbearbeitung und schauen wir die Di-mensionen der Ausbildung in Malerberufenan. Im Schwei zer Reglem ent über die Aus-bildungvon Malern steht als Leitid ee: - 53-Der Maler befasst sich mit d em Auftra gen von Anstrich-, Besch ichtungs- und Struktur-materialien sowie mit dem Aufzi ehen von Tapeten, Beläg en undGeweben. Er verschö-nert damit Bauten, Einrichtungen  und Gegenstände und schützt sie gegen  Witterun gs- und ander eEinflüsse. Ansc hließendwerden Konzepte zu den in Malerberufenwichtigen Objekten (Materia-lien) und Werkzeugen sowie das für die praktische Arbeit notwendige Produktwissenund die benötigten Fertigkeiten aufgelistet. In unten stehender Tabelle sind exemplarischeinige dieser Konzepte und Produkte/Fertigkeiten auf der Objekt- bzw. Werkzeug-Ebene aufgeführt.  Konz epte Produkte /FertigkeitenWerk zeuge Verschieden e Arbeitsvorgäng e und die dabei verwendeten Materialien und Werkzeuge bei Vorarbeiten auf Holz und Holz werk stoffen, mineralischen Unterg ründen , Metall en, Kunsts toffen , alten Anstrichen und Besch ichtungen, Gewe ben, Vliesen etc. kennen. [..]Untergrundvorbereitung wie Schleifen, Entro sten, Isolier en, Neutralisieren, Aufhellen usw.Lasurarbeiten  und Imprägnie-rungen auf mineralisch e Unter-gründe  und Holz sowie Beiz-und Lackie rarbei ten. [..]Objekte Grundl agen der Farbenlehr e, Mischen von Farben, Einfluss des Glan zgrades und der Untergrundstruktur aufden Farbton. [..]Gängige Abbeiz-, Ablaug e- undNeutralisations mittel, Aufhellerund Rein igungs mittel, Pigmente, Bindemittel, Lösungs- und Verdünnungsm ittel, Additiv, Farben und Lack e kenn en. [..]Auch im Informatikunterrichtmuss die Aufteilung nach den Dimensionen, Objekt e undWerkzeuge bzw. Konzepte und Produkte/Fertigkeiten transparent gemacht werden. ImRahmender Bildbearbeitun g dürfen nicht nur einseitig die Konzepte oder die Prod ukte thematisiert werd en. Es ist wich tig, dass auch ein Transfer zwische n dem Konze ptwisse n und der Umsetzung und den Anwen dungen imAlltag stattfin det. Nach einer Übergewichtung der anwendungsspezifischen Informatikaspekte in Zeitender „Integrierten Informatik“ hatdas Pendel inden letzten Jahren im Informatikunter-richt vielleich t zu stark indie andere Rich tung ausgeschlagen. Eine zueinseitige Ge-wichtung der informatischen Grundprinzipien macht es für Nicht -Informatiker schwie-rig, den Stellenwert einer fundierten informatischen Bildu ng richtig einzuschätzen. Hier ist der Inform atikunte rricht inZukunft gefordert. Es muss aufgezeigt werden, dass eineinformatische Allgemeinbildung den effizienten Umgang  mitden heute gängigen Werk-zeugen massiv erleich tert. Die Behandlungdigitaler Bilder im Unterricht darf nicht auf einer theoretis chen Ebene stehen bleiben.  Das erworbe ne Wissen muss in Handlungs-kompetenz umgesetzt werd en, Schü lerinn enmüssen mit Digitalkameras praktisch arbei-ten oder einfache Videosequenzen  schneiden. Nur so schafft der Informatikunterricht einenfür andere Schu lfäch er undPolitiker ersich tlichen Mehrwert. - 54-6  Informatikunterricht: Es kommt  auch auf das „Wie“ an! Im Vordergrund der Diskussionen inder Informatik-Didaktik standen in den letztenJahren curriculare Fragen und Überlegungen zur Begründu ng eines Schulfaches Infor-matik. Das„Wie“, etwa fürden Informatikunterricht geeignete Unterrichtsmethoden und-techniken, wurde wenig thematisiert. Ein Blick auf die Zielsetzungen der INFOS 05zeigt hier erfreulicherweise eine Trendwende. Eineder Hauptaufgaben der Informatik-Didaktikistes,konkrete und praktisch umsetzbare Hinweisefür die Gestaltung des Un-terrich ts zugeben.  Inform atik ist geprägt durch Abstraktion.Die Meth ode der Abstraktion ist oft nützlich ,sie macht aber einem Neuling das Leben schwer. Kinder lernen anhand konkreter Ge-genständ e undmüssen sich Ereignisse undAbläufe vorstellen  können. Je älter wir wer-den, umso zugänglicher sind wir für Erklärungen, die bildlich oder lediglich in Textformvorliegen. Aber Hand aufs Herz: Oft wären wir frohum ein gutes Beispiel aus unseremAlltag. Vielleicht müssten auch im Inform atikunte rricht vermehrt die drei klassische n Repräsentationsebenen eingesetzt werd en. Enaktive Ebene:Erfassen von Sachverhalten durch eigene Handlungen. Ikonische Ebene: Erfasse n von Sachverhalten durch Bilder. Symbolische Ebene:Erfassen von Sach verhalten durch Symbole (Text ,Zeichen etc.).Abst raktes imwahrsten Sinne des Wortes begreifbar machen, ist kein neues Thema inder Ausbildung. Unterricht und Denken muss nicht unbedingt formal, abstrakt inText,Symbolen und Form eln ablaufen. Viele Themen lassen sich ebenso gut in Bildern visua-lisier en odergar in aktivem Handeln begreifen. Auch in der Inform atik lassen  sich die meisten Sachv erhalte anhand einfach er Alltag s-analogien erklären. Meist braucht es nicht mehr als WC-Rollen, Schnur, Papier, Büro-klammern und eine zündende Idee. Zur Illustration ein Beispiel aus der Anwenderschu-lung:Wir allehabe n uns schon über Word geärgert, Stunden damit verbracht, ein langesDokument zu formatieren. Der effiziente Einsatz von Word ist keineswegs einfach.Auch für Word  gilt es, grund legendeKonzep te zu vermitteln und den Überblick vor lauter Funktionalitäten  nicht zuverlieren .Inder Regel wird im Unterrich t zuerst einKonzept kurz erläu tert. Wozu brauc ht man Tabu latoren? Welch e Arten  gibtes? Wie setzt mansie ein? Dann  folgt einekurze De-monstration durch die Kursleiterin:Gespanntschaue n die Kursteilnehmer auf die Lein-wand . Die Kursleiterin  blickt auf ihren  Laptop, die Kursleiterin unddie Kursteiln ehmerschauen buchstäblich aneinander vorbei. Mit der Maus zeigt die Kursleiterin, wie manTabu latoren auswäh lt undplatziert. Nur ist die Benutzerobe rfläche viel zu klein, als dassman den Ausführungen auf der Leinwand folgen könnte.Warum Tabulatoren nicht enaktiv einführen? Abbildung 3 zeigt ein auf den ersten Blick wohl nur ein Lächel n hervorrufendes Holz-Word, ein Mod ell von Word nach geba ut ausDachl atten, Vorhangschienen,Wäscheklammern usw. Die Kursleiterin wählt linksoben einen Tabu lator aus und platziert ihnvon Hand in der Form atierungsleiste. Alles ist transparent,groß und sofort einsichtig. Tabulatoren können versc hoben werden, diebegrenzende Schnur wandert mit. Und selbstverständlich können auch viele andere Kon-zepte und Bedien ungsschritte andiesem  Holzmodell gezeigt werd en. Das Holzmodell- 55-lässt sich zu einem eigentlichen Framework für enaktive Demonstration en vieler Aspek-te der Office-Palette erweitern . Abbildung 3: Holz-Word (Idee und Umsetzung: Paul Miotti)Zugege ben: Holz-Word wird im Umfeld der Hochschulinformatik nichtgerade viel zureigene n Reputation beitragen. Schülerinnen und Informatiklehrer sind aber für konkrete Anreg ungendankbar. Die Inform atik-Didaktik muss wied er einenSchritt näher zu den Schulen hin machen . Vielleichtmüsste die näch ste INFOS in einem Schulhaus stattfin-den unddie Hälfte der Beiträge von Schüler/innenbestritten werd en?7  INFOS 2015: Informatik als Schulfach etabliert In der Vergangenheit haben zwei Techn ologien den Unterricht revolutioniert: Die Erfin-dung der Wandtafelund Gutenbergs Erfindung des Buchdruckes. Gera de diese beidenTech nologienkönnten inden nächsten Jahren abgelöst werden. Die Wandtafeldurch Weiteren twicklu ngenvon Tablet PC’s mit drahtloser Mög lichkeit der Projektion auf die„Wandtafel“, Büche r – im Zusamm enhang mit der Schu le insbesond ere Lehr mittel –durch vernetzte, elektronische Bücher. Daneben ist damit zu rechnen, dass einfache undhandliche Sprachübersetzungssysteme die Bedeutung des Frem dsprachenunterrichtes verändern. GIS-Navigationssysteme werden ganze Teile des Geographieunterrichtesüberflüssig machen und auch ande re Fäche rmüssen ihre Inhalte an die neuen Gege ben-- 56-heiten einer globalen Informationsgesel lschaftanpa ssen. Auf jeden Fall wird aber der Stellenwert der Informatik immer größer und die Bedienung von Backöfennicht einfa-cher. Inform atik wird zu einem Schulfac hwie Mathem atik oder Deutsch. Es liegt zueinem großen Teil an uns Informatiklehrpersonen, wie lange und wie steinig der Wegzur endgültigen Etablierungdes Schulfaches Inform atik sein wird. Gehen wir ohne EIN-bildung auf unsere Kolleginnen in anderen Fäche rn zu und zeige n wir den Nutze nso-wohl einer inform atischen Bildung wie auch einer informatisch en AUSbildung auf. Dannheißt es nicht erst an der INFOS 2025 „Informatik EIN“!Literaturv erzeichnis [De05a]D enning, P. J.: Is Computer Science Science? Comm unications of the ACM, 2005; 48(4); S. 27-31. [De05b ] Dennin g, P. J.: Look Beyond Abstra ction to Define Comp uting. Comm unications ofthe ACM; 2005 ; 48(5); S. 11-12. [No88] Norman, D. A.: The Design  of Ever ydayThings (Originally  published: The psychol-ogy of everydaythings). New  York; Basic Books; 1988. [Br88] B runer, J. S.: The Process of Education. Harvard University  Press; 1960. [Sc94] S chwill, A.: Fundam ental Ideas of Com puter Science. EATCS- Bullet in, 1994 , 53; S. 274-295. [Be04] Bell, A. E.: Death by UML Fever. ACM  Queue - Tomorrow's Computing Today ;March 2004; 2(1); S. 72-80.  [RRR03] Robins, A., Rountree, J., Rountr ee, N.: Learni ng and Teaching Programming: A Re-view and Discus sion. Computer Science Education; 2003; 13(2); S. 137–172. [Po05] Potanin, A., Noble, J., Frean, M., Biddle,  R.: Scale-F ree Geom etry in OO-P rogram s.Communications of the ACM, 2005; 48(4); S. 99-103.  Der Autor dankt R. Reichert (Swiss Centre of Innovations in LearningSt. Gallen), M. Näf (Departement Informatik ETH  Zürich) und M.Lehmann (Universität Bern) für viele anrege nde Diskussi onen im Zusamm enhang mit diesem  Beitrag. - 43-Informatik - EIN/AUS - Bildung  Werner Hartmann  Pädagogische Hochschule Bern CH-3000 Bern 9 werner.hartmann@phbern.ch Abstract:  Wer nicht lesen , schreiben , rechnen und mit Informat ionstechnolog ien  umgehen kann, steht heute wie ein Esel am Berg vor einem  Fahrkarten autom at, bei  der Online-Rese rvation  eines Hotels und erst recht beim Ausfüllen der elektroni - schen Steuer erklärung. Der hohe Stellenwert der Informationstechnologien in un- serer Gesellschaft ist unbestri tten. Dennoch gibt es keinen Konsens über den Stel- lenwert der informatischen Bildung. Trotz vieler Anläufe hat sich im  Bildungskanon kein Schulf ach Informatik etablieren können und generell wird der Com puter im Unterri cht nicht im erwartet en Maße als Hilfsmittel genutzt. Warum wird der Bildu ngswert der Informatik verkannt? Schaffen es die Inform atiker nicht, den Bildu ngswert der Informatik  genügend  zu kommunizieren ? Müssten die  Inhalte und die Methoden des Informatikunt errichtes neu überdacht werd en? Die  nachfolg enden Gedanken sind ein Plädo yer für einen Informatikunt erricht mit ei- nem stärkeren Bezug zum Alltag der Lernen den, für eine vermehrte Gewich tung methodischer Aspekte in der Informatik-D idaktik und für eine verstärkte Zusam- menarbeit mit den Lehrp ersonen anderer  Fächer.  1  Braucht es w irklich ein Schulfa ch Informa tik?  Lesen,  Schreiben und Rechnen sindheute allgemein anerkannteKulturtechniken und Grundlage jeder Allgemeinbildung. Und natürlich wissen wir alle, dass es nichtgenügt, in der Schule nur das Einmaleins zu üben oder Prozentsätze von irgendwelchen Zahlen ausrec hnen zukönnen. Wer nie ein tieferes Verst ändnis für die Prozentrechnung erwor- ben hat,wird sich als Tourist nichts ahnend über'sOhr hauen lassen, wenn der Kellner zuerst 5%für das Gedeck, auf demresultierend enTotal 15% für den Service undauf  dem neuen Total noch 5% für die Mehrwertsteuer draufschlägt. Mathematische Allge- mein bildung bedingt auch ein Verständn is für die einem Thema zugrunde liegenden  Konzepte. Unbestritten  ist heute, dass die Inform atik ebenfalls zur Allgemeinbildung gehört. Die Inform atik hat unsere Gesellschaf t im Laufe weni ger Jahrzehnte verändert, wie kaum  eine andere Wissenschaft zuvor. Fast jederm ann nutzt Anwendungen wie  Textverarbeitung oderWeb-Browser.Um diese Computer-Werkzeuge bedienen zukön- nen, benötigtman im Gegen satz zu früherkeine Programmierken ntnissemehr. Die effi- ziente und effektive Nutzung dieser Werkze uge ist aber keineswe gs einfach. Es genügt nicht, im richtigen Moment die richtige  Taste zu drücken.  Die Komplexität von Informatiksyste men im Alltag wird einem bewusst, wenn man die  Gebrauchsanweisung des neuen Einbaubackofens verlegt hat. Als gewiefter Internet- Surfer sucht man schnell mittels der Begriffe „Einba ubackofe n'', „Herstellernam e“ und „Gebrauchsanweisung “ aufGoogle, erhält 17Treffer, aber allesamt aus dem Bereich - 44-von Schnäppchena ngeboten. Mehr Erfolg zeigt die Suche auf der Web site www.hersteller.de. Nach 8 Klicks findet man wirklich ein Auswahlmenu für unzählige Gebrauchsanweisungen dieses Herstellers. Mittels einer getrenn tenSuche auf der Do- kumentenkollektion des Herstellers bringt man auch in Erfahrung, welche Bedeutung die  Abkürzung PNC hat: Prod uktnummer ncode. Im Backofen findet sich die Produkt-Nr.  944 211 794 und damit kann die Gebrauchsanweisung als PDF-Datei der Größe 429 KB herunter geladen  werden. Falls nicht schon installiert, gibt es auch einen Down load But- ton für den Adobe AcrobatReader. Auf Seite 11 findet sich die Übersicht der Bedien-  und Anzeigeel emente (Abbildung 1).  Abbildung 1: Bedien- und Anzeigelemente Einbaubacko fen  Ohnedas Studiu m der Gebrauchsanw eisung ist es praktisch unmöglich,dieses Bedien- feld zu durchschauen. Beim Schal ter 11 ganz links handelt es sich um eine analoge Drehschalter-Umsetzung der diskreten zweiwertigen Funktion „Feuchtigkeitszufuhrja /  nein“.  BeimDruckknopf 4könnte man zuerst  erwarten, dass sich damit die Temperatur regel n lässt. Hierm it lässt sich aber nur die Temperatur abfragen. Die diskrete Tempera- turanzeige in Panel 5 wirddurch den analogen Drehknopf10 gesteuert.Die verschiede- nen Startzustände im Panel 3 des endlichen Automaten „Einbaubackofen“ (Heißluft, Pizzastufe, Turbogrill,...) werden durch den Drehknopf 1 ausgewählt. Wir gehen hier nicht ausführlicher ins Detail.   Das Beispiel spric ht für sich: ohne Com puterfertig keiten, ohne Kenn tnis wich tiger  Werk zeugeoder Dateifo rmate undohne eine zumindest intuitive Vorstellu ng endlicher  Automaten lässt sich selbstständig kaum  online die benötigte Gebrauchsanweisung fin- den,geschweige denn ein Kuchenbacken. Die Frage ist:Wie gelingt es, solche komple- xe „Informatiksysteme“ zu beher rschen?Würde eine ausreic hende inform atische Bil- dung diesen Problemen vorbeugen? Braucht es dazu ein Schulfach Informatik? Und verm itteln wir heute im Inform atikunterri cht die benötigten grundlegende n Konze pte  und Kom petenzen ? Das Beisp iel „Back ofen“ illustriert zweierlei.  Ersten s steht es mit der Ausbildung der „Bac kofen-Ingenieure“ nicht zum Besten, sonst würden nicht die grundlegenden Design- Prinzipien in solch sträflicher Art undWeise verletzt. Der heutige Informatikunterricht auf Stufe Ingenieura usbildung ist offensichtlich  noch unzureich end und berücksichtigt  zum Beisp iel die Thematik der Mensch-Masch inen-Schn ittstellen  zuwenig. Zweiten shilft das, beispielsweise imheutigen Inform atikunterrich t auf Stufe Gymnasi- um, verm ittelte Wissen An wenderinnenbei Backo fen-Problemen weni g. Der gymnasiale  Inform atikunterricht verm ittelt den Anwe ndern von Inform atiksyst emen nicht die im- 45-Alltag  benötigte inform atische Ausbildung. Darau sdenSchluss zuziehen, es brauche kein Schulfach Informatik, wäre aber v erfehlt. Vielleichtmüsst e der I nformatikunterricht nur anders gestaltet werde n.  2  Schulfach Informatik: Was läuft schief?  Soll „Backofenkunde“ im Informatikunterricht Eingang finden?Sichernicht: Ein auf die  Verm ittlung kurzlebiger Anw enderfertigkeiten ausgerichteter Informatiku nterricht ist nicht nachhaltig. Wer nur das Backofe nmodell2005 bedienen kann, wirdbeimM odell 2007 wieder fast von vorne beginnen müssen. Soll informatische Bildung vermittelt werd en, muss der Unterrich t auch auf langlebiges Konzeptwissen  ausgerichtet sein. Die  Vielfalt und die rasante Entwicklu ngder Informatik machen es aber nicht leicht, die  allgemein bildenden Grundlagen der Informatik zu bezeichnen. Das Anzweifeln des  Stellen wertes der Inform atik als allgemeinbildendes Fach rückte zudemdie Legitimati- on eines Schulfaches  Informatik und die möglichen Inhalte eines solchen Faches in den  Mittelpunkt der Diskussion. So entstanden Lehrplan-Dokumente mit einem  Umfang von  mehr als hundert Seiten , mit hohenZielsetzu ngenundoft außer Reichw eite derVor- kenntnisse vieler Informatiklehrpersonen. Die zu behandelnden Inhalte folgen zudem oft einer streng en Fach system atik undder Bezug zum Alltag  ist für die Schülerinn enund Schü ler nicht ersich tlich. Zur Illustration : In den Einheitlich en Prüfungsan forderung en zur Abiturprüfung(EPA) der Kultusministerkonferenz vom 12.03.2004wird als Aufga- benbeispiel die Entwicklung eines abstrakten Datentypen (ADT) Diction ary angeführt. Teil derAufgabe ist das Besch reiben unten stehender Dictionary-Methode:  01 private int gibIndex( String schluessel) {  02   Dictionar yElement element; 03   int i = 0; 04   while (i < size() ) {  05   element = (Diction aryElement) get(i);  06   if (element.schluessel.equals(schluessel) )  07   return  i;  08   i++;  09   }  10   return  -1;  11 }  Die Aufgabenstellung entspricht den Anforderungen im ersten Studienjahr eines Infor- matikstudiums und mag geeignet sein, um gege nüber Informatik-Experten den Tiefgang des Informatikunterrichtes zu dokumentieren. Für die meisten Schülerinnen dürfte ein Anwendungsbezug abernur schwer herst ellbar sein, für Kolleginnenaus ande ren Unter- richtsfächern bleibt der Bildungswert solcher Aufgaben schleierhaft. Eine Verknüpfung zum eigenen Unterrich t in Biolo gie oder Gesch ichte ist unvorstellb ar.  Kann es sein, dass der Informatikunterricht hier den gleichen Irrweg beschreitet,wie vor  einigen Jahrzehntender „neue“ Mathematikunterricht? Mit „neuer Mathematik“ war die  Mengenlehre gemeint. Anstelle von Fertigkeiten und Fähigkeiten des Rechne ns als sol- ches wurde das abstrak te Denken in den Vordergrund  gesetzt. Die fachwissen schaftlich  orientierte Mengenlehre entsprach aber nicht den pädagogischenund didaktischen An-- 46-forderungen,war nicht schülergerech tund führte zu einer Verwissensch aftlichu ngdes  Mathematikunterrichtes. Nicht nur die Schülerinnen ware n überfordert, auch die Lehr- personen wurden  durch diesen Hangzur Wissenschaftlichkeit inBedrängnis gebrach t.  Man mag nun einwenden, dass Abstraktion der Kernder Informatik sei und man deshalb im Unterrichtdas Schwergewicht auf das abstrakte Denken legen müsse. Es lohnt sich, dieser Frage genaue r auf den Grund zu gehe n. Peter J. Denni ng, ehem aliger Präsi dent  der ACM, setzt sich immer wieder mit der Frage auseina nder, was Computer Science ist.  Das Studium einiger seiner Artik el ist für jeden Inform atiklehrer ein Muss. In[De05 a]  stellt er die Frage, obdie Informatik überhaupt eine eigenständige Wissen schaft sei. Er  weistdarauf hin, dass z u dieser Fr age a uch unterden Informatikern k ein Konsens besteht und folgert: “Computer science meets every  criterion for being a science, but it has a  self-inflicted  problem.” Könnte diese Aussage auch auf den Informatikunterrich t in der  heutigen Form zutreffen ? In [De05 b]führt Denning unter demTitel Look Beyond Abs- traction toDefine Comp uting zum Thema Abstra ktion aus:  [..] computer science’s agend a is, and always has been, inform ation proces ses. Some are natura l and some artificial. We study and imitate the natura l; we design and test the arti- ficial. Many of the artificial are inspired by their natural counterparts. Many programs  and computer systems are means to study, simulate, and replace natur al information  processes. For example, cogn itive scien tists hypothesiz e that intelligen ce is the result of information processes in our brains. Experts in human-computer interaction studythe in- teractions among artific ial information processes in computers and natural processes in  humans. Bioinformaticians studythe transcription of DNA as an information process  that can be managed and repaired. Computa tional scientists study natural phenomena  with computer  simulations. [..] Much programming practice consists of designi ng abstractions -objects and functions -  to solve problem s, then letting computers  execut e the abstractions  to produce real action. What is distinctive about abstraction ? Engineers, scientists , organi zational leader s, and game makers do it all the time.Abstraction is an important but not the defining principl e  of computing.  Vielleichtmüssten wir im Informatikunterricht Denning's Ausführungen mehr beherzi - gen.Genauso wie Mathematik nicht mit Menge nlehre gleichzuset zen ist, besteht Infor- matik  nicht nur aus Abstrak tionund Modellier ung. Um sich als eigenständiges Unter- richtsfach nachhaltig etablieren  zukönnen, muss für die Schülerinn enund Schüler Sinn und Zweck  der Inform atik ersich tlich sein. Lehrpersonen anderer Fäch er und Bildungs- politikern muss der grundlegende Nutzen der Informatik überzeug end kommuniziert werden können. Um dasBackofen-Beispiel aufzunehmen: Informatikunterricht muss  auch einen Beitrag daz u leisten, da ss wir unsere Pizza backen könne n. In den Lehrplä nen müssen vermehrt Themenmit einem starken Alltag sbezug- etwa der Entwurf von  Mensch-Maschinen-Schnittstellen - Einzug halten. Warum nicht imInformatikunterricht  Norman's Klassiker The Design ofEvery dayThings [No88] lesen  und begleiten dunter- schiedliche Mensch-Masch inen-Schn ittstelle n analysieren ?- 47-3  Was muss in der Informatik un terrichtet werden?  Die Auswah l des Unterrich tsinhaltes ist in der Informatik schwierige r als in anderen  Fäch ern. Informatikunterricht deckt  ein sehr breites Spektrum an Themen und Zielset- zungen ab. Betrachten wir als Beispiel Datenbanken. Inder Hochschule wird man den Schwerpu nkt auf die Modellierung  unddas Design  vonDatenb anken legen. In einem  Ausbildungsgang für IT-Supporter wird man die Anw endersicht sowie das Anpassen von Datenbanken in den Vordergrund stellen. Für die Mehrzahlder Anwender stehen DatenbankabfragenimVordergrund. Die verschi edenen Zielgruppen bedingen verschi e- dene  Themenschwe rpunkte und andere didaktisch-m ethodische Ansätze.  Als geeignetes Werkze ug zur Auswahl der Lerninhalte hat sich die Idee der fundam enta- len Ideen vonBrun er [Br60] bewährt, welc he von Schwill [Sc94 ] auf den Informatikun- terrich t adaptiert wurd en. Berü cksich tigt man die Kriterien  zur Auswahl der fundamenta- len Ideen für den Unterricht, läuft man nicht Gefahr, sich in kurzlebigen produktspezifischen Details zu verlieren.Allerdings reicht es nicht aus, in einem The- mengebiet einfach  möglichst alle fundamentalen  Ideen zu identifizieren .In Abhängigkeit derZielgruppekönnen grundlegen de KonzepteeinesThemas für den Unterrichtsehr relevant, aberauch vollkomme n belanglos sein.  Im Datenbank-Unterricht mit Zielpubli- kum „Anwe nder“ spielen die Normalform en bei relationalen Datenbanken keine Rolle,  für künftige Datenbankentwickler hingegen schon. Es ist Aufgabe der Lehrperson, aus  denfundamentalen Ideen diejenige Teilmenge zu wählen, welche fürdie Zielgruppe von  Bedeutung ist. Ein Blick indie vergangenen zehn Jahre des gymnasialen Informatikun- terrichtes lässt vermuten, dass dieser bewussten Auswahlinder Vergangenheitzu wenig Beachtung geschenkt wurde.  Wir plädieren dafür, dass auchimInformatikunterrichtausgehend von den fundamenta- len Ideen e ines Themengebi etes verm ehrt eine zielgruppengerechte Auswahl getroffen  wird. Auch die Rahmenbedi ngungen wie Schultypus, zukünftiges Tätigkeitsgebiet der  Lern enden, zur Verfü gungstehendeUnterrich tszeit undInfrastru ktur sollten in die Aus- wahl der Lernziele einfließen. Abbildung 2 zeigt das von uns in der Lehrerausbildung in den letzten Jahren eingesetzte Vorge hensmodell.  Die Leitid een legen einen Bezugsrahmen fest. Sie begründen einerseitsdie Ausgangsla- ge, warum etwas überhaupt gelehrtwerdensoll.Andererseits halten sie als Konsequenz daraus fe st, was  gelernt werden soll und schließen sogewisse Themen aus. Die Leitid een zeigen den Schülern die Relevanz  eines Themas auf und ordnen das Thema in einen  größere nKontext ein.   Die Leitid eenberücksichtigen das Zielpublikum und führen damit zur Auswah l der fun- damentalen Ideen für einen bestimmten  Unterrich tskontext. Die Dispositionsziele stehen zwisch ender eher allgemein formulierten  Leitidee undden fundamentalen Ideen einer- seitsund den o perationalisierten Lernzielen andererseits. Sie dienen als Brücke zwischen diesen unterschiedlichen Ebenen und beschreiben angestrebtes Verhalten, beispielsweise die Bereitschaft, beim Prog rammieren den Programmcode aussagekräftig zu dokumen- tieren .- 48-WarumistdasThema fürdieLernende nrelevant? Leitidee Disposit ionsziele Opera tionalisierte Lernzie leThemadesUnterrichtes FundamentaleIdeen Unterrichtsgegenstand Ausg ewählte fundamentaleIdeen Rahm enbedingung en (Zeit Infrastr uktur, Vorkenntnisse, Lehrp läne…) Abbildung 2: Vorgehensm odell Auswahl Lernziele  Operationa lisierte Lern ziele halten fest, was die Lernenden nachdem Unterricht können undwie dieses Können überprüft werd enkann. Lern ziele haben positive Effek te sowohl für die Lern enden als auch für die Lehrpersonen. IndenEinheitlich enPrüfu ngsanforde- rungen zur Abiturprüfung(EPA) der Kultusministerko nferenz vom 12.03.2004 sinddie  allgemeinen Lernziele für den gymnasialen Informatikunterricht ausführlich beschrie- ben. Zum Thema Struk turieren und Modellieren findet sichunter anderem:  [..] Inform atische Methoden wie das Strukturieren, das systematische Zerlegen komple- xer Systeme inüberschaubar eTeile, das Formalisieren und Interpret ieren förder n und  fordern die Abstraktionsfähigkeit und das Erfassen logisch er Zusammenhänge. Bei der Modellbildun g, die bei der Konstruktion und Analyse von Infor matiksystemen eine ent- scheid ende Rolle spielt, üben die Schüler in besonderem Maße eine Situation von ver- schieden en Standpunkten aus zu beurteilen ; die system atische Überprüfung und kritische Beurteilung der Ergebnisse sowie des gewä hlten Modells förder n die Fähigkeit zu kon- struktiver Kritik. Gleichzeitig werden die für den erfolgr eichenEinsat z des Computers  nötige Sorgfalt, Genauigkeit undAusdauer gefördert. [..] Gege n diese Zi elsetzungen ist nichts einzuwenden. Genauso wie sichdie Mathematik die  Förderung des logischen Denkens auf die Fahnen schreibt, kan nund muss die Informatik auch ihren Beitrag  zur Bildung leisten .ImUntersch ied zur Math ematik ist es aber der  Inform atik noch nicht gelungen , diesen Beitrag  zur Allgemein bildung in einer breiteren Öffentlichk eit zu verankern. Ganzunschuldig sinddie Informatiker an diese m Umstand nicht. Informatiker wirken auf den,vondenUnzulänglichkeiten der Informatikgeplag- ten Nicht-Informatiker oft  ein weni g überheblich.   Denken wir zum Beispiel an den zweifelhaften Ruf, den die ECDL-Zertifikate inder Computer Science Community genießen. Wie schnel lmokiertman sich über Aufgaben der folgenden Art:- 49-Wechseln Sie in die Ansicht Folienmaster in der Datei infos.ppt. Kopieren Sie die Grafik aus der Datei dresden.ppt und positionier en Sie sie so, dass die obere rechte  Ecke der Grafik mit der oberen rechten Ecke des Titelbereichs deckungsgleich ist. Formatieren Sie den Hintergr und der Masterf olien mit folgenden Farbeinstellungen: Farbton 106, Sättigung 255, Intensität 102. Weise n Sie die Änder ung allen Folien ab Fo- lie 5 zu. Nichtselten sindes gerade die Vertreter der Hochschulinform atik, welch e selber mit den  praktischenWerkzeugen der Informatik große Mühe bekunden unddene n es nicht leicht fällt, die abstrak ten Konzep te allgemein verständ lich und mit Alltag sbezug zu vermit- teln. Der Informatikunterricht kann sich solchen praktischen Problemen gege nüber aber nicht verschließen. Will die Informatik denihr zustehenden Platz als allge mein bildendes  Grundlagenfach  einnehmen, muss sie die Leitid eendes Unterrich ts vermehrt anden  Interessen und Bedürfnissen der Lernenden ausrichten. Für ein Gymnasiummusischer  Ausrichtung dürfte eine Einführung indie objektorientierte Programmierung mit Java  wenig Sinn machen . Hingegen würden sich mit Flash interessant e kleine Projekte aus  dem Erfahr ungsumfeld der Schülerinnen umsetzen lassen. Auch in einem auf Flash basierenden Informatikunterricht lässt sich eine Vielzahl wichtiger Informatikkonzepte thematisieren. Angefangen vonGrafikformaten, über programmgesteuert eAblaufpla- nung bis hin zu objektorien tierter Modellierung . Nich t das Werkzeug  „Flash “ darf im  Vordergrund stehen , sonderndie diesem  Produkt zugrunde liegende n Konzepte.  4  Was ist heute in der Informatik gerade aktuell?  Nebe n Überlegungen zur Auswahlvon Inhalten und Lernzielen für den Unterricht lohnt es sich auch, ab und zu einen Blick auf das Gesch ehenin der Inform atikwelt insgesam t  zuwerfen. Inden monatlich publizierten  „Top 10Downloads from ACM’s Digital Lib- rary“ spielen Modellierung , UML, Javaund C in allen Varian tenzurzeit eine wich tige Rolle. Daraus den Schluss zu ziehen, man müsse im Informatikunterrichtdiese Themen  bevorzug t behandeln, wäre aber kurzsich tig. Die Informatik ist bekanntlich großen Ver- ände rungenunterworfen und neigt im Vergl eich zu anderen Wissenschaft en stärker  dazu , einem aktuellen Trend zu erliegen. Im Bereich der Softwaree ntwicklung spricht man heute objektorientiert und denkt in UML . Auch die Schulinformatik konnte sich diesem Trend  nichtentziehen undlegt großes Gewichtaufden Prozess und die Werk- zeuge zur Modellierun g. Eine Beisp ielaufgab e aus dem Modul 226„Teilap plikation en objektorientiert analysieren und implementieren“ in der Schweizer Informatik- Berufsausb ildun g lautet:  Unsere Kundin, die Leiter in einer Jugendherber ge, steht vor einem immer wied erkeh- renden Problem. Wenn eine Reisegruppe ankom mt, dauer t es immer sehr lange, bis die  Mitglieder auf die Zimmer verteilt sind. Die Jugendh erberge besteht aus:  3 Zimmern mit 4 Betten, 2 Zimmern mit 5Betten, 2 Zimmern mit 3 Betten und 1 Zim- mer mit 2 Betten.   Die Leiter in ist der Meinung, dass dieses Proble m mit einer IT-T eilapplikation gelöst  werden kann. Sie gibt Ihnen den Auftrag, eine Teilapplik ation objektorientiert zu erstel- len und zu dokumentieren . Dazu gehören das Use Case Diagramm, das Klassendia- gramm und das Sequenzdiagr amm, das den Ablauf  des Zuordnen s der Mitglieder  einer- 50-Reisegruppe zu den einzelnen Zimmern darstellt. Danach soll die Teilapp likation benut- zerfreundlich realisiert sein.   Realisieren  Sie gemäß den Vorg aben die Teilapp likation. Testen und dokume ntiere n Sie die Anwendung .  1. Notation  und Symbolik von UML ist für die verlangten  Diagramme angewend et.  2. Die Aufgab enstel lung ist objekt orientiert program miert.   3. Die Diagr amme sind überprüft und der Code  der Teilapplik ation ist methodisch getestet.   4. Analy se und Code sind unter Beachtung von Wartba rkeit und Nachvollziehb ar- keit dokumentier t.   Das Beispiel zeigt sehr deutlich eine Schwa chstelle des Inform atikunte rrichtes auf. Um aktuell zu sein undum den Anforderungen der Firmen als Abnehmer der Absolventen  einer Berufslehre Rechnung zu tragen, versucht man den Spagat zwischen der komple- xen Realität im Software-En twicklungsalltagund einer vertretbaren schulischenUmset- zung. Das Resu ltat ist eine Verteilu ngsaufgab e von nGästen auf x Zimmer mit y Betten , wobei z Betten  belegtsind und Männlein und Weiblein wohl getrenntwerdenmüssten .  Ein reinkombinatorisches Problem, einfach prozedural zu lösen, noch einfache r mit einer Excel-Tab elle und wenn  schondie Jugendh erberge modelliert werd en muss, ein klassischer Fall für eine relationale Datenbank. Mit solchen Them en und Aufgabenstel- lungen könne n im besten Fall auf dem Papier  hochgestec kte Ziele dokumentiert werden.  Einen Dienst erweist man aber weder den Lehrenden nochden Lernenden. Vielleicht wäre ein bisschen mehr Beschei denheitder Sache eines Faches Informatik förderlicher?Wir müssen ja in der Schule keine großen Softwaresysteme in Angriff nehm en. Wer in seiner Freizeit gern Modellflugzeuge baut, hat inder Regel auch klein ange fangen. An einfachen Modellen lernt man die grundlegenden Methoden und Tech- niken kennen: Arbeiten mitBespannpapier, Schleifklotzund Spannlack, Kurvensteue- rungen einstellen oder Auswiegen.Natürlich hat man dabei immer ein Fernzielvor Au- gen: große, schöne und elegante Modellflieger.  Es ist nicht leicht, sich gegen einen Trend zu stellen. Wer heute nichtobjektorientiert spricht undUML denkt, läuft schnellGefa hr, zuden Ewiggestrigen gezählt zu werden. Natürlich  sind Objekte invielen Situation enextrem nützlich, aber so wie ein Hamm er nicht immer das richtige Werk zeug  ist, soist der objektorien tierte Ansatz nicht immer  der Beste. Und nicht vergessen werden darf, dass kein Objekt von sich aus irgendwas  macht. Dazubraucht es Methoden, programmiert  in prozeduraler Art und Weise. Früher  wurden die Diskussionen um den Informatikunterricht von Glaubenskriegen zur Wahl der richtige n Programmiersprac he beherrscht. Heute finden ähnliche Ausei nanderset- zungen auf dem gehobe neren Niveauder Programmierpara digmen statt. Fürden Informatikunterricht wäre  es wohl nur vonGutem, wenn man diese Diskussio- nen außen vor lassen und im Unterricht die versc hiedenen Sicht-und Herangehenswei- sen beim Erstellen von Software aufzeigenwürde. Ein kleiner Trost mag sein, dass das  UML-Fieber nicht nur die Schulen erfasst hat. In einem Aufse hen erregende n Artikel - 51-Deat h by UML Fever beschreibt Alex E. Bell, Software-Entwickler bei Boeing, 4Metafieb er und18Fieber [Be0 4]. Bell modelliert die verschiedenenUML Fieberarten  und ihre Abhängigkeiten gleich inForm von UML-Diagramme n. Unter anderem diag- nostiziert er folgende Fieberarten : Fundamental Metafev er:   At the root of most UML fevers is a lack of practical experience in those individu als re- sponsible for […] software-development efforts . Curator Fever <<instan ceof> > Delusional Metafever:  Victims believe that production of UML diagra ms, as opposed to the engineering content  behind them , is the single most  important activ ity in the software -developm ent life cycle.  Wir gehe n hier nicht näher auf diese Krankheit in der Informatikwelt ein, merken nur  noch an, dass Grady Booch – einer der Begründer von UML – in einem Kommentar zu Bell’s Artik el schreibt:  The entertaining  tenor of „Dea th by UML“ should not beinferred to suggest that UML  fever is an imaginery ailment. It is genuine ly real, it is thriving , and its presenceiscaus- ing cost and schedule trauma on many softwar e programs right now.  Auch größere Studienzum Programmierunterricht stützen die weit verbreitete Ansicht nicht,objektorientierte Programmierung erleichtere Anfängern den Einstieg ins Pro- gramm ieren (vgl. zum Beispiel [RRR03]).  The papers reviewed do not support this positio n.They show that identifying objects is  not an easy process and that objects identified in the problem domain are not necessarily useful in the program domain, that the mappi ng between  domains is not straightfor ward,  and that novices need to construct a model ofthe proced ural aspect s of a soluti on in or- der to proper ly design objects/classes.  Diese Erkenntnisse sind beigena uerem Hinsehen nicht überraschend. Die Hauptaufgabe bei OO-An alyse undOO-Desig nbesteht ja inder Modellierung  und Beschreibung einer  realen Situation durch kommunizierende Objekte. Die verwendeten Techniken wie etwa Klassen, Assoziationen, Interfaces , Vere rbung, Design Pattern oder UML beschreiben  letztlich  einen komplexen Graphen mit Objekten als Knoten. Im Artikel Scale-Free Geometry in OO Prog rams[Po05] wird sehr schön beschrieben, dass die Struktur eines  solchen „Objektgraphen“ nicht den gängigen Vorstellungen entspricht. Große OO- Programme sind nicht aus vielen kleinen, überschaubaren Objekten mit ungefähr der  gleichen Größeund der gleichen Kom plexität aufgeba ut. OO-Programme entspreche n in ihrer Strukturvielmehr dem World Wide Web . Es gibt viele Objekte mit nur lokaler Bedeutung, aber auch einige weni ge Objekte, welche mit praktisch allen anderen Objek- ten in Bezie hung stehe n.   Das Programmieren ist und bleibt eine schwierige Sache, unabhängig vom zugrunde liegende n Paradigma. Gera dein der kurzlebigen Informatik istes gefährlich, sicheinsei- tig an aktuellen  Trends zuorientieren . Die Zeit der Lehrpersonenist kostbar und jedes  Einarbeiten in ein neues Gebiet, eine neue Methode oder ein neues Werkzeug muss  wohlüberlegtwerden. Ein „konservativer“, aber guter Unterricht, beispielsweise Pro- gramm ieren mit Pascal, ist unter Umständen effektiver als ein „moderner“ Unterricht, - 52-der Schüler und Lehrer gleicherm aßen überfordert. Der Autor erlaubt sich hier auch einen Seitenh ieban die Gemein schaft der Informatik-Didak tiker, der er selbst angehört:  Wenn sich die Informatik im Fächerk anon etablieren soll, müssen die Veran twortlich en  in der Informatiklehrer-Ausbildung verm ehrt am gleichen Strick ziehenund dürfen sich nicht in Inhaltsd iskussionenweitab  vom realen  Schulalltag verlieren . 5  Werkz euge und Objekte – Konz epte und Produkte/Fertigkeiten  Nach dem in den vorangehenden Kapiteln das „Was“ beleuchtet wurde, soll zum Schluss ein Blick auf das „Wie“ geworfen werden. Beim Erstellen dieses Dokumentes war der Autor mit der scheinbar läppisch en Aufgabe konfron tiert, aus der als PDF-Datei vorlie- gendenGebrauchsanw eisung eines Backo fens ein Bild in ausreich ender Qualität zu  extrahieren . Mit allen  notwend igen Programme n ausgestattet, hat dieses einfacheUnter- fangen eine gute Stunde Arbeit verursacht. Der Autor kennt zwar die Konzepte hinter  den verschiedenen G rafikformaten und auch Algorithmen in der Bildbearbeitung. Sobald es abe rum die konkreteUmsetzung dieser Konzeptegeht, entsteht ein Transferproblem.  Das Verm itteln vieler Informatik inhalte findet auf zwei Ebenen statt. Im Beisp iel der  Bildbearbeitung gibteszum einen die Objekt-Ebene , die einzelnenBilder und die damit  zusam menhän genden Konzepte: Bitmap- vs. Vektorbilder, verlustbehaftete vs. verlust- freieKomprimierung von Bildern, Farbräume und vieles mehr. Zum  anderen gibt es die  Werkzeug-Ebene: Bilder werden mit Hilfe einer Software  zur Bildb earbeitung oder mit Grafikprogram men erstellt und bearbeitet. Auch auf dieser Ebene gibt es Konze pte,  beispielsw eise die Verwendung  von Ebenen, Mask enoder Filtern . Sowo hlauf der Werk - zeug-E bene als auch auf der Obje kt-Ebene müssen die Konze pte und deren konkret e  Umsetzung unterschieden werden. So sind zum Beispiel auf der Obje kt-Ebe ne GIF und  JPEG beides Bitmap-Formate, aber sie untersch eiden sichdennoch beträchtlich in ihren  Eigensc haften sowohl die Unt erschei dungder Objekt- undWerkzeug-Ebene als auch de r  Konzepte und ihrer Umsetzung auf diesen beiden Ebenen ist für die Schüler nicht imme r  einfach.Das eigentliche Lern ziel ist häufig auf den primären Unterrich tsgegenstand ausgerichtet, im Beispiel der Bildverarbeitung etwa auf die verschiedenen Arten von Bildern und die konkretenBildformate, also die Obje ktebene . Die Werkze ug-E bene  stellt einen sekundären Lern gegenstand  dar. Es besteht die Gefah r, dass der Zusammen - hang zwischen primärem und sekundärem Lern gegenst andverlorengeht:Wo finden sich inPhotoshop die Farbtabellen,die Auflösung oder die Ebenen? Wie kombiniert Illustra- tor Vektorgrafiken mit Bitmaps ? Lehrpersonen fühlen sich zudem aufder sich schnell  ände rnden Werkzeug-Ebene oftunsicher und neigen dazu, die Werkzeugaspekteim Informatikunterricht unbewusst zu verdrängen oder aber nur den Werkzeugaspekt zu beha ndeln.  Man könnte vermuten, dass die Aufteilung in Konzepte und deren Umsetzung in Pro- dukte sowie die Aufteilung in Obje kte und Werkzeuge informatikspezifisch  sei. Ein  Blick über den Gartenzaun zeigt, dass andere Berufe mit genau  der gleichen Problematik konfrontiert sind. Bleiben wir in derNähe derBildbearbeitung und schauen wir die Di- mensionen der Ausbildung in Malerberufenan. Im Schwei zer Reglem ent über die Aus- bildungvon Malern steht als Leitid ee: - 53-Der Maler befasst sich mit d em Auftra gen von Anstrich-, Besch ichtungs- und Struktur- materialien sowie mit dem Aufzi ehen von Tapeten, Beläg en undGeweben. Er verschö- nert damit Bauten, Einrichtungen  und Gegenstände und schützt sie gegen  Witterun gs-  und ander eEinflüsse.  Ansc hließendwerden Konzepte zu den in Malerberufenwichtigen Objekten (Materia- lien) und Werkzeugen sowie das für die praktische Arbeit notwendige Produktwissen und die benötigten Fertigkeiten aufgelistet. In unten stehender Tabelle sind exemplarisch einige dieser Konzepte und Produkte/Fertigkeiten auf der Objekt- bzw. Werkzeug-Ebene  aufgeführt.   Konz epte Produkte /FertigkeitenWerk zeuge Verschieden e Arbeitsvorgäng e und die  dabei verwendeten Materialien und  Werkzeuge bei Vorarbeiten auf Holz  und Holz werk stoffen, mineralischen  Unterg ründen , Metall en, Kunsts toffen ,  alten Anstrichen und Besch ichtungen,  Gewe ben, Vliesen etc. kennen. [..]Untergrundvorbereitung wie  Schleifen, Entro sten, Isolier en,  Neutralisieren, Aufhellen usw. Lasurarbeiten  und Imprägnie- rungen auf mineralisch e Unter- gründe  und Holz sowie Beiz- und Lackie rarbei ten. [..]Objekte Grundl agen der Farbenlehr e, Mischen  von Farben, Einfluss des Glan zgrades  und der Untergrundstruktur aufden  Farbton. [..]Gängige Abbeiz-, Ablaug e- und Neutralisations mittel, Aufheller und Rein igungs mittel, Pigmente,  Bindemittel, Lösungs- und  Verdünnungsm ittel, Additiv,  Farben und Lack e kenn en. [..] Auch im Informatikunterrichtmuss die Aufteilung nach den Dimensionen, Objekt e und Werkzeuge bzw. Konzepte und Produkte/Fertigkeiten transparent gemacht werden. Im Rahmender Bildbearbeitun g dürfen nicht nur einseitig die Konzepte oder die Prod ukte  thematisiert werd en. Es ist wich tig, dass auch ein Transfer zwische n dem Konze ptwisse n  und der Umsetzung und den Anwen dungen imAlltag stattfin det.  Nach einer Übergewichtung der anwendungsspezifischen Informatikaspekte in Zeiten der „Integrierten Informatik“ hatdas Pendel inden letzten Jahren im Informatikunter- richt vielleich t zu stark indie andere Rich tung ausgeschlagen. Eine zueinseitige Ge- wichtung der informatischen Grundprinzipien macht es für Nicht -Informatiker schwie- rig, den Stellenwert einer fundierten informatischen Bildu ng richtig einzuschätzen. Hier  ist der Inform atikunte rricht inZukunft gefordert. Es muss aufgezeigt werden, dass eine informatische Allgemeinbildung den effizienten Umgang  mitden heute gängigen Werk- zeugen massiv erleich tert. Die Behandlungdigitaler Bilder im Unterricht darf nicht auf  einer theoretis chen Ebene stehen bleiben.  Das erworbe ne Wissen muss in Handlungs- kompetenz umgesetzt werd en, Schü lerinn enmüssen mit Digitalkameras praktisch arbei- ten oder einfache Videosequenzen  schneiden. Nur so schafft der Informatikunterricht  einenfür andere Schu lfäch er undPolitiker ersich tlichen Mehrwert. - 54-6  Informatikunterricht: Es kommt  auch auf das „Wie“ an!  Im Vordergrund der Diskussionen inder Informatik-Didaktik standen in den letzten Jahren curriculare Fragen und Überlegungen zur Begründu ng eines Schulfaches Infor- matik. Das„Wie“, etwa fürden Informatikunterricht geeignete Unterrichtsmethoden und -techniken, wurde wenig thematisiert. Ein Blick auf die Zielsetzungen der INFOS 05 zeigt hier erfreulicherweise eine Trendwende. Eineder Hauptaufgaben der Informatik- Didaktikistes,konkrete und praktisch umsetzbare Hinweisefür die Gestaltung des Un- terrich ts zugeben.   Inform atik ist geprägt durch Abstraktion.Die Meth ode der Abstraktion ist oft nützlich , sie macht aber einem Neuling das Leben schwer. Kinder lernen anhand konkreter Ge- genständ e undmüssen sich Ereignisse undAbläufe vorstellen  können. Je älter wir wer- den, umso zugänglicher sind wir für Erklärungen, die bildlich oder lediglich in Textform vorliegen. Aber Hand aufs Herz: Oft wären wir frohum ein gutes Beispiel aus unserem Alltag. Vielleicht müssten auch im Inform atikunte rricht vermehrt die drei klassische n  Repräsentationsebenen eingesetzt werd en. Enaktive Ebene:Erfassen von Sachverhalten  durch eigene Handlungen. Ikonische Ebene: Erfasse n von Sachverhalten durch Bilder.  Symbolische Ebene:Erfassen von Sach verhalten durch Symbole (Text ,Zeichen etc.). Abst raktes imwahrsten Sinne des Wortes begreifbar machen, ist kein neues Thema in der Ausbildung. Unterricht und Denken muss nicht unbedingt formal, abstrakt inText, Symbolen und Form eln ablaufen. Viele Themen lassen sich ebenso gut in Bildern visua- lisier en odergar in aktivem Handeln begreifen.  Auch in der Inform atik lassen  sich die meisten Sachv erhalte anhand einfach er Alltag s- analogien erklären. Meist braucht es nicht mehr als WC-Rollen, Schnur, Papier, Büro- klammern und eine zündende Idee. Zur Illustration ein Beispiel aus der Anwenderschu- lung:Wir allehabe n uns schon über Word geärgert, Stunden damit verbracht, ein langes Dokument zu formatieren. Der effiziente Einsatz von Word ist keineswegs einfach. Auch für Word  gilt es, grund legendeKonzep te zu vermitteln und den Überblick vor  lauter Funktionalitäten  nicht zuverlieren . Inder Regel wird im Unterrich t zuerst einKonzept kurz erläu tert. Wozu brauc ht man  Tabu latoren? Welch e Arten  gibtes? Wie setzt mansie ein? Dann  folgt einekurze De- monstration durch die Kursleiterin:Gespanntschaue n die Kursteilnehmer auf die Lein- wand . Die Kursleiterin  blickt auf ihren  Laptop, die Kursleiterin unddie Kursteiln ehmer schauen buchstäblich aneinander vorbei. Mit der Maus zeigt die Kursleiterin, wie man Tabu latoren auswäh lt undplatziert. Nur ist die Benutzerobe rfläche viel zu klein, als dass man den Ausführungen auf der Leinwand folgen könnte. Warum Tabulatoren nicht enaktiv einführen? Abbildung 3 zeigt ein auf den ersten Blick  wohl nur ein Lächel n hervorrufendes Holz-Word, ein Mod ell von Word nach geba ut aus Dachl atten, Vorhangschienen,Wäscheklammern usw. Die Kursleiterin wählt linksoben  einen Tabu lator aus und platziert ihnvon Hand in der Form atierungsleiste. Alles ist  transparent,groß und sofort einsichtig. Tabulatoren können versc hoben werden, die begrenzende Schnur wandert mit. Und selbstverständlich können auch viele andere Kon- zepte und Bedien ungsschritte andiesem  Holzmodell gezeigt werd en. Das Holzmodell- 55-lässt sich zu einem eigentlichen Framework für enaktive Demonstration en vieler Aspek- te der Office-Palette erweitern .  Abbildung 3: Holz-Word (Idee und Umsetzung: Paul Miotti) Zugege ben: Holz-Word wird im Umfeld der Hochschulinformatik nichtgerade viel zur eigene n Reputation beitragen. Schülerinnen und Informatiklehrer sind aber für konkrete  Anreg ungendankbar. Die Inform atik-Didaktik muss wied er einenSchritt näher zu den  Schulen hin machen . Vielleichtmüsste die näch ste INFOS in einem Schulhaus stattfin- den unddie Hälfte der Beiträge von Schüler/innenbestritten werd en? 7  INFOS 2015: Informatik als Schulfach etabliert  In der Vergangenheit haben zwei Techn ologien den Unterricht revolutioniert: Die Erfin- dung der Wandtafelund Gutenbergs Erfindung des Buchdruckes. Gera de diese beiden Tech nologienkönnten inden nächsten Jahren abgelöst werden. Die Wandtafeldurch  Weiteren twicklu ngenvon Tablet PC’s mit drahtloser Mög lichkeit der Projektion auf die „Wandtafel“, Büche r – im Zusamm enhang mit der Schu le insbesond ere Lehr mittel – durch vernetzte, elektronische Bücher. Daneben ist damit zu rechnen, dass einfache und handliche Sprachübersetzungssysteme die Bedeutung des Frem dsprachenunterrichtes  verändern. GIS-Navigationssysteme werden ganze Teile des Geographieunterrichtes überflüssig machen und auch ande re Fäche rmüssen ihre Inhalte an die neuen Gege ben-- 56-heiten einer globalen Informationsgesel lschaftanpa ssen. Auf jeden Fall wird aber der  Stellenwert der Informatik immer größer und die Bedienung von Backöfennicht einfa- cher. Inform atik wird zu einem Schulfac hwie Mathem atik oder Deutsch. Es liegt zu einem großen Teil an uns Informatiklehrpersonen, wie lange und wie steinig der Weg zur endgültigen Etablierungdes Schulfaches Inform atik sein wird. Gehen wir ohne EIN- bildung auf unsere Kolleginnen in anderen Fäche rn zu und zeige n wir den Nutze nso- wohl einer inform atischen Bildung wie auch einer informatisch en AUSbildung auf.  Dannheißt es nicht erst an der INFOS 2025 „Informatik EIN“! Literaturv erzeichnis  [De05a]D enning, P. J.: Is Computer Science Science? Comm unications of the ACM, 2005;  48(4); S. 27-31.  [De05b ] Dennin g, P. J.: Look Beyond Abstra ction to Define Comp uting. Comm unications of the ACM; 2005 ; 48(5); S. 11-12.  [No88] Norman, D. A.: The Design  of Ever ydayThings (Originally  published: The psychol- ogy of everydaythings). New  York; Basic Books; 1988.  [Br88] B runer, J. S.: The Process of Education. Harvard University  Press; 1960.  [Sc94] S chwill, A.: Fundam ental Ideas of Com puter Science. EATCS- Bullet in, 1994 , 53; S.  274-295.  [Be04] Bell, A. E.: Death by UML Fever. ACM  Queue - Tomorrow's Computing Today ; March 2004; 2(1); S. 72-80.   [RRR03] Robins, A., Rountree, J., Rountr ee, N.: Learni ng and Teaching Programming: A Re- view and Discus sion. Computer Science Education; 2003; 13(2); S. 137–172.  [Po05] Potanin, A., Noble, J., Frean, M., Biddle,  R.: Scale-F ree Geom etry in OO-P rogram s. Communications of the ACM, 2005; 48(4); S. 99-103.   Der Autor dankt R. Reichert (Swiss Centre of Innovations in LearningSt. Gallen),  M. Näf (Departement Informatik ETH  Zürich) und M.Lehmann (Universität Bern) für  viele anrege nde Diskussi onen im Zusamm enhang mit diesem  Beitrag. 43-Informatik EIN/AUS Bildung  Werner Hartmann  Pädagogische Hochschule Bern CH-3000 Bern 9 werner.hartmann@phbern.ch Abstract:  Wer nicht lesen , schreiben , rechnen und mit Informat ionstechnolog ien  umgehen kann, steht heute wie ein Esel am Berg vor einem  Fahrkarten autom at, bei  der Online-Rese rvation  eines Hotels und erst recht beim Ausfüllen der elektroni schen Steuer erklärung. Der hohe Stellenwert der Informationstechnologien in unserer Gesellschaft ist unbestri tten. Dennoch gibt es keinen Konsens über den Stellenwert der informatischen Bildung. Trotz vieler Anläufe hat sich im  Bildungskanon kein Schulf ach Informatik etablieren können und generell wird der Com puter im Unterri cht nicht im erwartet en Maße als Hilfsmittel genutzt. Warum wird der Bildu ngswert der Informatik verkannt? Schaffen es die Inform atiker nicht, den Bildu ngswert der Informatik  genügend  zu kommunizieren ? Müssten die  Inhalte und die Methoden des Informatikunt errichtes neu überdacht werd en? Die  nachfolg enden Gedanken sind ein Plädo yer für einen Informatikunt erricht mit einem stärkeren Bezug zum Alltag der Lernen den, für eine vermehrte Gewich tung methodischer Aspekte in der Informatik-D idaktik und für eine verstärkte Zusammenarbeit mit den Lehrp ersonen anderer  Fächer.  1  Braucht es w irklich ein Schulfa ch Informa tik?  Lesen,  Schreiben und Rechnen sindheute allgemein anerkannteKulturtechniken und Grundlage jeder Allgemeinbildung. Und natürlich wissen wir alle, dass es nichtgenügt, in der Schule nur das Einmaleins zu üben oder Prozentsätze von irgendwelchen Zahlen ausrec hnen zukönnen. Wer nie ein tieferes Verst ändnis für die Prozentrechnung erworben hat,wird sich als Tourist nichts ahnend über'sOhr hauen lassen, wenn der Kellner zuerst 5%für das Gedeck, auf demresultierend enTotal 15% für den Service undauf  dem neuen Total noch 5% für die Mehrwertsteuer draufschlägt. Mathematische Allgemein bildung bedingt auch ein Verständn is für die einem Thema zugrunde liegenden  Konzepte. Unbestritten  ist heute, dass die Inform atik ebenfalls zur Allgemeinbildung gehört. Die Inform atik hat unsere Gesellschaf t im Laufe weni ger Jahrzehnte verändert, wie kaum  eine andere Wissenschaft zuvor. Fast jederm ann nutzt Anwendungen wie  Textverarbeitung oderWeb-Browser.Um diese Computer-Werkzeuge bedienen zukönnen, benötigtman im Gegen satz zu früherkeine Programmierken ntnissemehr. Die effiziente und effektive Nutzung dieser Werkze uge ist aber keineswe gs einfach. Es genügt nicht, im richtigen Moment die richtige  Taste zu drücken.  Die Komplexität von Informatiksyste men im Alltag wird einem bewusst, wenn man die  Gebrauchsanweisung des neuen Einbaubackofens verlegt hat. Als gewiefter InternetSurfer sucht man schnell mittels der Begriffe „Einba ubackofe n'', „Herstellernam e“ und „Gebrauchsanweisung “ aufGoogle, erhält 17Treffer, aber allesamt aus dem Bereich 44-von Schnäppchena ngeboten. Mehr Erfolg zeigt die Suche auf der Web site www.hersteller.de. Nach 8 Klicks findet man wirklich ein Auswahlmenu für unzählige Gebrauchsanweisungen dieses Herstellers. Mittels einer getrenn tenSuche auf der Dokumentenkollektion des Herstellers bringt man auch in Erfahrung, welche Bedeutung die  Abkürzung PNC hat: Prod uktnummer ncode. Im Backofen findet sich die Produkt-Nr.  944 211 794 und damit kann die Gebrauchsanweisung als PDF-Datei der Größe 429 KB herunter geladen  werden. Falls nicht schon installiert, gibt es auch einen Down load Button für den Adobe AcrobatReader. Auf Seite 11 findet sich die Übersicht der Bedien und Anzeigeel emente (Abbildung 1).  Abbildung 1: Bedienund Anzeigelemente Einbaubacko fen  Ohnedas Studiu m der Gebrauchsanw eisung ist es praktisch unmöglich,dieses Bedienfeld zu durchschauen. Beim Schal ter 11 ganz links handelt es sich um eine analoge Drehschalter-Umsetzung der diskreten zweiwertigen Funktion „Feuchtigkeitszufuhrja /  nein“.  BeimDruckknopf 4könnte man zuerst  erwarten, dass sich damit die Temperatur regel n lässt. Hierm it lässt sich aber nur die Temperatur abfragen. Die diskrete Temperaturanzeige in Panel 5 wirddurch den analogen Drehknopf10 gesteuert.Die verschiedenen Startzustände im Panel 3 des endlichen Automaten „Einbaubackofen“ (Heißluft, Pizzastufe, Turbogrill,...) werden durch den Drehknopf 1 ausgewählt. Wir gehen hier nicht ausführlicher ins Detail.   Das Beispiel spric ht für sich: ohne Com puterfertig keiten, ohne Kenn tnis wich tiger  Werk zeugeoder Dateifo rmate undohne eine zumindest intuitive Vorstellu ng endlicher  Automaten lässt sich selbstständig kaum  online die benötigte Gebrauchsanweisung finden,geschweige denn ein Kuchenbacken. Die Frage ist:Wie gelingt es, solche komplexe „Informatiksysteme“ zu beher rschen?Würde eine ausreic hende inform atische Bildung diesen Problemen vorbeugen? Braucht es dazu ein Schulfach Informatik? Und verm itteln wir heute im Inform atikunterri cht die benötigten grundlegende n Konze pte  und Kom petenzen ? Das Beisp iel „Back ofen“ illustriert zweierlei.  Ersten s steht es mit der Ausbildung der „Bac kofen-Ingenieure“ nicht zum Besten, sonst würden nicht die grundlegenden DesignPrinzipien in solch sträflicher Art undWeise verletzt. Der heutige Informatikunterricht auf Stufe Ingenieura usbildung ist offensichtlich  noch unzureich end und berücksichtigt  zum Beisp iel die Thematik der Mensch-Masch inen-Schn ittstellen  zuwenig. Zweiten shilft das, beispielsweise imheutigen Inform atikunterrich t auf Stufe Gymnasium, verm ittelte Wissen An wenderinnenbei Backo fen-Problemen weni g. Der gymnasiale  Inform atikunterricht verm ittelt den Anwe ndern von Inform atiksyst emen nicht die im45-Alltag  benötigte inform atische Ausbildung. Darau sdenSchluss zuziehen, es brauche kein Schulfach Informatik, wäre aber v erfehlt. Vielleichtmüsst e der I nformatikunterricht nur anders gestaltet werde n.  2  Schulfach Informatik: Was läuft schief?  Soll „Backofenkunde“ im Informatikunterricht Eingang finden?Sichernicht: Ein auf die  Verm ittlung kurzlebiger Anw enderfertigkeiten ausgerichteter Informatiku nterricht ist nicht nachhaltig. Wer nur das Backofe nmodell2005 bedienen kann, wirdbeimM odell 2007 wieder fast von vorne beginnen müssen. Soll informatische Bildung vermittelt werd en, muss der Unterrich t auch auf langlebiges Konzeptwissen  ausgerichtet sein. Die  Vielfalt und die rasante Entwicklu ngder Informatik machen es aber nicht leicht, die  allgemein bildenden Grundlagen der Informatik zu bezeichnen. Das Anzweifeln des  Stellen wertes der Inform atik als allgemeinbildendes Fach rückte zudemdie Legitimation eines Schulfaches  Informatik und die möglichen Inhalte eines solchen Faches in den  Mittelpunkt der Diskussion. So entstanden Lehrplan-Dokumente mit einem  Umfang von  mehr als hundert Seiten , mit hohenZielsetzu ngenundoft außer Reichw eite derVorkenntnisse vieler Informatiklehrpersonen. Die zu behandelnden Inhalte folgen zudem oft einer streng en Fach system atik undder Bezug zum Alltag  ist für die Schülerinn enund Schü ler nicht ersich tlich. Zur Illustration : In den Einheitlich en Prüfungsan forderung en zur Abiturprüfung(EPA) der Kultusministerkonferenz vom 12.03.2004wird als Aufgabenbeispiel die Entwicklung eines abstrakten Datentypen (ADT) Diction ary angeführt. Teil derAufgabe ist das Besch reiben unten stehender Dictionary-Methode:  01 private int gibIndex( String schluessel) {  02   Dictionar yElement element; 03   int i = 0; 04   while (i < size() ) {  05   element = (Diction aryElement) get(i);  06   if (element.schluessel.equals(schluessel) )  07   return  i;  08   i++;  09   }  10   return  -1;  11 }  Die Aufgabenstellung entspricht den Anforderungen im ersten Studienjahr eines Informatikstudiums und mag geeignet sein, um gege nüber Informatik-Experten den Tiefgang des Informatikunterrichtes zu dokumentieren. Für die meisten Schülerinnen dürfte ein Anwendungsbezug abernur schwer herst ellbar sein, für Kolleginnenaus ande ren Unterrichtsfächern bleibt der Bildungswert solcher Aufgaben schleierhaft. Eine Verknüpfung zum eigenen Unterrich t in Biolo gie oder Gesch ichte ist unvorstellb ar.  Kann es sein, dass der Informatikunterricht hier den gleichen Irrweg beschreitet,wie vor  einigen Jahrzehntender „neue“ Mathematikunterricht? Mit „neuer Mathematik“ war die  Mengenlehre gemeint. Anstelle von Fertigkeiten und Fähigkeiten des Rechne ns als solches wurde das abstrak te Denken in den Vordergrund  gesetzt. Die fachwissen schaftlich  orientierte Mengenlehre entsprach aber nicht den pädagogischenund didaktischen An-46-forderungen,war nicht schülergerech tund führte zu einer Verwissensch aftlichu ngdes  Mathematikunterrichtes. Nicht nur die Schülerinnen ware n überfordert, auch die Lehrpersonen wurden  durch diesen Hangzur Wissenschaftlichkeit inBedrängnis gebrach t.  Man mag nun einwenden, dass Abstraktion der Kernder Informatik sei und man deshalb im Unterrichtdas Schwergewicht auf das abstrakte Denken legen müsse. Es lohnt sich, dieser Frage genaue r auf den Grund zu gehe n. Peter J. Denni ng, ehem aliger Präsi dent  der ACM, setzt sich immer wieder mit der Frage auseina nder, was Computer Science ist.  Das Studium einiger seiner Artik el ist für jeden Inform atiklehrer ein Muss. In[De05 a]  stellt er die Frage, obdie Informatik überhaupt eine eigenständige Wissen schaft sei. Er  weistdarauf hin, dass z u dieser Fr age a uch unterden Informatikern k ein Konsens besteht und folgert: “Computer science meets every  criterion for being a science, but it has a  self-inflicted  problem.” Könnte diese Aussage auch auf den Informatikunterrich t in der  heutigen Form zutreffen ? In [De05 b]führt Denning unter demTitel Look Beyond Abstraction toDefine Comp uting zum Thema Abstra ktion aus:  [..] computer science’s agend a is, and always has been, inform ation proces ses. Some are natura l and some artificial. We study and imitate the natura l; we design and test the artificial. Many of the artificial are inspired by their natural counterparts. Many programs  and computer systems are means to study, simulate, and replace natur al information  processes. For example, cogn itive scien tists hypothesiz e that intelligen ce is the result of information processes in our brains. Experts in human-computer interaction studythe interactions among artific ial information processes in computers and natural processes in  humans. Bioinformaticians studythe transcription of DNA as an information process  that can be managed and repaired. Computa tional scientists study natural phenomena  with computer  simulations. [..] Much programming practice consists of designi ng abstractions -objects and functions  to solve problem s, then letting computers  execut e the abstractions  to produce real action. What is distinctive about abstraction ? Engineers, scientists , organi zational leader s, and game makers do it all the time.Abstraction is an important but not the defining principl e  of computing.  Vielleichtmüssten wir im Informatikunterricht Denning's Ausführungen mehr beherzi gen.Genauso wie Mathematik nicht mit Menge nlehre gleichzuset zen ist, besteht Informatik  nicht nur aus Abstrak tionund Modellier ung. Um sich als eigenständiges Unterrichtsfach nachhaltig etablieren  zukönnen, muss für die Schülerinn enund Schüler Sinn und Zweck  der Inform atik ersich tlich sein. Lehrpersonen anderer Fäch er und Bildungspolitikern muss der grundlegende Nutzen der Informatik überzeug end kommuniziert werden können. Um dasBackofen-Beispiel aufzunehmen: Informatikunterricht muss  auch einen Beitrag daz u leisten, da ss wir unsere Pizza backen könne n. In den Lehrplä nen müssen vermehrt Themenmit einem starken Alltag sbezugetwa der Entwurf von  Mensch-Maschinen-Schnittstellen Einzug halten. Warum nicht imInformatikunterricht  Norman's Klassiker The Design ofEvery dayThings [No88] lesen  und begleiten dunterschiedliche Mensch-Masch inen-Schn ittstelle n analysieren ?47-3  Was muss in der Informatik un terrichtet werden?  Die Auswah l des Unterrich tsinhaltes ist in der Informatik schwierige r als in anderen  Fäch ern. Informatikunterricht deckt  ein sehr breites Spektrum an Themen und Zielsetzungen ab. Betrachten wir als Beispiel Datenbanken. Inder Hochschule wird man den Schwerpu nkt auf die Modellierung  unddas Design  vonDatenb anken legen. In einem  Ausbildungsgang für IT-Supporter wird man die Anw endersicht sowie das Anpassen von Datenbanken in den Vordergrund stellen. Für die Mehrzahlder Anwender stehen DatenbankabfragenimVordergrund. Die verschi edenen Zielgruppen bedingen verschi edene  Themenschwe rpunkte und andere didaktisch-m ethodische Ansätze.  Als geeignetes Werkze ug zur Auswahl der Lerninhalte hat sich die Idee der fundam entalen Ideen vonBrun er [Br60] bewährt, welc he von Schwill [Sc94 ] auf den Informatikunterrich t adaptiert wurd en. Berü cksich tigt man die Kriterien  zur Auswahl der fundamentalen Ideen für den Unterricht, läuft man nicht Gefahr, sich in kurzlebigen produktspezifischen Details zu verlieren.Allerdings reicht es nicht aus, in einem Themengebiet einfach  möglichst alle fundamentalen  Ideen zu identifizieren .In Abhängigkeit derZielgruppekönnen grundlegen de KonzepteeinesThemas für den Unterrichtsehr relevant, aberauch vollkomme n belanglos sein.  Im Datenbank-Unterricht mit Zielpublikum „Anwe nder“ spielen die Normalform en bei relationalen Datenbanken keine Rolle,  für künftige Datenbankentwickler hingegen schon. Es ist Aufgabe der Lehrperson, aus  denfundamentalen Ideen diejenige Teilmenge zu wählen, welche fürdie Zielgruppe von  Bedeutung ist. Ein Blick indie vergangenen zehn Jahre des gymnasialen Informatikunterrichtes lässt vermuten, dass dieser bewussten Auswahlinder Vergangenheitzu wenig Beachtung geschenkt wurde.  Wir plädieren dafür, dass auchimInformatikunterrichtausgehend von den fundamentalen Ideen e ines Themengebi etes verm ehrt eine zielgruppengerechte Auswahl getroffen  wird. Auch die Rahmenbedi ngungen wie Schultypus, zukünftiges Tätigkeitsgebiet der  Lern enden, zur Verfü gungstehendeUnterrich tszeit undInfrastru ktur sollten in die Auswahl der Lernziele einfließen. Abbildung 2 zeigt das von uns in der Lehrerausbildung in den letzten Jahren eingesetzte Vorge hensmodell.  Die Leitid een legen einen Bezugsrahmen fest. Sie begründen einerseitsdie Ausgangslage, warum etwas überhaupt gelehrtwerdensoll.Andererseits halten sie als Konsequenz daraus fe st, was  gelernt werden soll und schließen sogewisse Themen aus. Die Leitid een zeigen den Schülern die Relevanz  eines Themas auf und ordnen das Thema in einen  größere nKontext ein.   Die Leitid eenberücksichtigen das Zielpublikum und führen damit zur Auswah l der fundamentalen Ideen für einen bestimmten  Unterrich tskontext. Die Dispositionsziele stehen zwisch ender eher allgemein formulierten  Leitidee undden fundamentalen Ideen einerseitsund den o perationalisierten Lernzielen andererseits. Sie dienen als Brücke zwischen diesen unterschiedlichen Ebenen und beschreiben angestrebtes Verhalten, beispielsweise die Bereitschaft, beim Prog rammieren den Programmcode aussagekräftig zu dokumentieren .48-WarumistdasThema fürdieLernende nrelevant? Leitidee Disposit ionsziele Opera tionalisierte Lernzie leThemadesUnterrichtes FundamentaleIdeen Unterrichtsgegenstand Ausg ewählte fundamentaleIdeen Rahm enbedingung en (Zeit Infrastr uktur, Vorkenntnisse, Lehrp läne…) Abbildung 2: Vorgehensm odell Auswahl Lernziele  Operationa lisierte Lern ziele halten fest, was die Lernenden nachdem Unterricht können undwie dieses Können überprüft werd enkann. Lern ziele haben positive Effek te sowohl für die Lern enden als auch für die Lehrpersonen. IndenEinheitlich enPrüfu ngsanforderungen zur Abiturprüfung(EPA) der Kultusministerko nferenz vom 12.03.2004 sinddie  allgemeinen Lernziele für den gymnasialen Informatikunterricht ausführlich beschrieben. Zum Thema Struk turieren und Modellieren findet sichunter anderem:  [..] Inform atische Methoden wie das Strukturieren, das systematische Zerlegen komplexer Systeme inüberschaubar eTeile, das Formalisieren und Interpret ieren förder n und  fordern die Abstraktionsfähigkeit und das Erfassen logisch er Zusammenhänge. Bei der Modellbildun g, die bei der Konstruktion und Analyse von Infor matiksystemen eine entscheid ende Rolle spielt, üben die Schüler in besonderem Maße eine Situation von verschieden en Standpunkten aus zu beurteilen ; die system atische Überprüfung und kritische Beurteilung der Ergebnisse sowie des gewä hlten Modells förder n die Fähigkeit zu konstruktiver Kritik. Gleichzeitig werden die für den erfolgr eichenEinsat z des Computers  nötige Sorgfalt, Genauigkeit undAusdauer gefördert. [..] Gege n diese Zi elsetzungen ist nichts einzuwenden. Genauso wie sichdie Mathematik die  Förderung des logischen Denkens auf die Fahnen schreibt, kan nund muss die Informatik auch ihren Beitrag  zur Bildung leisten .ImUntersch ied zur Math ematik ist es aber der  Inform atik noch nicht gelungen , diesen Beitrag  zur Allgemein bildung in einer breiteren Öffentlichk eit zu verankern. Ganzunschuldig sinddie Informatiker an diese m Umstand nicht. Informatiker wirken auf den,vondenUnzulänglichkeiten der Informatikgeplagten Nicht-Informatiker oft  ein weni g überheblich.   Denken wir zum Beispiel an den zweifelhaften Ruf, den die ECDL-Zertifikate inder Computer Science Community genießen. Wie schnel lmokiertman sich über Aufgaben der folgenden Art:49-Wechseln Sie in die Ansicht Folienmaster in der Datei infos.ppt. Kopieren Sie die Grafik aus der Datei dresden.ppt und positionier en Sie sie so, dass die obere rechte  Ecke der Grafik mit der oberen rechten Ecke des Titelbereichs deckungsgleich ist. Formatieren Sie den Hintergr und der Masterf olien mit folgenden Farbeinstellungen: Farbton 106, Sättigung 255, Intensität 102. Weise n Sie die Änder ung allen Folien ab Folie 5 zu. Nichtselten sindes gerade die Vertreter der Hochschulinform atik, welch e selber mit den  praktischenWerkzeugen der Informatik große Mühe bekunden unddene n es nicht leicht fällt, die abstrak ten Konzep te allgemein verständ lich und mit Alltag sbezug zu vermitteln. Der Informatikunterricht kann sich solchen praktischen Problemen gege nüber aber nicht verschließen. Will die Informatik denihr zustehenden Platz als allge mein bildendes  Grundlagenfach  einnehmen, muss sie die Leitid eendes Unterrich ts vermehrt anden  Interessen und Bedürfnissen der Lernenden ausrichten. Für ein Gymnasiummusischer  Ausrichtung dürfte eine Einführung indie objektorientierte Programmierung mit Java  wenig Sinn machen . Hingegen würden sich mit Flash interessant e kleine Projekte aus  dem Erfahr ungsumfeld der Schülerinnen umsetzen lassen. Auch in einem auf Flash basierenden Informatikunterricht lässt sich eine Vielzahl wichtiger Informatikkonzepte thematisieren. Angefangen vonGrafikformaten, über programmgesteuert eAblaufplanung bis hin zu objektorien tierter Modellierung . Nich t das Werkzeug  „Flash “ darf im  Vordergrund stehen , sonderndie diesem  Produkt zugrunde liegende n Konzepte.  4  Was ist heute in der Informatik gerade aktuell?  Nebe n Überlegungen zur Auswahlvon Inhalten und Lernzielen für den Unterricht lohnt es sich auch, ab und zu einen Blick auf das Gesch ehenin der Inform atikwelt insgesam t  zuwerfen. Inden monatlich publizierten  „Top 10Downloads from ACM’s Digital Library“ spielen Modellierung , UML, Javaund C in allen Varian tenzurzeit eine wich tige Rolle. Daraus den Schluss zu ziehen, man müsse im Informatikunterrichtdiese Themen  bevorzug t behandeln, wäre aber kurzsich tig. Die Informatik ist bekanntlich großen Verände rungenunterworfen und neigt im Vergl eich zu anderen Wissenschaft en stärker  dazu , einem aktuellen Trend zu erliegen. Im Bereich der Softwaree ntwicklung spricht man heute objektorientiert und denkt in UML . Auch die Schulinformatik konnte sich diesem Trend  nichtentziehen undlegt großes Gewichtaufden Prozess und die Werkzeuge zur Modellierun g. Eine Beisp ielaufgab e aus dem Modul 226„Teilap plikation en objektorientiert analysieren und implementieren“ in der Schweizer InformatikBerufsausb ildun g lautet:  Unsere Kundin, die Leiter in einer Jugendherber ge, steht vor einem immer wied erkehrenden Problem. Wenn eine Reisegruppe ankom mt, dauer t es immer sehr lange, bis die  Mitglieder auf die Zimmer verteilt sind. Die Jugendh erberge besteht aus:  3 Zimmern mit 4 Betten, 2 Zimmern mit 5Betten, 2 Zimmern mit 3 Betten und 1 Zimmer mit 2 Betten.   Die Leiter in ist der Meinung, dass dieses Proble m mit einer IT-T eilapplikation gelöst  werden kann. Sie gibt Ihnen den Auftrag, eine Teilapplik ation objektorientiert zu erstellen und zu dokumentieren . Dazu gehören das Use Case Diagramm, das Klassendiagramm und das Sequenzdiagr amm, das den Ablauf  des Zuordnen s der Mitglieder  einer50-Reisegruppe zu den einzelnen Zimmern darstellt. Danach soll die Teilapp likation benutzerfreundlich realisiert sein.   Realisieren  Sie gemäß den Vorg aben die Teilapp likation. Testen und dokume ntiere n Sie die Anwendung .  1. Notation  und Symbolik von UML ist für die verlangten  Diagramme angewend et.  2. Die Aufgab enstel lung ist objekt orientiert program miert.   3. Die Diagr amme sind überprüft und der Code  der Teilapplik ation ist methodisch getestet.   4. Analy se und Code sind unter Beachtung von Wartba rkeit und Nachvollziehb arkeit dokumentier t.   Das Beispiel zeigt sehr deutlich eine Schwa chstelle des Inform atikunte rrichtes auf. Um aktuell zu sein undum den Anforderungen der Firmen als Abnehmer der Absolventen  einer Berufslehre Rechnung zu tragen, versucht man den Spagat zwischen der komplexen Realität im Software-En twicklungsalltagund einer vertretbaren schulischenUmsetzung. Das Resu ltat ist eine Verteilu ngsaufgab e von nGästen auf x Zimmer mit y Betten , wobei z Betten  belegtsind und Männlein und Weiblein wohl getrenntwerdenmüssten .  Ein reinkombinatorisches Problem, einfach prozedural zu lösen, noch einfache r mit einer Excel-Tab elle und wenn  schondie Jugendh erberge modelliert werd en muss, ein klassischer Fall für eine relationale Datenbank. Mit solchen Them en und Aufgabenstellungen könne n im besten Fall auf dem Papier  hochgestec kte Ziele dokumentiert werden.  Einen Dienst erweist man aber weder den Lehrenden nochden Lernenden. Vielleicht wäre ein bisschen mehr Beschei denheitder Sache eines Faches Informatik förderlicher?Wir müssen ja in der Schule keine großen Softwaresysteme in Angriff nehm en. Wer in seiner Freizeit gern Modellflugzeuge baut, hat inder Regel auch klein ange fangen. An einfachen Modellen lernt man die grundlegenden Methoden und Techniken kennen: Arbeiten mitBespannpapier, Schleifklotzund Spannlack, Kurvensteuerungen einstellen oder Auswiegen.Natürlich hat man dabei immer ein Fernzielvor Augen: große, schöne und elegante Modellflieger.  Es ist nicht leicht, sich gegen einen Trend zu stellen. Wer heute nichtobjektorientiert spricht undUML denkt, läuft schnellGefa hr, zuden Ewiggestrigen gezählt zu werden. Natürlich  sind Objekte invielen Situation enextrem nützlich, aber so wie ein Hamm er nicht immer das richtige Werk zeug  ist, soist der objektorien tierte Ansatz nicht immer  der Beste. Und nicht vergessen werden darf, dass kein Objekt von sich aus irgendwas  macht. Dazubraucht es Methoden, programmiert  in prozeduraler Art und Weise. Früher  wurden die Diskussionen um den Informatikunterricht von Glaubenskriegen zur Wahl der richtige n Programmiersprac he beherrscht. Heute finden ähnliche Ausei nandersetzungen auf dem gehobe neren Niveauder Programmierpara digmen statt. Fürden Informatikunterricht wäre  es wohl nur vonGutem, wenn man diese Diskussionen außen vor lassen und im Unterricht die versc hiedenen Sicht-und Herangehensweisen beim Erstellen von Software aufzeigenwürde. Ein kleiner Trost mag sein, dass das  UML-Fieber nicht nur die Schulen erfasst hat. In einem Aufse hen erregende n Artikel 51-Deat h by UML Fever beschreibt Alex E. Bell, Software-Entwickler bei Boeing, 4Metafieb er und18Fieber [Be0 4]. Bell modelliert die verschiedenenUML Fieberarten  und ihre Abhängigkeiten gleich inForm von UML-Diagramme n. Unter anderem diagnostiziert er folgende Fieberarten : Fundamental Metafev er:   At the root of most UML fevers is a lack of practical experience in those individu als responsible for […] software-development efforts . Curator Fever <<instan ceof> > Delusional Metafever:  Victims believe that production of UML diagra ms, as opposed to the engineering content  behind them , is the single most  important activ ity in the software -developm ent life cycle.  Wir gehe n hier nicht näher auf diese Krankheit in der Informatikwelt ein, merken nur  noch an, dass Grady Booch – einer der Begründer von UML – in einem Kommentar zu Bell’s Artik el schreibt:  The entertaining  tenor of „Dea th by UML“ should not beinferred to suggest that UML  fever is an imaginery ailment. It is genuine ly real, it is thriving , and its presenceiscausing cost and schedule trauma on many softwar e programs right now.  Auch größere Studienzum Programmierunterricht stützen die weit verbreitete Ansicht nicht,objektorientierte Programmierung erleichtere Anfängern den Einstieg ins Programm ieren (vgl. zum Beispiel [RRR03]).  The papers reviewed do not support this positio n.They show that identifying objects is  not an easy process and that objects identified in the problem domain are not necessarily useful in the program domain, that the mappi ng between  domains is not straightfor ward,  and that novices need to construct a model ofthe proced ural aspect s of a soluti on in order to proper ly design objects/classes.  Diese Erkenntnisse sind beigena uerem Hinsehen nicht überraschend. Die Hauptaufgabe bei OO-An alyse undOO-Desig nbesteht ja inder Modellierung  und Beschreibung einer  realen Situation durch kommunizierende Objekte. Die verwendeten Techniken wie etwa Klassen, Assoziationen, Interfaces , Vere rbung, Design Pattern oder UML beschreiben  letztlich  einen komplexen Graphen mit Objekten als Knoten. Im Artikel Scale-Free Geometry in OO Prog rams[Po05] wird sehr schön beschrieben, dass die Struktur eines  solchen „Objektgraphen“ nicht den gängigen Vorstellungen entspricht. Große OOProgramme sind nicht aus vielen kleinen, überschaubaren Objekten mit ungefähr der  gleichen Größeund der gleichen Kom plexität aufgeba ut. OO-Programme entspreche n in ihrer Strukturvielmehr dem World Wide Web . Es gibt viele Objekte mit nur lokaler Bedeutung, aber auch einige weni ge Objekte, welche mit praktisch allen anderen Objekten in Bezie hung stehe n.   Das Programmieren ist und bleibt eine schwierige Sache, unabhängig vom zugrunde liegende n Paradigma. Gera dein der kurzlebigen Informatik istes gefährlich, sicheinseitig an aktuellen  Trends zuorientieren . Die Zeit der Lehrpersonenist kostbar und jedes  Einarbeiten in ein neues Gebiet, eine neue Methode oder ein neues Werkzeug muss  wohlüberlegtwerden. Ein „konservativer“, aber guter Unterricht, beispielsweise Programm ieren mit Pascal, ist unter Umständen effektiver als ein „moderner“ Unterricht, 52-der Schüler und Lehrer gleicherm aßen überfordert. Der Autor erlaubt sich hier auch einen Seitenh ieban die Gemein schaft der Informatik-Didak tiker, der er selbst angehört:  Wenn sich die Informatik im Fächerk anon etablieren soll, müssen die Veran twortlich en  in der Informatiklehrer-Ausbildung verm ehrt am gleichen Strick ziehenund dürfen sich nicht in Inhaltsd iskussionenweitab  vom realen  Schulalltag verlieren . 5  Werkz euge und Objekte – Konz epte und Produkte/Fertigkeiten  Nach dem in den vorangehenden Kapiteln das „Was“ beleuchtet wurde, soll zum Schluss ein Blick auf das „Wie“ geworfen werden. Beim Erstellen dieses Dokumentes war der Autor mit der scheinbar läppisch en Aufgabe konfron tiert, aus der als PDF-Datei vorliegendenGebrauchsanw eisung eines Backo fens ein Bild in ausreich ender Qualität zu  extrahieren . Mit allen  notwend igen Programme n ausgestattet, hat dieses einfacheUnterfangen eine gute Stunde Arbeit verursacht. Der Autor kennt zwar die Konzepte hinter  den verschiedenen G rafikformaten und auch Algorithmen in der Bildbearbeitung. Sobald es abe rum die konkreteUmsetzung dieser Konzeptegeht, entsteht ein Transferproblem.  Das Verm itteln vieler Informatik inhalte findet auf zwei Ebenen statt. Im Beisp iel der  Bildbearbeitung gibteszum einen die Objekt-Ebene , die einzelnenBilder und die damit  zusam menhän genden Konzepte: Bitmapvs. Vektorbilder, verlustbehaftete vs. verlustfreieKomprimierung von Bildern, Farbräume und vieles mehr. Zum  anderen gibt es die  Werkzeug-Ebene: Bilder werden mit Hilfe einer Software  zur Bildb earbeitung oder mit Grafikprogram men erstellt und bearbeitet. Auch auf dieser Ebene gibt es Konze pte,  beispielsw eise die Verwendung  von Ebenen, Mask enoder Filtern . Sowo hlauf der Werk zeug-E bene als auch auf der Obje kt-Ebene müssen die Konze pte und deren konkret e  Umsetzung unterschieden werden. So sind zum Beispiel auf der Obje kt-Ebe ne GIF und  JPEG beides Bitmap-Formate, aber sie untersch eiden sichdennoch beträchtlich in ihren  Eigensc haften sowohl die Unt erschei dungder ObjektundWerkzeug-Ebene als auch de r  Konzepte und ihrer Umsetzung auf diesen beiden Ebenen ist für die Schüler nicht imme r  einfach.Das eigentliche Lern ziel ist häufig auf den primären Unterrich tsgegenstand ausgerichtet, im Beispiel der Bildverarbeitung etwa auf die verschiedenen Arten von Bildern und die konkretenBildformate, also die Obje ktebene . Die Werkze ug-E bene  stellt einen sekundären Lern gegenstand  dar. Es besteht die Gefah r, dass der Zusammen hang zwischen primärem und sekundärem Lern gegenst andverlorengeht:Wo finden sich inPhotoshop die Farbtabellen,die Auflösung oder die Ebenen? Wie kombiniert Illustrator Vektorgrafiken mit Bitmaps ? Lehrpersonen fühlen sich zudem aufder sich schnell  ände rnden Werkzeug-Ebene oftunsicher und neigen dazu, die Werkzeugaspekteim Informatikunterricht unbewusst zu verdrängen oder aber nur den Werkzeugaspekt zu beha ndeln.  Man könnte vermuten, dass die Aufteilung in Konzepte und deren Umsetzung in Produkte sowie die Aufteilung in Obje kte und Werkzeuge informatikspezifisch  sei. Ein  Blick über den Gartenzaun zeigt, dass andere Berufe mit genau  der gleichen Problematik konfrontiert sind. Bleiben wir in derNähe derBildbearbeitung und schauen wir die Dimensionen der Ausbildung in Malerberufenan. Im Schwei zer Reglem ent über die Ausbildungvon Malern steht als Leitid ee: 53-Der Maler befasst sich mit d em Auftra gen von Anstrich-, Besch ichtungsund Strukturmaterialien sowie mit dem Aufzi ehen von Tapeten, Beläg en undGeweben. Er verschönert damit Bauten, Einrichtungen  und Gegenstände und schützt sie gegen  Witterun gs und ander eEinflüsse.  Ansc hließendwerden Konzepte zu den in Malerberufenwichtigen Objekten (Materialien) und Werkzeugen sowie das für die praktische Arbeit notwendige Produktwissen und die benötigten Fertigkeiten aufgelistet. In unten stehender Tabelle sind exemplarisch einige dieser Konzepte und Produkte/Fertigkeiten auf der Objektbzw. Werkzeug-Ebene  aufgeführt.   Konz epte Produkte /FertigkeitenWerk zeuge Verschieden e Arbeitsvorgäng e und die  dabei verwendeten Materialien und  Werkzeuge bei Vorarbeiten auf Holz  und Holz werk stoffen, mineralischen  Unterg ründen , Metall en, Kunsts toffen ,  alten Anstrichen und Besch ichtungen,  Gewe ben, Vliesen etc. kennen. [..]Untergrundvorbereitung wie  Schleifen, Entro sten, Isolier en,  Neutralisieren, Aufhellen usw. Lasurarbeiten  und Imprägnierungen auf mineralisch e Untergründe  und Holz sowie Beizund Lackie rarbei ten. [..]Objekte Grundl agen der Farbenlehr e, Mischen  von Farben, Einfluss des Glan zgrades  und der Untergrundstruktur aufden  Farbton. [..]Gängige Abbeiz-, Ablaug eund Neutralisations mittel, Aufheller und Rein igungs mittel, Pigmente,  Bindemittel, Lösungsund  Verdünnungsm ittel, Additiv,  Farben und Lack e kenn en. [..] Auch im Informatikunterrichtmuss die Aufteilung nach den Dimensionen, Objekt e und Werkzeuge bzw. Konzepte und Produkte/Fertigkeiten transparent gemacht werden. Im Rahmender Bildbearbeitun g dürfen nicht nur einseitig die Konzepte oder die Prod ukte  thematisiert werd en. Es ist wich tig, dass auch ein Transfer zwische n dem Konze ptwisse n  und der Umsetzung und den Anwen dungen imAlltag stattfin det.  Nach einer Übergewichtung der anwendungsspezifischen Informatikaspekte in Zeiten der „Integrierten Informatik“ hatdas Pendel inden letzten Jahren im Informatikunterricht vielleich t zu stark indie andere Rich tung ausgeschlagen. Eine zueinseitige Gewichtung der informatischen Grundprinzipien macht es für Nicht -Informatiker schwierig, den Stellenwert einer fundierten informatischen Bildu ng richtig einzuschätzen. Hier  ist der Inform atikunte rricht inZukunft gefordert. Es muss aufgezeigt werden, dass eine informatische Allgemeinbildung den effizienten Umgang  mitden heute gängigen Werkzeugen massiv erleich tert. Die Behandlungdigitaler Bilder im Unterricht darf nicht auf  einer theoretis chen Ebene stehen bleiben.  Das erworbe ne Wissen muss in Handlungskompetenz umgesetzt werd en, Schü lerinn enmüssen mit Digitalkameras praktisch arbeiten oder einfache Videosequenzen  schneiden. Nur so schafft der Informatikunterricht  einenfür andere Schu lfäch er undPolitiker ersich tlichen Mehrwert. 54-6  Informatikunterricht: Es kommt  auch auf das „Wie“ an!  Im Vordergrund der Diskussionen inder Informatik-Didaktik standen in den letzten Jahren curriculare Fragen und Überlegungen zur Begründu ng eines Schulfaches Informatik. Das„Wie“, etwa fürden Informatikunterricht geeignete Unterrichtsmethoden und -techniken, wurde wenig thematisiert. Ein Blick auf die Zielsetzungen der INFOS 05 zeigt hier erfreulicherweise eine Trendwende. Eineder Hauptaufgaben der InformatikDidaktikistes,konkrete und praktisch umsetzbare Hinweisefür die Gestaltung des Unterrich ts zugeben.   Inform atik ist geprägt durch Abstraktion.Die Meth ode der Abstraktion ist oft nützlich , sie macht aber einem Neuling das Leben schwer. Kinder lernen anhand konkreter Gegenständ e undmüssen sich Ereignisse undAbläufe vorstellen  können. Je älter wir werden, umso zugänglicher sind wir für Erklärungen, die bildlich oder lediglich in Textform vorliegen. Aber Hand aufs Herz: Oft wären wir frohum ein gutes Beispiel aus unserem Alltag. Vielleicht müssten auch im Inform atikunte rricht vermehrt die drei klassische n  Repräsentationsebenen eingesetzt werd en. Enaktive Ebene:Erfassen von Sachverhalten  durch eigene Handlungen. Ikonische Ebene: Erfasse n von Sachverhalten durch Bilder.  Symbolische Ebene:Erfassen von Sach verhalten durch Symbole (Text ,Zeichen etc.). Abst raktes imwahrsten Sinne des Wortes begreifbar machen, ist kein neues Thema in der Ausbildung. Unterricht und Denken muss nicht unbedingt formal, abstrakt inText, Symbolen und Form eln ablaufen. Viele Themen lassen sich ebenso gut in Bildern visualisier en odergar in aktivem Handeln begreifen.  Auch in der Inform atik lassen  sich die meisten Sachv erhalte anhand einfach er Alltag sanalogien erklären. Meist braucht es nicht mehr als WC-Rollen, Schnur, Papier, Büroklammern und eine zündende Idee. Zur Illustration ein Beispiel aus der Anwenderschulung:Wir allehabe n uns schon über Word geärgert, Stunden damit verbracht, ein langes Dokument zu formatieren. Der effiziente Einsatz von Word ist keineswegs einfach. Auch für Word  gilt es, grund legendeKonzep te zu vermitteln und den Überblick vor  lauter Funktionalitäten  nicht zuverlieren . Inder Regel wird im Unterrich t zuerst einKonzept kurz erläu tert. Wozu brauc ht man  Tabu latoren? Welch e Arten  gibtes? Wie setzt mansie ein? Dann  folgt einekurze Demonstration durch die Kursleiterin:Gespanntschaue n die Kursteilnehmer auf die Leinwand . Die Kursleiterin  blickt auf ihren  Laptop, die Kursleiterin unddie Kursteiln ehmer schauen buchstäblich aneinander vorbei. Mit der Maus zeigt die Kursleiterin, wie man Tabu latoren auswäh lt undplatziert. Nur ist die Benutzerobe rfläche viel zu klein, als dass man den Ausführungen auf der Leinwand folgen könnte. Warum Tabulatoren nicht enaktiv einführen? Abbildung 3 zeigt ein auf den ersten Blick  wohl nur ein Lächel n hervorrufendes Holz-Word, ein Mod ell von Word nach geba ut aus Dachl atten, Vorhangschienen,Wäscheklammern usw. Die Kursleiterin wählt linksoben  einen Tabu lator aus und platziert ihnvon Hand in der Form atierungsleiste. Alles ist  transparent,groß und sofort einsichtig. Tabulatoren können versc hoben werden, die begrenzende Schnur wandert mit. Und selbstverständlich können auch viele andere Konzepte und Bedien ungsschritte andiesem  Holzmodell gezeigt werd en. Das Holzmodell55-lässt sich zu einem eigentlichen Framework für enaktive Demonstration en vieler Aspekte der Office-Palette erweitern .  Abbildung 3: Holz-Word (Idee und Umsetzung: Paul Miotti) Zugege ben: Holz-Word wird im Umfeld der Hochschulinformatik nichtgerade viel zur eigene n Reputation beitragen. Schülerinnen und Informatiklehrer sind aber für konkrete  Anreg ungendankbar. Die Inform atik-Didaktik muss wied er einenSchritt näher zu den  Schulen hin machen . Vielleichtmüsste die näch ste INFOS in einem Schulhaus stattfinden unddie Hälfte der Beiträge von Schüler/innenbestritten werd en? 7  INFOS 2015: Informatik als Schulfach etabliert  In der Vergangenheit haben zwei Techn ologien den Unterricht revolutioniert: Die Erfindung der Wandtafelund Gutenbergs Erfindung des Buchdruckes. Gera de diese beiden Tech nologienkönnten inden nächsten Jahren abgelöst werden. Die Wandtafeldurch  Weiteren twicklu ngenvon Tablet PC’s mit drahtloser Mög lichkeit der Projektion auf die „Wandtafel“, Büche r – im Zusamm enhang mit der Schu le insbesond ere Lehr mittel – durch vernetzte, elektronische Bücher. Daneben ist damit zu rechnen, dass einfache und handliche Sprachübersetzungssysteme die Bedeutung des Frem dsprachenunterrichtes  verändern. GIS-Navigationssysteme werden ganze Teile des Geographieunterrichtes überflüssig machen und auch ande re Fäche rmüssen ihre Inhalte an die neuen Gege ben-56-heiten einer globalen Informationsgesel lschaftanpa ssen. Auf jeden Fall wird aber der  Stellenwert der Informatik immer größer und die Bedienung von Backöfennicht einfacher. Inform atik wird zu einem Schulfac hwie Mathem atik oder Deutsch. Es liegt zu einem großen Teil an uns Informatiklehrpersonen, wie lange und wie steinig der Weg zur endgültigen Etablierungdes Schulfaches Inform atik sein wird. Gehen wir ohne EINbildung auf unsere Kolleginnen in anderen Fäche rn zu und zeige n wir den Nutze nsowohl einer inform atischen Bildung wie auch einer informatisch en AUSbildung auf.  Dannheißt es nicht erst an der INFOS 2025 „Informatik EIN“! Literaturv erzeichnis  [De05a]D enning, P. J.: Is Computer Science Science? Comm unications of the ACM, 2005;  48(4); S. 27-31.  [De05b ] Dennin g, P. J.: Look Beyond Abstra ction to Define Comp uting. Comm unications of the ACM; 2005 ; 48(5); S. 11-12.  [No88] Norman, D. A.: The Design  of Ever ydayThings (Originally  published: The psychology of everydaythings). New  York; Basic Books; 1988.  [Br88] B runer, J. S.: The Process of Education. Harvard University  Press; 1960.  [Sc94] S chwill, A.: Fundam ental Ideas of Com puter Science. EATCSBullet in, 1994 , 53; S.  274-295.  [Be04] Bell, A. E.: Death by UML Fever. ACM  Queue Tomorrow's Computing Today ; March 2004; 2(1); S. 72-80.   [RRR03] Robins, A., Rountree, J., Rountr ee, N.: Learni ng and Teaching Programming: A Review and Discus sion. Computer Science Education; 2003; 13(2); S. 137–172.  [Po05] Potanin, A., Noble, J., Frean, M., Biddle,  R.: Scale-F ree Geom etry in OO-P rogram s. Communications of the ACM, 2005; 48(4); S. 99-103.   Der Autor dankt R. Reichert (Swiss Centre of Innovations in LearningSt. Gallen),  M. Näf (Departement Informatik ETH  Zürich) und M.Lehmann (Universität Bern) für  viele anrege nde Diskussi onen im Zusamm enhang mit diesem  Beitrag. 