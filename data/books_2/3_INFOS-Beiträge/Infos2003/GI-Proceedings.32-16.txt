Aufgabenbeschreibungen für das informatische  Modellieren Henry Herper Fakultät für Informatik Otto-von-Guericke-Universität Magdeburg Postfach 4120 39016 Magdeburg henry@isg.cs.uni-magdeburg.de   Abstract:  Das informatische Modellieren ist eine Leitlinie für den Informatikunterricht. Die Schülerinnen und Schüler erlernen mit Hilfe des Computers komplexe Probleme zu lösen. Dazu ist die Vermittlung von Abstraktions- und Reduktionstechniken erforderlich. Für Projekte, die diese Anforderungen unterstützen, sind spezielle Aufgabenstellungen notwendig. Auch an die Aufgabenbeschreibung werden neue Anforderungen gestellt. Die klassische textuelle Beschreibungsform wird durch multimediale Komponenten ergänzt. Damit wird die Schaffung eines einheitlichen Systemverständnisses unterstützt. Neben der Bereitstellung von Eingabedaten unterstützen multimediale Aufgabenbeschreibungen die Verifikations- und Validierungsphase. Die Erstellung der multimedialen Systembeschreibung kann selbst Bestandteil des informatischen Modellierens sein. 1  Einführung Aufgaben werden im Informatikunterricht in unterschiedlichen Unterrichtssituationen mit verschiedenen didaktischen Zielstellungen eingesetzt. Sie sollen die Schülerinnen und Schüler motivieren, erlerntes Wissen anzuwenden und neue Erfahrungen zu sammeln. Im traditionellen Informatikunterricht sind Aufgabenstellungen häufig Programmieraufgaben. Die Bearbeitung solcher Aufgabenstellungen erfordert in der Regel, einen Algorithmus zu definieren, den Algorithmus in einer Programmiersprache zu codieren, die vorgegebenen Eingabedaten als Parameter einzusetzen und gegebenenfalls das Ergebnis zu bewerten. Diese Form von Aufgabenstellungen ist zur Unterstützung der Einführung und Festigung von Sprachelementen einer Programmiersprache einsetzbar. Die heute verwendeten objekt- oder komponentenorientierten Werkzeuge zur Codierung ermöglichen eine modulare Bearbeitung der Aufgabenstellung. Komplexe Aufgabenstellungen werden vom Lehrenden in kleine Teilaufgaben zerlegt. Die erstellten, kleinen Quelltextmodule werden zu einem größeren Programm zusammengefügt. Der Vorteil dieses Ansatzes besteht darin, Programme zu entwickeln, die motivierend sind und einen „Mehrwert“ erzeugen.  155In der Anfangszeit der Schulinformatik wurde der Informatikunterricht oft als Algorithmier- und Programmierkurs durchgeführt. Aus vorgegebenen Aufgabenstellungen wurden Struktogramme erstellt und diese mit einer Programmiersprache codiert. Der Schwerpunkt des Unterrichtes lag in der Entwicklung von Fertigkeiten zur Beherrschung einer Programmiersprache. Bei der Diskussion des Schulcurriculums wurde die Frage gestellt, ob die Vermittlung einer Programmiersprache überhaupt allgemeinbildend ist und damit in die schulische Ausbildung gehört. Im Jahr 2000 veröffentlichte die Gesellschaft für Informatik (GI) e.V. Empfehlungen für ein Gesamtkonzept zur Informatischen Bildung an allgemein bildenden Schulen. Darin wurden die Anforderungen an einen modernen Informatikunterricht formuliert. Eine wesentliche Leitlinie dieses Konzeptes ist das informatische Modellieren.  An das Modellieren im Informatikunterricht werden folgende Anforderungen gestellt: „Im Informatikunterricht bedeutet ‚Modellierung’ im Wesentlichen die Abgrenzung eines für den jeweiligen Zweck relevanten Ausschnittes der Erfahrungswelt, die Herausarbeitung seiner wichtigen Merkmale unter Vernachlässigung der unwichtigen sowie seiner Beschreibung und Strukturierung mithilfe spezieller Techniken aus der Informatik.“[GI00] Damit umfasst das informatische Modellieren alle Phasen des klassischen Softwarelebenszyklus. Die Schülerinnen und Schüler sollen befähigt werden, mit den Hilfsmitteln der Informatik Probleme zu lösen.  Für das informatische Modellieren sind die klassischen Programmieraufgaben nicht ausreichend, da die Phase der Systemanalyse und Abstraktion schon im Vorfeld mit der Formulierung der Aufgabenstellung vorgenommen wurde. Es sind Aufgabenstellungen notwendig, die den Schülerinnen und Schülern die Durchführung einer eigenen Analyse- und Abstraktionsphase ermöglichen. Die textuelle Beschreibungsform der Aufgabenstellung ist nur noch ein Bestandteil der Systembeschreibung. Sollen die Schülerinnen und Schüler die Analysephase selbst durchführen, so müssen auch die notwendigen Informationen zur Verfügung gestellt werden. Neben eigenen Beobachtungen sind multimediale Systembeschreibungen, wie in Abbildung 1 dargestellt, eine geeignete Form. 2  Aufgabenklassen Für unterschiedliche Unterrichtssituationen werden verschiedene Aufgabentypen benötigt. Diese unterscheiden sich u.a. bezüglich ihrer Komplexität, der Applikationsgebiete, des Detailliertheitsgrades und der Beschreibungsformen. Typische Einsatzgebiete im Unterricht sind:  - Aufgaben als Motivation zur Einführung neuer Komponenten oder Methoden, - Aufgaben zur Festigung bzw. zum selbständigen Problemlösen unter Anleitung im Unterricht oder als Hausaufgaben, - Aufgaben zur Leistungskontrolle und –bewertung als Klausur oder Prüfungsaufgaben und  - Aufgaben zur Durchführung komplexer Unterrichtsprojekte. 156In diesem Beitrag werden schwerpunktmäßig die Aufgaben zur Durchführung komplexer Unterrichtsprojekte behandelt. Die in der Ausbildung eingesetzten Aufgaben lassen sich verschiedenen Informatikbereichen zuordnen. Eine mögliche Klassifikation wird in den folgenden Abschnitten vorgestellt. Dabei sind zur Bearbeitung der Aufgabenstellungen häufig fächer- und bereichsübergreifende Lösungsansätze notwendig. 2.1 Datenbanken – Datenverwaltung – Datenverarbeitung Mit dieser Aufgabenklasse werden die Schülerinnen und Schüler mit dem Aspekt der Datenverarbeitung als Teilgebiet der Informatik vertraut gemacht. Viele Aspekte der Schulinformatik können am Beispiel der Datenverwaltung veranschaulicht werden. Die Datenverarbeitung lässt sich auf verschiedenen Niveaustufen vermitteln. In der einfachsten Form werden Daten über Funktionen des verwendeten Werkzeugs auf externen Datenträgern verwaltet. Dies kann zum Beispiel das Speichern oder Laden eines Fensterinhaltes mit einer vom System zur Verfügung gestellten Methode sein. In der nächsten Stufe erlernen die Schülerinnen und Schüler die Grundlagen der Datenverarbeitung indem die Grundfunktionen für die Dateiarbeit eingeführt und mit Hilfe von Programmierwerkzeugen codiert werden.  Datenbanksysteme, die heute auch für den schulischen Einsatz zur Verfügung stehen, ermöglichen die Einführung in die Arbeit mit relationalen Datenbanken. Datenstrukturen können abstrakt und implementationsabhängig eingeführt werden. Durch die Arbeit mit Datenbankabfragesprachen können verschiedene informatische Inhalte vermittelt werden. Zur Bearbeitung der Aufgaben ist es erforderlich, dass die Schülerinnen und Schüler das in der Datenbank zu verwaltende System verstehen. Viele Anwendungsaufgaben lassen sich aus der Erfahrungswelt der Schülerinnen und Schüler ableiten. Das Anwendungsgebiet Datenbanken bietet gute Voraussetzungen für die Einführung in die objektorientierte Modellierung. Ein geeignetes Mittel zur abstrakten Beschreibung der Modelle ist die Sprache UML. Die Daten und die daraus ableitbaren Datenstrukturen können in unterschiedlichen Formen vorliegen. Auch das Erfassen  und Aufbereiten realer Daten ist möglich. An diesen Beispielen lassen sich auch die Aspekte des Datenschutzes wiederholen. Beispiele für Aufgaben und Lösungen aus dem Bereich der statischen objektorientierten Modellierung werden in [BR00] diskutiert.  In diese Klasse können auch Aufgaben zur Verarbeitung von Daten eingeordnet werden. Ein Beispiel dafür ist die kryptographische Transformation einer Datei in eine andere.  1572.2 Modellbildung und Simulation Eine zweite große Aufgabenklasse ist die Modellbildung und Simulation. In diese Klasse können auch Berechnungen aus verschiedenen Anwendungsgebieten eingeordnet werden. Es wird ein mathematisches Modell erstellt und entsprechend über eine Algorithmierung in einer Programmiersprache codiert. Prognosemodelle sind eine zweite Aufgabengruppe. Sie werden in der Schulinformatik zur Einführung und zum Festigen von Iterationen und Rekursionen eingesetzt. In dieser Niveaustufe sind die Aufgaben in der Regel in Textform vorgegeben und beschreiben das zu modellierende System stark abstrahiert. Die Modellbildung und Simulation gewinnt im gesamten naturwissenschaftlichen Unterricht an Bedeutung. Die von diesen Fächer geschaffenen Vorleistungen können in den Informatikunterricht integriert werden. Für die Durchführung von komplexen Unterrichtsprojekten sind Aufgaben aus diesem Bereich besonders geeignet. Es können reale Systeme modelliert werden, die aus der Erfahrungswelt der Schülerinnen und Schüler kommen. Ein einfaches Beispiel ist das Modell eines Getränkeautomaten. An diesem Beispiel können alle Phasen des informatischen Modellierens, von der Systemanalyse über die Codierung bis zur Resultatbewertung durchgeführt werden. Für die Phasen der Systemdatenerfassung und -aufbereitung ist eine enge Verknüpfung mit dem Gebiet der Datenverwaltung und -verarbeitung möglich. Für alle Systeme, die zeitdynamische Abläufe nachbilden, sind multimediale Beschreibungen (Videoaufzeichnungen) besonders geeignet. Die Schülerinnen und Schüler erlernen, ein System zu analysieren und durch ein Computermodell abzubilden. Grundfertigkeiten in der Abstraktion können herausgebildet werden. Für das zu simulierende System können Objekte klassifiziert und beschrieben werden. Als Beschreibungsmittel kann z.B. die Sprache UML verwendet werden. Simulationsmodelle bieten weiterhin den Vorteil, dass gezielte Experimentierstrategien erarbeitet und am Modell erprobt werden können. Die gewonnenen Ergebnisse werden kritisch bewertet und mit dem Verhalten des realen Systems verglichen. 1582.3 Steuerung von Geräten Diesem Bereich sind die Aufgaben zuzuordnen, die Informatiksysteme als Verbindung externer technischer Systeme mit einem Computer beschreiben. Eine Möglichkeit ist die Auswertung externer Datenquellen, wie z.B. einer Wetterstation. Für die Steuerung von Geräten bietet sich das System Lego-Dacta an. Neben den Aspekten der technischen Informatik lassen sich am Beispiel dieser Modelle auch die Grundprinzipien der Objektorientierung einführen [DR01]. Die Bearbeitung von Aufgaben aus diesem Gebiet hat eine hohe Anschaulichkeit, erfordert jedoch einen erheblichen technischen Aufwand. Die Verwendung von Lego-Dacta im Unterricht hat gezeigt, dass bei den wenigen zur Verfügung stehenden Unterrichtsstunden die Arbeit auf die Entwicklung der informatischen Komponenten beschränkt bleibt. Für den vollständigen Bau der Roboterfahrzeuge ist die Unterrichtszeit in der Regel nicht ausreichend. Am Beispiel der Entwicklung von Steuerungen können die Schülerinnen und Schüler alle Schritte des informatischen Modellierens erlernen und am Gesamtsystem erkennen, dass die Software nur eine Systemkomponente ist.  Aufgabenstellungen für diesen Bereich sind in der Regel sehr abstrakt formuliert. So kann z.B. gefordert werden "Entwickle einen Roboter, der sich von einem Punkt zum anderen bewegt und dabei einer Linie folgt." Gemeinsam mit den Schülerinnen und Schülern wird eine umfassende Analyse durchgeführt, welche Merkmale und Eigenschaften ein Roboter haben muss, um die geforderte Aufgabe zu erfüllen. Bei der Bearbeitung dieser Aufgabenstellungen sind die realen Systeme ständig verfügbar. Damit wird eine hohe Anschaulichkeit gewährleistet. 2.3 Systemerweiterungen und Dienstprogramme In diese Klasse werden die Aufgaben eingeordnet, die z.B. als Dienstprogramme im Computer eingesetzt werden. Es wird in der Regel ein klassischer Softwareentwicklungszyklus durchgeführt. Diese Aufgabenstellungen sind in der Regel nicht fächerübergreifend, sondern beschränken sich auf informatische Inhalte. Klassische Aufgaben aus diesem Bereich sind der Entwurf eigener Editoren oder Interpreter.  Mit der Vernetzung von Computersystemen ergeben sich auch aus diesem Bereich neue Aufgabenstellungen. Dabei können neben dem informatischen Modellieren auch Kenntnisse auf dem Gebiet der Netzwerke vermittelt werden. 3  Multimediale Systembeschreibungen Für komplexe Aufgabenstellungen, die sich zur Einführung des informatischen Modellierens eignen, sind einige Anforderungen zu beachten: - die Systembeschreibung muss in einer für die Schüler verständlichen Form vorliegen, - es muss eine klare Zielstellung für die Arbeit vorgegeben werden, 159- das gesamte Projekt muss innerhalb einer begrenzten Bearbeitungszeit lösbar sein, - das Modell muss mit den zur Verfügung stehenden Sprachelementen implementierbar sein, - die Ergebnisse sollen aus dem Erfahrungshorizont der Schüler verifizierbar und validierbar sein und - die Lösung der Aufgabe schafft „Mehrwert“. Vor allem zur Bearbeitung von Aufgaben aus den Gebieten Datenbanken und Simulation ist ein umfassendes Verständnis des zu modellierenden Systems erforderlich. Eine klassische textuelle Aufgabenstellung dient nur unzureichend zur Entwicklung eines Systemverständnisses. Die in den Lehrbüchern häufig verwendeten Beschreibungsformen enthalten in der Regel eine vollständige Systemanalyse. Die Abgrenzung und Abstraktion des Systems sowie die Erfassung der Eingabedaten ist mit der Formulierung der Aufgabenstellung bereits abgeschlossen. Da aber genau diese Phasen einen Schwerpunkt bei der Lösung von Problemen in der Informatik darstellen, sollten die notwendigen Techniken und Vorgehensweisen auch im Informatikunterricht vermittelt werden.  Das Ziel des zu bearbeitenden Projektes und die zu realisierenden Funktionen können in textueller Form vorgegeben werden. Durch diese Ziele wird die Struktur und Funktion des Modells und der notwendige Abstraktionsprozess definiert. Anschließend wird eine Abgrenzung des zu modellierenden Systems durch die Beschreibung der Umweltschnittstellen vorgenommen. Voraussetzung dafür ist ein einheitliches Systemverständnis bei den bearbeitenden Schülerinnen und Schülern. Dies kann durch die Anwendung multimedialer Systembeschreibungen unterstützt werden.  Informatisches Modellieren wird häufig verteilt oder in Gruppenarbeit realisiert. Für das Problemlösen in Gruppen ist di e Kommunikation zwischen den beteiligten Schülerinnen und Schülern notwendig. Die Koordinierung und Moderation der Projekte ist sehr anspruchsvoll und erfordert viel Erfahrung. Multimediale Systembeschreibungen schaffen eine einheitliche Diskussionsgrundlage und unterstützen damit den Kommunikationsprozess. Im Rahmen der Systemanalyse wird festgelegt, welche Eingabedaten mit welcher Genauigkeit erfasst werden müssen und welche Resultate ermittelt werden sollen. Die Erfassung und Aufbereitung der Eingabedaten wird Bestandteil des Projektes. Im Ergebnis dieser Phase werden Daten- und Objektstrukturen für ein abstraktes Modell abgeleitet. Vor allem bei der Modellierung dynamischer Systeme können Eingabedaten aus Videoaufzeichnungen gewonnen werden. Die Erfassung der Systemdaten und der im System ablaufenden Prozesse sowie deren Aufbereitung beanspruchen in komplexen Softwareentwicklungen einen erheblichen Teil des Gesamtaufwandes. Die Qualität der erfassten Daten und Prozesse entscheidet wesentlich über die Qualität des zu entwickelnden Systems. Daher ist es zweckmäßig, die Systemanalyse und Eingabedatenerfassung stärker in die Ausbildung zu integrieren. 160Bei vielen Aufgabenstellungen ist es günstig, wenn ein reales System zur Verfügung steht, das im Rahmen des Modellierungsprojektes besichtigt werden kann, da so ein einheitliches Systemverständnis gesichert wird. Kennen die Auszubildenden das reale System (bzw. ein ähnliches System) nicht, so können Videoaufzeichnungen zur Vermittlung des Systemverständnisses eingesetzt werden. Derartige Videoaufnahmen sollten die für die Modellierung relevanten Abläufe in wenigen Zyklen zeigen. Für kurze Prozesse sind Sequenzen von 5 bis 10 Sekunden ausreichend. Diese Videoaufzeichnungen werden durch textuelle Informationen ergänzt, die z.B. Zustände beschreiben, die nicht durch Videodaten erfassbar sind. Die Aufzeichnung der Videoaufnahmen ist ein erster Abstraktionsschritt, da hier die für die Modellbildung wesentlichen Systemkomponenten vorgestellt werden. Haben die Schülerinnen und Schüler ein entsprechendes Systemverständnis entwickelt, so kann mit der Systemanalyse begonnen werden.  Eine zweite Aufgabenstellung für Projektarbeit in Arbeitsgruppen ist die Erstellung einer multimedialen Systembeschreibung. Es wird ein reales System analysiert und dabei werden die notwendigen Eingabedaten in ihren unterschiedlichen Repräsentationsformen zugesammentragen. Diese Daten werden zu einer Systemdokumentation zusammengestellt. Aus diesen Dokumentationen wird eine Aufgabensammlung erstellt. Die für die Systemanalyse erfassten Videodaten unterscheiden sich von denen, die zum Systemverständnis erfasst wurden. Die einzelnen Videosequenzen sind wesentlich länger. Es werden die Ergebnisse eines Abstraktionsprozesses, der die Auswahl der aufzuzeichnenden Objekte und die Dauer der Aufzeichnung bestimmt, berücksichtigt. Um Prozesse bei der Datenaufbereitung besser analysieren zu können, werden Aufnahmedatum und Aufnahmezeit mit erfa sst. So können aus visuellen Daten Zeitaufnahmen erstellt werden. Voraussetzung ist, dass alle notwendigen Prozesse über einen repräsentativen Zeitraum erfasst worden sind.  Geometrische Informationen können aus Zeichnungen entnommen werden. Dabei kann der gewählte Abstraktionsgrad durch Hervorhebung der modellrelevanten Zeichnungskomponenten veranschaulicht werden.  161 Abbildung 1 Komponenten einer multimedialen Systembeschreibung Besonders bei der Erfassung visueller Daten, in denen auch Personen vorkommen, sind die rechtlichen Aspekte zu berücksichtigen. Die Schülerinnen und Schüler können mit den rechtlichen Aspekten der Datenerfassung vertraut gemacht werden.  4  Beispiel: Simulation einer Straßenkreuzung Die Verwendung einer multimedialen Aufgabenbeschreibung wird am Beispiel der Simulation einer Straßenkreuzung vorgestellt. Es werden verschiedene Möglichkeiten des Einsatzes der multimedialen Aufgabenbeschreibungen diskutiert, die entsprechend der zur Verfügung stehenden Zeit und der Vorkenntnisse der Schülerinnen und Schüler umgesetzt werden können. Das Ziel der Untersuchungen besteht darin, mit Hilfe eines Simulationsmodells festzustellen, ob für einen Verkehrsknoten ein Kreisverkehr, eine Ampelsteuerung oder eine Kreuzung mit Vorrangstrassen die beste Lösung darstellt. Die beteiligten Schülerinnen und Schüler kennen Straßenkreuzungen und die dort ablaufenden Prozesse. Die reale, nachzubildende Kreuzung kann besichtigt werden. Das Layout der Kreuzung liegt in der Regel als Stadtplan vor. Ergänzend besteht die Möglichkeit, ein physisches Modell der Kreuzung zu erstellen und z.B. eine reale Ampelsteuerung zu implementieren. Der Verkehrsstrom kann durch direkte Beobachtungen erfasst werden. Hier erweist es sich als sinnvoll, parallel Videoaufzeichnungen durchzuführen, um die Daten anschließend unter verschiedenen Aspekten auswerten zu können. Als Ersatz für die direkte Beobachtung können Videoaufzeichnungen ebenso eingesetzt werden. Weiterhin kann mit Videoaufzeichnungen gezeigt werden, dass sich die Verkehrsbelastung zu unterschiedlichen Tageszeiten ändert. Weitere Informationen können aus Fotos bzw. dem Stadtplan entnommen werden.  162Mit Hilfe des Stadtplanes lässt sich die Abgrenzung des Systems demonstrieren. Für die Simulation wird die zu untersuchende Kreuzung allein betrachtet. Gemeinsam mit den Schülerinnen und Schülern werden die Umweltschnittstellen erarbeitet. Für das vorgestellte Beispiel werden die Umweltschnittstellen über die Zeitabstände der eintreffenden Objekte definiert.   Abbildung 2: Kennzeichnung von Modellbereichen im realen System In der Analysephase werden die für die Bearbeitung der Aufgabenstellung relevanten Objekte identifiziert und klassifiziert. Für das vorliegende Beispiel sind dies Straßenbahnen, LKW, PKW, Radfahrer und Fußgänger. Weiterhin muss festgelegt werden, welche Eigenschaften für Objekte dieser Klasse berücksichtigt werden müssen. Es kann z.B. erforderlich sein, die Länge und Geschwindigkeit der Objekte zu berücksichtigen. Anschließend wird ermittelt, welche Funktionen die Objekte ausführen können und welche dieser Funktionen für die Abbildung im Modell relevant sind. Entsprechend der im Video erfassten Eingabedaten können Analysen über das Verhalten der einzelnen Objekte durchgeführt werden.  Ein weiteres im System nachzubildendes Objekt ist der Verkehrsknoten selbst. Ihm werden geometrische Informationen zugeordnet. Diese können aus einem vorliegenden Layout, z.B. dem Stadtplan, entnommen werden. Informationen über Ampelsteuerungen können durch Beobachtungen gewonnen werden. Die für das System geltenden Vorfahrtsregeln werden gemeinsam mit den Schülerinnen und Schülern erarbeitet. Bei der Auswertung der Videodaten wird erkennbar, dass die Verhaltensweise der einzelnen Objekte nur schwer durch Algorithmen beschreibbar ist. Nur durch Abstraktion können die Verhaltensweisen nachgebildet werden. Nach Abschluss der Analysephase können den realen Systemelementen die Modellelemente und Sprachelemente des zur Codierung verwendeten Systems zugeordnet werden. Im Abbildung 3 ist dies am Beispiel der Fahrzeuge dargestellt. Die Codierung erfolgt in einer geeigneten Simulationssprache.  163 Abbildung 3 Zuordnung der Komponenten Wird in der ersten Phase das reale System simuliert, so können die Videodaten zur Verifikation und Validierung genutzt werden. Besonders deutlich wird dies, wenn zur Resultatdatenauswertung zusätzlich ein Animationsmodell verwendet wird.  Der Programmtest ist eine wesentliche Phase der informatischen Modellierung und sollte nicht mit der Codierungs- oder Experimentierphase vermischt werden. Die Schülerinnen und Schüler werden dazu befähigt, das implementierte Modell systematisch zu testen, die Testergebnisse zu protokollieren und ggf. Schritte zur Verbesserung des Modells durchzuführen. Vor allem Simulationsmodelle bieten die Möglichkeit, eine Experimentierphase anzuschließen.  Projektbegleitend ist eine Dokumentation zu erstellen, in der auch die Ergebnisse kritisch bewertet werden. Eine Dokumentationskomponente kann ein Hilfesystem sein, welches für das Computermodell entwickelt wird.  5  Schlussfolgerungen Das „Informatische Modellieren“ gehört zu den anspruchsvollsten Themen im Informatikunterricht. Die Schülerinnen und Schüler lernen alle Phasen der Entwicklung von Informatiksystemen kennen. Ein wesentlicher Unterschied zu den Übungsaufgaben besteht darin, dass die Bearbeitung des Projektes sich über einen längeren Zeitraum erstreckt. Wird ein Projekt im Klassenverband bearbeitet, so muss zu Beginn einer Unterrichtsstunde ein einheitliches Ausgangsniveau geschaffen werden. Bei vielen Schülerinnen und Schülern wird bei der Bearbeitung komplexer Projekte der Ehrgeiz geweckt, zwischen den Unterrichtsstunden selbständig an der Problemlösung weiterzuarbeiten. Aufgabe des Lehrenden ist es, die Diskussion dieser Lösungsansätze zu moderieren und einen gemeinsamen Lösungsschritt zu erarbeiten.  164Mit dem informatischen Modellieren erkennen die Schülerinnen und Schüler, dass das Codieren des Programms nur ein Bestandteil der Lösung der Aufgabenstellung ist. Eine sorgfältige Durchführung der Analyse- und Spezifikationsphase verringert den Aufwand in der Codierungs- und Testphase erheblich. Die Auswahl einer geeigneten Problemstellung ist eine Voraussetzung für die erfolgreiche Einführung in das informatische Modellieren. Der Lehrende sollte diese Aufgabenstellung vor Beginn des Unterrichtsabschnittes vollständig bearbeitet haben, da Erfahrungen gezeigt haben, dass der Zeitaufwand zur Bearbeitung häufig unterschätzt wird. Die Schülerinnen und Schüler müssen eine geeignete Abstraktion und Abgrenzung für die zu bearbeitenden Problemstellungen erlernen. Zur Überprüfung des erstellten Modells ist es erforderlich, eine Implementierung auf einem Computer vorzunehmen. Dies ist auch zum Erhalt der Motivation notwendig.  Die Verwendung multimedialer Aufgabenbeschreibungen ist geeignet, bei den Schülerinnen und Schülern ein einheitliches Systemverständnis herauszubilden. Das System kann aus unterschiedlichen Blickwinkeln gezeigt werden. Die Erstellung einer multimedialen Aufgabenbeschreibung kann als Bestandteil der Analysephase in den Prozess des informatischen Modellierens integriert werden. In der Testphase ist die Aufgabenbeschreibung ein geeignetes Validierungshilfsmittel. Bei der Bearbeitung des Projektes erkennen die Schülerinnen und Schüler die Notwendigkeit, neben umfassenden Kenntnissen auf dem Gebiet der Informatik auch Kenntnisse über das Anwendungsgebiet der Aufgabenstellung zu besitzen. Literaturverzeichnis [Br00]  Brinda, T.: Objektorientiertes Modellieren, LOG IN 20 (2000), Heft 2 Seite 39-49.  [DR01]  Dietzel, R.; Rinkens, T.: Eine Einführung in die Objektorientierung mit Lego Mindstorms Robotern, in: Informatikunterricht und Medienbildung, INFOS 2001 Proceedings, Seite 193-199, Paderborn, 2001.  [GI00] Gesellschaft für Informatik (GI) e.V., Empfehlungen für ein Gesamtkonzept zur Informatischen Bildung an allgemein bildenden Schulen, Bonn, 2000.  [He22] Herper, H.: Multimediale Modellbeschreibungen für die Ausbildung, in: Anwendungen der Produktionstechnik in Simulation und Logistik, SCS-Europe BVBA, 2002, Seite 169 – 178.  [Koe01] Königstein 2001. Fachdidaktische Gespräche zur Informatik an der TU Dresden, Arbeitsgruppe: Modellbildung im Informatikunterricht. Königstein, 14.-16.03.2001.  [Sp00]  Spolwig, S.: Modellieren und Programmieren, LOG IN 20 (2000) Heft 2 Seite 53-59. 165Aufgabenbeschreibungen für das informatische   Modellieren  Henry Herper  Fakultät für Informatik  Otto-von-Guericke-Universität Magdeburg  Postfach 4120  39016 Magdeburg  henry@isg.cs.uni-magdeburg.de      Abstract:  Das informatische Modellieren ist eine Leitlinie für den  Informatikunterricht. Die Schülerinnen und Schüler erlernen mit Hilfe des  Computers komplexe Probleme zu lösen. Dazu ist die Vermittlung von Abstraktionsund Reduktionstechniken erforderlich. Für Projekte, die diese Anforderungen unterstützen, sind spezielle Aufgabenstellungen notwendig. Auch an die Aufgabenbeschreibung werden neue Anforderungen gestellt. Die klassische textuelle Beschreibungsform wird durch multimediale Komponenten ergänzt.  Damit wird die Schaffung eines einheitlichen Systemverständnisses unterstützt.  Neben der Bereitstellung von Eingabedaten unterstützen multimediale Aufgabenbeschreibungen die Verifikationsund Validierungsphase. Die Erstellung der multimedialen Systembeschreibung kann selbst Bestandteil des informatischen  Modellierens sein.  1  Einführung  Aufgaben werden im Informatikunterricht in unterschiedlichen Unterrichtssituationen  mit verschiedenen didaktischen Zielstellungen eingesetzt. Sie sollen die Schülerinnen  und Schüler motivieren, erlerntes Wissen anzuwenden und neue Erfahrungen zu  sammeln. Im traditionellen Informatikunterricht sind Aufgabenstellungen häufig Programmieraufgaben. Die Bearbeitung solcher Aufgabenstellungen erfordert in der Regel, einen Algorithmus zu definieren, den Algorithmus in einer Programmiersprache zu codieren, die vorgegebenen Eingabedaten als Parameter einzusetzen und gegebenenfalls das Ergebnis zu bewerten. Diese Form von Aufgabenstellungen ist zur Unterstützung der Einführung und Festigung von Sprachelementen einer Programmiersprache einsetzbar. Die heute verwendeten objektoder komponentenorientierten Werkzeuge zur Codierung ermöglichen eine modulare Bearbeitung der Aufgabenstellung. Komplexe Aufgabenstellungen werden vom Lehrenden in kleine Teilaufgaben zerlegt. Die erstellten, kleinen Quelltextmodule  werden zu einem größeren Programm zusammengefügt. Der Vorteil dieses Ansatzes  besteht darin, Programme zu entwickeln, die motivierend sind und einen „Mehrwert“ erzeugen.   155In der Anfangszeit der Schulinformatik wurde der Informatikunterricht oft als  Algorithmierund Programmierkurs durchgeführt. Aus vorgegebenen Aufgabenstellungen wurden Struktogramme erstellt und diese mit einer Programmiersprache codiert. Der Schwerpunkt des Unterrichtes lag in der Entwicklung von Fertigkeiten zur Beherrschung einer Programmiersprache. Bei der Diskussion des Schulcurriculums wurde die Frage gestellt, ob die Vermittlung einer Programmiersprache überhaupt allgemeinbildend ist und damit in die schulische Ausbildung gehört. Im Jahr 2000 veröffentlichte die Gesellschaft für Informatik (GI) e.V. Empfehlungen für ein Gesamtkonzept zur Informatischen Bildung an allgemein bildenden Schulen. Darin wurden die Anforderungen an einen modernen Informatikunterricht formuliert. Eine wesentliche Leitlinie dieses Konzeptes ist das  informatische Modellieren.   An das Modellieren im Informatikunterricht werden folgende Anforderungen gestellt:  „Im Informatikunterricht bedeutet ‚Modellierung’ im Wesentlichen die Abgrenzung eines für den jeweiligen Zweck relevanten Ausschnittes der Erfahrungswelt, die Herausarbeitung seiner wichtigen Merkmale unter Vernachlässigung der unwichtigen sowie seiner Beschreibung und Strukturierung mithilfe spezieller Techniken aus der Informatik.“[GI00] Damit umfasst das informatische Modellieren alle Phasen des  klassischen Softwarelebenszyklus. Die Schülerinnen und Schüler sollen befähigt werden,  mit den Hilfsmitteln der Informatik Probleme zu lösen.   Für das informatische Modellieren sind die klassischen Programmieraufgaben nicht  ausreichend, da die Phase der Systemanalyse und Abstraktion schon im Vorfeld mit der Formulierung der Aufgabenstellung vorgenommen wurde. Es sind Aufgabenstellungen notwendig, die den Schülerinnen und Schülern die Durchführung einer eigenen Analyseund Abstraktionsphase ermöglichen. Die textuelle Beschreibungsform der Aufgabenstellung ist nur noch ein Bestandteil der Systembeschreibung. Sollen die  Schülerinnen und Schüler die Analysephase selbst durchführen, so müssen auch die  notwendigen Informationen zur Verfügung gestellt werden. Neben eigenen Beobachtungen sind multimediale Systembeschreibungen, wie in Abbildung 1 dargestellt, eine geeignete Form.  2  Aufgabenklassen  Für unterschiedliche Unterrichtssituationen werden verschiedene Aufgabentypen  benötigt. Diese unterscheiden sich u.a. bezüglich ihrer Komplexität, der  Applikationsgebiete, des Detailliertheitsgrades und der Beschreibungsformen. Typische Einsatzgebiete im Unterricht sind:   Aufgaben als Motivation zur Einführung neuer Komponenten oder Methoden,  Aufgaben zur Festigung bzw. zum selbständigen Problemlösen unter Anleitung  im Unterricht oder als Hausaufgaben,  Aufgaben zur Leistungskontrolle und –bewertung als Klausur oder  Prüfungsaufgaben und   Aufgaben zur Durchführung komplexer Unterrichtsprojekte.  156In diesem Beitrag werden schwerpunktmäßig die Aufgaben zur Durchführung  komplexer Unterrichtsprojekte behandelt. Die in der Ausbildung eingesetzten Aufgaben lassen sich verschiedenen Informatikbereichen zuordnen. Eine mögliche Klassifikation wird in den folgenden Abschnitten vorgestellt. Dabei sind zur Bearbeitung der Aufgabenstellungen häufig fächerund bereichsübergreifende Lösungsansätze notwendig.  2.1 Datenbanken – Datenverwaltung – Datenverarbeitung  Mit dieser Aufgabenklasse werden die Schülerinnen und Schüler mit dem Aspekt der  Datenverarbeitung als Teilgebiet der Informatik vertraut gemacht. Viele Aspekte der Schulinformatik können am Beispiel der Datenverwaltung veranschaulicht werden. Die Datenverarbeitung lässt sich auf verschiedenen Niveaustufen vermitteln. In der  einfachsten Form werden Daten über Funktionen des verwendeten Werkzeugs auf  externen Datenträgern verwaltet. Dies kann zum Beispiel das Speichern oder Laden eines Fensterinhaltes mit einer vom System zur Verfügung gestellten Methode sein. In der nächsten Stufe erlernen die Schülerinnen und Schüler die Grundlagen der Datenverarbeitung indem die Grundfunktionen für die Dateiarbeit eingeführt und mit Hilfe von Programmierwerkzeugen codiert werden.   Datenbanksysteme, die heute auch für den schulischen Einsatz zur Verfügung stehen,  ermöglichen die Einführung in die Arbeit mit relationalen Datenbanken. Datenstrukturen  können abstrakt und implementationsabhängig eingeführt werden. Durch die Arbeit mit Datenbankabfragesprachen können verschiedene informatische Inhalte vermittelt werden. Zur Bearbeitung der Aufgaben ist es erforderlich, dass die Schülerinnen und Schüler das in der Datenbank zu verwaltende System verstehen. Viele Anwendungsaufgaben lassen sich aus der Erfahrungswelt der Schülerinnen und Schüler ableiten.  Das Anwendungsgebiet Datenbanken bietet gute Voraussetzungen für die Einführung in  die objektorientierte Modellierung. Ein geeignetes Mittel zur abstrakten Beschreibung  der Modelle ist die Sprache UML. Die Daten und die daraus ableitbaren Datenstrukturen können in unterschiedlichen Formen vorliegen. Auch das Erfassen  und Aufbereiten realer Daten ist möglich. An diesen Beispielen lassen sich auch die Aspekte des Datenschutzes wiederholen. Beispiele für Aufgaben und Lösungen aus dem Bereich der statischen objektorientierten Modellierung werden in [BR00] diskutiert.   In diese Klasse können auch Aufgaben zur Verarbeitung von Daten eingeordnet werden.  Ein Beispiel dafür ist die kryptographische Transformation einer Datei in eine andere.   1572.2 Modellbildung und Simulation  Eine zweite große Aufgabenklasse ist die Modellbildung und Simulation. In diese Klasse  können auch Berechnungen aus verschiedenen Anwendungsgebieten eingeordnet werden. Es wird ein mathematisches Modell erstellt und entsprechend über eine Algorithmierung in einer Programmiersprache codiert. Prognosemodelle sind eine zweite Aufgabengruppe. Sie werden in der Schulinformatik zur Einführung und zum Festigen von Iterationen und Rekursionen eingesetzt. In dieser Niveaustufe sind die  Aufgaben in der Regel in Textform vorgegeben und beschreiben das zu modellierende  System stark abstrahiert. Die Modellbildung und Simulation gewinnt im gesamten naturwissenschaftlichen Unterricht an Bedeutung. Die von diesen Fächer geschaffenen Vorleistungen können in den Informatikunterricht integriert werden.  Für die Durchführung von komplexen Unterrichtsprojekten sind Aufgaben aus diesem  Bereich besonders geeignet. Es können reale Systeme modelliert werden, die aus der Erfahrungswelt der Schülerinnen und Schüler kommen. Ein einfaches Beispiel ist das  Modell eines Getränkeautomaten. An diesem Beispiel können alle Phasen des  informatischen Modellierens, von der Systemanalyse über die Codierung bis zur Resultatbewertung durchgeführt werden. Für die Phasen der Systemdatenerfassung und -aufbereitung ist eine enge Verknüpfung mit dem Gebiet der Datenverwaltung und -verarbeitung möglich. Für alle Systeme, die zeitdynamische Abläufe nachbilden, sind multimediale Beschreibungen (Videoaufzeichnungen) besonders geeignet. Die Schülerinnen und Schüler erlernen, ein System zu analysieren und durch ein Computermodell abzubilden. Grundfertigkeiten in der Abstraktion können herausgebildet werden. Für das zu simulierende System können Objekte klassifiziert und beschrieben werden. Als Beschreibungsmittel kann z.B. die Sprache UML verwendet werden.  Simulationsmodelle bieten weiterhin den Vorteil, dass gezielte Experimentierstrategien  erarbeitet und am Modell erprobt werden können. Die gewonnenen Ergebnisse werden kritisch bewertet und mit dem Verhalten des realen Systems verglichen.  1582.3 Steuerung von Geräten  Diesem Bereich sind die Aufgaben zuzuordnen, die Informatiksysteme als Verbindung  externer technischer Systeme mit einem Computer beschreiben. Eine Möglichkeit ist die Auswertung externer Datenquellen, wie z.B. einer Wetterstation. Für die Steuerung von Geräten bietet sich das System Lego-Dacta an. Neben den Aspekten der technischen Informatik lassen sich am Beispiel dieser Modelle auch die Grundprinzipien der Objektorientierung einführen [DR01]. Die Bearbeitung von Aufgaben aus diesem Gebiet  hat eine hohe Anschaulichkeit, erfordert jedoch einen erheblichen technischen Aufwand.  Die Verwendung von Lego-Dacta im Unterricht hat gezeigt, dass bei den wenigen zur Verfügung stehenden Unterrichtsstunden die Arbeit auf die Entwicklung der informatischen Komponenten beschränkt bleibt. Für den vollständigen Bau der Roboterfahrzeuge ist die Unterrichtszeit in der Regel nicht ausreichend. Am Beispiel der Entwicklung von Steuerungen können die Schülerinnen und Schüler alle Schritte des informatischen Modellierens erlernen und am Gesamtsystem erkennen, dass die Software nur eine Systemkomponente ist.   Aufgabenstellungen für diesen Bereich sind in der Regel sehr abstrakt formuliert. So  kann z.B. gefordert werden "Entwickle einen Roboter, der sich von einem Punkt zum anderen bewegt und dabei einer Linie folgt." Gemeinsam mit den Schülerinnen und Schülern wird eine umfassende Analyse durchgeführt, welche Merkmale und Eigenschaften ein Roboter haben muss, um die geforderte Aufgabe zu erfüllen. Bei der Bearbeitung dieser Aufgabenstellungen sind die realen Systeme ständig verfügbar. Damit wird eine hohe Anschaulichkeit gewährleistet.  2.3 Systemerweiterungen und Dienstprogramme  In diese Klasse werden die Aufgaben eingeordnet, die z.B. als Dienstprogramme im  Computer eingesetzt werden. Es wird in der Regel ein klassischer Softwareentwicklungszyklus durchgeführt. Diese Aufgabenstellungen sind in der Regel  nicht fächerübergreifend, sondern beschränken sich auf informatische Inhalte. Klassische  Aufgaben aus diesem Bereich sind der Entwurf eigener Editoren oder Interpreter.   Mit der Vernetzung von Computersystemen ergeben sich auch aus diesem Bereich neue  Aufgabenstellungen. Dabei können neben dem informatischen Modellieren auch Kenntnisse auf dem Gebiet der Netzwerke vermittelt werden.  3  Multimediale Systembeschreibungen  Für komplexe Aufgabenstellungen, die sich zur Einführung des informatischen Modellierens eignen, sind einige Anforderungen zu beachten:  die Systembeschreibung muss in einer für die Schüler verständlichen Form  vorliegen,  es muss eine klare Zielstellung für die Arbeit vorgegeben werden,  159das gesamte Projekt muss innerhalb einer begrenzten Bearbeitungszeit lösbar  sein,  das Modell muss mit den zur Verfügung stehenden Sprachelementen  implementierbar sein,  die Ergebnisse sollen aus dem Erfahrungshorizont der Schüler verifizierbar und  validierbar sein und  die Lösung der Aufgabe schafft „Mehrwert“.  Vor allem zur Bearbeitung von Aufgaben aus den Gebieten Datenbanken und Simulation  ist ein umfassendes Verständnis des zu modellierenden Systems erforderlich. Eine klassische textuelle Aufgabenstellung dient nur unzureichend zur Entwicklung eines Systemverständnisses. Die in den Lehrbüchern häufig verwendeten Beschreibungsformen enthalten in der Regel eine vollständige Systemanalyse. Die Abgrenzung und Abstraktion des Systems sowie die Erfassung der Eingabedaten ist mit der Formulierung der Aufgabenstellung bereits abgeschlossen. Da aber genau diese Phasen einen Schwerpunkt bei der Lösung von Problemen in der Informatik darstellen, sollten die notwendigen Techniken und Vorgehensweisen auch im Informatikunterricht vermittelt werden.   Das Ziel des zu bearbeitenden Projektes und die zu realisierenden Funktionen können in  textueller Form vorgegeben werden. Durch diese Ziele wird die Struktur und Funktion des Modells und der notwendige Abstraktionsprozess definiert. Anschließend wird eine Abgrenzung des zu modellierenden Systems durch die Beschreibung der Umweltschnittstellen vorgenommen. Voraussetzung dafür ist ein einheitliches Systemverständnis bei den bearbeitenden Schülerinnen und Schülern. Dies kann durch die Anwendung multimedialer Systembeschreibungen unterstützt werden.   Informatisches Modellieren wird häufig verteilt oder in Gruppenarbeit realisiert. Für das  Problemlösen in Gruppen ist di e Kommunikation zwischen den beteiligten Schülerinnen  und Schülern notwendig. Die Koordinierung und Moderation der Projekte ist sehr anspruchsvoll und erfordert viel Erfahrung. Multimediale Systembeschreibungen schaffen eine einheitliche Diskussionsgrundlage und unterstützen damit den Kommunikationsprozess.  Im Rahmen der Systemanalyse wird festgelegt, welche Eingabedaten mit welcher  Genauigkeit erfasst werden müssen und welche Resultate ermittelt werden sollen. Die Erfassung und Aufbereitung der Eingabedaten wird Bestandteil des Projektes. Im Ergebnis dieser Phase werden Datenund Objektstrukturen für ein abstraktes Modell abgeleitet. Vor allem bei der Modellierung dynamischer Systeme können Eingabedaten aus Videoaufzeichnungen gewonnen werden. Die Erfassung der Systemdaten und der im System ablaufenden Prozesse sowie deren Aufbereitung beanspruchen in komplexen Softwareentwicklungen einen erheblichen Teil des Gesamtaufwandes. Die Qualität der erfassten Daten und Prozesse entscheidet wesentlich über die Qualität des zu entwickelnden Systems. Daher ist es zweckmäßig, die Systemanalyse und Eingabedatenerfassung stärker in die Ausbildung zu integrieren.  160Bei vielen Aufgabenstellungen ist es günstig, wenn ein reales System zur Verfügung  steht, das im Rahmen des Modellierungsprojektes besichtigt werden kann, da so ein einheitliches Systemverständnis gesichert wird. Kennen die Auszubildenden das reale System (bzw. ein ähnliches System) nicht, so können Videoaufzeichnungen zur Vermittlung des Systemverständnisses eingesetzt werden. Derartige Videoaufnahmen sollten die für die Modellierung relevanten Abläufe in wenigen Zyklen zeigen. Für kurze Prozesse sind Sequenzen von 5 bis 10 Sekunden ausreichend. Diese Videoaufzeichnungen werden durch textuelle Informationen ergänzt, die z.B. Zustände beschreiben, die nicht durch Videodaten erfassbar sind. Die Aufzeichnung der Videoaufnahmen ist ein erster Abstraktionsschritt, da hier die für die Modellbildung wesentlichen Systemkomponenten vorgestellt werden. Haben die Schülerinnen und  Schüler ein entsprechendes Systemverständnis entwickelt, so kann mit der  Systemanalyse begonnen werden.   Eine zweite Aufgabenstellung für Projektarbeit in Arbeitsgruppen ist die Erstellung einer  multimedialen Systembeschreibung. Es wird ein reales System analysiert und dabei werden die notwendigen Eingabedaten in ihren unterschiedlichen Repräsentationsformen zugesammentragen. Diese Daten werden zu einer Systemdokumentation zusammengestellt. Aus diesen Dokumentationen wird eine Aufgabensammlung erstellt.  Die für die Systemanalyse erfassten Videodaten unterscheiden sich von denen, die zum  Systemverständnis erfasst wurden. Die einzelnen Videosequenzen sind wesentlich länger. Es werden die Ergebnisse eines Abstraktionsprozesses, der die Auswahl der aufzuzeichnenden Objekte und die Dauer der Aufzeichnung bestimmt, berücksichtigt. Um Prozesse bei der Datenaufbereitung besser analysieren zu können, werden Aufnahmedatum und Aufnahmezeit mit erfa sst. So können aus visuellen Daten  Zeitaufnahmen erstellt werden. Voraussetzung ist, dass alle notwendigen Prozesse über einen repräsentativen Zeitraum erfasst worden sind.   Geometrische Informationen können aus Zeichnungen entnommen werden. Dabei kann  der gewählte Abstraktionsgrad durch Hervorhebung der modellrelevanten Zeichnungskomponenten veranschaulicht werden.   161  Abbildung 1 Komponenten einer multimedialen Systembeschreibung  Besonders bei der Erfassung visueller Daten, in denen auch Personen vorkommen, sind  die rechtlichen Aspekte zu berücksichtigen. Die Schülerinnen und Schüler können mit den rechtlichen Aspekten der Datenerfassung vertraut gemacht werden.   4  Beispiel: Simulation einer Straßenkreuzung  Die Verwendung einer multimedialen Aufgabenbeschreibung wird am Beispiel der Simulation einer Straßenkreuzung vorgestellt. Es werden verschiedene Möglichkeiten des Einsatzes der multimedialen Aufgabenbeschreibungen diskutiert, die entsprechend der zur Verfügung stehenden Zeit und der Vorkenntnisse der Schülerinnen und Schüler umgesetzt werden können. Das Ziel der Untersuchungen besteht darin, mit Hilfe eines Simulationsmodells festzustellen, ob für einen Verkehrsknoten ein Kreisverkehr, eine Ampelsteuerung oder eine Kreuzung mit Vorrangstrassen die beste Lösung darstellt. Die beteiligten Schülerinnen und Schüler kennen Straßenkreuzungen und die dort ablaufenden Prozesse. Die reale, nachzubildende Kreuzung kann besichtigt werden. Das  Layout der Kreuzung liegt in der Regel als Stadtplan vor.  Ergänzend besteht die Möglichkeit, ein physisches Modell der Kreuzung zu erstellen und  z.B. eine reale Ampelsteuerung zu implementieren. Der Verkehrsstrom kann durch direkte Beobachtungen erfasst werden. Hier erweist es sich als sinnvoll, parallel Videoaufzeichnungen durchzuführen, um die Daten anschließend unter verschiedenen Aspekten auswerten zu können. Als Ersatz für die direkte Beobachtung können Videoaufzeichnungen ebenso eingesetzt werden. Weiterhin kann mit  Videoaufzeichnungen gezeigt werden, dass sich die Verkehrsbelastung zu  unterschiedlichen Tageszeiten ändert. Weitere Informationen können aus Fotos bzw. dem Stadtplan entnommen werden.   162Mit Hilfe des Stadtplanes lässt sich die Abgrenzung des Systems demonstrieren. Für die  Simulation wird die zu untersuchende Kreuzung allein betrachtet. Gemeinsam mit den Schülerinnen und Schülern werden die Umweltschnittstellen erarbeitet. Für das vorgestellte Beispiel werden die Umweltschnittstellen über die Zeitabstände der eintreffenden Objekte definiert.     Abbildung 2: Kennzeichnung von Modellbereichen im realen System  In der Analysephase werden die für die Bearbeitung der Aufgabenstellung relevanten Objekte identifiziert und klassifiziert. Für das vorliegende Beispiel sind dies Straßenbahnen, LKW, PKW, Radfahrer und Fußgänger. Weiterhin muss festgelegt werden, welche Eigenschaften für Objekte dieser Klasse berücksichtigt werden müssen. Es kann z.B. erforderlich sein, die Länge und Geschwindigkeit der Objekte zu  berücksichtigen. Anschließend wird ermittelt, welche Funktionen die Objekte ausführen  können und welche dieser Funktionen für die Abbildung im Modell relevant sind. Entsprechend der im Video erfassten Eingabedaten können Analysen über das Verhalten der einzelnen Objekte durchgeführt werden.   Ein weiteres im System nachzubildendes Objekt ist der Verkehrsknoten selbst. Ihm  werden geometrische Informationen zugeordnet. Diese können aus einem vorliegenden Layout, z.B. dem Stadtplan, entnommen werden. Informationen über Ampelsteuerungen  können durch Beobachtungen gewonnen werden. Die für das System geltenden  Vorfahrtsregeln werden gemeinsam mit den Schülerinnen und Schülern erarbeitet. Bei der Auswertung der Videodaten wird erkennbar, dass die Verhaltensweise der einzelnen Objekte nur schwer durch Algorithmen beschreibbar ist. Nur durch Abstraktion können die Verhaltensweisen nachgebildet werden.  Nach Abschluss der Analysephase können den realen Systemelementen die  Modellelemente und Sprachelemente des zur Codierung verwendeten Systems zugeordnet werden. Im Abbildung 3 ist dies am Beispiel der Fahrzeuge dargestellt. Die  Codierung erfolgt in einer geeigneten Simulationssprache.   163  Abbildung 3 Zuordnung der Komponenten  Wird in der ersten Phase das reale System simuliert, so können die Videodaten zur  Verifikation und Validierung genutzt werden. Besonders deutlich wird dies, wenn zur Resultatdatenauswertung zusätzlich ein Animationsmodell verwendet wird.   Der Programmtest ist eine wesentliche Phase der informatischen Modellierung und sollte  nicht mit der Codierungsoder Experimentierphase vermischt werden. Die Schülerinnen und Schüler werden dazu befähigt, das implementierte Modell systematisch zu testen, die Testergebnisse zu protokollieren und ggf. Schritte zur Verbesserung des Modells  durchzuführen. Vor allem Simulationsmodelle bieten die Möglichkeit, eine  Experimentierphase anzuschließen.   Projektbegleitend ist eine Dokumentation zu erstellen, in der auch die Ergebnisse  kritisch bewertet werden. Eine Dokumentationskomponente kann ein Hilfesystem sein, welches für das Computermodell entwickelt wird.   5  Schlussfolgerungen  Das „Informatische Modellieren“ gehört zu den anspruchsvollsten Themen im Informatikunterricht. Die Schülerinnen und Schüler lernen alle Phasen der Entwicklung von Informatiksystemen kennen. Ein wesentlicher Unterschied zu den Übungsaufgaben besteht darin, dass die Bearbeitung des Projektes sich über einen längeren Zeitraum erstreckt. Wird ein Projekt im Klassenverband bearbeitet, so muss zu Beginn einer Unterrichtsstunde ein einheitliches Ausgangsniveau geschaffen werden. Bei vielen Schülerinnen und Schülern wird bei der Bearbeitung komplexer Projekte der Ehrgeiz geweckt, zwischen den Unterrichtsstunden selbständig an der Problemlösung  weiterzuarbeiten. Aufgabe des Lehrenden ist es, die Diskussion dieser Lösungsansätze  zu moderieren und einen gemeinsamen Lösungsschritt zu erarbeiten.   164Mit dem informatischen Modellieren erkennen die Schülerinnen und Schüler, dass das  Codieren des Programms nur ein Bestandteil der Lösung der Aufgabenstellung ist. Eine sorgfältige Durchführung der Analyseund Spezifikationsphase verringert den Aufwand in der Codierungsund Testphase erheblich.  Die Auswahl einer geeigneten Problemstellung ist eine Voraussetzung für die  erfolgreiche Einführung in das informatische Modellieren. Der Lehrende sollte diese Aufgabenstellung vor Beginn des Unterrichtsabschnittes vollständig bearbeitet haben, da  Erfahrungen gezeigt haben, dass der Zeitaufwand zur Bearbeitung häufig unterschätzt  wird. Die Schülerinnen und Schüler müssen eine geeignete Abstraktion und Abgrenzung für die zu bearbeitenden Problemstellungen erlernen. Zur Überprüfung des erstellten Modells ist es erforderlich, eine Implementierung auf einem Computer vorzunehmen. Dies ist auch zum Erhalt der Motivation notwendig.   Die Verwendung multimedialer Aufgabenbeschreibungen ist geeignet, bei den  Schülerinnen und Schülern ein einheitliches Systemverständnis herauszubilden. Das  System kann aus unterschiedlichen Blickwinkeln gezeigt werden. Die Erstellung einer  multimedialen Aufgabenbeschreibung kann als Bestandteil der Analysephase in den Prozess des informatischen Modellierens integriert werden. In der Testphase ist die Aufgabenbeschreibung ein geeignetes Validierungshilfsmittel. Bei der Bearbeitung des Projektes erkennen die Schülerinnen und Schüler die Notwendigkeit, neben umfassenden Kenntnissen auf dem Gebiet der Informatik auch Kenntnisse über das Anwendungsgebiet der Aufgabenstellung zu besitzen.  Literaturverzeichnis  [Br00]  Brinda, T.: Objektorientiertes Modellieren, LOG IN 20 (2000), Heft 2 Seite 39-49.    [DR01]  Dietzel, R.; Rinkens, T.: Eine Einführung in die Objektorientierung mit Lego  Mindstorms Robotern, in: Informatikunterricht und Medienbildung, INFOS 2001  Proceedings, Seite 193-199, Paderborn, 2001.   [GI00] Gesellschaft für Informatik (GI) e.V., Empfehlungen für ein Gesamtkonzept zur  Informatischen Bildung an allgemein bildenden Schulen, Bonn, 2000.   [He22] Herper, H.: Multimediale Modellbeschreibungen für die Ausbildung, in: Anwendungen  der Produktionstechnik in Simulation und Logistik, SCS-Europe BVBA, 2002, Seite 169 – 178.   [Koe01] Königstein 2001. Fachdidaktische Gespräche zur Informatik an der TU Dresden,  Arbeitsgruppe: Modellbildung im Informatikunterricht. Königstein, 14.-16.03.2001.   [Sp00]  Spolwig, S.: Modellieren und Programmieren, LOG IN 20 (2000) Heft 2 Seite 53-59.  165