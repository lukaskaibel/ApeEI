Fakultät für Informatik der Technischen Universität München Lehreinheit Didaktik der Informatik Prof. Dr. rer. nat. Peter Hubwieser Lernzielstrukturen im Informatikunterricht Habilitationsschrift zur Erlangung des akademischen Grades eines Dr. rer. nat. habil. der Fakultät für Informatik der Technischen Universität München vorgelegt von Dr. rer. nat. Markus Steinert München 2010Fakultät für Informatik der Technischen Universität München Lehreinheit Didaktik der Informatik Prof. Dr. rer. nat. Peter Hubwieser Lernzielstrukturen im Informatikunterricht Habilitationsschrift zur Erlangung des akademischen Grades eines Dr. rer. nat. habil. der Fakultät für Informatik der Technischen Universität München vorgelegt von Dr. rer . nat. Markus Steinert Fachmentorat: Prof. Dr. Helmut Seidl (Vorsitz) Prof. Dr. Peter Hubwieser Prof. Dr. Alois Knoll 1. Gutachter: Prof. Dr. Peter Hubwieser 2. Gutachter: Prof. Dr. Sigrid Schubert 3. Gutachter: Prof. Dr. Karl Fuchs München 2010Zusammenfassung Innerhalb der vergangenen Jahre prägte ein Thema die didaktische Forschung nicht zuletzt im Bereich der Didaktik der Informatik: Bildungsstandards und Kompetenzen. Diese Diskussion drängte ein Thema aus dem Blickfeld, das als Grundlage für eine derartige Diskussion unve rzichtbar ist: Die Frage der didaktisch -fachlichen Strukturierung der Informatik. Eine derartige Fundierung der Grundlagen sollte die Kompetenzdebatte jedoch unbedingt flankieren und b egleiten. Da die bisher verfügbaren di daktischen Klassifizierungen der Informatik für diesen Zweck nur bedingt geeignet sind, müssen alternative Wege gefunden werden. Im Zentrum des Habilit ationsvorhabens steht deshalb die Entwicklung und exemplarische Erprobung einer Methode, die es erlaubt, die fachlichen Strukturen der Informatik unter didaktischen Gesichtspunkten zu e rmitteln. Dabei zeigt sich, dass eine lernzieltheoretische Analyse vorhandener Lehrstrategien die Möglichkeit eröffnet ,ein derartiges konzeptuelles Beziehungsgeflecht indukti v zu gewi nnen Diese Lernzielanalyse beschränkt sich im Allgemeinen auf Lehrstrategien im schulischen Umfeld und dabei insbesondere auf die Verhältnisse an bayerischen Gymnasien. Zentrales E rgebnis der Lernzielanalyse sind Graphen, die die didaktischen und fachlichen Beziehungen zw ischen den Lernzielen repräsentieren. Die Graphen werden dabei aus konkreten Aufgabenste llungen gewonnen, so dass die hier beschriebene Methode die Möglichkeit eröffnet, fachlich didaktische Strukturen auf ein empirisches Fundament zu stellen. Zur Illustration der in dieser Arbeit vorgestellten Methode, w ird die Lernzielanalyse in zwei Ausprägungen durchgeführt: Zum einen für den gesamten Informatikunterricht in der Unterst ufe, wobei ein Lernzielgraph gewonnen wird, der die Beziehu ngen zwischen objektorientierter Modellierung und den Grundlagen der Algorithmik repräsentiert. Auf der anderen Seite wird die Lernzielanalyse für eine bestimmte Begrifflichkeit inunterschiedlichen Jahrgangsstufen durc hgeführt. Dadurch wird deutlich, wie sich Lernzielstrukturen im Laufe der Schulzeit entw ickeln und an Komplexität gewinnen. Eine derartige jahrgangsübergreifende Modellierung der Lernziel strukturen erlaubt es, die Resultate der Lernzielanalyse mit bekannten Klassifizierungen zu verknüpfen. Diese Synthese unterschiedlicher Klassifizierungen eröffnet neuartige Sichten auf bekannte Taxonomien .Insbesondere zeigt sich, dass dadurch ein wichtiger Beitrag zu der angestrebten Fundierung der d idaktisch -fachlichen Grundlagen g eliefert werden kann.IVV Abstract The recent past of didactical research, especially the research concerning didactics of informa tics,was characterized by one topic: educational standards and competences, especially in co nnection with an embedding of informatical skills intofutur ePISA –studies . These discussions suppressed a topic which provides the essential basis for the mentioned competence discussion : The question of a detailed classification of informatics in terms of didactical aspects. Such an analysis ought to go along w iththe discussion of educational standards in informatics. Though some didactical classification systems exist, their benefit to practical use is discussed controversial and alternative ways have to be found. The core of the here presented habilit ation thesis is therefore the development and the exemplary application of a method which a llows to determine the didactical structures of informatics. It will be shown, that the analysis of the learning objectives of concrete didactical strategies provides the o pportunity to determine the conceptual grid in an inductive manner. This grid represent snot only the lear ning objectives but also the irmutual relation s. Due to the method ologicalcharacter of the habilitation thesis , the discussed didactical fields have to be restricted. Exemplarily the curriculum of the mandatory subject informatics at the Bava rian Gymnasium is analyzed. The central results of the analysis are graphs which represent the learning objectives and their relations ( both didactical relation sandrelation with regard to content s).The structures of these graphs are deduced from concrete problems at school so that these graphs are based on an e mpirical basis. The analysis of learning objectives is made on the one hand for a whole educ ational l evel to demonstrate how different domains of informatics –for example object -oriented mode lling and algorithmics –are related to each other. On the other hand the graph of learning objectives is deduced for a certain topic at different educational levels to illustrate how stru ctures of learning objectives evolve and gain complexity. Finally these graphs of learning objectives on various educational levels arecombined with known classification systems of informatics. This combination gives qualitatively new insights into known didactical taxonomies . Especially it illustrates that the here presented method is definitely appropriate to establish grids of conceptual structures necessary for the definition of educational standards.VIVII Vorwort Die vorliegend e Habilitationsschrift entstand im Zuge meiner Beurlaubung und Abordnung an die TU –München in der Lehreinheit „Didaktik der Informatik“ bei Herrn Prof. Dr.Peter Hu bwieser. In erster Linie möchte ich mich deshalb ganz besonders bei Herrn Prof. Dr. Peter Hubwieser für die kontinuierliche Unterstützung dieses Vorhabens und seine konstruktive Kritik in zahlreichen Diskussionen bedanken. Ein weiterer Dank gilt dem bayerischen Staatsministerium für Unterricht und Kultus, insbeso ndere Herrn Ministerialrat DieterGötzl ,für die Bewilligung der Abordnung an die TU –München ,zumal diese in eine Zeit fiel,die durch außergewöhnlichen Mangel an Mathematik -und Informatiklehrern gekennzeichnet war. Bei den Mitgliedern des Fachmentorats der Fakultät für Informatik der TU -München, Herr n Prof. Dr. Helmut Seidl und Herr nProf. Dr. Alois Knoll bedanke ich mich für die Betreuung. Ebenfalls geht ein Dankeschön an Frau Prof. Dr. Sigrid Schubert von der Universität Siegen und Herr nProf. Dr. Karl Fuchs von der Universität S alzburg für die Begutachtung der Arbeit. Nicht unerwähnt sollen auch die –inzwischen z.T. nicht mehr an der TU -München tätigen – Kollegen an der Lehreinheit „Didaktik der Informatik “bleiben :Gerd Aiglstorfer, Dirk Barocke, Katrin Bender, Marc Berges, T homas Josefzcak, Heike Kreitmair, Patrick Löf fler, Andreas Mühling, Robert Papin, Robert Pütterich, Regine Spitzhirn, Matthias Spohrer, Alex Staller, Siglinde Voß; ihre kritischen Anmerkun gen in Seminaren und persönlichen Gesprächen trugen zum Gelingen der Arbeit bei. Nicht zuletzt gilt mein Dank meiner Frau Yessica für die Geduld und die Unterstützung wä hrend der Durchführung des Habilitationsvorhabens. München im März 2010 Dr. Markus Ste inertVIIIIX Erklärung Ich erkläre an E ides statt, dass ich die der Fakultät für Informatik der Technischen Un iversität München als Habilitationsschrift vorgelegte Arbeit mit dem Titel: „Lernzielstrukturen imInformatik unterricht “ an der Lehreinheit „Didaktik der Informatik“ unter Betreuung dur ch Prof. Dr. Peter Hubwieser ohne sonstige Hilfe erstellt und bei der Abfassung nur die angegebenen Hilfsmittel b enutzt habe. (X) Ich habe die Habilitationsschrift in keinem anderen Prüfungsverfahren als Prüfungslei stung vorgelegt. (X) Ich habe die ange strebte Habilitation noch nicht erworben und bin nicht in einem früh eren Habilitationsverfahren endgültig g escheitert. Die Habilitationsordnung der Technischen Universität München ist mir b ekannt. München, den UnterschriftXInhaltsverzeichnis Einleitung ................................ ................................ ................................ ................................ .....1 1 Lernpsychologische Grundlagen ................................ ................................ ............................ 5 1.1 Kompetenzen oder Lernziele? ................................ ................................ ........................... 5 1.2 Lernziele zwischen kognitiven Lerntheorien und Konstruktivismus ................................ .7 1.2.1 Lernziele in behavioristisch -kognitiv gepräg te Lerntheorien ................................ .....8 1.2.2 Konstruktivistisch geprägte Lerntheorien ................................ ................................ ...9 1.3 Lernzieltaxonomien ................................ ................................ ................................ ......... 14 1.4 Lernpsychologische Strömungen und Didaktik der Informatik ................................ .......16 2 Fachliche Strukturierungen der Informatik ................................ ................................ ........ 21 2.1 Bekannte Strukturierungen der Informatik ................................ ................................ ......21 2.1.1 Domänenorientierte Klassifikationen ................................ ................................ .......21 2.1.2 Prinzipienorientierte Klassifikationen ................................ ................................ ......22 2.1.3 Kritik an rein konzeptuellen Klassifizierungen ................................ ........................ 24 2.1.4 GI –Standards ................................ ................................ ................................ .......... 25 2.2 Lernzielanalyse einführender Lehrveranstaltungen im universitären Umfeld ................. 26 2.2.1E xemplarische Modulbeschreibungen von Universitäten der TU9 ........................... 27 2.2.2 Vergleich der Modulbeschreibungen ................................ ................................ ........ 28 2.2.3 Exemplarische Klassifizierung der Lernziele in den Modulkatalogen ..................... 29 2.3 Lernziele in der Schulinformatik ................................ ................................ ..................... 30 2.4 Konsequenzen für die weitere Arb eit................................ ................................ ............... 32 3 Methodik der Lernzielanalyse ................................ ................................ .............................. 35 3.1 Grundsätzliche Vorgehensweise ................................ ................................ ...................... 35 3.1.1 Auswahl geeigneter Unterrichtsabläufe ................................ ................................ ....35 3.1.2 Kategorisierung der Lernziele ................................ ................................ ................... 36 3.1.3 Beziehungen zwischen den Lernzielen ................................ ................................ .....36 3.2 Lernzielanalyse am Beispiel der Algorithmik in der Unterstufe ................................ ......37 3.2.1 Lehrplananalyse ................................ ................................ ................................ ........ 37 3.2.2 Die Lernzielanalyse ................................ ................................ ................................ ..38 3.3 Der Lernzielgraph des Lehrplanabschnitts zur Algorithmik ................................ ............ 46 3.3.1 Synthese der einzelnen Lernzielgraphen ................................ ................................ ...46XIV Inhaltsve rzeichnis 3.3.2 Lernzielgraph und Lernziele des Lehrplans ................................ ............................. 47 3.4 Lernzielerfol gsanalyse ................................ ................................ ................................ .....48 4 Lernzielanalyse in der Schulinformatik: Unterstufe ................................ .......................... 53 4.1 Lernzielanalyse objektorientierter Modellierung ................................ ............................ 53 4.1.1 Analyse des Lehrplans ................................ ................................ .............................. 53 4.1.2 Lernzielanalyse der zentralen Lernstandserhebung aus dem Jahr 2006 ................... 54 4.1.3 Lernstandserhebung zur Natur und Technik für das Schuljahr 2006/2007 .............. 58 4.1.4 Lernpsychologische Diskussion der Aufgaben der Lernstandserhebung ................. 62 4.1.5 Diskussion der Resultate der Lernstandserhebungen ................................ ............... 63 4.2 Synthese und Diskussion der bisher erarbeiteten Lernzielgraphen ................................ .65 4.2.1 Lernziele objektorientierter Modellierung ................................ ................................ 65 4.2.2 Synthese der Lernzielgraphen objektorientierter Modellierung und Algorithmik ...67 4.2.3 Lernzielgraph und fundamentale Ideen ................................ ................................ ....68 4.2.4 Lernzielgraph im Vergleich mit den GI -Standards ................................ .................. 69 5 Lernziele fu nktionaler Modellierung in didaktischer Reflexion ................................ ....... 73 5.1 Funktionale Modellierung an der Schule ................................ ................................ ......... 73 5.1.1 Was ist funktionale Modellierung? ................................ ................................ .......... 73 5.1.2 Funktionale Modellierung im Lehrplan an bayerischen Gymnasien ........................ 74 5.2 Lernzielanalyse ausgewählter Prüfungsau fgaben ................................ ............................ 75 5.2.1 Vorbemerkungen ................................ ................................ ................................ ......75 5.2.2 Lernzielanalysen von Aufgaben zur funktionalen Modellierung ............................. 76 5.2.3 Synthese der Lernzielgraphen ................................ ................................ .................. 86 5.3 Lernzielerfolgsanalyse ................................ ................................ ................................ .....88 6 Modellierungsparadigmen im Vergleich ................................ ................................ ............. 95 6.1 Funktionale und zuweisungsorientierte M odellierung von Algorithmen ........................ 95 6.2 Objektorientierte und funktionale Modellierung ................................ ............................. 97 6.3 Lernziele rekursiver Strukturen ................................ ................................ ..................... 101 6.3.1 Rekursive Datenstrukturen ................................ ................................ ..................... 101 6.3.2 Rekursive Datenstrukturen und rekursive Funktionen ................................ ........... 105 6.4 Lernziele funktionaler und obj ektorientierter Modellierung in der Datenbankmodellierung ................................ ................................ ................................ ................................ ............. 108 7 Lernzielgraphen im Vergleich mit anderen Klassifizierungen ................................ ........ 113 7.1 Lernzielgraphen und fundamentale Ideen ................................ ................................ .....113 7.2 Lernzielgraphen und GI –Standards ................................ ................................ ............. 119 Anhang A: Exemplarische Lernzielbeschre ibung einführender Lehrveranstaltungen in die Informatik ................................ ................................ ................................ ............................... 127 A.1 Modulbeschreibungen zur Einführung in die Informatik (TU9) ................................ ..127 A.2 Kategorisierung der Lernziele nach Anderson/Krathwohl ................................ ........... 131 Anhang B: Aufgabensammlung für die Lernzielanalyse ................................ .................... 133 B.1 Aufgabe n zum Teilbereich Algorithmik im Rahmen des Faches Natur und Technik in Jahrgangstufe 7 ................................ ................................ ................................ .................... 133XIII Inhaltsverzeic hnis B.2 Aufgaben der Lernstandserhebungen in Informatik (Natur und Technik) aus den Jahren 2005/2006 und 2006/2007 ................................ ................................ ................................ ...135 B.3 Aufgaben zur Funktionalen Modellierung ................................ ................................ ....138 B.3.1 Zuordnungen ................................ ................................ ................................ .......... 138 B.3.2 Iterationen mit Rechenblättern ................................ ................................ ............... 141 B.3.3 Vom Datenflussdiagramme zum Term ................................ ................................ ..141 B.3.4 Vervollständigen von Datenflussdiagrammen ................................ ....................... 142 B.3.5 Erstellen von Datenflussdiagrammen ................................ ................................ .....143 B.3.6 Bedingte Ausdrücke (Vervollständigen von DFD) ................................ ................ 146 B.3.7 Interpretation von DFD mit bedingten Ausdrücken ................................ ............... 148 B.3.8 Erstellen von Datenflussdiagrammen mit bedingtem Ausdruck ............................ 150 Anhang C: Implizite Lernziele der Arbeit ................................ ................................ ............ 151 C.1 Lernziele der Informatik in der 6 / 7. Jahrgangstufe an bayerischen Gymnasien ......... 151 C.2 Lernziele funktionaler Modellierung in der 9. Jahrgangstufe an bayerischen Gymnasien 152 Literatur ................................ ................................ ................................ ................................ ...155XIV Inhaltsve rzeichnisEinleitung Ein Thema, das die pädagogisch -didaktische Forschungsl andschaft der letzten Jahre bestim mte wie kein andere s,ist die Frage der Bildungsstandards. Angestoßen wurden entsprechende Forschungsarbeiten beispielsweise durch die TIMSS-Ergebnisse ([Ba97], [Ba00a], [Ba00b]) und nicht zuletzt durch die–mit großem öffentlichem Interesse wahrgenommenen –Resultate der PISA -Studien ([Ba01], [Pr04]). Die genannten Untersuchungen evaluierten dabei Kompetenzen in Bereichen, die an Schulen einen selbstverständ lichen Platz einnehmen: Lesekompetenz, m athematische Kompetenz und naturwissenschaftliche Grundbildung. Die Informatik bleibt in diesen Studien aufgrund ihrer noch relativ schwach ausgeprägten Verankerung im Kanon der sch ulischen Fächer unberücksich tigt. Dennoch hat sich das Schulfach Informatik mittlerweile in den meisten Bundesländern (siehe dazu etwa die Synopse von Weeger [We07]) einen festen Platz an den allgemein bildenden Schulen erobert. Insofern sind dieBestrebungen der Gesellschaft für Informatik nahe liegend, auch für das Schulfach Informatik Bildungsstandards auf der Ebene eines möglichst bundeswe iten Kon senses zu etablieren [GI08]. Die Didaktik der Informatik sieht sich dabei jedoch mit e inem Problem konfrontiert, das die Didaktiken der Fächer wie Mathematik oder die der Natu rwissenschaften nicht haben: Die Didaktik der Informatik istals Fachdisziplin verhältnismäßig jung und ihre Grundlagen sind im Entstehen .Wie in der Expertise zur Bildung nationaler Bi ldungsstandards [Kl07] betont wird , zeichnen sich gute Bildungsstandards jedoch dadurch aus, dass sie „die Grundprinzipien der Disziplin bzw. des Unterrichtsfachs“ klar herausa rbeiten. Wie noch detaillier t zu erläutern sein wird, verbirgt sich hinter dieser Forderung ein Problem: Die Grundprinz ipien der Informatik und ihre Beziehungen sind nach wie vor Gegenstand der dida ktischen Diskussion (siehe z.B. [Ca07], [De07]) .Erschwerend kommt hinzu, dass für eine dera rtige Untersuchung auch keine erprobte Methodik zur Verfügung steht: Weder sind aus v erwan dten Disziplinen entsprechende Verfahren --insbesondere solche empirischer Art --bekannt, noch wurden innerhalb der Didaktik der Informatik bisher solche publiziert. Den ersten Schritt hin zur Bestimmung der Grundprinzipien bilden deshalb Forschungen im Bereich der Methodik; hier soll die vorliegende Arbeit einen Beitrag liefern. Die Vorstellung der M ethodik geht dabei in natürlicher Weise einher mit einer exemplarischen Ableitung von Grundprinzipien der Info rmatik und kann insofern als flankierend zur aktuellen Diskussion zudenBildungsstandards in der Informatik gesehen werden. Für eine derartige Untersuchung sind prinzipiell zwei Herangehensweisen denkbar: Entw eder man geht deduktiv vor und definiert bestimmte Konzepte als Grundprinzipien ; deren vo llständ igeVerifikation erfolgt dann im Anschluss. Im Gegensatz dazu würde man bei induktiver Vo rgehensweise die bestehenden fachlich -didaktischen Strukturen analysieren und daraus die Grun dprinzipien ableiten. Während die erstgenannte Strategie in der Ver gangenheit von einigen Autoren umgesetzt wurde (z.B. A. Schwill [Sc93], P. Denning [De99], [De04], oder L. Cassel [Ca07]) ,wurde eine induktiv geprägte Strategie bisher noch nicht konsequent beschritten. Die Präsentation und exemplarische Durchführung eine r derartigen induktiven Analyse istder Weg, der in dieser Arbeit be gangen wird. Naturgemäß istdie Analyse der fachlich -didaktischen Strukturen im Rahmen einer derartigen Arbeit exempla risch : Für die hier präsentierte Analyse wurden die Strukturen des In formatiku nterrichts an bayerischen Gymnasien ausgewählt. Der Informatikunterricht an bayerischen Gy m-2 Einleitung nasien ist innerhalb Deutschlands insofern singulär als er–wenn auch mit einem Jahr ohne I nformatikunterricht in Jahrgangsstufe 8 –ab der 6. Jahrgangsstu fefür alle Schüler imnaturwi ssenschaftlich -technischem Zweig des Gymnasiums Pflichtfach ist (siehe etwa [ISB07] ); d.h. e twa die Hälfte aller Schüler am Gymnasium haben mindestens 4 Jahre Pflichtunterricht in Inform atik. Seitdem im Schuljahr 2004 / 2005 die Schüler der 6. Jahrgangsstufe im Rahmen des Faches „Natur und Technik“ an bayerischen Gymnasien erstmals im Pflichtfach Informatik unterrichtet wurden, sind fünf Schuljahre vergangen und das Schulfach „Informatik“ ist mittlerweile fest in die Fächerlan dschaft eingebunden. Imaktuellen Schuljahr 2009 / 2010 erstreckt sich der inhal tliche Bogen von der objektorientierten Modellierung alltagsrelevanter Kommunikationssysteme (Textverarbeitungssysteme, Hypertextstrukturen , etc. )über die funktionale Modelli erung und Datenbankmodellierung hin zur objektorientierten Modellierung und Programmierung in den Jahrgangsstufen 10 und 11. Hierbei werden in der 11. Jahrgangsstufe rekursive Datenstrukturen und rekursive Funktionen auch im Kontext umfangreicher Softwarep rojekte implementiert. Die geplante 12. Jahrgangsstufe, die erstmals im Schuljahr 2010 / 2011 durchgeführt werden wird, widmet sich Aspekten der Theoretischen Informatik, wie etwa Formalen Sprachen oder Fragen der B erechenbarkeit. Für die oben illustrierte induktive Ableitung der Grundprinzipien der Informatik imschul ischen Unterricht bieten damit die didaktischen Strukturen, wie sie an bayerischen Gymnasien anzutre ffen sind ,eine inhaltlich breit gefächerte und reichhaltige Quelle . Neben der oben erwähnte n Bedeutung der hier vorgestellten Analyse als flankierende Arbeit zu den aktuell entstehenden Bildungsstandards in der Informatik lässt sich diese auch als Hilf smittel in der Lehrerbildung einsetzen: Zur Vorbereitung der Einführung des Pflichtfachs Info rmatik mussten in kürzester Zeit Lehrkräfte geschult werden. Dies konnte nur zu geringem Teil über den Weg eines regulären Studiums erfolgen. In umfangreichen Fortbildungsmaßna hmen (siehe [Sp09]), wurden und werden im Dienst stehende Lehrkräfte mit den fachl ichen Grundl agen ve rtraut gemacht. In diesen Fortbildungsmaßnahmen war es im Allgemeinen noch gar nicht möglich, die didaktische Feinstruktur der aktuellen schulischen Informatik zu themat isieren , da die Methodik in der Praxis noch nicht erprobt werden ko nnte. DieMethodik der fachlich -didaktische Strukturanalyse der vorliegenden Arbeit hat somit n eben dem begleitenden Einsatz bei der Formulierung von der Grundprinzipien der Informatik noch eine weitere wichtige Einsatzmöglichkeit: E inem Lehrer der Inform atik, der am Beginn seiner praktischen Arbeit steht, kann ein Werk zeug an die Hand gegeben werden, das die Unte rrichtsinhalte mit i hren fachlich -didaktischen Abhängigkeiten repräsentiert . Wie noch detaillierter zu begründen sein wird, fokussiert die vorli egende Arbeit weder auf Kompetenzen noch aufKonzepte nsondern auf Lernzielen, da nur bei diesen die kognitive Prozessdimension in der erforderlichen Detailliertheit erfassbar ist. DieBedeutung vonLernzi elen istinsofern auch das Thema des ersten Kapitel s, das die lernpsychologischen Grundlagen zur Verfügung stellt . Insbesondere wird ausführlich erläutert, weshalb die pädagogisch -didaktisch Randbedingungen desaktuellen Informatikunterricht sdie Analyse von Lernzielen erfo rdern. Das zweite Kapitel setzt sich mit den derzeit bekannten fachlich -didaktischen Strukturieru ngen der Informatik auseinander. Dabei werden zum einen die Klassif izierungen nach A. Schwill [Sc93] bzw. P. Denning [De89], [De99], [De03], [De07] diskutiert. Ebenso findet sich eine kr itische Auseinandersetzung mit den jüngst publizierten GI –Standards [GI08]. Die Resultate dieser Diskussion machen es erforderlich ,einführende Lehrveranstaltungen in die Informatik auf ihre Lernziele zu untersuchen und sie mit den Lernzielen der Schuli nforma tik, wie sie in der3 Einheitlichen Prüfungsanforderung für das Abitur (EPA , [Ep04] ) zu fi nden sind, zu vergleichen. Das zweite Kapi tel sch ließt mit den daraus resultierenden Konsequenzen für die weitere Arbeit. Im Mittelpunkt des dritten Kapitels steht die im Rahmen dieser Arbeit entwickelte und eingesetzte Methode der Lernzielanalyse. Nach Erläuterung des grundsätzlichen Ablaufs, wird die Lernzielanalyse am Beispiel der Algorithmik in der Unterstufe verdeutlicht und der zugehörige Lernzielgraph erarbeitet. Im weiteren Verlauf wird in der Lernzielerfolgsanalyse überprüft, i nwieweit die Lerne nden die Lernziele erreicht haben. DieKapitel 4, 5 und 6 widmen sich der Erweiterung des Lernzielgraphen um ausgewählte Themenbereiche . Hierbei soll gezeigt werden, dass es die Lernzielanalyse erlaubt, sowohl die Lernzielstrukturen gesamter Jahrgangsstufen, als auch deren Genese über einen längeren Zei traum zu beschreiben : Kapitel 4 beschäftigt sich insofern mit der objektorientierten Modelli erung in der Unterstufe. Die Le rnzielanalyse überregional gestellter Prüfungsaufgaben erlaubt hierbei denEntwurf eines repräsentativen Lernzielgraphen. Die sich anschließende Lernzielan alyse zeigt deutlich die Schwächen der Schüler in diesem Teilbereich . Den Abschluss des vierten Kapit els bildet die Synthese der bisher erarbeiten Lernzielgraphen und ihre Diskussion im Lic hte der fundamentalen Ideen und der GI –Standards. Kapitel 5 fol gt den inhaltlichen Vorgaben des hier betrachteten Ausschnitts der Schulinfo rmatik und fügt den bisheri gen Lernzielgraphen den Lernzielgraphen nichtrekursiver funktion aler Modellierung hinzu, eine Thematik ,die in der 9. Jahrgangsstufe unterrichtet wird. Dieses Kapitel erweitert insofern die Lernzielstrukturen zur algorithmischen Modellierung um das funktio nale Paradigma. Das Kapitel schließt mit einer Lernzielerfolgsanalyse und identifiziert dabei die problematischen Ler nziele. Das Kapitel 6 hat wiederum syn optischen Charakter und diskutiert die Gemeinsamkeiten und Unterschiede der Lernzielgraphen. Dadurch lassen sich Lernziele identifizieren, die jahrgang sübergreifend auftreten und die zunächst disjunkten Lernzielgraphen einführender Algorithmik, objektorientierter Modellierung und fun ktionaler Modellierung verbinden . Dabei wird die fun ktionale Modellierung auch auf Bereiche ausgedehnt, die unter Umständen erst in der Oberstufe oder an der Hochschule gelehrt werden. Im letzten Kapitel der Arbeit werden die Lernzielgraphen zu den fundamentalen Ideen [Sc93] in Beziehung gesetzt, wobei sich herausstellt, dass d ie fundamentalen Ideen in die Lernzielgr aphen als verbindende Elemente integriert werden können. Die Arbeit schließt mit einem Au sblick auf zukünftige Forschungsaktivitäten .4 Einleitung5 1Lernpsychologische Grundlagen 1.1Kompetenzen oder Lernziele ? Das einle itend bereits beschriebene Ziel dieser Arbeit ist es, eine Methode zu entwickeln , die dieinduktive Ableitung der grundlegenden Prinzipien der Informatik und deren wechselseitiger Beziehungen ermög licht; zusätzlich soll diese Method e exemplarisch auf versc hiedene lernps ychologische Entwicklungsstufen angewandt werden. „Induktiv“ bedeutet in diesem Kontext, dass die grundlegenden Prinzipien unter Heranzie hung realer fachlich -didaktischer Strukturen ermittelt werden .Angesichts der aktuellen Forschungsprojekt e zu Bildungsstandards ist es hil freich die Intentionen der Arbeit von den Bildungsstandards, die für die schulische Informatik in der Sekundarstufe I bereits publiziert wurden [GI08], abzugrenzen. Bildungsstandards und Kompetenzen In Bildungsstandards we rden Kompetenzen auf unterschiedlichen lernpsychologischen En twicklungsstufen definiert .So legen beispielsweise gemäß der„Expertise zur Entwicklung nat ionaler Bildungsstandards “[Kl07] Bildungsstandards fest, „welche Kompetenzen die Kinder oder Jugendlic hen bis zu einer bestimmten Jahrgangsstufe mindestens erworben haben sollen “. Es handelt sich bei den Bildungsstandards somit um sehr allgemein formulierte Bildungsziele, die als Kompetenzen zu formulieren sind. Die allgemein anerkannte Definition von Komp etenz geht auf Weinert ([We01] S. 27 ff.) zurück: „…unter Kompetenzen [versteht man ]die bei Individuen verfügbaren oder von ihnen erlernbaren kognitiven Fähigkeiten und Fertigkeiten, bestimmte Probleme zu lösen, s owie die damit verbundenen motivationalen , volitionalen und sozialen Bereitschaften und Fähigkeiten um die Problemlösungen in variablen Situationen erfolgreich und veran twortungsvoll nutzen zu können “. Eine Sichtweise, die die kognitiven Aspekte des Kompetenzbegriffs stärker in den Vordergrund stellt wird von E. Klieme [Kl06] verwendet: „…als kontextspezifische kognitive Leistungsdispositionen, die sich funktional auf Sit uationen und Anforderungen in bestimmten Domänen im Sinne von spezifischen Lern und Han dlungsbereichen beziehen.“ Offensich tlich ist „Kompetenz “ein sehr allgemeiner Begriff, der neben fachlichen Aspekten zahlreiche weitere Aspekte wie etwa Erfahrung ,Motivation und den sozialen Kontext berüc ksichtigt , wobei bei zum gegenwärtigen Zeitpunkt (siehe etwa [Kl06]) die kognitive Kom ponente6 1Lernpsychologische Grundlagen im Vordergrund steht .Einen konkreten Eindruck von der Allgemeinheit des Begriffs „Komp etenz“ bei gleichzeitiger Fokussierung auf kognitive Aspekte vermitteln die (mathematischen) Kompetenzstufen der PISA -Studie, von denen beispielsweise diefünfte (und damit höchste ) Stufe lautet [Kl01] : Stufe V: Komplexe Modellierung und innermathematisches Argumentieren Auf dieser letzten Stufe ist auch anspruchsvolles cur riculares Wissen verfügbar. Die Schül erinnen und Schüler, die dieser Kompetenzstufe zugeord net werden, können auch sehr offen formulierte Aufgaben bewältigen, bei denen ein Modell frei gewählt bzw. selbst konstruiert werden muss. Begriffliche Modellierungsleistungen auf dieser höchsten Stufe umschließen häufig Begründungen und Beweise sowie das Refle ktieren über den Modellierungsprozess selbst. Die Formulierung dieser Stufe macht deutlich, dass Kompetenzen insgesamt auf das jeweilige Curriculum abzielen und nicht einzelne Bestandteile hervorheben. Auch die Forderung, dass Schüler „offen formulie rte Aufgaben lösen sollen, bei denen das Modell frei gewählt werden kann“ stellt nicht ein bestimmtes Modell in den Vordergrund sondern geht implizit davon aus, dass dem Schüler das notwendige „Modellrepertoire“ zur Verfügung steht und überlässt es dem Curriculum die Modelltypen zu spezifizieren. Lernziele Während Kompetenzen offenbar Bildungsziele auf sehr allgemeiner Ebene definieren, sind Lernziele häufig konkreter. Abhängig vom lernpsychologischen Hintergrund wird der Begriff „Lernziel“ in der Liter atur unterschiedlich definiert. Eine sehr behavioristisch geprägte Definit ion von H. Meyer [ Me65a] lautet: Lernziele beschreiben die „ sprachlich artikulierte Vorstellung über die durch Unterricht (oder andere Lehrveranstaltungen) zu bewirkende gewünschte Verhaltensänderung eines Lernenden." Wie Kompetenzen beschreiben somit auch Lernziele dieResultat edes Lernprozesses nicht j edoch den Prozess. Vordem Vergleich der Begriffe Lernziel und Kompetenz sollte in obiger Definition der Begriff der Verhaltensänder unggenauer betrachtet werden. Verhaltensänderung ist behavioristisch geprägt und steht in diesem Zusammenhang für eine beobachtbare Verhalten sänderung. Streng genommen könnte deshalb eine „sprachlich artikulierte“ Zielsetzung des U nterrichts , die nicht „ä ußerlich“ messbar ist, kein Lernziel sein. Offenbar enthält jedoch jegl icher Unterricht auch Ziele, die interne Strukturen modifizieren und nicht messbar sind. Um dieses Defizit auszugleichen, gibt Meyer [Me65b] eine modifizierte Lernzieldef inition an: Lernziele beschreiben die „ sprachlich artikulierte Vorstellung über die durch Unterricht (oder andere Lehrveranstaltungen) zu bewirkende Verhaltensdisposition eines Lernenden . Indem das Wort Verhaltensänderung durch Verhaltensdisposition ersetzt wird, wird de r Begriff des Lernziels aus seiner starken Bindung an Operationalisierbarkeit gelöst. Ein Lernziel muss den Lernenden in die Disposition versetzen ein bestimmtes Verhalten zu zeigen, d.h .seine i nterne Wissensstruktur muss dahingehend modifiziert werde, d ass ihm ein bestimmtes Verhalten ermöglicht wird.7 Lernziele und Kompetenzen im Vergleich Sowohl Lernziele als auch Kompetenzen beschreiben offensichtlich eine Disposition, in die der Lernende versetzt werden soll. Im Unterschied zu Lernzielen ist allerdin gs der Begriff der Kompetenz per Definition auf eine Ebene festgelegt, die zwar fachliche Aspekte berücksichtigt, jedoch kein fachliches Detailwissen beinhaltet . So wird etwa in der oben erwähnten Komp etenzstufe V der PISA -Studie nicht erwähnt, welche math ematischen Mod ellierungstechniken angewandt werden sollen. Im Gegensatz dazu wird bei Lern zielen gemäß der angegebenen D efinition kein bestimmter Grad an Allgemeinheit verlangt: Lernziele können detailliert die Di spositionen einer einzelnen Unterrichtseinh eitfestlegen –wobei man dann von Feinzielen spr echen würde –oder sie können auf der Ebene von Bildungszielen formuliert sein. Die vorliegende Arbeit setzt sich –wie bereits erwähnt –dasZiel, die Grundstrukturen der Informatik unter didaktischen Aspek ten zu beschreiben. Bereits ein Blick auf vergleichbare Klassifikationssysteme, wie beispielsweise die fundamentalen Ideen [Sc93] oder die erweiterte ACM -Taxonomie von L. Cassel et al. [Ca07] zeigen, dass derartige Klassifikationen sehr viel detaillierter sein müssen, als es im Rahmen des Kompetenzbegriffs vorgesehen ist. Aus diesem Grund ist es offensichtlich, dass für die hier durchzuführende fachlich -didaktische Analyse die Verwendung von Lernzielen der sinnvollere Weg ist. Es stellt sich allerdings die Frage, ob für eine inhaltlich -didaktische Strukturierung nicht Konzepte al lein genügen wie beispielsweise bei den fundamentalen Ideen [Sc93] , wo keine Lernziele verwendet wurden .Das Problem bei einer derartigen Vorgehensweise ist jedoch , dass Konzepte all einkeine inhalt lich-didaktische Ordnung implizieren .Diealleinige Angabe eines derartigen Konzepts --z.B. Rekursion oder Schachtelung --ist nicht aussagekräftig und für eine Lernzielstrukturierung nicht ausreichend , denn es stellt sich sofort die Frage, was vom Lerne nden bezüglich dieser Wissenskomponente verlangt wird: Soll das jeweilige Konzept, „g ewusst“, „verstanden“, „angewandt“ oder gar im Rahmen einer Problemstellung mit starkem kr eativem Anteil eingesetzt werden? Je nachdem erhält man völlig unte rschiedliche Lernzie le mit unterschiedlichem Anspruch. Insofern ist es offensichtlich, dass aus didaktischer Sicht eine Wissenskomponente stets durch eine kognitive Prozessdimension (wissen, verstehen, anwe nden, …) spezifiziert werden sollte. Lernpsycholog isch wurden derartig formulierte Lernziele von Anderson / Krathwohl [An01] allgemein kategorisiert. Auf diese Taxonomie wird in A bschnitt 1.3 detai lliert eingegangen. 1.2Lernziele zwischen kognitiv en Lerntheorien und Konstruktivismus Der Begriff des Lern ziels hat i n den vergangenen Jahrzehnten eine Wandlung hinsichtlich seiner Bedeutung in der wissenschaftlichen Literatur durchlaufen: Zunächst hochgeschätzt und zentr ales Konzept zahlreicher didaktischer Publikationen wird dieser Begriff bedingt durch die Entwicklungen in der Lernpsychologie inzwischen teilweise kritisch gesehen. Die folgende Disku ssion der Rolle des Lernzielbegriffs in den verschiedenen Lerntheorien wird verdeutlichen, dass speziell für die fachlich -didaktische Strukturierung der Informati k der Begriff des Lernziels dennoch ein äußerst hilfreiches und unverzichtbares Wer kzeug ist.8 1Lernpsychologische Grundlagen 1.2.1Lernziele in b ehavioristisch -kognitiv geprägte Lerntheorien Lernziele: Ein zentraler Bestandteil der Lehre? Bei oberflächlicher (und naiv )vereinfachter Be schreibung der alltäglichen Arbeit eines Lehre nden könnte man dessen Kerntätigkeiten durch die drei Begriffe Unterrichtsvorbereitung, Unte rrichtsdurchführung und Nachbereitung beschreiben. Hinter dieser einfachen Sequenz verbirgt sich offenbar eine Vielzah l von Einzelschritten: Bei der Unte rrichtsvorbereitung muss zunächst festgelegt werden, welches Groblernziel für die Unterrichtseinheit gesetzt wird. Anschließend werden je nach pädagogischem Ansatz aus den Groblernzielen mehr oder weniger detailliert die Feinziele extrahiert. Nach Identifizieren der Feinlernziele und Berücksichtigung der didakt ischen Abhängigkeiten ergeben sich mögliche Unterrichtssequenzen. Die einzelnen Feinlernziele resultieren wiederum abhängig von der pädagog ischen Philosophie in Lern einheiten bestehend aus Motivationsphasen, Phasen der Erarbeitung der wesentlichen Inhalte sowie vertiefenden Übungen. Am Abschluss einer derartigen Einheit könnte eine didaktische Standortb estimmung stehen, inwieweit die Lernziele erreicht wurden; letzte re wird im A llgemeinen informell und mündlich, kann im Speziellen jedoch auch schriftlich in Form von Tests oder Klausuren erfo lgen. In der Nachbereitung wertet der Lehrer seinen Unterricht aus, ermittelt wie die Lernziele von den Lernenden erreicht wurden und lässt die daraus resultierenden Erkenntnisse in die Pl anungen der folgenden Einheiten einfließen. Curriculare Didaktik Der beschriebene Vorgang scheint offensichtlich unabhängig vom speziellen Unte rrichtsfach zu sein; auch müsste er an Schulen jeg licher Art, von der Grundschule bis zur Lehre an Unive rsitäten und in allen Fachdiszipl inen in unterschiedlichen Ausprägungen auftreten. Derartige Überlegungen führten in den Jahren 1965 –1980 in Deutschland zu der sogenan nten lernzielorientierten oder curricularen Di daktik ([Ma65 ], [Ma66] , [Mö80]). Das Lernziel wurde dabei zum bestimmenden Element der Unterrichtsplanung erklärt. Ein Lernziel in diesem Sinne ist eine zumeist informelle Spezifikation der durch den Unterricht zu erzielenden Verha ltensä nderung und muss beobachtbar sein (siehe [Me65b]) . Präzise und detailliert d efinierte Lernzielhierarchien wu rden als unverzichtbare Voraussetzung einer effektiven Methodenau swahl und Lernzielkontrolle angesehen. Unter psychologischen Gesichtspunkten orientie rtesich die ler nzielorientierte Didaktik zum einen an behavioristischen Theorien [Sk38], [Th13], Wa[13], wo Lernen in erster Linie als Verhaltensänderung angesehen und damit eine sehr fun ktional geprägte Sichtweise auf den Lernvorgang v ertreten wird. Zum anderen enthie lt sie aber auch Elemente kognitiver Lerntheorien: Die einzelnen Lernziele bau ten abhängig von den j eweiligen fachlichen Strukturen aufeinander auf. In strenger Form konnte sich die curriculare Didaktik in Deutschland nicht durchsetzen; zu be engend waren die starren und oft zu sehr ins Detail gehe nden Unterrichtssequenzen. Andererseits prägt sie noch heute die Lehrpläne, in Form der darin enthaltenen Ler nziele. Instruktionsdesign Etwa parallel zur curricularen Didaktik in Deutschland entstand insbesondere durch die A rbeit von R. Gagnè [Ga65] das sogenannte „Instructional Design “. Das Instruktionsdesign war zunächst alsLehrstrategie für die Ausbildung im militärischen Bereich konzipiert . Daraus resu ltierten sehr viel höhere Anforderungen hinsic htlich der praktischen Verwertbarkeit und Eff i-9 zienz als beispielsweise in der oben erwähnten curricularen Didaktik: Instruktionsdesign ist sehr stark lern -und kognitionspsychologisch geprägt, theoretische Aussagen müssen einer empir ischen Prüfung standhal ten und die Effizienz der jeweiligen Lehrstrategie muss nachgewiesen werden. Darüber hinaus ist die Anwendung des Instruktionsdesign nicht auf den schulischen Bereich beschränkt, es findet auch in der betrieblichen Fortbildung eine Anwe ndung. Instruktionsd esign kann nicht eindeutig einer der gängigen psychologischen Lerntheorien z ugeordnet werden. Vielmehr gibt es unterschiedliche Ausprägungen, in denen jeweils eine oder mehrere lernpsycholog ische Strömungen besondere Bedeutung haben. In Anlehnung an die Hauptströmungen der Lernpsychologie finden sich im Instruktionsdesign Hauptströmungen der Lernpsychologie wie „Behaviorismus“, „Kognitiv ismus“ und „Konstruktivismus“ wieder [Re01, Re06]: Behavioristisch -kognitive Strömung des Instruktionsdesign Wesentliche Ideen der ersten Generation de sInstruktionsdesign ssind behavioristischen U rsprungs. Insbesondere R. Gagnè [Ga65] und Bloom mit seinem Konzept des Mastery Learning [Bl76] sind Protagonisten dieser frühen Phase des Instruktionsdesign s. In Skinner`scher Tra dition sind die einzelnen Lernschritte kleinschrittig vorgegeben und von sehr häufig auftretenden Verstärkungsphasen geprägt. Auch die Bloomsche Lernzieltaxonomie [Bl56], die ebenfalls Elemente kognitiver Lerntheorien beinhaltet, impliziert bezüglich ihrer Umsetzung im Unterricht behavioristische Muster: Überprüfbarkeit der Lernziele und die Existenz einer Ordnung auf den Lernzielen sind eine Voraussetzung für die Umsetzung der Ideen des Instruktionsdesign in b ehavioristischer Form. Bereits in der ersten A usgabe der „Conditions of Learning“ beschränkte sich Gagnè jedoch nicht auf einen rein behavioristischen Ansatz, sondern er fügte dem Instru ktionsdesign als weitere Säule Erkenntnisse der Kognitionspsychologie hinzu. In diesem Sinne sieht er den Lernprozes s nicht nurals operante Kondi tionierung , sondern als einen komplexen Vorgang, der nicht nur extern stimuliert wird, sondern auch von internen mentalen Zustand sübergängen geprägt ist. Das derart behavioristisch -kognitiv geprägte Instruktionsdesign entw ickelte R. Gagnè in den späteren Ausgaben der „Conditions of Learning“ (1970, 1977, 1985) weiter. In der bisher beschriebenen Ausprägung dürfte das Instruktionsdesign durchaus ve rgleichbar sein mit der Curricularen Didaktik im deutschsprachigen Raum [Ma6 5], [M ö80]. Es untersche idet sich von dieser jedoch durch die starke Forderung nach Effizienz und Evaluation sowie in der sehr formal gehaltenen Strategie zur Entwicklung i nstruktionaler Systeme. 1.2.2 Konstruktivistisch geprägte Lerntheorien Das Instruktionsd esign in der bisher geschilderten Form repräsentiert aus philosoph ischer Sicht einen objektivistischen Standpunkt wonach Wissen durch geeignete Entitäten sowie deren Eigenschaften und Beziehungen objektiv beschreibbar sei. Diesem Objektivismus stehen Ve rtreter konstruktivistischer Lerntheorien (etwa [ Ma82a], [Ma82 b], [Gl95a ], [Gl95b] )antipodisch gegenüber. Die Grundideen des Konstruktivismus werden in der Literatur sowohl philosophisch als auch naturwissenschaftlich begrü ndet.10 1Lernpsychologische Grundlagen Philosophische Basis des Kons truktivismus Während in einem objektivistischen Standpunkt Erkenntnis als interpretationsunabhängige Sammlung von Fakten angesehen wird, ist Erkenntnis nach hermeneutische rSicht stets mit I nterpretation verbunden. „Verstehen “ist in Gadamers [Ga60] Philos ophie unabdingbar mit einem Vorurteil des Interpretierenden verbunden. Dabei versucht der Interpretierende die ihm zur Ve rfügung stehende Information mit seiner Erfahrung in Übereinstimmung zu bringen. Der E rkenntnisprozess ist deshalb stets individuell un d an die jeweilige aktuelle Situation gebunden. In ähnlicher Weise argumentierte bereits Heidegger in seinem frühen Hauptwerk „Sein und Zeit“ [He27]: Der Mensch ist zunächst in eine bestimmte Situation „hineingeworfen“. Aus dieser „Geworfenheit“ resultiert die Notwendigkeit mit dem „Zuhandenen“, d.h. mit den konkreten Objekten der Realität, und nicht nur mit deren Repräsentationen, praktisch zu interagieren. Auf den Lernpr ozess übertragen bedeutet dies, dass der Lernvorgang stets in seiner Kontextualität, d.h. in der Gesamtheit der (Vor -) Erfahrungswelt des Lernenden zu sehen ist. Diese „Erfa hrungswelt“ umfasst nicht nur die direkt mit dem Lernobjekt verbu ndenen Inhalte sondern auch die momentane subjektive Lernsituation (Motivation, räumliche Randbedinunge n, etc.) Die Übertragung der Resultate der hermeneutischen Philosophie auf die spezielle Situation der Info rmatik, insbesondere der KI -Forschung, wurde von Winograd und Flores ([Wi86]) vollzogen: Ein informatisches System friert gewissermaßen das „Geworfen sein“ des Programmierers ein und ist somit eine momentane Repräsentation von dessen Erfa hrungswelt. Radikaler Konstruktivismus Maturanas Ansatz ([Ma82a], [Ma82b]) zur Begründung der konstruktivistischen Prinzipien ist biologischer Natur; das Nervensystem wird zunächst als abgeschlossen gegenüber äußeren Einflüssen angesehen. Einzig durch Störungen („Perturbationen“) kann es beeinflusst werden. Inwieweit diese Störungen das biologische System jedoch beeinflussen, bestimmt dieses Sy stem letztendlich selbst. Im radikalen Konstruktivismus als dessen wichtigste Vertreter neben Maturana vor allem E. von Glasersfeld ([Gl95 a]) und H. von Förster ([Fo06]) gelten, werden die Grundanna hmen kognitiver Lerntheorien abgelehnt: Es gibt keine objektive Wahrheit, sondern Wahrheit ist su bjektiv und an das einzelne Individuum gebunden. E. von Glasersfeld vertritt die Ansicht, dass „ dass alles Wissen, wie immer man es auch definieren mag, nur in den Köpfen von Menschen existiert, und dass das denkende Subjekt sein Wissen nur a uf der Grundlage se iner Erfahrung konstruieren kann.“ ([Gl95b]). Der radikale Konstruktivismus grenzt sich von der hermeneutischen Sicht des Verstehens bewusst ab: Verstehen wird hier nur al s Passung zw ischen begrifflichem Verstehen gesehen und nicht als Übereinstimmung im Sinne der oben e rwähnten Herm eneutik. Kritik am radikalen Konstruktivismus Konsequent zu Ende gedacht negiert der radikale Konstruktivismus jegliche objektive wi ssenschaftliche Erkenntnis. Die oben skizzierte Position auf der Grundlage der Arbeiten Heide ggers und Gadamers dagegen ist vorsichtiger: Die Existenz objektiven Erkenntnis wird nicht g eleugnet, vielmehr kann das Subjekt im hermeneutis chen Erkenntnisprozess zur Übereinstimmung mit objektiver Realität gelangen. Über diese erkenntnistheoretische Frage hinaus gibt es jedoch auch einige prinzipielle Punkte ,die gegen den radikalen Konstruktivismus aufgeführt werden: Er hat nicht zu letzt ei n sogenanntes „Selbstanwendungsproblem“; wenn o bjektive Erkenntnis nicht existiert, kann es auch keine allgemein gültige Erkenntnisstheorie g e-11 ben ([Sc99]). Darüber hinaus ergeben sich als direkte Folgerung aus dem radikalen Konstrukt ivismus sehr praktisch e didaktische Probleme: Wenn ein Lernender tatsächlich nur konstruktiv lernen könnte, müsste jeder Mensch den gesamten Erkenntnisprozess der Menschheit „eige nhändig“ nachvollziehen. Außerdem wäre eine Evaluation und somit jede Beurteilung der Lei stung eine s Lerne nden unmöglich. Lernziele und radikaler Konstruktivismus Ein im Kontext dieser Arbeit wichtiger Aspekt betrifft Lernziele: Wenn es keine objektive Erkenntnis gibt, macht es keinen Sinn Lernziele zu definieren, denn das Lernziel, das dann in der Rege l von einem Lehrenden gesetzt wäre, würde nur die subjektive Erkenntnis des Lehre nden repräsentieren. Selbstverständlich wäre es somit auch nicht möglich einen Graph ,der die Beziehungen zwischen den Lernzielen wiedergibt, anzugeben. Auch wäre jegliche For m von Evaluation sinnlos, denn diese würde das Erreichen eines Lernziels testen, dessen Objektivität negiert wird. Wesentliche Elemente, auf denen das oben skizzierte Instruktionsdesign aber auch die curriculare Didaktik basiert, werden somit vom radikalen Konstruktivismus grundsätzlich abgelehnt. Insbesondere ist die Definition von Lernzielen, deren Evaluation wie auch die Repr äsentation didaktischer Abhängigkeiten zwischen Ler nzielen sinnlos. Gemäßigter Konstruktivismus Als Reaktion auf die angeführten Kritikpunkte entwickelte sich der sogenannte gemäßigte Konstruktivismus , der im deutschsprachigen Raum, beispielsweise von Reinmann -Rothmeier und Mandl (vgl. etwa [Re01 ])vertreten wird . Der gemäßigte Konstruktivismus versucht die be iden Extrempositionen „Primat der Instruktion“ (Kognitivismus) auf der einen Seite und „Primat der Konstruktion“ auf de r anderen Seite zu vereinen. Reinmann -Rothmeier beschreibt in [Re01] das Wesen des gemäßigten Konstruktivismus durch das Motto „soviel Instruktion wie nötig und soviel Konstruktion wie möglich“. In der pädagogischen Praxis bedeutet dies, dass Lehre ein gewisses Maß an extern vermittelten kognitiven Strukturen enthält ; diese kognitiven Stru kturen sollten jedoch nicht isoliert und abstrakt sondern stets in Verbi ndung mitauthentischen Situationen vermittelt werden. Im gemäßigten Konstruktivismus spricht man dabei vom sog enannten situierten Lernen. Der zu lernende Begriff muss also stets im Rahmen eines geei gneten Kontextes erfahren werden. Für die Gestaltung dera rtiger situierter Lernumgebungen werden bei [Re94] folgende Prinzipien g enannt: Authentizität der Lernumgebung, situierte Anwendungskontexte, multiple Perspektiven und multiple Kontexte sowie sozialer Kontext. Der gemäßigte Konstruktivismus verbindet u nter dem Begriff des situie rten Lernens die sich auf dem ersten Blick ausschließenden kognitiven und konstruktivistischen Lerntheorien. Es wird weder Notwendigkeit kognitiver Lernziel strukturen noch die Tatsache der Subjektivität des Lernvorgangs geleugnet . Vielmehr ergänzen sich die beiden Theorien: Objektiv erfassbare inhaltliche Strukturen werden unter Berücksichtigung der Subjektivität bzw. der Situiertheit des Erkenntnisprozesses lehr -und erlernbar. Von radikal konstruktivistischen Positionen, die die Existenz objektiven Wissens grundsätzlich verneinen, nimmt der gemäßigte Konstru ktivismus Abstand.12 1Lernpsychologische Grundlagen Instruktionsdesign der zweiten Generation Ist unter den im gemäßigten Konstruktivismus gesetzten Einschränkungen eine Synthese von Instruktionsdesign, in de m von Gagnè angegebenen Sinne, und konstruktivistischen Lernthe orien möglich? Die radikal „instruktionalistische“ Position geht von der Existenz eines einzigen für alle Lernenden optimalen Lehr -und Lernsystems aus. Das Lernsystem ist d abei vereinfacht ausgedrückt ein lineares und statisches System, das die objektiv vorhandene Erkenntnisstruktur wiedergibt. Demgegenüber gibt es gemäß ko nstruktiver Lerntheorien für jedes Individuum, d.h. für jeden Lernenden, einen spezif isches Lernsystem, das dem Lehrenden -wenn überhaupt -nur sehr bedingt zugänglich ist. Auf den ersten Blick scheint eine Strategie, die gleichzeitig Prinz ipien beider Positionen enthält nicht möglich. M. Merrill zeigt jedoch in [Me92], dass Instrukt ionsdesign und Konstruktivismus, sofern man n icht die jeweils radikale Sichtweise einnimmt, konsistent vereinbar sind. Das von ihm beschriebene Instruktionsdesign, das er als Instruktion sdesign der zweiten Generation bezeichnet, lässt sich wie folgt beschreiben: Instruktionsdesign liefert die Syntax zur Repräsentation von Wissen. Die Elemente der Syntax sind dabei fac hübergreifende Konzepte wie beispielsweise Entitäten, Aktivit äten, Prozesse, Eigenschaften und Abstraktionen. Die Art und Weise wie das Wissen e iner konkreten Domäne repräsentiert wird, muss dabei jedoch nicht linear oder statisch sein. Ganz im Sinne des Konstruktivismus kann die Repräsentation des Wissens verschiedene Sichten auf die jeweilige Domäne beinhalten und d amit die oben erwähnten Forderungen des gemäßigten Konstruktivismus gemäß der Prinzipien „situated cognition“, „cognitive f lexibility“ und anchored instruction berücksichtigen. M. Me rril sagt wörtlich ([Me92], Seite 103 in [Du92] ): „While Instructional Design of second gene ration subscribes to be learning as constructed, we do not assume that the resulting cognitive structure is co mpletely idiosyncratic ….. We assume that the semantics or content of cognitive structure are unique to each individual, but the syntax or structures is not”. Instruktionsdesign in aktueller Ausprägun gleugnet somit nicht den prinzipiell konstruktiven Weg des Erkenntnisprozess. E rkenntnis kann im Instruktionsdesign der zweiten Generation nichtlinear, dynamisch und indiv iduell sein. Jedoch werden überfachliche Strukturen postuliert, die die Syntax eine s Lehrsystems konst ituieren und nicht individuell sondern global sind. Im Gegensatz zum radikalen Konstruktivi smus geht M. Merrill [Me92] von der objektiven Existenz übergeordneten abstrakter Wissen sstrukturen aus, die den fachlichen Kern der in verschied enen „Situationen“ kontextualisierten Zusammenhänge repräsentieren. Neben den zahlreichen individuell geprägten „Perspektiven“ auf eine bestimmte Domäne postuliert er einen Wissenskern, der all diesen Perspektiven g emeinsam ist. Ein konkretes Beispiel für die Repräsentation derartiger übergeordneter abstrakter Wissensstrukturen sind Merksätze oder Merkregeln, die bestimmte Zusammenhänge kompr imiert darstellen; den verschiedenen „Perspektiven“ entsprechen die konkreten Probleme, in d enen diese Wi ssensstruktu ren eingebettet sind. Diesem moderaten Standpunkt des Instruktionsdesigns kommen gemäßigte Konstruktivisten wie etwa Spiro et al. [Sp92] schon sehr nahe: Spiro versucht die Vielzahl der möglichen Lehr und Lernpfade durch geeignet verzweigte Hypertextstru kturen abzubi lden und somit „multiple Perspekt iven“ auf einen Lernzusammenhang zu geben. Fazit Die im behavioristisch -kognitiv geprägten Instruktionsdesign vertretene Vorstellung eines einzigen idealen Lehrsystems wird aufgegeben zugunsten e ines Lehrsystems, in dem die Su b-13 jektivität des Lernenden berücksichtigt wird und verschiedene Lehrpfade verfügbar sind. And ererseits gibt der Konstruktivist die Position der vollkommenen Subjektivität des Erkenntnispr ozesses auf und konzidiert bestimmte ty pische Lehrstrategien, von denen jede einzelne ein g ewisses Maß an Intersubjektivität und damit Objektivität aufweist. In diesem Sinne repräse ntieren auch aktuelle Lehrbücher zum Instruktionsdesign der zweiten Generation, wie beispiel sweise das von P. Smit h und T. Ragan [Sm05] oder W.Dick et al. [Di05] ,eine moderne Strömung des Instruktionsdesign , das die Forschungsergebnisse aus dem Bereich konstruktivi stisch und kognitiv geprägter Lerntheorien berücksichtigt und zu einem neuen Lehrsystem sy nthetisiert. Lernziele im Instruktionsdesign der zweiten Generation Wie bereits beim radikalen Konstruktivismus so sollte auch in aktuellen Strömungen des I nstruktionsdesigns die Rolle der Lernziele geklärt werden. Zwar existieren nach Merrill [Me92] objektive Wissens strukturen, die den Kern der in den verschiedenen s ituierten Lernumgebungen und multiplen Perspektiven thematisierten Inhalte repräsentieren, jedoch können diese nicht d irekt evaluiert werden wie etwa D. Jonassen in [Jo92] erläutert: Nachdem moderne Lehrsy steme im Instruktionsdesign die verschiedenen multiplen Erkenntnisperspektiven in situierten Umg ebungen repräsentieren, sollte auch die Evaluation in entsprechende situierte Umgebungen ei ngebunden sein. Abgesehen von reinen Reproduktionsaufgaben muss der Lernende bei der B ewältigung einer Evaluationsaufgabe eine neue „Perspektive“ in seine bisherigen Wissensstrukturen integrieren. Im Sinne der Bloomschen Lernzieltaxonomie [Bl56] hat man es dabei mit Problemen zu tun, die Lernziele beinhalten, welche mindes tens der kognitiven Stufe des Anwendens zu zuordnen sind. In diesen Lernzielen sind die von Merrill postulierten obje ktiven und vom jeweiligen Kontext abstrahierten Wissensstrukturen oft nicht direkt zu erkennen, sondern nur implizit geg eben. Ein Beispiel soll den Zusammenhang verdeutlichen: Bei typischen Problemstellungen aus dem Bereich der Datenbankmodellierung wird in der Beschreibung im allgemeinen nur der reale Kontext beschrieben mit der anschließenden Problemstellung „Geben Sie ein relationales D atenbankmodell an“. Dabei wird implizit davon ausgegangen dass, der Lernende die Eigenscha ften eines relationalen Datenbankmodells, eventuell auftretende Normalisierungsproblematiken, etc. kennt und damit umgehen kann. Hinter dem expliziten Lernziel, „das re lationale Date nbankmodell für eine bestimmte reale Situation anzugeben“ verbirgt sich somit eine Fülle impl iziter Lernziele. Diese impliziten Lernziele dürften den objektiven und intersubjektiven Wissen sstrukturen entsprechen, von denen Merrill spricht. Aus der Sicht eines Lehrenden sind die in einem bestimmten Kontext verborgenen impliziten Wissensstrukturen die eigentlich Wichtigen. Das jeweilige spezielle Evaluationsproblem, das gemäß konstruktivistischen Vorgaben in einen authentischen Kontext eingebe ttet ist, ist aus der Sicht des Lehrenden dagegen eher ein Mittel um zu prüfen, ob der Lernende die darin verborg enen abstrakten Wissensstrukturen erkennt und sie auf den speziellen Kontext anwenden kann. Im Instruktionsdesign der zweiten Generation trete n somit trotz der Berücksichtigung konstru ktivistischer Lerntheorien nach wie vor Lernziele auf. Messbar im streng behavioristischen Si nn ist dabei jedoch höchstens ein Lernziel, das der konkreten Problemstellung der Aufgabe zug eordnet werden kann. Von Int eresse wäre aber gerade die Leistung des Lernenden in Lernzielen, die abstrakte und intersubjektive Wissensstrukt uren repräsentieren.14 1Lernpsychologische Grundlagen Offensichtlich spielen Lernziele also auch bei einer gemäßigt konstruktivistischen Lehrstr ategie und natürlich im Instruk tionsdesign neuerer Prägung nach wie vor eine entscheidende Rolle. Lediglich ihr Charakter hat sich geändert: Nicht alle Lernziele sind bei entsprechend komplexen Fragestellungen evaluierbar. Es gibt Lernziele, die implizit für die Lösung einer b estimmten Aufgabenstellung erforderlich sind, aber nicht evaluierbar sind. Der Lehrende muss jedoch vor der Problemstellung den Lernenden in die Disposition versetzt haben, diese impliz iten Lernziele zu erreichen. Diese Lernziele entsprechen somit genau der von Mey er [Me65b ]in Abschnitt 1.1 gegebenen Definition . 1.3Lernzieltaxonomie n Wie bereits erwähnt, sind aus der pädagogischen Psychol ogie einige Klassifikationen für Lernziele bekannt . Die bekannteste ist die Lernzieltaxonomie von Bloom [Bl56]. Danach wird zunächst zwischen kognitiven, affektiven und psychomotor ischen Lernzielen unterschieden. Die affektiven Lernziele beschreibe n bestimmte emotionale Zustände und die psychomotorischen sind auf ein bestimmtes Zusammenspiel von psychischem Zustand und motorischer Reaktion ausgerichtet; diese beiden sind für die vorliegende Arbeit nicht relevant . Wichtig sind dagegen die kognitiven Lernziele. Bloom definierte eine 6 -stufige Einteilung: Kennen ,verstehen, anwenden, analys ieren,erzeugen (Synthese) ,bewerten. Die ein zelnen Stufen bauen dabei aufei nander auf und enthalten sich aufste igend in der angegebenen Reihenfolge . Lernzieltaxonomie nach Anderson/ Krathwohl Die Bloomsche Lernzieltaxonomie wurde von Anderson/ Krathwohl [An01] erweitert. Anderson und Krathwohl vertau schten zu einem die beiden letzten kognitiven Dimensionen und ordneten dem Prozess der kreativen Problemlösung damit die höchste Stufe zu. Andererseits differenzierten sie die bisher eindimensionale Klassifizierung, indem sie die Lernziele in eine kogniti veProzessd imension –dies entspricht abgesehen von der Vertauschung der höchsten beiden Stufen der Bloomschen Taxonomie –und eine Wissensdimension einordneten. Die Wi ssensdimension ist vierstufig (siehe Tabelle 1.1) : Faktenwissen (grün) , konzeptuelles Wi ssen (hellblau) , prozedurales Wissen (rot) und metakognitives Wis sen(violett) . Wie schon bei Bloom enthalten sich die kognitiven Kategorien und die Wissensdimension aufsteigend. Ler nziele mit geringsten Anforderungen sind somit der Stufe A1 (Faktenwissen der kognitiven D imension „erinnern“) zu zuordnen, Lernziele mit höchsten Anforderungen haben die Stufe D6 (Metakognitives Wissen der kognit iven Stufen „kreieren“). Zum Faktenwissen zählen etwa die grammatikalischen Bausteine einer Sprache und deren Syntax ; z.B. die in der Elementarmathematik verwendete Symbolik, die Syntax einer Progra mmiersprache aber auch die Regeln einer natürlichen Sprache. Faktenwissen durchläuft dabei alle kognitiven Stufen von einfacher Erinnerung an die Symbolik (1. kognitive Stufe ) bis hin zu dem höchst kreativen Vorgang der Entwicklung einer neuen (Programmier -) Sprache und damit ve rbunden einer neuen und sinnvollen Symbolik; es sollte allerdings betont werden, dass bei dem erwähnten Beispiel –Entwicklung einer neuen Programmiers prache –auch Lernziele mit höh eren Wissenskomponenten (konzeptuelle und prozedurale) involviert sind. Konzeptuelles Wissen ist in den soeben genannten Domänen etwa bei Lernzielen zur Sema ntik der elementaren mathematischen Operationen, oder zur Semantik d er Kontrollstrukturen e iner Programmiersprache zu finden. Auch hierbei sind alle kognitiven Prozessdimensionen15 denkbar: Im einfachsten Fall muss der Lernende sich lediglich an die Semantik des Konzepts e rinnern, bei schwierigeren Problemen muss er aus den zur Verfügung stehenden Konzepten das Richtige auswählen und unter Umständen (bspw. bei der erwähnten Entwicklung einer neuen Progra mmiersprache) kann es notwendig sein, neue Konzepte einzuführen (wobei auch hier wiederum Lernziel mit prozedurale roder met akognitiver Wissensdimension beteiligt sein kö nnen). Tabelle 1.1: Lernzieltaxonomie nach Anderson und Krathwohl . Kognitive Prozessd imension Wissensdime nsion1.Erinnern 2.Verstehen 3.Anwenden 4.Analysi eren 5.Evaluieren 6.Kreieren A:Faktenwissen B:Konzeptuelles Wi ssen C:Prozedurales Wi ssen D:Metakogn itives Wissen Unter prozeduralem Wissen versteht man --beispielsweise bei Problemstellungen der theor etischen Informatik –dieFähigkeit eine bestimmte Beweistechnik (Widers pruchsbeweis, Indu ktion, ..) oder bestimmte Algorithmen anwenden zu können ;etwa die Umwandlung eines nich tdeterministischen Automaten in einen deterministischen. Aus den genannten Beispielen wir d darüber hinaus klar, dass auch bei prozeduralem Wissen dieverschiedene kognitive Prozessd imensionen möglich sind: Die bloße Reproduktion eines bekannten Beweises, wäre etwa der kognitive nStufe 1 zu zuordnen ; wenn bei einem Beweis bereits angegeben ist, dass dieser mit Induktion zu führen ist, so haben wir es mit der kognitiven Stufe 3 zu tun; wenn allerdings eine geeignete Bewei stechnik selbständig ausgewählt werden soll, so hat man es mit mindestens mit Stufe 4 zu tun, unter Umständen –sofern keine standardisierte Beweistechnik verfügbar ist – sogar mit Stufe 6 . Die verbleibende –und höchste –Wissensdimension bildet das metakognitive Wissen. Es beschreibt das Wissen des Individuums über die eigenen kognitiven Prozesse („Metacognitive Knowledge is the awareness of ones own cognit ion and parti cular cognitive processes“ [An01 ]). Diese Wissensdimension wird in dieser Arbeit nur am Rande diskutiert. Klassifizierung von Lernzielen nach Anderson/ Krathwohl Ein Lernziel lässt sich nun nach folgender Strategie gemäß Tabelle 1.1 klassifizieren :Grammatikalisch sollteein L ernziel stets ein Prädikat und ein Objekt enthalten ; etwa „Lernende so llen ein Klassendiagramm verstehen“. Aus dem Objekt resultiert die Zuordnung zu der Wissen sdimension und aus dem Prädikat die Zuordnung zur kognitiven Dimension. Objekt ist in dem genannten Satz das Substantiv „Klassendiagramm“. Ein „Klassendiagramm“ repräsentiert das Konzept der Klasse und ist somit konzeptuelles Wissen. Aus dem Verb „verstehen“ ergibt sich die 2. kognitive Prozessd imension . Die Einteilung eines Lernziels in die zweidimensionale Taxonomie erweist sich in der Praxis als nicht unproblematisch. Zwar wird von Anderson / Krathwohl ein Katalog von Verben zur Verfügung gestellt, der die Identifizierung der kognitiven Prozessd imension erleichtern soll, j e-16 1Lernpsychologische Grundlagen doch ist in jedem Einzelfall zu prüfen, ob aufgrund der individuellen Lernsituation nicht eine andere Einstufung als die stereotype gemäß dem genannten Katalog sinnvoll ist. Sowird beispielsweise das Verb „impleme ntieren“ der 3. kognitiven Prozessdimension zugeordnet. Wen n jedoch bei einer Problemstellung in der Informatik gefordert wird „einen Algorithmus für die Problemstellung XY zu implementieren“ so kann das unter Umständen der kognitiven Prozes sdimension 6 zu zuor dnen sein, wenn etwa der zugehörige Algorithmus völlig neu zu entwickeln ist.Darüber hinaus umfasst jeder derartige Entwicklungsprozess selbstverständlich auch anal ytische und evaluierende Elemente. De shalb wird bei den hier vorgestellten Lernzielanalysen im Allgemeinen nur eine untere Schranke der kognitive n Dime nsion angegeben. Ebenso ist die Zuordnung zur Wissensdimension nicht automatisierbar: Das Lernziel „ Lernende sollen das Konzept der Induktion anwenden“ hat eine prozedurale Wissensdimension, denn Induktion ist eine Beweistechnik und die Induktion ein Prozess, obwohl man im ersten Moment ein Lernziel mit konzeptueller Wissensdimension vermutet . In ähnlicher Weise stellt sich die Unterscheidung zwischen prozeduralem und metakognit ivem Wissen bei höheren kognitiven Dimensionen als schwierig heraus: Die bereits angespr ochene Neuentwicklung eines Algorithmus würde man auf der einen Seite wie erläutert einem Lernziel der prozeduralen Wissensdimension und der höchsten kognitiven Stufe zuordnen (kre atives Entwickeln). Auf der anderen Seite ist dabei sicherlich auch die metakognitive Wissen sdimension involviert, denn bei der Entwicklung eines Algorithmus muss das bisherige Wissen reflektiert werden und dieses eventuell neu strukturiert werden. Selbst wenn es sich um eine re ine Restrukturierung bekannter Algorith men handelt, ist es doch stets notwendig, dass der En twickler sein Wissen reflektiert und analysiert. Es stellt sich deshalb die Frage, ob Lernziele mit prozedurales Wissen und hohem kognitivem Niveau nicht stets auch eine metakognitive Ko mponente beinhalt en. Im Weiteren werden wir diese Problematik nicht weiter diskutieren, jedoch sollte dieser Aspekt bei entsprechenden Lernzielen bedacht werden. Bei der Einteilung wurde jeweils versucht, diejenige Wissensdimension zu wählen, die jeweils den d ominierenden Anteil hat. Dieobige Diskus sion verdeutlicht , dass die Lernzielk lassifizierung von Ande rson/Krathwohl zwar sehr gute Richtlinien für die Kategorisierung eines Lernziels gibt, jedoch sollten die dort angegebenen Regeln nicht unreflektiert angewendet werde n. Eine Überprüfung des jeweiligen Kontexts ,--beispielsweise des Vorwissens des Lernenden --ist notwe ndig. 1.4Lernpsychologische Strömungen und Didaktik der Informatik Es stellt sich die Frage inwiefern die erläuterten lernpsychologischen Zusammenhän ge für die Lehre der Informatik von Bedeutung sind. Ihre Relevanz als übergeordnete Th eorie des Lehrens und Lernens ist offensichtlich. Es sollte jedoch detailliert geklärt we rden, ob eine bestimmte lernpsychologische Strömung für die Vermittlung spezifisc h informatischer Inhalte eine dom inierende Rolle spielen könnte. Die Konsequenzen der oben aufgeführten lernpsychologischen Theorien auf die Informatik als Wissenschaft, insbesondere im Bereich der KI (siehe Winograd und Flores [Wi86]), sollen dabei hier n icht betrachtet werden.17 Informatik und lernpsychologische Vorgehenswe ise Um ein fundiertes Urteil hinsichtlich des Anteils an behavioristischen, kognitiven und ko nstruktivistischen Komponenten fällen zu können, werden zunächst einige einschlägige Definit ionen der Informatik als Wissenschaft analysiert : Die ACM (Association for computing machinery) definiert den Begriff „Computing Science“ auf folgende Weise: … systematic study of algorithmic processes that d escribe and transform information; their theory ,analysis ,design , efficiency, implementation , and application. The fundamental question underlying all of computing is “What can be (efficiently) autom ated” [ De89 ] Brauer [Br96] beantwortet die Frage wie folgt: Informatik ist die (Ingenieur -) Wissenscha ft vondertheoretischen Analyse undKonzeption , der organisatorischen und technischen Gestaltung sowie der konkreten Realisierung von (komplexen) Systemen aus miteinander und mit ihrer Umwelt kommunizierenden (..) Agenten oder Akteuren, die als Unterstütz ungssy steme für den Menschen in unsere Zivilisation eingebettet werden müssen Das Positionspapier der GI aus dem Jahre 2006 [Bi06] sieht die Info rmatik -„alsDisziplin der systematischen, automatisierten Verarbeitung von Information “ -„(nicht nur )alseine Ingenieurswissenschaft sondern auch (als) eine Grundlagen -und Systemwissenschaft mit experimentellen Eleme nten“ -„Querschnittsdisziplin …., die heute in alle Lebens -und Wisse nschaftsbereiche wirkt. “ Betrachten wir zunächst die offizielle Definition der AC M: Hier steht, im Gegensatz zur zweiten Definition, die Idee des Algorithmus zur Darste llung und Verarbeitung von Information im Zentrum; anschließend folgt etwas detaillierter eine Beschreibung der zentralen Tätigkeiten: Theorie, Analyse, Entwurf, Realisi erung und Anwendung der jeweiligen Algorit hmen. Die zweite Definition, die 8 Jahre später formuliert wurde, nimmt einen abstrakteren Stan dpunkt ein. Hier ist nicht mehr explizit von Algorithmen die Rede, vielmehr ist di eser Begriff durch das Konzept des Systems ersetzt. Dies impliziert eine gewisse Distanz zu dem techn ischeren Charakter der ersten Definition und die gleichzeitige Einbeziehung der interaktiven Komponente zwischen dem System und dem Anwender. Die zentralen Aktivitäten werden j edoch ähnlic h wie in der ersten Definition durch die Begriffe Theorie, Analyse, Gestaltung und Realisierung charakterisiert. Das Positionspapier der GI vermeidet eine explizite Definition. Die Beschreibung der Info rmatik als Ingenieurs -sowie Grundlagen -und Systemwi ssenschaft führt jedoch die Definition [Br96] konsequent fort. Dabei implizi ert diese Definition die in [Br9 6] und [De89] aufgeführten Aktivitäten des Design’s (Systemwissenschaft) und der Realisierung (Ingenieurwissenschaft) und sowie der Analyse und der theoretischen Beschreibung (Systemwissenschaft und Grundl agenwissenschaft). Welche Folgerungen lassen sich aus den genannten Definitionen für den Unterricht ableiten? Wenn theoretische Analyse, Konzeption, Realisierung und Gestaltung von mit ihrer Umwelt kommunizierenden Systemen zentrale Aktivitäten der Informatik sind, so sollte dies in gebot ener didaktischer Reduktion auch für die Lehre von Informatik ge lten. In der Sprache einer pragmatisch geprägten konstruktivistischen Position, bzw. des Instruktio nsdesign’s neuerer G eneration bedeutet dies: Informatik hat theoretische Elemente; in der Sprache der Kognitionspsychologie bilden sie das objektive erfassbare Wissensgerüst, das für die praktische Auseinandersetzung mit Pro b-18 1Lernp sychologische Grundlagen lemstellungen der Informatik er forderlich ist. Es würde den Lernenden im allgemeinen s icherlich zeitlich und, zumindest im Schulbereich, kognitiv überfordern, sich dieses Wissen sgerüst in rein konstruktivistischer Weise zu erarbeiten. Auch benötigt ein Lehrender die G ewissheit, gewisse inhaltliche Zusammenhänge in der wissenschaftlich gefestigten Form vermittelt zu haben. Dazu sind Vorg ehensweisen kognitiv geprägter Lerntheorien notwendig. Ein gewisser instruktionaler Anteil in der Vermittlung wird deshalb u nvermeidbar sein. Entwurf, Gestaltung und Realisierung von Informatiksystemen e rfordert jedoch einen aktiven und zum großen Teil selbstgesteuerten Lernenden, der imstande ist ,das theoretische Wissen bei konkreten Problemstellungen anzuwenden. Da die in der Info rmatik zu realisieren den Systeme „als Unterstützungssysteme in unsere Zivilisation eingebettet“ sind, lassen sich die in einer pragmatisch geprägten konstruktivistischen Sichtweise geforderten „authentischen Kontexte“ und „situierten Umgebungen“ in natürlicher Weise verwirklic hen. In der Phase des Problemlösens finden konstrukt ivistische Strategien die natürlich Anwendung; der Lernende findet in individueller Weise einen Lösungsweg und sucht sich die für seinen Lösungsweg e rforderlichen Teil des instruktional vermittelten begri fflichen Netzwerks. Es zeichnet sich offenbar deutlich ab, dass eine moderat -konstruktivistische Sichtweise bzw. eine Sichtweise ,wie sie vom Instruktionsdesign der zweiten Generation vertreten wird ,für die Lehre der Informatik angemessen zu sein scheint: Ein gewisser instruktionaler Anteil, in dem die entscheidenden theoretischen Strukturen sowie deren Beziehungen vermittelt werden ,geht einer konstruktiv geprägten Phase voraus, in der die Lernenden authentische Problemstellungen lösen und dabei die begri fflichen Strukturen in multiplen Kontexten kenne nlernen. Ein höhere Gewichtung instruktionaler Anteile in der Didaktik der Informatik legen auch neuere Forschungen zur Cognitive Load Theory (CLT) im Kontext informatischen Lernens nahe, wie sie etwa von Gr ay et al. [Gr07] publiziert wurde n:Durch so genannte „fading worked examples“, das sind Übungen, die bereits teilweise ausgearbeitet sind und vom Lernenden ve rvollständigt werden müssen, lassen sich offenbar deutlich bessere Lernzielerfolge e rreichen, als wenn die Lernenden eine Lösung vollständig neu erarbeiten müssen. Der Vorteil dieser Vorg ehensweise ist, dass die Problemstellung auf eine Begrifflichkeit fokussiert und damit den kogn itiven Anspruch (Cognitive Load) auf ein Maß reduziert, das vom Lernend en im Allgemeinen bewältigt werden kann. Die ausschließliche Verwendung derartiger „fading worked examples“ dürfte je doch in die selbe Problematik führen , die von rein kognitiven Lehrstrategien be kannt sind: fehlende Situiertheit und fehlende Authentizität. Insofern können „fading worked examples“ zwar in bestimmten Situationen, etwa bei der Einführung eines Konzepts eine sin nvolle Lehrstrategie dar stellen. Letztendlich sollten die Schüler jedoch durch geeignete Sequent ialisierung derartiger „fading worked e xamples“ schrittweise an Probleme herangeführt werden, die den Ansprüchen konstruktivistisch geprägter Lehrstrategien , wie sie im Bereich der objek torientierten Modellierung etwa von Brinda [Br04] vorgeschlagen wurden, genügen. Auch hierin erkennt man wied erum deutlich, wie kognitive und konstruktivistisch geprägte Lerntheorien i neinander greifen und sich gegenseitig e rgänzen. Dass die gerade erläuterten Zusammenhänge trotz ihrer Selbstverständlichkeit offenbar lange nicht erkannt wurden, zeigt ein B lick in die Entwicklung des Informatikunterrichts an Schulen (siehe etwa [Fo90]): Als zu Beginn der 1970er Jahre der schulische Informatikunterricht ei nsetzte,warer von einer starken Rechnerorientierung dominiert. Lerninhalte waren beispielswe ise binäre Arithmetik, Codierung oder Schaltalgebra. Bei derartigen Inhalten können Prinz ipien des gemäßigten Konstruktivismus, wie die Forderung nach authentischen Problemstellungen19 oder „anchored instruction“, nur schwer umgesetzt werden. Auch die folgende Phase de r so g enannten Algorithmenorientierung hatte in der praktischen Umsetzung mit dem Problem der g eringen Alltagsnähe zu kämpfen: In der Praxis wurden in erster Linie Problemstellungen aus dem Mathematikunterricht algorithmisch bearbeitet. Während der darauf folgenden benutzerorie ntierten Phase wurde zwar versucht, durch die Thematisierung alltagsrelevanter Softwaresysteme die Forderung nach Authentizität zu realisieren, jedoch wurde dabei weniger Wert auf die Ve rmittlung der hinter den Softwaresystemen liegen den Konzepte gelegt .In deutlicher Form zeigen sich die Defizite eines Unterrichtskonzepts, das zu stark auf Benut zerschulung ausgerichtet ist in manchen Ausprägungen der „Informations technische nGrundbildung“ (ITG): Wenn ITG in andere Fächer (beispielswei sein den Mathematik -oder Deutschunterricht) integriert ist , werden die Konzepte aus zeitlichen Gründen entweder an den Rand gedrängt oder finden keine Berüc ksichtigung, da die Lehrkraft nicht über die erforderlichen fachlichen Grundlagen verfügt (siehe etwa [Ko93], [Br02]) .In der Sprache des Instruktionsdesign der zweiten Generation bl eibthier die Vermittlung des intersubjektiv vorhandenen konzeptuellen Netzwerks unberüc ksichtigt. Erst mit dem informationszentrierten Ansatz von Breier und Hubwieser ([Br 02]) gelang es ,die Fo rderung konstruktivistischer Lernpsychologen bei gleichzeitiger Thematisierung der zugrund eliegenden Konzepte zu erfü llen. Die beschriebene Entwicklung des Schulfaches Informatik erfolgte interessanterweise para llel zu der Genese der wissenschaftlichen Definition des Faches Informatik (ein Zusammenhang, der auch bereits im Lehrbuch von S. Schubert und A. Schwill [Sc04] e rwähnt wird): Die Rechnerorientierung fällt in die Zeit, in der die Informatik primär als Wissenschaft zur Beschreib ung der Strukturen von Datenverarbeitungsanlagen gesehen wird. Eine entspr echende Definition findet sich etwa im zweiten Datenverarbeitungsprogramm der Bundesr egierung aus dem Jahre 1971 [Bm71] . Ab Mitte der 1970er Jahre setzte sich die algorithmenorienti erte Sichtweise in der I nformatik durch (vgl. [Cl74]): Darstellung und Realisierung von Algorithmen und D atenstrukturen standen nun im Mittelpunkt. Auch dies schlug sich wiederum in einer entsprechenden (und bereits e rläuterten) Unterrichtsmethodik nieder. Mit der Massenproduktion von Rechnern und alltagstauglicher Software setzte sich die a rbeitsweltorientierte Sichtweise ([Sc04]) durch. Gemäß der Definition von Coy ([Co92]) steht nun nicht die Maschine, sondern die Organisation und Gestaltung von Arbeitsp lätzen im Mi ttelpunkt. Die oben beschriebene benutzerorientierte Sichtweise mit der Vernachlässigung o bjektiv erkennbarer begrifflicherer Strukturen ist bei einem de rartigen Standpunkt nahezu zwingend. Die Aufnahme des Systembegriffs ([Br96]) in die Defin ition ermöglichte einen ganzheitl ichen Blick auf die Informatik und deren Lehre: Mithilfe geeigneter Modellierungsinstrume nte kann von den situierten Umgebungen und speziellen Kontexten abstrahiert werden und es lassen die jeweils zugrundeliegenden fachlic hen Konzepte darstellen. Die bisherigen Ausführungen implizieren einen Informatikunterricht im Spannungsbogen zwischen einer teilweise instruktional dominierten Vermittlung intersubjektiver Wissensstrukt uren und der Verwendung und Konstruktion individuelle r kognitiver Schemata bei der Lösung konkreter Problemstellungen. Diese Auffassung steht in Einklang mit einschlägigen Lehrb üchern zur Didaktik der Informatik (etwa [Sc04] oder [Hu02 ]): Hier wird dargelegt, dass eine problemorientierte Vorgehensweise unter durchgehender Heranziehung geeigneter Modelli erungstec hniken die zentrale Methode des Informatikunterrichts bildet. Durch die Modellierung20 1Lernpsychologische Grundlagen lassen sich abstrakte Wissensstrukturen aufbauen, unddurch dieThematisierung authentischer, situierter und relevan ter Probleme lässt sich träges Wissen vermeiden .2Fachliche Struktur ierungen der Informatik Nach den bisherigen Ausführungen ist für den Informatikunterricht ein intersubjektives ko gnitives Netzwerk von Begriffen erforderlich, das die fachlichen Strukturen der Informatik s owie deren Beziehungen beschrei bt. Selbstverständlich sollte über den Aufbau dieses Netzwerks innerhalb der fachlichen Experten ein (zumindest grober) Konsens herrschen, denn nur dann ist die geforderte Intersubjektivität gewährleistet. Für die Lehrenden an Hochschulen und insb esondere an Schulen kann dieses begriffliche Netzwerk die Grundlage der detaillierten Lehr -und Unterrichtsplanung sein. Das vorliegende Kapitel analysiert deshalb die aktuell explizit und i mplizit vorhandenen fachlichen Strukturierungen der Informatik hinsichtlich ihrer Verwertbarkeit in der Lehre. 2.1Bekannte Strukturierungen der Informatik Esexistieren bereits Strukturierungen der wichtigsten Begriffe der Informatik. Diezentrale n sollen hiervorgestellt und analysiert werden .Dabei wird zwischen Strukturieru ngen unterschi eden, die sich primär an den verschiedenen Spezialdisziplinen der Informatik orientieren und solchen , die übergeordnete Prinzipien als entscheidendes Kriterium für die Klassifizierung verwenden. Entsprechend werden erstere im W eiteren als dom änenorientierte und letztere als prinzipienorientierte Klass ifikationen bezeichnet. 2.1.1 Domänenorientierte Klassifikationen ACM -Klassifikation Diese Klassifikation ([ Co98]) ist eine Strukturierung , die mit der Version aus dem Jahre 1998 einen vorläufigen Endzustand erreicht hat. Sie wurde bereits im Jahre 1964 in einer ersten Ve rsion veröffentlicht, woraus eine entsprechend umfangreiche und nahezu alle Bereiche der I nformatik umfassende Klassifikation resultierte. Im Jahre 2007 wurde von Cassel [Ca07] ein e Modifikation dieser Klassifizierung vorgeschlagen. Die Intention zur Erstellung dieses Klassif ikationsschemas war jedoch keine didaktische, sondern eher eine bibliographische. In der Vers ion von 1982 nennt sich die Klassifikation noch „Computing Reviews Classification System“, was darauf hindeutet, das man in erster Linie ein System zur Klassifikation der in der Inform atik auftretenden wissenschaftlichen Literatur im Auge hatte. Folglich wird die oberste Ebene der Taxonomie durch Begriffe repräsentiert, d ie stellvertretend für die verschiedenen Spezialdiszi plinen der Informatik stehen: Beispielsweise „Hardware“, „Software“, „Data“, „Theory of Co mputing“; es handelt sich somit um eine domänenorientierte Strukturierung . Leider lassen sich dann viele übergeor dneten Konzepte, wie beispielsweise die Rekursion nur schwer an hinre ichend prominenter Stelle in die Klassifikation einfügen: Sie findet sich auf einer relativ tiefen Ebene des Klassifikationsbaumes bei den Progammierkonstrukten, obwohl Rekursion sicherli ch bei zahlreichen anderen Begriffen der Informatik, wie etwa bei Design -Pattern, formalen Spr achen oder rekursiven Datenstrukturen e ine Rolle spielt (vgl. z.B. M. Schneider [Sc02]).22 Fachliche Strukturierungen der Informatik Domänenorientiert e Klassifikation von P. Denning Eine weitere domänenori entierte Klassifikation wurde von P. Denning vorgeschlagen [De99]. Es handelt sich hier um eine zweid imensionale Klassifikation: Fachlich -inhaltliche Kategorien, wie Algorithmen und Datenstrukturen, Programmiersprachen, Netzwerke, AI, Datenbanken bi lden ei ne Dimension. Orthogonal dazu steht eine Kategorisierung in unterschiedliche Abstrakt ionsniveau s: Theorie, Abstraktion, Design. Im Falle der inhaltlichen Kategorie „Programmie rsprachen“ werden Konzepte wie -Kalkül oder Turing -Maschinen beispielsweise derTheorie, die verschiedenen Programmierparadigmen (objektorientiert, funktional, etc.) der Abstraktion und die konkreten Programmie rsprachen der Designebene zugeordnet. Resümee Das entscheidende Defizit domänenorientierter Klassifikationen ist offensichtli ch: Durch Aufspaltung der Inhalte in die verschiedenen Teildisziplinen fällt es dem Lernenden schwer Konzepte, die in allen Teilbereichen auftreten ,als solche übergreifende Begrifflichkeiten zu erkennen. Lehrstrategien, die ausschließlich auf derartigen K lassifikationen aufbauen, bergen s omit die Gefahr, isoliertes und punktuelles Wissen aufzubauen anstatt die Begriffe zu vernetzen und übergeor dnete Strukturen zu bilden. Insbesondere für den Einsatz in der Lehre wäre jedoch eine Klassifizierung von Bedeutu ng, welche die den verschiedenen Teildisziplinen eines Faches gemeinsamen Konzepte als Strukturierungsleitlinie nverwe ndet. 2.1.2 Prinzipienorientierte Klassifikationen Eine vollkommen andere Strukturierungsstrategie weisen prinzipienorientierte Klassif ikationen, wie die so genannten fundamentalen Ideen von A.Schwill [Sc93] oder die „Great Pri nciples“ von P. Denning [De03], [De0 7] auf. Fundamentale Ideen Die Strukturierung eines Faches nach „fundamentalen Ideen“ geht auf J. Bruner [Br60] zurück. Eine fu ndamentale Idee ist ein kognitives Schema, das vier Kriterien genügt: Dem Hor izontalkriterium, d.h. das Prinzip muss in den verschiedenen Teildisziplinen eines Faches rel evant sein; dem Vertikalkriterium, d.h. das Prinzip muss auf möglichst vielen unte rschiedlichen Abstraktionsniveaus vermittelbar sein; dem Zeitkriterium, d.h. es zeichnet sic h durch zeitliche Invarianz aus und dem Sinnkriterium, d.h. es sollte auch über das Fach hinaus Bedeutung h aben. A. Schwill wandte das Prinzip der fundamentalen Ideen auf die Informatik an [Sc93]. U nter der Hypothese, dass der Softwareentwicklungsprozess die zentrale Aufgabe der Informatik sei, entwickelte er die fundamentalen Ideen der Informatik: Dem Softwareentwic klungsprozess ordnet Schwill die so genannten „Masteri deen“ Algorithmisierung, strukturierte Zerlegung und Sprache zu.Die Masterideen wiederum enthalten verschiedene Ideengruppen wie etwa „En twurfsparadigmen“ oder „Ablauf“. Die einzelnen Ideengruppen werden schließlich mit den e igentlichen Ideen „aufgefüllt“ . So enthält etwa die Ideengruppe der Programmierkonzepte die Ideen: Konkatenation, Alternative, Iteration, Rekursion, Parametrisierung und Nichtdeterm inismus. Innerhalb der Ideengruppe „Hierarchisierung“ werden zwei weitere Untergruppen n amens „Darste llung“ und „Realisierung“ eingeführt. Diese enthalten die Ideen der Schachtelung, des Baumes, der Klammerung und der Einrückung bzw. Compilierung und I nterpretation.2.1 Bekannte Strukturierungen der Infor matik 23 Die Masteridee der „Sprache“, die ursprünglich lediglich die Ideengruppen „Syntax“ und „S emantik“ beinhaltete, wurde von E. Modrow weiterentw ickelt [Mo06]. Great Principles Einen völlig anderen Weg als in der Arbeit aus dem Jahre 1999 [De99] wählt P. Denning in den „Great Principles of Computing“ [De03], [De0 7]. Zentrales Element der Klassifikati on sind die so genannten „Great Principles“, die sich in verschiedenen Teilgebieten der Informatik und innerhalb eines Gebietes an zahlreichen Stellen wieder finden lassen [De0 7]; so sind etwa die P –NP Problematik, der Algorithmusbegriff, oder die versch iedenen Zeitkomplexitäten zu den Great Principles zu zählen. Dabei verwendet Denning für ein derartiges „Great Principle“ eine Definition, die der Definition der fundamentalen Idee, wie sie von Bruner [Br60] gegeben wird, verblüffend ähnlich ist, wie wohl Denning sich nicht darauf bezieht. Aus didaktischer Sicht w äre es sicherlich sinnvoll auch die „Great Pinciples“ dem Brunerschen Fundamentalitätskriterium zu unterwerfen. Im Vergleich zu den fundamentalen Ideen ist allerdings die Klassifizierung von P. Den ning etwas abstrakter: So wird die Analyse beispielsweise nicht von vornherein auf den Softwar eentwicklungsprozess eingeschränkt. Auch die oberste Strukturierungsebene ist mit den Kateg orien „Computation“, „Communication“, „Recollection“, „Automation“, „Ev aluation“ und „D esign“ deutlich allgemeiner als die Masterideen von Schwill. Diese lassen sich eher als Sub Kategorien der obersten Strukturierungsebene der Great Principles interpretieren. Trotz dieser etwas größ eren Abstraktheit haben die „Great Principl es“ den Nachteil, dass die Strukturierung nur bis zur zweiten Ebene durchgeführt wird und, um in der Nomenklatur der fundamentalen Ideen zu bleiben, auf der Stufe der Maste rideen stehen bleibt. Resümee Offensichtlich verbleiben aus didaktischer Sicht als Arbeitsgrundlage für eine Klassifikation der zentralen Begriffe der Informatik in erster Linie die prinzipienorientierten Klassifikati onen. Der Schwill’sche Ansatz, wie auch dessen Modifikationen nach Modrow und nicht zuletzt die „Great Principles“ von Den ning werfen jedoch eine entscheidende Frage auf: Handelt es sich bei den fundamentalen Ideen bzw. bei den Great Principles empirisch nachweisbar um überg eordnete Prinzipien der Informatik? Erfüllen Sie tatsächlich die Brunersche Forderung nach Fu ndamentali tät [Br60]? Für die fundamentalen Ideen wurde die „Fundamentalität“ nur teilweise gezeigt. In [Sc06] wird beispielsweise erläutert, dass es fundamentalen Ideen gibt, die das H orizontalkriterium, d.h. die Relevanz der Idee in den verschiedenen Teilbereiche n der Info rmatik, nicht erfüllen. Außerdem ist die Semantik der Beziehungen innerhalb des „Id eenba umes“ nicht streng spezifi ziert. Darüber hinaus gibt es Stimmen, die sich äußerst kritisch mit den fundame ntalen Ideen auseinandersetzen : Etwa R. Baumann [Ba 98], der nicht nur Teile des Katalogs der Ideen, sondern auch deren hierarchische Anordnung ablehnt. Auch wurde bisher noch nicht sy stematisch und empirisch untersucht, welche der verschiedenen Ideen den Bruner’schen Krit erien g enügen. Bei den „Great Prin ciples“ fehlt ebenso eine Methode zur Rechtfertigung eines Prinzips als „groß“, obwohl die fachliche Bedeutung der einzelnen „Great Principles“ grundsätzlich pla usibel ist. Darüber hinaus mangelt es den „Great Principles“ an Detailliertheit und formale r Spezifikation. In der aktuellen verfügbaren Form [De07] sind sie nur informell und allgemein b eschrieben. Für die Umsetzung in der Lehre benötigt man jedoch eine begriffliche Klassifizierung, die über das in von P. Denning [De04] angegebene Niveau (Autom aten, Kry ptographie, Selbstreferenz, Sprachen) h inausgeht.24 Fachliche Strukturierungen der Informatik 2.1.3 Kritik an rein konzeptuellen Klassifizierungen Neben der Frage des empirischen Bedeutungsnachweises und der Detailliertheit der Klassif ikationen ergibt sich bei der Frage des Einsatzes der St rukturierungen in Lehre und Unterricht jedoch ein sehr grundsätzliches Problem: Was bedeutet es für den konkreten Unterricht, wenn beispielsweise das Konzept des Automaten oder das Konzept der Synchronisation als fund amentale Idee bzw. als „Great Principl es“ bezeichnet wird? Sicherlich, dass dies Konzept im U nterricht und der Lehre zu thematisieren ist. Der dabei mögliche Spielraum ist allerdings sehr groß. Er geht von simpler Wiedergabe einer möglichen Definition, über das Verstehen des Ko nzepts, über Anw endung, bis hin zu kreativen Problemen, wo erst erkannt we rden muss, dass dieses Konzept für die jeweilige Problemstellung überhaupt relevant ist. Konzeptuelle Klassif izierungen liefern somit nur einen Hinweis, dass dieses Konzept in irgendeiner Weise für die Lehre relevant ist und „geeignet“ eingebracht werden muss. Der Spannungsbogen von simpler Wiedergabe bis zu kreativem Einsatz eines Konzeptes ist d abeijedoch enorm. Die folgenden beiden Aufgabenstellungen sollen dies exemplarisch verdeutlichen : 1.Geben Sie die Definition eines Mealy -Automaten wieder! 2.Entwickeln Sie ein Programm, das das Verhalten eines Ihnen bekannten Fahrkarte nautomaten simuliert! Modellieren Sie dazu das Verhalten des Fahrkartenautomaten zunächst mithilfe eines Zustand sdiagramms Beide Probleme thematisieren das Konzept des Automaten. Während jedoch die Lösung des ersten eine reine Erinnerungsleistung ist, ist für das zweite ein komplexes Hintergrundwissen (Programmierkenntnisse, praktische Erfahrungen mit Fahrkartenautomaten, Fe rtigkeiten bei der Modellierung vonAutomaten, usw.) erforderlich. Die kognitiven Voraussetzungen für die L ösung der ersten Aufgabe sind dagegen minimal, es muss einfach auswendig gelernt worden sein. Andererseits sind für die Lösung der ersten Aufgabe grundle gende Kenntnisse des Mengenbe griffs notwendig (um die bei der Definition verwendeten Symbole zu verstehen), beim zweiten Problem ist dieser Begriff dagegen direkt nicht e rforderlich. Es ergeben sich somit abhängig von dem zu lösenden Problem völlig unter schiedliche Anfo rderungen an das Vorwissen des Lernenden, obwohl in beiden Fällen dasselbe Konzept themat isiert wu rde. Das verdeutlicht , dass rein konzeptuelle Klassifikationen für die Lehre nur bedingt sinnvoll sind. Wie im lernpsychologischen Teil bereit s erläutert, sind vielmehr Lernziele und Klassifikationen über Lernzielen notwendig. Lernziele spezifizieren auf welchem kognitiven Niveau ein Konzept vom Lernenden beherrscht werden soll. Und genau in diesem Punkt unterscheiden sich die beiden Beis piele: Beim ersten Problem muss sich der Lernende nur an die Definition eines Automaten erinnern. Im zweiten dagegen muss er analysieren , ob der von ihm konzipierte Automat den Anforderungen eines realen Fah rkartenautomaten genügt. Unter Verwendung der Be grifflichkeiten der Lernzieltaxonomie von Anderson und Krathwo hl [An01] habe n wir es hier mit Lernzielen der selben Wissensdimension , jedoch auf völlig unterschiedlicher kognitiver Prozessdimension zu tun. Folgerung Für die Verwendung im praktischen Unterr icht muss ein Netzwerk von Lernzielen anstatt e ines Netzwerks von Konzepten definiert werden. Zum einen können zwischen Lernzielen dida ktisch sinnvolle Vorrangrelationen, wie etwa im Instruktionsdesign neuerer Prägung [Sm05], d e-2.1 Bekannte Strukturierungen der Informatik 25 finiert werden; auf diese We ise wäre das von Vertretern des Instruktionsdesigns [Me92] post ulierte intersubjektive kognitive Netzwerk formulierbar. Lernziele haben darüber hinaus den Vo rteil, dass sie lernpsychologisch genau untersucht sind und etablierte Forschungsergebnisse ve rfügbar sind. So lassen sich Lernziele etwa nach Bloom [Bl56] eindimensional oder nach Anderson/Krathwo hl [An01] zweidimensional hinsichtlich ihrer kognitiven Anforderungen k ategorisieren. 2.1.4 GI –Standards Mit den im Jahr 2008 erstmals veröffentlichten GI –Standards [GI08] (vorbereitende Arbeiten durch H. Puhlmann und S .Friedrich [Pu03], [Pu05] , [Fr07] )führender Persönlichkeiten der bundesdeutschen Didaktik der Informatik sollen „ Grundsätze und Standards für die Info rmatik in der Schule “ definiert werde n. In die Standards flossen nicht nur die oben erwähnen Taxon omien sondern (vermutlich in erster Linie) die Lehrpläne zur Schulinformatik aus verschi edenen Bundeslä ndern ein. An kritischen Analysen zu den GI -Standards mangelt esmomentan noch etwas. Eine f undie rte Analyse aus bildungstheoretischer Sicht liefert K. Reiser [Re09]. Darin werden die GI Standards hinsichtlich ihrer Eignung als Bildungsstandards detailliert untersucht und es wird gezeigt, dass die GI -Standards zwar die formalen Merkm ale guter Bi ldungsstandards im W esentlichen erfüllen, die GI -Standards jedoch aufgrund des Fehlens eines Kompetenzmodells formal noch nicht als Bildungsst andard vorgeschlagen werden können . Indervorliegenden Arbeit sollen die GI -Standards jedoch rein von der fachlic hen Seite b eleuchtet werden. Zwar sind die Standards nicht direkt mit den Lernzielen des hier angestrebten Netzwerk svergleichbar, jedoch sollten die hier diskutierten Lernziele in den Standards entha lten sein. Die Standards sind in„Inhaltsbereiche“ un d „Prozessbereiche“ gegliedert. Erstere werden au fgeteilt in die Bereiche „Information und Daten“, „Algorithmen“, „Sprache und Automaten“, „Informatiksysteme“ und „Informatik, Mensch und Gesellschaft“. Die Prozessbereiche entha lten die Standards zum „Model lieren und Implementieren“, „Beurteilen und Bewerten“, „Stru kturieren und Vernetzen“, „Kommunizieren und Kooperieren“ sowie „Darstellen und Interpreti eren“. Für diese Bereiche werden für die Jahrgangsstufen 5 –7 und 8 –10jeweils die Standards definiert. Ein konkretere Diskussion der GI –Standards erfolgt in den Kapiteln 4 –6nach En twicklung der entsprechenden Lernzielgraphen . DieGliederung der GI –Standards erfolgt in Anlehnung an die NCTM –Standards (Nati onal Council of Teachers of Mathematics) [Nc00] für den US -amerikanischen Mathematikunte rricht. Diein den Prozessbereichen auftretenden Kategorien sind den in [Nc00] genannte nsehr äh nlich: Zum Beispiel „Beurteilen und Bewerten“ in [GI08] vs. „Reasoning an dProof“ in [Nc00] oder „Kommunizieren und Kooperieren“ und „Darstellen und Interpretieren“ in [GI08] vs. „Communication“ und „Representation“ in [Nc00]. Bei den Inhaltsbereichen lassen sich dagegendieinformatischen Fachspezifika eindeutig erkennen: Die Bereiche „Numbers an Operat ions“, „Alge bra“ oder „Geometry“ aus [Nc00] sind eindeutig mathematische Themenbereiche, während die oben genannten I nhaltsbereiche der GI –Standards klar informatischer Natur sind. Ein Problem, das schon bei den oben genannten Klassifikationen erwähnt wurde, tritt auch bei den GI –Standards auf: Wie die fundamentalen Ideen oder die Klassifikationen von P. De nning wird in den Standards kaum darauf eingegangen ,auf welcher Wissensbasis die Sta ndards gründen. Z war wurden die Standards von einer Gruppe renommierter Wi ssenschaftler entwo r-26 Fachliche Strukturierungen der Informatik fen, jedoch sollte ndiese zumindest prinzipiell aus übergeordneten Kriterien ableitbar sein oder empirisch untermauert werden. Diese Forderung mag für mathematische Bildungss tandards u nter Umständen aufgrund der bis in die Antike zurück reichenden mathematik -didaktischen Trad ition vernachlässigbar sein; für die Informatik trifft dies nicht zu, denn wie oben gezeigt, sind die Grundstrukturen der Informatik noch nicht hinreichend gefestigt und i nsofern lassen sich die Standards , obwohl viele von ihnen sicherlich intuitiv klarsein mögen, nicht ohne fundierte B egründung defini eren. Darüber hinaus werfen bereits die Bezeichnungen derKategorien einige Fragen auf: Be ispielsweise werden die Prozessbereiche „Modellieren und Implementieren“, „Str ukturieren und Vernetzen“ und „Darstellen und Interpretieren“ getrennt aufgeführt. Doch enthält nicht jeder Modellierungsprozess auch einen Strukturierungs -und Vernetzungsteilprozess? Ist nicht das Implementieren stets mit Darstellen verbunden? Es stellt sich also bereits auf dieser Ebene die Frage ,welche Beziehungen zwischen den einzelnen Teilbereichen bestehen. Ähnliche Probleme wurden auch bei den fundamentalen Ideen beschrieben. In den folgenden Kapiteln (beispiel sweise in Kapitel 4) werden die einzel nen Standards detaillierter untersucht werden, wobei sie in Bezug zu den Lernzielgraphen gesetzt werden. Ein weiterer Aspekt, der gegen eine zu starke Anlehnung der GI -Standards an die NCTM – Standards spricht, liegt in der Profilierung der Informatik a lsUnterrichtsfach: Es gibt nach wie vor Stimmen, die die Entwicklung eines eigenständigen Faches Informatik kritisch sehen (siehe dazu etwa [Ko08 ]). Insbesondere gibt es Befürworter eines in denMathematikunterricht inte grierten Informatiku nterrichts , etwa im Sinne eines ITG . In einer derartigen Situation sollte sich die Informatik, vor allem in dem Prozessbereich durch Fertigkeiten hervorheben, die nicht in gleicher Weise durch den Mathemati kunterricht abgedeckt sind. 2.2Lernzielanalyse einführender Lehrve ranstaltungen im universitären Umfeld Offenbar eignen sich die aktuell verfügbaren fachlich -didaktisch Taxonomien der Informatik nicht für die Formulierung des im vorhergehenden Kapitel skizzierten intersubjektiven kognit iven Netzwerks. Stattdessen benötig t man Lernziele und Relationen zwischen diesen. Deshalb soll hier zunächst untersucht werden, welche Lernziele im Bereich der Hochschulen gesetzt werden, wobei die Analyse sich exemplarisch auf einführende Lehrveranstaltungen für das B achelorstudium der In formatik beschränkt. Aus offensichtlichen Gründen isthier keine Vollstä ndigkeit (etwa für den gesamten bundesdeutschen Hochschulbereich) angestrebt . Vielmehr e rfolgt eine Beschränkung auf einige richtungweisende Fälle. Der Fokus liegt hierbei auf den Informatikstudiengängen der so genannten TU9 [TU08], der neun führenden T echnischen Un iversitäten Deutschlands ,und hierbei insbesondere auf Modulen zur einführenden Lehrveransta ltungen in die Informatik. Detailliert werden die entsprechenden Modulb eschreibung en der RWTH Aachen, der TU Berlin, der TU Braunschweig und der TU München betrachtet. Die Einzelheiten der Modulbeschreibungen sind in Anhang A zu fi nden.2.2 Lernzielanalyse einführender Lehrveranstaltungen im universitären Umfeld 27 2.2.1 Exemplarische Modulbeschreibungen von Universitäten der TU9 RWTH Aachen Das Modul der einführen den Lehrveranstaltung zur Informatik der RWTH Aachen beinhaltet eine vierstündige Vorlesung mit der Bezeichnung „Programmierung“. Die Lernziele der Vorl esung sind: Beherrschung der wesentlichen Konzepte imperativer und objektorientierter Progra mmiersprache n/-techniken in diesen Spr achen ; Kenntnis der Programmierkonzepte logischer undfunktionaler Programmiersprachen ; Kenntnis grundlegender Datenstrukturen und ihrer Realisierung in verschiedenen Progra mmierparadigmen ; Fähigkeit zur selbständigen Entwicklun g kleinerer Programme und ihrer Dokumentation unter Beachtung üblicher Programmierkonventi onen; Kenntnis grundlegender Beschreibungsformen für Programmierspr achen ; Grund kenntnisse derProgrammverifikation TU Berlin Das entsprechende, ebenfalls vierstündig e Modul der TU Berlin hat den Titel „Algorithm ische und funktionale Lösung diskreter Probleme“ und definiert die Lernziele (dort als Qualifik ationsziele bezeichnet) wie folgt: Sicherer Umgang mit Programmierumgebungen auf Arbeitsplatzrec hnern; Beherrschun gderTechnik undMethodik der Funktionalen Programmi erung; Verständnis grundlegender Datentypen Verständnis der Verfahren von Aufwandsabschätzungen undKorrek theitsbeweise ; Fertigkeit in Argumentation undformaler Darstellung von Lösungen ausgewählter Probleme TU Braunschweig Wie aus dem Anhang A hervorgeht, sind die einführenden Veranstaltungen an der TU Brau nschweig nicht direkt mit den Lehrveranstaltungen der RWTH Aachen, der TU Berlin und der TU-München vergleichbar. Es gibt hier zwei parallel zu be suchende, einführende Lehrveransta ltungen, wobei eine sich mit der Programmierung, die andere mit Algorithmen und Datenstru kturen befasst. Die Vorlesung zu Programmierung hat im Gegensatz zu den Veranstaltungen in Aachen, Berlin und München nur 2 SWST, die Vorlesung zu Alg orithmen und Datenstrukturen dagegen 4. Die Lernziele sind im ei nzelnen: Programmieren I -Vermittlung der Grundlagen der imperativen und objektorientierten Programmierung a nhand der Beispielsprache Java . -Fähigkeit zurErstellung kleinerer Programme in Java . Algorithmen und Datenstrukturen :Über die detaillierten Lernziele dieser Vorlesung liegen keine Information vor28 Fachliche Strukturierungen der Informati k TU München Die Lernziele der einführenden Lehrveranstaltung zur Informatik an der TU München sind: Verstehen derwesentlic hen Konzepte der Informatik auf einem grundlegenden, nicht zu tiefgehenden, jedoch wissenschaftlichen N iveau. Lösen überschaubarer algorithmischer Probleme inJava oder einer ähnlichen objektorientie rten Sprache Programmieren einfacher verteilter undneben läufige Anwe ndungen Verstehen derdiesen Programmiersprachen zugrundeliegenden Konze pte und Modelle Fähigkeit andere zuweisungs -und objektorientierte Programmiersprachen eigenständig zuerlernen. Die Lernziele der einführenden Lehrveranstaltung an der TU München bedürfen einer weiterenErläuterung: Sie sind auf zwei Semester (1. und 3. Fachsemester) verteilt. Dabei soll in e inem Semester das objektorientiert -zuweisungsorientierte Programmierparadigma und in einem zweiten Semester das funktionale Paradig ma thematisiert werden. 2.2.2 Vergleich der Modulbeschreibungen Vergleicht man die angegebenen Modulbeschreibungen, so fällt auf, dass jede Universität e inen anderen Zugang zur Informatik wählt: Während die TU Berlin ganz auf den Ansatz über das funktiona le Programmierparadigma setzt, wird an der TU Braunschweig ein stark an der Programmiersprache Java angelegter Zugang gewählt. In den einführenden Leh rveranstaltungen an der RWTH Aachen gewinnen die Studierenden im ersten Semester einen Überblick über alle gängigen Programmierparadigma, wogegen an der TU München im ersten Semester die wesen tlichen Konzepte der Informatik im objektorientierten und in einer weiteren Vorlesung die Ko nzepte im funktionalen Paradigma vermit telt werden . Offenbar gibt es an bunde sdeutschen Universitäten mehrere unterschiedliche Zugänge zu den wesentlichen Konzepten der Informatik. Grundsätzlich scheinen sich dabei zwei verschiedene Lehrstrategien herauszukristallisieren: Zum einen der Weg über das funktionale und zum and eren der W eg über das objektorientiert –zuweisungsorientierte Programmierparadigma. Die Ta tsache ,dass etwa an der TU München undder RWTH Aachen versucht wird beide Wege zu th ematisieren an der TU Berlin dagegen zu Beginn das funktionale Paradigma im Mittelpunkt steht, deutet darauf hin, dass es innerhalb der Dozenten der TU9 keinen Konsens hinsichtlich einer idealen Lehrstrategie für einführende Vorlesungen in die I nformatik gibt. Aus lernpsychologischer Sicht ist dies nicht weiter erstaunlich; wie in Kapitel 1 erläutert, ist es geradezu zwingend, dass eine Wissensdomäne durch unterschiedliche Perspektiven repräse ntiert wird. Funktional oder objektorientiert –zuweisungsorientierte Lehrstrategie sind damit l ediglich unterschiedliche Repräsentationen derselben ko gnitiven Grundstrukturen. Von besond erem Interesse sind deshalb die (intersubjektiven) Begrifflichkeiten, die diesen verschiedenen Repräsentationen gemeinsam sind, denn diese würden den Kern des Faches repräsentieren. Dies könnten dann Elemente sein, die b eispielsweise in den fundamentalen Ideen oder den „Great Principles“ bereits festgelegt wurden. Die bisherigen Ausführungen legen natürlich nahe, dass die beiden hier genannten Perspekt iven (funktional und objektorientiert –zuweisungsorientiert) nicht di e einzigen Sichten auf die fachliche Domäne „Informatik“ sind. Weitergehende Recherchen würden sicherlich zusätzliche2.2 Lernzielanalyse einführender Lehrveranstaltungen im universitären Umfeld 29 Perspektiven zu Tage fördern. Es ist jedoch nicht Ziel dieser Arbeit diese Repräsentationen in ihrer gesamten Bandbreite zu beschreiben. V ielmehr soll e xemplarisch gezeigt werden, wie aus einer bestimmten Sicht das dahinterliegende kognitive Netzwerk erarbeitet und analysiert we rden kann. 2.2.3 Exemplarische Klassifizierung der Lernziele in den Modulkatalogen Diein den Modulkatalogen genan nten Lernziele lassen sich nicht direkt den Lernzielklassen von Anderson/Krathwo hl [An01] zuordnen. Zunächst müssen sie auf eine Form gebracht we rden, dass sie aus einem einzigen Satz bestehen und sich die oben beschriebene Regel (Kapitel 1.3), wonach aus dem Prädikat die kognitive Prozessdimension und aus dem Objekt die Wi ssensdimension folgt , anwenden lässt . Im Falle d es ersten Lern ziels der Lehrveranstaltung „Pr ogrammierung“ an der RWTH Aachen wären das die fo lgenden : Tabelle 2.1.Lernziele der Einführu ngsveranstaltung Programmierung an der RWTH Aachen RWTH Aachen: Programmierung Lernziel Klassifizierung Wesentliche Konzepte imperativer Programmiersprachen beherrschen B4 Wesentliche Konzepte funktionaler Programmiersprachen beherrschen B4 Wesentliche Konzepte imperativer Programmiertechniken beherrschen C4 Wesentliche Konzepte funktionaler Programmiertechniken beherrschen C4 Das erste Lernziel besteht also aus vier Teillernzielen im Sinne der Taxonomie von Ande rson/Krathwo hl. Dabei wird bereits eine Schwierigkeit der Zuordnung offenbar: Es ist hier stets von „beherrschen“ die Rede. Welcher kognitiven Stufe entspricht „beherrschen“? Bei den D etailangaben von Anderson/Krathwo hl findet sich das Verb „beherrschen“ nicht, eine Interpret ation ist deshalb erforderlich! Was bedeutet das Verb „beherrschen“ im deutschen Sprac hgebrauch? Wenn man ein Objekt ,--etwa ein Fahrzeug oder eben auch eine Programmiertechnik --,beherrscht, kann man esin den unterschied lichsten Situationen sinnvoll einsetzen. Es sind somit auf jeden Fall analytische Fertigkeiten erforderlich und wir haben esmindestens mit der kognitive nStufe 4 zu tun .Es könnten aber auch durchaus höhere kognitive Stufen intendiert sein, denn “beherrschen“ impliziert , beispielsweise b eim Programmieren ,auch den kritisch -reflektierenden Einsatz einer bestimmten Kontrollstruktur. Deshalb wurden in Tabelle 2.1 alle Lernziele ,die das Verb „beherrschen“ enthalten ,mindestens der 4. kognitiven Wissensstufe z ugeordnet. Das nächste Problem ergibt sich bei der Zuordnung zurWissensdimension. Bei den Konze pten imperativer Programmiersprachen handelt es sich eindeutig um konzeptuelles Wissen und es ergibt sich die Wissensdimension B. Die Bestimmung der Wissensdimension des Lernziels „Wesentlich e Konzepte imperativer Pr ogrammiertechniken beherrschen“ ist dagegen wiederum problematisch: Zwar tritt auch hier das Substantiv „Konzept“ auf, jedoch geht es hier um Pr ogrammiertechniken, die eindeutig prozeduralen Charakter haben. Man hat es also hier mi t der Wissensdimension C zu tun. Die vollständige Klassifizierung der Lernziele aller genannten Veranstaltungen ist im Anhang A.2 zu finden. Vergleicht man diese Klassifizierungen, so wird deutlich, dass die vier betracht eten Module, obwohl sie eigentlich vergleichbar sein sollen, keine gemeinsamen Lernziele h aben. Dies ist bei Modulen, die zur Vereinheitlichung der Ausbildung von Informatikstudenten30 Fachliche Strukturierungen der Informatik beitragen sollen, erstaunlich. Darüber hinaus sind die Lernziele sehr allgemein gehalten und mitunter auf s ehr unterschiedlichem Abstraktionsniveau . Aus der Sicht einer lernzielorientierten Didaktik sind die gerade klassifizierten Lernziele als Richtlernziele (übergeordnete, ständige Perspektive) anzusehen . Für die Formulierung des ang estrebten Lernzielgraphen sind jedoch Grob -evtl. sogar Feinlernziele erforderlich. Die Ebene der Groblernziele dürfte in den beschriebenen Modulen durch die Abschnitte „Inhalte“ (siehe A nhang A.1) erfasst sein. Jedoch fehlt den „ Inhalte n“die kognitive Prozessd imension. Deshalb i st es nicht möglich aus diesen Angaben ein kategorisierbares Lernziel abzuleiten :Wenn be ispielsweise der Klassen -und Objektbegriff als Inhalt vorgegeben ist, so ist damit noch nicht g esagt, ob der Lernende, die Definition dieser Begriffe wieder geben , ober dies Konzepte einfach nur anwenden oder kritisch –reflektierend einsetzen soll.Im Sinne einer Vereinheitlichung der einführenden Vorlesungen in die Informatik wäre es deshalb wünschen swert, Universitätsübergreifende Grobl ernziele zu definieren Die in haltliche Ebene der Module unter Verwendung von Lernzielen detaillierter zu sp ezifizieren Folgerungen Die Lernziel analyse verdeutlicht, dass es derzeit schwierig ist, einen bundesweiten Konsens hinsichtlich der Lernziele von Einführungsveranstaltungen in die Informatik zu finden. Stattde ssen scheint es mehrere unterschiedliche Lehrstrategien zu geben, die nebeneinander existieren. Wie bereits in Kapitel 1 erwähnt ist dies lernpsychologisch nicht erstaunlich. Im Hinblick auf die vorliegende Arbeit interess iert vor allem, welche detaillierten (Grob -)Lernziele diese Ler nstrategien enthalten. Da in den Modulbeschreibungen nur grobe inhaltliche Anhaltspunkte g egeben werden, müssen andere Wege gesucht werden, die Lernz iele der genannten Strategien herausz uarbei ten. 2.3Lernziele in der Schulinformatik Nachdem in den bisherigen Abschnitten erläutert wurde, dass bei einführenden Lehrveransta ltungen in die Informatik bundesweit kein Konsens hinsichtlich der Richt –und Grobl ernziele erkennbar ist, ist es aufschlus sreich ,die entsprechende Problemstellung für die Informatik an Schulen zu erö rtern. Ähnlich wie im Falle der Hochschulinformatik kann auch hier nicht die Gesamtheit der Leh rpläne zur Informatik erörtert werden. Im Gegensatz zur Hochschulinformatik gibt es jedoch in der Schulinformatik eine Instanz, die für eine einheitliche inhaltliche Zielsetzung s orgt: Die ei nheitlichen Prüfungsanforderungen für Informatik [EP04], die auf Beschlüssen der Kultusmini sterkonferenz basi eren. Die einheitlichen Prüfungsanford erungen für Informatik Die einheitliche Prüfungsanforderung für Informatik (im w eiteren EPA genannt )beschreibt die grundlegenden Anforderungen, die an den Informatikunterricht in der Sekundarstufe II g estellt werden. In der EPA werden damit die Kenntnisse und Fertigkeiten definiert , die von e inem Schüler nach Absolvieren des Abiturs in Informatik erwartet werden können. Die mome ntan a ktuelle Fassung stammt aus dem Jahre 2004.2.3 Lernziele in der Schulinformatik 31 Die EPA beschreibt die fachlichen Inhalte und Qualifikationen sowie die Anforde rungsbere iche; darüber hinaus finden sich auch Beschreibungen der schriftlichen und mündlichen Prüfung bis hin zu konkreten Aufgaben. I m Rahmen dieser Arbeit sind insbesondere die fachlichen und methodischen Kompetenzen sowie die fachlichen Inhalte von Int eresse,denn diese repräsenti eren den Konsens der fachlichen Experten, die an der Erstellung der EPA beteiligt waren. Ein Auszug aus den fachlichen Kompetenzen (Abschnitt 1.1 der EPA) verdeutlicht bereits Unterschiede zu den oben erwähnten Modulkatalogen e inführender Vorlesungen: „Die Prüflinge 1.können Informatiksysteme zur Lösung einer Aufgabenstellung konfigurieren und anpa ssen, 2.können verschiedene Problemlösungsstrategien und Techniken wie Iteration, Rekursion und Kla ssenbildung einsetzen, 3.sind insbesond eremit dem Modellbildungszyklus vertraut; dazu gehören in problemad äquater Auswahl und Reihenfolge: Problemanalyse und Problemspezifikation, Abgrenzen des Problems, Ab straktion, Idealisierung, Strukturieren und Zerlegen in Teilprobleme (Modularisieren), F ormalisieren, Umsetzen unter Berücksichtigung der zur Verfügung st ehenden Werkzeuge und Hilfsmittel, Testen der Lösung, kritisches Reflektieren der Erge bnisse und der Lösung allgemein, Überarbeitung des Modells, Optimierung der Lösung.“ (EPA „Informatik“ A bschnitt 1.1 in der Fassung vom 2.5.2004 .) Der Unterschied zu den Modulbeschreibungen einführender Lehrveranstaltungen zur Info rmatik ist sehr deutlich : Es werden hier Lernziele formuliert, die eine eindeutige kognitive Kla ssifizierung ermöglichen. So ist beispielsweise das 2. Lernziel der in der Lernzieltaxonomie von Anderson in die Kategorie C3 einzuteilen. Erstaunlicher jedoch ist die Tatsache, dass es bei der Formulierung der EPA „Informatik“ o ffenbar gelungen ist ,einen Konsens auf einem Abstraktionsn iveau finden, der die Lernziele, die in den Modu leneinführender Lehrveranstaltungen auftreten, zubeinhalte n schein t. Beispiel sweise lassen sich die oben genannten Lernziel e(1–3) sowohl im Sinne einer funktional g eprägten Lehrstrategie als auch im Sinn e einer objektorientierten Herangehensweise interpreti eren. Die Vorgaben der EPA sind damit offenbar auf einem höheren Abstraktionsniveau als manche Lernziele in den Modulen von Einführungsvorlesungen, wo sich mitunter sogar konkr ete Programmiersprachen fi nden. Grob lernziele in der EPA ? Die soeben angesprochenen fachlichen und methodischen Kompetenzen der EPA, sind als Richtlernziele zu interpretieren, da sie eine übergeordnete ständige Perspektive des Informati kunterrichts repräsentieren, die (beispielsw eise im Falle des Lehrplans Informatik für bayerischen Gymnasien [ISB07 ])inhaltliche Konsequenzen für den Unterricht in den einzelnen Jahrgangst ufenhaben. Im Anschluss an die fachlichen methodischen Kompetenzen spezifiziert die EPA die Inhalte .So werden beispielsweise mögliche Modellierungstechniken beschrieben, in denen von den Abiturienten „Kenntnisse“ erwartet werden (damit wird das Richtlernziel 3 des vorigen A bschnitts genauer spezif iziert) : 1.„Objektorientierte Modellierung ,insbesondere: Objekt, Kl asse, Beziehungen zwischen Klassen, Interaktion von Objekten, Klassendi agramm (z. B. mit UML)32 Fachliche Strukturierungen der Informatik 2.Datenmodellierung ,insbesondere: semantisches Datenmodell (Beschreibung der releva nten Objekte und ihrer Beziehungen, ER-Modell), logisches Datenmodell (z. B. rel ationales Datenmodell) 3.Zustandsorientierte Modellierung ,insbesondere: Variablenkonzept, Automaten (Zustände und Zustandsübergänge), Zustand sdiagramme 4.Modellierung von Abläufen mit Algorithmen ,insbesondere: Algorithmusbegriff, Ablau fstrukturen, einfache u nd höhere Datenstrukturen, Zerlegen in Teilalgorithmen; Stru ktogramme; spezielle Verfahren (z. B. Rekursion, Sortier -und Suchverfahren, Mustere rkennung, Heuristiken) 5.Funktionale Modellierung ,insbesondere: Beschreibung funktionaler Zusammenhänge, Kombinat ion von Funktionen, fun ktionale Abstraktion “ 6.Regelbasierte Modellierung, insbesondere: Fakten und Regeln, Klauseln, Anfragen. (EPA „Informatik“ Abschnitt 1.2 in der Fassung vom 2.5.2004.) Ähnlich wie bei den bereits diskutierten Modulbeschreibungen könne n die angegebenen I nhalte nicht gemäß der Anderson’schen Lernzieltaxonomie kategorisiert werden, da die Ford erung von „Kenntnissen“ zu vage ist. Auch hier lassen sich folglich keine kognitiv kategorisie rbaren Groblernziele angeben. Allerdings können Gemein samkeiten zwischen den inhaltlichen Vorgaben der EPA „Informatik“ und denen der Modulbeschreibungen einführender Vorlesu ngen in die Informatik fest gestellt werd en.Bei den Lehrveranstaltungen an Hochschulen lassen sich mehrere Lehrstrategien identifizieren : Einen Ansatz der von der objektorientiert -zuwe isung sorientierten Sichtweisen geprägt ist und ein anderer, der dem Lernenden über funktionale Modellierungstechniken einen Zugang zur Informatik gibt. Beide Ansätze finden sich auch in der EPA wied er;darüber hinaus ist in der EPA die objektorientiert –zuweisungsorientierte Sichtweise nochmals weiter gegliedert in eher statische Eigenschaften wiedergebende objektor ientierte Datenmodellierung auf der einen Seite und Zustandsmodellierung bzw. Ablaufmode llierung, welche eher dynamische Aspekte erfassen , auf der anderen Seite . 2.4Konsequenzen für die weitere Arbeit Welche Konsequenzen ergeben sich aus den Ausführungen dieses Kapitels? Abschnitt 2.1 zeigte, dass die momentan verfügbaren fachlichen Strukturie rungen der Informatik reinkonze ptuelle Klassifizierun gen sind. Als Grundlage eines intersubjektiven Lernzielgraphen sind sie deshalb nur insofern zu verwenden als sie die Wissensdimension potenzieller Lernziele b eschreiben .Der Nachteil dieser Kategorisie rungen ist der zum Teil fehlende empirische Nac hweis ihrer innerfachlichen Bedeutung. InAbschnitt 2.2 wurden Modulbeschreibungen einführende rLehrveranstaltungen in die I nformatik analysiert und es wurde gezeigt, dass sie im allgemeinen Lernziele nur auf der Ebene von Richtlernzielen enthalten ; außerdem gibt es mehrere unterschiedliche Lehrstrategien, die sich in ihren Lernzielen unterscheiden. Schließlich zeigte die Diskussion der EPA in Abschnitt 2.3, dass es für die Schulinformatik einen Konsens bezüg lich der Richtziele gibt ; lernpsychologisch kategorisierbare Ziele werden allerdings –ähnlich wie bei den Modulbeschreibungen --nur auf dieser abstrakten Ebene ang egeben. Schließlich zeigte sich, dass die Richtziele der EPA und die untersuchten Modulb eschreibungen Gemeinsamkeiten auf weisen .Diese Gemeinsamkeiten bilden im weiteren den r oten Faden an de msich die Arbeit orientiert: Wenn die beschriebenen Richtlernziele in der2.4 Konsequenzen für die weitere Arbeit 33 Schul -und Hochschulinformatik inhaltlich wegweisend sind, so müsste esGroblernz iele geben, diesich unter Berücksichtigung einer entsprechenden entwic klungspsychologischen Anpassung aufsteigend enthalten. Im W eiteren werden deshalb Unterrichtseinheiten und Lehrveranstaltu ngen an Schule und in reduziertem Maße auch Thematiken von einf ührenden Vorlesungen in die Informatik untersucht, die die segemeinsamen Richtziele umsetzen. Dabei sollen die Grobler nziele identifiziert und ihre Beziehungen herausgearbeitet werden. Vollständigkeit istim Rahmen dieser Arbeit nicht das Ziel. Vielmehr wird die im folgenden Kapitel erläuterte Methode der Lernzielanalyse auf spezielle didaktische Kontexte angewandt. Ein derartiger Kontext ist nicht zuletzt aufgrund der herausgehobenen Situation innerhalb der bundesdeutschen Schulinformatik die Informatik an bayrischen Gymnasien .Im Bereich der Hochschulinformatik erfolgt eine B eschränkung auf das Thema der funktionalen Modellierung (und Implementierung) rekursiver funktionaler Datenstrukturen. Der weitere Fortgang der Arbeit ergibt sich damit wie folgt: Methodik der Lernzielanalyse am Beispiel der Algorithmik in der Unterstufe des bayerischen Gymnasiums Lernzielanalyse objektorientierter Modellierung; Grundlage dieser Unters uchung sind dabei die Inhalte der 6. und 7. Jahrgangsstufe im Fach Informatik Funk tionale Modellierung in der Jahrgangstufe 9 an bayerischen Gymnasien : die funktion ale Modellierung ist hierbei eine Datenflussmodellierung vorhandener Datentypen ohne rekurs ive Abläufe Erweiterung der Lernzielanalyse auf rekursive Datenstrukturen im objekt orientierten und funktionalen Paradigma und damit auf Thematiken von Vorlesungen an Hochschulen bzw. Universitäten Am Abschluss der Untersuchung ist dann zu bewerten, ob die Lernzielanalyse dazu geeignet ist, die „roten Fäden“ innerhalb der Lehre zu ident ifizieren und auch die Beziehungen zwischen den Lernzielen darzustellen. Der Nutzen der Arbeit Zum Abschluss des einführenden Teils der Arbeit, ist es sinnvoll, den wissenschaftlichen Nu tzen der Arbeit nochmals zusammenzufassen: Theoretische Grundlagenarb eit zur Behebung der Nachteile bestehender Klassifizierungen, wie etwa der fundamentalen Ideen . Flankierende Arbeit zu den didaktischen Grundlagen der Informatik, wie sie etwa für die Definition der Bildungsstandards erforderlich sind . Hilfsmittel zur Leh rplan -, Modul -bzw. Vorlesungskonzeption . Einige Aspekte werden sich erst im Laufe der weiteren Arbeit herauskristallisieren; sie se ien jedoch der Übersicht halber hier genannt: -Werkzeug zur Bestimmung des Lernzielerfolgs in Lernzielen, die in streng behav iorist ischer Auffassung nicht beobachtbar wären . -Einsatz bei entsprechenden E -Learning Systemen .34 Fachliche Strukturierungen der Informatik3Methodik der Lernziel analyse 3.1 Grundsätzliche Vorgehensweise Die Notwendigkeit einer Lernzielanalyse im Bereich der Schul -und Hochschulinformatik ist nach den bisherigen Ausführungen hinreichend ersichtlich . Prinzipiell ist die Vorgehensweise bei der Lernzielanalyse aus einschlägigen pädagogisch -psychologischen Publikationen wie etwa [Sm05] bekannt. Im Bereich der Informatik an Schulen hat sich dazu jedoch noch keine spezie lleStrategie in ausreichender Weise etabliert. Es sollten deshalb zunächst die allgemeinen R egeln der Ler nzielanalyse auf die spezielle Situation im Informatikunterricht angewandt werden. Dazu dient der vo rliegende Abschnitt. Die im F olgenden erläuterte Methode beschrän kt sich dabei auf kognitive Lernziele, affekt ive und psychomotor ische werden nicht be trachte t.Dieeinzelnen Phasen der Lernzielanalyse werdenzunächst allgemein erläutert und anschließend exemplarisch am Beispiel der Algorithmik im Informatikunterricht der 7. Jahrgangstufe des bayerischen Gymnasiums illustriert. DieLernzielanalyse lässt sich in dreiPhasen aufspalten: 1.Analyse des zugrunde liegenden Lehrplans hinsichtlich der zugehörigen Richtziele und Identifizierung möglichst repräsentative rUnterrichtsabläufe sowie deren expliziter und impliziter Ler nziele. 2.Kateg orisierung der Lernziele unter Verwendung einer geeigneten Lernzieltaxonomie ;in dieser Arbeit wird die Taxonomie vonAnderson / Krathwo hl [An01] verwe ndet. 3.Beschreibung der Beziehungen zwischen diesen Lernzielen mithilfe eines Lernzielgr aphen. Die Detail s der Methode werden im Folgenden b eschrieben. 3.1.1 Auswahl geeigneter Unterrichtsabläufe Als Grundlage der Lernzielanalyse dienen zum einen die Lehrpläne der verschiedenen Jah rgangstufen im Fach Informatik; speziell werden hier die Lehrpläne an bayer ischen Gymnasien betrachtet. Zum anderen werden Aufgaben, --insbesondere Prüfungsaufgaben, die die Inhalte der Lehrpläne umsetzen --, analysiert. Wie bereits an fr üherer Stelle erwähnt (Kap 1.2.2 ), ist es dabei sinnvoll ,zwischen expliziten und impliziten Lern zielen zu unterscheiden. Explizite Ler nziele sind solche, die direkt in der Formulierung der Aufgabenstellung enthalten sind. Typ ischerweise finden sich die expliziten Lernziele am Ende einer Aufgabe in Form von Arbeitsau fträgen: „Erstellen Sie für das bes chriebene Szenario ein Klassenmodell“, oder „Entwickeln Sie einen Algorithmus, der das beschriebene Problem löst“. Beide Aufträge repräsentieren das e xplizite Lernziel der Aufgaben. Im Gegensatz zu expliziten Lernzielen sind implizite Lernziele im Allgemei nen nicht direkt aus der Aufgabenstellung abzulesen, sondern häufig erst der L ösung der Aufgabe zu entnehmen. Der erste der beiden erwähnten Arbeitsaufträge impliziert be ispielsweise die Lernziele „erkennen der erforderlichen Klassen“, „identifizieren der Beziehu ngen“ oder „beherrschen der UML -Syntax“. Offenbar sind die impliziten Lernziele im Gegensatz36 3 Methodik der Lernzielanalyse zu den expliziten nicht evaluierbar im Sinne des Behaviorismus; jedoch dürften sie aus der Sicht des Aufgabenstel lers wichtiger sein als die explizite nLernziel e, die in der Regel auf den sp eziellen Kontext der Aufgabe zugeschni tten ist. 3.1.2 Kategorisierung der Lernziele Im nächsten Schritt werden die Lernziele der Aufgaben gemäß der Lernzielkategorie von Anderson / Krathwo hl [An01] kategorisiert; die De tails dieser Kategorisierung wurden bereits in 1.3 erläutert. Bereits dort wurde ndieProbleme bei einer derartigen Kategorisierung erwähnt. Die dort beschriebenen Probleme veranlassten Fuller et al. [Fu07 ]eine Alternative zu der A nderson’sche n Klassifizi erung zu suchen, welche diespeziellen Anforderungen der Informatik besser berücksichtigt. Dabei wird die Anderson’sche kognitive Prozessd imension in zwei zuei nander orthogonale Dimensionen „interpretieren“ (kennen, verstehen, analysieren, evaluieren) und„produzieren“ (anwenden, erzeugen) aufgespalten . In der vorliegenden Arbeit wird die Fu ller’sche Taxonomie aus folgendem Grund noch nicht verwendet: Obwohl die Idee, die kognit ive Dimension aufzuspalten durchaus erwägenswert scheint, fehlen in der genannte n Arbeit e mpirische Resultate, die die Orthogonalität von Teilen der kognitiven Dimension statistisch untermauern. Hier wird deshalb weiterhin die Anderson’sche Taxonomie verwendet. Wie die weiteren Ausführungen ze igen, wäre die Berücksichtigung der Fuller ’schen Taxonomie im Zweifelsfall kein grundsätzliches Problem, da lediglich die Klassifizierung der einzelnen Ler nziele modifiziert werden müsste nicht jedoch die Relationen innerhalb des Lernzielgraph en. 3.1.3 Beziehungen zwischen den Lernzielen Es hat s ich gezeigt, dass für die Lernzielgraphen zwei Beziehungstypen genügen: Zum einen die Vorrangrelation, die aus dem Instruktionsdesign bekannt ist (siehe beispielsweise [Sm05]) und für Systeme der Informatik erstmals von A. Staller [St06] eingesetzt wurde. Dabei lassen sich zwei Typen von Vorrangrelationen unterscheiden , die bereits von P. Hubwieser in ähnl icher Form ([Hu08]) genannt werden : -Starke Vorrangrelation: Eine Vorrangrelation zwischen zwei Lernzielen A und B b esteht dann, wenn das Lernziel A logis chnotwendig für das Lernziel B ist. Beispielswe ise ist es für die Anwendung der Alternative notwendig, dass die Schüler zuvor die A nwendung der Bedingung beherrschen. -Schwache Vorrangrelation: Eine schwache Vorrangrelation zwischen zwei Lernzielen A un d B besteht dann, wenn das Lernziel A didaktisch notwendig für das Lernziel B ist, nicht jedoch logisch. Ein Beispiel hierfür wäre die nichtr ekursive und die rekursive Aggregationsbeziehung zwischen Klassen. Logisch ist es nicht zwingend vor der Th ematisie rung der rekursiven Aggregationsbeziehung die nichtrekursive zu besprechen, didaktisch dagegen sehr wohl. Die starke wie auch die schwache Vorrangrelation sind transitiv, was die im Weiteren angeg ebenen Lernzielgraphen deutlich übersichtlicher macht. Eine weitere , ebenfalls transitive Beziehung ist die Teilmengenbeziehung: Ein Lernziel B ist Teillernziel eines Lernziels A, wenn das System, das die Wissenskomponente des Lernziels A beschreibt, die Wissenskomponente des Lernziels B als Komponente enthält ; auch diese Bezi ehung wird bereits in etwas anderer Form bei [Hu08] erwähnt . Typischer Beispiele für Teilme ngenbezi ehung sind etwa Lernziele zum Objektbegriff auf der einen und Lernziele zum Attribut bzw. Methodenbegriff auf der anderen Seite. Letztere sind Teillernziele des Lernziels zum O b-Lernzielanalyse am Beispiel der Algorithmik in der Unterstufe 37 jektbegriff, denn der Objektbegriff enthält den Attribut -/ bzw. Methodenbegriff als Kompone nte. Bei Lernzielen, die zueinander in einer Teilmengenbeziehung stehen, ist oft eine spiralförm ige Lehrstrategie sinnvoll. So wi rd beispielsweise im genannten Fall zunächst der O bjektbegriff propädeutisch thematisiert, anschließend kann Attribut und Methode eingeführt werden und somit in einem Rückgriff der Objektbegriff formal definiert werden. Teilmengenbeziehungen können jedoch auch nichtdeterministisch bezüglich der didaktischen Vorgehensweise sein. Ein Beispiel hierfür sind die Lernziele zur Wiederholung, welche die Lernziele zur bedingten Wi ederholung und Zählwiederholung als Teillernziele enthalten. Zwischen diesen beiden sin d keine didaktischen Pri oritäten notwendig. 3.2Lernziel analyse am Beispiel der Algorithmik in der Unterstufe 3.2.1 Lehrplananalyse Die Algorithmik bildet den abschließenden Teil der Informatik innerhalb des Kombination sfachs „Natur und Technik“ in Jahrgangst ufe 7 . Gemäß Lehrplan [ISB07] sollen die Schüler d abei mit einem altersgemäßen Programmiersystem die grundlegenden Bausteine zur algorithm ischen Beschreibung von Abläufen kennenlernen .Einerster Versuch der Klassifizierung der Lernziele des Lehrplanabschn itts zur Algorithmik ist in [La07] zu finden. Dort wird versucht den Vorgaben des Lehrplans Kategorien nach Anderson / Krathwo hl zu zuordnen. Bei dieser Übersetzung scheinen jedoch insbesondere bei der Wahl der kognitiven Prozessd imension zu niedrige Stufe n gewählt worden zu sein. Im Folgenden wird darauf kurz eingegangen. Direkt lassen sich a us dem Lehrplan unter geringfügiger Umstellung de rSatzstellung folge nde Lernziele extrahieren: Tabelle 3.1.Lernziele im Lehrplan Algorithmik des Faches Natur und Technik Richt ziel gemäß Lehrplan Kategorie 1.Sie(Schüler) können einfache, automatisierbare Vorgänge algorithmisch beschreibenC≥3 2.Die Schüler kennen (den Begriff des Algorithmus ) als eines der wichtigsten Grundprinzipien der automatischen Informationsverarbe itungB≥1 3.Die Schüler erhalten einen ersten Einblick in seine (d.h. den A lgorithmusbegriff )Anwendung.B≥2 4.Sie lernen, dass sich ganz allgemein mit Algorithmen A bläufe präzise und verständlich beschreiben lassenD≥3 5.Anhand konkreter Sachverha lte,insbesondere naturwisse nschaftlichen Experimenten, bauen sie Vorgänge aus einf achen Bausteinen auf .C≥3 6.Siekönnen die Algorithmen mit einem Programmiersy stem, bei dem die Einzelschritte des Ablaufs altersgemäß visualisiert werden ,intuitiv umsetzen.C≥2 7.(Sie) f ormulieren …Verarbeitungsvorschriften und Ve rsuchsabläufe inAlltagsspracheD≥338 3 Methodik der Lernzielanalyse 8.Sie programmieren einfache Informatiksysteme unter Ve rwendung von Anweisung, Se quenz, b edingte rAnwe isung undWiederholungC≥3 In [La07] wurd en den Lernzielen im Allgemeinen niedrigere Stufen zugeordnet als in Tabelle 3.1;beispielsweise wird das Lernziel 1 aus Tabelle 3.1 in [La07] fest der Stufe C3 (bzw. einer Unterkategorie ) zugeordnet. Das algorithmische Beschreiben erstreckt sich jedoch, w ie die we iteren Ausführungen in [La07] zeigen, auf Probleme, deren kognitive Dimension größer als 3 ist. Deshalb wurde hier, wie auch bei den folgenden Lernzielen etwas vorsichtiger nur eine untere Grenze angegeben. Auch bei den übrigen Lernzielen wurde in[La07] häufig ein Verb des Leh rplans durch ein Verb aus der Anderson’schen Sammlung ersetzt, wodurch die kognitive Dime nsion unnötig eingeschränkt werden musste . Wie schon an früherer Stelle erläutert, ist die Z uordnung der kognitiven Prozessd imension of t schwierig, da die im jeweiligen Lernziel verwendeten Verben nicht eindeutig einer kognitiven Kategorie zugeordnet werden können. Aus diesem Grunde wurde in Tabelle 3.1 , wie auch bei bisherigen Kategorisierungen, auf die Angabe von Unterkategorien der An derson’schen T axonomie verzichtet. 3.2.2DieLernzielanalyse Methodische Vorbemerkungen Die Lernziele des Lehrplans (Tabelle 3.1) vermitteln nur ein grobes Bild der Lehrinhalte . Ziel istes, wie bereits öfters erwähnt, die Lernziele soweit zu spezifiziere n, dass Abhängigkeiten zwischen diesen erkennba r werden . Dazu müssen die in Tabelle 3.1 formulierten Lernziele auf die zugrunde liegenden fachlichen Details untersucht werden. Als Quelle kommen hier zuentsprechende Schulbücher mit darin enthaltenen Beispie len, Merksätzen, Aufgaben sowie deren Lösungen in Frage. In dieser Arbeit konzentrieren wir uns auf die Ana lyse der Lernziele in g eeigneten Aufgaben. Dies hat mehrere Grü nde: Wie im lernpsychologischen Teil (Kap. 1) erlä utert, enthält eine Übungsa ufgabe st ets ein explizites Lernziel, das direkt aus der Formulierung der Aufgabe resultiert. Das Erreichen dieses speziellen Lernziels i st jedoch nur dann möglich, wenn gewisse implizite Lernziele, die eine notwendige Bedingung für das Erreichen des expliz iten Ler nziels sind, zuvor erreicht wurden. So lässt sich etwa eine Wiederholung bei einer b estimmten Problematik nur dann formulieren, wenn der Lernende die Syntax der Wiederholung und d asKonzept der Wiederholung verstanden hat. Die letztgenannten Lernziele sind zwar nicht e xplizit im Aufgabentext zu finden, werden jedoch implizit vom Autor der Übungsaufgabe vorausgesetzt . Aus der Sicht des Aufgabenstellers sind dabei diese impliziten Lernziele häufig die eigentlich wichtigen, und nicht so sehr der spezielle Kont ext der einzelnen Aufga be; der Aufg abensteller möchte primär wissen, ob bestimmte Fakten, Konzepte oder Vorgehenswei sen auf einem bestimmten kognitiven Niveau erreicht wurden undweniger , ob der Lernende den speziellen Kontext der Aufgabe lösen kann. Es gab Versuche die Lernziele einer Aufgabe durch Identifizierung gewisser Muster autom atisch herauszufiltern (siehe etwa [AG06] , oder [Pe08] ). Die bisherigen Ausführungen über i mplizite Lernziele verdeutlichen jedoch , dass dies nur in den seltensten Fällen mö glich sein dür fte, da Aufgabe n--insbesondere solche Aufgaben, die unter den Gesichtspunkten einer gemäßigt konstruktivis tischen Position konzipiert wurden --in der Regel kaum konkrete Hinweise auf i mplizite Lernziele enth alten.Darüber hinaus wird in eine r der genannten Arbeiten [Pe08] der Einsatzbereich automatischer Extraktionstechniken de facto auf die Analyse von Vorlesungsf olien beschränkt. Der Einsatz im schulischen Kontext schließt sich damit von vornherein aus.Lernzielanalyse am Beispiel der Algorithmik in der Unterstufe 39 Diese kritische Auffassung wird auch durch Arbeiten zur Ermittlung von Lernzielen aus Aufg abenstellungen gestützt ([Be07]). Handelt es sich bei den zu analysierenden Aufgaben um Aufgaben zu einer abschließenden Prüfung einer umfangreicheren Unterrichtsphase ,so müssten diese die zentralen L ernziele di eses Lehrplanabschnitts erfassen. Bei derAnalyse von Prüfungsaufgaben ergibt sich deshalb eine relativ gute Chance durch Identifizierung der impliziten Lernziele ein detailliertere s Bild derim Lehrplan angegebenen Richt ziele zuerhalten .Bei z usätzlichem Herausarbeiten der zwischen diesen Lernzielen geltenden Beziehungen könnte man derart einenerste n Eindruck von dem oben erwähnten intersu bjektive nNetz werk serhalten . Dieses Netzwerk könnte ebenso durch Analyse der Merksätze eines Lehr -bzw. Schulbuches e rarbeitet werden. Aufgaben bieten jedoch den Vorteil, dass ggf. dasLeistung svermögen der Schüler in diesen Aufgaben analysiert werden kann. Daraus lässt sich, wie unten erläutert, unter gewissen Umständen die Leistung der Schüler in einzelnen impliziten Lernzi elen ermitteln. Im Folgenden werden exemplarisch Aufgaben, die im Schuljahr 20 06/2007 im Algorithmikteil des Faches „Natur und Technik “verwendet wurden , analysiert; (Diese Aufgaben wurden z usammen mit den Lösungen vom Autor der vorlieg enden Arbeit für die Erstellung von [La07] zur Verfügung gestellt. )Die Aufgabenstellungen mit zugehörigen Lösungen sind in Anhang B.1 zu finden. Siewaren von Schülern im Rahmen einer Stegreifaufgabe zum Abschluss desLehrplanteils „Beschreibung von Abläu fen durch Algorithmen“ zu bearbeiten. Als Programmie rsprache wurde dabei einkindgerechtes System gewählt ,dessen Akteur ein programmierbarer Roboter ist, der sich in einer begrenzten Ebene bewegen kann und dabei Konstrukte aus Ziegeln errichten kann (sieh e [Fr04a]) . Lernziel graph bei Wiederholungen mit fester Durchlaufszahl Der erste hier vorgestellte Graph stellt die Lernziele der in Anhang B.1 vorgestellte Aufgabe 1dar; wesentlicher Bestandteil dieser Aufgabe ist die Formulierung einer Wiederholung mit fester Durc hlaufs zahl. Konkretes Ziel der Aufgabe ist es, eine Methode zu programmieren , bei der der Roboter eine bestimmte Anzahl von Ziegeln stapelt. Dabei ergeben sich folgende Ler nziele und Lernzielk ategorien (Eine ähnliche Lernzielkategorisierung fin det sich auch bei [La07] ): Tabelle 3.2. Nr. Lernziel Kategorie 0 Konzept der e lementare Anweisungen verstehen / anwenden B≥2 1 Syntax elementarer Anweisungen kennen A≥1 3 Syntax regel fürSequenz enkennen A≥1 2 Syntax regel der Methode ndefinition kennen A≥1 4 Syntax regel der Zählwiederholung kennen A≥1 9 Konzept der Sequenz verstehen / anwenden B≥2 8 Konzept der Met hode verstehen / anwenden B≥2 13 Konzept der Zählwiederholung verstehen / anwenden B≥2 Explizit Einfache Abläufe mit Zählwiederholung simulieren C≥3 Mit Ausnahme des letzten Lernziels sind alle Lernziele implizit. Die Nummern der impliziten Lernzie le beziehen sich auf die Liste in Anhang C, wo alle Lernziele tabellarisch aufgeführt sind.40 3 Methodik der Lernzielanalyse Bei der graphischen Darstellung der Lernziele und ihrer Abhängigkeiten muss aus Gründen der Übersicht eine kompakte Syntax eingeführt werden. Dabei werden, wie in A bbildung 3.1 gezeigt, die einzelnen Wissensdimensionen durch Farben (Faktenwissen: grün, konzeptuelles Wi ssen: blau, prozedurales Wissen rot) und die kognitive Dimension durch Zahlen (kennen: 1, ve rstehen: 2, …, kreatives entwickeln: 6) codiert. Ein blaues Rechteck mit dem Eintrag „3 Sequenz“ repräsentiert somit das Lernziel „Das Konzept der Sequenz anwenden“ mit konzept ueller Wissensdimension. Starke Vorrangrelationen werden mit durchgezogenen Pfeilen codiert, schwache mit gestrichelten. Abbildung 3.1 zeig teinen Ausschnitt aus dem Lernzie lgraph der diskutierten Aufgabe (Lernziele zu Sequenzen und Zählwiederholungen sowie deren Ab hängi gkeiten) . 1Syntax der Sequenz2Sequenz 3Sequenz1Syntax der Zählwiederholung2Zählwiederholung 3Zählwiederholung Konzeptuelles WissenFaktenwissen Abb. 3.1Ausschnitt aus dem Lernzielgraph einer Aufgabe zu Wiederholungen mit fester Durc hlaufszahl (Anhang B .1 Aufgabe 1) . Der Graph enthält ein Muster, das im Weiteren noch sehr häufig auftritt : Der rechte Teil des Graphen besteht aus Lernziele nzuSequenzen auf den kognitiven Stufen 2 und 3 sowie ein em weiteren zur Syntax derSequenz . Diese drei Lernziele sind auf typische Weise miteinander ve rbunden: Gemäß Definition der Anderson / Krathwo hl–Taxonomie ist ein Lernziel der kognit iven Stufe 2 die Voraussetzung für das Lernziel der kognitiven Stufe 3 (Starke Vorrangrelation) ; außerdem ist die Kenntnis einer ents prechenden Syntax ebenfalls Voraussetzung für das Ler nziel der kognitiven Stufe 3. Schließlich lässt sich zwischen dem Lernziel zu Syntax und dem Lernziel der kognitiven Stufe 2 eine schwache (didaktische) Vorrangrelation annehmen , denn eine Syntax macht n ur Sinn, wenn man das zugehörige Kon zept verstanden hat .Zwar lässt sich der Standpunkt vertreten, die Syntax eines bestimmten Konzepts sei unabhängig von dem Ko nzept; man würde dann die Syntax zunächst ohne jeden Bezug zum Konzept lernen. Dies dürfte jedoch in der Praxis der Ausnahmefall sein. Stattdessen wird man derartige Rep räsentationsr egeln stets an ein „Vor -Verständnis “ des Lernenden knüpfen. Im Kontext des Lernzielgraphen bedeutet dies, dass zwischen einem Lernziel zu einem bestimmten Konzept auf ko gnitiver Stufe 2 und einem Lernziel zu Repräsentation dieses Konzepts auf kognitiver Stufe 1 eine didaktische Vorrangrelation besteht, wobei das Konzept die Repräsentation b edingt. Dieses sogenannte „2–1–3 Muster“ zwischen Lernzielen derselben Wisse nskomponente und den kognitiven Stufen 2 und 3 sowie einem weiteren Lernziel zum zugehörigen syntaktischen Wissen auf der kognitiven Stufe 1, tritt im Weiteren noch sehr häufig auf. Deshalb wird es zu einem Symbol zusammengefasst. Abbildung 3.2 zeigt den L ernzielgraph der hier analysierten Aufgaben unter Verwendung derartiger 2 –1–3 Mu ster.Lernzielanalyse am Beispiel der Algorithmik in der Unterstufe 41 Implizite Lernziele 3:Einfache Abläufe mit Zählwiederholungen simulierenProzedurales WisseKonzeptuelles WissenFaktenwissen Textuell 1 2 3 MethodeTextuell 1 2 3ZählwiederholungTextuell 1 2 3Elementare AnweisungTextuell 1 2 3 Sequenz Abb. 3.2 Lernzielgraph einer Aufgabe zur Wiederholung mit fester Durchlaufzahl (Anhang B.1 Aufgabe 1) . Das in der rechten bzw. linken Hälfte von Abbildung 3.1 au ftretende 2 –1–3 Muster ist in A bbildung 3.2 kompakt durch ein blaues Rechteck repräsentiert, das drei kleinere Rechtecke, die die darin enthaltenen Lernziele der kognitiven Stufe 2, 1 und 3 symbolisieren, enthält. Die g estrichelte Linie zwischen den Le rnzielen der kognitiven Stufe 2 und 1 symbolisiert die didakt ische Vorrangrelation zwischen den entsprechenden Lernzielen. In Abbildung 3.1 ist darüber hinaus zu erkennen, das zwischen den Lernzielen zwei er2–1–3 Mustern jeweils eine starke Vorrangrela tion besteht: Eine Sequenz kann beispielsweise nur dann verstanden / angewandt werden, wenn die darin enthaltenen elementaren Anweisungen verstanden / angewendet werden können; gleiches gilt für die Lernziele zum Faktenwissen. Die aus diesen Überlegungen r esultierenden drei (starken) Vorrangrelationen werden in Abbildung 3.2 durch einen breiteren Pfeil repräsentiert. In ähnlicher Weise besteht auch zwischen den Lernzielen zur Sequenz und zur Zählwiederhol ung eine starke Vorrangrelation, denn d ie Zählwiederh olung kann als kompakte Notation für eine aus gleichartigen Anweisungsblöcken bestehende Sequenz interpretiert we rden. Insofern sind für die Lernziele zur Zählwiederholung die entsprechenden Lernziele zur S equenz notwendig. Die wird in Abbildung 3.2 durch den(breiten) Pfeil zwischen den zugehör igen Lernzielgruppen repräsentiert. Die Vorrangrelationen zwischen den einzelnen impliziten Lernzielen lassen sich durch Sta ndardstrategien einschlägiger Schulbücher belegen (etwa [Fr04b ], oder [Br04]). Sequenzen we rden dort stets vor Zählwiederholungen durchgeführt; bevor eine Sequenz form uliert werden kann, benötigt man offenbar elementare Anweisungen. Zwischen Lernzielen zum Methode nbegriff einerseits und solchen zu elementaren Anweisungen, Sequenzen und Wiederhol ungen andererseits lassen sich dagegen keine eindeutigen Vorrangrelationen angeben: Beispielsweise werden in den genannten Schulbüchern Methoden im Rahmen der objektorientierten Modelli erung bereits vor den Wiederholungen behandelt. Andererseits ist dies n icht notwendig, denn Meth oden und Wiederholungen stehen in keinem konzeptuellen Zusammenhang. Gleiches gilt auch für Sequenz und Methode.42 3 Methodik der Lernzielanalyse Folglich impliziert der Lernzielgraph auch bestimmte didaktische Vorgehensweisen: Wä hrend aus der Vorrangrelation zwis chen der Lernzielgruppe zur Sequenz und der Lernzielgru ppe zur Zählwiederholung folgt, dass Sequenzen vor Zählwiederholungen zu behandeln sind, sind die Lernziel gruppe zur Zählwiederholung und die Lernzielgruppe zu Methoden nicht voneina nder abhängig und k önnen in beliebiger Reihenfolge thematisiert werde. Der Lernzielgraph kön nte somit ge nau das leisten, was in Kap 2.4 skizziert wurde: Eine Repräsentation der Wissen sstrukturen der Informatik, die Anhaltspunkte liefert, wie die verschiedenen Lernziele zuei nander in Beziehung stehen und die eine „Landkarte“ didaktischer Lehrpfade bi ldet. Dievorliegende Kategorisierung wirft jedoch auch einige grundsätzliche Fragen auf: Sind Lernziele gleicher Kategorie wirklich vergleichbar ?Soist beis pielsweise die Syn taxregel der Sequenz denkbar einfach (einfaches Aneinanderfügen von elementaren Anweisungen ); die Syntaxregel der Wiederholung enthält dagegen eine klammerartige Struktur, die die Wiederh olungszahl und den Rumpf als„freien Parameter “enthält. Intuitiv wür de man deshalb die Syntax der Wiederholung komplexer ein stufen, als die einer Sequenz. Im Rahmen der Anderson’schen Taxonomie lässt sich dieser Aspekt jedoch nicht berücksichtigen und beide Lernziele haben di eselbe kognitive Stufe .Einähnliches Problem er gibt sich auch auf der Ebene des konzeptuellen Wissens: Konzeptuel leLernziele gleicher kognitiver Stufe werden identisch kategorisiert, o bwohl beispielsweise die Wiederholung schwieriger zu verstehen sein dürfte als die S equenz. Lernziel graph bei gescha chtelten Wiederholungen Eine weitere Aufgabe der abschließenden Prüfung des algorithmischen T eils im Fach „Natur und Technik“ im Schuljahr 2006/2007 war eine Aufgabe, in der geprüft wurde, inwieweit die Schüler geschachtelte Wiederholungen verstanden habe n (siehe Aufgabe 2 in Anhang B.1). Dabei war eine Anweisungsfolge gegeben, die eine zweidimensionale Bewegung des Roboters mit zwei geschachtelten Zählwiederholungen simulierte. Die Schüler sollten den Ablauf der Anwe isungsfolge nachvollziehen und den Weg des Roboters markieren .Bei dieser Aufgabe können folgende impliziten und expliziten Lernziele identif iziert werden: Tabelle 3.3. Nr Lernziel Kategorie 0 Elementare Anweisungen verstehen B≥2 1 Syntax regel elementarer Anweisungen kennen A≥1 3 Syntax regel der Sequenz kennen A≥1 4 Syntax regel der Zählwiederholung kennen A≥1 9 Konzept der Sequenz verstehen B≥2 13 Konzept der Zählwiederholung verstehen B≥2 16 Konzept der geschachtel ten Zählwiederholung verstehen B≥2 Explizit Geschachtelte Zählwiederholung zweidimensional umsetzen C≥2 Im Gegensatz zu den Lernzielen der zuvor diskutierten Aufgabe ist die Bestimmung der ko gnitiven Prozessd imension der Lernziele klar: Das Verstehe n des Programms steht im Zentrum und wirhaben es eindeutig mit der kognitiven Prozessdimension 2 zu tun. Da Lernziele der kognitiven Stufe 3 (Anwenden) fehlen, treten diese selbstverständlich auch nicht in den Mustern auf.Die Vorrangrelationen zwischen d en einzelnen Lernzielen lassen sich wiederum auf Sta ndardstrat egien von Schulbüchern zurückführen .Die Schachtelung von Wiederholungen kann selbstverständlich erst dann behandelt werden, wenn die Wiederholung verstanden wurde , wes-Lernziel analyse am Beispiel der Algorithmik in der Unterstufe 43 halb eine entsprechende Vo rrangrelation besteht .Insgesamt ergibt sich damit ein Graph, wie er in Abbi ldung 3.2 gezeigt wird. Implizite LernzieleTextuell 1 2 Elementare Anweisung 2:Geschachtelten Zählwiederholungen in zweidimensionale Bewegung umsetzenProzedurales WisseKonzeptuelles WissenFaktenwissen 2:Geschachtelte ZählwiederholungTextuell 1 2 Sequenz Textuell 1 2 Zählwiederholung Abb. 3.2 Lernzielgraph einer Aufgabe zum Verständnis geschachtelter Wied erholungen (Anhang B.1 Aufgabe 2 ). Lernzielgraph bei Algorithmen zur Beschreibung von Alltagsvorgängen Während bei den beiden zuvor analysierten Aufgaben derFokus auf die Richt lernziel e 5, 6 und 8 (erste Aufgabe) bzw. 6 (zweite Aufgabe) gerichtet war , stehen in der dritten Aufgabe der genannten Prüfung dieRichtl ernziele 4, 7 und8im Mittelpunkt; es geht um das Formulieren vonAlgorithmen zur Beschreibung alltäglicher Abläufe. Die hier diskutierte Aufgabe, verlangt von den Schülern, die Abläufe bei der Fahrscheinkontrolle in der U -bzw. S -Bahn algorithmisch zu beschreiben (siehe Anha ng B.1 Aufgabe 3). Der Vorgang war dabei in natürlicher Sprache bereits vorgegeben. Es handelte sich somit um einen Übersetzungsvorgang, bei dem Alltagsvo rgänge unter Verwendung algorithmische rStandardelemente in Pseudo code umgesetzt werden sollten.Das s oeben verwendete Wort „umsetzen“ kennzeichnet , dass konzeptuell mindestens die 3. kognit iveProzessd imension (anwenden) angenommen werden muss .Darüber hinaus wird auch stets die kognitive Dimension 2 gefordert (2 –1–3 Muster). ImEinzelnen ergeben sich folge nde Lernziele: Tabelle 3.4.Lernziele für das Übersetzen eines alltäglichen Ablaufs in Pseudocode Nr. Lernziel Kategorie 0 Elementare Anweisungen verstehen / anwenden B≥2 1 Syntax elementarer Anweisungen kennen A≥1 3 Syntax regel der Sequenz kennen A≥1 6 Syntax regel der Bedingung kennen A≥1 7 Syntax regel der Alternative kennen A≥1 5 Syntax regel der bedingten Wiederholung kennen A≥1 9 Konzept der Sequenz verstehen / anwenden B≥2 10 Konzept der Bedingung verstehen / anwenden B≥2 14 Konzept der bedingten Wiederholung verstehen / anwe nden B≥244 3 Methodik der Lernzielanalyse 11 Konzept der Alternative verstehen / anwenden B≥2 Explizit Algorithmen der Alltagssprache in Pseudocode formulieren C≥3 Explizit Fahrscheinkontrolle in U -Bahnen formalisieren D≥3 Der in Abbildung 3.3 präsentierte Lernzielgraph baut auf den bisherigen Graphen auf. Hinz ugekommen sind die Lernziele zu den Konzepten der Bedingung, der bedingten Wiederholun g und der Alternative. Hierbei wurde das Lernziel zum Konzept der Bedingung als no twendig für die Lernziele zu den Konzepten der bedingten Wiederholung und der Alternative eingetragen. Aufgrund der Tatsache, dass sowohl die bedingte Wiederholung als auch die Alternative die Bedingung, oder etwas formaler ausgedrückt eine boolesche Funktion, enthalten, ist diese Vo rrangrelation offensichtlich . Auch die bereits erwähnten Schulbüche r([Fr04 b], [Br04] ),beha ndeln die Bedingung vor der bedingten Wiederholung un d der Alternative. 3:Schachteln von bedingter Wiederholung und Alternative 3:Algorithmen ,die in natürlicher Sprache gegeben sind , unter Verwendung von Pseudocode formalisieren 3:Fahrscheinkontrolle in U -Bahnen in Pseudocode formulierenMetakognitives WissenImplizite Lernziele Textuell 1 2 3Elementare AnweisungTextuell 1 2 3Sequenz Textuell 1 2 3Bedingung Textuell 1 2 3Bedingte WiederholungTextuell 1 2 3Alternative Abb. 3.3 Lernzielgraph einer Aufgabe zur algorithmischen Beschreibung von Alltagsvorgängen (Anhang B.1 Aufga be 3). Zwischen Alternative und bedingter Wiederholung lässt sich dagegen keine eindeutige Vo rrangrelation angeben: Während die erwähnten Schulbücher zuerst die bedingte Wiederholung und dann die Alternative einführen, gehen Hochschullehrbücher, die den Zugang über das fun ktionale Programmierparadigma wählen (etwa [Br97]) den umgekehrten Weg: Zuerst Alternat ive und erst später die Wiederholung als spezielle Form der Rekursion. Obwohl diese beidenLernzielanalyse am Beispiel der Algorithmik in der Unterstufe 45 Bücher --wasdie Klientel betrifft --nicht vergleichbar sind ,zeigt der Vergleich doch, dass eine Vorrangrelation zwischen den genannten Ler nzielen nicht existiert. Der Lernzielgraph in Abbildung 3.3 illustriert bereits, wie unterschiedliche Lehrstrategien abgeleitet werden können: Ausgangspunkt bildet ein Lernziel auf das keine Vorrangrelation zeigt. Im Falle von Lernzielgraph 3.3 ist dies nur das Lernziel zu konzeptuellem Wissen übe r elementare nAnweisungen (später wird deutlich, dass es durchaus mehrere Ausgangspunkte g eben kann). Davon ausgehend lassen sich entweder Sequenzen oder Bedingungen und anschli eßend die Alternative thematisieren. Durch die strenge Trennung von Syntax und Semantik (d.h. in Faktenwissen und konzeptuellem Wissen) ist es darüber hinaus kein Problem, die Progra mmiersprache auszutauschen. Erstmals tritt im Lernzielgraph 3.3 ein Lernziel zu metakognitivem Wissen auf. Hierbei wu rde der prozedurale Anteil, d.h. die Formalisierung natürlicher Sprachkonstrukte mit algorithm ischen Stereotypen vom expliziten Lernziel abgespalten. Lernzielgraphen bei anspruchsvollen geometrischen Problemen Die abschließende Aufgabe der Prüfung (Anhang B.1 Aufgabe 4) setzt nahezu dieselbe n impliziten Lernziele voraus , wie die vorhergehende Aufgabe. Implizite Lernziel e, diehinzuko mmen sind, sind die Lernziele zum Konzept der Methode und der Repräsentation dieses Ko nzepts . Der entscheidende Unterschied zwischen den Aufgaben ist jedoch ei n Lernziel, bei dem die Schüler unter Verwendung des bereits beschriebenen Programmiersystems [Fr04a] einen Alg orithmus zur Darstellung einer Spirale erarbeiten mussten. Da hierbei der Algorithmus weder a ngegeben noch vorher besprochen wurde, handelt es si ch hier um ein Lernziel mit einer kognit iven Dimension von mindestens 4. 4/5:Algorithmen zur Darstellung einfacher geometrischer Strukturen erarbeiten 4/5:Den Roboter eine Spirale laufen lassenImplizite Lernziele Textuell 1 2 3Elementare AnweisungTextuell 1 2 3Sequenz Textuell 1 2 3Bedingung Textuell 1 2 3Bedingte WiederholungTextuell 1 2 3AlternativeTextuell 1 2 3 Methode 3:Schachteln von bedingter Wiederholung und Alternative46 3 Methodik der Lernzielanalyse Abb. 3.4 Lernzielgraph einer Aufgabe zu Algorithmen für geometrische Strukturen (Anhang B.1 Aufgabe 4). Auf die tabellarische Angabe der Lernziele wird hier verzichtet, da diese bereits in den vorh erigen Aufgaben angegeben wurden. Die in dem Lernzielgraph 3.4. verwendeten Vorrangrelati onen wurden bei früheren Graphen b ereits begründet. 3.3Der Lernzielgraph des Lehrplanabschnitts zur Algorithmik 3.3.1 Synthese der einzelnen Lernzi elgraphen Nachdem im vorigen Abschnitt für einzelne Aufgaben d ieLernzielgraphen erarbeitet wurden, interessiert nun besonders, wie der Lernzielgraph des Lehrplanabschnitts zur Algorithmik insgesamt aussieht. Dazu werden die Lernzielgraphen aus den Abbildu ngen 3.1 bis 3.4 ineinem Gr aphen zusammengefasst. Abbildung 3.5 zeigt den entsteh enden Graphen. Hierbei wurde auf die Darste llung der in den Abbildungen 3.1 bis 3.4 enthaltenen prozeduralen Lernziele aus Gründen der Übersichtlichkeit zunächst verzichtet . Bei der kognitiven Dimension wurde für ein bestimmtes Konzept, beziehungsweise für ein bestimmtes Faktenwissen, jeweils die untere Grenze der kognitiven Dimensionen aus den A bbildungen 3.1 –3.4 angegeben. Dabei sollte darauf hingewiesen werden, dass si ch Lernziele gleicher Wissenskomponente jedoch unterschiedlicher kognitiver Dimension aufsteigend en thalten. Das Lernziel „Die Wiederholung anwenden“ enthält somit auch das Lernziel „die Wi ederholung verstehen“! Derartige Relationen sind jedoch in Abbildun g 3.5 nicht ang egeben. 3:Algorithmus (Richtziele 2und 3) Schachteln von KontrollstrukturenWiederholung 3:Schachteln von bedingter Wiederholung und Alternative2:Geschachtelte ZählwiederholungTextuell 1 2 3 MethodeTextuell 1 2 3Elementare AnweisungTextuell 1 2 3Sequenz Textuell 1 2 3Bedingung Textuell 1 2 3AlternativeTextuell 1 2 3Bedingte WiederholungTextuell 1 2 3Zählwiederholung Abb. 3.5 Lernzielgraph des Lehrplanabschnitts zur Algorithmik in Jahrgangstufe 6/7 (ohne proz edurale Lernziele). Bei der Zusammenführung der Lernzielg raphen der einzelnen Aufgaben ist es sinnvoll geeignete generalisierte Lernziel e einzuführen, die gewisse spezielle Lernziele der einzelnen Aufg aben als Teillernziele enthalten :So ist beispielsweise das Lernziel „Bedingte Wiederholung anwenden “ein Spezialfall des Lern ziels „Wiederholung anwenden “, da die bedingte Wiederholung ein S pezialfall der Wiederholung ist .Umgekehrt ist das Lernziel zur „Wiederh olung“ die Generalisierung des Lernziels zur „Bedingten Wiederholung“. Ebenso ist es bei den3.3 Der Lernzielgraph des Lehrplanabschnitts zur Algorithmik 47 Lernzielen zur „Geschachtelten Zählwi ederholung“ und zum „Schachteln von Kontrollstrukt uren“: Auch hier tritt die Teilmengenbeziehung auf, denn eine geschachtelte Zählwiederholung ist eine spezielle Ausprägung des Schachtelns von Kontrollstrukturen. Die Spezialisierungs bzw. Teilmengen beziehung wird graphisch dadurch gekennzeichnet, dass ein s pezialisiertes Lernziel in dem entsprechenden generalisierten Lernziel geometrisch enthalten ist . Dies eDarstellung wurde auch von P.Hubwieser in [Hu08] verwendet . Die Vorrangrelationen ,die an einem generalisierten Lernziel enden, bzw. von einem gener alisierten Lernziel ausgehen, übertragen sich dabei auch auf die Spezialisierungen dieses Ler nziels (siehe etwa das Lernziel zur „ Wiederholung “). Wenn dagegen eine Vorrangrelation an e inem spezialisierten Lernziel endet, bzw. von ihm ausgeht, gilt sie nur fü r dieses spezialisierte Lernziel; beispielsweise sind Lernziele zur „Bedingung“ nur notwendig für Lernziele zur „B edingten Wiederholung“ nicht jedoch alle für Lernziele zur „Wiederh olung“. DieTeilmengen beziehung ist keine Vorrangrelation, sie zeigt stattd essen innerhalb einer b estimmten Menge von Lernzielen Alternativen auf ,eine bestimmte Thematik im Unterricht zu diskutieren .Durch die Teilmengen beziehung lassen sich also offenbar Lernzielhierarchien def inieren. Im E inzelnen wurden im Lernzielgraph von A bbildung 3.5 folgende generalisierten Lernziele eingeführt (diese sind auch in Anhang C aufgenommen) : Die verschiedenen Lernziele zu Konzepten der Wiederholung können zu einem generalisie rtenLernziel zusammengefasst werden. Ebenso können die verschied enen speziellen Lernziele zur Schachtelung aus Abschnitt 3.3.2 zu einem Lernziel „Schachteln von Ko ntrollstrukturen“ vereinigt werden. Die verschiedenen Konzepte zu Kontrollstrukturen sowie zu deren Schachtelung lassen sich als spezielle Konzepte innerhal b des Lernzieles zum Konzept des Algorithmus auffassen. Mit dieser Generalisierung zeigt sich eine Verbindung zu den Richtlernzielen des Lehrplans (Richtlernziele 2 und 3 aus Tabelle 3.1): Der Lehrplan fordert, dass die Schüler den Begriff des Algorithmus kennen und anwenden sollen. Der Lernzielgraph in Abbildung 3.5 zeigt, durch welche Teillernziele (Lernziele zu den einzelnen Kontrollstrukturen und deren Schac htelung) sich dies erreichen lässt und welche didaktische Vorgehensweise hierzu empfehlen swert is t. Es sei darauf hingewiesen, dass der Lernzielgraph in Abb. 3.5 keine Vollständigkeit bea nsprucht; er enthält nur die in der hier analysierten Abschlussp rüfung auftre tenden Lernziele; so könnte beispielsweise das „Schachteln von Alternativen“ ein weitere s spezialisiertes Lernziel des Lernziels zum „Schachteln von Kontrollstrukturen“ sein. Einige der wichtigsten Lernziele aus dem Bereich der Algorithmik dürften in obigem Gr aphen jedoch enthalten sein. Für einen vollständigen Lernzielgraphen müssten weiter eÜbung saufgaben zu diesem Thema systematisch untersucht we rden. 3.3.2 Lernzielgraph und Lernziele des Lehrplans Die vorgestellte Lernzielanalyse erfolgte in der Absicht, die im Lehrplan angegebenen Ler nziele zu spezifizieren bzw. die impliziten Wissenss trukturen, die für das Erreichen der Lernziele desLehrplan s (Tabelle 3.1) erforderlich sind ,zuermitteln . Bereits im vorhergehenden Abschnitt wurde deutlich, wie sich das generalisierte Lernziel zu Algorithmen aus einzelnen Teill ernzielen zusammensetzt. Mit die sem Lernziel sind bereits die Richt ziele 2 und 3 aus Tabelle 3.1 abgedeckt.48 3 Methodik der Lernzielanalyse Wie in Abschnitt 3. 1.1bereits teilweise erläutert , sind die expliziten Lernziele der Prüfung saufgaben Spezialisierungen der Lernziele des Lehrplans: Dieerste Aufgabe inAbschnitt 3. 3.2 (Stapeln von Ziegeln) spezialisiert etwa die Richt lernziele 5und 8 (und setzt Richtziel 6 vo raus);die folgende Aufgabe ,in der die geschachtelte Wiederholung zu interpretieren ist,prüft das Verständnis der algorithmischen Bau steine (nur Richtziel 6) ;die Aufgabe zur algorithm ischen Beschreibung der Fahrscheinkontrolle ist ein Spe zialfall der Richt lernziele 4 bzw. 7 und setzt 8voraus ;die abschließende Aufgabe (Konstruktion eine Ziegels pirale) ist wiederum als Spezialfall der Richt lernzie le 5und 8 (6 ist Voraussetzung) anzusehen, wenn auch auf deutlich höherem kognitiven Niveau als die erste Aufgabe (Stapeln von Ziegeln) . Dadie expliziten Lernziele der Prüfungsaufgaben Spezialisierungen der Richt lernziele des Lehrplans (Tabelle 3.1) sind,lassen sich diese Richt lernziele in den Lernzielgraphen eintragen . Im Falle der bisher untersuchten Aufgabe nerhält man etwa den Graphen in Abbildung 3.6 (die in Abbildung 3.5 bereits angegebenen konzeptuellen Lernziele wurden aus Gründen der Übe rsicht nicht angegeben) . Richtziel 5 Richtziel 8 Richtziele 4/7 Richtziel 6 4/5:Algorithmen zur Darstellung einfacher geometrischer Strukturen erarbeiten3:Algorithmen ,die in natürlicher Sprache gegeben sind ,unter Verwendung von Pseudocode formalisieren2:Geschachtelten Zählwiederholungen in zweidimensionale Bewegung umsetzen3:Einfache Abläufe mit Zählwiederholungen simulieren 3:Alltagsvorgänge formalisieren Abb. 3.6 Zusammenhang zwischen expliziten Lernzielen der analysierten Aufgaben und den Rich tlernzielen des Lehrplans 3.4Lernzielerfolgsanalyse Didaktisch von besonderem Interesse sind neben den Lernzielen selbst , die Leistungen der Lernenden in diesen Lernzielen. Das entscheidende Problem hierbei ist jedoch, dass direkt verwertbare Resultate nur für die expliziten Lernziele angegeben werden können (beispielsweise durch Auswertung der Prüfungsresultate) .Im Falle des Nichterreichens des expliziten Lernziels kann jedoch zunächst keine Aussage darüber gemacht werden, an welchem der impliziten Ler nziele der Lernende letztendlich gescheitert ist . Gerade dies ist jedoch für den Lehrenden eine äußerst wichtige Information. Wäre dies bekannt, s o könnte man den Lernenden spezifische Übungen zur Verfügung stellen, die genau die seDefizite beheben. Im Mittelpunkt dieses Abschnitts steht daher eine Methode, die es ermöglicht, aus den Lei stungen in verschiedenen expliziten Lernzielen Rückschlüsse au f die Leistungsfähigkeit in g ewissen Teilmengen der impliziten Lernziele zu ziehen. Grundlage der Analyse ist dabei der Lernzielgraph in Abbildung 3.5. Der Graph stellt die Gesamtheit der impliziten Lernziele in den erwähnten Prüfungsaufgaben dar. Für das erfolgreiche Lösen der einzelnen Aufgaben ist, wie in der Lernzielanalyse gezeigt, jeweils eine gewisse Teilmenge der impliziten Lernziele erforde rlich. Die Abbildung 3.7 zeigt einen Ausschnitt des Lernzielgraphen aus Abbildung 3.5; in di esem sind die impl iziten Lernziele, die nur der ersten Aufgabe (Anhang B.1) zu zuordnen blau3.4 Lernzielerfolgsanalyse 49 markiert, die impliziten Lernziele, die nur der zweiten Aufgabe (Anhang B.1) angehören ,sind rot markiert und die Lernzi ele, die beiden Aufgaben zu zuordnen sind, braun. 3:Algorithmus (Richtziele 2und 3) Schachteln von KontrollstrukturenWiederholung 3:Schachteln von bedingter Wiederholung und Alternative2:Geschachtelte ZählwiederholungTextuell 1 2 3 MethodeTextuell 1 2 3Elementare AnweisungTextuell 1 2 3Sequenz Textuell 1 2 3Bedingung Textuell 1 2 3AlternativeTextuell 1 2 3Bedingte WiederholungTextuell 1 2 3Zählwiederholung Abb. 3.7 Gemeinsame und nicht gemeinsame implizite Lernziele . Beispielsweise tritt das Lernziel zur geschachtelten Zählwiederholung nur in der zweiten Aufgabe aus Abschnitt 3.3.2auf,das Lernziel zur Anwendung des Methodenbegriffs dagegen nur in der ersten Aufga be.Das Auftreten gemeinsamer und nicht gemeinsamer Lernziele legt folgende Hypoth esen nahe: Lernende, die die erste Aufgabe erfolgreich absolviert haben, nicht jedoch die zweite, haben vor allem bei der Anwendung des Konzeptes der geschachtelten Zählwiede rholung Probleme . Lernende, die die zweite, nicht jedoch die erste Aufgabe erfolgreich gelöst haben, haben mit dem Begriff der Methode Schwierigkeiten Lernende, die beide Aufgaben zufriedenstellend gelöst haben, haben die Lernziel ebeider Aufgaben im Große n und Ganzen erreicht. Lernende, die beide Aufgaben mangelhaft gelöst haben, haben bei allen Lernzielen Probleme undinsbesondere bei den gemeinsa men Lernzielen. Nun stellt sich natürlich die Frage, was erfolgreiches Absolvieren der Aufgabe bedeutet. Als Anhaltspunkt könnten die allgemein bekannten Definitionen für die Notenstufen 1 –6 dienen (siehe etwa Bayerisches Erziehungs -und Unterrichtsgesetz [Ba00]): So wird beispielsweise die Note 3 gegeben, wenn „die Leistung im Allgemeinen den Anforderungen ent spricht“. Dagegen wird die Note 4 wie folgt charakterisiert: „(Die) Leistung weist zwar Mängel auf, entspricht aber im Ganzen noch den Anforderungen“. Interpretiert man diese Definitionen unter dem A spekt, ob die Lernziele erreicht werden, so kann man früh estens bei Note 3 davon sprechen, dass die Lernziele im allgemeinen erreicht wurden. Unter zusätzlicher Heranziehung der üblichen Notenschlüssel beim Abitur oder universitären Klausuren ,wo die Note 3 dann vergeben wird, wenn mindestens 55% der Punkte erre icht wurden, könnte man erfolgreiches Abso lvieren einer Aufgabe folgendermaßen beschreiben: Eine Aufgabe gilt als erfolgreich absolviert, wenn mi ndestens 55 % der maximal erreichbaren Punkte erzielt wurden. Im Folgenden wird diese Annahme (55% Grenze) alsArbeitshypothese eingesetzt. Um wi ssenschaftliche Sicherheit über diesen Wert zu erlangen, bedarf es einer formalen Untersuchung , die eine hinreichende Gesamtheit von Prüfungen auf einen Zusammenhang zwischen erreichten50 3 Methodik der Lernzielanalyse Lernzielen und erzielten Leistungsp unkten untersucht. Darüber hinaus sollte n–ähnlich wie bei der PISA -Studie [Ba01] –durch etablierte statistische Methoden , wie etwa das Rasch -Modell (siehe etwa [Fi95]) die Aussagen formal ab gestütz t werden .Dies ist jedoch nicht Ziel dieser A rbeit. DieAuswertung der Prüfungsresultate ( eswaren 2 Klassen mit insgesamt 60 Prüflingen) in der erwähnten Stegreifaufgabe liefert bezüglich der Aufgaben 1 und 2 folgende R esultate: 57% der Schüler haben beide Aufgaben erfolgreich absolviert 23% der Schüler haben die Aufgabe 1 nicht jedoch die Aufgabe 2 erfolgreich abgeschlossen. Diese Schüler dürften somit insbesondere bei der geschachtelten Zählwiederholung Probleme gehabt haben 5 % der Schüler haben die zweite Aufgabe, nicht jedoch die erste erfolgreich gelöst. Bei di esen könnte es somit an Problemen mit dem Konzept der selbstdefinierten Methode gelegen haben 15 % der Schüler konnten keine der beiden Aufgaben zufriedenstellend lösen. Es kann dabei keine Aussage gemacht werden, welche Lernziele diesen Schülern Offenbar lassen sich auch mehr als zwei Aufgaben kombinieren: Die abschließende Aufgabe 4 zeichnet sich vor allem durch ein kognitiv anspruchvolles prozedurales Lernziel zur Konstru ktion einer Spirale aus Ziegeln aus. Interessant ist dabei die Frage, wie vi ele Schüler genau an diesem prozeduralen Lernziel scheiterten, die übrigen jedoch erreicht haben. Insgesamt ergeben sich wiederum vier Fälle: Schüler, die alle 4 Aufgaben erfolgreich bewältigt haben, haben alle Lernziele erreicht. Die Analyse ergibt, dass dies bei 23% der Schüler der Fall ist 15% der Schüler konnten die Aufgaben 1 bis 3 lösen, nicht jedoch die Aufgabe 4. Diese Schüler haben somit genau bei dem kognitiv anspruchsvollen Lernziel der Aufgabe 4 Pro bleme, nicht jedoch bei den übrigen Lernzielen. Kein Schüler hat die ersten drei Aufgaben nicht gelöst, wohl aber die Aufgabe 4. Dieses E rgebnis zeigt, dass die Vorrangrelation zwischen dem prozeduralen Lernziel von Aufgabe 4 und den konzeptuellen Lernzielen sehr plausibel ist. Schüler, die bei allen A ufgaben keinen Erfolg hatten, haben den größten Teil der Lernziele nicht erreicht; bei 12 % der Schüler trifft dies zu. Abschließende Bemerkungen Die beschriebene Methode ist nicht als exakte Analyse des Lernzielerf olgs zu verstehen. Vielmehr liefert sie eine Heuristik mit deren Hilfe der Lehrende einen Überblick über die Lei stungen der Schüler , aber auch eines einzelnen Schülers, in bestimmten impliziten Lernzielen gewinnen kann. Für eine exakte Analyse müsste jede Schülerlösung einzeln auf die Defizite u ntersucht werden. Mit der Methode gewinnt man jedoch schnell einen Überblick, wo die Probl eme bei den Schülern liegen könnten. Soll die Leistungsfähigkeit der Schüler in allen impliziten Lernzielen ermittelt werden, so müssen spezielle Aufgabensequenzen konzipiert werden, wobei die einzelnen Aufgaben bezüglich ihrer Lernziele hierarchisch aufeinander aufbauen, so dass von Aufgabe z u Aufgabe jeweils genau ein Lernziel hinzukommt. Ein weiterer Aspekt, der sich in der Lernzielanalyse andeutet, betrifft die Verifikation der Beziehungen zwischen den Lernzielen: Bei obiger exemplarischer Lernzielerfolgsanalyse (Abb. 3.7) fällt auf, dass nur 5 % der Schüler in Aufgabe 2 erfolgreich waren, nicht jedoch in Aufgabe 1. Lässt man die Lernzielgruppe zu Methodenbegriff, die nur der 1. Aufgabe zu zuordnen ist, als3.4 Lernzielerfolgsanalyse 51 Lernziel verhältnismäßig niedriger Komplexität unberücksichtigt, so kann man sagen, dass sich Aufgabe 2 nur durch das Lernziel zur Schachtelung von Aufgabe 1 unterscheidet. Wenn die Vorrangrelation zwischen den Lernzielen zur Wiederholung und dem Lernziel zur Schachtelung (vgl. Abb. 3.7) gilt, dürfte kein Schüler der in Aufgabe 2 erfolgr eich war in Aufgabe 1 nicht e rfolgreich gewesen sein. Der niedrige Wert von 5% unterstreicht somit ,dass die Vorrangrelation tatsächlich existiert. Offensichtlich ließen sich bei Verfügbarkeit entsprechend konzipierte n Aufgabensequenzen und mit geeignetem Datenmaterial auch die Vorrangrelationen empirisch untermauern. Bei der Entwicklung der genannten Aufgabensequenzen könnte man auf die in Kapitel 1 e rwähnte Technik der „fading worked e xamples“ zurückgreifen [Gr07]: Da derartige teilweise ausgearbeitete A ufgaben auf einige wenige Lernziele fokussieren, dürfte eine Aufgabenseque ntialisierung, die in oben beschriebener Weise zur Lernzielerfolgsanalyse oder zur Verifikation der Lernzielgraphen herangezogen wird, einfacher zu erstellen sein als bei Aufgaben mi t völlig offener Fragestellung . Zum Abschluss dieses Kapitels ist es sinnvoll auf die am Ende des vorigen Kapitels b eschriebene globale Zielsetzung der Arbeit einzugehen. Diese bestand im wesentlichen darin, die Entwicklung der Lernziele in der Didakti k der Informatik an ausgewählten Thematiken zu d okumentieren. Die hier vorgestellten Lernzielgraphen bilden dabei ein erstes Element. In den fo lgenden Kapiteln werden diese Lernzielgraphen beispielsweise durch Analyse objektorientierter Modellierung unddurch Diskussion der Inhalte höherer Jahrgang sstufen sukzessive erweitert, so dass sich am Ende ein Bild der Genese der Lernziele ergibt.52 3 Methodik der Lernzielanalyse4Lernzielanalyse in der Schulinformatik: Unterstufe Neben der Algorithmik in der Unterstufe , deren Lernzielgraph im vorhergehenden Kapitel e rarbeitet wurde, spielt die objektorientierte Modellierung die dominierende Rolle im Informati kunterricht der Unter stufe des bayerischen Gymnasiums. Ziel dieses Kapitels ist es ,den in Kap itel3erarbeiteten Lernzielgraphen um die Thematik des objektorientierten Modellierens zu erweitern und somit zu zeigen, wie die Lernzielanalyse auf die Themenbereich einer gesamten Entwicklungsstufe angewandt werden kann .Darüber h inaus soll geklärt werden, in welcher B eziehung die Wissensstrukturen des Informatikunterrichts in der Unterstufe mit anderen didakt ischen Strukturierungen der Informatik wie beispielsweise den fundamentale n Ideen [Sc93] oder den GI –Standards [GI08] stehen. 4.1 Lernzielanalyse objektorientierter Modellierung 4.1.1 Analyse des Lehrplans Den Ausgangspunkt der Lernzielanalyse bildet wiederum der Lehrplan an bayerischen Gy mnasien. Als Leitlinie aller Lernz iele im Bereich des objektorientierten Modellierens in der U nterstufe kann dabei dasübergeordnete Lern ziel,das im Vorspann des Lehrplans zum Schwe rpunkt „Informatik“ im Fach „Natur und Technik der Jahrgangstufe 6 zu finden ist [ISB07] , angesehen werden : „Bei der problemorientierten Arbeit am Rechner erleichtert ihnen (den Schülern) die objektorientierte Sichtweise, die gemeinsamen Grundprinzipien und Strukture n von Dokumenten zu erkennen. Damit lernen die Schüler im Lauf des Schuljahrs ein tragfähiges, p roduktunabhängiges und zeitbeständiges Konzept für die Darstellung von Information mittels Standardsoftware kennen und entwickeln ein al lgemeines Verständnis für den prinz ipiellen Aufbau dieser Softwaresysteme. “ Die daraus resultie renden Richtziele wurden für ausgesuchte Teile des Lehrplans ( „Modelli erung von Grafiksystemen “und„Hierarchische Strukturen “) von [Mo07] auf die Lernzieltax onomie von Anderson/Krathwo hl abgebildet. In den folgenden Tabe llen sind die Lernziele des Lehr plans [ISB07] angegeben. Dab ei wurde im Gegensatz zu [Mo07] bei der Formulierung der Lernziele eine engere Anlehnung an die Formulierun gen des Lehrplans angestrebt . Tabelle 4.1 Inform ationsdarstellung mit Graphikdokumenten . Art Lernziel Kategorie Richtziel 1.Erläutern können, dass Information einfach und effektiv mi ttels Gr aphiken darstellbar istC≥2 Richtziel 2.Reale Situationen zielgerichtet in Graphiken abbilden können. C≥3 Richtziel 3.Erkennen, dass grafische Objekt eeiner Klasse gleichartiger Objekte zu geordnet werden können.B≥2 Richtziel 4.Die Notwendigkeit einer einfachen, einheitlichen Be schre ibungssprache zur eindeutigen und effektiven Verständigung beim praktischen Arbeiten mit Graphikprogrammen erklären können.B≥254 4 Lernzielanalyse in der Schulinformatik: Unterstufe Tabelle 4.2 Hierarchische Strukturen . Art Lernziel Kategorie Richtziel 5.Erkennen , dass hierarchische Strukturen sichhäufigzum Or dnen von I nformation eignen.B≥2 Richtziel 6.Konstruieren von Bäume n zur Ordnung von Information . C≥3 Richtziel 7.Ordner und Dateien in einem Dateisystem als hierarchische Struktur darstellen können.C≥3 Richtziel 8.Erkennen, dass hierarchisc he Ordnungen durch die Enthält Beziehung zwischen Objekten der gleichen Klasse ermö glicht werden.B≥2 Während die hier angegebene Formulierung der Lernziele der bei [Mo07] angegeben en abweicht und sich etwas mehr an die Formulierungen des Lehrplans anle hnt,entspricht die Kat egorisierung im Wesentlichen der in [Mo07] verwendeten . 4.1.2Lernzielanalyse der zent ralen Lernstandserhebung aus dem Jahr 2006 Wie schon bei der Untersuchung der Algorithmik in der Unterstufe stellt sich auch hier die Frage, auf welche Weise die Lernziele des Lehrplans umgesetzt werden. Aus informat ischer Sicht ist vor allem interessant, mit welchen Grobzielen, die oben genannten Richtziele realisiert werden. Deshalb wird auch hier eine Lernzielanalyse durc hgeführt. Von Vorteil is t dabei, dass im Falle des Lehrplanabschnitts zur Objektorientierung –im G egensatz zum Lehrplanabschnitt zur Algorithmik –eine „offizielle Spezifikation “ des am Ende von Jahrgangstufe 6 erwarteten Wissens zu Verfügung steht : Zum Abschluss des Schuljahres wird innerhalb des Faches „Natur und Technik“, in das die Informatik als einstündig es Fach eingebettet ist, eine zentrale Lernstandserhebung durchgeführt. Die Aufgaben sind beim Staat sinstitut für Schulqualität und Bildung Mü nchen unter [ ISB06] zu finden. Objektstrukturen in Graphikdokumenten Der erste Teil der Aufgaben thematisiert Objektstrukturen in Graphikdokumenten . Dabei wird eine einfache Ve ktorgraphik , die ein aus Quadraten, Rechtecken und Dre iecken bestehendes Haus symbolisiert ,objektorientier tanalysiert (siehe Abbildung 4.11).DieFenster und Türen bestehen aus Objekten der Klasse RECHTECK , das Dach aus einem Objekt der Klasse DREIECK. Für diese Graphik sollen die Schüler folgende Fragen b eantworten (Die Originalformulierungen aus [ISB06] sind in Anhang B zu finden : -9.1Ergänze so, dass die Attributwerte richtig ang egeben sind. Fenster1.Breite = ………. Tür1.Füllfarbe = ………….. -9.2 Beschreibe in Worten, was der Methodenaufruf „Tür1.FüllfarbeSetzen(braun) “bewirkt . 1Der Abdruck der Abbildung erfolgt mit freundlicher Genehmigung des Staatsinstituts für Schulqualität und Bildungsforschung München 4.1 Lernzielanalyse objektorientierter Modellierung 55 -9.3Die Klasse RECHTECK stellt u. a. die Methode BreiteSetzen(Breite) zurVerfügung. Mit Hilfe dieser Methode soll die Breite von Fenster1 auf 1 cm gesetzt werden. Formuliere den Methodenaufruf. Verwende dazu die Punktschreibweise wie in Teilau fgabe 9.2. -9.4Kreuze in der Tabelle die A ussagen an, die wahr sind: oFenster1 und Tür1 haben di eselben Attribute. oFenster1 und Tür1 haben dieselben Attributwerte. oMit den Methoden der Klasse RECHTECK lassen sich die Attribute von Fen ster1 ändern. oMit den Methoden der Klasse RECHTECK lassen sich d ie Attributwerte von Fenster1 ändern. Etwas abstrahiert resultieren aus der Aufgabenstellung folgende expliziten Lernziele: Attributwerte für Vektorgraphiken angeben (9.1) Methodenaufrufe bei Vektorgraphiken in Punktnotation verstehen (9.2) Methodenaufruf e bei Vektorgraphiken in Punktnotation formulieren (9.3) Klassen -und Objektbegriff bei Vektorgraphiken verstehen (9.4) Die impliziten Lernziele und deren kognitive Prozessd imension ergeben sich aus den in den Aufgabeformulierungen erwähnten Konzepten :Zentrales Konzept ist das Objekt, sowie dessen Teilkonzepte „Attribut“, „Attributwert“ und „Methode“. Darüber hinaus wird bereits in der Aufgabenformulierung der Klassenbegriff erwähnt, weshalb auch das Konzept der K lasse im Lernzielgraph auftritt; die Repräs entation der Objekteigenschaften soll textuell unter Verwe ndung der Punktnotation erfolgen und es ergeben sich Lernziele zur Punktnotation in fa ktischer Wissen sdimension .Insgesamt erhält man damit folgende impliziten Lernziele: Tabelle 4.3Implizite Lernz iele in den Aufgaben 9.1 bis 9.4 . Nr Lernziel Kategorie 19 Objektbegriff verstehen/anwenden B≥2 20 Attributbegriff verstehen/anwenden B≥2 21 Konzept des Attributwerts verstehen/anwenden B≥2 8 Konzept der Methode anwenden/verstehen B≥2 22 Konzept der Klasse verstehen/anwenden B≥2 23 Punktnotation bei Methodenaufrufen kennen A1 24 Punk tnotation bei Attributen kennen A1 25 Textuelle Repräsentation von Objekten kennen A1 Bis auf das Lernziel 8 (Konzept der Methode verstehen/anwenden) sind alle impliziten Ler nziele neu. Das Lernziel zum Verständnis / zur Anwendung von Methoden bildet damit eines der verknüpfende nElement edesLehrplanabschnitts zur objektorientierten Modellierung und der Algorithmik. Die Abbildung 4.2 zeigt die impliziten und expliziten Lernziele der oben erwähnten Probl eme 9.1 bis 9.4, sowie deren gegenseitigen Bezie hungen. Die Lernziele zu Attributen, Attribu twerten und Methoden sind dabei Teillernziele des Lernziels zum Objektbegriff und deshalb graphisch in diesem enthalten. Zwischen dem Lernziel zum Klassenbegriff und dem zum O bjektbegriff wird eine Vorrangrelatio n ange nommen; diese Modellierungen folgennicht nur den einschlägigen fachdidaktischen Veröffentlichungen ([Hu08] ) sondern auch Vorgehensweisen56 4 Lernzielanalyse in der Schulinformatik: Unterstufe vonSchul bücher nzur Informatik in Jahrgangstufe 6/7 [Br04], [Fr04b], und selbst Hochschu llehrbücher nzur Inform atik[Ba05],welche zuerst den Objektbegriff und dann den Klassenbe griff diskutieren. Im Hinblick auf die in den folgenden Abschnitten zu diskutierenden graphischen Repräsent ationsmöglichkeiten objektorientierter Modelle wurde ein allgemeines Lernziel „Tex tuelle Re präsentation objektorientierter Modelle verstehen/anwenden“ eingeführt, das die beiden Ler nziele zur Punktnotation als Teillernziele enthält. Es handelt sich hier um ein Lernziel, das den spät eren Einsatz objektorientierter Programmiersprachen vor bereitet. Wie schon im vorhergehenden Kapitel lässt sich auch bei den Lernzielgraphen zur objektor ientierten Modellierung das 2 –1–3 Muster erkennen: Es tritt in Abbildung 4.2 zwischen den Lernzielen zum Objektbegriff auf kognitiver Stufe 2 und 3 sowie dem Lernziel zur Repräsent ation des Objektbegriffs in kognitiver Stuf 1 auf. Allerdings wurde in Abbildung 4.2 nicht die aus dem vorhergehenden Kapitel bekannte kompakte Darstellung gewählt, sondern die detaillierte Form, damit auch die innere Struktur die ser Lernziele (Lernziele zum Attribut -und Methode nbegriff) sichtbar wird. Knapp formuliert bestehen die impliziten Lernziele der diskutierten Au fgabengruppe nur aus dem 2 –1–3 Muster zum Objektbegriff und dem konzeptuellen Lernziel zum Klassenbegriff a uf kognitiver Stufe 2. 2:Objekt 2:AttributImplizite Lernziele 1:Textuelle Syntax für Objekte Explizite Lernziele2:Klassen und Objektbegriff bei Vektorgraphiken verstehen (9.4)3:Methodenaufrufe bei Vektorgraphiken in Punktnotation formulieren (9.3)2:Klasse1:Punktnotation bei Methodenaufruf 2:Methodenaufrufe bei Vektorgraphiken in Punktnotation verstehen (9.2)2:Attributwerte für Vektorgraphiken angeben (9.1)1:Punktnotation für Attribute2:Attributwert 2:Methode 3:Objekt 3:Attribut 3:Attributwert3:Methode Abb. 4.2 Lernzielgraph des Aufgabenbereichs Objektstrukturen in Vektorgraphikdokumenten in der Lernstandserhebung zu Informatik (Natur und Technik) 2006 .4.1 Lernzielanalyse objektorientie rter Modellierung 57 Aggregationsbeziehungen zwischen verschiedenen Klassen Die abschließende Auf gabe der Lernstandserhebung aus dem Jahre 2006 (Anhang B.2, Aufgabe 10) thematisiert eineProblem atik,beiderdie Schüler das Klassendiagramm einfacher Systeme angeben müssen. Konkret ist g efragt: -Das Klassendiagramm des Systems „Klavier, Taste“ -Das Kla ssendiagramm des Systems „Mensch, Zelle, Organ“ Obwohl es sich hierbei nur um eine einfache Aggr egationsbeziehung handelt ,impliziert die Aufgabe eine Vielzahl weiterer Lernziele: Alle bisher genannten konzeptuellen und faktischen Lernziele zu Objekten un d Klassen; darüber hinaus konzeptuelle und faktische Lernziele zu A ggregationsbeziehungen zwischen Objekten, da das Klassendiagramm grundsätzlich in einem Abstraktionsvorgang aus dem Objektdiagramm entsteht. Tabelle 4.4Implizite Lernziele der Prüfungsauf gabe zur Aggregation zwischen verschiedenen Kla ssen. Nr Lernziel Kategorie 19 Konzept des Objekt sverstehen / anwenden B≥2 20 Konzept des Attribut sverstehen / anwenden B≥2 21 Konzept des Attributwerts verstehen / anwenden B≥2 8 Konzept der Methode verstehen / anwenden B≥2 22 Konzept der Klasse verstehen / anwenden B≥2 26 Konzept der Aggregation auf Objektebene ver stehen / anwenden B≥2 27 Konzept der nichtrekursiven Aggregation auf Klassenebene verstehen / anwendenB≥2 30 Graphische Syntax für Objekte kennen A 1 31 Graphische Syntax für Aggregation auf Objektebene kennen A 1 28 Graphische Syntax für Klassen k ennen A 1 29 Graphische Syntax für nichtrekursive Aggregation auf Klassenebene ke nnenA 1 Der Lernzielgraph in Abbildung 4.3 zeigt in sehr kompakter Form die Beziehungen zwischen den Lernzielen. Implizite Lernziele 3:Klassendiagramm mit Aggregationen zwischen verschiedenen Klassen erstellen1 2Objekt (G) 1 2Aggregation auf Objektebene (G)1 2 3Nichtrekursive Aggregation auf Klassenebene (G)1 2 3Klasse (G) Abb. 4.3 Lernzie lgraph für das Erstellen eines nichtre kursiven Klassendiagramms .58 4 Lernzielanalyse in der Schulinformatik: Unterstufe Dabei wurde neben dem bekannten 2 –1–3 Muster noch ein 2 –1 Muster für die Lernziele zum Objektbegriff und zur Aggregation auf Objektebene verwendet. Das 2 –1 Muster geht aus dem 2 –1–3 Muster durch Wegnahme des entsprec henden konzeptuellen Lernziels der kogn itiven Stufe 3 hervor. Ein derartiges 2 –1 Muster fasst beispielsweise die Lernziele zum Objek tbegriff zusammen: Das „Innenleben“ dieser Lernziele enthält auch die konzeptuellen und faktischen Lernziele zu Attribute n, Attributwerten und Methoden, wie es etwa in Abbildung 4.2 ausführlich gezeigt wird. Da Symbol (G)in Abbildung kennzeichnet, dass die entsprechenden Begriffe graphisch repräsentiert werden. Zu diskutieren istan dieser Stelle, ob die faktischen (syntak tischen) Lernziele zum Objek tbegriff bzw. zur Aggregation auf Obje ktebene wirklich notwendig sind, denn zum Zeichnen von Klassendiagrammen sind di eentsprechenden Symbole nicht unmittelbar notwendig. Da jedoch ein Klassendiagramm (zumindest in der Schulinf ormatik) stets aus einem Objektdiagramm he rvorgeht –und sei es auch nur auf gedanklicher Ebene –,lassen sich diese Lernziele durchaus als implizit für das Klassendiagramm annehmen. Dieeinzelnen Vorrangrelation enzwischen der Aggregation auf Objektebene und der Aggr egation auf Klassenebene sind zum einen Ausdruck einschlägiger didaktischer Vorgehensweise n, wie sie etwa in den bereits genannten Schulbüchern [Br04] und [Fr04b] umgesetzt werden .Darin wird die Aggregation auf Objektebene stets vor der Aggreg ation auf Klassenebene themat isiert. Diese Vorrangrelation lässt sich jedoch auch logisch begründen: Die Aggregation auf Klassenebene symbolisiert, welche Objektbeziehungen prinzipiell notwendig sind. Das bede utet, dass einem Klassendiagramm stets ein ment ales Modell potentieller Objektdiagramme zugru nde liegen muss. 4.1.3Lernstandserhebung zur Natur und Technik für das Schuljahr 200 6/2007 In der Lernstandserhebung des Schulj ahres 2006/2007 werden nahezu dieselben Konzepte wie im Vorjahr geprüft, jedoch sind die Kontext e, in die die Objektstrukturen eingebettet sind, deutlich weiter gefasst. Es werden beispielsweise auch Objektstrukturen in Textdokumenten und Ordnerstrukturen thematisiert (siehe [ISB07a]) . Objektstrukturen in Textdokumenten Die erste Au fgabengruppe (siehe Anhang B.2 Abbildung B.3 und B.4) beschäftigt sich mit O bjektstrukturen in Textdokumenten. Dabei werden konzeptuell ähnliche Begrifflichkeiten wie bei der Lernstandserhebung des Vorjahres geprüft :Das differenzierte Verständnis der Konz epte Objekt, Attribut , Attributwert , Methode und Klasse angewandt auf Textstrukturen wird themat isiert. Gegenüber dem Vorjahr ist dabei die Beschränkung auf die kognitive Dimension des Ve rstehens auffällig. Aus diesem Grunde verzichten wir hier auf die Tab elle impliziter Lernziele; siesind bis auf das Fehlen der kognitive nDimension 3mitden Lernzielen in Tabelle 4.3 ide ntisch. Dieexpliziten Lernziele unterscheiden sich selbstverständlich von den in Abschnitt 4.1.2 g enannten , denn in diesen kommt die Fok ussierung auf den speziellen Kontext „Textstrukturen“ zum Ausdruck. Ohne auf die detaillierte Aufgabenstellung einzugehen (diese sind unter [ISB07a] und im Anhang B zu finden) geben wir in Abbildung 4.4 direkt den Lernzielgraphen an. Das 2 –1 Muster in A bbildung 4.4 fasst die Lernziele zum Objektbegriff, deren Details aus A bbildung 4.2 bekannt sind, zusammen.4.1 Lernzielanalyse objektorientierter Modellierung 59 Implizite Lernziele Explizite Lernziele2:Die Definition des Klassenbegriffs verstehen (7.1c)2 2:Methodenaufrufe für Zeichenketten in Punktnotation verstehen (7.1d)2:Attributbelegungen bei Zeichenketten verstehen (7.1a) 2:Die Konzepte Attribut ,Objekt ,Klasse und Methode unterscheiden (7.1b)Klasse1 2Objekt (T) Abb. 4.4 Lernziele zu Objektstrukturen in Textdokumenten der Lernstandserhebung in Natur und Technik aus dem Schuljahr 2006/2007 (die Nummern in Klammern beziehen sich auf die Aufg abenstellungen in [ISB07a]) . Objektstrukturen in Graphikdokumenten Die Prüfungsaufgabe zu Objektstrukturen in Graphikdokumenten fällt etwas aus dem bisherigen Rahmen, weshalb die Aufgabenstellung genauer betrachtet wird: -Problem 7.2: Wie in der Lernstandserhebung des Vorjahres wird die Vektorgraphik eines einfachen Hauses mit einem Dach der Klasse DREIECK gezeigt (siehe etwa Abbildung 4.1). D as Dach soll rot gefärbt werden, was jedoch nicht funktioniert. Folgende Lösung svarianten werden angeb oten:  Die Auflösung von Peters Monitor ist zu gering.  Das Dach besteht aus drei Objekten der Klasse LINIE.  Es existiert bereits ein Attributwert für das Attribut „Füllfarbe“.  Peter hat den Arbeitsschritt „Markieren“ vergessen. Unter objektorientierter Perspektive impliziert die Aufgabe die oben (Abb. 4.2 und 4.4) bereits angegebenen konzeptuellen (und impliziten) Lernzielen zu Objekten, Attributen und Klassen. Die angebotenen Lösungsvarianten beinhalten neben d iesen Begriffli chkeiten jedoch auch tec hnische Aspekte, wie etwa den Begriff der Auflösung, oder Elemente, die eher dem Bereich der Benutzerschulung zu zuordnen sind, wie etwa das „Markieren“ in der letzten Antwortalternat ive.Da diese impliziten Lernziele jedoch ausschl ießlich in dieser Aufgabe auftreten und auch im Lehrplan nicht aufgeführt sind, werden sie aufgrund ihres singulären Auftretens nicht weiter b etrachtet. Hierarchische Objektstrukturen in Ordnern und Dateien Die Aufgabenstellung zu Objektstrukturen in O rdnern (Anhang B.2 Aufgabe 7.3) thematisiert hierarchische Strukturen aus Ordnern und Dateien. Dazu werden vier Klassendiagramme präsentiert , die jeweils die Klassenstruktur eines Verzeichnisbaums beschreiben sollen ,wobei nur eines korrekt ist. Dabei muss der Schüler er kennen, dass die Klasse ORDNER eine Aggregat i-60 4 Lernzielanalyse in der Schulinformatik: Unterstufe onsbeziehung auf sich selbst und eine weitere auf die Klasse DATEI aufweisen kann. Abbi ldung 4.5 zeigt das korrekte Klasse ndiagramm . ORDNER DATEI < enthältenthält > Abb. 4.5 Objektstrukturen bei Ordne rn und Dateien mit rekursiver Aggregationsbeziehung (der ausgefüllte Kreis am Ende der Beziehung symbolisiert die Vielfachheit 0, …, n) . Obwohl der Schüler hier lediglich eines von vier Diagrammen auswählen muss, bedarf es für die korrekte Auswahl einer V ielzahl von impliziten Lernzielen wie Tabelle 4.5 und derzugeh örigeGraph in Abbildung 4.6 zeigen . Tabelle 4.5 Implizite Lernziele der Prüfungsaufgabe zum Klassendiagramm hierarchischer Or dnerstrukturen . Nr Lernziel Kategorie 19 Konzept des Objekt sverstehen B 2 20 Konzept des Attribut sverstehen B 2 21 Konzept des Attributwerts verstehen B 2 8 Konzept der Methode verstehen B 2 22 Konzept der Klasse verstehen B2 26 Konzept der Aggregation auf Objektebene verstehen B 2 32 Konzept der hierarchis chen Aggregation auf Objektebene verstehen B 2 27 Konzept der nichtrekursiven Aggregation auf Klassenebene verstehen B2 31 Konzept der rekursiven Aggregation auf Klassenebene verstehen B 2 30 Graphische Syntax für Objekte kennen A 1 31 Graphische Sy ntax für Aggregation auf Objektebene kennen A 1 28 Graphische Syntax für Klassen kennen A 1 29 Graphische Syntax für nichtrekursive / rekursive Aggregation auf Klasse nebene kennenA 1 Wie bereits öfters erwähnt ,besteht zwischen dem Lernziel zurRepr äsentation eines Konze ptes(faktisches Wissen) und dem Lernziel zum Verständnis des Konzept seine didaktische Vo rrangrelation. Daraus resultieren die 2 –1 Muster in Abbildung 4.6 ; das Symbol (G) kennzeic hnet wie oben die graphische Repräsentation des Kon zepts. Auch in Abb. 4.6 wurde für die Mehrzahl der Lernzielgruppen eine kompakte Darstellung unter Verwendung von Mustern g ewählt; das Lernzielmuster zum Objektbegriff enthält natürlich alle darin enthaltenen Teillernzi ele zum Attribut -und Methodenbegriff .Im Gegensatz zu dem Graphen in Abb. 4.3 kommt in Abb. 4.6 jedoch die Lernzielgruppe zu baumartigen Objektstrukturen hinzu: Der Schüler, der das angegeben rekursive Klassendiagramm verstehen soll, muss auch das Konzept baumartiger Objektstrukturen und der en Darstellung verstanden haben. Ansonsten kann er das rekursive Klassendiagramm nicht sicher auswählen. Deshalb wird zwischen dem Lernziel zu baumartigen Objektstrukturen und dem Lernziel zum rekursiven Klassendiagramm eine Vorrangrelation a ngenommen.4.1 Lernzielanalyse objektorientierter Modellierung 61 Diese Beziehung ist Ausdruck einer gängigen Lehrstrategie wie sie in einschlägigen Schulb üchern ([Fr04b] und [Br04]) umgesetzt wird: Bereits bei nichtrekursiver Aggregation ist der Übergang vom Objekt -zum Klassendiagramm unter Umständen problematisch, wenn beispiel sweise ein Objekt mehrere Objekte einer anderen Klasse aggregiert (Beispiel aus Abschnitt 4.2: Ein Objekt der Klasse KLAVIER aggregiert mehrere Objekte der Klasse TASTE). Implizite Lernziele 2:Rekursives Klassendiagramm für Ordner und Dateien verstehen Explizite Lernziele1 2Objekt (G) 1 2Aggregation auf Objektebene (G)1 2Klasse (G) 1 2Baumartige Objektstrukturen (G)1 2Aggregation auf Klassenebene (G) . Abb. 4.6Lernziele für das Verständnis des Klassendiagramms zur Darstell ung rekursiver Ordne rstrukturen . Während im Objektdiagramm diese Vielfachheit graphisch offensichtlich ist, wird im Kla ssendiagramm die Vielfachheit lediglich durch eine geeignete Kennzeichnung der Aggregation sbeziehung zwischen den beiden beteiligten Klas sen symbolisiert. Deutlich komplizierter wird es bei rekursiven Aggregationsbeziehungen wie etwa in Abbildung 4.5. Die einfache Aggregat ionsb eziehung einer Klasse auf sich selbst resultiert in baumartigen Objektstrukturen. Dieser sehr b edeutende Spezialfal l muss den Schülern auf jeden Fall in einer separaten Lerneinheit vermittelt werden und er setzt voraus, dass die Schüler zuvor die nichtrekursive Aggregation verstanden haben. Die Schwierigkeiten bei rekursiver Aggregation sind denen bei rekursiven Funkti onen ähnlich: Auch rekursive Funktionen enthalten „nur“ den S elbstaufruf im Funktion srumpf; B ei einem konkreten Aufruf, was im Falle der rekursiven Aggregation der Instanziierung des Klassendiagramms entspricht, entsteht jedoch unter Umständen ein Aufrufba um, dessen Höhe in nichttrivialer Weise mit dem Funktionsrumpf verknüpft ist. Baumartige Objektstrukturen Nach der Analyse von Klassendiagramm en, sollten die Schüler zum Abschluss der Ler nstandserhebung das baumartige Objektdiagramm einer te xtuell beschri ebenen Ordnerstruktur erstellen. Obwohl in Tabelle 4.6 die detaillierte Struktur der Lernzielgruppe zum Objektbegriff nicht berücksichtigt wird, ist doch deutlich zu erkennen, dass die Anzahl der impliziten Lernzi ele für eine derartige Problematik geringer als bei der vorhergehenden Prüfungsaufgabe, da der Klassenbegriff und die rekursive Klassenbeziehung nicht verlangt sind; aus didaktischer Sicht wäre es deshalb vermutlich sinnvoll gewesen, die beiden let zten Aufgabe zu vertauschen.62 4 Lernzie lanalyse in der Schulinformatik: Unterstufe Tabelle 4.6 Implizite Lernziele der Prüfungsaufgabe zum baumartigen Or dnerstrukturen . Nr Lernziel Kategorie 19 Konzept des Objekt sverstehen / anwenden B≥2 26 Konzept der Aggregation auf Objektebene verstehen / anwenden B≥2 30 Graphische Syntax für Objekte kennen A 1 31 Graphische Syntax für Aggregation auf Objektebene kennen A 1 Den Lernzielgraph zu dieser Aufgabe zeigt Abbildung 4.7, wobei auf d er linken Seite nochmals das 2 –1–3 Muster in detaillierter Form dargestellt ist. Deutlich erkennt man, wie zwei 2 –1–3 Muster (Objektbegriff und Aggregation auf Objektebene) durch insgesamt drei Vorrangrelationen (jeweils zwischen Lernzielen gleiche r kognitiver Stufe) voneinander abhä ngen. In der linken Graphik werden diese drei Vorrangrelationen durch einen Pfeil stärkerer L ininenbreite repräsentiert und der Graph damit kompaktifiziert. Implizite Lernziele 3:Baumdiagramm für Ordner und Dateien erstellenGraphisch 1 3 Objekt2 Graphisch 1 3Aggregation auf Objektebene2Implizite Lernziele 3:Baumdiagramm für Ordner und Dateien erstellen1:Graphische Darst . von Objekten 3Objekt2:Objekt 1:Graphische Darst . der Aggreg .auf Objektebene 3:Aggreg .auf Objektebene2:Aggreg .auf Objektebene Abb. 4.7 Lernzielgraph für das Erstellen des Objektdiagramm s einer baumartigen Ordnerstru ktur (in detaillierter und kompakter Darstellung) . 4.1.4Lernpsychologische Diskussion der Aufgaben der Lernstandserhebung Der Unterschied zu den in Kapitel 3 analysierten Aufgaben ist offen sichtlich :Die in diesem K apitel d iskutierten Fragen haben Testcharakter ;der konzeptuelle Hintergrund derFrage nist eng gesteckt und die Schüler haben keinen Spielraum eigene Lösungswege zu finden. Beispielswe ise wird in der Frage 9.1 getestet, ob der Schüler das Konzept des Attributwert s verstanden hat, in 9.2 soll der Schüler zeigen, dass er den Begriff der Methode beherrscht ; dennoch evaluieren diese Aufgaben nicht ein separates Lernziel, sondern implizieren umfangreiches Hintergrun dwissen aus dem Bereich der Objektorientierung , wie di e obigen Graphen zeigen . Die in Kapitel 3 analysierten Aufgaben unterscheiden sich von den in diesem Kapitel untersuc htenin einem wesentlichen Punkt: Hier erfährt der Schüler bereits in der Aufgabenstellung, we lche Begriffe für die Lösung relevant sind. Sein „kognitiver Radius“ ist durch Nennung kon kreterBegriff evon vornherein stark eingeschränkt .Demgegenüber sind die in Kapitel 3 untersuchten Aufgaben sehr viel offener gestellt: Ein Problem muss gelöst werden, ohne dass der Schüler erfährt, welche Kon trollstrukturen er einsetzen soll; beispielsweise musste er sel b-4.1 Lernzielanalyse objektorientierter Modellierung 63 ständig Alg orithmen für gewisse „reale“ Phänomene angeben, ohne dass die zu verwendenden Kontrollstrukturen an gegeben war en. (Siehe die Aufgaben in 3.2.2 bis 3.2.5). Etwas offener als die Aufg aben 9.1 und 9.2 ist einzig dieoben wiedergegebene Aufga be 7.2 gestellt, denn die möglichen Antworten stammen aus unterschiedliche nTeilbereichen der Informatik und es sind mehrere Antworten den kbar. Aus lernpsychologischer Sicht lassen die Aufgaben der L ernstandserhebung eine eher i nstruktional oder kognitiv geprägte Lehrstrategie der Autoren vermuten. Es werden einzelne Wi ssensbausteine innerhalb eines genau spezifizierten Kontexts geprüft unddie Lösungen sind ei ndeutig. Demgegenüber können die Aufgaben aus Kapitel 3aufgrund ihres offenen Charakters eher einer gemäßigt konstruktivistischen Position zugeordnet werden . 4.1.5 Diskussion der Resultate der Lernstandserhebung en Von besonderem Interesse ist angesichts der bayernweiten Durchführung der Lerns tandserh ebung die Leistung der Schüler in den verschiedenen Aufgaben. Die Ergebnisse sind unter [ISB 06a] und [ISB07b] veröffentlicht und werden im F olgenden mit den jeweiligen Lernzie lgraphen in Beziehung gesetzt .Leider enthalten die vom ISB veröffentlich ten Auswertungen der Lernstandserhebungen, abgesehen von der Gesamtzahl der teilnehmenden Schüler keine weit eren statistischen Daten, wie etwa die Details der Häufigkeitsverteilung oder ggf. die Standar dabweichung , sondern nur die Mittelwerte und eine Anga be, wie oft die jeweilige Aufgabe bea rbeitet wurde. Auswertung der Lernstandserhebung aus dem Schuljahr 2005/2006 Die Ergebnisse der Lernstandserhebung des Schuljahres 2005/2006 zeigt Tabelle 4.7 Tabelle 4.7 Ergebnisse der Lernstandserhebung in Natur und Technik aus dem Schuljahr 2005/2006 (2823 teilnehmende Schüler) . Aufgabe Ausgewählt Mittlere relative Punktezahl 9.1 ca. 77 % 67 % 9.2 ca. 77 % 76 % 9.3 ca. 77 % 55 % 9.4 ca. 77 % 62 % 10 ca. 75 % 67 % Die Nummern in Tabelle 4.7 beziehen sich dabe i auf die Aufgabennummerierung in A bschnitt 4. 1.2; Die Spalte „Ausgewählt“ beschreibt den Anteil der Schüler, die diese Aufgabe b earbeitet haben (bei der Lernstandserhebung wares dem unterrichtenden Lehrer erlaubt ,Aufg aben zu streichen, falls die entspre chende Thematik noch nicht behandelt wurde); die letzte Spalte schließlich beschreibt die mittlere relative Punktezahl der Schüler in der jeweiligen Au fgabe. In Ta belle 4.7wurde in der Spalte „Ausgewäh lt“ lediglich ein Schätzwert (±2 %) angeg eben, da in de r zitierten Veröffentlichung des ISB nur Balkendiagramme verwendet werden. Leider sind die vom ISB zur Verfügung gestellten Daten nicht geeignet, eine Lernzielerfolg sanalyse, wie sie in Kapitel 3 im Bereich der Algorithmik präsentiert wurde, für die hier t hemat isierte objektorientierte Modellierung durchzuführen. Grund hierfür ist, dass für eine derartige Lernzielerfolgsanalyse die Einzelergebnisse der Prüflinge in den verschiedenen Aufgaben vo rliegen müssen. Deshalb ist es hier nicht möglich Rückschlüsse a uf die Leistungen der Prü flinge64 4 Lernzielanalyse in der Schulinformatik: Unterstuf e in einzelnen Lernzielen zu ziehen und wir müssen uns auf allgemeine qualitative Aussagen b eschränken . Grundsätzlich scheinen die Schüler die Thematik im Allgemeinen zufriedenstellend versta nden zu haben, da praktisch in kein er Aufgabe ein gering erer Durchschnittswert als 55 % erreicht wurde und mehr als 75 % aller Schüler an der Lernstandserh ebung teilnahmen. Im Detail zeigen sich jedoch Auffälligkeiten: Innerhalb der Aufgabengruppe 9 wurde die dritte Aufg abe, bei der ein Met hodenaufruf in Punktnotation anzugeben ist, amschlecht esten gelöst. Dies deutet da rauf hin, dass die Schüler bei der Verwendung der Punktnotation Schwierigkeiten haben, obwohl sie die Konze pte objektorientierten Modellierens, die in den Aufgaben 9.1/9.2 u nd 9.4 geprüft wurden, verstanden haben, denn diese Aufgaben wurden offenbar deutlich besser gelöst. Im Hi nblick auf die oben vorgestellten Lernzielgraphen unterstreicht dieses Ergebnis jedoch auch die didaktische Vorrangrelation zwischen der Repräsentatio n eines Konzepts und dem Konzept selbst: Würde ein Lernziel zur Repräsentation eines Konzeptes –beispielsweise des Konzepts „Objekt“ –das Lernziel zu diesem Konzept bedingen, so wäre es nicht plausibel, dass die Prü flinge in einer Aufgabe die Repräsentat ion nicht beinhaltet einen höheren Punkteschnitt aufwe isen als in einer Aufgabe die Aspekte der Repräsentation enthalten. Die Resultate des Aufgabenblocks 9 deuten insgesamt darauf hin, dass von den impliziten Lernzielen in Abbildung 4.2 die Lernziele zu den Konzepten „Objekt“ und „Klasse“ relativ gut verstanden wurden, wogegen die Lernziele zu textuellen Repräsentation weniger gut beherrscht werden. Die Aufgabe 10 unterscheidet sich von Aufgabenblock 9 dadurch, dass hier das Klassenko nzept unter Verwendu ng graphischer Repräsentationstechniken dargestellt werden sollte. Hier e rgibt sich ein bemerkenswert hoher Durchschnitt. Interessant ist dabei der direkte Vergleich des Leistungsvermögen sbei textuellen Repräsentation einerseits (Aufgabenblock 9) und grap hischer Repräsentation (Aufgabe 10) andererseits :Obwohl beide Repräsentationstechniken in den Formulierungen der Angabe verwendet wurden (und die Schüler damit ein „Lösungsmuster“ zur Verfügung hatten), konnten die Prüflinge graphische Repräsentationstech niken deutlich besser umsetzen als textuelle. Die hier aufgezeigten Schwierigkeiten von Lernenden bei textueller Re präsentation könnten von prinzipieller Natur sein. Auch Untersuchungen von Studierenden von Einführungsvorlesungen des Faches Informatik ([Sc04a]) haben gezeigt, dass graphische M odellieru ngsaufgaben deutlich besser gelöst werden, als Aufgaben, bei denen textuelle Repräse ntationen --d.h. Programmierfertigkeiten --verlangt waren. Auswertung der Lernstandserhebung aus dem Jahr 2006/2007 DieLernstandserhebung des folgenden Jahres unterscheidet sich nicht nur in Bezug auf die Aufgabenstellung ,sondern auch hinsichtlich der Resultate deutlich von der des Vorjahres. Im Durchschnitt ergaben sich die in Tabelle 4.8 eingetragenen Leistungen . Tabell e4.8 Ergebnisse der Lernstandserhebung in Natur und Technik aus dem Schuljahr 2006/2007 (3723 teilnehmende Schüler) . Aufgabe Ausgewählt Mittlere relative Punktezahl 7.1 ca. 82 % 47 % 7.2 ca. 82 % 59 % 7.3 ca. 46 % 43 % 7.4 ca. 38 % 67 %4.2 Synthese und Diskussion der bisher erarbeiteten Lernzielgraphen 65 Dabei fällt als erstes auf, dass die Aufgaben zu hierarchischen Strukturen (7.3 und 7.4 )von weniger als 46% der Schulen ausgewählt wurden. Das könnte darauf hindeuten, dass bei dieser Thematik auch die unterrichtenden Lehrer Wissensdefizite aufweisen; andererseits wird diese Thematik am Ende des Schuljahres bearbeitet , was die Bearbeitungsquote zusätzlich belastet haben dürfte. Dass jedoch ein mangelnder Kenntnisstand der Unterrichtenden nicht ausg eschlossen werden kann, zeigt der Vergleich mit den Ergebnissen des V orjahres. Die oben disk utierte Aufgabe 10 zu Aggregat ionsbeziehungen zwischen unterschiedlichen Klassen wurde von einer breiten Mehrheit der U nterrichtenden ausgewählt und die Ergebnisse zeigen, dass die Schüler diese Thematik relativ gut verstanden haben. Rekursive Aggregationsbeziehungen fo lgen thematisch unmittelbar den nichtrekursiven. Es ist daher nicht plausibel, dass mehr als die Hälfte der Unterrichtenden genau diese Thematik aus Zeitgründen nicht behandeln konnten. Aber auch die Leistungen der Prüf linge, in der Aufgabe 7.3 weisen auf deutliche Defizi te hin: Von allen Prüflingen haben weniger als 50 % diese Aufgabe bearbeitet und diese haben wiede rum nur etwa 40 % der Punkte erreicht (das entspricht nach gängigen Notenschlüsseln der Ze nsur „ausreiche nd“). Demgegenüber wurde –sofern bearbeitet –das Objektdiagramm der Bau mstruktur (Aufgabe 7.4) zufriedenstellend gelöst. Auch hier ein deutlicher Hinweis auf die Richtigkeit der im Lernzielgraph 4.6 postulierte nVorrangrelation zwischen dem Lernziel zu „Aggregationsbeziehungen zwischen Objekten“ und dem Lernziel zu „Aggregationsbeziehu ngen zwischen Kla ssen“. Andererseits stützt der Vergleich der Ergebnisse von Problem 10 der Lernstandserhebung 2005/2006 und dem Problem 7.3 der Lernstandserhebung 2006/200 7 die Vorrangrelation zw ischen dem Lernziel zu nichtrekursiver Aggregation und rekursiver Aggregation (ebenfalls A bbildung 4.6): Während in Problem 10 (nichtrekursive Aggregation) die Prüflinge im Durc hschnitt 67 % der Punkte erreichen, können sie bei Frag en zu rekursiver Aggregation im Mittel nur 43 % der erreichen. Dieses E rgebnis ist umso bedeutsamer als bei Problem 10 prozedurales Wissen verlangt wurde und in Problem 7.3 nur konzeptuelles Wissen der kognitiven Stufe 2. Obwohl, wie bereits erwähnt ,die Resultate der Lernstandserhebungen keine detaillierte Ler nzielerfolgsanalyse wie im vorhergehenden Kapitel erlauben, lassen sich mit ihrer Hilfe dennoch die Vorrangrelationen innerhalb der Lernzielgraphen untermauern. In Zukunft wäre es allerdings sich erlich sinnvoll, gezielte empirische Untersuchungen zur Verifizierung des Lernzie lgraphen durchz uführen , wie am Ende von Kapitel 3 bereits erläutert . 4.2Synthese und Diskussion derbisher erarbeiteten Lernzielgraphen 4.2.1 Lernziele objektorientierter Mo dellierung Von besonderem Interesse ist die Gesamtheit derimpliziten und expliziten Lernziele ob jektorientierter Modellierung in der Jahrgangstufe 6 . Abbildung 4.7 zeigt diese Zusammenfassung. Die verschiedenen Bestandteile des Lernzielgraphen sind bereit s aus den obigen Erläuterungen bekannt. Insbesondere wurden nach Möglichkeit die bekannten Muster (2 –1–3 Muster) und abkürzenden Symbole für bestimmte Mengen von Vorrangrelationen zwischen den Mustern (Pfeile mit großer Strichstärke) verwendet. Ebenso wurde auf innere Strukturen der Lernzie lgruppen --beispielsweise im Falle der Lernziele zum Objektbegriff --verzichtet. Hinsichtlich der Lernziele zu rekursiven Objektstrukturen und der zugehörigen Klassendi agramme ist der Lernzielgraph in Abb 4.7 etwas allgemeiner als die untersuchten Aufgaben. In sbesondere wurde ein 2 –1–3 Muster zum Klassendiagramm rekursiver Objektstrukturen eing e-66 4 Lernzielanalyse in der Schulinformatik: Unterstufe fügt. Diese Erweiterung, d.h. die Berücksichtigung der dritten kognitiven Stufe, erfolgt vor a llem im Hinblick auf den we iteren Fortgang der Arbeit. Bei den expliziten Zielen wurde sofern möglich die Zuordnung zu den Richtzielen des Leh rplans (Tabelle 4.1 und 4.2) eingetragen. Wie schon im vorhergehenden Kapitel erkennt man, dass die expliziten Lernziele als Spezialisierung en von Richtzielen des Lehrplans interpretiert werden können und somit Teillernziele der Richtziele sind. 2:Objektorientiertes Modellieren Richtziel 6 Richtziel 8Richtziel 3 2:Rekursives Klassendiagramm für Ordner und Dateien verstehen3:Baumdiagramm für Ordner und Dateien erstellen3:Klassendiagramm mit Aggregationen zwischen verschiedenen alltagsrelevanten Klassen erstellen2:Attributwerte für Vektorgraphiken angebenTextuell ||Graphisch 1 2 3 ObjektGraphisch 1 2 3 Klasse 2 Graphisch 1 3Nichtrekursive Aggregation auf Klassenebene Graphisch 1 3Baumartige Objektstrukturen2 Richtziel 3 2:Klassen und Objektbegriff bei Vektorgraphiken verstehen2/3:Methodenaufrufe bei Vektorgraphiken verstehen /formulierenGraphisch 1 3Klassendiagramm baumartiger Objektstrukturen2Graphisch 1 3Aggregation auf Objektebene2 Abb. 4.7 Implizite Lernziele im Informatikunterricht der Jahrgangstufe 6 im Themenbereich „O bjektorientierte Modellierung“ . Der Überblick zeigt je doch auch, dass sich die Begrifflichkeiten objektorientierter Modelli erung innerhalb der Unterstufe des Gymnasiums auf einige wenige zentrale beschränken lassen, wobei diese untereinander durch eine ebenfalls geringe Zahl logischer und didaktischer Abhä ngigkeitenabhängen. Ein wichtiges Ziel dieser Arbeit ist –wie erwähnt –derEntwurf eines intersubjektiven Net zwerks zur Beschreibung der Wissensstrukturen für den Informatikunterricht (Kapitel 1). Der Graph in Abbildung 4.7 kann als ein Prototyp für den Bereich der objektorientierten Modelli erung ang esehen werden. Er zeigt die wesentlichen Begriffe sowie deren Abhängigkeiten. Auch zeigt er verschiedene Wege zur Unterrichtung dieser Begrifflichkeiten: Erste Thematik im Unterricht ist stets der Objektbegri ff Dann ist eine Verzweigung des Unterrichtsablaufs möglich: Entweder fährt man mit dem Konzept der Klasse fort oder man wählt die Aggregation auf Objektebene als nächsten Th emenschwerpunkt . Das in Kapitel 1 angesprochene Problem der Nichtlinearität reale r Unterrichtsabläufe resu ltiert auf der Ebene des Lernzielgraphen in Verzweigungspunkten, wie sie im Graphen von Abbi l-4.2 Synthese und Diskussion der bisher erarbeiteten Lernzielgraphen 67 dung 4.7 exemplarisch gezeigt werden. Die verschiedenen „Unterrichtspfade“ lassen sich somit graphisch klar repräsentieren . Eine Frage ist offenbar, inwieweit Graphen –wie etwa der in Abbildung 4.7 –Allgemeingü ltigkeit beanspruchen. Zunächst gilt er nur für die hier analysierte Menge von Aufgaben bzw. maximal für die objektorientierte Modellierung in der Unterstufe des bayerischen Gymnasiu ms. Für die Ausdehnung auf die objektorientierte Modellierung im A llgemein ensind sicherlich u mfangreichere Analysen notwendig. Grundsätzlich dürfte jedoch der Graph der al lgemein die Wissensstrukturen objektorientierter Modellierung beschreibt nicht all z u sehr von dem Obigem abwe ichen. 4.2.2Synthese der Lernzielgraphen objektorientierter Modellierung und Algorithmik Wie bereits in Kapitel 2 erläutert ,isteseinZiel dieser Arbeit ,die Lernziele innerhalb der Lehre der Informatik von der Schulinfor matik bis an die Hochschule exemplarisch zu dokumentieren. Mit den in den Kapiteln 3 und 4 vorgestellten Lernzielanalysen in den Teilbereiche n„Alg orithmik“ und „Objektorientierte Modellierung“ ist ein erster Schritt getan. Damit stellt sich offensichtlich die Fra ge nach einem Lernzielgraphen der die Beziehungen zwischen den Lernzi elen zur Alg orithmik und denen zur objektorientierten Modellierung wiedergibt. Die Abbildung 4.8 illustriert die grundsätzlichen Verhältnisse ;dieser Graph repräsentiert dabei den Stand auf der Basis der hier untersuchten Prüfungsaufgaben. Durch umfangreichere Anal ysen können , wie bereits erwähnt ,weitere Lernziele hinz ukommen. Grundsätzlich teilt sich der Graph in das (übergeordnete) Lernziel zum Begriff des Algorit hmus und das (übergeordnete) Lernziel zum Begriff des objektorientierten Modellierens auf. Diese übergeordneten Lernziele enthalten die verschiedenen Lernzielgruppen, wobei diese in den meisten Fällen als 2 –1–3 Muster realisiert sind. Insofern haben auch die überg eordneten Lernziele eine kognitive Dimension zwischen den Stufen 2 und 3. Neben Lernzielgruppen, die nur dem Algorithmusbegriffs bzw. der objektorientierten Modellierung zugeordnet werden kö nnen (beispielsweise alle Lernziele zum Begriff der Wiederholung oder die Lernziele zur Aggr egation auf Klassenebene), gibt es auch Lernziele die Beziehungen zu beiden Begrifflichkeiten aufweisen: Zum einen d as Lernziel zum Verständ nis/ zur Anwendung von Methoden und damit letztendlich auch das Lernziel zum Objektbegrif f. Diese nicht unmittelbar ersichtliche Beziehung kommt dadurch zustande, dass der Roboter, mit dessen Hilfe die Grundbegriffe der Alg orithmik vermittelt werden, selbst als Objekt interpretiert werden kann. Die Methoden des Rob oters sind auf der Ebene des algorithmischen Denkens elementare Anweisungen und insofern Teillernziele inne rhalb des Lernzieles zum Methodenbegriff. Eine weitere Verflechtung der Lernziele im algorithmischen und objektorientierten Theme nbereich entsteht durch die Einführung eines über geordneten Lernziels zur Schachtelung. Als fundamentale Idee ist die Schachtelung aus [Sc93] bekannt. Schachtelung von Kontrollstrukt uren bzw. Schachtelung von Objekten durch die Aggregationsbeziehung sind spezielle Auspr ägungen dieser Idee und führen in A bbildung 4. 8 zu einem übergeordneten Lernziel namens „Schachtelung “. Dieses Lernziel verbindet den Bereich statischer Modellierung im Bereich der Objek tstrukturen mit dynamischer Modellierung beiAlgorithmen. Genau genommen müsste sicherlich erwogen werde n, auch die Lernziele zur Sequenz als Teillernziel der Schachtelung zu betrachten, da die Sequenz als spezielle Darstellung geschac htelter Anweisungen interpretiert werden kann. Im Rahmen des Informatikunterrichts der Jah rgangstufe 6/7 ist dies den Schüler n jedoch sicherlich noch nicht vermittelbar. Anders werden68 4 Lernzielanalyse in der Schulinformatik: Unterstufe die Verhältnisse in Jahrgangstufe 9 sein, wo Sequenzen als ineinander geschachtelte Funktion saufrufe re alisiert werden. 2/3:Algorithmus (T) 2/3:Objektorientiertes Modellieren 2/3:Schachtelung Schachteln von KontrollstrukturenWiederholung 3:Schachteln von bedingter Wiederholung und Alternative2:Geschachtelte Zählwiederholung2–1–3:Objekt (T+G) 2–1–3:Attribut2–1–3:Methode 2–1–3:Aggregation auf Objektebene (G)2–1–3:Nichtrekursive Aggregation auf Klassenebene (G)2–1–3:Klasse (G) 2–1–3: Zählwiederholung (T) 2–1–3:Bedingte Wiederholung (T)2–1–3:Sequenz (T) 2–1–3: Alternative (T)2–1–3: Elementare Anweisung (T) 2–1–3: Bedingung (T) 2–1–3:Baumartige Objektstrukturen (G)2–1–3:Rekursive Aggregation auf Klassenebene (G) Abb. 4.8 Übersichtsgraph zu den Lernzielen in den Teilbereichen Algorith mik und Objektorie ntierte Modellierung im Fach Informatik der Jahrgangstufen 6/7 . 4.2.3Lernzielgraph und fundamentale Ideen Bereits im vorhergehenden Abschnitt deuteten sich Begrifflichkeiten an, die an die fund amentalen Ideen der Informatik [Sc93] erinnern. In[Sc93] werden die fundamentalen Ideen einer der Masterideen „Algorithmisierung“, „Strukturierte Zerlegung“ oder „Sprache“ zugeordnet. Der detaillierte Vergleich des Lernzielgraphen in Abbildung 4.8 mit den fundamentalen Ideen zeigt ,dass innerhalb der Ma steridee „Algorithmisierung“ folgende Lernziele durch entspr echende Ideen repräsentiert werden: oKonkatenation: Die Lernziel zur Sequenz oAlternative: Lernziele zur Alternative oIteration: Lernziele zur Wiederholung oRekursion: Rekursive Aggregation auf Klasse nebene Es sind also insbesondere die fundamentale n Ideen zum Teilbereich der Programmierkonzepte, dieman als Lernziele wieder findet .Weitere Zuordnungen lassen sich innerhalb der Masteridee „Strukturierte Zerlegung“ erkennen: oLokale Objekte: Die Lernziel e zum Objektbegriff oAbstrakte Datentypen: Die Lernziele zum Klassenbegriff oSchachtelung: Die Lernziele (inklusiv der Teillernziele) zu Schachtelung oBaumstrukturen: Aggregation auf Objektebene Eskönnen somit allen Lernzielgruppen aus Abbildung 4.8 einer fundamentale n Idee zuordnen. Die Umkehrung ist allerdings nicht zutreffend, so gibt es einige fundamentale Ideen, die keinem4.2 Synthese und Diskussion der bisher erarbeiteten Lernzielgraphen 69 Lernziel zugeordnet werden können; etwa die fundamentalen Ideen aus der Gruppe „Verifikat ion“ (siehe dazu [Sc04a]). Der Lernzielgra ph aus Abbildung 4.8 weist einige Eigenschaften, die bei den fundamentalen Ideen der Informatik von verschiedenen Autoren ([Ba98], [Sc04a]) vermisst werden: -Es werden nur Begrifflichkeiten aufgenommen, deren Relevanz für den Informatikunte rricht belegt we rden kann. -DieSemantik einer Idee wird durch Zuordnung zu einem Lernziel entwicklungspsych ologisch spezifizierbar -Die bei m Baum der fundamentalen Ideen ungeklärte Frage der Semantik derKanten des Ideenbaums erübrigt sich; da die Lernziele den Ideen zugeo rdnet sind, lassen sich die Beziehungen zwischen den Ideen über die Beziehungen im Lernzielgraphen def inieren. -Die bei [Sc93] auftretende „Nichtorthogonalität“ der Ideen (d.h. eine Idee kann in me hreren Idee ngruppen auftreten) bildet hier kein Problem, da geeignete Schnittmengen g ebildet werden. 4.2.4 Lernzielgraph im Vergleich mit den GI -Standards Während die f undamentalen Ideen als Beschreibung der zentralen Begriffe des Informatiku nterrichts angesehen werden können ,bilden die GI -Standards [Gi08] eine Zielvereinbarung, we lche Kompetenzen ein Schüler am Ende einer bestimmten Jahrgangstufe haben sollte. Die grundsätzli che Struktur der GI -Standards wurde bereits in Kapitel 2 skizziert. In diesem A bschnitt werden die Lernziele des Graphen aus Abbildung 4.8 mit den zugehörigen GI -Standards vergli chen. Ein derartiger Vergleich ist zwar direkt nicht möglich, da die hier analysierten Ler nziele auf der Ebene von Grobzielen einzuordnen sind, während die GI -Standards (als Komp etenz) eher mit Richtzielen vergleichba r sind, doch müssten erstere sich auf jeden Fall einzelnen GI-Standards zuordnen lassen. Dazu sind in Tabelle 4.9 für die objektorientierte Modellierung und Algorithmik in der U nterstufe die relevanten Standards aufgeführt und mit den in Abbildung 4.8 rep räsentierten Lernzielen verglichen. Von den Standards sind dabei nur diejenigen aufgeführt, bei denen eine En tsprechung mitden bisher erwähnten expliziten oder impliziten Lernzielen zu erkennen ist. Tabelle 4.9: Lernziele in der Unterstufe des bayerische n Gymnasiums und Standards im Vergleich Inhaltsbereiche GI-Standards Lernziele in der Unterstufe des bayer ischen Gymnasiums kennen und verwenden Baumstru kturen am Beispiel von Verzeichni sbäumenRichtziele 5, 6, 7 a us Tabelle 4.2 stellen die Struktur vernetzter D okumente mithilfe von Graphen darRichtziele 6 und 7 aus Tabelle 4.2Information und Daten (Abschnitt 4.2.1 ) kennen die Begriffe »Klasse«, »O bjekt«, »Attribut« und »Attributwert« und benutzen sie in Anwendungs situationenImplizite Lernziele zu m Objek tund Klassenbegriff aus Abb. 4.8 Algorithmen (A bschnitt 3. 3.1)interpretieren Handlungsvorschri ften korrekt und führen sie schrit tweise ausRichtziele 4 und 5 aus Tabelle 3.170 4 Lernzielanalyse in der Schulinformatik: Unterstufe benutzen die algorithmischen Grun dbausteine zur Darstellung von HandlungsvorschriftenRichtziel 6, 7 und 8 aus Tabelle 3.1 entwerfen Handlungsvorschriften als Text oder mit formalen Darste llungsformenRichtziel 6, 7 und 8 aus Tabelle 3.1 entwerfen und testen einfache Alg orithmenRichtziel 6, 7 und 8 aus Tabelle 3.1 Die beiden Inhaltsbereiche „Information und Daten“ sowie „Algorithmen“ der GI -Standards lassen sich direkt den in Kapitel 3 und 4 analysierten Themenbereichen zuordnen. Schon der erste Blick in die rechte Spalte von Tabelle 4.9zeigt, dass Entsprechungen –wie zu erwarten – hauptsächlich zwischen Standards und expliziten Lernzielen und damit den Richtzielen auftr eten. Lediglich beim Klassen -und Objektbegriff werden die Standards konkreter und es können implizite Lernziele zugeordnet werden. Ansonsten bew egen sich die Standards offenbar auf dem Abstra ktionsniveau von Lehrplänen und damit auf Richtzielniveau. Auch an anderen Stellen (etwa im Bereich der Algorithmik der 8 –10 Jahrgangsstufe, wo sehr konkret der Begriff der Variable genannt wird und ansonst nur von der allgemeinen Struktur von Algorithmen die Rede ist) fällt z. T. auf, dass die Standards z. T. auf unterschiedlichem Abstraktionsniveau formuliert sind und eher als Grobziele denn als Richtziele formuliert sind . Analysiert ma n Tabelle 4.9 etwas detaillierter, so erkennt man, dass im Inhaltsbereich „I nformation und Daten“ die Richtziele 1 –4 aus Tabelle 4.2nicht auftreten. Das hat folgenden Grund: Die Richtziele 1 –4 aus dieser Tabelle betreffen die Objektstruktur von Graphiken, was in den Stan dards für die hier betrachtete Altersgruppe offenbar nicht explizit verlangt wird. Eventuell ließe sich der bei den Jahrgangstufen 8 –10 enthaltene Eintrag „ Schüler stellen Info rmation in unterschiedlicher Form dar “so interpretieren, dass auch objektorie ntierte Repräsent ation von Graphiken mit eingeschlossen wäre. Ist in den Standards die objektorientierte Modellierung von Graphiksystemen für den Unterstufenbereich nicht vorgesehen? Das wäre e rstaunlich, denn es hat sich gezeigt, dass gerade diese Themati k für die Motivierung der objek torientierten Modellierung äußerst hilfreich ist (siehe etwa [Fr01]). Demgegenüber ist die o bjektorientierte Modellierung von vernetzten und nicht vernetzten Textdokumenten, --ein Thema, das in den Sta ndards für diese Alters stufe erwähnt wird --, deutlich abstrakter. Außerdem fällt auf, dass zwar der Klassen -und Objektbegriff in den Standards enthalten ist, nicht jedoch der Begriff der Beziehung zwischen Objekten und Klassen, obwohl dieser für die Darstellung von hierarchi schen Strukturen (ebenfalls ein Element der GI -Standards in diesem Alters -und Inhaltsbereich) sicherlich notwendig ist. Der Inhaltsbereich „Algorithmik“ der GI -Standards wird durch die Lernzielanalyse in A bschnitt 3.2 erfasst. Zwar fehlen auch hier in T abelle 4.9die Richtziele 1 –4 aus Tabelle 3.1, dies liegt jedoch daran, dass diese Richtziele in den Richtzielen 6 –7 enthalten sind. Im Gegensatz zum Inhaltsbereich „Information und Daten“ ist somit keine wesentliche inhaltliche Diskrepanz zwischen den Standards und dem hier untersuchten Lehrplanausschnitt zu erkennen. Die Sta ndards sind hier ähnlich abstrakt gehalten, wie die Richtziele der Lehrpläne. Es fällt jedoch auf, dass in den Standards was den Altersbereich der Unterstufe betrifft nur an wenige n Stellen von Algorithmen sondern häufiger von Handlungsvorschriften die Rede ist; vermutlich ist damit e ine informelle oder pseudocode -ähnliche Repräsentation von Algorithmen gemeint. In den Sta n-4.2 Synthese und Diskussion der bisher erarbeiteten Lernzielgraphen 71 dards der folgenden Altersstufen (8. –10. Jahrgangsstufe) wird dann nur noch der Begriff Alg orithmus verwendet. Da jedoch andererseits bereits für die 5. --7. Jahrgangsstufe die algorithm ischen Grundbausteine (es dürften damit die Kontrollstrukturen ge meint sein) explizit als Sta ndard verlangt werden, bleibt an dieser Stelle unklar, welche Inhalte nun konkret verlangt werden sollen und welche nicht. Die bisherigen Bemerkungen legen es nahe, in den GI -Standards eventuell auch die Bezi ehungen der Standar ds untereinander zu berücksichtigen. Beispielsweise werden in den Sta ndards zur Algorithmik in den Alterstufen 5 –7 drei zunächst sehr ähnliche Vorgaben genannt: „benutzen die algorithmischen Grundbausteine zur Darstellung von Handlungsvorschriften“, „entwerfen Handlungsvorschriften als Text oder mit formalen Darstellungsformen“, „entwerfen und testen einfache Algorithmen“. Auf den ersten Blick ist nur schwer zu erkennen worin sich die drei Standards unterscheiden. Sind die algorithmischen Grundbausteine d ie formalen Da rstellungsformen? Worin liegt der Unterschied zwischen Handlungsvorschriften und Algorit hmen, wo liegen die Gemeinsamkeiten, wo die didaktischen und logischen Abhängigkeiten? Der hier durchgeführte Vergleich von GI -Standards und Richtzielen des Lehrplans zeigt auf der einen Seite, dass die GI -Standards durchaus mit der Richtzielebene der hier analysierten Lehrpläne vergleichbar sind (bzw. umgekehrt) . Zum anderen verdeutlicht er aber auch die in Kapitel 1 angespro chene Notwendigkeit , wonach di e GI-Standards unbedingt von einer Strukt urierung flankiert sein sollten, d ie die Details eines Standards beschreibt. Ohne eine derartige Fundierung bleiben die Standards zu abstrakt, was letztendlich ihre Wirkung in der Didaktik der Informatik sicherlich reduzieren würde.72 4 Lernzielanalyse in der Schulinformatik: Unterstufe5Lernziel e funktionaler Modellierung indidaktische rReflexion Im bisherigen Verlauf der Arbeit wurden die Lernzielgraphen im Informatikunterricht der Unterstufe präsentiert und analysiert. Während im 4. Kapitel gewissermaßen eine „Breitenan alyse einer g esamten Stufe durchgeführt wurde, soll im Laufe der nächsten beiden Kapitel eine „Längsstudie“ vorgestellt werden, wobei die Entwicklung einer Begrifflichkeit im Laufe des schulischen Informatikunterrichts , beispielsweise der Begriff der Algorithmik oder d er Date nstrukturen, anhand der verschiedenen Lernzielgraphen diskutiert wird. Dazu ist es zunächst notwendig für die Inhalte der 9. Jahrgangsstufe die Lernzielanalyse durchzuführen. In dieser Jahrgangsstufe ist neben der Datenbankmodellierung die funktion ale Modellierung ein zentraler Bestandteil. Diese soll im Rahmen des vorliegenden Kapitels detai lliert betrachtet werden. Die synoptische Betrachtung über mehrere Jahrgangsstufen ist dann G egenstand des 6. Kapitels. 5.1Funk tionale Modellierung an der Schu le 5.1.1 Was ist funktionale Modellierung? Der Begriff der funktionalen Modellierung im schulischen Umfeld ist in der In formatik w eniger geläufig alsandere Modellierung stechniken, wie etwa die objektorientierte Modellierung . Was unter funktionaler Modelli erung an Schulen zu verstehen ist ,wurde von P. Hubwieser [Hu03] erläutert: Unter Verwendung von Datenflussdiagrammen werden die funktionalen Strukturen eines Algorithmus dargestellt. Hierbei wird die aus dem Ingenieursbereich bekannte Technik der Datenflu ssdiagramme auf die für schul informatische Belange notwendigen El ementereduziert. Dadurch erhält man eine Modellierungstechnik, die ein intuitives Entwickeln der beispielsweise bei Tabellenkalkulationen auftretenden Terme erlaubt .Eszeigt sich (siehe [Sc05], [Sc06a] ), dass beim funktionalen Modellieren wesentliche Elemente derRepräsentation von A lgorithmen auftreten: Funktionskomposition, boolesche Funktionen, bedingte Ausdrücke aber auch iterative Elemente. Eine erste Lernzielanalyse für funktionale Mod ellierung wurde vom Autor der vorliegenden Arbeit in [St07] präse ntiert. Funktionale Modellierung wird im schulischen Umfeld als graphisches Modellierungswer kzeug zur Erstellung komplexer Terme verwendet, wobei d ie resultierenden Terme nichtreku rsiv sind.Diese Art der Modellierung unterscheidet sich im schulischen Kontext somit entscheidend vom funktionalen Programmieren, woRekurs ion und rekursive Datentypen eine zentrale Rolle spielen! Trotz dieser Beschränkung auf nichtrekursive Terme hat sich die funkt ionale Modelli erung inzwischen als komplexes und für die Schüler anspruchvolles Themengebiet an bayer ischen Gymnasien etabliert und wird in einschlägigen Schulbüchern thematisiert ( [Br07], [En07], [Hu07a]) Folgendes Beispiel, das aus [Hu07 a] entnommen ist, illustriert wesentliche Elemente funkti onaler Modellierung: „Gemäß den Regeln der Deutschen Post kann ein Brief als Standardbrief verschickt werden, wenn die Länge zwischen 14 cm und 23,5 cm, die Breite zwischen 9 cm und 12 cm und die Länge das 1,41 fach e der Breite ist. “74 5 Lernziele funktionaler Modellierung in didaktischer Reflexion Das gesuchte Datenflussdiagramm zeigt Abbildung 5.1. Breite Länge <12 >9 Und< > Und Und23,5 14 =*1,41 Abb. 5.1 Datenflussdiagramm einer typischen Problemstellung funktionaler Modellierung in der 9. Jahrgangsstufe . Die Termdarstellung kann unter Verwendung einer Bottom -Up-Strategie direkt aus dem Di agramm abgelesen werden und lautet: UND(UND(Breite<12;Breite>9), Bre ite*1,41 = Länge; UND(Länge < 23,5;Länge>14)) Bereits dieses Beispiel enthält zahlreiche entscheidende Konzepte: Mehrstellige Funktion en, insbesondere Boolesche Funktion en, unterschiedliche Repräsentationen funktionaler Au sdrücke (Datenflussdiagramm vs. Termdarstellung), Infix -und Praefixnotation, Funktionskomposition oder verschiedene Date ntypen. Zusätzlich können bei der Berechnung boolescher Term Aspekte der strikten bzw. nich tstrikten Auswertung von Belang sein. Wie das angegebene Beispiel zeigt ,erfordert funktionale Modellierung derartiger Terme von den Schülern im Allgemei nenkognitive Fähigkeiten der Stufe 3 oder höher , denn bei jedem Modell muss mindestens konze ptuelles Wissen angewandt werden; zusätzlich isthäufig zuüberprüfen, ob das erstellte Modell wirklich den realen Sachverhalt b eschreibt , insofern hat man es in der Regel mit kognitiven Prozessdimensionen der Stufe 4 oder höher zu tun . 5.1.2 Funktionale Modellierung im Lehrplan an bayerischen Gymnasien Im Unterschied zu r6./7.Jahrgangstufe ist Informatik in der 9. Jahrgangstufe ein eigenständ iges Sch ulfach im naturwissenschaftlich -technischen Zweig des bayerischen Gymnasiums. G emäß Lehrplan der 9. Jahrg angstufe entfallen auf die funktionale Modellierung insgesamt 18 U nterrichtsstunden. Im Lehrplan [ISB07] werden dabei die in Tabelle 5.1 aufgeführten Richtziele genannt. Tabelle 5.1 Richtziele im Lehrplan der 9. Jahrgangstufe des bayerischen Gymnasiums im Bereich „Funktionale Modellierung“ . Art Lernziel Kategorie 1.Richt ziel Sie(die Schüler) können Daten verarbeitende Prozesse durch Funktionen sowie Datenflüsse b eschreiben und umsetzen.C≥35.2 Lernzielanalyse ausgewählter Prüfungsaufgaben 75 2.Richtz iel Sie(die Schüler) kennen die funktionale Sichtweise als allgeme inen Zugang zur Funktionsweise von Tabellenkalkulationssyst emen.C≥1 3.Richtziel Sie(die Schüler) lernen Funktionen als Daten verarbeitende Pr ozesse mit Eingä ngen und je einem A usgang kennenB2 4.Richtziel Sie(die Schüler) lösen praxisnahe Aufgabenstellungen, z. B. aus dem kaufmännischen Bereich oder der Mathematik, unter Ve rwendung der funktionalen Sich tweise.C/D≥3 5.Richtziel Sie(die Schüler) kombinieren mehrere Funktionen u nd stellen die Datenflüsse in e inem Diagramm darC≥3 6.Richtziel Sie realisieren die Lösung mit einem Tabellenkalkulationssystem und überpr üfen die Lösung anhand verschiedener Eingaben.C≥3 Der hier vorgestellte Katalog von Richtzielen wird ergänzt du rch eine Spezifikation der (informatischen) Konzepte , mit denen die Richtziele umgesetzt werden sollen , allerdings ohne A ngabe einer kognitiven Prozessdimension : 1.Elemente von Datenflussdiagrammen (Funktion/Prozess, Datenfluss, Ein -und Ausgabe, Verteiler) 2.Funktion als informationsverarbeitende Einheit (Bezeichner, Eingangsparameter, Funkt ionswert, Zuordnungsvorschrift; Eindeutigkeit); 3.Vordefinierte Funktionen, insbesondere bedingte Funktion („Wenn -Funktion“) und log ische Funktionen 4.Umsetzung von Datenflussd iagrammen in Terme eines Tabellenkalkulationssystems 5.Elementare Datentypen: Zahl, Text, Datum, Wahrheitswert Diese Konzepte bilden einen Anhalts punkt für die im weiteren durchzuführende Identi fizierung impliziter Lernziele: Datenflussdiagramm, Funktion, l ogische Funktionen und bedingte Funktionen, etc. sind Begriffe, die sich in impliziten konzeptuellen Lernzielen niederschlagen werden. Die in Tabelle 5.1 angegebenen Lernzielkategorien deuten bereits darauf hin, dass die Sch üler bei der funktionalen Modell ierung unter Umständen Fragestellungen bearbeiten müssen, d eren kognitive Dimension über das Verstehen (Stufe 2) hinausgeht. Insbesondere zeigt d ie Ford erung, Probleme aus nichtinformatischen Domänen ( z.B.ausdem kaufmän nischen Bereich , siehe Tabelle 5.1 )zu bearbeiten, dass vom Schüler erwartet wird, selbständig geeignete Strategien zu finden undformal umzu setzen. Im Allgemeinen dürfte also mindestens die kognitive Dimension 3erreicht werden. Im Ü brigen deuten die Richtziele darauf hin, dass auch von ad ministrativer Seite die Position eines anwendungs -und alltag sorientierten Unterrichts erwartet wird, dessen lernpsychologische Prinzipien einer gemäßigt konstruktivistischen Position, wie sie in den er sten Kapiteln beschrieben wurde ,nahe stehen . 5.2Lernzielanalyse ausgewählter Prüfungsaufgaben 5.2.1 Vorbemerkungen Wie in den vorhergehenden Kapiteln 3 und 4 bilden auch hier einschlägige Übungs -bzw. Pr üfungsa ufgaben die Grundlage der Lernziel analyse .76 5 Lernziele funktionaler Modellierung in didaktischer Reflexion Im Gegensatz zu den Kapiteln 3 und 4 steht für die f unktionale Modellierung keine Lernsta nderhebung, deren Aufgabengestaltung eine „offizielle Spezifikation“ der zu erreichenden expl iziten Lernziele darstellen würde, zur Verfügung. Stattdessen werden Aufgaben aus einschläg igen Schulbüchern herangezogen. Der Einsatz von Aufgaben aus Schulbüchern lässt sich vertreten, da auch diese ein aufwendiges Begutachtungsverfahren durchlaufen und der Leh rplanbezug somit gesichert ist. Um die Lerninhalte in möglichst großer Breite zu erfassen , wurde darüber hinaus aus jed erEinheit des betrachteten Lehrbuchs eine repräsentative Aufgabe au sgewählt. Der Autor der vorliegenden Arbeit hatals e iner der Autoren des Schulbuch esInformatik 2 ([Hu07 a]) insbesondere bei der Ausarbeitung der Aufgaben zu Funktionalen Modellierung en tscheidend mitgewirkt. Eine Auswahl dieser Aufg aben wurde im Schuljahr 2007/2008 in der 9. Jahrgangstufe des Carl -Orff-Gymnasiums bei Ste greifaufgaben eingesetzt. Für diese Aufgaben werden im Folgenden die Lernzielgraphen diskutiert. Die hier analysierten A ufgaben sowie die zugehörigen Statistiken zu den Schülerleistungen sind in Anhang B.3 angegeben. Beurteilung bisheriger Arbeiten zu Lernzielen im Bereich der Funktionalen Modellierung In einer Diplomarbeit [Be07], die an der Lehreinheit „Didaktik der Infor matik“ der TU München erstellt wurde, wurde ndie im Schulbuch „Informatik 2“ ([Hu07 a]) angegebenen Au fgaben zur Funktionalen Modellierung analysiert und in erster Linie dieexpliziten Lernziele pr äsentiert. Die dort vorgestellte Lernzielsammlung ist jedoch für die vorliegende Arbeit aus fo lgenden Gründen nur bedingt hil freich : Die Sammlung von Lernzielen ist ein Katalog, der die eventuell vorhandenen Beziehu ngen zwischen den Lernzielen nicht berücksichtigt: Es gibt unter den dort aufgeführten Lernzielen sol che, die aus informatischer Sicht wesentlich sind und solche, die nur ma rginale Bedeutung haben. Andererseits lassen sich einige der in [Be07] genannten Lernziele zu übergeordneten Lernzielen zusammenfassen , wodurch sich der Lernzielkatalog strukturieren l ässt. Die Lernzielsammlung orientiert sich zu sehr an den expliziten Lernzielen der einzelnen Aufgaben. Die hinter diesen Lernzielen stehenden Konzepte der Informatik, die aus der Sicht der Autoren der Aufgaben die eigentliche Intention darstellen, werden nur marginal erfasst oder gehen in der Vielzahl der übrigen Lernziele unter. 5.2.2 Lernzielanalysen von Aufgaben zur funktionalen Modellierung Zuordnungen oder Relationen Den Schülern der 9. Jahrgangstufe ist zwar der Begriff der Funktion aus dem Mathemat ikunte rricht der 8. Jahrgangstufe bekannt, das Konzept der Relation als Grundlage desFunktionsbe griffs wird in den aktuellen Lehrplänen der Mathematik an bayer ischen Gymnasien jedoch nicht detailliert thematisiert. Insofern ist diese Thematik für die Schü ler neu. Deshalb wird die Th ematik „Zuordnung“ in [Hu07 a] an den Beginn des Abschnitts zur funktionalen Modellierung gestellt. DiePrüfungsaufgabe in Anhang B.3.1 thematisiert diesen Begriff . Den Schülern wird dabei ein Ausschnitt eines Stammbaums präsenti ert und siehaben die Aufgabe, diese graphische Re präsentation der Zuordnung in alternative Formen, wie Matrixdarstellung oder Pfeildiagramm umzuwandeln. Dabei treten die in Tabelle 5.1 genannten impliziten und expliziten Lernziele5.2 Lernzielanalyse ausgewählter Prüfungsaufgaben 77 auf, wobei bei den expli ziten Lernzielen nur die übergeordneten aufgeführt sind (Die in Tabelle 5.2 angegebenen Lernziele sind auch in der oben genannten Arbeit [Be07] zu finden (dort die Lernziele 1, 4, 5 und 6).) Den Lernzie lgraph zeigt Abbildung 5.2 Tabelle 5.2Implizite Lernz iele bei Relationen und ihre Repräsentation . Nr Lernziel Kategorie 34 Konzept der Relation / Umkehrrelation verstehen und anwenden B≥2 35 Graphische Repräsentation von Relationen kennen A1 36 Matrixdarstellung für Relationen kennen A1 37 Pfeildia grammdar stellung für Relationen kennen A1 38 Umkehrrelationen angeben (Explizit) C≥3 39 Darstellungswechsel bei Relationen durchführen (Explizit) C≥3 Auch bei de m Lernzielgraph in Abbildung 5.2 wurde von den bereits mehrfach verwendeten Mustern Gebr auch gemacht. Die Details der Vorrangrelationen bedürfen dabei aufgrund ihrer Einbettung in die erwähnten Muster, nur noch in wenigen Teilen einer Begrün dung: Wie erlä utert wird die Kenntnis verschiedener Darstellungsformen von Zuordnungen gefordert; dies resultiert im Lernzielgraph in einem faktischen Lernziel, in dem diese drei Repräsentationsformen (Graphisch, Matrixdarstellung, Pfeildiagramm) genannt sind. Ohne weitere Erläuterung ist auch die Vorrangrelation zwischen den Lernzielen zur Relation und Umk ehrrelation klar: Letztere s kann nur erreicht werden, wenn das Lernziel zum Relationsbegriff auf dem entsprechenden kogn itiven Ni veau erreicht wird. Implizite Lernziele 3:Darstellungswechsel für Relationen 3:Umkehrrelation angeben B.3.1b)B.3.1a) (Graphisch Matrix )B.3.1.c(Matrix Pfeildiagr .)Matrixdar .1 2 3UmkehrrelationGraphisch ||Matrix ||Pfeildiagramm 1 2 3 Relation Abb. 5.2Lernzielgraph für Relationen und ihre Repräsentationen . Modellierung iterativer Probleme Iterative Berechnungen lassen sich mithilfe von Tabellenkalkulationsprogramm sehr einfach umsetzen: Beim Kopieren eines Terms in eine neue Zelle eines Rechenblatts werden die Zellb ezüge entsprechend der Verschiebung angepasst; damit lassen sich d urch wiederhol tes Kopieren iterative Standardprobleme wie die Berechnung der Fakultätsfunktion oder die Berechnung der Binomialkoeffizienten einfach realisieren . In der A ufgabe, die hier analysiert wird –Aufgabenstellung und Lösung sind in Anhang B.3.2zu finden –,sollein Feld vonnZahlen iterativ aufsummiert werden .Die Schüler mussten dabei selbständig erkennen, wie sich die Berechnung der Summe der ersten n Zahlen auf die78 5 Lernziele funktionaler Modellierung in didaktischer Reflexion Summe der ersten (n -1) Zahlen zurückführen lässt. Zwar war die prinzipielle Strategie bei d erartigen iterativen Problemen und deren Umsetzung am Rechner den Schülern aus dem Unterricht bekannt, allerdings nicht imspeziellen Ko ntextder Aufgabe . Bei der Frage, welche informatischen Begriffe dies er Lösungsstrategie zugrunde sind folge nde Überleg ungen hil freich : 1.Um diese Aufgabe zu lösen, muss der Schüler das Arbeiten mit ganzzahligen Termen, die relative Zellbezüge enthalten, beherrschen. 2.Der Schüler muss die Terme derart konstruieren, dass sich das Problem durch eine S equenz strukturell ähnlic her Terme lösen lässt , wobei der Wert eines bestimmten Terms it erativ au f dem V orhergehende naufbaut. Dazu muss er das Konzept der Iteration beher rschen und speziell den Iterationsanfang und die Iterationsfortsetzung festlegen .Das Entwickeln der iterative n Struktur ist ein prozedurales Lernziel mit einer kognitiven Stufe , dieim Falle eines strukturell neuen Problems über der reinen Anwendung (Stufe 3 oder höher )liegt. Diese Ausführungen legen nahe, dass die diskutierte Übungsaufgabe impli zitekonzeptuel le Lernziele zu speziellen Sorten –hier die ganzen Zahlen –, Termen, Zellbezügen ,Sequenz enund zurIteration mindestens auf der kognitiven Stufe 3enthalten und darüber hinaus anspruchsvolle prozedurale Lern ziele zur Realisierung iterativer Prozesse .DieTabelle 5.3 sowie der Lernzie lgraph in Abbildung 5.2 zeigen die Lernziele und ihre Beziehungen (auch hier sind in der Tabe lle die speziellen expliz iten Lernziele nicht angegeben) . Tabelle 5.3Lernziele bei Problemen mit iterativer Lösungsstruktur . Nr Lernziel Kateg orie 40 Sorte der ganzen Zahlen verstehen /anwenden 2–1–3 41 Operationen über ganzen Zahlen verstehen /anwenden 2–1–3 42 Relative / Absolute Zellbezüge verstehen /anwenden 2–1–3 43 Konzept der Terme über ganzen Zahlen in Tabellenkalkulationssystemen anwendenB≥3 44 Konzept der Sequenz auf Terme anwenden B≥3 45 Konzept der Iteration bei Tabellenkalkulationen anwenden B≥3 46 Konzept des Iterationsanfang beherrschen B≥3 47 Konzept der Iterationsfortsetzung beherrschen B≥3 48 Iterationsstrukturen erke nnen und realisieren (Explizit) C≥3 Abgesehen von didaktischen Vorrangrelationen innerhalb der 2 –1—3 Muster sind die i m Lernzielgraph 5.3 angegebenen Beziehungen starke Vorrangrelationen und aus fachlich en Gründen sehr nahe liegend: Zunächst bestehe n innerhalb des übergeordneten Lernziels zur So rte der ganzen Zahlen zwischen den Lernzielen zum Zahlbegriff selbst und den zugehörigen Operationen offensichtl iche Vorrangrelationen. Für die Erstellung von Termen bei Tabellenkalkulationssystemen ist a ußerdem die Kenntnis der beteiligten Sorten (hier der ganzen Zahlen) und der technischen Realisierung der Zellbezüge (absolute und relative) notwendig, woraus sich weitere Vorrangrelationen ergeben. Viele Beziehungen lassen sich auf Argumentationen, die aus d er Algorithmik bekannt sind (Kapitel 3, Abbildung 3.5), abstützen: Was dort die elementaren Anweisungen waren, sind nun die Terme über ganzen Zahlen; Wie dort aus elementaren Anweisungen Sequenzen konstruiert wurden, so wird hier eine Sequenz aufeinander a ufbauender Terme konstruiert. Die Vorrangr elationen sind damit strukturell teilweise dieselben wie in Abbildung 3.5: Lernziele zum Ter m-5.2 Lernzielanalys e ausgewählter Prüfungsaufgaben 79 begriff sind notwendig für Sequenzen von Termen und Sequenzen wiederum notwendig für it erative Strukturen, die sich im Fa lle von Tabellenkalkulation ssystemen auf Zählwiederholungen beschränken. Implizite Lernziele Sorte der ganzen Zahlen >3:Iterationstruktur3:Sequenz von Termen3:Terme bei TabellenkalkulationenZellbezüge bei Tabellenkalkulationen 2-1-3:Zahlen 3:Iteration bei Tabellenkalkulationen 3:Iterationsanfang 3:Iterationsfortsetzung Feld ganzer Zahlen iterativ summieren2-1-3:Relativer Zellbezug 2-1-3:Absoluter Zellbezug2-1-3:Operationen über Zahlen Abb. 5.3 Lernzielgraph iterativer Berechnungen mit Ta bellenkalkulation ssystemen . Die Lernzielstrukturen werden jedoch im Gegensatz zur Algorithmik in Jahrgan gstufe 7 durch die Einb eziehung von Termen über ganzen Zahlen und die Details iterativer Struktur en, die sich etwa in separaten Lernzielen zum Iterationsanfang und der Iterationsfortsetzung manifestieren ,beträchtlich erweitert. Bereits die Analyse dieser Aufgabe vermittelt eine n ersten Ei ndruck, inwiefern sich die Lernzielgraphen im Laufe des schulischen Informatikunterrichts we iterentw ickeln und differenzieren. Bei detaillierterer Analyse funktionaler Strukturen könnte man auch die Beziehung zwischen Lernzielen zu Sequenzen un dLernzielen zur Schachtelung berücksichtigen , d.h. die Sequenz als spezielle Ausprägung der Schachtelung in den Lernzielgraphen integrieren. Dies wird jedoch erstan späterer Stelle geschehen; in dieser Aufgabe wäre dies –zumindest aus der Schülerpe rspektive–noch nicht ziel führend, da die Begriffe Funktion und Funktionskomposition für das Verständnis der Lösung (noch) nicht notwendig sind .Somit kann hier streng genommen noch nicht von funktionaler Modellierung gesprochen werden, da nur eine Sequenz v on aufei nander aufbauenden Termen konstruiert wird, die in sehr imperativ geprägter Weise das Problem lösen. Die Analyse zeigt jedoch auch, dass zur Lösung derartiger Fragestellungen durchaus Hinte rgrundwissen über Grundstrukturen der Informatik (Sequenz, Iteration) notwendig sind. Ins ofern ist es durchaus problematisch, wenn in anderen Fächern Tabellenkalkulationssysteme zur L ösung derartiger Probleme eingesetzt werden ohne zugleich diese Grundbegriffe zu thematisi eren. Der Lernzielgraph 5.3 verdeutlicht andererseits jedoch auch , dass die Informatik im Bereich der funktionalen Modellierung auf fundierte Kenntnisse in Mathematik angewiesen ist : Das Lernziel zur Arbeit mit Termen sowie die dafür notwendigen Lernziele (Sorte der ganzen Za hlen und zugehörige O perationen) mü ssenimInformatik unterricht vorausgesetzt werden; ähnl iches gilt für den im folgenden Abschnitt auftretenden Funktionsbe griff.80 5 Lernziele funktionaler Modellierung in didaktischer Reflexion Verständnis von Datenflussdiagrammen Ein wichtiges Element des Informatikunterrichts in der 9. Jahrgangsstuf ean bayerischen Gymnasien sind funktionale Modelle und deren Repräsentation als Datenflussdiagramm. Die graphische Modellierung funktionaler Zusammenhänge du rch Datenflussdiagramme soll dem Schüler dabei den Ablauf einer Berechnung verdeutlichen undbei d er Konzeption komplexer Berechnungsterme eine Hilfestellung sein. Eine Grundvoraussetzung für eine effiziente Arbeit ist dabei,dass die Schüler den Wechsel zwischen der Darstellung eines funktionalen Ausdrucks alsDatenfluss diagramm und als textuell reprä sentierten Term beherrschen. Dies sollte in der in Anhang B.3.3 angegebenen Aufgabe überprüft werden. D azu wurde den Schüler ndas Date nflussdiagramm zur Beschreibung der Berechnung der Endnote in Mathematik zur Verfügung gestellt ;Aufgabe war es, die entsp rechende textuelle Repräsentation zu ermi tteln. Bei derartigen Aufgaben sind Lernziele, die in der Wissensdimension den Begriff der mehrstelligen Funktion in Praefix -und Infixnotation aufweisen ,von besonderer Bedeutung. Diesebauen wiederum auf dem Begr iff der Relation auf, da eine Funktion eine eindeutige Rel ation ist . Zwar ist den Schülern das Funktionskonzept aus der Mathematik bekannt, jedoch nicht in der Verallgemeinerung auf beliebig viele –unter Umständen auch nichtnumerische –Argumente . Neben diesen mathematischen Grundbegriffen spielt erstmals im Informatikunterricht das Konzept des Datentyps explizit eine Rolle: Ein Dat entyp wird dabei im Sinne grundlegender Lehrbü cher zur Informatik (z. B. [Br97 ]) als ein Tupel aus (einer Familie von )Sorten und Fun ktionen verstanden .Hierbei können derFunktionsbegriff und das Konzept der Sorte alsTeiller nziele derLern ziele zum Da tentyp angesehen werden .Es ist hierbei erwähnenswert , dass den Schülern v ergleichbare Strukturen aus der objektorientierten Mod ellierung vertraut sind: Die Lernziel e zum Objektbegriff enthielten Teillernziele zum Konzept des Attributs und der Meth ode. Den Attributen entsprechen hierdie Sorten, den Methoden die Funktionen. Diese Beziehung spielt im weiteren Verlauf des Informatiku nterrichts eine nicht zu unterschätzende Rolle: In der 10. Jahrgangsstufe, in der komplexe Klassenmodelle entworfen und objektorientiert impleme ntiert werden, ist es von großer Bedeutung , dass die Schüler eine Klasse als eine besondere Repräsentat ion von Datentypen erken nen. Insofern könnte man –etwa im Sinne der fundamentalen Ideen [Sc93], wo von „Abstrakten Datentypen“ gesprochen wird –die Lernziele zum Klasse nbegriff durchaus als Teillernziele der Ler nziele zum Datentyp betrachten. Weitere zentrale nLernziele der vorliegenden Aufgabe sind solche, diedieFunktionskomp osition als Wissenskomponente enthalten .Offenbar setzen diese Lernziele die entsprechenden Lernziele zum Funktionsbegriff voraus , d.h. zwischen diesen existiert eine Vorrangrelation . Auch hier existieren Querbezüge zur objektorientierten Modellierung: Funktionskomposition ist nichts anderes als Schachtelung von Funktionsaufrufen. Schachtelung ist andererseits aus der objektorientierten Modellierung in Form der Aggregation zwischen Objek ten bekannt. Die Schac htelung erweist sich somit als ein tragfähiges übergeordnetes Konzept, das Teill ernziele in allen bisher angesprochenen Modellierungstechniken aufweist .Nicht umsonst spielt es in den fundament alen Ideen eine wichtige Rolle. Neben de n Lernzielen mit konzeptueller Wissenskomponente treten bei der hier thematisie rten Aufgabe Lernziele mit faktischer Wissenskomponente auf:Die Schüler müssen zwei Arten derRepräsentation vonTermen kennen: Zum einen d ietextuelle Form , wobei hier sowohl Infix als auch Praefixnotation gefordert sind und zum anderen die Repräsentation mithilfe eines D atenflussdiagramms. Diese (faktischen) Lernziele sind –ebenso wie der Funktionsbe griff selbst –notwendig um die Funktionskomposition entweder auf der Ebene von Datenflussdiagra mmen oder auf der textuellen Ebene zu verstehen.5.2 Lernzielanalyse ausgewählter Prüfungsa ufgaben 81 Insgesamt ergeben sich damit die in Tabelle 5.4 genannten Lernziele; Abbildung 5.4 zeigt den Lernzie lgraph. Tabelle 5.4 Implizite Lernziele bei der Umwandlung von Datenflussdiagrammen i n Terme . Nr Lernziel Kategorie 49 Sorte der Fließkommazahlen verstehen B≥2 50 Konzept der Sorte verstehen B≥2 51 Funktionen über Fließkommazahlen verstehen B≥2 52 Konzept der mehrstelligen Funktion verstehen B≥2 53 Das Konzept des Datentyps verstehen 34 Konzept der Relation verstehen B≥2 54 Konzept der Funkt ionskomposition unter Verwendung von Datenflussdi agrammen / Termen verstehenB≥2 55 Repräsentation von Termen durch Datenflussdiagramme kennen A 1 56 Repräsentation von Termen in textueller Form kennen (Infix -und Praefixn otation)A 1 57 Repräsentatio nswechsel vom Datenflussdiagramm zum Term (Explizit) C≥3 Das bisher häufig verwendete 2 –1–3 Muster findet in Abbildung 5.4 keine Anwendung, da hier kein Lernziel der kognitiven Stufe 3 involviert ist. Stattdessen erkennt man zwei „2 –1“ Muster zwischen dem Lernziel zur mehrstelligen Funktionsanwendungen und den zugehörigen Lernzielen zur Symbolisierung der Funktionsaufrufe. Die Begründung für die schwache Vo rrangrelation sind dabei dieselben wie im Falle der 2 –1–3 Muster. 2:DatentypImplizite Lernziele 2:Sorten 2:Fließkomma zahlen 2:Datenflussdiagramm in Terme umwandeln 2:Datenflussdiagramm zur Darstellung der Endnotenberechnung in einen Term umwandeln2:Relation 2:Funktion (mehrstellig ) 2:Funktionskomposition1:Textuelle Repräsentation von Funktionen (Prae und Infixnotation )1:DFD zur Repräsentation von Funktionen 2:Funktionskomposition unter Verwendung von DFD2:Funktionskomposition in textueller Repräsentation2:Funktionen über Fließkommazahlen Abb. 5.4 Graph zur B eschreibung der Lernziele bei der Umwandlung eines Datenflussdiagramms in einen Term . Ein Aspekt, der bei der hier analysierten Aufgabe hinzukommt und der auch im Unterricht thematisiert werden sollte, ist die Beziehung zwischen Sequenzen von Termen (sie he die zuvor analysierte Aufgabe B.3.2) und komplexen Termstrukturen, wie sie hier zu bearbeiten sind.82 5 Lernziele funktionaler Modellierung in didaktischer Reflexion Repräsentiert man die iterative Berechnung aus B.3.2 mithilfe eines Datenflussdiagramms, so wird deutlich, dass sich auch diese Berechnung in einem einzi gen–sicherlich komplexen – Term darstellen lässt. Andererseits lässt sich auch das hier diskutierte Datenflussdiagramm d irekt auf ein Rechenblatt übertragen, indem man jedem Datenelement und jedem Funktionsau fruf eine eigene Zelle zuordnet und somit die Berechnung in anschaulicher Weise sequential isiert. Die Erkenntnis, dass sich Sequenzen von Termen in einem einzigen funktionalen Ausdruck zusammenfassen lassen, ist aus der Sicht der Informatik wichtig, denn er verdeutlicht, dass eine Sequenz eine besonde re Repräsentation eines funktionalen Ausdrucks ist und somit die–aus der Algorithmik bekannte –Sequenz konzeptionell durch die Funktionskomposition beschrieben werden kann. Selbständiges Erstellen von Datenflussdiagrammen Während die Aufgabe, die i m vorhergehenden Abschnitt analysiert wurde, in erster Linie das Verständnis der Konzepte funktionalen Modellierens evaluierte, wird im Folgenden eine Aufgabeanalysiert, die prüft inwieweit die Schüler das funktionale Modellieren mit Datenflussdi agrammen aktiv beherrschen , d.h. ob sie entsprechende Lernziele mit einer kognitiven Stufe ≥3 erreichen . Derartige Thematiken werden grundsätzlich in den Aufgaben B.3.4 und B.3.5 eval uiert. Da B.3.4 jedoch eine reine Wiederholungsaufgabe ist (kognitive Prozessdimension 1), steht in diesem Abschnitt B.3.5 im Mittelpunkt (auf B.3.4 wird bei der A uswertung eingega ngen). Thema der Aufgabe B.3.5 war es, das Datenflussdiagramm zur Berechnung des Endkapitals bei gegebenem Zinssatz und gegebenem Anfangskapital nach ein bzw. zwei Jahren selbständig zu erstellen. Z war wurden ähnliche Aufgaben im Unterric ht behandelt, der spezielle Kontext warjedoch neu. Im zweiten Teil dieser Aufgabe sollte das Problem auf einem (abstrakten) Rechenblatt gelöst werden; dazu konnten die Schüler entweder das zuvor erarbeitete Datenflus sdiagramm verwenden, oder die textuelle Repräsentation der Terme direkt aus der Angabe able iten.Pädagogischer Hintergrund d es zweiten Teils der Aufgabe war es, zu überprüfen, i nwieweit die Schüler die Datenflussdiagramme zur Ableitung der Terme ve rwenden. Aus konzeptuel ler Sicht unterscheidet sich der Lernzielgraph dieser Aufgabe nurwenig vom Lernzielgraph in Ab bildung 5.4. Jedoch umfassen die Lernziele nun in der kognitiven Dimens ion die Stufe 3, weshalb der Lernzielgraph (siehe Abbildung 5.5) wiederum die bekannte Stru ktur des 2 –1–3 Must ers enthält . Zusätzlich zu den unbedingt notwendigen Lernzielen sind in Abbildung 5.5 auch übergeordnete Lernziele (Datentyp und Funktionskomposition) aufg eführt. Dadurch wird deutlich ,inwiefern dieser Lernzielgraph mit den Lernzielgraphen zur objektorie ntierten Modellierung und zuweisungsorientierten Algorithmik in Beziehung steht: Das Zusa mmenfassen der Sorte der Fließkommazahlen und der zugehörigen Funktionen zum Datentyp der Fließkommazahlen stellt dieBezüge zuLernzielen im Kontext des Klassenbegrif fs: Was dort die einzelnen Objekte sind hier die Fließkommazahlen, und den Methoden entsprechen die den Sorten zug eordneten Funktionen. Ebenso bestehen Beziehungen zwischen der Funktionskomp osition und der Sequenz wie sie die Schüler in der Algorithmik ke nnen gelernt haben: Nachdem die Schüler in Aufgabe B.3.2 (siehe obige Analyse) zunächst gesehen haben, wie das Konzept der Sequenz in aufeinander aufbauenden (textuelle) Terme enthalten ist, wird bei der Modellierung mithilfe von Datenflus sdiagrammen deutl ich, dass sich derartige Sequenzen unter Verwendung der Funktionskompos ition in einem einzigen funktionalen Ausdruck darstellen lassen. Sequenz und Schachtelung von Funktionen können somit als verwandte Repräsentationen erkannt werden. Das Konzept der Sch achtelung ist andererseits auch von der Aggregationsbeziehung b ekannt, um hierarchische Objektstrukturen zu modellieren. Somit verbergen sich hinter der scheinbar einfachen Aufgabe komplexe Querbezüge zu völlig anderen Themenbereichen der Inform atik.5.2 Lernzielanalyse ausgewählter Prüfungsaufgaben 83 Implizite Lernziele >2:Datenflussdiagramm erstellen >2:Datenflussdiagramm für jährliche Zinsberechnung erstellen2:Relation 3:Datentyp der Fließkommazahlen 3:Sorte der FließkommazahlenDFD 1 2 3Mehrstellige Funktionen über Fließkommazahlen 3:Funktionskomposition 3:Funktionskomposition unter Verwendung von DFD Abb. 5.5 Lernzielgraph für Aufgaben, die das aktive Erarbeiten von Datenflussdi agrammen erfo rdern (Prüfungsaufgabe B.3.5) . Funktionale Modellierung b edingte rAusdrücke Ein Thema, das besonders hohe Anforderungen an die kognitiven Fähigkeiten der Schüler stellt, ist das Arbeiten mit bedingten Ausdrücken . Im Lehrplan der 9. Jahrgangsstufe [ISB07] wird die entsprechende Funktion –in Anlehnung an die Realisierung in Tabellenkalkulationssystemen – „Wenn“ -Funktion genannt; auch hierwird im Weiteren diese Bez eichnung verwendet. Es ha ndelt sich bei der „Wenn“ -Funktion um eine dreistellige Funktion, deren erstes Argument ein funktionaler Ausdruck mit booleschem Wert ist. In Abhängigkeit vom Wert des ersten Arg uments wird der Wert des zweiten bzw. dritten Argume ntsals Ergebnis zurückgegeben. Zur Verdeutlichung der entscheidenden Problem e im Zusammenhang mit der „Wenn“ -Funktion wird im Folgenden eine typische Aufgabenstellung vorgestellt und kurz diskutiert (siehe [Hu07a]) : Aufgabenbeschreibung: In der Aufgabe wirdder Preis eines Telegramms berechnet (siehe auch Anhang B.3.6 .Der Preis ist hierbei von der Anzahl der Wörter abhängig; Bis zu zehn Wörter kosten 14,83€; für Maxitelegramme (bis zu 30 Wörtern) muss man 17,90 € bezahlen und für je weitere zehn Wörter jeweils 5,11€.Das zugehörige Datenflussdi agramm zeigt A bbildung 5.6 Beschreibung des Datenflussdiagramms: Istdie Anzahl der Wörter > 10 ,muss das dri tte Argument der untersten „Wenn“ -Funktion ausgewertet werden. Da dieseswiederum eine „Wenn“ -Funktion enthält, ist auch hier zuerst die entsprechende Bedingung auszuwerten und dann je nach Wert das zweite oder dritte Argument dieser „Wenn“ -Funktion. Das a ngegebene Datenflussdiagramm enthält als zusätzliche Problematik so genannte Datenve rteiler (kleine Kr eise), die die mehrfache Verwendung eines Teilergebnisses erla uben. Dieses Beispiel zeigt bereits die wesentlichen Begrifflichkeiten, die bei der „Wenn“ -Funktion eine Rolle spielen:84 5 Lernziele funktionaler Modellierung in didaktischer Reflexion Das erste Argument der „Wenn“ -Funktion ist ein funktionaler Ausdruck, de ssen Wert bo olesch ist. Vor der Thematisierung dieser Funktion sollten deshalb der Datentyp BOOLE und funktionale Ausdrücke über boolesche Funktionen behandelt wo rden sein. Text <10 Wenn14,83 Wenn<30 Sub30 Div10 Mult5,11 Add17,9 17,9Anzahl der Worte Aufrunden Abb. 5.6 Datenflussdiagramm zur Illustration geschach telter „Wenn“ -Funktion . Die „Wenn“ -Funktion wertet das zweite Argument genau dann aus, wenn das erste Arg ument TRUE ist und ansonsten das dritte .In diesem Zusammenhang ist es wichtig, dass die Schüler den nichtstrikten Auswertungsmechanismus der „Wenn“ -Funktion verstehen, denn häufig darf nur entweder das zweite oder das dritte Argument der „Wenn“ -Funktion ausgewertet werden. Falls funktionale Ausdrücke geschachtelte „Wenn“ -Funktionen enthalten, wird bei der Inte rpretation der entsprechenden Daten flussdia gram medie bisherige Vorstellung des „Datenflu sses von oben nach unten“ durch brochen; abhängig vom Wert des booleschen Au sdrucks wird aufgrund der Nichtstriktheit entweder der „true“ -Zweig oder der „false“ -Zweig ausgewertet. Auch der Modellierungsvorgang e rfolgt dann nicht mehr im Top -Down -Verfahren so ndern in einer Mischung aus Top -Down und Bottom -UpStrategie . Neben den bedingten Ausdrücken enthält das genannte Beispiel a ls weitere Schwierigkeit Datenvertei ler. Durch ihre Verwendung lässt sich ein Datenf lussdiagramm übersichtlicher gestalten, da identische Teilterme nur einmal aufgeführt werden müssen. Gleichzeitig wird dadurch allerdings der streng funktionale Pfad verlassen und es werden Strukturen eingeführt, die es erlauben das Resultat eines Teilterm s mehrfach zu verwenden. Datenverteiler sind durchaus mit Termbezeichnern, wie sie auch in manchen funktionalen Programmiersprachen zur Vereinfachung verwendet werden, vergleichbar. Deutlich wird dies eMehrfachverwe ndung dann, wenn die Datenflussdiagramme in eine Textdarstellung transformiert werden: die Datenverteiler müssen dann aufgelöst und die entsprechenden Teilterme mehrfach aufgeführt werden. Es sollte allerdings erwähnt werden, dass der Datenverteiler für ein Datenflussdi agramm nicht notwendig ist, sondern das Datenflussdiagramm lediglich übersichtlicher macht. Aus diesem Grund wird in dem Lernzielgraph in Abb. 5.7 nur eine schwache Vo rrangrelation verwendet. Das in Abbildung 5.6 angegebene Beispiel (siehe Anhang B.3.6) wie auch die Aufgaben in den Anhängen B.3.7 und B.3.8 , die im Folgenden analysiert werden, waren Teil der oben e r-5.2 Lernzielanalyse ausgewählter Prüfungsaufgaben 85 wähnten Prüfungsaufgabe in der 9. Jahrgangsstufe .Es handelt sich in allen drei Fällen um Pro bleme, bei denen Datenflussdiagramme mit bedingten Ausdrücken eine wichtige R olle spielten. Tabelle 5.5 charakterisiert die expliziten Lernziele der drei Prüfung saufgaben. Tabelle 5.5 Explizite Lernziele der Prüfungsaufgaben B.3.6, B.3.7 und B.3.8 Aufgabe Explizites Lernziel Kognitive Prozessd imension B.3.6 Vervollständigen ein es strukturell vorgegebenen Datenflussdi agramms; Thematischer Hintergrund: Berechnung von Telegram mpreisen.≥3 B.3.7 a) Umwandeln eines Datenflussdiagramms in den entsprechenden Term ; Thematischer Hintergrund: Schaltjahresregel unter Verwe ndung der gregorianischen Regel2 B.3.7 b), c) Interpretieren von Datenflussdiagrammen: Exemplarische Auswe rtung und Int erpretation in natürlicher Sprache2 B.3.8 Selbständiges Erstellen eines Datenflussdiagramms ; Thematischer Hintergrund: Definition des Alters von Jugendlichen≥3 Zusätzlich zu den aus den vorhergehenden Aufgaben bekannten impliziten Lernziele verdeu tlichen diese Ausführungen, dass das Verstehen bzw. das Erstellen von Datenflussdiagrammen, die bedingte Ausdrücke enthalten, einige Lernziele impliziert , die erst bei näherer Betrac htung auffallen. Diese Lernziele sind in Tabelle 5.6. im Fall einer Aufgabe, d ie das Erstellen eines en tsprechenden Datenflussdiagramms verlangt, aufgeführt. Tabelle 5.6 Zusätzliche implizite Lernziel beiPrüfungsaufgaben mit bedingten Ausdrücken Nr Lernziel Kategorie 59 Funktionen über Wahrheitswerten mindestens beherrschen 2–1–3 60 Konzept der polymorphe Funktion mindestens beherrschen 2–1–3 61 Konzept der s trikte n bzw. n ichtstrikte n Auswertung mindestens beherrschen B≥3 62 Top-Down / Bottom –Up Strategie mindestens beherrschen C≥3 63 Konzept der WENN -Funktio nmindestens beherrschen 2–1–3 64 Konzept des Datenverteilers mindestens beherrschen 2–1–3 Den L ernzielgraph zeigt Abbildung 5.7 .Neben den bereits diskutierten impliziten Lernzielen ist hier das übergeordnete implizite Lernziel „Konzept der pol ymorphen Funktionen beher rschen“ aufgenommen. Es betont eine Besonderheit der „Wenn“ -Funktion, die den Schülern bi sher im Informatikunterricht nicht begegnet ist: Der Datentyp des Ergebnisses ist bei der „Wenn“ -Funktion nicht vorgegeben, sondern er richtet sich nach dem Datentyp der Ergebnis se des „true“ -bzw. „false“ -Zweigs und kann somit keinem bestimmten Datentyp zugeordnet we rden. Aus diesem Grunde ist im Lernzielgraph (Abb. 5.7) das Lernziel zum Datentyp nur für die nichtpolymorphen Funktionen ein übe rgeordnetes Lernziel. Das Lernziel zur „Wenn“ -Funktion weist eine Besonderheit auf: Es treten scheinbar zirkuläre Abhängigkeiten auf, denn für die „Wenn“ -Funktion ist auch die Funktionskomposition notwe ndig (ohne Funktionskomposition –zumindest in der Be dingung –macht ein bedingter Au sdruck nur wenig Sinn!). Diese zirkuläre Abhängigkeit kann jedoch leicht aufgelöst werden, indem ein86 5 Lernziele funktionaler Modellierung in didaktischer Reflexion Lehrpfad gewählt wird, bei dem für das jeweils nächste Lernziel alle vorausgesetzten Lernziele erreicht wurden. Konkret bed eutet dies, dass etwa zuerst die Lernziele zu Funktionen über el ementaren Datentypen (Zahlen, Wahrheitswerten, …) angestrebt werden, anschließend die Fun ktionskomposition über diesen Funktionen und erst dann die „Wenn“ -Funktion. Implizite Lernziele 3:Datentyp 2–1–3:Funktion (mehrstellig ) Polymorphe Funktion2–1–3:Sorten Ganze Zahlen >3:Datenflussdiagramm vervollständigen /erstellen Aufgabe B .3.6>1:Relation Fliekommazahlen Funktionen über ganze ZahlenFunktionen über Fließkommazahlen Wahrheitswert Funktionen über WahrheitswertenWENN -Funktion Aufgabe B .3.8>2:Striktheit >2:Top-Down / Bottom -Up 2–1–3: Datenverteiler>2:Funktionskomposition >2:Funktionskomposition unter Verwendung von DFD Abb. 5.7 Lernzielgraph für Aufgabenstellungen zur Erstellung / Bearbeitung von Datenflussdi agrammen . Neben der „Wenn“ -Funktion und dem Datenverteiler kommen im Vergleich zu bisher anal ysierten Aufgaben Lernziele zum booleschen Datentyp, zum Konzept der Striktheit, zum Date nverteiler und zur Bottom -Up bzw. Top -Down Strategie hinzu. Mit Ausnahme des Datenverte ilers sind für Aufgabenstellungen, die das Erstellen komplexer Datenflussdiagramme mit „Wenn“ -Funktionen erfordern all diese Lernziele notwe ndig. 5.2.3Synthese der Lernzielg raphen Die bisherige Diskussion funktionaler Modellierung bezog sich auf die Lernziele einzelner Aufga ben.Wie öfters erwähnt, stellen derartige Analysen nur ein en ersten Schritt dar; überg eordnetes Ziel ist die Beschreibung der Lernz iele einer gesamten Do mäne, in diesem Kapitel di e Lernziele der funktionalen Modellierung. Dazu werden im Folgenden die einzelnen Graphen zusammengeführt. Sicherlich kann auch dies noch keine erschöpfende Beschreibung der Ler nziele funktionalen Modellierens sein; umfangreichere Analysen sind notwendig um das Bild zu vervollständigen. Je doch wird sicherlich ein erster ,u.U. grober Überblick gegeben , welche Lernziele in der funktionalen Modellierung in jedem Fall auftreten. Die Zusammenführung der Lernziele funktionaler Modellie rung –soweit sie in den bisher diskutierten Aufgaben in Erscheinung traten –ergibt sich aus der Synthese der Graphen in den Abbildu ngen5.2,5.3, 5.4, 5.5 und 5.7. Der Graph 5.8 zeigt das R esultat. In diesem Graph wird nur in einzelnen Fällen vom 2 –1–3 Muster Gebrauch gemacht. U rsache dafür ist, dass im Lernzielgraph von Abb. 5.8 zwei Repräsentations formen funktionaler5.2 Lernzielanalyse ausgewählter Prüfungsaufgaben 87 Modelle , nämlich die textuelle Darstellung und die Darstellung mithilfe von Datenflussdi agrammen möglich sind. Da sich bei mehreren R epräsentationstechniken der Lernzielgraph i nnerhalb des 2 –1–3 Muster verzweigt ,müss en die betroffenen Muster in ihre Bestandteile au fgelöst werden. Der Aufbau des Lernzielgraphen ist geprägt von den Lernzielen zum Datentyp im oberen Teil, der Funktio nskomposition in der Mitte und den prozeduralen Lernzielen im unteren Teil. Das Lernziel zum Funktionsbegriff ist hierbei nur dann Teillernziel des Lernziels zum Datentyp, wenn die entsprechende Funktion diesem zugeordnet werden kann. Für die polymorphe „Wenn“ -Funktion ist dies beispielsweise nicht der Fall. Teillernziele des Lernziels zum Datentyp sind in bekannter Weise die Lernziele zu Sorten, und zugehörigen Funktionen zunächst auf der kognitiven Stufe des Verstehens . Der Übersicht halber wurden von d en Teillernzielen zu Sorten und mehrstelligen Funktionen jeweils nur die wichtigsten aufgeführt; das sind vor allem die zu den Sorten Zahl, Zeichen und Wahrheitswert gehörenden Funktionen. Unterhalb der Lernziele zum Funktionsbegriff auf kognitiver Stuf e 2, spaltet sich der Graph in zwei unterschiedliche Lehrpfade auf: Im linken Tei l stehen die Lernziele für die auf textue llen Elementen basierende Repräsentation funktionaler Modelle auf der rechten Seite ist die Re präsentationstechnik zu sehen, die auf D atenflussdiagrammen basiert. In bekannter Weise besteht zwischen den Repräsentationstechniken und dem Lernziel zum Funktionsbegriff (kognitive Stufe 2)jeweils eine schwache (didaktisch) Vorrangrelation. Sind beide Lernziele erreicht, kann das Lernziel zum Funktionsbegriff auf einer höheren kognitiven Stufe (>2) erreicht werden. O ffensich tlich manifestieren sich die beiden Lehrwege auch in entsprechenden Teillernzielen zur Funktionskomp osition: Links in Lernzielen zur Funktionskomposition in textueller Dars tellung und rechts in Lernzielen zur Funktionskomposition mithilfe von Datenflussdiagrammen. Die textuelle Darstellungsform enthält hierbei diespezielle nTeillernziele zur Sequenz und zur Re alisierung der Iteration mithilfe von Tabellenkalkulationssysteme n,die in enger Beziehung zu Lernzielen aus Kapitel 3 (Alg orithmik) stehen; darauf wird unten näher eingegangen. Prozedurale Lernziele, wie das Erstellen einer Iterationsstruktur, das Transformieren unte rschiedlicher Repräsentationen oder das Entwerfen e ines funktionalen Modells sind wie oben begründet von den ko nzeptuellen Lernzielen stark abhängig. Von besonderer Bedeutung ist, dass der Informatikunterricht nur für einen Teil der Lernziele in Abbildung 5.8 verantwortlich ist. Insbesondere einige der im linken Teil dieser Abbildung angegebenen Lernziele können grundsätzlich dem Mathematikunterricht zugeordnet werden: So sollte es für die Schüler auch ohne Informatikunterricht bereits möglich sein, für ein Problem den Lösungsterm zu formulieren, wenn die L ösung mithilfe eines Terms über gängigen Date ntypen --beispielsweise Zahlen --in Infixnotation beschrieben werden kann. Demzufolge könnte das Teillernziel zur Funktionskomposition in textueller Repräsentation und Infixnotation grun dsätzlich vorausgesetzt werden; darüber hinaus natürlich auch alle impliziten Lernziele, die für dieses Lernziel notwendig sind mit Ausnahme der Lernzielgruppe zu Zellbezügen in Tabelle nkalkulationsystemen. Die Zahl der Lernziele, für die die Informatik „verantwortlich“ ist, red uziert sich somit deutlich: Im Informatikunterricht kommen die Lernziele zu speziellen Funkt ionen wie die Funktionen über Zeichenketten und Wahrheitswerten, die „Wenn“ -Funktion, sowie die Methode der Repräsentation funktionaler Modelle durch Datenflussd iagramme und die Darstellung von Termen in Praefixnotation hinzu. Darüber hinaus ist auch die Realisierung iterativer Ablä ufe mit Tabellenkalkulationssystemen ein spezifisch informatisches Thema. Auf diesen mathematisch -informatischen Gesichtspunkt wird bei der unten angegebenen Analyse von Prüfungsergebnissen nochmals detaillierter eingega ngen.88 5 Lernziele funktionaler Modellierung in didaktischer Reflexion 2–1–3:Datentyp >2:Funktionskomposition >2:Funktionskomposition in textueller Repräsentation2:Mehrstellige FunktionPolymorphe Funktion2–1–3:Sorten :Zahlen , Wahrheitswerte ,Zeichen1:Relation WENN -Funktion2:Striktheit 2–1–3: Datenverteiler>2:Funktionskomposition unter Verwendung von DFD >3:Datenflussdiagramm vervollständigen /erstellen>2:Top-Down / Bottom -Up >2:Iterationstruktur>2:Sequenz von Termen>2:Terme bei Tabellenkalkulationen >2:Iteration auf Tabellenkalkulationen >2:Iterationsanfang >2:Iterationsfortsetzung2–1–3:Zellbezüge bei TabellenkalkulationenFunktionen über Sorten :Zahlen ;Wahrheitswerte ; Zeichen 1:Textuelle Repräsentation von Funktionen (Prae und Infixnotation )1:DFD zur Repräsentation von Funktionen >2:Mehrstellige Funktion >2:Mehrstellige Funktion in textueller Repräsentation>2:Mehrstellige Funktion unter Verwendung von DFD 2:Repräsentationswechsel funkionaler Modelle Abb. 5.8 Lernzielgraph funktionaler Modellierung in Jahrgangsstufe 9 . 5.3Lernzielerfolgsanalyse Von besonderem Interesse sind die Leistungen de r Schüler in den hier analysierten Prüfung saufgaben. Wie bereits erwähnt ,wurden die Prüfungsaufgaben in drei Teilen von Oktober 2007 bis Januar 2008 in zwei Klassen der Jahrgangstufe 9 des Carl -Orff-Gymnasiums (Unterschlei ßheim bei München) durchgeführt. Insgesamt nahmen 20 Schülerinnen und 25 Schüler teil. Die folgende Diskussion erhebt damit selbstverständlich nicht den Anspruch einer repräsentativen Untersuchung; sie deutet jedoch an, in welche Richtung künftige empirische Studien gehen könnten. Beiden Leistungserhebungen, bei denen die in den Anhängen B.3.1 bis B.3.8 angegebenen und in Abschnitt 5.2 analysierten Aufgaben zu lösen waren, ergaben sich die in Tabelle 5.7 a ngegebenen Mittelwerte (der Mittelwert ist relativ zur maximalen Punktzahl dereinzelnen Au fgaben angegeben ).Die Details der Häufigkeitsverteilungen zu den einzelnen Aufgaben sind im Anhang B bei den jeweiligen Aufgaben zu finden. Daraus wird auch ersichtlich, dass es sich dabei nicht um Normalverteilungen handelt, weshalb die Berechnun g von Parametern, wie be i-5.3 Lernzielerfolgsanalyse 89 spielsweise der Standardabweichung keinen Sinn macht. Die einzelnen Verteilungen werden bei der Analyse der jeweiligen Aufgaben in die Diskussion einbezogen. Tabelle 5.7Mittlere (relative) Punktezahl bei den Prüfungen in Info rmatik in zwei Klassen der Jahrgangstufe 9 des Carl -Orff -Gymnasiums Aufgabe Explizites Lernziel Schülerinnen Schüler Insgesamt B.3.1a Darstellungswechsel bei Relationen von gr aphischer Repräsentation zur Matrixdarstellung87 % 88 % 88% B.3.1b Angab e der Umkehrrelation37 % 30 % 33% B.3.1c Darstellungswechsel bei Relationen von gr aphischer Repr. a uf Pfeildiagramm58 % 69 % 64% B.3.2 Iterationsstruktur in Termdarstellung ko nstruieren37 % 59 % 50% B.3.3 Umwandlung eines Datenflussdiagramm sin eine Termdarstellung55 % 69 % 62% B.3.4 Vervollständigen eines Datenflussdiagramms94 % 86 % 89% B.3.5a Erstellen eines Datenflussdiagramms59 % 85 % 73 % B.3.5b Erweitern eines Datenflussdiagramms36 % 53 % 46 % B.3.5c Umwandeln eines Datenfl ussdiagramms in e inen Terms / Alternativ: Entwicklung des Terms ohne Datenflussdiagramm41 % 44 % 43 % B.3.6 Vervollständigen von Datenflussdiagrammen, unter Verwendung von „Wenn “-Funktionen67 % 78 % 73 % B.3.7a Umwandlung eines Datenflussdiagramms in einen Term82 % 84 % 83 % B.3.7b Auswertung eines Datenflussdiagramms78 % 83 % 81 % B.3.7c Interpretation eines Datenflussdiagramms43 % 43 % 43% B.3.8 Konstruieren eines Datenflussdiagramms unter Verwendung von „Wenn“ -Funktionen32 % 56 % 46% Eine Lernzielerfolgsanalyse wie in Kapitel 3für die Algorithmik durchgeführt lässt sich für dieAufgaben aus B.3.1 bis B.3.8 nur für Aufgaben, die zur selben Leistungserhebung gehören , durchführen .Denn eine selbstverständliche Voraussetzung der Schnittmengenm ethode ist, dass bei der Schnittmengenbildung der Wissenstand in den beteiligten Lernzielen synchron erfasst wird und dazu müssen auch die beteiligten Aufgaben denselben Wissensstand erfassen . Die erwähnte Asynchronizität muss jedoch nicht unbedingt von N achteil sein, denn die Ve rteilung derLeistungserhebungen über einen längeren Zeitraum erlaubt es, identische Lernziel e zu verschiedenen Zeitpunkten zu evaluieren . Dadurch lassen sich die Lernfortschritte der Sch üler in derartigen Lernzielen erfassen und a nalysieren . Relationen und Zuordnungen DieLernziele der Aufgabe zu Zuordnungen und Relationen (B.3.1) beschreibt der Lernzie lgraph in Abb. 5.2. Die Angabe der Matrixdarstellung bei gegebener graphischer Repräsentat ion war dabei die erste Aufgabe, die Ers tellung der Umkehrrelation die zweite und die Ermittlung der Pfeildarstellung bei gegebener graphischer Repräsentation diedritte Teilaufgabe. Tabelle 5.7zeigt, dass grundsätzlich die erste Teilaufgabe am besten gelöst wurde, bei der Umkehrrel ation traten die größten Probleme auf. Dies zeigen auch die zugehörigen Häufigkeitsverteilungen90 5 Lernziele funktionaler Modellierung in didaktischer Reflexion aus Anhang B.3.1: Die erste Teilaufgabe konnten praktisch fast alle Schüler korrekt lösen, bei der Umkehrrelation hatten viele Schüler große Defizite, wogegen das Pfeildiag ramm ähnlich gut gelöst wurde wie die erste Teilaufgabe. Da die von den Schüler nin den einzelnen Aufgaben erreichten Punktezahlen vorhanden sind und Synchronizität gewährleistet ist , lässt sich für diese drei Aufgaben eine Lernzielerfolgsan alysewie in Ka pitel 3 durchführen. Dabei ergeben sich folgende Result ate: 73 % der Schüler waren in Teilaufgabe a) nicht jedoch in Teilaufgabe b) erfolgreich ,11 % der Schüler waren in beiden Teilaufgaben erfolgreich und nur 2 % waren in Teilaufgabe b) nicht jedoch in T eilaufgabe a) erfolgreich. 53 % der Schüler waren in Teilaufgabe a) und Teilaufgabe c) erfolgreich, 31 % in Teilaufg abe a) nicht jedoch in Teilaufgabe c) und kein Schüler war in Teilaufgabe c) erfolgreich nicht jedoch in Teilaufgabe a) und 13 % waren in ke iner der beiden Aufgaben erfolgreich . Man erkennt somit, dass die meisten Schüler das Konzept der Relation grundsätzlich verstanden haben , das Konzept der Umkehrrelation wurde dagegen von maximal 13% der Schüler versta nden. Die Tatsache, dass jedoch fast kein Schüler in Teilaufgabe b) erfolgreich und in Teilaufg abe a) nicht erfolgreich war, deutet darauf hin, dass die Vorrangsbeziehung zwischen dem Ko nzept der Relation und Umkehrrelation korrekt ist. Erstaunlich ist ebenfalls, dass verhältnismäßig wenige Schüler das Pfeildiagramm angeben konnten. Gemäß der Schnittmengenmethode kann dies an Defiziten bei der Repräsentation von Relationen durch Pfeildiagramme oder aber am expliziten Lernziel liegen. Iterationsstrukturen Die Aufgabe zur Iterationsstruktur zä hlt zu denjenigen Aufgaben, die innerhalb des ersten Teils der Leistungserhebung am S chlechtesten gelöst wurde. Dabei vermittelt die Häufigkeit sverteilung (Anhang B.3.2) ein detailliertes Bild, als die einfache Angabe der Mittelwerte in T abelle 5.7: Es han delt sich um eine Verteilung, bei der hohe Häufigkeiten an den Rändern der Punkt eskala auftreten, d.h. die meisten Schüler haben entweder sehr wenige oder sehr viele Punkte. Insbesondere ist auffällig, dass bei den Mädchen ein großer Teil niedrige Punktzah len hat. Betrachtet man den Lernzielgraphen, so liegt die Frage nahe , ob dies an mangelnder Ferti gkeit beim Umgang mit Termen oder an Defiziten beim Aufstellen des Iterationsschemas liegt. Da die Aufgabe jedoch innerhalb der 1. Stegreifaufgabe thematisc hsingulär ist und der Ve rgleich mit den Aufgaben zu Zuordnungen nicht zielführend ist, kann man rein aufgrund der Leistungen der Schüler keine Aussage über den Erfolg in bestimmten Lernzielen machen. Es ist allerdings erstaunlich, dass die relativ einfac he Umsetzung von Iterationsprozessen bei Tabe llenkalkulationssystemen den Schülern doch beträchtliche Schwierigkeiten zu bereiten scheint. Sicherlich sind für eine allgemeine Aussage breit angelegte Studien erforderlich, es stellt sich jedoch die Frage, ob in den einschlägigen Lehrbüchern die Iteration nicht etwas fundierter b ehandelt we rden sollte ([Br07], [En07], [Hu07a]). Umwandeln von Datenflussdiagrammen in Terme Mehrere Aufgaben thematisierten das Umwandeln von Datenflussdiagrammen in Terme (B.3.3, B.3.5c, B.3.7a). Die Aufgabe B.3.5c ist mit den beiden anderen jedoch nicht vergleic hbar, da diese entweder ein erfolgreiches Bearbeiten der beiden vorhergehenden Aufgaben (B.3.5a und B.3.5b) erforder te(Erstellen der zugehörigen Datenflussdiagramme) oder, falls di e-5.3 Lernzielerfolgsanalyse 91 se Aufgaben nicht gelöst wurden, die direkte Modellierung des Terms (d.h. ohne Datenflussdi agramm). In letzteren Fall würden sich für B.3.5c völ lig ande re implizite Lernziele ergeben. Deshalb wird diese Aufgabe nicht in den Vergleich einbezogen. Vergleicht man die Resultate in B.3.3 und B.3.7a, so wird deutlich, dass die Schüler bei di esem Aufgabentyp deutliche Fortschritte gemacht haben; die mittlere Punktezahl e rhöht sich um 15–20 %. Auch die Häufigkeitsverteilungen in Anhang B unterstreiche n dies: Das Maximum derHäufigkeit befindet sich bei B.3.7 bei hohen Punktezahlen, während die Verteilung bei 3.3. noch zwei Maxima (eines bei mittleren Punktzahlen und eines am rechten Rand) aufweist. Wie der Lernzielgraph 5.4zeigt, erfordert d ie Umwandl ung von Datenflussdiagrammen in Terme bei den konzeptuellen Lernzielen höchstens die Stufe 2 (Verständnis). Man kann somit davon ausgehen, dass am Ende des Lehrplanabschnitts zur funktionalen Modellierung die Ler nziele in Abb. 5.4 von einem Großteil der Sc hüler erreicht wurde n. Wie die folgenden Abschnitte zeigen, sagt dies jedoch noch nichts darüber aus, ob die Schüler aktiv mit den Konzepten arbe iten können (kogn itive Stufe 3 und höher). Verständnis von Datenflussdiagrammen Erstaunlich sind die Resultate zum Verständnis von Datenflussdiagrammen in den Aufgaben B.3.7b und B.3.7c (Schaltjahralgorithmus). Hier sollten für bestimmte Eingangsparameter die Ergebnisse ermittelt (B.3.7b) undanschließend die Semantik des Datenflussdiagramms in natü rlicher Sprache beschrieben werden (B.3.7c) .Eine einfache Auswertung der Leistungen in B.3.7b liefert dabei auf den ersten Blick ein zufrieden stellendes Bild: Ca. 88 % der Schüler erreichten mindestens 55 % der maximal erreichbaren Punktezahl und hatten somit nach der i n Kapitel 3 vereinbarten Definition das Lernziel erreicht. Eine detaillierte Betrachtung vermi ttelt jedoch ein anderes Bild: Um 75% der maximalen Punkte in Aufgabe 3.7b zu erreichen genügt die einfache julianische Schaltjahresregel. Ein echter Durchlauf du rch das Datenflussdi agramm ist nur bei einer der vier Fragen notwendig. Modifiziert man daher die Evaluation und ermittelt wie viele Schüler mehr als 75 % der Punkte erreicht haben, so stellt sich heraus, dass nur 29 % der Schüler, das Datenflussdiagramm w irklich verstanden (siehe Häufigkeitsverteilung in B.3.7) . Dies zeigt, dass das Kriterium ab welcher Punktezahl man davon ausgehen kann, dass alle impliziten Lernziele der jeweils zugrunde liegenden Aufgabe erreicht wurden, von Fall zu Fall ausgewählt we rdensollte . Der modifizierte Wert von 29 % passt zum Ergebnis der Evaluation der folgenden Aufgabe B.3.7c: Nur 20 % der Schüler konnten die Semantik des Datenflussdiagramms in natürl icher Sprache beschreiben. Obwohl die hier vorgestellte Schülerpopul ation in keiner Weise als repräsentativ anges ehen werden kann, werfen diese Ergebnisse mehrere Fragen auf, deren vertiefte Untersuchung für den derzeitigen Informatikunterricht von Bedeutung wäre: -Wie hilfreich sind Repräsentationen von Algorithmen unter V erwendung von Date nflussdiagramme n? -Welche Beziehungen bestehen zwischen den formalen Darstellungen von Algorithmen (etwa Datenflussdiagrammen) und dem individuellen mentalen Modell, dass ein Schüler von diesem Algorithmus hat . Hintergrund der zweiten Problematik bildet die Auswertung von B.3.7c, die zeigt, dass Sch üler große Probleme haben, die formale Darstellung eines Algorithmus in ihre eigene natürliche Sprache zu übertragen.92 5 Lernziele funktionaler Modellierung in didaktischer Reflexion Erstellen von Datenflussdiagrammen Die Aufgaben zum Vervollständigen od er Erstellen von Datenflussdiagrammen sind unter den Aufgaben zur funktionalen Modellierung die komplexesten. Konkret handelt es sich um die Aufgaben B.3.4, B.3.5a) + b), B.3.6 sowie B.3.8. Betrachten wir zunächst die beiden Aufgaben B.3.4 (Cäsarchiffrie rung) und B.3.5 a) + c) (Zinsberechnungen über zwei Jahre) ; bei beiden Aufgaben war kein bedingter Ausdruck no twendig. Die Aufgabe B.3.4 war eine reine Wiederholungsaufgabe und die Schüler mussten das Diagramm, dessen geometrische Struktur vorgegeben war, lediglich ausfüllen. Es handelte sich also um eine Aufgabe der kognitiven Stufe 1 (Erinnern) ; insofern ist es verständlich, dass bei der Häufigkeitsverteilung in B.3.4 das Maximum am rechten Rand der Punkteskala liegt . Bei der Aufgabe 3.5 war keine Datenf lussstruktur angegeben ,die Schüler hatten jedoch ähnliche Probleme bereits gelöst. Man hat es hier somit (siehe Graph in Abb. 5.5) mit Lernzielen der Stufe 3 oder höher zu tun. Insofern wäre zu erwarten , dass die mittleren Punktezahlen (T abelle 5.6) bei B .3.5 niedriger sind als bei B.3.4. Allerdings ist es auffällig , dass dies nicht bei a llen Schülergruppen der Fall ist: Während die Schülerinnen bei B.3.5a eine deutlich niedrigere mittlere Punktezahl erreichten, hatten die Schüler bei dieser Aufgabe etwa d ieselbe Punktezahl wie bei B.3.4. Auch die zugehörigen Häufigkeitsverteilungen unterstützen diese Aussage: Bei den Schülern liegt das Maximum nach wie vor am rechten Skalenrand, während bei den Schül erinnen in einfachster Näherung fast eine Gleichverteilung zu beobachten ist. Bei der Folgeau fgabe (B.3.5b), bei der das Datenflussdiagramm erweitert werden musste, sank die mittlere Punktezahl gleichmäßig in beiden Teilgruppen. Das anschließende Umwandeln der Datenflus sdiagramme in einen Term wurde von Schülerinnen und Schülern in vergleichbarer We ise gelöst. Auch hier deutet sich als wieder eine Problematik an, die auch aus der Lehre von Informatik an Hochschulen bekannt ist [Sc04a]: Schülerinnen haben mit Pr oblemen, bei denen es um die Konzeption algorithmischer Abläufe geht ,größere Schwierigkeiten als Schüler. Dies scheint sowohl für graphische Modelle (siehe obige Aufgaben) als auch für textuelle Repräsentationen zu gelten ([Sc04a]). Die Aufgaben B.3.6 und B.3.8 erforderten das Vervollständigen bzw. aktive Erstellen von Datenflussdiagrammen, die bedingte Funktionen enth alten. Die um ca. 20 –30 % höheren Punktezahlen in B.3.6 lassen sich darauf zurückführen, dass das Datenflussdiagramm in B.3.6 strukturell vorgegeben war . Dadurch waren die Anzahl der Funktionen sowie die Zahl ihrer A rgumente vorgegeben. Insbesondere werden dadurch bedingte Ausdrücke leicht erkennbar. Die Hauptschwierigkeit der Aufgabe lag in der Modellierung ganzzahliger Berechnungsabläufe. Letzteres wurde von den meisten Schülern nicht bewältigt. Die oben erwähnten Leistungsunte rschiede zwischen Schülerinnen und Schülern zeigen sich jedoch auch hier, wenn auch in abg eschwächter Form (siehe Häufigkeitsverteilung zu B.3.6). Im Gegensatz dazu m usste in Aufgabe B.3.8 das Datenflussdiagramm vollkommen eige nständig erarbeitet werden. Damit ist di ese Aufgabe in etwa vergleichbar mit den Aufgaben B.3.5 a) und B.3.5 b) .Die Lernzielgraphen der beiden Aufgaben sind mit Ausnahme der bedingten Funktion i dentisch. Die Vergleichbarkeit der beiden Aufgaben, wird auch durch die ähnlichen mittleren Punktezahlen nahegelegt, obwohl die Bedingung der Synchronizität hier nicht erfüllt ist. Allerdings lässt sich wiederum sehr gut der Lernfortschritt einzelner Schül ergruppen abl esen: 13 % der Schüler waren in beiden Aufgaben erfolgreich und haben somit das Konzept der bedingten Funktion in ihre Fertigkeiten der Datenmodellierung integrieren können. E rstaunliche 15 % der Schüler waren in B.3.5b) nicht erfolgreich jedo ch in B.3.8. Das lässt darauf schließen, dass letz tere im Zeitraum zwischen den beiden Prüfungen ihre Defizite aufgeholt haben und darüber hinaus das Konzept der bedingten Funktion verstanden haben. Andererseits haben 11 % der Schüler die Aufgabe B.3.5b zu friedenstellend gelöst, nicht jedoch B.3.8; diese Schülergru p-5.3 Lernzielerfolgsanalyse 93 peist somit nur zum Erstellen verhältnismäßig einfacher Datenflussdiagramme ohne bedingte Ausdrücke imstande. Allerdings haben 53 % der Schüler keine der beiden Aufgaben B.3.5 und B.3.8 zufriede nstellend gelöst. Das heißt, dass die Mehrzahl der Schüler nicht imstande ist, A bläufe durch Datenflussdiagramme selbständig zu strukturieren. Auffäl lig sind die u nterschied lichen Punktezahlen von Schülerinnen und Schüler. Große D efizite im Vergleich zu S chülern haben die Schülerinnen dabei insbesondere bei den Aufgaben zum selbständigen Erstellen von Iterationsstrukturen (B.3.2) und Datenflussdiagramme (B.3.5a) ,B.3.5b), B.3.6 und B.3.8) .Insgesamt sind dies stets Aufgaben, bei denen ein Ablauf textuell oder graphisch modelliert werden sollte. Sicherlich sind für allgemeine Aussagen breitere U ntersuchungen notwendig, jedoch zeigt sich hierleider ein grundsätzliches Problem, das sich bis in den Bereich der Hochschullehre erstreckt ([Sc 04a]): Auch dort zeig te sich ,dass weibliche Studierende bei Fragestellungen ,die die Ausarbeitung algorithmischer Ablaufstrukturen erfo rdern (und Datenflussdiagramme gehören ebenfalls zu dieser Klasse), offenbar größere Schwi erigkeiten haben, als ihre männlichen Kommilitonen. Ein anderes Bild ergibt sich dagegen bei Aufgaben zur Interpretation von Datenflussdiagrammen; hier konnten keine geschlechtsspezif ischen Unterschiede festgestellt werden. Von besonderem Interesse ist der Vergleich dieser Resultate mit Analy sen im inform atischen Anfangsunterricht in den Jahrgangsstu fen 6/7 [Fr01]: Es zeigt sich, dass dort noch keine geschlechtsspezifischen Unterschiede auftreten. Untersuchungen die geschlechtsspezifische Ve rhaltensmuster in ihrer zeitlichen Entwicklung beschreiben und auf ihre Ursachen untersuchen wäre nalso dringend erfo rderlich.94 5 Lernziele funktionaler Modellierung in didaktischer Reflexion6Modellierungs paradigmen im Vergleich Einleitende Bemerkung Die bisherigen Ausführungen deuten bereits an, dass die Lernziele funktionaler Modellierung – unabhängig von der Repräsentationstechnik (Datenflussdiagramme oder textuelle Darstellung der Terme) –auffallende Querbezüge zu Algorithmik und objektorientierter Modellierung au fweisen. Diese Bezüge sollen im Weiteren näher diskutiert werden und damit die eingangs des vorhergehenden Kapitels erwähnte „Längsanalyse“ einer Begrifflichkeit über mehrer Jahr gang sstufen lernzieltheoretisch analysiert werden . 6.1Funktionale und zuweisungsorientierte Modellierung von Algorithmen Teile des folgenden Abschnitts wurden vom Autor Arbeit bereits in [Sc05] publiziert; Im Folgenden werden die dort genannten Aspekte, die z.T. bereits in Abschnitt 5.2 in Beispielen angesprochen wurden, aufgegriffen und vertieft diskutiert. (Es sei an dieser Stelle nochmals b etont, dass hier unter funktionale Modellierung zunächst nur nichtrekursive funktionale Modelle verst anden werden .) Beginnen wir die Diskussion mit den elementarsten Strukturen der in Kapitel 3 diskutierten Algorithmik (siehe etwa Abb. 3.5): den elementaren Anweisungen. In dem dort beschriebenen Teilbereich der Algorithmik bildeten einfache Handlungs -und Bewegungsan weisungen eines Roboters die elementaren Anweisungen. Es stellt sich die Frage ob –und wenn ja welche –Begrifflichkeiten in der funktionalen Modellierung die Rolle d ieser elementaren Anweisungen übernehmen. Betrachtet man einen beliebigen Term (in textu eller Darstellung oder als Date nflussdiagramm), so ist off ensichtlich, dass dafür nur die Funktionsapplikation oder die einzelnen Daten in Frage kommen. Während jedoch in der Algorithmik aus Kapitel 3 die elementare A nweisung nur einige wenige atomare Akti onen umfasste, erfordert das Lernziel zum Funktion sbegriff je nach kognitiver Stufe eine mehr oder weniger große Zahl von anderen Lernzielen (siehe Abb. 5.8): Lernziele zu den Begriffen Relation und Striktheit, Lernziele zu verschied enen Sorten und den d azugehörigen Funktionen und nicht zuletzt Lernziele zu verschiedenen Repräsentationstechniken des Funktionsbegriffs : Graphisch, mithilfe von Datenflussdiagra mmen oder textuell . Als elementar kann deshalb das Lernziel zum Funktionsbegriff keinesfalls bezeic hnet werden; es entspricht jedoch dem Lernziel der elementaren Anweisung in der Alg orithmik der Unterstufe und verdeutlicht somit in anschaulicher Weise, wie sich vergleichbare Begrifflichkeiten im Laufe des Informatikunterrichts entwickeln und an kognitiv em Anspruch gewi nnen. Es sollte jedoch betont werden, dass zwischen den elementaren An weisungen in Kap. 3 und der Funktions applikation, die hier eine analoge Rolle spielt, keine der hier verwendeten Lernzielbeziehungen besteht, es handelt sich lediglich um eine An alogie. Auch andere Lernziele, wie das Lernziel zur Bedingung oder das Lernziel zur Alternative aus Kapitel 3 weisen offensichtliche Entsprechungen in der funktionalen Modellierung auf: Die booleschen Funktionen und die „Wenn“ -Funktion. Jedoch erke nnt man auch hier bedeutende Unterschiede: Während in Kapitel 3 Bedingung und Alternative als separate Lernzielgruppen aufgefasst werden konnten, sind sie nun als Teillernziele des Funktionsbegriffs einzustufen und somit „nur“ Spezialfälle des Lernziels zu mFunktionsbegriffs. Insbesondere geht das Lernziel96 6Modellierungsparadigmen im Vergleich zur Bedingung im Lernziel zu Booleschen Funktionen auf und ist nicht mehr –wie in Kap. 3 – abhängig von elementaren Anwe isungen. Während das Lernziel zur Bedingung (aus Kap. 3) unter Umständen als Teille rnziel Bool escher Funktionen interpretiert werden kann, bestehen zwischen dem Lernziel zur Alternative aus Abb. 3.5 und dem Lernziel zur „Wenn“ -Funktion (Abb. 5.8) konzeptuelle Unterschiede. Beide Strukturen sind zwar „alternativ“ in dem Sinne, dass in Ab hängigkeit vom Wert einer Bedingung genau e ine der beiden Alternativen ausgewählt wird, weshalb sowohl in Abb. 3.5 als auch in Abb. 5.8 eine Vorrangrelation zu Bedingungen, bzw. Booleschen Funktionen existiert. Daneben gibt es jedoch subtile Unterschiede: Bei der Alternative handelt es sich um eine A nweisung, die den Z ustand des Objekts (in diesem Fall den Zustand des Roboters) ändert, bei der „Wenn“ -Funktion jedoch um einen bedingten Ausdruck, bei dem das Funktionsresultat von der Bedingung abhängt und der aufrufenden Funktion zurückgegeben wird. Der Zustandsbegriff, der in Kapitel 3 (wie auch in den entsprechenden Schulbüchern) intuitiv und ohne explizite Di skussion verwe ndet wird, spielt bei der funktionalen Modellierung und insbesondere bei der „Wenn“ -Funktion evidenterweise keine Rolle. Als zusätzliche Problematik kommt bei der „Wenn“ -Funktion die nichtstrikte Auswertungsstrategie hinzu, die eine intuitive Top -Down Modellierung von Date nflussdiagrammen verhindert. Die Iteration (hier eingeschränkt auf d en Fall fest vorgegebener Durchlaufszahl) als i. A. zuweisungsorientierte Kontrollstruktur tritt in der funktionalen Modellierung zwar nicht explizit auf, sie lässt sich jedoch –wie in 5.2 an Beispielen erläutert –durch geeignete Termsequenzen realisiere n. Im Gegensatz dazu hatten die Schüler in der Algorithmik für die Wiederholung eine feste Kontrollstruktur zur Verfügung, in die sie die notwendigen Bestandteile „eintragen kon nten“. Nun müssen sie die Iteration „von Hand“ durch entsprechende Sequenzen v on Termen imitieren, was offensichtlich ein deutlich fundierteres Verständnis iterativer Abläufe voraussetzt. Ein weiterer bedeutender Gesichtspunkt kommt hinzu, wenn man auf Rechenblättern eine Termsequenz zur Berechnung iterativer Vorgänge zu einem einzi gen Term –d.h. zu einem „Programm“ –zusammenfasst; als Strategie ist hierbei die Übertragung in ein entsprechendes Datenflussdiagramm mit anschließender Umwandlung in eine textuelle Termdarstellung sin nvoll (siehe etw [Sc05]). Dabei wird jedoch deutlich, dass auch eine Termsequenz nicht a nderes als eine spezielle Repräsentation von Funktionskompositionen ist. Deshalb muss die Terms equenz und speziell die Iteration auf Rechenblättern, als Spezialfall des Lernziels zur Funktion skomposition gesehen werden. D ieser Aspekt kann innerhalb der funktionalen Modellierung in der 9. Jahrgangsstufe nicht als Nebensache angesehen werden. Vielmehr ist die Zusammenfa ssung ein zelner Terme zu einer komplexen Termstruktur für effiziente funktionale Modelle en tscheidend. Wie bereits an einigen Stellen erwähnt ,kann das Lernziel zur Funktionskomposition als Tei llernziel des Lernziels zur Schachtelung angesehen werden. Dies bedeutet jedoch aufgrund der Transitivität der Teilmengenbeziehung, dass auch das Lernziel zur Sequenz ei n Teillernziel der Schachtelung ist. Wir können somit über den Umweg der funktionalen Modellierung den Ler nzielgraph aus Kapitel 3 (Abb. 3.5) modifizieren, und die Sequenz und somit auch die Wiederh olung als Tei llernziele der Schachtelung erkennen. Der kon sequente Vergleich der aus der Algorithmik bekannten Werkzeuge mit denen der funktionalen Modellierung könnte den Schülern somit bereits in einer sehr frühen Phase des I nformatikunterrichts verdeutlichen, dass unterschiedliche „Programmierparadigmen“ vergl eichbare Werkzeuge haben, und es in jedem Paradigma nur eine sehr begrenzte Zahl von Werkze ugen gibt. Insbesondere erkennen die Schüler, obwohl rekursive funktionale Strukturen noch nicht diskutiert wurden, dass die funktionale Modellierung eine geringere Anzahl von „Ko ntrollstrukturen“ aufweist –dieFunktions applikation und die Funktionskomposition –als die A l-6.2 Objektorient ierte und funktionale Modellierung 97 gorithmik. Andererseits verdeutlichen die Lernzielgraphen in Abb. 3.5 und 5.8 dass die Vo rrangr elationen zwischen konzeptuell vergleichbaren Lernzi elen (z.B. Alternative und „Wenn“ Funktion) unte rschiedlich sein können und zu sehr verschiedenen Lernzielgraphen führen. Aus diesen Gründen ist es im Gegensatz zu Abbildung 4.8 , wo objektorientierte und imper ative Modellierungstechnik graphisch zusammeng efasst wurden, schwer die s für die Lernzielgr aphen der imperativen und der funktionalen Ablaufmodellierung zu tun. Denn diese beiden Gr aphen stellen unterschiedliche Modellierungen für dieselben Konzepte dar, sie liegen gewissermaßen übereinander und senkr echt zu den zweidimensionalen Lernzielgraphen ergeben sich orthogonale Stränge, die gleichartige Konzepte in jeweils unterschiedlicher Ausprägung miteinander verbinden . An dieser Stelle wird eine Verbindung zu den fundamentalen Ideen deutlich, die in Kapit el 7 näher beleuchtet wird: Die fundamentalen bilden genau diese orthog onalen Stränge. 6.2Objektorientierte und funktionale Modellierung Ein a uffallend er Querbezug zwischen funktionaler und objektorientierter Modellierung wu rde bereits in 5.2 angesproch en:Der Begriff Datentyp, wie er in der funktionalen Modellierung verwendet wird und der Klassenbegriff der objektorientierten Modellierung weisen strukturell große Ähnlichkeiten auf. Gelegentlich –etwa in der objektorientierten Programmierung –werden di e beiden Begriffe auch synonym verwendet. Dennoch bestehen Unterschiede: Die Kla sse besteht aus Attributen und Methoden, ein Datentyp im funktionalen Sinne aus einer Menge von Sorten und Fun ktionen. Auch lassen sich Lernzielgraphen ,wie sie für funktion ale Modellierung (Abbildung 5.8) und objektorientierte Modellierung (Abb. 4.8) bisher angegeben wurden ,nicht ohne weiteres ve rgleichen, denn die objektorientierte Modellierung dient in der bisher diskutierten Form nur der Beschreibung von Datenstrukturen wogegen sich in der funktionale nModellierung Abläu feund Datenstrukturen beschreiben lassen , obwohl letzteres bisher nicht thematisiert wurde. Aufgrund der einheitlichen Sichtweise der funktionalen Modellierung auf Daten und Funkt ionen --Daten werde in d er funktionalen Modellierung als nullstellige Funktionen angesehen (siehe etwa [Bi92] , oder [Br03] )–könnte die Berücksichtigung von Datens trukturen in funkt ionaler Modellierung entscheidend zur Verdeutlichung der Gemeinsamkeiten von objektorie ntierter u nd funktionaler Modellierung beitragen. Dies soll im Folgenden zunächst anhand eines Beispiels vorb ereitet werden. Ein einführendes Beispiel DieDatenstruktur in Abbildung 6.1 gibt die wesentlichen Begrifflichkeiten von (nichtreku rsiven) Datenstrukture nin funktionaler und objektorientierter Modellierung an. Wir betrachten exemplarisch eine Datenstruktur zur Repräsentation von Personendaten, w obei der Name, die Adresse und das Geburtsdatum enthalten sein sollen. Die Abbildung 6.1 zeigt auf der linken Seite das Datenflussdiagramm, das diesen Datentyp für eine spezielle Pe rson wiedergibt. Zusätzlich ist darunter die zugehörige Typdefinition sowie eine exemplarische Instanziierung in einer ML -artigen Syntax angegeben. Der Vollständigkeit halber sei erwähn t, dass auch auf Rechenblättern im Allgemeinen eine Funktion namens „Datum“ zur Verfügung gestellt wird, die aus drei ganzen Zahlen einen Datumswert in der Form „Tag“, „Monat“ und „Jahr“ generiert. Die folgende Diskussion ist also prinzipiell auch für Tabe llenkalkulationssy steme von Bedeutung, obwohl diese Problematik in der hier diskutierten Jahrgangsstufe 9nicht98 6Modellierungsparadigmen im Vergleich thematisiert wird. Auf der rechten Seite der Abbildung 6.1 ist das Objekt -und Klassendi agramm der Datenstruktur a ngegeben. Ein entscheidendes D efizit funktionaler Modellierung mittels Datenflussdiagra mmen wird in Abb. 6.1 deutlich: Datenflussdiagramme haben –im Gegensatz zu textuellen Repräsentati onen funktionaler Modelle –keine Möglichkeit einen Bezeichner fest zu legen, weder einen Typb ezeich ner noch einen Bezeichner für Terme (bei objektorientierten Modellen ist dagegen der O bjektbezeichner und der Klassenbezeichner ein Selbstverständlichkeit). Dieser –auf den ersten Blick unscheinbare –Mangel ist dafür verantwortlich, dass die Beschreibun gsmöglichkeiten von Datenflussdiagrammen sehr eingeschränkt sind: Die Modellierungstechnik der Datenflus sdiagramme bietet nicht die Möglichkeit ,die Definition einer Datenstruktur graphisch zu repr äsentieren; lediglich die textuelle Darstellung, wie in Abb . 6.1 angegeben, ist möglich. Letzten dlich dürfte das Feh len einer graphischen Repräsentationstechnik fürDatentyp definiti onenauch dafür verantwortlich sein, dass in der funktionalen Modellierung rekursive Strukturen nur te xtuell, nicht aber graphisch sym bolisiert werden können; in der objektorientierten Mode llierung ist dies –man denke nur an das Komp ositum –problemlos möglich. DieAbbildung 6.1 verdeutlicht in offensichtlicher Weise die Analogien zwischen den beiden Modellierungstechniken: Das Objekt diagramm wird in der funktionalen Modellierung durch ein Datenflussdiagramm beschrieben, das ausschließlich aus Konstruktoren und Daten besteht, d.h. dem Objektdiagramm entspricht ein Konstruktorterm; ebenso ist offenbar auch jedes einzelne Objekt in funkt ionaler Modellierung ein Konstruktorterm. Genau genommen müssten auch die die Zeichenketten, die die Argumente der Konstruktoren bilden, durch Datenflussdiagramme modelliert werden; darauf wird hier jedoch aus Gründen der Übersicht verzichtet. Die Menge der Typdefinitionen (unten links in Abbildung 6.1) entspricht insgesamt dem Klassendiagramm. Dabei können die einzelnen Klassen den Typdefiniti onen zu geordnet werden. Die Beziehungen des obj ektorientierten Modells werden im funktionalen Modell durch Funktio nskompositi onen realisiert. type date =Datum of (int*int*int) type address =Addresse of (string *string *int) type person =Person of (string *address *date) let hans =Person ("Hans Meier ", Addresse ("Goetheplatz 4","München ",8100 ), Datum (25,4,1978 ));;PersonAddresse Datum„Hans Meier“25 „8100 "„München“ „Goethplatz 4"4 1978 p1:Person name =„Hans Meier“a1:Addresse Straße =„Goetheplatz 4“ Ort=„München“ PLZ =8100d1:Datum Tag=25 Monat =4 Jahr =1978 Person name :StringAddresse Straße :String Ort:String PLZ :IntegerDatum Tag:Integer Monat :Integer Jahr :Integer Abb. 6.1Repräsentation von Datenstrukturen im funktionalen und objektorientierten Modell .6.2 Objektorientierte und funktionale Modellierung 99 Man erkennt somit, dass in der funktionalen Modellierung die aus der objektorientierten M odellierung vertraute Objektebene durch Kon struktorterme und die Ebene der Klassendiagra mme durch Typdefinitionen ersetzt wird. Die Konstruktorterme unterscheiden sich dabei prinzipiell nicht von einem gewöhnlichen Funktionsterm .Die entsprechenden Lernziele müssten somit in den Lernzielen, die das Verstehen/Anwenden von Datenflussdiagrammen beschreiben, entha lten sein und sollten durch Spezialisierung bereits erwähnter Lernzielen (Abb. 5.8) repräsentierbar sein. Abbildung 6.2 zeigt einen Vergleich der Lernzielgraphen objektorientierter und funktion aler Modellierung, wobei nur die Lernziele aufgeführt sind, die für die Modellierung von Date nstrukturen relevant sind. Die Lernzielgraphen beschreiben die in Abb. 6.1 illustrierte Problem atik aus vorhandenen Datentypen bzw. Klassen, eine neue Datenstruktu r zu erstellen; beispiel sweise könnte in Anlehnung an Abbildung 6.1 die Datenstruktur „Datum“ und „Adresse“ gegeben sein und da raus die Datenstruktur der Person abgeleitet werden. 2/3:Funktionales Modellieren2–1–3:Datentyp (T) 2-1-3:Mehrstellige Funktion 2–1–3:Funktionskomposition >2:Datenstrukturen durch Konstruktorterme darstellen (T+G)2–1–3:Konstruktor 2/3:Objektorientiertes Modellieren2–1–3:Objekt (T+G) 2–1–3:Attribut2–1–3:Methode 2–1–3:Aggregation auf Objektebene (G)2–1–3:Nichtrekursive Aggregation auf Klassenebene (G)2–1–3:Klasse (G)2–1–3: Elementare Anweisung (T) >2:Klassendiagramm erstellen>2:Objektdiagramm vervollständigen /erstellen2–1–3: Kreuzprodukt 2–1–3:Funktionskomposition mit Konstruktoren (T+G)2–1–3:Funktionskomposition für Typterme (T) >2:Datentypen und zugehörige Konstruktoren definieren (T)2–1–3: Elementare Sorten Abb. 6.2 Lernzielgraphen o bjektorientierte Modellierung (links) u nd funktionale Modellierung (rechts) fürnichtrekursive Datenstrukturen . Nach den Ausführungen in Kapitel 4 istder linke Lernzielgraph in Ab b. 6.2, der das Mode llieren von (nichtrekursiven) Datenstrukturen im objektorientierten Paradigma beschreibt, strukturell vertraut: Die Modellierung der jeweiligen Datenstruktur erfolgt zunächst auf der Ebene von Objekten und Beziehungen zwischen diesen; anschließend lässt sich durch Abstraktion die Klassenebene und damit die Definition des Datentyps gewinnen. Objekt und Klassenebene sind lernzieltheor etisch offensichtlich voneinander getrennt. Der rechte Teilgraph zur funktionalen Modellierung ist dagegen intuitiv weniger schnell zu durchschauen: Schon rein optisch wird deutlich, dass dort die „ objekt artige“ und „kl assen artige“Kategorie zusammenfallen, da dieObjekt ebene , d.h. die Datenflussdiagramme, durch Konstruktorterme unddie Klassenebene , d.h. die Typdefinitionen ,mittels Typterme nrealisiert werden. Anstatt der separaten Lernziele zu den Konzepten Objekt und Klasse haben wir hier nur ein Lernziel zum Datentyp. Dieses Lernziel zum Datentyp enthält sowohl die Bausteine der Date nflussdiagramme (Konstruktoren) als auch die Elemente der Typterme, was sich in dem konkr eten Fall des Beispiels in Abb. 6.1 auf das Kre uzprodukt beschränkt ( die nichtdeterministische100 6 Modellierungsparadigmen im Vergleich Auswahl „|“ tritt im Beispiel nicht auf). Die Schwierigkeit bei der funktionalen Datentypdefin ition liegt also darin, dass sowohl die Objektebene als auch die Klassenebene letztendlich durch dieselbe Begriffl ichkeit –nämlich durch Funktionen –realisiert wird und keine begriffliche Trennung durch unterschiedliche Symboliken auftritt wie etwa in der objektorientierten Mode llierung. Darüber hinaus muss bei dem Entwurf von aufeinander aufbauenden Datenstrukturen (etwa die Datenstrukturen in Abb 6.1)derLernzielgraph funktionaler Modellie rung aus Abbildung 6.2 mehrmals durchlaufen werden: Um die gesamte Datenstruktur aus Abb. 6.1zu modellieren, wird man zunächst die Datentypen „ Adresse “ und „Datum“ entwer fen; Di e dafür notwe ndigen Sorten sind alle elementar, d.h .es müssen keine komplexen Typterme verwendet werden. Mit den elementaren Sorten lassen sich dann einfache Konstruktorterme (u.U. mithilfe von Date nflussdiagrammen) angeben und daraus die Typdefiniti on„Adresse“ und „Datum“ ableiten (prozedurale Lernziele) .Das Entwickeln des Datentyps „Person“ erfolgt dann in einem zwei ten Durchlauf des Lernzielgraphen : Die soeben erarbeiteten Datentypen („Datum“ und „Adresse“) werden als gegeben angenommen, d.h. sie wer den jetzt zu einem 2 –1–3 Lernziel der Kateg orie Datentyp. Nun lassen sich Konstruktorterme für Objekte des Datentyps „Person“ angeben und daraus die Typdefinition „Person“ ableiten. Die Wissensdimension der Lernziel ezum „D atum“ und der „Adresse“ hat si ch also im Laufe der Ableitung geändert, denn sie werden zuerst abgeleitet (prozedurales Lernziel) und dann für andere Ableitungen als Konzept angesetzt (konzeptuelles Lernziel) . Lernpsychologisch entspricht dieser Vorgang dem Bilden von Chunks [Zi88], d. h. dem Bilden bedeutungstragender Informationseinhe iten. Neben den erwähnten Unterschieden haben die Lernziele zur funktionalen bzw. objektorie ntierte Modellierung von Datentypen strukturell offensichtlich durchaus Ähnlichkeiten, wie etwa eine objektartige Kategorie (Konstruktorterme bzw. Datenflussdiagramme vs. Objektdiagra mme) oder die Kategorie der Datentypen (funktionale Typvereinbarungen und Klassenkarten bzw. Klassendiagram me). Auch zwischen Beziehungen und der Funktionskomposition bestehen strukturel leÄhnlichkeiten : So werden durch Funktionskomposition endie verschiedenen funkt ionalen Datentypen in ähnlicher Weise zueinander in Beziehung gesetzt wie bei objektorientie rten M odellen durch die Aggrega tion bzw. Assoziation. Darüber hinaus ist auch der pr inzipielle Vorgang de rModellierung vergleichbar: Am Beginn steht immer eine konkrete Instanz des j eweiligen Datentyps: Bei objektorientierten Modellen das Objektdiagramm und bei funktionalen Modellen das Datenflussdiagramm bzw. der Konstruktorterm; aus di esen konkreten Instanzen wird anschließend die Datentypdefinition (Klassenmodell, bzw. funktionale Typdefinition )gewonnen . Ein derartiges konkretes Modell ieren des Datent yps geht sicherlich stets –und sei es auch nur informell –der Typdefinition voraus; insofern ist die Vorrangrelation jeweils zw ischen den be iden prozeduralen Lernzielen in Abbildung 6.2 sicherlich notwendig. Insgesamt bildet das Fehlen eines objektartigen Begriffs in der funktionalen Modellierung aus didaktischer Sicht eingroße s Problem füreine eventuelle schulische Arbeit mitfunktion alen Datentypen. In der objektorientierten Modellierung kann man durch die Analyse von Objek tmodellen stets auf den Abstraktionsprozess der Klassenmodellierung vorbereiten ohne A nleihen aus der Klasseneben e machen zu müssen . Bei der funktionalen Modellierung werden diese Eb enen vermischt, denn beim Modellieren der Daten struktur müssen unter Umständen bereits die Konstruktoren, d.h. Elemente des Datentyps bekannt sein. Das wird insbesondere bei rekursiven Datenstrukturen zu noch größeren didakt ischen Problemen füh ren. Im Rückblick auf die Lernzielanalyse funktionaler Modellierung in Kapitel 5 stellt sich die Frage , weshalb bei der dort besprochenen funktionalen Modellierung auf die Betrachtung von Konstruktor terme n verzichtet werden konnte ,zumal intensiv mit Instanzen verschiedener D atentypen (ganze Zahlen, Fließkommazahlen, Wahrheitswerte, Zeichenketten) gearbeitet wird.6.3 Lernziele rekursiver Strukturen 101 Die Antwort ist pragmatisch: Man geht unausgesprochen –und nach 9 Jahren Mathematikunte rricht sicherlich auch berechtigterweise –davon aus, dass die Schüler die Semantik dieser Date ntypen soweit verinnerlicht haben, dass die Diskussion, wie z.B. die Zahl 10 mithilfe der Nac hfolgerfunktion auf die 1 zurückgeführt wird, vollkommen überflüssig ist. Im Rahmen der funktionalen Modellierung werden folglich die Instanzen funktionaler Datenstru kturen als Black -Box-Objekte behandelt und ihre funktionale Strukturen nicht weiter hinte rfragt. Dass derartige Datenflussdiagramme jedoch durchaus sinnvoll sein können, zeigt bereits das Beispiel in Abb. 6.1;Eine derartige Datenstruktur könnte auch im Rahmen der funktionalen Modellierung an der Schule nicht ohne Diskussion verwendet werden und müsste in ihren Grundprinzipien analysiert werden , selbst wenn m an auf der Ebene der „Objekte“ bleibt und keine geeigneten Datent ypen definiert .Die Diskussion der Lernziele rein funktionaler Date ntypdefinitionen verdeutlicht jedoch, dass derartige Techniken aufgrund der beschriebenen Pro blematik für den Einsatz an Sch ulen vermutlich nicht geeignet sind und auf den universitären Einsatz beschränkt bleiben sollten. Die Analyse der Lernziele rekursiver Datenstrukturen (siehe Abschnitt 6.3) wird dies unterstreichen. Darüber hinaus ist es im Schulgebrauch nicht notwe ndig,funktionale M odellierungstechniken für Typdefinitionen zu verwenden, da objektorientierte Techniken wie g ezeigt konzeptuell dasselbe leisten. 6.3Lernziele rekursiver Strukturen Nun wird dieBeschränkung auf nichtrekursive Strukturen aufgegeben .Ausgehend von den bi sher erarbeiteten Lernzielgraphen wird unter Bezugnahme auf bekannte Lehrstrategien rekurs iver Strukturen der Entwurf eines Lernzielgraphen vorgestellt, der die Lernziele derartiger Strukt uren b eschreibt. Insofern erweitern wir an dieser Stelle den Themenbereich der Jahrgangsstufe 9 des bayerischen Gymnasiums z.B. auf den Lehrplan der 11. Jahrgangsstufe oder auch auf einführende Vorlesungen in die Informatik ,wo dieses Thema je nach Lehrstrategie von Bedeutung seindürfte . Wie schon im vorigen Ab schnitt geschehen, werden dabei sowohl funktionale alsauch objek torientierte Modellierungstechniken in die Diskus sion einbezogen . Nicht zuletzt die im vorhe rgehenden Abschnitt erwähnten Analogiebetrachtungen zwischen objektorientierten und funkt ionalen Mo dellen werden aufgegriffen und vertieft werden . 6.3.1 Rekursive Datenstrukturen Rekursive Datenstrukturen wurden bereits im 4. Kapitel im Rahmen der objektorientierten M odellierung in der Unterstufe angesprochen. Es handelt sich dabei um objektorientierte Modelle zur Beschreibung baumartiger Objektstrukturen .Im Informatikunterricht der Unterstufe wird der Begriff der Rekursion dabei nicht explizit, sondern lediglich propädeutisch thematisiert. Ein einführendes Beispiel Zur Veranschaulichung der relevante n Lernziele betrachten wir eine lineare Liste von Objekten der Klasse PERSON in objektorientierter und funktionaler Modellierung. Die Abbildung 6.3 zeigt links das objektorientierte Modell und rechts das Datenflussdiagramm. Der direkte Vergleich der beiden Modelle zeigt sehr anschaulich, dass –wie nach der Disku ssion des vorigen Abschnitts zu erwarten –die beiden Modellierungstechniken auffallende Para l-102 6 Modellierungsparadigmen im Vergleich lelen, aber auch entscheidende Unterschiede aufweisen. In ihrem groben Aufbau sind die beiden Modelle ve rgleichbar: Jedem Objekt der Klasse Person entspricht ein Konstruktorterm best ehend aus dem Konstruktor PERSON und der entsprechenden Zeichenkette; die Aggregationen im objektorientierten Modell werden im funktionalen Modell über die Funktionskomposition mit dem Konstruktor APPEND realisiert. Damit werden allerdings auch schon die Unterschiede deutlich: Im objektorientierten Modell benötigt man die unterschiedlichen Konzepte „Objekt“ und „Beziehung“, im funktionalen Modelle nur das Konzept des Konstruktors und die Funkt ionskomposition. (Der Einfachheit halber wurden im funktionalen Modell die Zeichenke tten nicht streng funktional sondern als Daten und damit als Black -Boxes modelliert.) p3:Person name =„Martin“ p1:Person name =„Hans“p2:Person name =„Sophie“next nextPersonHans AppendEmpty PersonSophie Append PersonMartin Append Abb. 6.3. Objektorientierte und funktionale Modelle rekursiver Listen im Vergleich Nach Diskussion der „Objektstrukturen“ stellt sich die Frage, wie die rekursiven Datenstru kturen auf der Ebene der Klassenmodelle bzw. Typdefinitionen repräsentiert werden können. Abbildung 6.4zeigt das zugehörige Klassenmodell bzw. die entsprechende Datentypdefinition . Die Typdefinition zur Beschreibung der Struktur des geschachtelten Datenflussdiagramms ist dabei klarer als das Klassendiagramm :Beim Klassendiagramm ist die Wahl zwischen dem E nde der Liste und einem potentiellen Nachfolger i n der Multiplizität „0, 1“ versteckt. Im funkt ionalen Modell wird dagegen die nichtdeterministische Auswahl (senkrechter Strich) verwendet und somit klar zwischen der Fortsetzung der Liste und dem Ende unterschi eden. type person =Person of string type personList =Empty |Append of (Person *personList )Person namenext 0,1 Abb. 6.4Klassendiagramm und Datenty pdefinition rekursiver Listen . Einweiteres wichtiges Detail betrifft den Abschluss der Liste selbst : Im funktionalen Modell ist es notwen dig diesen durch denKonst ruktor EMPTY zu kennzeichnen ; es stellt sich nun die Frage, weshalb man im objektorientiert en Mo dellauf ein derartiges Abschlussobjekt verzicht et?6.3 Lernziele rekursiver Strukturen 103 Die Antwort dürfte „didaktische Reduktion“ heißen, de nn in der Unterstufe des Gymnasiums, in der dieses Modell diskutiert wird, wäre die vollständige Modellierung dieser Detail szu anspruchsvoll und nicht zielführend .Einedifferenzierte Betrachtung des objektorie ntierten M odells, die spätestens bei der Implementierung erforderlich ist, zeigt , dass auch in objektorie ntierten Modellen ein derartiges Abschlussobjekt vorhanden ist: Im einfachsten Fall dasObjekt „NULL“ oder ggf.komplexere Abschlusso bjekte. Diese Überlegungen haben sich für den Informatikunterricht in der Oberstufe des bayerischen Gymnasiums als sehr bedeutsam herausgestellt: Nachdem rekursive Datens trukturen im Info rmatikunterricht der Unterstufe graphisch modelliert werden, werden sie in der 11. Jahrgangsst ufe implementiert. Der Lehrplan [ISB07] eröffnet dabei durch die Einbindung des Entwurfsmu sters „Kompositum“ die Möglichkeit rekursive Datenstrukturen mit einem „echten “Abschluss objekt zu beenden. In den einschlägigen Schulbüchern zur Jahrgangsstufe 11 ([Br09], [Hu09]) wird deshalb dem Kompositum als Grundlage rekursiver Strukturen breiter Raum eingeräumt1. Nimmt man im objektorientierten Modell rekursiver Datenstrukturen ein Abschl ussobjekt hi nzu, so ergibt ein Objekt -und Klassenmodell , wie es in Abbildung 6.5gezeigt ist. Das in Abbildung 6.5 angegebene Klassendiagramm ist im Gegensatz zu dem Klassendi agramm in Abbildung 6.4 analog zur funktionalen T ypdefinition rekursiver Datenst rukturen aufgebaut: Es gibt jeweils ein Abschlussobjekt und anstatt der nichtdeterministischen Alternative wird im Komp ositum die Vererbungsbeziehung verwendet (allerdings kommt hier aus rein technischen Erfordernissen die abstrakte Klasse hinzu) . p3:Knoten name =„Martin“ p1:Knoten name =„Hans“p2:Knote name =„Sophie“next next Knoten namenext 1 AbschlussPersonenliste a:Abschlussnext Abb. 6.5Das Kompositum zur Beschreibung rekursiver Listenstrukturen . Lernzielgraphen rekursiver Datenstrukturen Die Diskussion im vorhergehenden Abschnitt illustriert anschaulich, wie ähnliche Konzepte durch verschiedene Modellierungswerkzeuge dargestellt werd en können. Im Gegensatz zu den 1Es sei darauf hingewiesen, dass der Einsatz von Entwurfsmuster im Bereich der Schuli nformatik sich nicht nur auf das Kompositum beschränkt. In seiner Dissertation erläutert P. St echert [St09], dass auch weitere Entwurfsmuster, wie etwa das Adapter -Muster, das Brücke nmuster oder die Fassade eingesetzt werden können.104 6 Modellierungsparadigmen im Vergleich bisherigen Lernzielgraphen (Abb. 6.2)sind einige der für die Modellierung rekursiver Date nstrukturen erforderlichen Lernziele noch nicht in die Lernzielgraphen integriert. Dies wurde in den Lernzielgraphen von Abbildung 6.6durchgeführt. Die Lernzielgraphen dieserAbbildung unterscheiden si ch in einigen Punkten von den Lernzielgraphen in Abbildung 6.2:Das sind im Falle der objektorientierten Modellierung die Lernziele zur Vererbung, zur ab strakten Klasse und zu den Klassen ABSCHLUSS und KNOTEN; im Falle der funktionalen Modellierung die Lernziele zu dem Typoperator der Alternative (in den meisten funktionalen Programmiersprachen durch einen senkrechten Strich symbolisiert), und zu den Konstruktoren für den Abschluss und die Knoten. DieBeziehungss truktur der Lernzielgraphen in Abbildung 6.6 ist prinzipiell ähnlich wie in Abbil dung 6.2 und muss deshalb an dieser Stelle im Detail nicht nochmals diskutiert werden. Auf einen zentralen Punkt sollte hier aufgrund der Konsequenzen f ür die Didaktik rekursiver Datenstrukturen jedoch eingegangen werden: Wie bereits in 6.2 erläutert, kann bei der objek torientierten Modellierung die Kategorie der Objektdiagramme von der Kategorie der Klasse ndiagramme getrennt werden, bei der funktionalen Modellierung dagegen nicht . Diese Ve rschmelzung von „Objektebene“ und „Klassenebene“ im Falle der funktionalen Modellierung ist für ein en tscheidendes Detail im Lernzielgraphen funktionaler Modellierung verantwortlich: Es besteht eine problematische zirkul äre Abhängigkeit zwischen dem Lernziel , das aus dem 2 –1– 3 Muster zu rekursi venDatentypen gebildet wird (oben im Lernzielgraph funktionaler Mode llierung) ,und dem prozeduralen Lernziel zur Erstellung dieses Datentypen (unten rechts im Lernzielgraph). De nn die Modellierung einer Inst anz eines rekursiven Datentyps --als Date nflussdiagramm oder textuell --erfordert die Anwendung geeigneter Konstruktoren. Diese Ko nstruktoren werden jedoch erst in der Typdefinition festgelegt, d.h. man muss ein Konzept ve rwenden, dass man sicherst noch prozedural erarb eitenmuss. 2/3:Funktionales Modellieren2–1–3:Rekursiver Datentyp 2-1-3:Mehrstellige Funktion 2–1–3: Typoperatoren 2/3:Objektorientiertes Modellieren2–1–3:Objekt Abschlussobjekt Beziehungen auf Klassenebene2–1–3:Methode 2–1–3:Aggregation auf Objektebene2–1–3: Nichtrekursive Aggregation2–1–3:Klasse >2:Kompositum ableiten>2:Linear rekursiv geschachtelte Objektstrukturen erstellen2–1–3: Vererbung2–1–3:Elementare Sorten 2–1–3: Alternative >2:Linear rekursiv geschachtelte Datenstrukturen darstellen2–1–3:Konstruktor >2:Rekursive Datendefinition ableitenAbschlussklasse KnotenklasseKnotenobjekt 2–1–3:Methode2–1–3:Attribut Abschluss Knoten 2–1–3: Kreuzprodukt 2–1–3:Funktionskomposition 2–1–3:Funktionskomposition mit Konstruktoren (T+G)2–1–3:Funktionskomposition für Typterme (T) 2–1–3:Abstrakte Klasse Abb. 6.6Lernzielgraphen rekursiver Datenstrukturen unter Verwendung objektorientierter und funktionaler Modellierungswerkzeuge . In der didaktischen Praxis könnte diese zirkuläre Abhängigkeit dadurch auflöst werden, dass man in einer propädeutischen Phase, Anleihen aus anderen Modellierungstechniken macht (e twa objektorientierte) und so dem Lernenden ein mentales Modell der zu modellierenden Date n-6.3 Lernziele rekursiver Strukturen 105 struktur zur Verfügung stellt und durch Analogie betrachtungen die Elemente der funktionalen Modelle erarbeitet. In Abschnitt 6.2 hatten wir einen ähnlichen Vorgang bereits angesprochen: Bei der Definition hierarchisch aufeinander aufbauender Typdefinition (z.B. der Datentyp PERSON, der von den Datentype n DATUM und ADRESSE abhängt) kommt es zu jeweils dann zu Chunking, wenn ein Datentyp im Rahmen eines prozeduralen Lernprozesses zunächst erstellt und anschließend als Konzept verwendet wird. In der Erstellungsphase ist es ein prozedurales Lernziel, sobald der Datentyp verwendet wird, bildet er eine Einheit und wird zum Konzept. Bei der Definition r ekursiver funktionaler Datentypen findet dieser Prozess, bei demselben Datentyp unter Umstä ndenmehrmals statt: Zuerst wird (prozedural) ein Datentyp aufgrund ei nes bestimmten mentalen Modells der Datenstruktur erstellt (evtl. unter Verwendung verwandter Modellierungstechn iken). Anschließend wird er als Konzept eingesetzt und es wird überprüft, ob sich die gewünsc hte Date nstruktur ergibt. Ist dies nicht der Fall, wird der Datentyp modifiziert und wiederum auf seine Korrektheit überprüft; ggf .muss dabei das Konzept modif iziert werden. Es zeigt sich also, dass ein streng funktionaler Ansatz in der Didaktik rekursiver Datenstru kturen aufgrund zirkulärer Abhängigkeite n zwischen den Lernzielen zugrößeren didaktischen Anstrengungen zwingt . Im Gegensatz dazu lassen sich bei Verwendung objektorientierter M odellierungstechniken die Lernziele sequentialisieren . Dies dürfte ein entscheidendes Argument dafür sein, im Rahmen d er schulischen Informatik für das Lehren rekursive Datenstrukturen o bjektorientierte Modellierungstechniken zu wählen und keine rein funktionalen ; im Bereich der universitären Lehre gilt dies sicherlich nicht . 6.3.2Rekursive Datenstrukturen und rekursive Funktionen Nachdem im vorigen Abschnitt die Lernzielgraphen rekursiver Datenstrukturen diskutiert wu rden, drängt sich die Frage auf, welche Konsequenzen sich für die Didaktik rekursiver Funkti onen ergeben. Rekursive Abläufe in der didaktischen Literatur Im Jahre 2000 ver öffentlichte Vélazquez -Iturbide [VI00] eine viel beachtete Arbeit zur D idaktik rekursiver Funktionen. Darin stellte er eine Strategie vor, wonach Rekursion zunächst anhand rekursiver Grammatiken, dann im funktionalen Programmierparadigma u nd zuletzt im imperativen Stil gelehrt werden sollte . Diese Herangehensweise lässt sich durchaus mit der hier vorgestellten Strategie vergleichen: Rekursive Sprachstrukturen lassen sich lernzieltheoretisch völlig analog wie rekursive Objektstrukturen behan deln. Wie rekursiv geschachtelte Objek tstrukturen lassen sich zu nächst rekursiv geschachtelte Wö rtereiner bestimmten Sprache disk utieren; hier bieten sich Beispiele wie etwa geschachtelte Termstrukturen („Klammerausdrücke“ in der Mathematik ) an. In einer zweiten Phase werden zu diesen Term strukturen nach Definit ion en tsprechender Nonterminale die zugehörigen rekursiven Produktionsregeln erstellt. Bei den rekursiven Objektstrukturen entspräche letzteres der Phase der Definition entsprechender Kla ssen und F estlegung der Beziehungen. Der Lernzielgraph für rekursive Grammatiken soll hier nicht eigens angeführt werden, er ist jedoch strukturell dem Lernzielgraph objektorientierter Modellierung aus Kapitel 4 offenbar sehr ähnlich. Die beschriebene Vorgehensweise für die Lehre von Sprachstrukturen wird im Bereich der Schulinformatik inzwischen realisiert : Im Lehrplan Informatik an der Oberstufe der bayerischen Gymnasien (Jahrgangsstufe 12) sollen rekursive Sprachstrukturen auf die beschriebene Weise unterrichtet werden . Die zugehörigen Unterrichtswerke sind momentan in Vorbere itung [Hu10].106 6 Modellierungsparadigmen im V ergleich Der Exkurs zu Gemeinsamkeiten rekursiver Sprachstrukturen und rekursiver Objektstrukt uren verdeutlicht, dass rekursive Objektstrukturen als Vorbereitung für das Erlernen rekursi ver Funktionen gesehen werden könn ten.Zwar wird hier –anders als bei Vélazquez -Iturbide [VI00] –der Weg über objektorientierte Modelle gewählt, prinzipiell stellt das jedoch keinen Unte rschied dar. Noch deutlicher als bei [VI 00] wird die Bedeu tung menta ler Modelle rekursiv geschachtelter Datenstrukturen in der Arbeit von Levy und Lapidot [Le00]: Darin werden im Rahmen einer Unterrichtsbeobachtung die mentalen Modelle von Lernenden bei der Analyse rekursiver Stru kturen (Kochsche Kurve, pythagoreische Bäum e, etc.) analysiert. Sie wurden dabei im Sinne e iner konstruktivistischen Lernumgebung nicht vom Lehrer beeinflusst. Die Lernenden erkannten zwar in der Regel die selbstähnliche Struktur, waren jedoch nicht imstande eine rekursive Regel anzugeben, wie sie von einem Experten formuliert werden würde. Unterstützt werden die E rgebnisse von Levy durch aktuelle reUntersuchungen von Götschi [Go03] undSanders [Sa06], [Sa07] :Sie zeigen, dass Lernende das Konzept der Rekursion nur mit dem Modell der sukzess iven Erz eugung von Kopien richtig einsetzen kön nen. Die zitierten Publikationen zu Didaktik rekursiver Funktionen haben zusammenfassend ein gemeinsames Element: Zentral für das Verständnis rekursiver Ablauf ist ein mentales Modell derzugrunde liegenden Datenstr uktur. Damit ergibt sich jedoch bei klassischen Lehrstrategien rekursiver Funktionen, wie etwa mithilfe der Fakultäts -oder Fibonaccifunktion, ein Problem: Bei derartigen Vorgehensweisen wird die Aufrufstruktur erst durch die Verwendung der reku rsiven Funk tionsdefinition deut lich, denn erst dann kann die rekursive Struktur exemplifiziert werden2. Ein völlig anderes Bild ergibt sich, wenn man die rekursiven Objekt strukturen (Bäume, Li sten) als Träger der rekursiven Aufrufe verwendet und rekursive Funktione n anhand Frageste llungen zu derartigen Datenstrukturen einführt. Die eben beschriebenen Nachteile wie fe hlende rekursive Trägers truktur oder alternative nichtrekursive Implementierungsmöglichke iten treten dabei nicht auf. Dieser Weg wird in [Hu09] detailli ert erläutert, wobei allerdings keine funkti onale sondern eine objektorientierte Implementi erung rekursiver Funktionen gewählt wird. Eine Besonderheit dieses Zugangs ist die elegante Verteilung von rekursivem Aufruf und Abbruch sbedingung auf die Elemente d es Kompositums: Die Klasse Abschluss enthält den A bbruchfall, die Knotenklasse den rekursiven Aufruf. In dieser Form ist die Implementierung der vom Pa ttern-Matching bekannten Vorgehensweise bei Implementierung rekursiver Funktionen im fun ktionalen Par adigma sehr ähnlich. Rekursive Funktionstraversierung am Beispiel Im Folgenden wird eine Strategie zur graphischen Vermittlung rekursiver Funktionsabläufe vorgestellt. Im Gegensatz zu [Hu09] wird nicht das objektorientierte sondern das funktionale Modellieru ngsparadigma verwendet. Dabei werden die bisher eingesetzten Strategien funktion aler Datenstrukturmodellierung erweitert. Zur Veranschaulichung der wesentlichen Lernziele betrachten wir eine Funktion, die auf der rekursiv definierten Liste von Personen inAbb. 6.3 (rechts , funktionales Modell )ermitteln soll, wie viele Personen in der Liste enthalten sind. Abbildung 6.7 zeigt eine Folge von Datenflus sdiagrammen, die die wesentlichen Aspekte des Funktionsaufrufs visualisiert (Die hier verwe n2Abgesehen davon sind derartige Funktionen didaktisch nur bedingt sinnvoll, da diese Funktionen sehr leicht i terativ berechnet werden können und der Lernende die Notwendigkeit der R ekursion nur schwer einsieht6.3 Lernziele rekursiver Strukturen 107 dete Technik der dynamischen Datenflussdiagramme wurde von P. Hubwieser in [Hu 04] verö ffentlicht) . Von rechts nach links zeigt die Abbildung wie die Funktion „zaehlen “die Datenstruktur traversiert: Zunächst ist die gesamte Datenstruktur das Argument; da dessen äußerste Fu nktion der Konstruktor APPEND ist, enthält die Datenstruktur mindestens ein Element, d.h. zum E rgebnis muss die Eins addiert werden und die Funktion muss an das nächste Listenelement we itergereicht werden. Dies setzt sich fort bis schließlich der Konstrukt or EMPTY erreicht wird und die Funktion das Ergebnis als eine Folge von Summationen der Eins zurückliefert. Das angegebene Modell zeigt dabei zum einen, wie der rekursive Aufruf an die jeweils nächsten Elemente weitergereicht wird und er illustriert darübe r hinaus, dass die Funktionalität der Funktion „zaehlen “vom Konstruktor des Arguments abhängt: Ist der Konstruktor APPEND das Argument, so wird die 1 addiert und der Aufruf weitergereicht, beim Konstruktor EMPTY wird dagegen nicht mehr addiert und die Fun ktion abgebrochen. Anhand eines derart igen Modells kann sich der Lernende somit anschaulich klarmachen, welche Funktionalität die gewünschte Funktion, bei den verschiedenen Konstruktoren haben muss und wie sie „weiterg ereicht“ we rden muss, d.h. wie der rek ursive Aufruf strukturiert ist. PersonHans AppendEmpty PersonSophie AppendPersonMartin Append zaehlenPersonHans AppendEmpty PersonSophie Append 1 AddierezaehlenPersonMartin AppendPersonHans AppendEmpty PersonSophie Append 1 AddierePersonMartin Appendzaehlen Addiere1 Abb. 6.7. Ablauf rekursiver Funktionen auf rekursiven Datentypen Es ist unter Umständen gar nicht notwendig, das Modell wie in Abbildung 6.7 detailliert auszuformulieren, in der Regel dürfte es genügen, wenn sich der Lerne nde, z.B. etwa in natürlicher Sprache oder Pseudocode klar macht, welche Aufrufe an den verschiedenen Knoten ausgeführt werden müssen. Bei einer derartigen Einführung rekursiver Funktionen lässt sich der Lernzielgraph als Erwe iterung des Lernzielgraphen re chts in Abbildung 6.6relativ einfach angeben (siehe Abb. 6.8 ). Offensichtlich muss der Graph rekursiver Datenstrukturen nur geringfügig modifiziert und erweitert werden: Die Modelle rekursiver Datenstrukturen werden nun als Konzept vorausg esetzt, so dass aus dem pr ozeduralen Lernziel aus Abb. 6.6 ein konzeptuelles Lernziel zum jewe iligen rekursiven Datentyp wird, das in ein 2 –1–3 Muster eingebettet ist. Diese Struktur ist nun Voraussetzung für das Formulieren der rekursiven Funktion, die sich in die Fun ktionalität für den Knoten -und Abschlussaufruf aufteilt. Darüber hinaus sind für das Formulieren dieser Fun ktionalitäten ggf. weitere Funktionen ( etwa im Beispiel aus Abb. 6.7 , das Addieren) notwendig, die hier allerdings nicht separat aufgeführt wurden , sondern zusammenfassend aus dem überg eordneten Lernziel zu mehrstelligen Funktionen zu entnehmen sind. Eigens aufgeführt wurde a llerdings das Lernziel zu einer Alternative, die entweder als bedingter Ausdruck oder über Pa ttern Matching realisiert werden, aufgrund der besonderen Bedeutung dieser Struktur. Am Pattern matching, wo die Bestandteile rekursiver Funktionen auf die beiden Konstruktoren ve r-108 6 Modellierungsparadigmen im Vergleich teilt sind, wird die Verwandschaft der hier vorgestellten, rein funktionalen Vorgehensweise mit der o bjektor ientierten Lehrstrategie rekursiver Funktionen bei [Hu09] besonders deutlich. Dort (d.h. bei [Hu09]) werden die rekursiven Funktionen in konsequenter Weise mithilfe des Ko mpositums verwirklicht und der Terminierungsfall und der rekursive Aufruf jeweils auf die A bschlussklasse und die Knotenklasse verteilt. Insofern also ein auffälliger struktureller Parall elismus zwischen der objektorientierten und der funkti onalen Modellierung. 2/3:Funktionales Modellieren2-1-3:Mehrstellige Funktion2–1–3:Rekursiver Datentyp >2:Rekursive Funktionsdefinition angeben2-1-3:Êlemente der Typdefinition 2–1–3:Typoperatoren2–1–3:Elementare Sorten 2–1–3: Alternative 2–1–3:Linear rekursiv geschachtelte Datenstrukturen2–1–3:Konstruktor Abschluss Knoten2–1–3: Kreuzprodukt 2–1–3:Funktionskomposition 2–1–3:Funktionskomposition mit Konstruktoren (T+G)2–1–3:Funktionskomposition für Typterme (T) >2:Knotenfuntkionalität formulieren>2:Abschlussfuntkionalität formulieren2–1–3:Bedingter Ausdruck /Pattern matching Abb. 6.8Lernzielgraph rekursiver Funktionsdefinition basierend auf rekursiv en Datenstrukturen . 6.4Lernziele funktionaler und objektorientierter Modellierung in der Datenbankmodellierung Der letzte Ab schnitt dieses Kapitels ist nach dem Exkurs zu rekursiven Datenstrukturen wiede rumden Inhalten der 9. Jahrgangsstufe des bayerisc hen Gymnasiums gewidmet. Neben der fun ktionalen Modellierung ist die Modellierung von Datenbankprozessen der zentrale Inhalt im I nformatikunterricht der 9. Jahrgangsstufe. Ziel dieses Abschnitts ist es ,die dabei auftretenden Lernziel eaus dem Bereich der funktionalen und objektorientierten Modellierung in ihrem Z usammenspiel zu beschreiben und damit gleichzeitig dasZusammenspiel von Lernzielen aus u nterschiedlichen Modellierungsparadigmen zu illustrieren. Datenbankmodellierung im Informatikunterricht des Gymnasiums am Beispiel Bei der Datenbankmodellierung im Informatikunterricht der Jahrgangsstufe 9 des bayer ischen Gymnasiums werden die bis zu diesem Zeitpunkt unabhängigen Themenstränge der o bjektorientierten und funktionalen Modellierung miteinander ve rbunden. Den Rahmen der dabei behandelten Konzepte beschreibt P. Hubwieser in [Hu00]. Bis zur ersten Umsetzung im Jahre 2007 wurde die dort beschriebene Vorgehensweise noch leicht modifiziert und zur graph ischen6.4 Lernziele funktionaler und objektorientierter Modellierung in der Datenbankmodellierung 109 Modellierung der statischen Modelle ausschli eßlich objektorientierte Beschreibungstechniken eingesetzt (siehe [Hu07a]). Die Datenbank wird somit durch ein Klassendi agramm beschrieben, wobei die einzelnen Klassen die Schemata der Tabellen und die Objekte deren Datensätze re präsentieren. Abbildung 6.9zeigt als typisches Beispiel das Datenmodell das die Konten verschiedener Bankfilialen ve rwaltet. Zu derartigen Datenbankmodellen wird anschließend das Datenbankschema erarbeitet und dieses mit einem geeigneten Datenbanksystems implementiert. (Auf vertie fte Aspekte wie etwa Normalformen wird in der schulischen Informatik nur am Rande ei ngegangen.) Konto Kontonummer :IntegerKunde Kundennummer :Integer Name :String Straße :String Wohnort :String PLZ:IntegerBank BLZ :Integer Name :String m1 m n <hat_Zugriff _auf verwaltet >Überweisung Nummer :Integer Betrag :Double Bemerkung :String m m 1 1 hat_Ziel>hat_Quelle> Abb. 6.9Ein typisches Datenbankmodell aus der 9 Jahrgangsstufe des bayerischen Gymnasiums . Die Abfragen zu Datenbanken werden im Sinne einer möglichst s prachunabhängigen Repr äsentation ebenfalls zunächst graphisch modelliert und dann in die Abfragesprache SQL übertr agen. Als graphische Modellierungstechnik kommen dabei wiederum Datenflussdiagramme zum Einsatz, was erstmals in [Hu08] beschrieben wird. Abbi ldung 6.10 zeigt ein entsprechendes D atenflussdiagramm und die zugehörige SQL -Abfrage , in der für eine bestimmte Bank alle Übe rweisungen ermittelt werden . KreuzproduktÜberweisung Konto KreuzproduktBank SelektionÜberweisung .Quellkonto =Konto .Kontonummer and Konto .Bank =Bank .BLZ and Bank .Name =„Sparbank“ ProjektionBank .BLZ,Konto .Kontonumer ,Überweisung .Betrag , Überweisung .Zielkonto SELECT Bank .BLZ,Konto .Kontonumer ,Überweisung .Betrag , Überweisung .Zielkonto FROM Überweisung ,Konto ,Kunde WHERE Überweisung .Quellkonto =Konto .Kontonummer and Konto .Bank =Bank .BLZ and Bank .Name =„Sparbank“ Abb. 6.10 Eine Datenbankabfrage im funktionalen Modell und als SQL -Abfrage .110 6 Modellierungsparadigmen im Vergleich Offensichtlich werden also auch die Datenbankabfragen abstrakt modelliert, wobei die b ekannten Funktionen wie Selektion, Projektion und Kreuzprodukt verwendet werden. Lernziele der Datenbankmodellierung Während für das Verständnis des Klassendiagramms in Ab b. 6.9 im Prinzip die Lernziele o bjektorientierter Modellierung aus Kapitel 4 genügen, werden für das vollständige Verstehen des Datenflussdiagramms in Abb. 6. 10Lernziele funktionaler Modellierung benötigt , die weit über die in Kapitel 5 dargestellt en hinausgehen . Funktional ließe sich das Datenflussdiagramm in dieser einfachen Form aus folgenden Gründen nicht real isieren: -Die „Daten“ in dem Datenflussdiagramm sind keine elementaren Daten sondern Datenban ktabellen und damit rekursive Datenstrukturen, deren Knoten dieeinzeln en Datensätzen als Inhalt haben (Bäume oder Listen) . -Das zweite Argument der Selektion ist streng genommen eine boolesche Funktion, die bestimmte Attributwerte der einzelnen Datensätze als Argument hat. Diese Funktion wird auf jeden Datensatz der Tabelle u nd damit auf jeden Knoten der rekursiven Datenstruktur a ngewandt. -Schließlich enthält die Projektionsfunktion eine Liste von Attributen, deren Länge von vornherein nicht festgelegt ist. Somit sind auch die Argumente der Projektion keine einf achen Datentype n Diese Ausführungen zeigen, dass eine SQL -Abfrage ein Funktional ist, mit der Where -Klausel alsfunktionalem Argument. Die SQL -Abfrage verhält sich somit genauso wie die aus funkti onalen Programmiersprachen bekannte map -Funktion, die eine Funktion auf e inen rekursiven Datentyp anwendet. Der Lernzielgraph, der all diese Lernziele beschreibt, ergibt sich als Erweiterung des Graphen in Abbildung 6. 8: Die map -Funktion ist ebenfalls ein rekursive Funktion, d.h. man hätte wi ederum ein entsprechendes prozedural es Lernziel. Hinzu kommt allerdings das Konzept, dass Argume nte nicht nur Datentypen, sondern auch Funktionen sein können, d.h. man hat ein weiteres ko nzeptuelles Lernziel zum Funktional , das in ein 2 –1–3 Muster eingebettet ist und das Vorrau ssetzung f ür das prozedurale Lernziel ist. Neben diesen Lernzielen der funktionalen Modellierung treten Lernziele auf, die die Transfo rmation eines objektorientierten in ein funktionales Modell beschreiben, denn die Tabellen und insbesondere die Datensätze werden zu nächst objektorientiert modelliert und anschließend funktional interpretiert, um eine Datenbankabfrage formulieren zu können. Letztendlich bede utet dies, dass für ein fundiertes Verständnis, der bei derartigen Datenbankmodellierungen auftr etenden Konzepte, die Lernziele der Modellierung rekursiver Datenstrukturen in objektorientie rter und funktionaler Technik sowie dieLernziele rekursiver Funktionale mindestens auf der kognitiven Stufe 3 beherrscht werden müssen. Im Rahmen der schulischen Informatik, zumal in der 9. Jahrgangsstufe, ist es sicherlich nicht notwendig ,diese Probleme anzusprechen und es genügt eine vereinfachte Sicht auf die bei SQL -Abfragen erforderlichen Konzepte; so könnte man beispielsweise die funktionalen Arg umente der Selektion und Projektion als Textsequenzen interpretieren, die von der Selektion en tsprechend übersetzt werden . Dem Lehrenden sollte jedoch bewusst sein, dass eine Darstellun g wie in Abb. 6.10 über die tieferen Hintergründe der Abfragefunktion hinweg täuscht und sich Konzepte verbergen, die über das Niveau der 9. Jahrgangsstufe weit hinausreichen.7Lernzielgraphen im Vergleich mitanderen Klassifizierungen Die Ausführungen der Kapitel 3 –6 verdeutlichten wie durch Analyse einzelner Übungsaufg abenverschiedene Teilbereiche der Informatik lernzieltheoretisch modelliert und zueinander in Beziehung ge setzt werden können. Dies wurde exemplarisch für einige wichtige Themenbere iche, wie imperative Algorithmik, objektorientierte Datenmodellierung, nichtrekursive funkti onale Abläufe und rekursive Datenstrukturen vorgeführt .Dabei bildete die Schulinformatik zwar den Schwerpunkt, mit der Diskussion rekursiver funktionaler Datenstrukturen wurde njedoch auch Inhalte einführender Lehrveranstaltungen an Hochschulen bzw. Universitäten themat isiert. Es ist offensichtlich, dass im Rahmen dieser Arbeit nicht die vol lständige Modellierung info rmatischer Lern -und Lehrprozesse bewältigt werden kann . Vielmehr sollten die einzelnen A bschnitte die prinzipielle Vorgehensweise erläutern und die Möglichkeiten, die die Methode der Lernzielanalyse bietet ,verdeutlichen. Dabei wurde gezeigt, dass diese Methode durchaus dazu geeignet ist ,die Inhalte der Informatik nicht nur hinsichtlich ihrer didaktischen sondern auch hinsichtlich ihrer fachl ichen Aspekte zu strukturieren. Wie in den Kapiteln 1 und 2 erläutert, weisen die bekan nten Klassifizierungen der Informatik, wie beispielsweise die fundamentalen Ideen [Sc93], oder Kompetenzmodelle, wie etwa die GI – Standards [GI08] gerade in diesen Aspekten Defizite auf. Den Abschlus s der Arbeit bildet de shalb ein kritischer Vergleich der fundamentalen Ideen und der GI –Standards mit der hier en twickelten Strukturierung. 7.1 Lernzielgraphen und fundamentale Ideen Bereits in Abschnitt 4.2.3 wurde der Lernzielgraph objektorientierter Modellierung zu den fundamentalen Ideen in Bezug gesetz t.Schon da wurde deutlich, dass viele der hier thematisie rten Lernziele in a llen Wissensdimensionen (faktisch, konzeptuell und im Bereich prozeduralen Wissens) Entsprechungen zu den fundamentalen Ideen aufweisen. Nun soll diese Diskussion im Lichte der ge samten A rbeit vertieft werden. Wie in Kapitel 2.1.2 detailliert ausgeführt wurde, weisen die fundamentalen Ideen Defizite auf, die mitdazu beitrugen, die Lernzielanalyse in der beschriebenen Form durchzuführen. Von Interesse ist nun, inwieweit diese Defi zite durch die seLernziela nalyse behoben we rden können . Fassen w ir nochmals die entscheidenden Kritikpunkte zusammen: -Obwohl die Fundamentalität der Ideen in vielen Fällen offensichtlich ist, gibt es doch Ideen, bei denen dieseEvidenz nicht ohne weiteres gegeben ist. -Obwohl die Ideen als Baum repräsentiert werden, ist die Rolle der Beziehungen in di esem Graphen nicht geklärt. -Der „Baum der fundamentalen Ideen“ stellt in der Zuordnung der Ideen zu den jeweilig en Teilbäumen einen Kompromiss dar, denn es gi bt Ideen, die auch anders zugeordnet we rden könnten. So könnte man beispielsweise die Schachtelung nicht nur dem Teilbaum der Modularisierung, sondern auch dem Teilbaum der Algorithmisierung zuordnen („Orth ogonalitätsproblematik“) . Die Tabelle 7.1 zeigt w ie die fundamentalen Ideen (geordnet nach den so genannten Maste rideen) den hier diskutierten Lernzielen zugeordnet werden können. Die Untersuchung b eschränkt sich dabei auf diejenigen Ideengruppen , die in den Lernzielgraphen explizit genannt114 7 Lernzielgraphen im Vergleich mit anderen Klassifizierungen werden; so we rden etwa die Ideengruppen der Orthogonalisierung und der Verifikation nicht diskutiert. In Tabelle 7.1 wird zum einen zwischen den drei im Rahmen der Schulinformatik (Jahrgangsstufe 6, 7 und 9) eingesetzten Modellierungstechniken imperative Algorithmik, o bjektor ientierte und funktionale Modellierung unterschieden ; zu anderen sind auch die in Kapitel 6 erläuterte nKonzepte rekursiver Strukturen (Daten und Funktionen) miteinbezogen , die in der Regel erst an der Hochschule behandelt werden .Die Lernziele sind in der üblichen Weise du rch eine untere Schranke für die kognitive Prozessdimension und eine Wissensdimension geken nzeichnet (dabei wurden wiederum die in Kapitel 3 –6 verwendeten Farbcodes verwendet ).Die Tabelle enthält neben den Lernzielen, die expliz it in den Kapiteln 3 –6 eingeführt wurden, auch einige wenige Lernziele, die zwar nicht aus der Analyse resultieren, deren Auftreten im Rahmen der jeweiligen Unterrichtsthematik jedoch evident ist und die z. B. in den entsprechenden Schulb üchern ([Br04], [Fr04b], [ Br07 ], [Hu07a ]) thematisiert werden. Derartige Lernziele sind kursiv gekennzeic hnet. Tabelle 7.1 Fundamentale Ideen und Lernziele in den Jahrgangsstufen 6, 7 und 9 des bayerischen Gymnasiums Funktiona lFundamentale Idee Objektorientiert ImperativMittelstufe Hochschule Strukturierte Zerlegung: Modularisierung Top-down -Methode Klassen -/ Objek tdiagramme (≥3)(G)Methodenmodellierung durch Einführung von Hilfsmethoden (≥3)(T)Datenflussdiagra mme (≥3)(G / T)Definition rekursiver Struk turen ; funktion ale Zerlegung (≥3)(T) Bottom -up-Methode Klassen -/ Objek tdiagramme (≥3)Wiederverwendung selbst definierter Methoden (≥3)(T)Datenflussdiagra mme (≥3)(G / T) Geheimnisprinzip (black box De nken)Objektorientierter Methoden begriff (≥3)Element are Methoden (≥3)(T)Funktion sbegriff (≥3)Funktionsbegriff (≥3) (T) Lokalität von Obje kten Objektbegriff (≥3)(G / T)Datenflussdiagra mme (≥3)(G / T)Funkt ionsterme (≥3) (T) Spezifikation Klassen -und O bjekt spezifikation (≥3)(G)Methodens pezifikation (≥3)(T)Ablaufspezifikation (≥3)(G / T)Funktionsspezifkation (≥3)(T) abstrakter Datentyp Klassenbegriff (≥3) (G)Funktionaler Date ntyp(≥3)Def. von Datentypen (≥3)(T) Teamarbeit1 Strukturierte Zerl egung: Hierarchisierung Schachtelung Aggregation (≥3) Schachtelung von Kontrollstrukturen (≥3)Schachtelung von Termen (textuell) (≥3)Schachtelung von Termen (textuell) ( ≥3) Baum Objektbäume (≥3) Datenflussdiagramme (≥3)Rekursive Baumstru kturen (≥3) Klammerung Schacht elung von Kontrollstrukturen (≥3)Terme mit Klamme rstrukturen (textuell) (≥3)Termstrukturen (≥3) Einrückung Programmdarstellung (≥3)Programmdarstellung (≥3) Übersetzung X(2) Interpretation X(2) X(2) X(2) operationale Erweit erung7.1 Lernzielgraphen und fundamentale Ideen 115 Algorithmisierung: En twurfsparadigmen Branch and Bound Divide and Conquer Klassendiagramme (≥3)Verwendung vo nHilfsmethoden (≥3)Aufteilung von Date nflussdiagrammen in Teilmodule (≥3)Zerlegung in Hilfsfunktionen (≥3) Greedy -Methode Line sweeping Algorithmisierung: Pr ogrammierkonzepte Konkatenation (S equenz, Feld, Ve rbund)Sequenz von M ethodenaufrufen ( ≥3)Sequenz (≥3) Termsequenzen (≥3)Termsequenzen als geschachtelte Terme (≥3) Alternative (if, case, var. Verbund)Beding te Anweisung (≥3)„Wenn“ -Funktion (≥3)Bedingter Ausdruck (≥3) Iteration (while, Liste, File, Keller, Schla nge)Zähl-und bedingte Wiede rholung (≥3)Iteration auf Reche nblättern (≥3)Rekursive Liste Rekursion (rek. Proz edur, Baum, Suc hbaum)Rekursive Objek tstrukturen (≥3)Rekursive Strukt uren (≥3) Nichtdeterminismus Typdefinition (Au swahloper ator)(≥3) Parametrisierung Funktionssignatur (≥3) Sprache: Syntax Erkennen X(1) X(1) X(1) X(1) Erzeugen X(3) X(3) X(3) X(3) Sprache: Semantik Konsistenz Transformation Überführung von Pseudocode in geei gnete Sprachen (2)Wechsel zwischen textueller und graph ischer Darstellung (2)Sprachunabhängigkeit der Modelle (2) Vollständigkeit Bei der Zuordnung der Ideen zu Le rnzielen ergeben sich Schwierigkeiten, auf die auch schon in [Sc06] hingewiesen wurde: Im Allgemeinen ist w eder die kognitive Dimension noch die Wissensdimension einerfundamentalen Idee evident .Ist be ispielsweise bei der Idee „Top Down -Methode“ das Konze pt ge meint –d.h. müssen die Schüler dies es Konzept kennen und verste hen–oder ist an einen Entwu rfsprozess gedacht , bei dem die „Top -Down -Methode“ für ein bestimmtes Problem einge setzt wurde? Im ersten Fall wäre es ein konzeptuelles, im zweiten Fall ein prozedurales Lernziel. Im Zweifelsfall wurde hier die lernzieltheoretisch höhere Ei nordnung gewählt , d.h. wenn in der Lernzielanalyse zu der entsprechenden Idee ein prozedurales und ein konzeptionelles Lernziel auftrat en, ist in Tabelle 7.1 das prozedurale Lernziel eingetr agen. Am Beispiel der Idee des „Abstrakten Datentyps“ lässt sich die Problematik der Zuordnung der Wissensdimension anschaulich illustrieren: In der objektorientierten Modellierung der U nterstufe werden von den Schülern Klassen strukturen (beispielsweise die Klasse ABSATZ) m odelliert .Hierbei handelt es sich um einen Prozess, bei dem zunächst von mehreren realen O bjekten abstrahiert und schließlich die Klasse definiert wird. Insofern ergibt sich in der entsprechenden Zelle ein prozedurales Lernziel der kognitiven Stufe 3. Demgegenüber müssen in der Jahrgangsstufe 9 die einzelnen Datentypen (Zahlen, Text) nur angewandt werden, d.h. wir haben hier lediglich ein konzeptionelles Lernziel der kognitiven Stufe 3 (oder höher). Schlie ßlich werden b ei der funktionalen Modellierung rekursiver Datenstrukturen (Hochschulbereich) , derartige rekursive Strukturen selbständig entworfen , d.h. man hat es wiederum miteinem pr ozeduralen Lernziel zu tun . Im Gegensatz dazu ist etwa die fundamentale Idee der Spezifikation stets mit einem prozedur a-116 7 Lernzielgraphen im Vergleich mit anderen Klassifizierungen lem Lernziel verbunden, denn das Spezifizieren eines Datentyps oder eines Algorithmus erfolgt stets im Rahmen e ines Prozesses. Grundsätzlich lässt sich sagen, dass Ideen, die mit dem Entwurf von Datentypen oder Alg orithmen verbunden sind, im Allgemeinen ein prozedurales Lernziel ergeben und solche, die Konzepte repräsentieren (Baum, Schachtelung und die Programmierkonzepte), die bei diesem Entwurfsprozess angewandt werden, konzeptuelle Lernziele . Ist bei einer Ideengrupp e das Wort „Konzept“ bereits enthalten (wie bei der Ideengruppe „Programmierkonzepte“), so ist die Z uordnung zu konzeptuellen Lernzielen in der Regel evident. Die einzigen fundamentalen Ideen, denen Lernziele mit faktischer Wissensdimension zugeordnet werd enkönnen ,sind im Bereich der Syntax zu fin den. Da derartige Lernziele in der h ier vorgestellten Lernzielm odellierung in der Regel in das 2 –1–3 Muster eingebunden sind und somit an vielen verschiedenen Stellen auftreten, wurde kein konkretes Lernziel in die Tabelle aufgenommen, sondern ein derartiges mehr fache Auftreten durch das Symbol „X“–gefolgt von der kognitiven Dimension –gekennzeichnet . Ideen und Lernziel eim Detail Bereits ein grober Blick auf Tabelle 7.1 verdeutlich t, dass die meisten Ideen fundamental im Sinne von Bruner [Br60] sind , d.h. sie sind in verschiedenen Teilbereichen und verschiedenen Ausbildungsstufen (Unterstufe, Mittelstufe, Oberstufe) relevant . Dazu zählen etwa alle aufgeführten Ideen zur Modularisierung innerhalb der Ideeng ruppe der Strukturierten Zerlegung :Top-down -Methode, Bottom -up-Methode, Geheimnisprinzip, Lokal ität von Objekten, Spezifikation, abstrakter Datentyp mit Ausnahme der der Idee „ Teamarbeit “1. Während die beiden Entwurfsmethoden (Top -Down / Bottom -Up) bei d en verschiedenen M odellierungstechniken (Klassendiagramme, Methodenmodellierung, funktionale Modellierung) als prozed urale Lernziele auftreten, sind die Lernziele zum Geheimnisprinzip und der Lokalität von Objekten konzeptueller Art. Die Idee des abstrakte n Datentyp sresultiert dagegen, wie oben erläutert, kontextabhängig in prozeduralen oder konzeptuellen Lernzi elen. Innerhalb der Ideengruppe „Hierarchisierung “treten die Ideen „Schachtelung“, „Baum“, „Klammerung“, und „Einrückung“ ebenfalls in allen Ausbildungsstufen und Modellierung stechniken auf :Schachtelung von Kontrollstrukturen in der Algorithmik, Aggregation als sp ezielle Ausprägung der Schachtelung im objektorientierten Modellieren oder Scha chtelung von Termstrukturen .Es stellt sich allerdings d ie Frage, ob diese Ideen nicht in einer Kategorie z usammengefasst werden könnte n, handelt es sich doch um konzeptionell sehr verwandte Begri ffe. Aus diesem Grund wurden in den Lernzielgraphen aus Kapitel 3 –6 die Lernziel zum „Baum“ und der „Klammerung“ i n ein übergeordnetes Lernziel zur Schachtelung i ntegriert. Die weiteren Ideen der Gruppe „Hierarchisierung“ (Übersetzung, Interpretation und operati onale Erweiterung) passen im Grunde nicht so sehr in diese Gruppe sondern scheinen eher A spekte der Ideengr uppe „Sprache“ zu erfassen (dies wird bei [Sc93] auch so dargestellt, jedoch werden die Ideen dennoch in die Gruppe Hierarchie eingeordnet). Diese Ideen erfüllen die Br unerschen Anforderungen nur bedingt: Interpretation tritt zwar in allen Ausbildungsstufe n auf , Übersetzung (wohl im Sinne von compilieren zu verstehen) jedoch nicht. Ein Problemfall ist die 1Die Aufnahme der Teamarbeit als fundamentale Idee der Informatik ist etwas außergewöh nlich, denn es handelt sich hierbei zwar um ein Prinzip, das für die praktische Arbeit eines Informatikers wichtig ist, jedoch war es sicherlich schon in „vorinformatischer“ Zeit bekannt und es ist auch in vielen anderen Bereichen von großer Bedeutung, somit also nicht spezifisch informatisch. Deshalb wird diese „Idee“ hier nicht weiter diskutiert.7.1 Lernzielgraphen und fundamentale Ideen 117 „Operationale Erweiterung“: Die Semantik dieser Idee wird aus [Sc93] nicht klar, weshalb ihr in Tabelle 7.1 kein Lernziel zu g eordnet ist. Innerhalb der Ideengruppe zur Algorithmisierung ist im Bereich der Entwurfsparadigmen für den hier analysierten Unterricht nur die Idee „Divide and Conquer“ von Bedeutung: Etwa beim Entwurf von Klassendiagrammen in der Jahrgangsstufe 6, und beim Modellieren komplexere r funktion aler Modelle sowohl in Jahrgangsstufe 9 als auch an der Hochschule. Die anderen Ideen „Branch and Bound“ (Typisch: Mergesort), Greedy -Methoden oder Line -Sweeping konnten nicht identifiziert werden und kommen frühestens in dem Informatikunterricht der Oberstufe zum Tragen . Unter den fundamentalen Ideen, die den Programmierkonzepten zu zuordnen sind , sind die Konkatenation, Alternative, Iteration in allen Ausbildungsstufen (Unter -, Mittel -und Oberstufe) vertreten, die Rekursion in der Mittelstufe allerdings nicht. Am Beispiel der Konkatenation soll dies erläutert werden: Im Lernzielgraph algorithmischer Grundstrukturen (Abb. 3.5) tritt sie als Sequenz von Anweisungen auf, im Lernzielgraph nichtrekursiver funktionaler Modelle (Abb. 5.8) als Sequenz von Termen und auch im Lernzielgraph reku rsiver Datenstrukturen (Abb. 6.6 ) in Form von Konstruktortermen . Selbst innerhalb der objektorientierten Modellierung der U nterstufe werden Sequenzen von Methodenaufrufen verwendet (dieses Lernziel tritt zwar nicht explizit in einer der analysierten Aufgaben auf, gehört jedoch zu den Standardlernzielen der o bjektorientierten Modellierung in dieser Altersstufe (siehe [Br04], [Fr04b] ), weshalb derartige Lernziele in Tabelle 7.1 kursiv gekenn zeichnet sind. Für die Alter native, die Iteration und die Rekursion gilt ähnliches. Eine Ausnahme bilden allerdings die Ideen „Nichtdeterminismus“ und „Parame trisierung “; diesen Ideen können im Informatikunterricht der Unter -und Mittelstufe keine Ler nziele zugeordnet werden. Auch b ei der Ideengruppe der „Sprache“ genügen nicht alle Ideen den Brunerschen Ford erungen nach Fundamentalität: Nur fürdie Ideen des „Erkennens (einer Syntax )“ und des „Erzeugens (einer Syntax)“ sowie auf die Transformation trifft dies zu, für „Konsistenz und Vollständigkeit “dagegen nicht. Bei letzteren stellt sich im Übrigen die Frage, ob sie nicht auch der Ideengruppe der Verifikation zugeordnet werden könnte . Bei den Ideen zu Syntax fällt auf, dass es sich hier –im Gegensatz zu den übrigen Ideen –um Verb en handelt, die direkt die kognitive Dimension des damit verbundenen Lernziels angeben. Wie in Kapitel 2 bereits angedeutet, ist einekritische Sicht auf die fundamentalen Ideen, die ja ein eder wenigen etablierten fachlich –didaktischen Klassifikationen der Informatik darste llen,offensichtlich durchaus angebracht. Z war scheinen, die meisten fundamentalen Ideen die Bruner ’sche Fundamentalitätseigenschaft [Br60] zu erfüllen ,esgibtjedoch auch Ideen, bei d enen diese Eigenschaft kritisch hinterfragt werden sollte. Fundamentale Ideen: Rote Fäden zwischen den Lernzielgraphen? Tabelle 7.1 und die bisherige Diskussion in diesem Kapitel verdeutlichen, dass die fundament alenIdeen –trotz einiger Unklarheiten bzgl. der Brunerschen Forderungen –durchaus geeigne t sind, die in Kapitel 2.3 und 2.4 angesprochenen „Roten Fäden“ zu konkretisieren. Dies sind beispielsweise die Ideen zur Modularisierung (Top –Down –/ Bottom –Up–Methode, Spez ifikation, abstrakter Datentyp) oder die Programmierkonzepte (Konkatenation , Alternative, Iter ation, Rekursion) die in allen Ausbildungsstufen und aufsteigender Komplexität identifiziert werden können. Die Ideen werden dabei in den verschiedenen Entwicklungsstufen durch geei gnete Lernziele „instanziiert “.118 7 Lernzielgraphen im Vergleich mit anderen Klassifizierungen Ein graphisches Modell, das diese Beziehungen repräsentieren könnte, wäre nun kein zwe idimensionaler Lernzielgraph mehr , wie in den Kapiteln 3 –6,sondern ein dreidimensionaler, wobei die verschiedenen Lernzielgrap hen die einzelnen übereinander geschichteten Ebenen bi lden. DieseEbenen sind längs der Lernziele, die in Tabelle 7.1 derselben Idee zugeordnet sind, durch die jeweilige Idee miteinander verbunden. Die seIdeen bilden damit die in Kapitel 2 g enannten „R oten Fäden“ und stehen in gewisser Weise orthogonal auf den Lernzielg raphen . Durch eine derartige Verknüpfung der fundamentalen Ideen mit den hier diskutierten Ler nzielgraphen werden einige Probleme, die in Kapitel 2 beschrieben sind, aufgelöst :Zum einen werden d ie Ideen konkretisiert, indem sie durch Lernziele auf untersc hiedlichen Entwicklung sstufen i nstanziiert, d.h. auf eine didaktisch verwertbare Ebene gebracht werden. (Dies war einer der in Kapitel 2 erwähnten Kritikpunkte) .Im Falle der fundamentalen Idee der Spezifikation geschieht dies etwa auf folgende Weise: In d er objektorientierten Modellierung der 6. Jahrgang sstufe werden verschiedene Klassen graphisch spezifiziert, in der Algorithmik werden bereits einfache, jedoch aufeinander aufbauende Methoden textuell spezifiziert ;in der funktionalen Modellierung spezifiz ieren die Schüler nichtrekursive funktionale Abläufe unter Verwendung von Datentypen aus der Mathematik und in der funktionalen Modellierung im Hochschulb ereich sind beispielsweise rekursive Daten strukturen zu definieren . Dies alles sind prozedurale Ler nziele mit einer kognitiven Dimension 3 oder höher . Allerdings verdeutlicht diese Folge von Lernzielen auch eine bisher kaum erwähnte Problematik: Allein die Kategorisierung eines Ler nziels nach Anderson / Krathwohl [An01] dürfte im Allgemeinen die Schwierigk eit eines Ler nziels nicht hinreichend beschreiben. Um diese Schwierigkeit einzuschätzen, könnte etwa eine genauere Analyse des zugehörigen Lernzielgraphen hilfreich sein. So ist es beispielsweise ein Unterschied, ob für das Erreichen eines Lernziels nur ei n Lernziel erforderlich ist oder mehrere, die u.U. noch durch zirkuläre Abhängigkeiten verknüpft sind: Das Lernziel zur Spezifikation von Klassen hat etwa nur die Lernzielgruppe zum Objektbegriff als Voraussetzung, im Gege nsatz dazu ist das Lernziel zur Sp ezifikation rekursiver Datentypen, wie in Kapitel 6 gezeigt, in zirkulärer Weise von anderen Lernzielen abhängig. Sinnvoll wäre es sicherlich, die se kontext uelle Abhängigkeit der Lernziele in geeigneter Weise zu quantifizieren; dies war jedoch im Ra hmen di eser Arbeit nicht möglich. Neben der Instanziierung der Ideen durch Lernziele wird durch die Zusammenführung fu ndamentaler Ideen mit den Lernzielgraphen in Tabelle 7.1 die Frage der Beziehungen geklärt. Wie in Kapitel 2 detailliert ausgeführt , fehlenbeivielen didaktisch -fachlichen Klassifikationen (z. B. [Sc93], [De07]) die Beziehung enzwischen den Ideen /Great Principles , bzw. werden di ese nur unzureichend thematisiert . Durch die Einbettung der Ideen in die Lernzielgraphen, hat sich diese Situa tion geändert: Die Ideen können als „konzeptuelle rote Fäden “ angesehen we rden, die die Lernzielgraphen verbinden und in gewisser Weise orthogonal zu den Lernzielgr aphen sind. Jeder derartige „ Faden “ wird dabei durch eine Menge von Lernzielen, wie etwa in Tabelle 7.1 angegeben, defi niert. Dadie Lernziele ihrerseits durch Beziehungen miteinander verbunden sind, ist dadurch auch die Frage der Beziehungen zwischen den fundamentalen Ideen geklärt. Das folgende Beispiel erläutert diesen Zusammenhang: Die fundamentale Idee der Alternat ivezählt innerhalb der von Schwill [Sc93] publizierten Gruppierung zu den Programmierko nzepten. Das zugehörige Lernziel nimmt jedoch je nach Modellierungsparadigma eine sehr unte rschiedliche Form an: In der Algorithmik der Jahrga ngsstufe 7 (Abbildung 3.7) ist die Alternative als 2 –1–3 Muster angegeben, das von der Bedingung und von elementaren A nweisungen abhängt. In der funktionalen Modellierung (Abbildung 5.8) wird die Alternative durch die „Wenn“ -Funktion realisiert und ist von völlig anderen Lernzielen abhängig: Unter a nderem v on der Funktion skomposition, von boolesc hen Funktionen und von dem Lernziel zur7.2 Lernzielgraphen und GI –Standards 119 Striktheit. Nimmt man in der objektorientierten Modellierung die Vererbung als Realisierung der Alternative auf der Eben e objektorientierter Datenmodelle hinzu (Abbildung 6.5) so ergibt sich wiederum ein anderer Lernzielkontext. Das Beispiel verdeutlicht , dass die in Kapitel 2 aufgeworfene Frage der Beziehungen zw ischen den fundamentalen Ideen aus lernzieltheoretischer Sic ht nicht eindeutig beantwortet we rden kann, d adie Ideen abhängig vom didaktischen und fachlichen Kontext (objektorientierte, funktionale Modellierung etc.) in sehr unterschiedliche Beziehungsgeflechte eingebunden sind. Allerdings sind die fundamentalen Ideenjedoch offen bardahingehend von großer Bedeutung, als sie aus fachlicher Sicht gewissermaßen die Invarianten darstellen, die unabhängig vom M odellierung sparadigma auftreten. Insofern würde es auch gar keinen Sinn machen, zwischen den fundamentalen Idee n ein einziges Beziehungsgeflecht def inieren zu wollen . Es sollte zum Abschluss dieses Abschnitts betont werden, dass die hier eingeführten Ler nzielgraphen kein alternatives Konzept zu den fundamentalen Ideen darstellen, sondern das s durch die Kombination von Lernzielgraphen mit fundamentalen Ideen wichtige Fragen di daktisch –fachlicher Klassifizierungen beantwortet werden können. Beide Klassifizierungen lassen sich, wie hier erläutert, zu einer neuen Klassifizierung verknüpfen und sie ergänzen sich gege nseitig. 7.2 Lernzielgraphen und GI –Standards Bereits in Abschnitt 4.2.4 wurde erläutert, wie die GI -Standards [GI08] zu den Lernzielgraphen der objektorientierten Modellierung und Algorithmik in der Unterstufe in Beziehung gesetzt werden können. Es sei jedoch nochmals darauf hingewiesen, dass die GI -Standards als Komp etenzen nicht direkt mit den Lernzielen vergleichbar sind, da die hier diskutierten Lernziele und Lernzielgraphen die fachlichen Zusammenhänge detaillierter modellieren als Kompetenze n es aufgrund ihrer Definition können. GI-Standards und funktionale Modellierung Nachzuholen ist an dieser Stelle zunächst der Vergleich mit der funktionalen Modellierung. Diese Art der Modellierung wird in den GI –Standards nicht eigens erwähnt. Das dür fte zum einen daran liegen, dass das funktionale Modellieren mit Rechenblättern in der bundesdeutschen Schulinformatik in dieser Form nur an bayerischen Gymnasien thematisiert wird und zum and erenan der vorläufige nBeschränkung der GI –Standards auf die Sekundarstufe 1. Mit der g eplanten Erweiterung der Standards auf die Sekundarstufe dürfte sich das ändern, zumal da die funktionale M odellierung auch in der EPA [EP04] verankert ist. Obwohl funktionale Modellierung nicht explizit erwähnt, lässt sich in ge eigneter A bstrakt ion deutlich erkennen, dass funktionales Modellieren zahlreichen Anforderungen der GI -Standards genügt. Tabelle 7.2 illustriert dies exemplarisch für die Inhaltsbereiche „Information und D aten“ und „Algorithmen“ bei Schülern der Jahrgangs tufe 8 bis 10. Beiden Inhaltsbereichen „Sprache und Automaten“, „Informatiksysteme“ sowie „Informatik, Mensch und Gesellschaft“ sind die Querbezüge zu den Lernzielgraphen dagegen weniger au sgeprägt. Der Teilbereich „Informatik, Mensch und Gesellschaft“ wi rd lediglich im Lehrplana bschnitt zu Datenbanken im Rahmen des Themas „Datenschutz und Datensicherheit“ behandelt. An dieser Stelle ist zu bemerken, dass Wechselwirkungen der Informatik mit gesellschaftlichen120 7 Lernzielgraphen im Vergleich mit anderen Klassifizierungen Problemstellungen im Rahmen des hier untersucht en Lehrplans eher ein marginal sind. Hierin dürfte der Lehrplan zur Informatik an bayerischen Gymnasien ein gewisses Defizit aufweisen. Tabelle 7.2 Lernziele funktionaler Modellierung und GI –Standards Inhaltsbereiche GI-Standards Lernziele funktional er Modellierung Schüler stellen Information in unterschie dlicher Form darSchüler wandeln Datenflussdi agramme in Terme um Schüler kennen und verwenden die D atentypen Text, Zahl und WahrheitswertSchüler verwenden Wah rheitswerte und Fließko mmazahlen Schüler kennen und verwenden arithmet ische und logische Oper ationenSchüler verwenden Fun ktionen über Wahrheitswe rten und Fließ komma zahlenInformation und Daten Schüler stellen Datentypen und Operati onen formal dar und nutzen sie sachg erechtSchüler erst ellen Datenflussdi agramme Schüler lesen formale Darste llungen von Algorithmen und se tzen sie in Programme umSchüler verstehen und implementi eren Date nflussdiagramme Schüler entwerfen, implementieren und beurteilen Algorit hmenSchüler erstel len Datenflussdi agrammeAlgorithmen Schüler modifizieren und ergänzen Quel ltexte von Pr ogrammen nach VorgabenSchüler vervollständigen Datenflus sdiagramme Die Prozessbereich ewurden bisher im Vergleich der GI –Standards mit den Lernzielgraphen nicht berücksichtig t. Dies soll an dieser Stelle am Beispiel vonEntsprechungen zwischen den Prozessbereiche nder GI –Standards und den Lernzielen funktionalen Modellierens nachgeholt werden. Tabelle 7.3 zeigt für welche Standards (Jahrgangsstufen 8 bis 10) sich innerhalb d er Prozessbereiche Querbezüge erkennen lassen. Tabelle 7.3 Lernziele funktionaler Modellierung und Prozessbereiche innerhalb der GI –Standards Prozessbereiche GI-Standards Lernziele funktionaler M odellierung analysiere n Sachverhalte und erarbeiten angemessene Modelle-Schüler erstellen Datenflussdi agramme ; -Schüler setzen iterat ive Vorgänge auf Rechenblättern umModellieren und Implementieren verwenden bei der Implementierung die algorithmischen Grundbausteine-Schüler verwenden die Funkt ionskompositi on -Schüler verwenden die „Wenn – Funktion“ -Schüler setzen iterat ive Vorgänge auf Rechenblättern um planen Arbeitsabläufe und HandlungsfolgenSchüler erstellen Datenflussdi agramme ; Schüler entwerfen, implementieren und beurtei len Algorit hmenSchüler erstellen Datenflussdi agrammeStrukturieren und Vernetzen Schüler modifizieren und ergänzen Quel ltexte von Pr ogrammen nach VorgabenSchüler vervollständigen Datenflus sdiagramme nutzen Diagramme, Grafiken und Modelle, um sich in formatische Sachverhalte selbstständig zu erarbeitenSchüler erstellen Datenflussdi agrammeDarstellen und I nterpretieren interpretieren Diagramme, Grafiken sowie ErgebnisdatenSchüler interpretieren Datenflussdi agramme Wie schon in Kapitel 4.2.4 ist auch hier zu erkennen, dass die Standards in erster Linie den expliziten Lernzielen der einzelnen Aufgaben und somit den Richtzielen des Lehrplans zug e-7.2 Lernzielgraphen und GI –Standards 121 ordnet werden. Aufgrund des hohen Abstraktionsgrads von Standards ist obige Tabelle stets so zu lesen, dass die jeweiligen Lernziele in d en GI –Standards enthalten sind (nicht umg ekehrt). Die Prozessbereiche „ Begründen und Bewerten“ sowie „Kommunizieren und Kooperi eren sin d in Tabelle 7.3 nicht erfasst, da die untersuchten Aufgabenstellungen diese Bereiche nicht erfas sten. GI–Standards und Lernzielgraphen Ein Aspekt, der bereits bei oberflächlicher Betrachtung der Tabellen 4.9, 7.2 und 7.3 deutlich wird, ist ,dass ein Richtziel in mehreren Standards auftreten kann. So lässt sich etwa das Rich tziel „Schüler erstellen Datenflussdiagramme“ in fast jedem der Standards zu Prozessbereichen in Tabelle 7.3 wieder finden, denn beim Erstellen eines Datenflussdiagramms müssen „Sac hverhalte analysiert werden“ , es muss „eine Handlungsfolge geplant werden“, „es muss ein A lgorithmus entworfen“ werden usw.. Sind die Richtziele etwa zu grob formuliert? Auf den ersten Blick mag es so scheinen, jedoch liegt die Erklärung in einer sehr unterschiedlichen Intention der Standards auf der einen und der Lernzielgraphen auf der anderen Seite. Die Standards ste llen Zielvorgaben dar, die ein Schüler am Ende einer Ausbildungseinheit erreicht haben soll, über den Weg auf dem dieses Ziel zu erreichen ist, machen sie keine Aussagen. Durch die B eschränkung auf die Beschreibung des Ziels können die Standards evidenterweis e detaillierter sein als die Lernzielgraphen. Deren Grundfrage war, wie in Kapitel 1 und 2 erläutert ,eine ganz andere: Es wurde gezeigt, dass die inhaltliche Strukturierung der Informatik aktuell von ve rschiedenen Strömungen geprägt ist und das sdie Zusam menhänge zwischen diesen Strömungen nicht offensichtlich sind. Die Lernzielgraphen wurden de shalb als Werkzeug zur Beschreibung dieser Abhängigkeiten entwickelt. Der Fokus liegt bei den Lernzielgraphen somit auf der Ide ntifizierung didaktischer Strategien und damit auf der Ident ifizierung von möglichen Wegen. Dass hierbei auch die Endzustände dieses Lernprozesses beschrieben werden ist klar, es ist j edoch nicht wesentlich, diesen Endzustand detailliert zu b eschreiben. Auf der anderen Seite ist der Grad der Detailliertheit bei den Standards auch durchaus probl ematisch: Es stellt sich beispielsweise die Frage, worin sich die beiden Standards „planen von Arbeitsabläufen und Handlungsfolgen“ oder „entwerfen, implementieren und beurteilen Alg orithmen“ bei einer typischen Aufgabenstellung der Informatik unterscheiden und worin die G emeinsamkeiten liegen; jeder Algorithmus ist auch stets ein Handlungsablauf. Worin liegen die Unterschiede? Zwischen den Standards „planen von A rbeitsabläufen und Handlungsfolgen“ auf der einen und „entwerfen, implementieren und beurteilen Algorithmen“ auf der anderen Se itedürften teilmengenartige Beziehungen existieren? Solche Beziehungen sollten benannt we rden; sie würden sicherlich zur Übersic htlichkeit der Standards beitragen. Ein weiteres Pro blem tritt auf, wenn man Standards aus verschiedenen Kategorien mitei nander vergleicht: Der Standard „entwerfen, implementieren und beurteilen vonAlgorithmen “ist nicht nur ein Standard in den Prozessbe reichen (Strukturieren und Vernetzen) sondern auch Standard in den Inhaltsbereichen (Algorithmen). Standards können offenbar mehreren Kategorien gleic hzeitig angehören und sind folglich ni cht orthogonal ?Wie bereits in Abschnitt 4.2.4 e rwähnt , scheint es b ei den Standards noch Klärungsbedarf hinsichtlich der Abgrenzung der Standards voneinander, bzw. der Beziehungen zwischen den Standards zu geben. Diese Beziehu ngen sind jedoch durc haus von Wichtigkeit, denn nicht zuletzt dadurch wird das spezifische eines bestimmen Standards deu tlich.122 7 Lernzi elgraphen im Vergleich mit anderen Klassifizierungen8Resümee und Ausblick Ein wesentliches Ziel dieser Arbeit war die Entwicklung einer Methode zur fachlich didakt ischen Strukturierung der Informatik. Hierbei wurde zunächst anhand einer umfangreicheren Analyse der derzeitige Stand entsprechender Klassifizi erungen diskutiert. Dazu wurden zum e inen bestehende Taxonomien , wie etwa die F undamentalen Ideen oder die Great Principles an alysiert und zum anderen einführende Vorlesungen in die Informatik auf ihre inhaltliche Struktur untersucht. Entscheidendes Ergebn is war, dass die bekannten Klassifizierungen Mängel aufwe isen, die den Einsatz in der didaktischen Praxis problematisch machen .Der Blick auf einführe nden Vorlesungen in die Informatik zeigte, dass aus diesen in direkter Weise keine allgemeine Strukturieru ng der Informatik abgeleitet werden kann. Mit der in dieser Arbeit angewandten Methode der Lernzielanalyse konnt en die bei klassischen fachlich -didaktischen Klassifikationen auftretenden Schwierigkeiten, wie die teilweise fehlende empirische Fundierung, f ehlende Detailliertheit in den Beziehungen oder prinzipielle Schwi erigkeiten bei den Beziehungen (Problem der „Nichtorthogonalität“ der fundamentalen Ideen) überwunden werden. Exemplarisch wurden dazu in erster Linie Teilbereiche des Informatiku nterrichts an bayerischen Gymnasien analysiert: Insbesondere war endiesdie objektorientierte Modellierung unddie Grundlagen der Algorithmik in der Unterstufe sowie die funktionale M odellierung in der Mittelstufe. Nach Erarbeiten der Graphen für die genannten Teilbe reiche, konnte im Rahmen einer Synopse auf gemeinsame Lernziele abstrahiert werden und somit ein gemeinsamer Lernzie lgraph skizziert werden. Diese quer zu verschiedenen Teilbereichen der Informatik liegende Lernzielanalyse wurde e rgänzt durch eine Lernzie lanalyse bestimmter Themenbereich emit ansteigender didaktischer Komplexität :Dabei wurde der Lernzielgraph nichtrekursive rfunktionale rModellierung durch die zusätzliche Betrachtung nichtrekursiver und rekursiver Datenstrukturen sowie rekursiver Funktion enpunktuell auf Thematiken der Oberstufe bzw. einführender Vorl esungen an der Hochschule erweitert. DafürdenBereich der Datenstrukturen zusätzlich auch im objektorie ntierten Paradigma eine Lernzielanalyse durchgeführt wurde, ergab sich die Möglichkeit eines Vergleichs unterschiedlicher Lehrstrategien. Es zeigte sich z.B., dass sich die objektorie ntierte Herangehensweise gegenüber einer rein funktionalen Strategie durch einen Lernzielgraphen auszeichnet , der im Bereich der Didaktik rekursiver Strukturen eine sinnvollere Trennung der verschiedenen Lehrphasen e rlaubt. Nachdem zuBeginn der Arbeit die bestehenden fachlichen Kategorisierungen, etwa diefundamentalen Ideen kritisch analysiert wurden , wird zum Abschluss der Arbeit eine Möglichkeit skizziert, wie sich die fundamentalen Ideen in die Lernzielgraphen auf den verschiedenen En twicklungsstufen integ rieren lassen, wobei die aus der Literatur bekannte Strukturierung der fundamentalen Ideen nicht verwendet wird. Stattdessen wirdeine fundamentale Idee alsÜberbegriff gewisser strukturell ähnli cher Lernziele aus Lernzielgraphen unterschiedlicher fachl icher Teilbereiche interpretiert . Die fundamentalen Ideen bilden dabei die verbindenden „roten F äden“, zwischen den Lernzielgraphen unterschiedlicher Entwick lungsstufen und stehen in gewi sser Weise orthogonal auf den Lernzielgraphen . Es ist offensichtlich, dass im Rahmen dieser Arbeit nicht für die gesamten Inhalte der schul ischen Informatik eine Lernzielanalyse durchgeführt werden kann. Insofern konnte w ichtige Teilbereiche, wie etwa die verschiedenen Programmierparadigmen, darunter etwa das objektor ientierte Programmieren, nicht vollständig analysiert werden. Des Weiteren blieb en wichtige B e-124 reiche der Schulinformatik wie etwa die Zustandsmodellierung vol lkommen unberücksichtigt. Aus der Theoretischen Informatik wurden abgesehen von rekursiven Sprachstrukturen, deren Lernzielgraph im Zuge rekursiver Datenstrukturen angesprochen wurde, keine detaillierten Analysen durchg eführt. Erste Ansätze einer Lernzie lanalyse im Bereich einführender Vorlesungen in die Informatik wurden vom Autor dieser Arbeit in [St07a] veröffentlicht. Eine umfassende Analyse etwa durch detaillierte Diskussion von Vorlesungen wie sie in Kapitel 2 angesprochen wurden, war im Rahmen dies er Arbeit nicht möglich. Eine umf assende Lernzielanalyse, die die Schul -und Hochschulinformatik (zumindest im Bereich einführender Vorlesungen) umfasst, wäre jedoch angesichts des zum Teil noch immer u neinheitlichen Bildes der Informatik sicherlich äußers t hilfreich. Ein praktisches –wenn auch theoretisch weniger relevantes –Problem, das sich b ereits im Rahmen dieser Arbeit angedeutet hat, müsste vor einer derartigen umfassenden Ler nzielanalyse allerdings gelöst werden: Die Darstellung der Lernzielgraphe n wird mit zunehme nder Zahl der Lernziele und zunehmender Vernetzung so komplex, dass die Entwicklung eines entsprechenden Repräsentationswerkzeug erforde rlich wäre. Weitere Arbeitsfelder , die im Verlauf der Arbeit nur angedeutet wurden ,liegen im Bereich einer empirischen Lernzielerfolgsanalyse und bei der empirischen Verifikation des Lernzielgr aphen : Wie in Kapitel 3 gezeigt, kann durch Verwendung vonAufgabengruppen mit gemeins amen und disjunkten Lernzielen die Leistungen in einzelnen impliziten Lernziel enbestimmt werden, obwohl dies zunächst nur für die expliziten Lernziele möglich ist. Hier ist zum einen das Konzipieren entsprechender Aufgabengruppen erforderlich, zum anderen werden aber auch Arbeiten benötigt, die die Lernzielerfolgsanalyse formal und mathematisch fundieren. Dieempirisch eVerifikation basiert, wie in Kapitel 3 skizziert, ebenfalls auf diesen speziellen Aufgabe ngruppen, die es erlauben, einzelne Beziehungen auf ihre Relevanz im praktischen Unterricht zu analysieren. Eine derartige Veri fikation würde die Lernzielgraphen auf eine breitere Basis ste llen,als es im Rahmen dieser Arbeit möglich war. Neben dem didaktisch -strukturierenden Nutzen könnte die Lernzielanalyse auch im Bereich der Lernunterstüt zungssysteme hilfreich sein: Ein Ler nzielgraph wird aus konkreten Aufgaben entwickelt und repräsentiert insofern diedarin enthaltene nimplizite nund explizite nLernziele. Wie oben erwähnt, ist es bei Vergleich der Leistungen eines Lernenden in Aufgaben mit g emeinsamen und disjunkten Lernzie len möglich, die Leistungen in einzelnen impliziten Lernzi elen zu ermitteln. Die Lernzielanalyse bietet somit die Möglichkeit bei einem Lernenden diejenigen impliziten Lernziele zu ermitteln , in denen er Schwächen aufweist. Es könnten ihm demzufolge geziel t Problemste llungen zur Verfügung gestellt werden , die diese Schwächen ausgleichen. Diese Methode könnte beispielsweise in ein E-Learning -System integriert werden, das einem Lernenden individuell passende Aufgaben bereitstellt . Der Einsatz von Lernz ielgraphen ist dabei im Prinzip nicht auf die Informatik beschränkt. Man könnte sich ohne weiteres auch in Fächer mit ähnlichen Strukturen, wie etwa in der Mathematik oder der Physik, derartige elektronische Unterstützungssysteme vorstellen, denn die Prinz ipien des Lernzielgraphen sind, wie diese Arbeit zeigt, offensichtlich nicht auf die Informatik b eschränkt. Insofern könnte der Lernzielgraph durchaus als allgemeines didaktisches Instrument angesehen werden, dessen Ursprünge zwar in der Informatik liegen, dessen W irkung aber auf viele andere Bereiche der Didaktik ausstrahlt.125126Anhang A: Exemplarische Lernzielbeschreibung einführender Lehrveranstaltungen in die Informatik Im vorliegenden Anhang werden für einige Mitglieder der so genannten TU9 (die neun fü hrenden Technischen Universitäten in Deutschland) die Module zur Einführung in die Informatik angegeben. Sie bilden die Grundlage der in Kapitel 2 durchgeführten Analyse der Lernziele ei nführender Lehrveranstaltungen in die Inform atik. A.1Modulbeschreibungen zur Einführung in die Informatik (TU9) RWTH Aachen Die folgende Modulbe schreibung ist der [RW06 ] entnommen Tabelle A.1RWTH Aachen: Programmierung Titel des Moduls Programmierung Fachsemester 1 SWST 4 Inhalt Sprachbeschreibung durch Grammatiken und Syntaxdi agramme Imperative Programmierkonzepte: Variablen -und Typkonzep te (z.B. primitive Datentypen, Arrays, Records, Enumerations, etc.) sowie Typkonve rsionen Kontrollstrukturen (Sequenz, Verzweigung, Schleifen, etc.) Grundlagen der Verifikation einfacher Progra mme Pointer, Seiteneffekte und Grundlagen der Speicherve rwaltun g Funktionen, Prozeduren und Parameterübergabeverfa hren (call -by-value, call-by-reference) Rekursive Funktionen und rekursive (lineare) Datenstrukturen (z.B. Listen, Stacks, Queues, etc.) Grundlegende Beispielprogramme (z.B. einfache Such -und Sortieralgor ithmen) Objektorientierte Konzepte: Vererbung, Polymorphie, Dynamisches Binden Abstrakte Klassen und Interfaces Grundlegende Programmiertechniken in imperativen und objektorientierten Sprachen (z.B. Datenabstraktion, Modu larisierung, Schnittstellendokumen tation, etc.) Funktionale Konzepte: Deklarationen, Ausdrücke, Pattern Matching, Auswe rtungsstrategien (call by-value, call -by-name) Typkonzepte und Polymorphie Einfache Funktionen höherer Ordnung Logische Konzepte: Fakten und Regeln Unifikation und Bearb eitung von Anfragen128 Anhang A: Exemplarische Lernzielbeschreibung einführender Lehrveranstaltungen in die Informatik Lernziele Erwerb der folgenden Kenntnisse und Fähigkeiten: Beherrschung der wesentl ichen Konzepte imperativer und objektorientierter Programmiersprachen sowie wichtiger Programmiertechniken in diesen Sprachen; Kenntnis der Progra mmierk onzepte logischer und funktionaler Progra mmiersprachen; Kenntnis grundlegender Datenstrukturen und ihrer Realisierung in verschiedenen Pr ogrammierparadigmen; Fähigkeit zur selbständigen Entwicklung kleinerer Pr ogramme und ihrer Dokumentation unter Beachtun g üblicher Programmierko nventionen; Kenntnis grundlegender Beschreibungsformen für Programmiersprachen; Grundkenntnisse der Programmver ifikation TU–Berlin Die folgende Modulbeschreibung ist unter [TBe08] zu finden Tabelle A2. Titel des Moduls Algorith mische und funktionale Lösung diskreter Pro bleme Fachsemester 1 SWST 4 + 2 Qualifikationsziele Sicherer Umgang mit Programmierumgebungen auf Arbeitsplatzrechnern; Beherrschung der Technik und Methodik der Funktionalen Programmi erung; Verständnis grundle gender Datentypen sowie der Verfahren von Aufwand sabschätzungen und Korrektheitsbeweise ; Fe rtigkeit in Argumentation und formaler Darstellung von Lösungen ausgewählter Probleme Inhalte Funktionales Programmieren und Werkzeu ggebrauch Konzepte und Aufbau d er verwendeten funktionalen Programmiersprache Elemente funktionaler Programmierung (Parameter, Auswahl, Rekursion, Modularisierung, ... ) Funktionsdefinition, Rekursion und höhere Ordnu ngen Syntax, Semantik, Pragmatik, lexikalische und synta ktische Analys e (nur in Grundz ügen) Typisierung, Basistypen, Typkonstruktionsmechani smen, Generizität Wertorientierung versus Zustandorienti erung Spezifikation und Dokumentation Grundlegende Datentypen und darauf definierte Alg orithmen Funktionale Lösung ausgewählter Pr obleme Algorithmische Lösungen mit Aufwandsabschä tzung Terminationsbedingungen für funktionale Pr ogramme Datentypen: Zahlen, Wörter, Listen und Bäume Probleme: Arithmetik, Suchen, Sortieren und Trave rsieren TU Braunschweig An der TU Braunschweig werden d ie in Aachen, Berlin und München vermittelten Inhalte auf zwei parallele Vorlesungen verteilt: „Programmieren I“ und sowie „Algorithmen und Date nstrukturen“. Beide Vorlesungen sind für das erste Semester konzipiert. folgende Modulb eschreibung ist unter [T Br08] zu finden:A.1 Modulbeschreibungen zur Einführung in die Informatik (TU9) 129 Tabelle A3. Titel des Moduls Programmieren I Fachsemester 1 SWST 2 + 1 Qualifikationsziele In der Veranstaltung werden die Grundlagen der imperativen und objektor ientierten Programmierung anhand der Beispielsprache Java vermittelt. Die Studierenden sind nach Abschluss des Moduls in der Lage kleinere Pr ogramme in Java zu schreiben. Inhalt In der Vorlesung »Programmieren I« werden die Grun dlagen der imperativen und objektorientierten Progra mmierung anhand der Programmiersprache »Java« be sprochen und in der Übung, in der die Teilnehmer kleine Pr ogramme selbstständig entwickeln sollen, angewendet. Die Hörer(innen) sol lten parallel die Vorlesung » Algorithmen und Datenstrukturen« besuchen. Der zweite Teil der Veranstaltung erweitert und vert ieft die im ersten Seme ster erworbenen Kenntnisse. In den Übungen werden Datenstrukturen wie Li sten, Bäume und Graphen sowie Such -und Sortierverfahren programmiert. Darüber hinaus werden die Grundlagen der Parallel -und der Grafikpr ogrammierung behandelt. Tabelle A4. Titel des Moduls Algorithmen und Datenstrukturen Fachsemester 1 SWST 4 + 2 Qualifikationsziele Inhalt Themenbereiche sind: Algorithmenbegriff Programmierparadigmen Listen, Bäume, Graphen Abstrakte Datentypen Korrektheit und Komplexität von Alg orithmen Sortier -und Suchverfahren Algorithmenkonstruktion TU–München Die folgende Modulbeschreibung ist unter [TM08] zu finden: Tabelle A5. Titel des Moduls Einführung in die Informatik I Fachsemester 1 SWST 4 Lernziele Teilnehmer versteh en die wesentlichen Konzepte der I nformatik auf einem grundlegenden, nicht zu tiefg ehenden, jedoch wissenschaftlichen Niveau. Sie können in Java oder einer ähnlichen objektorientierten Sprache überschaubare algorithmische Probleme lösen und einfache vertei lte und nebenläufige A nwendungen programmieren. Sie verstehen die diesen Programmiersprachen zugrundeliegenden Konzepte und Modelle und sind in der Lage, andere zuwe isungs -undobjektorientierte Programmiersprachen eigenständig zu erle rnen.130 Anhang A: Exemplarische Lernzielbeschreibung einführender Lehrveranstaltungen in die Informatik Inhalte In den Modulen IN0001 und IN0003 we rden folgende Inhalte behandelt : Information und ihre Repräsentation Einfache Datenstrukturen: Atome und Sequenzen: Zeichen und Zeichenre ihen, Zahlen Definition des Algorithmus über den Funktionsbe griff: Vom Funktionsbegriff zum Begriff des Alg orithmus Komposition von Funktionsaufrufen ohne R ekursion Rekursive Algorithmen Algebraische Modellierung von Algorithmen und D atenstrukturen Beispiele: Sortieren, Sequenzen von Atomen, bzw. S equenzen Mustersuche Rekursive Datenstruktur en: Listen und Bäume Typisierung, parametrischer Pol ymorphismus Terminierung funktionaler Modelle durch elementare Induktion Zuweisungsorientiertes Paradigma: Sprachkonstrukte: Bedingte Anweisung, Iteration, S equenz Datenstrukturen: Felder, Records, Refer enzen, Zeiger Objektorientiertes Modellieren und Implementi eren Klassen -und Objektbegriff Graphische Modellierung Subtyppolymorphismus, Vere rbung Schnittstellen Verifikation zuweisungsorientierter Mode lle Algorithmen und dynamische Datenstrukturen im zuw eisungsorientierten Paradi gma: Algorithmische Prinzipien: Divide and Conquer, Gre edy, ... Verkettete Listen, Bäume, Hashing, einfache Graphen Effizienzanalyse (informell) anhand vorstehender Datenstrukt uren Ausblick: Deklarative und logische Programmi erung Definition der Syntax durch Grammatiken Modellierung von zustandsbehaftete Systemen durch Automaten Grundlegende Konzepte des nebenläufigen Progra mmierens Schwer -und leichtgewichtige Prozesse, Prozesszustände und Operationen auf Prozessen Aktionen un d Ereignisse Praktische Umsetzung dieser Konzepte in einigen Programmierspr achen Spezifikation zeitlichen Verhaltens und Einplanungen: Synchrone und asy nchrone Ablaufm odelle Synchronisation und Kommunikation Semaphore, Monitore, Erzeuger -Verbraucher, Les er-Schreiber Synchrone/asynchrone Kommun ikation Rendez -Vous als Beispiel für aktionsorientierte Ko mmunikationA.2 Kategorisierung der Lernz iele nach Anderson/Krathwohl 131 A.2Kategorisierung der Lernziele nach Anderson/Krathwo hl RWTHAachen Tabelle A.6Lernziele der Lehrveranstaltung „Programmierung“ Lernziel Katego rie. 1.Wesentliche Konzepte imperativer Programmiersprachen beherrschen B/≥4 2.Wesentliche Konzepte funktionaler Programmiersprachen beherrschen B/≥4 3.Wesentliche Konzepte imperativer Programmiertechniken beherrschen C/≥4 4.Wesentliche Konzepte funkt ionaler Programmiertechniken beher rschen C/≥4 5.Kenntnis der Programmierkonzepte logischer Progra mmiersprachen B /≥1 6.Kenntnis der Programmierkonzepte funktionaler Progra mmiersprachen B /≥1 7.Kenntnis g rundlegender Datenstrukturen in verschiedenen Prog rammierparadi gmenB /≥1 8.Realisierung grundlegender Datenstrukturen in verschiedenen Programmierpar adigme nB /≥3 9.Fähigkeit zur selbständigen Entwicklung kleinerer Programme unter Beachtung üblicher Programmierko nventionenC /≥4 10.Fähigkeit zur Doku mentation kleinerer Programme unter Beachtung üblicher Progra mmierkonventionenC /≥2 11.Kenntnis grundlegender Beschreibungsformen für Programmiersprachen C /≥1 12.Grundkenntnisse der Programmver ifikation C /≥1 Die Lernziele die mit dem Wort „Kenntnis“ eingeleitet werden, können nur schwer kategor isiert werden. Während bei den Lernzielen 5 –7 das Wort Kenntnis durchaus mit dem Verb „e rkennen“ interpretiert werden kann und damit der 1. kognitiven Stufen zugeordnet werden muss, macht diese Interpretation bei den Lernzielen 11 und 12 keinen Sinn, denn Programmverifikat ion oder auch Beschreibungsformen von Programmiersprachen sollten sinnvoller weise minde stens auf dem Niveau der Anwendung angestrebt werden. Aus diesem Grund wurde den Ler nzielen 5 –7 sowie 11 und 12 nur eine untere Grenze der kognitiven Dimension zugeordnet. TU Berlin Tabelle A. 7 Lernziele der Lehrveranstaltung „ Algorithmische und funktionale Lösung diskreter Probl eme“ Lernziel Kategorie . 1.Sicherer Umgang mit Programmierumgebungen auf Ar beitsplatzrechnern C /≥4 2.Beherrschung der Techn ik und Methodik der f unktionalen Programmi erung C /≥4 3.Verständnis grundlegender Datentypen B / 2 4.Verständnis der Verfahren von Aufwandsabschätzungen C/ 2 5.Verständnis der Verfahren Korrektheitsbeweise B / 2 6.Fertigkeit in Argumentation und formaler Darstellung von Lösungen ausgewäh lter ProblemeC /≥4132 Anhang A: Exemplarische Lernzielbeschreibung einführender Lehrveranstaltungen in die Informatik Die Kategorisierung der Lernziele 1 und 6 bedarf einer Erläuterung: Der „sichere Umgang“ in Lernziel 1 wurde als differenzierter Einsatz der Programmierumgebungen interpre tiert und ist insofern mindestens die kognitive Stufe 4. Das Wort „Fertigkeit in Argumentation“ in Lernziel 6 wurde als analytische Täti gkeit interpretiert und ist somit ebenso mindestens der Stufe 4 zu zuordnen. TU Braunschweig Tabelle A.8Lernziele der Lehrveranstaltung „Programmieren I “ Lernziel Kategorie . 1.Vermittlung der Grundlagen der imperativen Programmierung mit Java C /≥1 2.Vermittlung der Grundlagen der objektorientierten Programmierung mit Java C /≥1 3.Fähigkeit kleinere Programme in Java zu schreiben C/≥4 TU München Tabelle A.9Lernziele der Lehrveranstaltung „E inführung in die Informatik I “ Lernziel Kategorie . 1.Die wesentlichen Konzepte der Informatik auf einem grundlegenden, wisse nschaftlichen Niveau verstehenC /2 2.In Java oder einer ähnlichen objektorientierten Sprache überschaubare algorit hmische Probleme lösenC /≥4 3.Die Konzepte und Modelle von Java o der einer ähnlichen objektorientierten Sprache verstehenB / 2 4.Einfache verteilte und nebenläufige A nwendungen programmieren. C /≥4 5.Inder Lage sein, andere zuweisungs -undobjektorientierte Pr ogrammiersprachen eigenständig zu erlernen.D /≥3 Neben den Lernzielen wird in den Modulkatalogen auch von Inhalten gesprochen. Die Inha lte sind sehr viel stärker ausdifferenziert, jedoch nicht in Form von Lernzielen angegeben. Eine Klassifizierung der Inhalte ist deshalb hier nicht möglich.Anhang B:Aufgabensammlung für die Lernzielanalyse Der vorliegende Anhang präsentiert die Aufgaben für die in den Kapiteln 3 –6 eine Lernzie lanalyse durchgeführt wurde B.1Aufgaben zum Teilbereich Algorithmik im Rahmen des Faches Natur und Technik in Jah rgangstufe 7 In den folgenden Aufgaben wird eine einfache Programmiersprache für Kinder verwendet. „Hauptperson“ ist ein Roboter, der sich in einer zweidimensionalen kartesischen Welt bewegen kann und dabei Ziegel aufheben oder Koordinatenpunkte markieren kann. Aufgabe 1: S elbstdefinierte Methoden Gib eine selbstdefinierte Methode an, mit deren Hilfe der Roboter zehn Ziegelsteine aufeinander stapelt . Die Methode soll möglichst kurz sein! Aufgabe 1 (Lösung) Anweisung TurmBauen Wiederhole 10 mal Hinlegen * wiederhole *Anweisung Aufgabe 2: S elbstdefinierte Methoden Aufgabe 2 (Lösung) Gegeben ist folgende Anweisungsfolge: wiederhole 4 mal wiederhole 2 mal markeSetzen schritt *wiederhole linksDrehen schritt rechtsdrehen *wiederhole Skizziere auf der rechts angegebe nen Welt das entst ehende Muster. (Hinweis: Der Rob oter steht in der linken oberen Ecke und schaut nach unten) Aufgabe 3:Fahrscheinkontrolle ! Die Fahrscheinkontrolleure in den U -und S -Bahnen führen eine Kontrolle auf folgende Weise durch: Solange die U -/S-Bahn fährt, überprüfen Sie die Fahrgäste der Reihe nach; hat ein Fah rgast keine gültige Karte bei sich, so werden seine Personalien festgehalten und er wird aufg efordert beim nächsten Halt auszusteigen.X X X X X X X X134 Anhang B: Aufgabensammlung für die Lernzielanalyse Beschreibe die Vorgehensweise eines U -Bahnkontro lleurs mithilfe der aus dem Unterricht b ekannten Kontrollstrukturen (Wiederholung, Entscheidung). Verwende dabei geeignete Bedi ngungen! Aufgabe 3 (Lösung) Wiederhole solange Bahn fährt Überprüfe Nächsten Fahrgast Wenn NichtHatFahrschein Dann Personalien festhalten Zum Aussteigen auffordern *Wenn *Wiederhole Aufgabe 4: Ausfüllen eines Quadrates mit Ziegeln Der Roboter steht wie in der Abbildung g ezeigt in einem Quadrat, das von Ziegeln u mrandet ist. Ziel der Aufgabe ist es, das ganze Quadrat mit Ziegeln aufzufüllen. Schreibe e ine Anweisung, so dass der Roboter entlang der eingezeichneten, spiralförmigen Linie zum Mittelpunkt des Quadrates läuft und d abei stets einen Ziegel ablegt, sofern das Feld noch frei ist. Der Mitte lpunkt des Quadr ates und damit das Ende des Weges ist durch ein markiertes Feld gekennzeic hnet! Hinweis: Verwende zur Lösung Wiederh olungen mit Bedingungen und Entscheidungen. Als vordefinierte Bedingungen kannst Du „istZiegel“, „nichtIstZiegel“, „istMarke“, s owie „nic htIstMarke“ verwenden ! Aufgabe 4 (Lösung) Anweisung quadrat wiederhole solange Nic htIstMarke wenn istZiegel Dann LinksDrehen Sonst Hinlegen Schritt *wenn *wiederhole *Anweisung B.2 Aufgaben der Lernstandserhebungen in Informatik (Natur und Technik) aus den Jahren 2005/2006 und 2006/2007 135 B.2Aufgaben der Lernstandserhebungen in Informatik (Natur und Technik) aus den Jahren 2005/2006 und 2006/2007 Im folgenden werden die Aufgaben zur Informatik aus den Lernstandserhebungen im Fach „N atur und Technik“ aus den Schuljahren 2005/2006 und 2006/2007 vorgestellt. Der Abdruck e rfolgt mit freundlich er Genehmigung des Staatsinstituts für Schulqualität und Bildungsforschung München Prüfungsaufgaben aus dem Schuljahr 2005/2006 Der erste Aufgabenblock thematisiert Grundwissen zum Objekt -und Klassenbegriff im Kontext von Vektorgraphiken: Abb. B.1 Lerns tandserhebung 2005/2006: Objekte in Vektorgraphiken .136 Anhang B: Aufgabensammlung für die Lernzielanalyse Im nächsten Aufgabenteil wird der Begriff der Aggregation in alltäglichem Kontext g eprüft: Abb. B.2 Lernstandserhebung 2005/2006: Aggregation in alltäglichen Zusammenhängen . Prüfungsaufgaben a us dem Schuljahr 2006/2007 Im Schuljahr 2006/2007 wurde im Gegensatz zum Vorjahr auch Objektstrukturen in Textd okumenten geprüft: B.2 Aufgaben der Lernstandserhebungen in Informatik (Natur und Techni k) aus den Jahren 2005/2006 und 2006/2007 137 Abb. B.3Lernstandserhebung 2006/2007: Objektstrukturen in Textdokumenten . Abb. B.4 Lernstandserhebung 2006/2007: Objek tstrukturen in Graphikdokumenten . Die weiteren Aufgaben thematisieren hierarchische Objektstrukturen. Hierbei wird sowohl das rekursive Klassendiagramm als auch eine konkrete Instanziierung des Klassendiagramms diskutiert: 138 Anhang B: Aufgabensammlung für die Lernzielanalyse Abb. B.5 Lernstandserhebung 2006/2007: Hierarchische Objektstrukturen . B.3Aufgaben zur Funktionalen Modellierung Die hier angegebenen Aufgaben stammen zum Teil aus dem Schulbuch Informatik 2 [Hu07 a] für die Jahrgangstufe 9, die Verwendung erfolgt mit freundlicher Genehmigung des K lettVerlags. Die Aufgaben wurden im Schuljahr 2007/2008 am Carl -Orff-Gymnasium vom Autor dieser Arbeit im Rahmen dreier Stegreifaufgaben in zwei parallelen Klassen als Prüfungsaufg aben g estellt. Die folgenden Abschnitte zeigen zum einen die einzelnen Aufg abenstellungen und die zugehörigen Lösungen. Zum anderen enthalten sie auch statistische Analysen der Schüle rleistungen in diesen Aufgaben. Dabei ist für jede Teilaufgabe die (absolute) Häufigkeit mit der eine bestimmte rel ative Punktezahl erreicht wurde, angegeben. B.3.1 Zuordnungen In der ersten Stegreifaufgabe (B.3.1 und B.3.2) wurde die L eistungen der Schüler im Th emenbereich „Zuordnung“ evaluiert. Dabei wurden folgende Aufgaben aus [Hu07 a] herangez ogen(dieLösungen istjeweils angeg eben): Stegreifaufg abe 1, Aufgabe 1: Königliche Zuordnungen Der angegebene Stammbaum zeigt einen Ausschnitt aus dem Stammbaum des englischen Königshauses1. Ein Stammbaum kann als Darstellung der Zuordnung „ist direkter Vorfahr von“ i nterpretiert werden. 1Der Abdruck erfolgt mit freundlicher Genehmigung des Klett -VerlagsB.3 Aufgaben zur Funktionalen Modellierung 139 a)Stelle die Zuordn ung „ist direkter Vorfahr von“ als Matrix dar (Kürze die Namen ab!). Lösung: b)Wie ergibt sich die Zuordnung „ist direkter Nachfahr von“ aus der Matrix der vo rhergehenden Teilaufgabe ? Lösung: Die Zuordnung „ist direkter Nachfahr von“ ergibt sich durch Spieg elung an der Diagonalen . Es handelt sich um die Umkehrzuordnung c)Die Zuordnung „ist Vorfahr von“ ist allgemeiner als die Zuordnung „ist direkter Vorfahr von“. Beispielsweise ist Queen Elizabeth II. Vorfahr von Prince William of Wales, aber kein direkter Vorfahr. Stelle die Zuord nung „ist Vorfahr von“ als Pfei ldiagramm dar. Lösung: Queen Princess David Lady Charles Margarita Samuel ArthurQueen Princess David Lady Charles Margarita Samuel ArthurIst direkter Vo rfahr vonQueen Princes sDavid Lady Charles Marg aritaSamuel Arthur Queen Princessx x Davidx x Ladyx x Charles Margarita Samuel Arthur140 Anhang B: Aufgabensammlung für die Lernzielanalyse Auswertung der Schülerleistungen Aufgabe 3-1-a 05101520253035 0 0,25 0,375 0,5 0,75 0,875 1 relative Punktzahlabs.Häufigkeit männlich w eiblich gesamt Aufgabe 3-1-b 0510152025 0 0,5 1 relative Punktzahlabs.Häufigkeit männlich w eiblich gesamt Aufgabe 3-1-c 02468101214161820 0,00 0,17 0,33 0,50 0,67 1,00 relative Punktzahlabs.Häufigkeit männlich w eiblich gesamtB.3 Aufgaben zur Funktionalen Modellierung 141 B.3.2 Iterationen mit Rechenblättern Die zweite Aufgabe der ersten Stegreifaufgabe thematisierte die Iteration auf Rechenblättern: Stegreifaufgabe 1, Aufgabe 2:Grundwissen Um die Leistung in einer Schulaufgabe beurteilen zu können, ist der sogenannte Notenspiegel hilfreich. Er gibt an, wie viele Schüler die Note 1, 2, . . ., 6 erreicht haben. Für die Einschä tzung der eigenen Note ist es jedoch oft hilfreicher zu wissen, wie viele Schüler die Prüfung minde stens mit der Note 1, 2, . . ., 6 absolviert haben. Füge in den Zellen B3 bis G3 Formeln derart ein, dass jeweils berechnet wird, wie viele Schüler mindestens die Note 1, mindestens die Note 2, …., mindestens d ie Note 6 haben. Die Formeln sollen dabei möglichst durch K opieren e rzeugt werden! A B C D E F G 1Note 1 2 3 4 5 6 2Anzahl 1 6 4 2 6 3 3Anzahl der Sch üler, die minde stens die Note erreicht h aben= A2 = B3 + C2 = C3 + D2 = D3 + E2 = E3 + F2 = F3 + G 2 (Die Lösungen sind in den Zellen B3 bis G3 fett eingetragen!) Auswertung der Schülerleistungen Aufgabe 3-2 0246810121416 0 0,1 0,2 0,4 0,5 0,8 0,9 1 relative Punktzahlabs.Häufigkeit männlich w eiblich gesamt B.3.3 Vom Datenflussdiagramme zum Term In der zweiten Stegreifaufgabe (B.3.3, B.3.4, B.3.5) wurde das Arbeiten mit Datenflussdi agrammen in unterschiedlich en Komplexitätsstufen evaluiert. Dazu musste in der ersten Aufgabe zu einem Datenflussdiagramm der entsprechende Term angegeben werden.142 Anhang B: Aufgabensa mmlung für die Lernzielanalyse Stegreifaufgabe 2, Aufgabe 1: Notenberechnung Das angegebene Datenflussdiagramm2zeigt die Berechnung der Mathematiknot e. Wandle es in einen Term um und verwende dabei nach Möglichkeit Infixnot ation. Lösung: Runden( Mittelwert(md1, md2, ex2, ex3) + 2 * Mittelwert(sa1, sa2, sa3, sa4) / 3) Auswertung der Schülerleistungen Aufgabe 3-3 012345678910 0 0,2 0,4 0,6 0,8 0,9 1 relative Punktzahlabs.Häufigkeit männlich w eiblich gesamt B.3.4 Vervollständigen von Datenflussdiagrammen In einer weiteren Aufgabe der zweiten Stegreifaufgabe musste ein strukturell vorgegebenes Datenflussdiagramm vervollständigt werden. Die Cäsarchiffrierung war den Schülern aus der vorhergehenden Stunde bekannt; insofern handelte es sich also um eine reine Wiederholung saufgabe . 2Der Abdruck erfolgt mit freundlicher Genehmigung des Klett -VerlagsB.3 Aufgaben zur Funktionalen Modellierung 143 Stegreifaufgabe 2, Aufgabe 2: Cäsarchiffrierung Fülle das angegebene Datenflussdiagramm derart aus, dass damit ein Zeichen gemäß der C äsarchiffrierung codiert wird. Lösung: (Die folgende Abbildung gibt auf der linken Seite das den Schülern zur Verfügung gestellte unvollständige Datenflussdiagramm an und auf der rechten Seite die Lösung) Zeichen Code Schlüssel Add Rest128 Decode Auswertung der Schülerleistungen Aufgabe 3-4 0510152025303540 0,25 0,5 0,625 0,75 1 relative Punktzahlabs.Häufigkeit männlich w eiblich gesamt B.3.5 Erstellen von Datenflussdiagrammen Im Gegensatz zur vorhergehenden Aufgabe ist für die folgende das Datenflussdiagramm ko mplett zu erstellen. Ähnliche Berechnungen hatten die Schüler zwar im Unterricht durchgeführt, der spezielle Kontext ist jedoch neu Stegreifaufgabe 2 Aufgabe 3: Jährliche Zinsen Herr Mayer legt sein Kapital als so genanntes Festgeld für ein Jahr zu einem Zinssatz von 3,8% an. a)Gib das Datenflussdiagramm an, das das Gesamtkapital nach einem Jahr b eschreibt.144 Anhang B: Aufgabensammlung für die Lernzielanalyse b)Im zweiten Jahr wird der Zins auf 4,1% erhöht, erweitere das Datenflussdi agramm derart, dass auch die Berechnun g des Kapitals nach dem zweiten Jahr dargestellt wird +*3,8% Kapital Runden (2Stellen )+*4,1%+*3,8% Kapital Runden (2Stellen )Lösung : c)Das Rechenblatt soll das Kapital nach dem ersten und nach dem zweiten Jahr b erechnen. Gib im angegebenen Rechenblatt, die entsprechenden Terme an. (Die Lösung ist in der folgenden Abbildung fett geken nzeichnet) A B C D 1Kapital 10000 2Kapital nach einem Jahr = Runden(B1 * D2 + B1; 2) Zins im 1. Jahr 3,8 % 3Kapital nach zwei Ja hren = Runden(B2 * D3 + B2; 2) Zins im 2. Jahr 4,1 %B.3 Aufgaben zur Funktionalen Modellierung 145 Auswertung der Schülerleistungen Aufgabe 3-5a 051015202530 0 0,5 0,75 1 relative Punktzahlabs.Häufigkeit männlich w eiblich gesamt Aufgabe 3-5b 02468101214161820 0 0,25 0,5 0,75 1 relative Punktzahlabs.Häufigkeit männlich w eiblich gesamt Aufgabe 3-5c 0246810121416 0,00 0,17 0,33 0,50 0,67 0,83 1,00 relative Punktzahlabs.Häufigkeit männlich w eiblich gesamt146 Anhang B: Aufgabensammlung für die Lernzielanalyse B.3.6 Bedingte Ausdrücke (Vervollständigen von DFD) In einer letzten Stegreifaufgabe (B.3.6, B.3.7, B.3.8) wurden die Fertigkeiten der Schüler bei funktionalen Ausdrücken, die bedingte Terme enthalten, geprüft. Diese Prüfung wurde zum A bschluss einer längeren Übungsphase durchgef ührt, wobei parallel bereits die nächste Lehrpla nthematik (Datenmodellierung) begonnnen wurde. Inderersten Aufgaben sollte ein Datenflus sdiagramm vervoll -ständigt we rden. Stegreifaufgabe 3, Aufgabe 1: Telegrammpreise Bei der Post kosten Telegramme bis zu zehn Wörtern 14,83 €; für Max itelegramme (bis zu 30 Wörtern) muss man 17,90 €bezahlen und für je weitere zehn Wörter 5,11 €. Ergänze das angegebene Datenflussdiagramm (Abbildung B.7 links ) derart, dass bei Eingabe der Anzahl der Wörter der Telegrammpreis berechnet wird! Lösung Angabe Text <10 Wenn14,83 Wenn<30 Sub30 Div10 Mult5,11 Add17,9 17,9Anzahl der Worte AufrundenAnzahl der WorteB.3 Aufgaben zur Funktionalen Modellierung 147 Auswertung der Schülerleistungen Aufgabe 3-6 024681012141618 0,17 0,33 0,50 0,58 0,67 0,75 0,83 0,92 1,00 relative Punktzahlabs.Häufigkeit männlich w eiblich gesamt148 Anhang B: Aufgabensammlung für die Lernzielanalyse B.3.7 Interpretation von DFD mit bedingten Ausdrücken Stegreifaufgabe 3, Aufgabe 2: Schaltjahre Das angegebene Datenflussdiagramm3beschreibt, ob es sich bei einem Jahr um ein Schal tjahr handelt. a)Übersetze das Diagramm in einen Term! Lösung: WENN(istTeilbar(Jahreszahl; 4); WENN(istTeilbar(Jahreszahl; 100); WENN( istTeilbar(Jahreszahl, 400); „Schaltjahr“; „Ke in Schaltjahr“) ) ) b)Entscheide aufgrund des Datenflussdi agramms. Ja Nein Das Jahr 2003 ist ein Schaltjahr X Das Jahr 2016 ist ein Schaltjahr X Das Jahr 1900 ist ein Schaltjahr X DasJahr 2000 ist ein Schaltjahr X c)Gib in eigenen Worten die Regel an, wann ein Jahr ein Schaltjahr ist! Lösung: Ein Jahr ist ein Schaltjahr, wenn es durch 4 teilbar, außer es istauch durch 100und nicht durch 400 teilbar! 3Der Abdruck erfolgt mit freundlicher Genehmigung des Klett -Verlags B.3 Aufgaben zur Funktionalen Modellierung 149 Auswertung der Schülerleistungen Aufgabe 3-7a 051015202530 0,00 0,33 0,67 0,75 0,83 1,00 relatie PunktzahlabsoluteHäufigkeit männlich w eiblich gesamt Aufgabe 3-7b 051015202530 0 0,5 0,75 1 relative PunktzahlabsoluteHäufigkeit männlich w eiblich gesamt Aufgabe 3-7c 05101520253035 0,00 0,33 0,50 0,67 1,00 relative PunktzahlabsoluteHäufigkeit männlich w eiblich gesamt150 Anha ng B: Aufgabensammlung für die Lernzielanalyse B.3.8 Erstellen von Datenflussdiagrammen mit bedingtem Ausdruck In der abschließenden Prüfungsaufgabe mussten die Schüler ein Datenflussdiagramm vol lkommen selbständig erstellen. Der konkrete Anwen dungsfall wurde im Unterricht vorher nicht thematisiert. Stegreifaufgabe 3, Aufgabe 3: Wie alt dürfen Jugendliche sein? Die Weltgesundheitsorganisation definiert das Alter, in dem man eine Person als Jugendl ichen bezeichnen kann, mit der Periode zwischen 10 und 20 Jahren. Erstelle ein Datenflus sdiagramm, mit dessen Hilfe ermittelt werden kann, ob eine Person ein Jugendlicher ist oder nicht. Lösung Alter Kleiner gleich ?20 WennGrößer gleich ?10 FALSCH Hinweis: Eine (einfache) Alternative zur der hier vorgestellten Lösung, erhält ma n durch Verwendung zweier „Wenn“ -Funktionen. Auswertung der Schülerleistungen Aufgabe 3-8 02468101214 0 0,25 0,5 0,625 0,875 1 relative PunktzahlabsoluteHäufigkeit männlich w eiblich gesamtAnhang C:Implizite Lernziele der Arbeit C.1Lernziele der Informatik in der 6 / 7. Jahrgangstufe an bayerischen Gymnasien ImInformatikunterricht der Jahrgangstufe 6/7 folgen aus den Diskussionen in Kapitel 3 und 4 in den Teilbereichen „Objektorientierte Modellierung und Algorithmik folgende implizite nLernziele: Tabelle C.1: Implizite Lernziele in Informatik der Jahrgangstufe 6/7 Nr Lernziel Kategorie 0 Konzept elementarer Anweisungen verstehen / anwenden B≥2 1 Syntax elementarer Anweisungen kennen A≥1 2 Syntaxregel der Methodendefinition kennen A≥1 3 Syntaxregel für Sequenzen kennen A≥1 4 Syntaxregel der Zählwiederholung kennen A≥1 5 Syntaxregel der bedingten Wiederholung kennen A≥1 6 Syntaxregel für Bedingungen kennen A≥1 7 Syntaxregel für Alternative kennen A≥1 8 Konzept der Methode verstehen / anwenden B≥2 9 Konzept der Sequenz verstehen / anwenden B≥2 10 Konzept der Bedingung verstehen / anwenden B≥2 11 Konzept der Alternative verste hen / anwenden B≥2 12 Konzept der Wiederholung verstehen / anwenden B≥2 13 Konzept der Zählwiederholung verstehen / anwenden B≥2 14 Konzept der bedingten Wiederholung verstehen / anwenden B≥2 15 Konzept des Schachtelns von Kontrollstrukturen verste hen / anwenden B≥2 16 Konzept der geschachtelten Zählwiederholung verstehen / anwenden B≥2 17 Konzept des Schachtelns von bedingter Wiederholung und Alternative verst ehen / anwendenB≥2 18 Konzept des Algorithmus anwenden B≥3 19 Objektbegriff verst ehen/anwenden B≥2 20 Attributbegriff verstehen/anwenden B≥2 21 Konzept des Attributwerts verstehen/anwenden B≥2 22 Konzept der Klasse verstehen/anwenden B≥2 23 Punktnotation bei Methodenaufrufen kennen A1 24 Punktnotation bei Attributen kennen A1 25 Textuelle Repräsentation von Objekten kennen A1 26 Konzept der Aggregation auf Objektebene verstehen / anwenden B≥2 27Konzept der nichtrekursiven Aggregation auf Klassenebene verstehen / anwenden B≥2 28 Graphische Syntax für Klassen kennen A1 29 Graphische Syntax für nichtrekursive / rekursive Aggregation auf Klasseneb e-A1152 Anhang C: Implizite Lernziele der Arbeit nekennen 30 Graphische Syntax für Objekte kennen A 1 31 Graphische Syntax für Aggregation auf Objektebene kennen A 1 32Konzept der hierarchischen Aggregation auf Objekt ebene verstehen / anwe nden B≥2 33 Konzept der rekursiven Aggregation auf Klassenebene verstehen / anwenden B≥2 C.2Lernziele funktionaler Modellierung in der 9. Jahrgangstufe an bayerischen Gymnasien In den Lernzielgraphen der Kapitel 5 und 6 wurden für den Informatikunterricht der 9. Jah rgangstufe folgende impliziten und expliziten Lernziele identifiziert: Tabelle C.1: Implizite und explizite Lernziele funktionaler Modellierung in der Jahrgangstufe 9 Nr Lernziel Kategorie 34 Konzept der Relation / Umkehrrelation verstehen und anwenden B≥2 35 Graphische Repräsentation von Relationen kennen A 1 36 Matrixdarstellung für Relationen kennen A 1 37 Pfeildiagrammdarstellung für Relationen kennen A 1 38 Umkehrrelationen angeben (Explizit) C≥3 39 Darstellungswechsel bei Relationen durchf ühren (Explizit) C≥3 40 Sorte der ganzen Zahlen verstehen / anwenden 2–1–3 41 Operationen über ganzen Zahlen verstehen / anwenden 2–1–3 42 Relative / Absolute Zellbezüge verstehen / anwenden 2–1–3 43 Konzept der Terme über ganzen Zahlen in Tabellenkalkulationssystemen a nwendenB≥3 44 Konzept der Sequenz auf Terme anwenden B≥3 45 Konzept der Iteration bei Tabellenkalkulationen anwenden B≥3 46 Konzept des Iterationsanfang beherrschen B≥3 47 Konzept der Iterationsfortsetzung beh errschen B≥3 48 Iterationsstrukturen erkennen und realisieren (Explizit) C≥3 49 Sorte der Fließkommazahlen verstehen B≥2 50 Konzept der Sorte verstehen 2–1–3 51 Funktionen über Fließkommazahlen verstehen B≥2 52 Konzept der mehrstelligen Funktion verstehen 2–1–3 53 Das Konzept des Datentyps verstehen 54Konzept der Funktionskomposition unter Verwendung von Datenflussdi agrammen / Termen verstehenB≥2 55 Repräsentation von Termen durch Datenflussdiagramme kennen A 1 56 Repräsenta tion von Termen in textueller Form kennen (Infix -und Praefixn otation)A 1 57 Repräsentationswechsel vom Datenflussdiagramm zum Term (Explizit) C≥3 58 Datenflussdiagramme für einen bestimmten Problembereich erstellen (Expl izit)C≥3 59 Funktionen übe r Wahrheitswerten mindestens anwenden 2–1–3 60Konzept der polymorphe Funktion mindestens anwenden 2–1–3C.2 Lernziele funktionaler Modellierung in der 9. Jahrgangstufe an bayerischen Gymnasien 153 61Konzept der s trikte n bzw. n ichtstrikte n Auswertung mindestens anwenden B≥3 62 Top-Down / Bottom –Up Strategie mindestens anwenden C≥3 63Konzept der WENN -Funktion mindestens anwenden 2–1–3 64 Konzept des Datenverteilers mindestens anwenden 2–1–3154 Anhang C: Implizite Lernziele der ArbeitLiteratur [AG06] Aussenac -Gilles N., Jaques M.: Designing and evaluating patterns for on tolgy enric hment from texts; In “Managing knowledge in a world of networks”; Lecture Notes in Art ificial I ntelligence (4248), pp 158 –165, Springer Verlag 2006 [An01] Anderson L.; Krathwo hl D.: A taxonomy of Learning, Teaching, and Assessing, Add ison Wesley Longman 2001 [Ba00] Bayerisches Gesetz über das Erziehungs -und Unterrichtswesen (BayEUG) in der Fa ssung der Bekanntmachung vom 31. Mai 2000 [Ba97] Baumert, J. et a l.;.TIMSS -Mathematisch -Naturwissenschaftlicher Unterricht im inte rnationalen Vergleich. Deskriptive Befunde. Opladen: Leske + Budrich , 1997 [Ba98] Baumann R.: Fundamentale Ideen der Informatik –gibt es das?“; in „Informatische Bi ldung in Deutschland, P erspektiven für das 21 Jahrhundert“, Koerber, B. und Peters [Ba00a]Baumert, J., Bos, W., & Lehmann, R. (Eds.); TIMSS/III. Dritte Internationale Math ematik-und Naturwissenschaftsstudie -Mathematische und naturwissenschaftliche Bildung am Ende der Schullau fbahn: Vol. 2. Mathematische und physikalische Kompetenzen am Ende der gymnasialen Oberstufe. Opladen: Leske + Budrich (466 p.); 2000 [Ba0 0b]Baumert, J., Bos, W., & Lehmann, R. (Eds.); TIMSS/III. Dritte Internationale Math ematik -und Naturwissenschaftsstud ie-Mathematische und naturwissenschaftliche Bildung am Ende der Schullaufbahn: Vol. 1. Mathematische und naturwissenschaftliche Grundbi ldung am Ende der Pflichtschulzeit. Opl aden: Leske + Budrich (362 p.), 2000 [Ba01] Baumert, J., Klieme, E., Neubrand, M ., Prenzel, M., Schiefele, U., Schneider, W., St anat, P., Tillmann, K. -J., & Weiß, M. (Eds.); PISA 2000. Basiskompetenzen von Schüleri nnen und Schülern im internationalen Vergleich. Opladen: Leske + Budrich (548 p.). [Ba05] Balzert H.: Lehrbuch Grundlagen der Informatik, Elsevier Verlag, 2005 [Be07] Berges M.; Lernzielanalyse des Informatiklehrplans im G8, Diplomarbeit, 2007 [Bl56] Bloom B.S. (Ed.), Engelhardt M.D., Furst E.J., Hill W.H., Krathwo hl D.R. (1956). Taxonomy of educational objectives: Handbook I : Cognitive domain. New York: David McKay. [Bl76] Bloom B.S.: Time and Learning, American Psychologist, 29(9), 682 -688 (Kap. 10) [Bi92] Bird R., Wadler P.: "Einführung in die funktionale Programmierung". Hanser Verlag 1992 [Bi06] Biundo S.; Claus V., Mayr H.C.; “Was ist Informatik?“; Positionspapier der Gesel lschaft für I nformatik e.V. (GI), Mai 2006 [Bm71] Bundesministerium für Bildung und Wissenschaft; Zweites Datenverarbeitungspr ogramm der Bundesregierung, hg. v. BMBW, Bonn 1971. [Br60] Bruner J.S.: "Th e process of education", Cambridge Mass. 1960 (dt. Übers.: "Der Pr ozess der E rziehung", Berlin 1970) [Br96] Brauer W., Münch, S.: Studien -und Forschungsführer Informatik, Springer, Berlin 1996 [Br97] Broy M.: Informatik 1. Programmierung und Rechnerstrukturen. Eine grundlegende Einführung , Springer -Verlag, Berlin 1997 [Br02] Breier N., Hubwieser P.: An Information -Oriented Approach to Informatical Education. Inform atics in Education 1(2002), pp 31 -42 [Br03] Broy M., Steinbrüggen R.: Modellbildung in der Informatik, Springer –Verlag, 2003. [Br04] Brichzin P.; Freiberger U.; Reinold K.; Wiedemann A.: Ikarus -Schwerpunkt Inform atik-Schulbuch für die Informatik 6/7 zum G8 Lehrplan in Bayern, Oldenburg Verlag 2004156 Literatur [Br04a] Brinda T.: Didaktisches System für objektorientie rtes Modellieren im Informatikunte rricht der Sekundarstufe II, Dissertation, Siegen 2004 [Br07] Brichzin P.; Freiberger U.; Reinold K.; Wiedemann A.: Informatik I , Funktionale M odellierung, Datenmodellierung , Oldenburg Verlag 2007 [Br09] Brichzin P.; Freib erger U.; Reinold K.; Wiedemann A.: Informatik Oberstufe, Date nstrukturen und Softwareentwicklung, Oldenburg Verlag 2009 [Ca07] Cassel L. et al.; The computing ontology: application in education, ACM SIGCSE Bu lletin, Volume 39 , Issue 4, Pages 171 -183, De cember 2007 [Cl74] Claus V.; Gedanken zur Ausbildung in Informatik; Technischer Bericht, Abteilung für Inform atik, Universität Dortmund, 1974 [Co92] Coy W.; Sichtweisen der Informatik, Vieweg, 1992 [Co98] Coulter N.: ACM Computing Classification System, http://www.acm.org/class/1998/ (überprüft am 2.4.2008) [De89] Denning P., Comer D., Gries D., Mulder M., Tucker A., Turner J., Young P.; Compu ting as a discipline; Communications of the ACM; Volume 32 , Issue1, Pages: 9 –23; 1989 [De99] Denning P.:“Computer Science: The Discipline,” Encyclopedia of Computer Science, A. Ralston and D. Hemmendinger, eds., Nature Publishing Group, 2000, pp. 405 -419. [De03] Denning P.: “Great Principles of Computing,” Comm. ACM , Nov. 2003, pp. 15 -20. [De04] Denning P.; “Great Principles in Computing Curricula”, SIGCSE '04: Proceedings of the 35th SIGCSE technical symposium on Computer science education, March 2004 [De07] Denning P.: “Great Principles of Computing”, http://cs.gmu .edu/cne/pjd/GP/GP site/welcome.html (überprüft am 2 7.12.2009 ) [Di05] Dick W., Carey L., Carey J,: The systematic Design of Instruction, Pea rson, 2005 [Du92] Duffy T.M., Jonassen D.H. (eds): Constructivism and the Technology of Instruction: A Conve rsation. Lawrence Erlbaum; Hillsdale NJ; 1992 [En07] Engelmann L. (Hrsg.): Informatik 9, Duden --Paetec, Berlin 2007 [EP04] Einheitliche Prüfungsanforderungen “Informatik”; Beschluss der Kultusministerkonf erenz vom 01.12.1989 i.d.F. vom 05.02.2004 [Fi95] Fischer G. H., Molenaar I. W.: Rasch Models. Foundations, Recent Developments, and Applic ations. Springer, New York 1995. ISBN 0387944990 [Fo90] Forneck H.J.: Entwicklungstendenzen und Prob lemlinien der Didaktik der Informatik. In: Cyranek G., Forneck H.J., Goorhuis H. (Hrsg.): Beiträge zur Didaktik der Informatik. Dieste rweg/Sauerländer, Frankfurt/Main 1990. S. 18 –53. [Fo06] Foerster H., Glasersfeld E., Hejl P.: Einführung in den Konstrukti vismus. Piper, 2006 [Fr01] Frey E., Hubwieser P., Humbert L., Schubert S., Voß S.: Informatik -Anfangsunterricht. Erste Ergebnisse aus dem Informatik -Anfangsunterricht in den bayerischen Schulvers uchen. LOG IN 21 (2001) Heft 1, S. 20 -32 [Fr04 a]Freiberger U .: Robot Karol, http://www.schule.bayern.de/karol/index.htm ; (überprüft am17.2.2010 ) [Fr04b] Frey E., Hubwieser P., Winhard F.: Informatik 1/Schülerbuch Klasse 6 und 7: Objekte, Strukturen, Algorithmen. Eine Einführung in die Grundlagen der I nformatik, Klett Verlag, 2004 [Fr09] Friedrich S., Puhlmann H.: Bildungsstandards Informatik -von Wünschen zu Maßst äben für eine informatische Bildung. In:Schubert (Hrsg.) Didaktik der Informatik in Theorie und Praxis. Lecture Notes in Informatics Vol. 112, Bonn 2007, S. 21 -32 [Fu07] Fuller U. et al.; Developing a Computer Science -specific Learning Taxonomy, ACM SIGCSE Bulletin, Volume 39 , Issue 4, Dezember 2007Literatur 157 [Ga60] Gadamer: Wahrheit und Methode. Grundzüge einer philosophischen Hermeneutik. (T übingen 1960) [Ga65] Gagne R.M.: "The conditions of learning", 1965 [GI08] Gesellschaft für Informatik; Grundsätze und Standards für die Informatik in der Schule; Bildung sstandards Informatik für die Sekundarstufe I, Januar 2008 [Gl95a]Glasersfeld E.: Radical Constructivism, A Way of Knowing and Learning, 1995, Lo ndon [Gl95b]Glasersfeld E.: Radikaler Konstruktivismus . 1996, S. 11. Zitat i n dem Vorwort zur deu tschen Ausgabe von Siegfried J. Schmidt (1995) [Go03] Götschi T., Sanders I. Galpin V: Mental Models of Recursion, Technical Symposium on Computer Science Education, Proceedings of the 34th SIGCSE technical symposium on Computer sc ience education, Reno 2003 [Gr07 ]Gray S.: Suggestions for Graduated Exposure to Programming Concepts Using Fading Worked Examples ; ICER 2007 Atlanta, USA [He27] Heidegger M.: Sein und Zeit, Tübingen, 1927 [Hu00] Hubwieser P.: Informatik am Gymnasium. Ein Gesa mtkonzept für einen zeitgemäßen Informatikunterricht. Habilitationsschrift, Fakultät für Informatik der Technischen Unive rsität Mü nchen, April 2000. [Hu02 ]Hubwieser P.; Didaktik der I nformatik, Springer Verlag, 2002 [Hu03] Hubwieser, P.: Functional Modell ing in Secondary Schools Using Spreadsheets. Educ ation and Information Technologies 9 (2) June 2004; 175 –183 [Hu04] Hubwieser P., Aiglstorfer G.: Fundamente der Informatik. Ablaufmodellierung, Alg orithmen und Datenstrukturen. Oldenbourg, München, 2004, I SBN: 3486275720 [Hu07a] Hubwieser P., Spohrer M., Steinert M., Voss S.: Informatik 2, Tabellenkalkulationssy steme, D atenbanken, Klett -Verlag 2007 [Hu08] Hubwieser P.; Analysis of Learning Objectives in Object Oriented Programming, ISSEP 2008 [Hu09] Hubwie ser P., Löffler P., Schwaiger P., Spohrer M., Steinert M., Voss S., Winhard F.: Inform atik 3, Algorithmen, Zustandsmodellierung, Objektorientierte Programmierung, Klett -Verlag 2009 [Hu10] Hubwieser P., Löffler P., Schwaiger P., Spohrer M., Steinert M., Vo ss S., Winhard F.: Inform atik 4, Klett -Verlag, in Vorbereitung; geplanter Erscheinungstermin Juli 2010 [ISB06] Staatsinstitut für Schulqualität und Bildungsforschung München , Abteilung Gymnas ium-Referat Natu rwissenschaften ; Lernstandserhebung in „Natur und Technik“, 2006 [ISB06a] Staatsinstitut für Schulqualität und Bildungsforschung, Abteilung Gymnasium -Referat Naturwissenschaften, August 2006; Lernstandserhebung Natur und Technik –Erge bnisse 2006 [ISB07] Staatsministerium für Unterricht und Kultus; Lehrplan für das Gymnasium in Bayern (G8) , Informatik, September 2007 [ISB07a] Staatsinstitut für Schulqualität und Bildungsforschung München , Abteilung Gymnas ium-Referat Natu rwissenschaften; Lernstandserhebung in „Natur und Technik“, 2007 [ISB07b] Staa tsinstitut für Schulqualität und Bildungsforschung, Abteilung Gymnasium -Referat Naturwissenschaften, Oktober 2007 ; Lernstandserhebung Natur und Technik –Erge bnisse 2007 [Jo92] Jonassen D.: Evaluating Constructivistic Learning, in Duffy T.M., Jonassen D .H. (eds): Constructivism and the Technology of Instruction: A Conversation. Lawrence Erlbaum; Hillsdale NJ; 1992158 Literatur [Kl01] Klieme E., et al. : Mathematische Grundbildung: Testkonzeption und Ergebnisse. in: Deutsches PISA -Konsortium 2001, S. 160 [Kl06] Klieme, E.; DFG -Schwerpunktprogramm 1293, "Kompetenzmodelle zur Erfassung i ndividueller Lernergebnisse und zur Bilanzierung von Bildungsprozessen„ [Kl07 ]Klieme E. et al.; Zur Entwicklung nationaler Bildungsstandards ; Bundesministerium für Bildung und Forschung, B onn / Berlin 2007 [Ko08] Kortenkamp U., Weigand H., Weth T.; Informatische Ideen im Mathematikuntericht; Bericht über die 23. Arbeitstagung „Mathematik und Informatik“ in der Gesellschaft für Didaktik der Mathematik e.V. vom 23. bis 25. September 2005 in D illingen a. d. Donau, Verlag Franzbecker, 2008 [Ko93] Koerber B., Peters I.R.: Informatikunterricht und informationstechnische Grundbildung –ausgre nzen, abgrenzen oder integrieren? In: Troitzsch (1993), S. 108 –115 [La07] Laika E.; Entwicklung und Bewertun g von Methoden zur Lernzielanalyse am Beispiel der Algorithmik im Fach Natur und Technik am Bayerischen Gymnasium; Schriftliche Hausarbeit, Techn ische Universität München, Dezember 2007 [Le00] Levy D., Lapidot T.: Recursively Speaking: Analyzing Students' Discourse of Recursive Phen omena, Technical Symposium on Computer Science Education, Proceedings of the thirty -first SIGCSE technical symposium on Computer science education, Austin 2000 [Ma65] Mager R.: Lernziele und programmierter Unterricht. Weinheim, B eltz, 1965. [Ma66] Mager R., Monzen, H.: Lernziele und programmierter Unterricht, Beltz -Verlag, 1966 [Ma82a] Maturana H. "Biologie der Sprache: die Epistemologie der Realität" in: H. Maturana: Erke nnen: Die Organisation und Verkörperung von Wirklichkeit", Braunschweig u.a. 1982a [Ma82b] Maturana H. "Repräsentation und Kommunikation" in: H. Maturana: Erkennen: „Die Organis ation und Verkörperung von Wirklichkeit", Braunschweig u. a. 1982b [Me92] Merril M.: Constructivism and Instructional Design, in Duffy T .M., Jonassen D.H. (eds): Constructivism and the Technology of Instruction: A Conversation. Lawrence Er lbaum; Hillsdale NJ; 1992 [Me65a] Meyer H.: Trainingsprogramm zur Lernzielanalyse, Frankfurt 1965, S. 21 [Me65b ]Meyer H.: Trainingsprogramm zur Lernziel analyse, Frankfurt 1965, S. 32 [Mö80] Möller C.: Die curriculare Didaktik: Oder: Der lernzielorientierte Ansatz. In: Didakt ische Theorien: Aufsätze aus der Zeitschrift Pädagogische Beiträge. Hrsg.: Herbert Gu djons, Rita Teske, Rainer Winkel (Hrsg.): Didakt ische Theorien. 8. Aufl., Ber gmann+Helbig, Hamburg (8. Aufl. 1995), S.63 -77. [Mo06] Modrow E.: “Zur Ordnungswirkung fundamentaler Ideen der Informatik am Beispiel der theor etischen Schulinformatik“, in Informatica Didactica 6 (2006) [Mo07] Mörwald J.: Deta illierte Untersuchung von Lernprozessen im Informatik -Unterricht in der Unterstufe am Gymnasium, Schriftliche Hausa rbeit, TU –München, 2007 [Nc00] NCTM; Principles and Standards for School Mathematics ; McGraw Hill Higher Educ ation, 2000 [Pe08] Pedroni M. , Oriol M., Meyer B., Angerer L.; Automatic Extraction of Notions from Course Material, Proceedings of the 39th SIGCSE technical symposium on Computer sc ience education, Por tland, Or. USA, 2008 [Pr04] Prenzel, M., Baumert, J., Blum, W., Lehmann, R., Leutne r, D., Neubrand, M., Pekrun, R., Rolff, H. -G., Rost, J., & Schiefele, U. (Eds.); PISA 2003. Der Bildungsstand der Jugendlichen in Deutschland -Ergebnisse des zweiten internationalen Vergleichs. Mü nster: Waxmann, 2004Literatur 159 [Pu03] Puhlmann H.: Informatische Lite rabilität nach dem Pisa -Muster. In: Hubwieser P. (Hrsg), Informatische Fachkonzepte im Unterricht, S. 145 -154. Gesellschaft für Inform atik, 2003 [Pu05] Puhlmann H.: Bildungsstandards Informatik –Zwischen Vision und Wirklichkeit .In: Hubwieser P. (Hrsg), U nterrichtskonzepte für informatische Bildung, S. 79 -89. Gesel lschaft für Informatik, 2005 [Re94] Reinmann -Rothmeier G., Mandl H., Prenzl M.: Computerunterstützte Lernumgebu ngen: Planung, Gestaltung und Bewertung. Publicis -MCD -Verlag; Erlangen; 1994 [Re01] Reinmann -Rothmeier G., Mandl H.: Unterrichten und Lernumgebungen gestalten; in Krapp/Weidenmann: Pädagogische Psychol ogie; Beltz -Psychologie -Verlags Union, 2001 [Re06] Reinmann G.: "Instructional Design: Skript für universitäre Veranstaltu ngen zum E Learn ing/Blended Learning in der Aus -und Weiterbildung" (2006) [Re09] Reiser K.; Analyse aktueller Vorschlage für Bildungsstandards zur Schulinformatik ; Schriftliche Hausarbeit für die 1. Staatsprüfung, TU -München, 2009 [RW06 ]RWTH Aachen, Modulhandbuch als An lage zur Prüfungsordnung des Bachelor Studiengangs Informatik (Computer Science) der Rheinisch -Westfälischen Technischen Hochschule Aachen Stand: 1.Oktober 2006 [Sa06] Sanders I. Galpin V., Götschi T.: Mental Models of Recursion Revisited, Annual Joint Conference Integrating Technology into Computer Science Education, Proceedings of the 11th annual SIGCSE conference on Innovation and technology in computer science educ ation, Bologna 2006 [Sa07] Sanders I. Galpin V.,: Students' mental models of recursion at wits, Annual Joint Co nference Int egrating Technology into Computer Science Education ,Proceedings of the 12th annual SIGCSE conference on Innovation and technology in computer sc ience education , Dundee 2007 [Sc93] Schwill A.: Fundamentale Ideen der Informa tik. In: Zeitschrift für Didaktik der Math ematik, 1993/1 [Sc99] Schnell, Hill, Esser: Methoden der empirischen Sozialforschung, 6.Aufl., München: O ldenbourg, 1999, S.110ff. [Sc02] Schneider M.: Rekursive Strukturen in Einführungsvorlesungen der Informatik; (2002) Lecture Notes in Informatics, Volume 22, pp. 77 [Sc04] Schubert S., Schwill A.: Didaktik der Informatik, Spektrum Akademischer Verlag, 2004 [Sc04a] Schneider M.; An Empirical study of introductory lectures in informatics based on fu ndamental concep ts; Dagstuhl -GI-Seminar der Fachgruppe “Didaktik der Informatik”, 2004 [Sc05] Schneider, M.: A Strategy to Introduce Functional Data Modelling at School Informa tics. In (Mittermeier, R. ed.): Informatics for Secondary Schools –Evolution and Perspe ctives: From Co mputer Literacy to Informatics Fundamentals; Proceedings of ISSEP 2005, Klagenfurt; pp. 130 –144. [Sc06] Schneider M.: Begriffliche Strukturen der Informatik: Ein empirischer Zugang, 3. Workshop der Fachgruppe Didaktik der Inform atik, Potsdam 2006 [Sc06a] Schneider, M.: Functional Modelling, Fundamental Ideas and Threads in the Subject I nformatics. In (Dagiene, V.; Mittermeir, R.): Proceedings of the Second International Co nference „Informatics in Secondary Schools: Evolution and Pe rspectives“; Viln ius 2006; pp. 413–423 [Sk38] Skinner B.F., The behaviour of organisms. An Experimental Analysis.Appleton Century -Crofts, N.Y. 1938 [Sm05] Smith P., Ragan T.; Instructional Design, Wiley & Sons, 2005160 Literatur [Sp92] Spiro R., Feltovich P., Jacobson M., Coulson R.: Cognitive Flexibility, Constructivism, and Hype rtext: Random Access Instruction for Advanced Knowledge Acquisition in Ill structered domains, in Duffy, T.M., Jonassen, D.H. (eds): Constructivism and the Techno logy of Instruction: A Conversation. Lawrence Erlbaum; Hill sdale NJ; 1992 [Sp09] Spohrer, M.; "Konzeption und Analyse neuer Maßnahmen in der Fort -und Weite rbildung von Informatiklehrkräften", Dissertation, TU –München, 2009 [St06] Staller,A.: Merging domain knowledge and task analysis in an ontology , in A. Méndez Vilas, A. Solano Martin, J. Mesa González & J.A. Mesa González (Eds.), Current Deve lopments in Technology -Assisted Educ ation (Vol. 3), pp. 1585 -1589, 2006 [St07] Steinert M.: Functional modelling and the graph of learning objectives, IMICT 2 007: Working Joint IFIP Conference: WG3.1 Secondary Education, WG3.5 Primary Education; Informatics, Mathematics, and ICT: a ‘golden triangle’; 2007, Boston [St07a] Steinert M.: Lernzielgraphen und Lernzielerfolgsanalyse, INFOS 2007, Si egen [St09] Stecher t P.: Fachdidaktische Diskussion von Informatiksystemen und der Kompeten zentwicklung im Informatikunterricht, Disse rtation, Siegen 2009 [TBe08] TU Berlin, Fakultät IV (Elektrotechnik und Informatik); Beschreibung des Moduls „Algorithmische und funktionale Lösung diskreter Probleme (MPGI1)“, Kurzbezeic hnung: BINF -GL-MPGI1. S08 [TBr08] TUBraunschweig , Fakultät für Informatik; Beschreibung des Moduls „Pr ogrammieren I“,Kurzbezeichnung : INF -PRS-02 [Th13] Thorndike E.L.; The psychology of learning, Teachers Co llege N.Y. 1913 [TM08] TU München, Fakultät für Informatik, Beschreibung des Moduls „Einführung in die I nformatik I“, Kurzbezeichnung IN0001 [TU08] TU9, German Institutes of Technology, http://www.tu9.de (überprüft am 27.12.2009 ) [VI00] J.A. Vélazquez -Iturbide; Recursion in Gradual Steps (Is Recursion Really that Diff icult?) The Proceedings of the 31st SIGCSE Technical Symposium on Computer Science Education. Austin, Texas, 2000, ACM SIGCSE Bulletin Volume 32 , Issue 1 (March 2000) table of contents Year of Public ation: 2000 ISSN:0097 -8418 pp 310 –314 [Wa13] Watson J.B.; Psychology as the Behaviourist views it. Psychological R eview 20 (1913), pp. 157 –158. [We01] Weinert F.; Leistungsmessungen an Schulen, Beltz Verlag, 2001 [We07] Weeger M.; Synopse zum In formatikunterricht in Deutschland; Analyse der informat ischen Bi ldung der allgemein bildenden Schulen –durchgeführt auf der Basis existierender Lehrpl äne und Richtlinien; Bakkalaureatsarbeit, TU Dresden [Wi86] Winograd T., Flores F.: Understanding Compute rs and Cognition. A New Foundation for D esign. New Jersey: Ablex 1986. [Zi88] Zimbardo P.G.: Psychologie. Springer -Verlag 1988.