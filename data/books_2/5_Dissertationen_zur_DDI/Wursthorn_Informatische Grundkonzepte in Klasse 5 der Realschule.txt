Informatische Grundkonzepte in Klasse 5 der Realschule – Entwurf und Evaluation von f¨acher¨ ubergreifendem Unterricht Dissertation zur Erlangung des Grades einer Doktorin der Erziehungswissenschaften (Dr. paed.) der P ¨adagogischen Hochschule Ludwigsburg vorgelegt von Birgit Wursthorn aus Reutlingen Ludwigsburg 2006Erstgutachter: Prof. Herbert L ¨othe P¨adagogische Hochschule Ludwigsburg Zweitgutachter: Prof. Dr. Andreas Zendler P¨adagogische Hochschule Ludwigsburg Datum des Abschlusses der m ¨undlichen Pr ¨ufung: 18.05.2006Iucundi acti labores (Cicero)Danksagung Eine Forschungsarbeit in der Schule wird von sehr vielen Menschen beeinﬂusst, insbesonders wenn sie sich ¨uber ein ganzes Schuljahr erstreckt und so massiv in den Unterricht eingreift wie in dieser Arbeit. Die Voraussetzungen f ¨ur einen reibungslosen Ablauf schaﬀte der Schulleiter Herr Petri. Der wichtigste Erfolgsfaktor waren jedoch die Sch ¨ulerinnen und Sch ¨uler. Ihren Einsatz, ihre Mitarbeit, ihr Engagement und ihr Durchhalteverm ¨ogen m¨ochte ich besonders hervorheben. Benennen m ¨ochte ich auch diejenigen Eltern, die die Arbeit durch eine positive Haltung gegen ¨uber ihren Kindern unterst ¨utzten. Wichtig war mir auch das Gef ¨uhl, bei den Lehrerinnen und Lehrern des Kollegiums willkommen zu sein. Allen genannten Personen m ¨ochte ich ganz herzlich danken. An der P ¨adagogischen Hochschule Ludwigsburg gilt mein besonderer Dank meinen Betreuern Prof. Herbert L ¨othe und Prof. Dr. Andreas Zendler, die mir in den verschiedenen Phasen der Arbeit hilfreich zur Seite standen und Anregungen gaben. Auch meine Kolleginnen und Kollegen am Institut f ¨ur Mathematik und Informatik der P¨adagogischen Hochschule Ludwigsburg spielten eine wichtige Rolle. Besonders hervorheben m ¨ochte ich Dr. Rose Vogel, Christian Spannagel und die ehemalige Kollegin Prof. Dr. Christine Bescherer f ¨ur ihre gesch ¨atzten Anst ¨oße in der Endphase. Vielen Dank auch Frau Ertelt und Frau H ¨ubner f ¨ur das intensive und gr ¨undliche Lesen der Arbeit. Außerdem danke ich meinen Eltern, die mich schon sehr fr ¨uh f¨orderten und somit den Grundstein f ¨ur meinen Werdegang legten. Nicht unerw ¨ahnt soll auch meine kleine Nichte Sonja bleiben, da sie es in der schwierigen Zeit des Abfassens der Arbeit am besten schaﬀte, meine Gedanken von der Arbeit abzulenken, und eine st ¨andige Quelle der Freude war. Mein gr ¨oßter Dank gilt den am Unterrichtsversuch beteiligten Lehrerinnen Frau Hartlieb, Frau Br ¨autigam und Frau Rupp. Bereits vor dem Unterrichtsversuch waren sie bereit, sich in zahlreichen Sitzungen in das Unterrichtskonzept einzuarbeiten. W ¨ahrend des Schuljahrs ließen sie mir den f ¨ur die Forschungsarbeit notwendigen Freiraum und reagierte auf teilweise sehr kurzfristige W ¨unsche sehr ﬂexibel. F ¨ur meine Probleme hatten sie stets ein oﬀenes Ohr und aufgrund ihrer langj ¨ahrigen Praxis ¨uberaus hilfreiche und f¨ur mich sehr produktive Ratschl ¨age. Insbesondere ihre Verl ¨asslichkeit, aufgeschlossene Freundlichkeit und ihre Ermutigung st ¨arkten mich in meiner Arbeit und erm ¨oglichten mir diese wunderbare und unvergessliche Zeit in der Schule.Inhaltsverzeichnis 1 Einleitung 1 2 Informatische Bildung 5 2.1 Empfehlungen zu einer informatischen Bildung . . . . . . . . . . . . . . . 5 2.2 Bildungspl ¨ane der Sekundarstufe I in Baden-W ¨urttemberg . . . . . . . . 9 2.2.1 Historische Entwicklung . . . . . . . . . . . . . . . . . . . . . . . 9 2.2.2 Bildungsstandards f ¨ur Informationstechnische Grundbildung an Realschulen . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12 2.3 Standpunkte der Fachdidaktik Informatik . . . . . . . . . . . . . . . . . . 13 2.4 Informatische Grundkonzepte in Klasse 5 der Realschule . . . . . . . . . 21 3 Konzept des Unterrichtsversuchs 29 3.1 Logo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31 3.1.1 Logo-Philosophie . . . . . . . . . . . . . . . . . . . . . . . . . . . 32 3.1.2 Logo als Programmiersprache . . . . . . . . . . . . . . . . . . . . 38 3.1.3 Logo und informatische Grundkonzepte . . . . . . . . . . . . . . . 44 3.2 Rahmenbedingungen . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47 3.3 Fachinhalte und informatische Grundkonzepte . . . . . . . . . . . . . . . 53 3.4 Unterrichtsmethoden . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55 3.5 Vorbereitung der Fachlehrerinnen . . . . . . . . . . . . . . . . . . . . . . 58 3.6 Vorbereitung der Eltern . . . . . . . . . . . . . . . . . . . . . . . . . . . 60 4 Unterrichtseinheiten zu informatischen Grundkonzepten 61 4.1 Fachunterricht . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61 4.2 Projektarbeit . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 92 4.3 Fachunabh ¨angiger Unterricht . . . . . . . . . . . . . . . . . . . . . . . . . 96 5 Konzeption und Durchf¨ uhrung der Untersuchung 103 5.1 Fragestellung und Untersuchungsdesign . . . . . . . . . . . . . . . . . . . 103 5.2 Quantitative Erhebung . . . . . . . . . . . . . . . . . . . . . . . . . . . . 104 5.2.1 Testentwicklung zu informatischen Grundkonzepten . . . . . . . . 105 5.2.2 Test zu informatischen Grundkonzepten . . . . . . . . . . . . . . 108 5.2.3 Kognitiver F ¨ahigkeitstest . . . . . . . . . . . . . . . . . . . . . . . 108 5.2.4 Fragebogen zu Einstellungen zum Computer . . . . . . . . . . . . 109 5.3 Qualitative Erhebung . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 110 iInhaltsverzeichnis 5.3.1 Forschungstagebuch . . . . . . . . . . . . . . . . . . . . . . . . . . 110 5.3.2 Leitfadeninterview Lehrerinnen . . . . . . . . . . . . . . . . . . . 112 5.3.3 Leitfadeninterview Sch ¨ulerinnen und Sch ¨uler . . . . . . . . . . . . 113 5.3.4 Unterrichtsmaterialien zu einzelnen Unterrichtseinheiten . . . . . 114 6 Darstellung und Interpretation der Ergebnisse 115 6.1 Gesamtkonzept . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 116 6.1.1 Verfahren zur Auswertung der Interviewdaten . . . . . . . . . . . 116 6.1.2 Aspekte des Gesamtkonzepts . . . . . . . . . . . . . . . . . . . . . 120 6.1.3 Lernerfolge allgemein . . . . . . . . . . . . . . . . . . . . . . . . . 126 6.1.4 Verhalten der Sch ¨ulerinnen und Sch ¨uler im Unterricht . . . . . . . 130 6.1.5 Rahmenbedingungen . . . . . . . . . . . . . . . . . . . . . . . . . 135 6.2 Projektarbeit . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 138 6.3 Lernerfolg informatischer Grundkonzepte – Vorund Nachtest . . . . . . 142 6.3.1 Informatische Grundkonzepte allgemein . . . . . . . . . . . . . . . 144 6.3.2 Informatische Grundkonzepte und Geschlecht . . . . . . . . . . . 145 6.3.3 Informatische Grundkonzepte und F ¨ahigkeiten . . . . . . . . . . . 146 6.4 Lernerfolg informatischer Grundkonzepte – Unterrichtsmaterialien . . . . 150 6.4.1 Wirkprinzipien von Informatiksystemen . . . . . . . . . . . . . . . 150 6.4.2 Informatische Modellierung . . . . . . . . . . . . . . . . . . . . . 159 6.4.3 Arbeitstechniken . . . . . . . . . . . . . . . . . . . . . . . . . . . 161 6.4.4 Informatische Beschreibungsmittel . . . . . . . . . . . . . . . . . . 167 6.4.5 Fachnahe Inhalte . . . . . . . . . . . . . . . . . . . . . . . . . . . 174 6.4.6 Zusammenfassung und Interpretation . . . . . . . . . . . . . . . . 176 6.5 Ver ¨anderung der Einstellungen zum Computer . . . . . . . . . . . . . . . 178 7 Fazit 189 7.1 Zusammenfassung . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 189 7.2 Grenzen der Untersuchung . . . . . . . . . . . . . . . . . . . . . . . . . . 192 7.3 Konsequenzen f ¨ur die Implementierung des Unterrichtskonzepts . . . . . 193 Anhang 197 A Empfehlungen zu einer informatischen Bildung . . . . . . . . . . . . . . 197 B Informatische Grundkonzepte – Vortest . . . . . . . . . . . . . . . . . . 200 C Einstellungen zum Computer – Fragebogen . . . . . . . . . . . . . . . . 224 D R ¨ucklauf der Frageb ¨ogen zu den Einstellungen zum Computer . . . . . . 228 E Interviewleitfaden Lehrerinnen . . . . . . . . . . . . . . . . . . . . . . . 231 F Interviewleitfaden Sch ¨ulerinnen und Sch ¨uler . . . . . . . . . . . . . . . . 236 G Informatische Grundkonzepte – Tests im laufenden Schuljahr . . . . . . 239 H Sch ¨ulerbeispiele . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 249 Abbildungsverzeichnis 250 iiInhaltsverzeichnis Tabellenverzeichnis 254 Literaturverzeichnis 256 iiiInhaltsverzeichnis iv1 Einleitung Es ist unbestritten, dass F ¨ahigkeiten im Umgang mit Informatiksystemen bereits heute in vielen Bereichen zur praktischen Lebensbew ¨altigung hilfreich oder sogar notwendig sind. Das diesen F ¨ahigkeiten zu Grunde liegende Wissen ist allgemein bildend und muss in der Schule vermittelt werden. Seit 1970 erfolgt dies bereits auf Basis verschiedener Ans¨atze. In den siebziger Jahren stand inhaltlich die Hardware im Vordergrund. Dann r¨uckten mehr und mehr Algorithmen und Anwendungen in den Mittelpunkt. In den achtziger Jahren konzentrierte man sich auf die Benutzung von Anwendungssystemen, um lebenspraktische Orientierung zu vermitteln. In den neunziger Jahren wurde die Benutzerorientierung von der Wissenschaft vom Entwurf und der Gestaltung von Informatiksystemen abgel ¨ost (Baumann 1996, S. 112 ﬀ., Hubwieser 2001, S. 50 ﬀ.). Eine grundlegende informatische Bildung als Voraussetzung f ¨ur die kompetente, eﬃziente und verantwortungsvolle Nutzung des Computers umfasst sicherlich Aspekte aus allen Ans¨atzen. In ihr m ¨ussen nach Meinung von Engbring (2003, S. iii) die Inhalte der Kerninformatik, d.h. der theoretischen, technischen und praktischen Informatik, ausgehend von konkreten Anwendungssystemen, eingef ¨uhrt werden. In diesem Punkt stimmen die verschiedenen Ans ¨atze der Fachdidaktik Informatik, wie sie in Kapitel 2.3 beschrieben werden, ¨uberein. Strittig ist h ¨auﬁg jedoch der Zeitpunkt, zu dem die Einf ¨uhrung in die informatische Bildung an Schulen beginnen soll. “Dies sollte fr ¨uhestens in der 6. Jahrgangsstufe geschehen, da die Sch ¨uler erst in diesem Alter die n ¨otige Abstraktionsf ¨ahigkeit erlangen, um ¨uber das konkret verwendete System hinaus allgemeinere, grundlegende Konzepte zu verstehen.“ (Hubwieser, 2001, S. 98) Damit verweist Hubwieser auf Piaget (Fatke, 2003, S. 66), nach dessen Meinung aussagenlogische oder formale Operationen, die Voraussetzung f ¨ur viele informatische Inhalte sind, erst im Alter zwischen 11 und 13 Jahren erbracht werden k ¨onnen. Schwill (2001) hingegen behauptet, dass einige wichtige fundamentale Ideen der Informatik bereits von Grundschulkindern erlernt werden k ¨onnen,”vorausgesetzt, die Gegenst ¨ande werden altersgem ¨aß aufbereitet und im Unterricht unter Ber ¨ucksichtigung der bis zu diesem Zeitpunkt aufgebauten kognitiven Strukturen der Kinder und unterst ¨utzt durch Handlungen oder reale Gegenst ¨ande vermittelt“ (vgl. Schwill 2001, S. 29). Dies zeigt er f¨ur die fundamentalen Ideen der Rekursion, der Greedy-Methode und der strukturierten Zerlegung. Neben entwicklungspsychologischen Argumenten werden gegen einen zu fr¨uhen Einstieg in eine informatische Bildung auch organisatorische Gr ¨unde angegeben. 11 Einleitung Hubwieser (2001, S. 97) zum Beispiel, warnt vor einer Stoﬀf ¨ulle in Klassenstufe 5, fordert jedoch einen m ¨oglichst fr ¨uhen Beginn. Die aktuellen fachdidaktischen Forschungsarbeiten besch ¨aftigen sich haupts ¨achlich mit Konzepten f ¨ur die Sekundarstufe II. Humbert (2003) entwirft ein Modulkonzept f ¨ur die Themenbereiche Informatiksysteme verantwortlich nutzen ,Elemente der theoretischen Informatik undinformatische Modellierung f¨ur den Anfangsunterricht Informatik in der Sekundarstufe II. Das von Schulte (2003) entwickelte life3-Unterrichtskonzept baut auf einem objektorientierten Zugang zur Informatik im Anfangsunterricht in der Jahrgangsstufe 11 auf. Die Arbeit von Modrow (2003), in der die fundamentalen Ideen als Leitlinien zur Curriculumentwicklung herangezogen werden, bezieht sich fast ausschließlich auf das Schulfach Informatik der Sekundarstufe II. Brinda (2004) stellt in seiner Dissertation ein didaktisches System f ¨ur objektorientiertes Modellieren im Informatikunterricht der Sekundarstufe II vor. Die von Reichert (2003, S. 61) entwickelten Kara-Programmierumgebungen werden an Universit ¨aten in der Lehrerausbildung, an Fachhochschulen und Gymnasien eingesetzt. Sie scheinen also nicht f ¨ur den Unterricht zu Beginn der Sekundarstufe I geeignet zu sein. Auch die Beitr ¨age auf der GI1-Fachtagung ”Informatik und Schule 2003“ besch ¨aftigen sich haupts ¨achlich mit Unterrichtsans ¨atzen am Ende der Sekundarstufe I oder der Sekundarstufe II. Eine Ausnahme bildet allein der Vortrag von Frey (2003, S. 33), der den in der Jahrgangsstufe 6 neu eingef ¨uhrten Informatikunterricht an bayrischen Gymnasien vorstellt. Nach Ansicht der Autorin besch ¨aftigen sich diese Ans ¨atze zwar mit relevanten und wichtigen Konzepten der Informatik, der Zeitpunkt ihrer Einf ¨uhrung ist jedoch zu sp ¨at. Das informatische Grundlagenwissen muss und kann nach ihrer Meinung fr ¨uher vermittelt werden, so dass es spiralf ¨ormig in weiteren Klassenstufen auf unterschiedlichen Abstraktionsniveaus wiederholt und vertieft werden kann. Aus diesem Grund wird in der vorliegenden Arbeit ein Unterrichtskonzept zur Vermittlung von informatischen Grundkonzepten in Klasse 5 der Realschule entwickelt. Um die informatischen Grundkonzepte in Anwendungskontexte einzubetten, wird der Unterricht in die F ¨acher Mathematik, Englisch, Deutsch und Musik integriert und ﬁndet in der konkreten Umsetzung vier Stunden in der Woche ¨uber ein gesamtes Schuljahr hinweg statt. Dadurch muss in der Stundentafel kein eigenes Fach ausgewiesen werden. Der Unterricht wird bereits, wie im Unterricht zurInformationstechnischen Grundbildung im Bildungsplan 2004 in Baden-W ¨urttemberg gefordert, in die verschiedenen F ¨acher integriert. Die Programmiersprache Logo wird in diesem Konzept als p ¨adagogisches Werkzeug eingesetzt, um die informatischen Grundkonzepte f ¨ur die Sch ¨ulerinnen und Sch ¨uler altersgem ¨aß aufzubereiten und ihnen die M ¨oglichkeit anzubieten, mit den teilweise theoretischen Konzepten konstruktiv zu arbeiten und eigene Produkte am Computer zu erstellen. In den vier Unterrichtsstunden werden also informatische Grundkonzepte, Fachinhalte und Logo in teilweise f ¨acher ¨ubergreifenden Szenarien erlernt. Wie die konkrete Erprobung zeigte (siehe Kapitel 4), stellte 1Gesellschaft f ¨ur Informatik 2dies eine große Herausforderung sowohl an die Sch ¨ulerinnen und Sch ¨uler als auch an die Forscherin als Lehrperson und Entwicklerin des Konzepts dar. Sie wurde aber von allen Beteiligten bew ¨altigt, was die Evaluation in Kapitel 6.1.2 zeigt. In Kapitel 2 wird zun ¨achst die Entwicklung der in Deutschland verabschiedeten Empfehlungen zu einer informatischen Bildung skizziert. Es schließt sich die Analyse der Bildungspl ¨ane der Sekundarstufe I in Baden-W ¨urttemberg im Hinblick auf ihre informatischen Inhalte an. Außerdem werden die verschiedenen Positionen der Fachdidaktik Informatik vorgestellt. Die in dieser Arbeit f ¨ur einen Einstieg in die informatische Grundbildung in Klassenstufe 5 der Realschule ausgew ¨ahlten informatischen Grundkonzepte werden in Kapitel 2.4 vorgestellt und u.a. auf Basis der Empfehlungen, Bildungspl ¨ane und fachdidaktischen Positionen begr ¨undet. Die Entwicklungsarbeit f ¨ur das Unterrichtskonzept zur Vermittlung der informatischen Grundkonzepte wird in Kapitel 3 dargestellt. Besondere Aufmerksamkeit erhalten die Aspekte der Logo-Philosophie und die Spracheigenschaften von Logo, die meines Erachtens im besonderen Maße das Erlernen der informatischen Grundkonzepte unterst ¨utzen. Außerdem werden die verschiedenen Rahmenbedingungen, die Einbettung der informatischen Grundkonzepte in die Fachinhalte der F ¨acher Mathematik, Englisch, Deutsch und Musik der Klassenstufe 5 und die eingesetzten Unterrichtsmethoden pr ¨asentiert. Es schließt sich die Vorbereitung der Fachlehrerinnen und der Eltern an. Die einzelnen Unterrichtseinheiten stehen in Kapitel 4 im Zentrum. Es werden hier die drei Phasen, in die sich die Vermittlung der informatischen Grundkonzepte einteilen l ¨asst, ausf ¨uhrlich vorgestellt. Im empirischen Teil werden zu Beginn die konkreten Fragestellungen der Studie formuliert und die quantitativen und qualitativen Erhebungsinstrumente beschrieben (vgl. Kapitel 5). Die Eignung des Gesamtkonzepts zur Vermittlung der informatischen Grundkonzepte in Mathematik, Englisch, Deutsch und Musik in Klassenstufe 5 wird in Kapitel 6 zun ¨achst aus der Sicht der beobachtenden Lehrerinnen und der betroﬀenen Sch ¨ulerinnen und Sch ¨uler dargestellt. Die die Projektarbeit betreﬀenden Aspekte werden in Kapitel 6.2 behandelt. Darauf folgen die Ergebnisse aus dem Leistungstest zu den informatischen Grundkonzepten, der zu Beginn und am Ende des Schuljahrs durchgef ¨uhrt wurde. Sie sind allgemein und getrennt nach Geschlecht und F ¨ahigkeiten im sprachgebundenen, zahlengebundenen und formallogischen Denken ausgewertet. Zur Absicherung der gewonnenen Resultate werden einzelne Unterrichtsmaterialien wie Arbeitsbl ¨atter und Programme analysiert, die Aufschluss ¨uber das Erlernen der informatischen Grundkonzepte geben. Abschließend wird die Ver ¨anderung der Einstellungen zum Computer vom Beginn bis zum Ende des Schuljahrs diskutiert. Ein zentrales Ergebnis der Forschungsarbeit zeigt, dass bereits Sch ¨ulerinnen und Sch ¨uler der Klassenstufe 5 in einem kontinuierlichen Lernprozess ¨uber ein Schuljahr hinweg informatische Grundkonzepte im Fachunterricht eingebettet erlernen k ¨onnen. Dabei entstehen in der verk ¨urzten Unterrichtszeit der F ¨acher keine erkennbaren fachlichen Deﬁzite. Vielmehr werden allgemeine F ¨ahigkeiten wie das Vorausdenken, das Strukturieren, das 31 Einleitung Anwenden von Schemata, das genaue Arbeiten und Strategien zur Bew ¨altigung von Frustrationen ausgebildet. Das letzte Kapitel fasst die Arbeit zusammen und diskutiert die Erweiterung des Unterrichtskonzepts auf die Jahrgangsstufen 6 bis 10 und das f ¨ur eine Umsetzung im Schulalltag der Realschulen notwendige Fortbildungskonzept f ¨ur Lehrerinnen und Lehrer. 42 Informatische Bildung Bereits in den sechziger Jahren wurden ganz vereinzelt in den Schulen alternative Formen des Lernens im programmierten Unterricht mit Computern erprobt (Schulmeister, 1996). Als die Hardware dann im Laufe der Zeit preisg ¨unstiger und kleiner wurde und dadurch in immer mehr Schulen zur Verf ¨ugung stand (vgl. BMBF 2003), wurden verschiedene Konzepte in Bezug auf Informatiksysteme als Unterrichtsgegenstand und Werkzeug entwickelt. Diese erhielten Bezeichnungen wie Informationstechnische Grundbildung (ITG) ,Informationstechnische Bildung ,Informatische Grundbildung ,Informatische Bildung ,Informatik-Grundbildung ,Informatik ,Medienerziehung ,Informationsund Kommunikationstechnologie (IKT) oder Informationsund Kommunikationstechnik (IuK) . Der Begriﬀ der Informatischen Bildung , verstanden als ”[...] das Ergebnis von Lernprozessen, in denen Grundlagen, Methoden, Anwendungen, Arbeitsweisen und die gesellschaftliche Bedeutung von Informatiksystemen erschlossen werden.“ (GI, 2000, S. 1), erweitert um die Medienerziehung, umfasst alle Konzepte und wird in dieser Arbeit als Oberbegriﬀ verwendet. Im Folgenden wird die historische Entwicklung der informatischen Bildung in Deutschland anhand verschiedener Empfehlungen bedeutender Organisationen und der Bildungspl ¨ane f ¨ur die Realschulen und Gymnasien der Sekundarstufe I in Baden-W ¨urttemberg dargestellt. Im Anschluss daran werden die neuen Bildungsstandards zur Informationstechnischen Grundbildung (ITG) im Bildungsplan 2004 f ¨ur Realschule (Kultusministerium Baden-W ¨urttemberg, 2004b) auf ihren allgemein bildenden Wert hin ¨uberpr ¨uft. Aus den dort geforderten und in der Fachdidaktik Informatik aktuell diskutierten Inhalten werden dann die in Klassenstufe 5 f ¨ur ein echtes Fundament einer informatischen Bildung notwendigen Inhalte, die informatischen Grundkonzepte , abgeleitet. 2.1 Empfehlungen zu einer informatischen Bildung Bereits 1963 gr ¨undete die IFIP1ein technisches Komitee f ¨ur den Bereich der informatischen Ausbildung und innerhalb dieses 1966 eine Arbeitsgruppe Informatics and ICT2in 1International Federation for Information Processing 2Information and Communication Technology 52 Informatische Bildung Secondary Education . In dieser wurden Informatiklehrpl ¨ane, die Rolle der Informatik in anderen Fachbereichen, der Einsatz von Informatiksystemen im Unterricht, der Einﬂuss der Informatik auf die Inhalte und Methoden des Lehrens und Lernens und Ideen zur Ausbildung von Lehrerinnen und Lehrern erarbeitet. In den 1970 bis 1972 entwickelten Empfehlungen (IFIP Technical Committee on Computer Education 1970, 1971 u. 1972) der Arbeitsgruppe stehen die digitale Informationsverarbeitung, die daf ¨ur notwendige Aufbereitung der Daten, Programmiersprachen, einige Hinweise zu verschiedenen Anwendungen, Algorithmen, Modellierung und die Informationsgewinnung im Mittelpunkt. In Deutschland wurde 1976 die erste Empfehlung zum Informatikunterricht in der Sekundarstufe I von der Gesellschaft f ¨ur Informatik (GI) ver ¨oﬀentlicht. In der darauf folgenden Zeit arbeiteten auch andere Organisationen wie die Bund-L ¨ander-Kommission (BLK), die Gesellschaft der Mathematik (GDM) und der Deutsche Verein zur F ¨orderung des mathematischen und naturwissenschaftlichen Unterrichts (MNU) weitere Papiere aus. Abbildung 2.1 zeigt die wichtigsten in Deutschland verabschiedeten Empfehlungen, inhaltlich und zeitlich gruppiert. Zusammenfassungen der einzelnen Dokumente sind in Anhang A zu ﬁnden. Informatik Medienerziehung IT-(Grund-)Bildung  Sek. I Sek. II GI76 GDM81 GI86 MNU85a MNU85b BLK87 GI93 BLK95 GI99 GI00  erweitert  schließt an aktualisiert aktualisiert ergänzt (*) erweitert um die besonderen  medialen Aspekte des Computers  (**) nimmt Bezug auf  (*)  (**)  (**) (**)  (**)  Abbildung 2.1: Entwicklung der Empfehlungen zur informatischen Bildung Die Gesellschaft f ¨ur Informatik, die 1969 mit dem Ziel, die Informatik zu f ¨ordern, gegr¨undet wurde und im Moment ca. 24.000 Mitglieder aus allen Bereichen der Wissenschaft, der Informatikindustrie, der Anwendungen, der Lehre und der Ausbildung hat, 62.1 Empfehlungen zu einer informatischen Bildung beeinﬂusste maßgeblich die Lehrplanentwicklung des Fachs Informatik mit zahlreichen Empfehlungen. Politisch einﬂussreicher war jedoch die Bund-L ¨ander-Kommission, in der die Fragen des Bildungswesens, die sowohl den Bund als auch die L ¨ander gemeinsam betreﬀen, diskutiert werden und die ihre Ergebnisse den Verantwortlichen auf Bundesund Landesebene vorlegt. Außerdem entstanden in den achtziger Jahren vom Deutschen Verein zur F ¨orderung des mathematischen und naturwissenschaftlichen Unterrichts, einem der gr ¨oßten Fachlehrerverb ¨ande Deutschlands, und der Gesellschaft f ¨ur Didaktik der Mathematik weitere Empfehlungen, in denen die informatische Bildung sehr stark mit Inhalten des Fachs Mathematik verkn ¨upft wurden. Die einzelnen Empfehlungen setzten ganz unterschiedliche Schwerpunkte. Sie besch ¨aftigten sich mit Informatik, informationstechnischer (Grund-)Bildung und Medienerziehung. Die Trends lassen sich zeitlich unterscheiden und sind mit der Entwicklung der Informationstechnik gekoppelt. Bevor IBM 1981 den ersten Personal Computer (PC) auf den Markt brachte, wurden Informatiksysteme fast ausschließlich als Rechenmaschinen und zur Verwaltung großer Datenmengen eingesetzt. Die Bedienung war vor allem Spezialisten vorbehalten, die diese programmierten, um mit ihnen zu interagieren. So wurden auch in der ersten Empfehlung der GI (1976) Zielsetzungen und Inhalte des Informatikunterrichts und der GDM (1981) Empfehlungen zur Einbeziehung informatischer Inhalte in den Mathematikunterricht der Sekundarstufe I Algorithmen undProgrammiersprachen als die zentralen Inhalte einer informatischen Bildung in den Vordergrund gestellt. Nachdem der PC in den darauf folgenden Jahren immer st ¨arker die Arbeitswelt durchdrang und in zunehmendem Maße in Privathaushalten zur Verf ¨ugung stand und durch die Entwicklung von Desktop-Publishing Software seine Bedienung erleichtert wurde, trat das Erlernen von Programmiersprachen zugunsten der Bedienung von Anwendungssoftware in den Hintergrund. Programmiersprachen sollten nur noch in dem Umfang eingef ¨uhrt werden, dass bereits bestehende Programme ver ¨andert oder erg ¨anzt werden konnten oder die f ¨ur die Umsetzung einer algorithmischen L ¨osung in ein lauﬀ ¨ahiges Programm notwendigen Sprachkonstrukte zur Verf ¨ugung standen. In der 1987 ver ¨oﬀentlichten Empfehlung Gesamtkonzept f ¨ur die informationstechnische Bildung – Informationstechnische Grundbildung der BLK wurden Programmiersprachen im Zusammenhang mit Grundbildung ¨uberhaupt nicht mehr erw ¨ahnt. Dieser Trend wird dadurch verdeutlicht, dass nicht mehr von einem Fach Informatik, sondern von Informationstechnischer Grundbildung (ITG) (vgl. MNU 1985a und BLK 1987) oder informationstechnischer Bildung (vgl. MNU 1985b) gesprochen wurde. Beide besaßen einen viel st ¨arkeren Anwendungsbezug und vernachl ¨assigten die allgemeinen Grundlagen. Außerdem war f ¨ur die Inhalte kein eigenes Fach mehr vorgesehen, sondern die informationstechnische Bildung wurde in Blockform in ein anderes Unterrichtsfach in Sekundarstufe I integriert. Zum ersten Mal wurden auch die individuellen Erfahrungen der Sch ¨ulerinnen und Sch ¨uler im Umgang mit der Informationstechnik im Unterricht ber ¨ucksichtigt (vgl. BLK 1987), da immer mehr im privaten Bereich Zugang zu Rechnern hatten und somit bereits mit Vorerfahrungen in den Unterricht kamen. 72 Informatische Bildung Dem Konzept der Informationstechnischen Grundbildung in Sekundarstufe I stellte die Gesellschaft f ¨ur Informatik 1986 ihre Rahmenempfehlung f ¨ur die Informatik im Unterricht der Sekundarstufe I (GI, 1986) gegen ¨uber, die weiterhin die Umsetzung von Algorithmen in programmiersprachliche Formen und somit das Erlernen von Grundelementen h¨oherer Programmiersprachen forderte. Die Erwartungen an ein Schulfach Informatik ging weiterhin ¨uber die reine Bedienung von Anwendungssoftware hinaus. Aufgrund der rasanten Entwicklung der Wissenschaft Informatik ver ¨oﬀentlichte die Gesellschaft f ¨ur Informatik 1993 eine weitere Empfehlung f ¨ur das Fach Informatik in der Sekundarstufe II (GI, 1993), die die von 1976 ersetzte. Inhaltlich stellte sie einen großen Einschnitt in die Entwicklung dar, da nicht mehr Programmiersprachen oder das Programmieren an sich, sondern Entwurfsmethoden im Vordergrund standen und die Modellierung in das Zentrum des Schulfachs Informatik ger ¨uckt wurde. Bereits wenige Jahre nach der Einf ¨uhrung der Informationstechnischen Grundbildung zeigte sich, dass sie zum Scheitern verurteilt war. Sehr h ¨auﬁg gestalteten schlecht ausgebildete Lehrerinnen und Lehrer den Unterricht als Produktschulung und vermittelten keinerlei informatisches Grundlagenwissen. Die aus diesem Missstand resultierende Kritik f¨uhrte zu einer erneuten Aufwertung der informatischen Inhalte. Parallel dazu wurden mediale Aspekte des Computers im Rahmen einer Medienerziehung st ¨arker ber ¨ucksichtigt. Die Empfehlungen Medienerziehung in der Schule der BLK (1995) und Informatische Bildung und Medienerziehung der GI (1999) beschrieben die Erwartungen an eine Medienerziehung. Letztere stellte die informatischen Inhalte ,Methoden undSichtweisen , die erst ein Verst ¨andnis des Mediums Computer erm ¨oglichen, und nicht die Nutzung des Rechners in den Mittelpunkt. In der neuesten Empfehlung f ¨ur ein Gesamtkonzept zur informatischen Bildung an allgemein bildenden Schulen der GI (2000) wurde zum ersten Mal der Einstieg in die Informatik in der Primarstufe beschrieben. Ein Computersystem soll dort funktional zurL¨osung von konkreten Aufgaben eingesetzt werden. F ¨ur die Sekundarstufe I forderte die GI dann ein eigenst ¨andiges Fach, das m ¨oglichst fr ¨uh in den Pﬂichtkanon der F ¨acher aufgenommen wird, um”rechtzeitig Fach-, Methoden-, Sozialund Selbstkompetenz im Umgang mit Information, insbesondere digital dargestellter, sowie mit Informatiksystemen auszupr ¨agen.“ (GI, 2000, S. 5). Insgesamt baute das Dokument sehr stark auf der von der Gesellschaft f ¨ur Informatik 1993 ver ¨oﬀentlichten Empfehlung auf. Lediglich der Begriﬀ der Information erhielt in der Leitlinie Interaktion mit Informatiksystemen eine neue zentrale Rolle, indem die Wichtigkeit der Strategien im Umgang mit Informationen betont wurden. Die inhaltliche Entwicklung der Empfehlungen in Deutschland verlief also von der Konzentration auf Programmiersprachen und Algorithmen ¨uber die Hinwendung zu einem sehr starken Anwendungsbezug der Inhalte in der Informationstechnischen Grundbildung und nach ihrem Scheitern zu einer R ¨uckbesinnung auf die allen Anwendungssystemen zugrunde liegenden informatischen Konzepte. 82.2 Bildungspl ¨ane der Sekundarstufe I in Baden-W ¨urttemberg 2.2 Bildungspl ¨ane der Sekundarstufe I in Baden-W¨ urttemberg Die im vorherigen Kapitel skizzierte Entwicklung der Empfehlungen ﬁndet sich zeitlich versetzt in den Rahmenlehrpl ¨anen der einzelnen Bundesl ¨ander wieder. Stritzky (1995) hat zum Beispiel die inhaltlichen Schwerpunkte des ITG-Unterrichts in den alten Bundesl¨andern bez ¨uglich der in der Empfehlung Gesamtkonzept f ¨ur die informationstechnische Bildung (BLK, 1987) vorgeschlagenen Aufgaben der informationstechnischen Bildung untersucht. Bis auf die Entwicklung der elektronischen Datenverarbeitung, die nur im Unterricht in zwei Bundesl ¨andern thematisiert wird, werden die anderen Aufgaben in fast allen Rahmenlehrpl ¨anen ber ¨ucksichtigt. In diesem Kapitel wird zun ¨achst die historische Entwicklung der in den Lehrpl ¨anen f ¨ur die Realschule und das Gymnasium in Baden-W ¨urttemberg ausgewiesenen Lehrplaneinheiten und Unterrichtsf ¨acher, die zu einer informatischen Bildung beitragen, vorgestellt. Außerdem werden ihre Bez ¨uge zu den Empfehlungen aufgezeigt. Die Lehrpl ¨ane der Hauptschule ﬁnden keine Ber ¨ucksichtigung, da sie nur in sehr geringem Umfang informatische Inhalte fordern. Speziell die Inhalte der Bildungsstandards f ¨ur Informationstechnische Grundbildung im Bildungsplan 2004 der Realschule werden genauer auf ihren allgemein bildenden Charakter und hinsichtlich der Ber ¨ucksichtigung der in den Empfehlungen vorgeschlagenen Themen analysiert. Daraus werden in Kapitel 2.4 die f¨ur eine informatische Bildung in Klasse 5 der Realschule notwendigen informatischen Grundkonzepte abgeleitet. 2.2.1 Historische Entwicklung Seit 1984 werden in Baden-W ¨urttemberg im Rhythmus von zehn Jahren vom Kultusministerium f ¨ur Wissenschaft, Bildung und Forschung neue Bildungspl ¨ane herausgegeben, die die ge ¨anderten Anforderungen an eine schulische Bildung ber ¨ucksichtigen. In dieser Arbeit werden die Teile der Bildungspl ¨ane f ¨ur das Gymnasium und die Realschule analysiert, die einen Beitrag zur informatischen Bildung leisten. Die Bildungspl ¨ane von 1984 zeichnen das Fach Mathematik aus, Grundkenntnisse ¨uber Computer und Informatik zu vermitteln. Sie enthalten jeweils in Klassenstufe 9 eine Lehrplaneinheit. In der Realschule geht es um die Formulierung von L ¨osungsabl ¨aufen f¨ur einfache Probleme, die auf dem Computer ausgef ¨uhrt werden k ¨onnen. Im Bildungsplan f ¨ur das Gymnasium wird der ganze Prozess der Erstellung einer Probleml ¨osung mit Hilfe des Computers betont und die Angemessenheit des Einsatzes von Computern thematisiert (siehe Tabelle 2.1). Beide Bildungspl ¨ane orientieren sich sehr stark an der 1981 von der GDM verabschiedeten Empfehlung zur Einbeziehung informatischer Inhalte in den Mathematikunterricht der Sekundarstufe I (GDM, 1981). Die gesellschaftlichen Auswirkungen der Datenverarbeitung und die theoretischen und technischen Grundlagen 92 Informatische Bildung der Informatik, die in der ersten GI-Empfehlung 1976 f ¨ur die Sekundarstufe II formuliert sind, werden hier nicht ber ¨ucksichtigt. 1984 Realschule – Klasse 9 LPE”Sachrechnen und Computer“ (Mathematik) * Programmierung 1984 Gymnasium – Klasse 9 LPE”Elemente der Informatik“ (Mathematik) * Analyse eines Problems, Erstellung eines Algorithmus, Programmierung, Test der L ¨osung und Dokumentation * Beurteilung der Einsatzm ¨oglichkeit eines Computers Tabelle 2.1: Grundkenntnisse ¨uber Computer und Informatik in den Bildungspl ¨anen von 1984 (Kultusministerium Baden-W ¨urttemberg 1984b u. 1984a) In den Bildungspl ¨anen von 1994 (vgl. Tabelle 2.2) spiegeln sich dann deutlich die Empfehlungen der MNU (1985a und 1985b) und der BLK (1987) wider. 1994 Realschule – Klasse 7 Informationstechnische Grundbildung (eigenes Fach) * Einweisung in den Computerarbeitsplatz * Einf ¨uhrung in die Textverarbeitung * Erste Erfahrungen mit dem Computer Realschule – Klasse 8 Informationstechnische Grundbildung (eigenes Fach) * Informationstechnische Werkzeuge * Einsatzm ¨oglichkeiten * Auswirkungen 1994 Gymnasium – Klasse 8 LPE”Informationstechnische Grundkenntnisse“ (Mathematik) Bis Klasse 11 soll der Computer in verschiedenen F ¨achern praxisbezogen als Werkzeug und Medium im Rahmen der Informationstechnischen Grundbildung eingesetzt werden * Informationstechnische Werkzeuge * Einsatzm ¨oglichkeiten * Erstellung und Ausf ¨uhrung einfacher Programme * Auswirkungen Tabelle 2.2: Lehrpl ¨aneInformationstechnische Grundbildung und Informationstechnische Grundkenntnisse von 1994 (Kultusministerium Baden-W ¨urttemberg 1994b u. 1994a) 102.2 Bildungspl ¨ane der Sekundarstufe I in Baden-W ¨urttemberg Die informatischen Inhalte werden zugunsten der Anwendungen zur ¨uckgedr ¨angt. Dieser Aspekt wird noch dadurch verst ¨arkt, dass zum Beispiel die in der Empfehlung der MNU formulierten informatischen Themen wie die Anpassung von Anwendungen, die Modellierung oder die Probleml ¨osung mit dem Computer keine oder kaum Ber ¨ucksichtigung ﬁnden. Neu in Bezug auf die Bildungspl ¨ane von 1984 ist die explizite Besch ¨aftigung mit den gesellschaftlichen Auswirkungen der Informationstechnik. In der Realschule ist zum ersten Mal ein eigenes Fach ¨uber zwei Schuljahre hinweg ausgewiesen. Dadurch steht gen ¨ugend Zeit zur Verf ¨ugung, eine solide Grundbildung der festgelegten Inhalte zu vermitteln. Im Bildungsplan des Gymnasiums wird dagegen nur eine Lehrplaneinheit im Fach Mathematik formuliert. Eine Integration des Computers als Werkzeug und Medium in den Unterricht anderer F ¨acher bleibt engagierten Lehrerinnen und Lehrern ¨uberlassen. Findet sie vor der 7. bzw. 8. Klassenstufe statt, muss die Einarbeitung extra erfolgen. In den neuen Bildungspl ¨anen 2004 ist auch in der Realschule wieder auf ein eigenes Fach verzichtet worden. In beiden Schulformen soll eine Informationstechnische Grundbildung in allen Klassenstufen der Sekundarstufe I integriert vermittelt werden (siehe Tabelle 2.3). 2004 Realschule – Klassen 5 10 Informationstechnische Grundbildung, integriert in nicht n ¨aher speziﬁzierte F¨acher * Arbeiten und Lernen mit informationstechnischen Werkzeugen * Zusammenarbeiten und Kommunizieren * Entwickeln, Zusammenh ¨ange verstehen, Reﬂektieren 2004 Gymnasium – Klassen 5 10 Informationstechnische Grundbildung, integriert in nicht n ¨aher speziﬁzierte F¨acher * Selbstst ¨andiges Arbeiten und Lernen mit informationstechnischen Werkzeugen * Erfolgreich Zusammenarbeiten und Kommunizieren * Entwickeln, Zusammenh ¨ange verstehen und Reﬂektieren Tabelle 2.3: Bildungsstandards f ¨ur Informationstechnische Grundbildung f¨ur die Sekundarstufe I an Realschulen und Gymnasien von 2004 (Kultusministerium Baden-W ¨urttemberg 2004b u. 2004a) Im Gymnasialbereich ist projektorientiertes und in der Realschule produktorientiertes Arbeiten vorgesehen. Die Arbeit soll die Medienkompetenz der Sch ¨ulerinnen und Sch ¨uler f¨ordern. Die drei Kompetenzbereiche Arbeiten und Lernen mit informationstechnischen Werkzeugen ,Zusammenarbeiten und Kommunizieren undEntwickeln, Zusammenh ¨ange verstehen, Reﬂektieren stimmen in beiden Schularten ¨uberein. Die h ¨oheren Anforderun112 Informatische Bildung gen im gymnasialen Bereich werden durch die qualitativen Beschreibungen f ¨ur die ersten beiden Bereiche zum Ausdruck gebracht. Die Inhalte beider Bildungspl ¨ane k ¨onnen den in der Empfehlung der GI (1999) herausgestellten medialen Funktionalit ¨aten des Computers zugeordnet werden. Das Arbeiten und Lernen mit informationstechnischen Werkzeugen entspricht der Interaktion, das Zusammenarbeiten und Kommunizieren der Vernetzung und das Entwickeln, Zusammenh ¨ange verstehen und Reﬂektieren zum Teil dem Verarbeiten von Daten. Die konkreten Inhalte sind in den Bildungspl ¨anen oberﬂ¨achlicher als in der Empfehlung der Gesellschaft f ¨ur Informatik formuliert. Keiner der Kompetenzbereiche ber ¨ucksichtigt zum Beispiel die f ¨ur eine informatische Bildung sehr wichtigen Inhalte der Modellierung und der Verfahren der Softwareentwicklung. Tiefer gehende informatische Sichtweisen und Methoden, die in der Empfehlung Informatische Bildung und Medienerziehung (GI, 1999) gefordert werden, spielen keine Rolle. 2.2.2 Bildungsstandards f¨ ur Informationstechnische Grundbildung an Realschulen Die f¨ur eine Informationstechnische Grundbildung notwendigen Kompetenzen werden in den Bildungsstandards, wie weiter oben beschrieben, in drei Bereiche aufgeteilt. Ihnen sind in Abbildung 2.2 die inhaltlich in Gruppen zusammengefassten Kompetenzen und Inhalte zugeordnet. Sie bilden ein Fundament, aus dem nach den Bildungsstandards in systematischen Lernprozessen allgemeine F ¨ahigkeiten wie das Abstraktionsverm ¨ogen, die Modellierung etc. entwickelt werden k ¨onnen (Kultusministerium Baden-W ¨urttemberg, 2004b, S. 189). Die F ¨ahigkeiten sind in Wolken eingebettet, da aus den Bildungsstandards nicht hervorgeht, unter welchen konkreten Bedingungen sie gef ¨ordert werden. Der Umgang mit Softund Hardware steht in allen drei Bereichen sehr stark im Vordergrund. Außerdem nimmt die Thematisierung der gesellschaftlichen Auswirkungen eine zentrale Rolle ein. Grundlegenden Aspekten wird dagegen sehr wenig Platz einger ¨aumt. Beim Zusammenarbeiten und Kommunizieren sind es nur die Beschreibung der Organisationsstruktur vernetzter Umgebungen und im Bereich Entwickeln, Zusammenh ¨ange verstehen, Reﬂektieren die Darstellung des Aufbaus von Datenverarbeitungssystemen und der Umgang mit Grundbegriﬀen der Digitalisierung. Dies widerspricht der in der Empfehlung Informatische Bildung und Medienerziehung formulierten inhaltlichen Forderung an eine informatische Bildung: ”Strukturen, die f ¨ur bestimmte Abl ¨aufe erforderlich sind, oder Arbeitsweisen des Systems, die bestimmte Funktionalit ¨aten erm ¨oglichen, werden analysiert und auf grundlegende verallgemeinerbare Prinzipien zur ¨uckgef ¨uhrt. Die informationstechnologischen Zusammenh ¨ange werden auf diese Weise durchschaubarer und f ¨ur eigene Gestaltungsaufgaben verf ¨ugbar gemacht.“ (GI, 1999) 122.3 Standpunkte der Fachdidaktik Informatik Arbeiten und Lernen mit  informationstechnischen  Werkzeugen  ●Verwendung von  Software  ●Bedienung von Hardware  zur Eingabe von Daten  ●Einschätzung der  Qualität von Lern-/  Freizeitsoftware und  Informationsund  Medienangebote  ●Rechtliche Aspekte Zusammenarbeiten  und  Kommunizieren  ●Arbeiten in vernetzten  Umgebungen  ●Gesellschaftliche  Auswirkungen und  rechtliche Aspekte der  Vernetzung  ●Basiswissen vernetzter  Umgebungen Entwickeln,  Zusammenhänge verstehen  und Reflektieren  ●Verarbeiten von Daten  ●Simulationen  ●Einschätzung der Qualität  von Hardund Software und  Computer-Arbeitsplätzen  ●Gesellschaftliche Aus wirkungen des Einsatzes  von Informatiksystemen  ●Basiswissen Modellbildung Vorausschauendes und  vernetztes Denken Selbstständigkeit und  Zuverlässigkeit Organisations fähigkeit  Abschätzung von Technik und Technologiefolgen  Gestaltungs fähigkeit  Lernfähigkeit Abstraktions vermögen Medienkompetenz  Team fähigkeit Kommunikations fähigkeit Kreativität Schlüsselqualifikationen  Informationstechnische Kompetenzen und Inhalte  Abbildung 2.2: Bildungsstandards f ¨ur Informationstechnische Grundbildung an Realschulen: Kompetenzen und Inhalte (Kultusministerium Baden-W ¨urttemberg, 2004b) Auch den Forderungen von L ¨othe (2004), die Lernenden dahingehend auszubilden, dass sie nicht nur die gerade anstehenden Probleme bew ¨altigen k ¨onnen, sondern den st ¨andig neu auftretenden Anforderungen gewachsen bleiben, wird durch die Bildungsstandards nicht Rechnung getragen. 2.3 Standpunkte der Fachdidaktik Informatik Die Vertreter der Fachdidaktik Informatik im deutschsprachigen Raum pr ¨asentieren ganz unterschiedliche inhaltliche Vorschl ¨age f ¨ur eine informatische Bildung. Schubert und Schwill (2004) suchen nach einem Fundamentum als Quelle f ¨ur Gegenst ¨ande, die im Informatikunterricht vermittelt werden sollen. Dieses muss ihrer Meinung nach existieren, da es trotz der verschiedenen Paradigmenwechsel im Bereich der Informatik keine wissenschaftlichen Revolutionen, sondern nur Weiterentwicklungen gegeben hat. Das 132 Informatische Bildung Fundamentum sichert”eine gewisse Aktualit ¨at bei gleichzeitiger Best ¨andigkeit des Informatikunterrichts“ (Schubert und Schwill, 2004, S. 73). Seine Inhalte werden aus den beim Software-Entwicklungsprozess typischen Vorgehensweisen von Informatikern abgeleitet und m ¨ussen den Kriterien einer fundamentalen Idee gen ¨ugen. Schubert und Schwill (2004, S. 85) deﬁnieren eine fundamentale Idee folgendermaßen: ”Eine fundamentale Idee bezgl. eines Gegenstandsbereichs (Wissenschaft, Teilgebiet) ist ein Denk-, Handlungs-, Beschreibungsoder Erkl ¨arungsschema, das 1.in verschiedenen Gebieten des Bereichs vielf ¨altig anwendbar oder erkennbar ist ( Horizontalkriterium ), 2.auf jedem intellektuellen Niveau aufgezeigt und vermittelt werden kann (Vertikalkriterium ), 3.zur Ann ¨aherung an eine gewisse idealisierte Zielvorstellung dient, die jedoch faktisch m ¨oglicherweise unerreichbar ist ( Zielkriterium ), 4.in der historischen Entwicklung des Bereichs deutlich wahrnehmbar ist und l ¨angerfristig relevant bleibt ( Zeitkriterium ) und 5.einen Bezug zu Sprache und Denken des Alltags und der Lebenswelt besitzt ( Sinnkriterium ).“ Auf Basis der Analyse der Phasen des Software-Life-Cycles ( Problemanalyse ,Entwurf , Implementierung ,Funktions ¨uberpr ¨ufung undLeistungs ¨uberpr ¨ufung ) werden die drei Masterideen Algorithmisierung ,Sprache und strukturierte Zerlegung identiﬁziert. Abbildung 2.3 zeigt diese mit den ihnen untergeordneten Ideen. Hubwieser (2001) leitet die f ¨ur ein Fach Informatik relevanten Inhalte von dem zentralen Begriﬀ der Information ab und spricht von einem informationszentrierten Ansatz . Ausgehend von dem Grundschema jeder k ¨unstlichen Informationsverarbeitung, identiﬁziert er die Repr¨asentation von Informationen mit verschiedenen Darstellungstechniken, die Verarbeitung und den Transport dieser Repr ¨asentation , aus der dadurch eine neue Repr ¨asentation entsteht, und zuletzt die Interpretation der neuen Repr ¨asentation . Die Masterideen Algorithmisierung ,Sprache undstrukturierte Zerlegung von Schubert und Schwill (2004) sieht er in den Bereichen Verarbeitung, Darstellung und Verteilung ber¨ucksichtigt. F ¨ur die Auswahl konkreter informatischer Inhalte fasst er das Horizontalund Sinnkriterium zu einem Kriterium gr ¨oßtm ¨oglicher Allgemeing ¨ultigkeit zusammen und¨ubernimmt das Zeitund Vertikalkriterium. Außerdem f ¨uhrt er als neue Anforderung die exemplarische Auswahl von Inhalten und die M ¨oglichkeit zu ihrer Einﬂechtung in andere Themen ein. Zentral ist f ¨ur ihn die Modellierung. Sie erzeugt ”[...] eine Hilfsebene zwischen der Problemund der Implementierungsebene, die es erlaubt, im Lehrplan alle wesentlichen Anforderungen an den Unter142.3 Standpunkte der Fachdidaktik Informatik Algorithmisierung  Entwurfsparadigmen  Branch and Bound  Divide and Conquer  Greedy-Methode  Backtracking Programmierkonzepte  Konkatenation  Alternative  Iteration  Rekursion  Nichtdeterminismus  Parametrisierung  Parallelisierung Ablauf  Prozess  Prozessor Evaluation  Verifikation  part. Korrektheit  Terminierung  Konsistenz  Vollständigkeit  Fairness Komplexität  Reduktion  Diagonalisierung  Ordnung  unit-cost Maß  log-cost Maß  worst/average/amortized case  Strukturierte Zerlegung  Modularisierung  Methoden  Top-down  Bottom-up  Geheimnisprinzip Hilfsmittel  Lokalität von Objekten  Spezifikation  abstrakter Datentyp  Teamarbeit Hierarchisierung  Darstellung  Schachtelung  Baum  Klammerung  Einrückung Realisierung  Übersetzung  Interpretation  operationale Erweiterung  Vererbung Orthogonalisierung  Emulation  Syntax  Erkennen  Erzeugen Semantik  Konsistenz  Vollständigkeit  Transformation Sprache  Abbildung 2.3: Fundamentale Ideen der Informatik (Schubert und Schwill, 2004, S. 97) richt zu formulieren, ohne auf programmiertechnische Details wie spezielle Datenstrukturen oder bestimmte Algorithmen eingehen zu m ¨ussen.“ (Hubwieser, 2001, S. 90) Anhand verschiedener Modellierungstechniken sollen Modelle entwickelt und m ¨oglichst implementiert werden. Im Vordergrund steht immer die Konstruktion der Modelle und nicht ihre Implementierung in einer bestimmten Programmiersprache. Hartmann und Nievergelt (2002) bezeichnen die Informatik als Basiswissenschaft. Unterricht muss deshalb die folgenden drei Ziele verfolgen: •Vermittlung der f ¨ur den Alltag unabdingbaren Fertigkeiten •Einblick in das Wesen und die intellektuellen Errungenschaften des Fachs •Schaﬀung eines Bewusstseins f ¨ur die Bedeutung und Rolle des Fachs in einem gr¨oßeren gesellschaftlichen Rahmen. 152 Informatische Bildung Um diese Ziele zu erreichen, m ¨ussen verschiedene Facetten der Informatik betrachtet werden. Der Informatik-Turm (Nievergelt, 1995) in Abbildung 2.4 stellt die verschiedenen Aspekte dar. Die Schichten des Bauwerks sind zwar unterschiedlich gewichtet, der Turm w ¨urde ohne Fundament jedoch zusammenbrechen. F ¨ur eine fundierte, allgemein bildende und trotzdem praxisorientierte Ausbildung in der Basiswissenschaft Informatik wird deshalb von Reichert & al. (2004, S. 4) gefordert, dass der Informatik-Turm in seiner ganzen H ¨ohe zumindest besichtigt wird. Dadurch wird es erst m ¨oglich, dass komplexe Informatiksysteme sinnvoll und angemessen eingesetzt werden. “Der Computerbenutzer muss die technische Speziﬁkation des unsichtbaren Eisbergs nicht kennen. Aber er sollte wissen, dass sich unter der Oberﬂ ¨ache eine gewaltige Infrastruktur versteckt und warum die sichtbare Spitze ¨uberhaupt schwimmt.“ (Reichert & al., 2004, S. 5) Theorie:  abstrakt, mathematisch, allgemein,  objektiv, „geht oder geht nicht“,  Ergebnis zeitlos, wie Grundgesetze  der Naturwissenschaften Algorithmik:  Entwurf, Analyse, Optimierung, Testen  von Standardabläufen  „Programmieren im Kleinen “System-Realisierung:  Entwurf und Implementation, in  Hardware und Software, von allgemein  verwendbaren Systemen  „Programmieren im Großen “Anwendungsmethodik:  stark zeitabhängig  „eine Lösung verkaufen“  Abbildung 2.4: Informatik-Turm (Nievergelt, 1995) Wie Nievergelt polarisiert auch Friedrich (2003) nicht zwischen der Benutzung von Informatiksystemen und der Vermittlung ihrer theoretischen Grundlagen in einem Schulfach Informatik. Als inhaltlichen Ausgangspunkt f ¨ur die Entwicklung seines Stufenmodells einer informatischen Bildung w ¨ahlt er die von der Gesellschaft f ¨ur Informatik formulierten Leitlinien informatischer Bildung (GI, 2000). “Letztlich ist es doch nur auf der Basis grundlegender Kenntnisse zu Interaktionen, Wirkprinzipien und Modellen von Informatiksystemen erst sinnvoll, ¨uber M ¨oglichkeiten und Grenzen von Computern zu diskutieren und deren gesellschaftliche Wirkung im Informationszeitalter einsch ¨atzen zu lernen.“ (Friedrich, 2003, S. 134) 162.3 Standpunkte der Fachdidaktik Informatik In Anlehnung an die Kompetenzen der mathematischen oder naturwissenschaftlichen Grundbildung der PISA-Studie (Deutsches PISA-Konsortium, 2001) formuliert er f ¨unf informatische Kompetenzstufen ¨uber alle Leitlinien informatischer Bildung hinweg und diﬀerenziert sie wie in Tabelle 2.4 dargestellt. Leitlinien informatischer Bildung Interaktion mit Informatiksystemen (IS)Wirkprinzipien von ISInformatische ModellierungWechselwirkung IS, Mensch und Gesellschaft Stufe I Bedienung von Informatikanwendungen Einfache Bedienung; Nachvollzug von HandlungenBenennung von Teilen eines ComputerarbeitsplatzesErfassen typischer Bestandteile und EigenschaftenBeziehungen in der Umgangssprache darstellen Stufe II Benutzung von Informatiksystemen Komplexe Bedienung; Erfassen von Abl¨aufenWissen um Grundfunktionen von ISModellhafte Darstellung von Abl¨aufenComputer in unterschiedlichen Lebenssituationen Stufe III Kenntnis fachsystematischer Grundlagen Fertigkeiten zum L¨osen typischer AufgabenklassenEinordnung in Fachsystematik; grundlegende FachbegriﬀeDeﬁnition und Anwendung des ModellbegriﬀsKritische Reﬂektion zur Nutzung von Informationen; historische Entwicklung Stufe IV Verst ¨andnis von Konzepten der Informatik Umgang mit Systemen; Auswahl von MethodenTheoretische Grundlagen; Fachbegriﬀe und KonzepteEinfache Modelle entwickeln und implementierenBeurteilung von Auswirkungen Stufe V Entwicklung und Bewertung von Informatiksystemen Konstruktion und Implementierung von L ¨osungen mit verschiedenen WerkzeugenAnwenden und Entwickeln von KonzeptenKomplexere Modelle mit unterschiedlichen Werkzeugen bearbeitenBewertung des Einsatzes von Informatiksystemen Tabelle 2.4: Zusammenhang der Leitlinien informatischer Bildung und informatischer Kompetenz (nach Friedrich, 2003, S. 135 und S. 140) 172 Informatische Bildung Auch Puhlmann (2003) greift auf die PISA-Studie und die Empfehlungen der GI (2000) zur¨uck. Orientiert an dem allgemeinen Grundbildungsbegriﬀ von PISA, deﬁniert er zun¨achst informatische Literalit ¨at: “Informatische Literalit ¨at ist die F ¨ahigkeit einer Person, die Rolle zu erkennen und zu verstehen, die Informatik und Informatiksysteme in der Welt spielen, fundierte auf informatischem Wissen beruhende Urteile abzugeben und sich auf eine Weise mit der Informatik und ihren Anwendungen zu befassen, die den Anforderungen des gegenw ¨artigen und k ¨unftigen Lebens dieser Person als konstruktivem, engagiertem und reﬂektierendem B ¨urger entspricht.“ (Puhlmann, 2003, S. 148) Welche Informatikinhalte Basis informatischer Literalit ¨at sind, leitet er aus den informatischen T ¨atigkeiten der Jugendlichen in ihrer Lebenswirklichkeit ab. Er identiﬁziert die drei Kompetenzklassen Anwendung ,Gestaltung undEntscheidung und ordnet ihnen T¨atigkeiten und informatisches Wissen zu (siehe Tabelle 2.5). Anwendung T¨atigkeit: Anwendung von Informatiksystemen zur L ¨osung von Problemen aus dem pers ¨onlichen Umfeld Gestaltung T¨atigkeit: Gestaltung von Informatiksystemen auf Grundlage von Modellierungsprozessen; h¨auﬁg unter Verwendung bereits bestehender Informatiksysteme Wissen: Verst ¨andnis der Funktionsweise und Struktur der eingesetzten Informatiksysteme Allgemeines informatisches Fachwissen zur Erstellung eines informatischen Modells Entscheidung T¨atigkeit: Verantwortungsvolles Entscheiden ¨uber den Einsatz und die Entwicklung von Informatiksystemen; reﬂektierte Einsch ¨atzung der Auswirkungen von Informatiksystemen im gesellschaftlichen Kontext sowie auf das Individuum Wissen: Prinzipielle und praktische M ¨oglichkeiten und Grenzen von Informatiksystemen Tabelle 2.5: Kompetenzklassen nach Puhlmann (2003, S. 148) (Wedekind & al., 2004a) fordert eine Informatik als Grundbildung. Dazu geh ¨ort seiner Meinung nach die Vermittlung von Basiskompetenzen, die Voraussetzung f ¨ur den Erwerb einer Allgemeinbildung sind. Ohne Anspruch auf Vollst ¨andigkeit benennt er folgende sechs Themen, die dabei eine entscheidende Rolle spielen: •Schema und Auspr ¨agung verstanden als universelle und spezielle, singul ¨are Beschreibung von Gegenst ¨anden; Schemata sind situationsunabh ¨angig und beliebig oft wiederholbar. In der Informatik sind Klassen, Relationen oder Programmcode Beispiele f ¨ur Schemata und 182.3 Standpunkte der Fachdidaktik Informatik Objekte, Tupel oder ablaufende Programme Beispiele f ¨ur Auspr ¨agungen. Insgesamt ist der Anteil der computerisierbaren Schemata gering, aber sie bedeuten ”heute im Alltagsleben bei der t ¨aglichen Problembew ¨altigung sehr viel“ (Wedekind & al., 2004a). •Bildung von Elementars ¨atzen nach einer rationalen Grammatik, mit der alle Sprachen beschrieben werden k ¨onnen; Eine rationale Grammatik ist die Grundlage aller Sprachen, die der Rechner versteht. Aufgrund ihres Anspruchs auf Allgemeing ¨ultigkeit f ¨ur alle Sprachen muss sie sehr einfach sein. Dadurch ist sie f ¨ur die menschliche Kommunikation zu primitiv, jedoch kann mit ihrer Hilfe eine”methodische Rekonstruktion unserer gesprochenen Sprache“ (Wedekind & al., 2004b, S. 265) vorgenommen werden. Durch die Schemabildung bei der Rekonstruktion ist eine Automatisierung von Sprache erst m¨oglich. •Gleichheit und Abstraktion Im Prozess der Abstraktion wird in einer Menge verschiedener Objekte nach Eigenschaften gesucht, die in gewisser Hinsicht gleich sind. Die Gleichheit wird ¨uber ¨Aquivalenzrelationen beschrieben, die konkret benannt werden. Im Prinzip ist in der Informatik jede Schnittstelle eine Abstraktion (Wedekind & al., 2004c). •Objektsprache/Metasprache Notwendige Voraussetzung f ¨ur Kommunikation ist das Verst ¨andnis einer gemeinsamen Sprache, d.h. eines gemeinsamen Schemas. Dieses muss allerdings selbst wieder mit Hilfe einer Sprache, einer Schemabeschreibungssprache, beschrieben werden. Dabei handelt es sich um eine Metasprache, in der die Grammatik der Kommunikation festgelegt ist (Wedekind & al., 2004d). •Namensgebung und Kennzeichnung Um mit Objekten zu arbeiten, m ¨ussen sie referenziert werden k ¨onnen. Wedekind & al. (2004a) behaupten, dass die reale Welt nahezu namenlos ist und aus diesem Grund die Dinge gekennzeichnet werden m ¨ussen. Insbesondere gilt dies nat ¨urlich f¨ur virtuelle Objekte in Informatiksystemen, so dass Kennzeichnungen in der Informatik h ¨auﬁg auftreten. •Logik und Geltungssicherung von Behauptungen Zur Entwicklung von Strukturen in jedem”Durcheinander“ m ¨ussen Ordnungsregeln angewendet werden. Die dialogische Logik bietet nach Meinung von Wedekind & al. (2005) m ¨ogliche Hilfsmittel zur Strukturierung. Tabelle 2.6 fasst die verschiedenen Positionen der Fachdidaktik Informatik noch einmal zusammen. 192 Informatische Bildung Bezeichnung Ausgangspunkt Schwerpunkte Bedingungen Schubert und Schwill (2004) Fundamentale Ideen der InformatikSoftwareentwicklungsprozessAlgorithmisierung, Sprache, strukturierte ZerlegungHorizontal, Vertikal-, Ziel, Zeitund Sinnkriterium Hubwieser (2001) Informationszentrierter AnsatzGrundschema jeder k¨unstlichen InformationsverarbeitungDarstellung von Information, Verarbeitung und Transport von Repr ¨asentation, Interpretation von Repr ¨asentationAllgemeine Bedeutung, Lebensdauer, Vermittelbarkeit, exemplarische Auswahl/Verﬂechtung Reichert & al. (2004), Nievergelt (1995) InformatikTurmKonzepte jeder Informatikl ¨osungAnwendungsmethodik, SystemRealisierung, Algorithmik und TheorieLanglebige, verallgemeinerungsf ¨ahige Begriﬀe und Prinzipien Friedrich (2003) Informatische KompetenzLeitlinien aus GI (2000), Kompetenzstufen der PISA-StudieBedienung, Benutzung von IS, Kenntnis fachsystematischer Grundlagen, Verst ¨andnis von Konzepten der Informatik, Entwicklung und Bewertung von IS Puhlmann (2003) Informatische Literalit ¨atGrundbildungsbegriﬀ der PISAStudie, GI (2000)Anwendung, Gestaltung, EntscheidungInform. T ¨atigkeiten der Jugendlichen in ihrer Lebenswirklichkeit in einer Industrienation Wedekind & al. (2004a) Informatik als Grundbildung, informatical literacyInformationsverarbeitungSchema und Auspr ¨agung, Bildung von Elementars ¨atzen, Gleichheit und Abstraktion, Objektsprache/ Metasprache, Namensgebung und Kennzeichnung, Logik und Geltungssicherung von BehauptungenBasiskompetenzen Tabelle 2.6: Positionen der Fachdidaktik Informatik 202.4 Informatische Grundkonzepte in Klasse 5 der Realschule 2.4 Informatische Grundkonzepte in Klasse 5 der Realschule Im Bildungsplan 2004 f ¨ur Realschulen in Baden-W ¨urttemberg wird im Erziehungsund Bildungsauftrag gefordert, dass die Schule”auf lebenslanges und nachhaltiges Lernen, auf praktische Lebensbew ¨altigung in Alltag und Beruf sowie auf aktive Teilhabe am gesellschaftlichen Leben“ vorbereitet und eine”allgemeine Bildung“ (Kultusministerium Baden-W ¨urttemberg, 2004b, S. 5) vermittelt. Speziell f ¨ur die Informationstechnische Grundbildung wird folgende Bedeutung herausgestellt: “Die Informationstechnische Grundbildung (ITG) ist ein wesentlicher Bestandteil zeitgem ¨aßer Allgemeinbildung. Wichtig ist dabei die F ¨ahigkeit, Informationsund Kommunikationstechniken kritisch zu beurteilen sowie in individueller und sozialer Verantwortung zu nutzen.“ (Kultusministerium Baden-W ¨urttemberg, 2004b, S. 6) Durch die zu starke Hervorhebung der Anwendung von Informatiksystemen und die Vernachl ¨assigung von Grundlagenwissen werden die Bildungsstandards f ¨ur Informationstechnische Grundbildung 2004 in Baden-W ¨urttemberg den Anspr ¨uchen einer Allgemeinbildung und der Unterst ¨utzung von lebenslangem Lernen nicht gerecht. F ¨ur den Einstieg in eine Grundbildung in Klassenstufe 5 erscheinen nach Ansicht der Autorin dieser Arbeit folgende Inhalte relevant: •Wirkprinzipien von Informatiksystemen : Algorithmisierung, Automatisierung und Codierung •Informatische Modellierung : Datenstrukturen, Modellierung und Objektorientierung •Arbeitstechniken : Modularisierung, Hierarchisierung, Abstraktion, Iteration und Rekursion •Informatische Beschreibungsmittel : Programmablaufpl ¨ane, Syntaxdiagramme, UML-Klassendiagramme, Hierarchien und Netzwerke •Fachnahe Inhalte : Grammatik, Syntax, Semantik und Funktionsbegriﬀ. Diese werden im Folgenden als informatische Grundkonzepte bezeichnet. Ihre Auswahl wird von der Autorin durch die Veriﬁzierung der Kriterien fundamentaler Ideen, wie sie bereits in Wursthorn (2005c) skizziert wurden, begr ¨undet. Die Standpunkte der Fachdidaktik Informatik bilden die Basis f ¨ur das Horizontalkriterium, da dort ¨uber ganz verschiedene Bereiche der Informatik diskutiert wird. Das Zeitkriterium und damit die l¨angerfristige Relevanz der informatischen Grundkonzepte werden durch die Analyse der Entwicklung der Empfehlungen zur informatischen Bildung abgeleitet. Dem Zielkriterium werden die in den Bildungsstandards f ¨ur Informationstechnische Grundbildung (Kultusministerium Baden-W ¨urttemberg, 2004b) genannten Schl ¨usselqualiﬁka212 Informatische Bildung tionen, wie die F ¨ahigkeit zum Absch ¨atzen von Technikund Technologiefolgen, vorausschauendes und vernetztes Denken, Modellierung, Abstraktionsverm ¨ogen, Kreativit¨at, Selbstst ¨andigkeit und Zuverl ¨assigkeit, Organisations-, Kommunikations-, Team-, Gestaltungsund Lernf ¨ahigkeit, zugeordnet. Das Sinnkriterium wird aus der Perspektive der Anwendung von Informatiksystemen in der Schule, im sp ¨ateren Berufsleben und in der Freizeit betrachtet. Allein das Vertikalkriterium hat bei der Auswahl der informatischen Grundkonzepte keine große Bedeutung, da das in dieser Arbeit entwickelte Unterrichtskonzept sich lediglich auf die Klassenstufe 5 beschr ¨ankt. Mit der Auswahl der informatischen Grundkonzepte erhebt die Autorin keinen Anspruch auf Vollst ¨andigkeit. Auf die explizite Nennung des gesellschaftlichen Bereichs der informatischen Bildung wurde verzichtet, da die Themen entweder in Klassenstufe 5 im Kontext fachlicher oder anderer informatischer Inhalte angesprochen werden oder ihre Relevanz f ¨ur die Sch ¨ulerinnen und Sch ¨uler in diesem Alter noch sehr gering ist. Horizontalkriterium In den Ans ¨atzen der Didaktik der Informatik von Schubert und Schwill (2004) und Nievergelt (1995) wird die Algorithmisierung bzw. Algorithmik als¨ubergeordnete Kategorie gew ¨ahlt. Ihr wird dadurch eine besondere Bedeutung zugemessen. Friedrich (2003) nennt sie explizit und ordnet sie der Kompetenzstufe Verst ¨andnis von Konzepten der Informatik zu. Wedekind & al. (2004a) beschreibt einen Algorithmus als Ablauf oder Vorgang eines Schemas. Allein Hubwieser (2001) und Puhlmann (2003) nennen die Algorithmisierung nicht. Sie kann h ¨ochstens dem Bereich Verarbeitung von Repr ¨asentation und der Kompetenzklasse Gestaltung zugeordnet werden. Die Automatisierung spielt bei Hubwieser die gr ¨oßte Rolle. Explizit wird auf die M ¨oglichkeit der automatischen Verarbeitung von Informationen durch Informatiksysteme hingewiesen. Wedekind bettet das Automatisieren in den Kontext der Schemata ein. In den anderen Ans ¨atzen kann die Automatisierung dem Bereich der Ablaufprozesse oder den prinzipiellen und praktischen M¨oglichkeiten und Grenzen von Informatiksystemen zugeordnet werden. Die Codierung wird von keinem der Fachdidaktiker erw ¨ahnt. Dieinformatische Modellierung umfasst die Bereiche Datenstrukturen ,Modellierung und Objektorientierung . Der Kategorie Datenstrukturen werden die Bezeichnungen (abstrakte)Datentypen undSchema hinzugef ¨ugt. Im Komplex des Programmierens im Kleinen sind implizit Datenstrukturen enthalten, so dass auch hier eine fast vollst ¨andige Abdeckung aller fachdidaktischen Positionen gegeben ist. Bei Hubwieser, Friedrich und Puhlmann nimmt das Modellieren eine zentrale Rolle ein. Hubwieser bezeichnet die Modellierung als ”[...] einen Themenbereich der Informatik, der aufgrund seiner immensen Bedeutung f ¨ur die Allgemeinbildung [...] in keinem Informatikunterricht ¨ubergangen werden kann.“ (Hubwieser, 2001, S. 85) 222.4 Informatische Grundkonzepte in Klasse 5 der Realschule Friedrich ordnet das Anwenden des Modellbegriﬀs und das Entwickeln, Implementieren und Bearbeiten von Modellen seinen Kompetenzstufen III bis V zu und Puhlmanns Kompetenzklasse Gestaltung wird der Modellierungsprozess zugrunde gelegt. Bei Nievergelt kann man die informatische Modellierung dem Entwurf von Informatiksystemen zuordnen. ¨Ahnlich wie bei der Codierung ist auch die Objektorientierung in den meisten Ans¨atzen nicht zu ﬁnden, sondern muss als Teil der Themenkomplexe Programmieren im Großen ,Strukturen von Informatiksystemen verstehen ,Modelle entwickeln oder Objektorientierte Modellierung aufgefasst werden. Allein Schwill und Wedekind erw ¨ahnen mit derVererbung und den Themenbl ¨ocken Schema und Auspr ¨agung und Namensgebung und Kennzeichnung objektorientierte Konzepte. Den informatischen Grundkonzepten Modularisierung ,Hierarchisierung ,Abstraktion , Iteration undRekursion wird vor allem bei Schwill große Beachtung geschenkt. Hubwieser verwendet keinen dieser Begriﬀe. Die Modularisierung und Hierarchisierung kann bei ihm vielleicht dem Themengebiet Dekomposition in Subsysteme und die Iteration undRekursion denzeitlichen Abl ¨aufen zugeordnet werden. Bei Nievergelt k ¨onnen die ersten beiden Bereiche in das Stockwerk Programmieren im Großen und die letzten drei inProgrammieren im Kleinen desInformatik-Turms eingeordnet werden. Bei Friedrich triﬀt die Kompetenz der begr¨undeten Auswahl von Arbeitsmethoden diese Kategorie am besten und bei Puhlmann k ¨onnen die f ¨unf Punkte dem Verst ¨andnis der Struktur von Informatiksystemen zugewiesen werden. Bei Wedekind ist nur das Themengebiet der Abstraktion abgedeckt. Zur Darstellung von Informationen werden die informatischen Beschreibungsmittel verwendet. Syntaxdiagramme k¨onnen bei Wedekind in die Grammatik und alle anderen in den Bereich der Schemata eingeordnet werden. Puhlmann erw ¨ahnt ¨uberhaupt nichts, Friedrich spricht von der Darstellung von Handlungen und Abl ¨aufen , bei Nievergelt gibt es im untersten Stockwerk des Informatik-Turms Platz und Schwill f ¨uhrt zumindest die Darstellung der Hierarchisierung an. Allein bei Hubwieser ist ein ganzer Bereich der Darstellung von Informationen gewidmet. Auch bei den fachnahen Inhalten gibt es in der Fachdidaktik Informatik keine einheitliche Position. Schwill und Wedekind stellen die Bedeutung der Grammatik mit den Themen Syntax undSemantik sehr stark in den Vordergrund, Hubwieser spricht die Syntax und Semantik an und bei Nievergelt geh ¨ort das Thema in den Bereich der Theorie . Friedrich und Puhlmann hingegen klammern es ganz aus. Dem Funktionsbegriﬀ oder dem funktionalen Programmieren wird nirgendwo eine Bedeutung beigemessen. Da es sich um eine zur Objektorientierung und dem imperativen Arbeitsstil alternative Denkweise handelt und somit die geistige Flexibilit ¨at bei der L ¨osung von Problemen erh ¨oht, wird sie ebenfalls in den Katalog der informatischen Grundkonzepte aufgenommen. 232 Informatische Bildung Zeitkriterium Betrachtet man die Empfehlungen der BLK, GI, MNU und GDM, die die informatischen Inhalte der Sekundarstufe I festlegen, so ist das Zeitkriterium bei der Algorithmisierung , Automatisierung undModellierung fast vollst ¨andig erf ¨ullt, die Codierung undObjektorientierung spielt ab ca. 1995 eine Rolle und der Themenkomplex der Datenstrukturen ist in den ¨alteren Dokumenten st ¨arker vertreten. Die Inhalte der Wirkprinzipien von Informatiksystemen und der Informatischen Modellierung sind also l ¨angerfristig relevant und haben somit ihre Berechtigung in der Menge der informatischen Grundkonzepte. In allen anderen Bereichen ist dies nicht so oﬀensichtlich. Modularisierung ,Hierarchisierung ,Abstraktion ,Iteration undRekursion geh¨oren in der GI Empfehlung (2000) in den Bereich Informatische Modellierung , im BLK Papier (1995) zum Themenkomplex Einblick in Wirkungsweise und Produktionsbedingungen von Medien, in der Beschreibung der Informationstechnischen Bildung der BLK (1987) zu den Grundstrukturen und Grundbegriﬀen, die f ¨ur die Informationstechniken von Bedeutung sind, und allein in der Empfehlung der MNU (1985a) ist die Modularisierung alsIdentiﬁkation von Teilproblemen undIntegration von Teill ¨osungen sehr deutlich wahrnehmbar. Der Bereich der informatischen Beschreibungsmittel ist wie schon bei der Diskussion des Horizontalkriteriums auf den Darstellungsund Strukturierungsaspekt von Informationen oder Datenbest ¨anden zur ¨uckzuf ¨uhren, ohne dass in den verschiedenen Empfehlungen konkrete Techniken erw ¨ahnt werden. Dort sind Inhalte wie Darstellung von Algorithmen , Verst ¨andnis f ¨ur die Strukturierung von Gegenstandsbereichen ,Strukturierung komplexer Zusammenh ¨ange,Beschreibung und Strukturierung von Modellen und Strukturierung umfangreicher Datenbest ¨ande enthalten, so dass das Zeitkriterium also ebenfalls erf ¨ullt ist. Die Themen Grammatik ,Syntax ,Semantik und der Funktionsbegriﬀ sind in den Empfehlungen nicht ausgef ¨uhrt. Zielkriterium Die Schl ¨usselqualiﬁkationen, die in Abbildung 2.2 ¨uber den informationstechnischen Kompetenzen und Inhalten schweben, sind idealisierte Zielvorstellungen einer informatischen Bildung. Sie werden vor allem durch das Erlernen der informatischen Grundkonzepte und nicht durch die Informationstechnische Grundbildung gef¨ordert. Jede kreative Besch ¨aftigung setzt voraus, dass Grundfertigkeiten beherrscht werden. Als informatische Grundfertigkeiten k ¨onnen die Arbeitstechniken , die informatischen Beschreibungsmittel , ein Vorrat an Algorithmen oder auch Kompetenzen im Bereich der Modellierung gez¨ahlt werden. Die Gestaltungsf ¨ahigkeit kann durch das Erlernen von informatischen Beschreibungsmitteln ausgebaut, das Abstraktionsverm ¨ogen und die F ¨ahigkeit zur Modellierung direkt bei der Anwendung dieser erweitert, die Medienkompetenz durch Grundwissen in den Gebieten der Automatisierung ,Modellierung und verschiedener Darstellungsformen verbessert und das Absch ¨atzen von Technikund Technologiefolgen durch Kompetenzen im Bereich des Aufbaus von Computersprachen, der Automa242.4 Informatische Grundkonzepte in Klasse 5 der Realschule tisierung undCodierung unterst ¨utzt werden. Vorausschauendes und vernetztes Denken kann durch die Umsetzung von Algorithmen in ablauﬀ ¨ahige Programme, Automatisierung von Abl ¨aufen oder Modellierung gest¨arkt werden, vor allem wenn diese Simulationen und somit eine ¨Uberpr ¨ufung erm ¨oglichen. Organisationsf ¨ahigkeit setzt Strukturierung voraus. Werkzeuge daf ¨ur enth ¨alt der Bereich der informatischen Beschreibungsmittel. Kommunikation erfordert eine gemeinsame Sprache f ¨ur einen bestimmten Problembereich. Sprachmittel k ¨onnen abstrakte Darstellungsformen wie Syntaxdiagramme ,Programmablaufpl ¨ane,UML-Klassendiagramme ,Hierarchien undNetzwerke sein. Besonders diefachnahen Inhalte unterst ¨utzen die Lernf ¨ahigkeit in anderen F ¨achern dadurch, dass bestimmte Aspekte eines Lerngegenstands nicht nur abstrakt gelernt werden, sondern als Arbeitsergebnisse sichtbar gemacht werden k ¨onnen. Teamf ¨ahigkeit kann durch die informatischen Grundkonzepte nicht unterst ¨utzt werden. Trotzdem ist das Zielkriterium f¨ur fast alle informatischen Grundkonzepte erf ¨ullt. Sinnkriterium Wird ein Informatiksystem von Sch ¨ulerinnen und Sch ¨ulern zum Arbeiten oder Spielen genutzt, so muss dabei ein Bezug zu den informatischen Grundkonzepten hergestellt werden k ¨onnen, damit das Sinnkriterium erf ¨ullt ist. In Klaudt und Wursthorn (2005) werden zahlreiche Bezugspunkte aufgezeigt. Die Erstellung eigener einfacher Algorithmen kann Einblicke in die tats ¨achliche Komplexit ¨at von großen Softwaresystemen gew ¨ahren. Das Anlegen und die Nutzung von Verteilerlisten beim Schreiben von E-Mails an einen immer gleich bleibenden Personenkreis kann eine Zeitersparnis durch die Automatisierung der Adressierung verdeutlichen. Das Wissen ¨uber die einem Softwaresystem zugrunde liegendenDatenstrukturen unterst ¨utzt außerdem eine f ¨ur ein Problem ad ¨aquate Auswahl einer Anwendung. Die Operationen zum Beispiel, die auf Tabellen ausgef ¨uhrt werden k ¨onnen, unterscheiden sich in Textverarbeitungsund Tabellenkalkulationssystemen maßgeblich. Sowohl die Modellierung als auch die daraus resultierenden Objektstrukturen beeinﬂussen die Gestaltung der Benutzeroberﬂ ¨achen von Informatiksystemen. Aus diesem Grund erleichtert das oberﬂ ¨achliche Nachvollziehen des Modellierungsvorgangs eines Informatiksystems das Zurechtﬁnden in den entsprechenden Men ¨ustrukturen. Die vielen M¨oglichkeiten der Einstellungen in den Benutzerdialogen sind auf das Prinzip der Abstraktion zur¨uckzuf ¨uhren. Sie machen erst die Flexibilit ¨at eines Systems aus, die bei der Arbeit ausgenutzt werden kann. Auch rekursive Strukturen sind nicht nur unter der Oberﬂ ¨ache eines Informatiksystems versteckt. Zum Beispiel ist die Ordnerstruktur in der Dateiverwaltung eines Betriebssystems rekursiv aufgebaut. Dieinformatischen Beschreibungsmittel spielen weniger beim Umgang mit einem Informatiksystem, sondern eher in anderen F ¨achern eine Rolle. Mit UML-Klassendiagrammen k¨onnen Beziehungen zwischen Klassen auf Basis ihrer Eigenschaften dargestellt werden, hierarchische Abbildungen und Netzwerke veranschaulichen Abh ¨angigkeiten, mit Hilfe von Programmablaufpl ¨anen k¨onnen dynamische Prozesse beschrieben werden und syntaktische Strukturen sowohl von”k¨unstlichen“ als auch von nat ¨urlichen Sprachen 252 Informatische Bildung k¨onnen durch Syntaxdiagramme standardisiert expliziert werden. F ¨ur die fachnahen Inhalte er¨oﬀnen sich ganz neue Perspektiven. Wird zum Beispiel eine eigene kleine Sprache konstruiert und in einem Informatiksystem implementiert, so bleiben Syntax undSemantiknicht nur theoretische Konstrukte, sondern es kann mit ihnen gespielt werden. Das dabei gewonnene Wissen kann in den Fachunterricht ¨ubertragen werden. Gleiches gilt f ¨ur Funktionen . Erst eine Umsetzung auf ein Computersystem erm ¨oglicht einen konstruktiven Umgang mit dem sonst abstrakten Inhalt. Die Entwicklung des Unterrichtskonzepts f ¨ur die Klassenstufe 5 zur Vermittlung der informatischen Grundkonzepte als begriﬄiche und kognitive Grundlage der in den Bildungsstandards f ¨ur Informationstechnische Grundbildung der Realschule in Baden-W ¨urttemberg 2004 geforderten informationstechnischen Kompetenzen und Inhalte (vgl. Abbildung 2.5) wird im folgenden Kapitel 3 beschrieben. 262.4 Informatische Grundkonzepte in Klasse 5 der Realschule Arbeiten und Lernen mit  informationstechnischen  Werkzeugen  ●Verwendung von  Software  ●Bedienung von Hardware  zur Eingabe von Daten  ●Einschätzung der  Qualität von Lern-/  Freizeitsoftware und  Informationsund  Medienangebote  ●Rechtliche Aspekte Zusammenarbeiten  und  Kommunizieren  ●Arbeiten in vernetzten  Umgebungen  ●Gesellschaftliche  Auswirkungen und  rechtliche Aspekte der  Vernetzung  ●Basiswissen vernetzter  Umgebungen Entwickeln,  Zusammenhänge verstehen  und Reflektieren  ●Verarbeiten von Daten  ●Simulationen  ●Einschätzung der Qualität  von Hardund Software und  Computer-Arbeitsplätzen  ●Gesellschaftliche Aus wirkungen des Einsatzes  von Informatiksystemen  ●Basiswissen Modellbildung Vorausschauendes und  vernetztes Denken Selbstständigkeit und  Zuverlässigkeit Organisations fähigkeit  Abschätzung von Technik und Technologiefolgen  Gestaltungs fähigkeit  Lernfähigkeit Abstraktions vermögen Medienkompetenz  Team fähigkeit Kommunikations fähigkeit Kreativität  Wirkprinzipien von  IS Informatische   Modellierung   Arbeitstechniken Informatische  Beschreibungs mittel    Fachnahe Inhalte  ●Algorithmisierung  ●Automatisierung  ●Codierung ●Datenstrukturen  ●Modellierung  ●Objektorientierung ●Modularisierung  ●Hierarchisierung  ●Abstraktion  ●Iteration  ●Rekursion ●Programmablaufpläne  ●Syntaxdiagramme  ●UML-Klassendiagr.  ●Hierarchien  ●Netzwerke ●Grammatik  ●Syntax  ●Semantik  ●Funktionsbegriff Begriffliche und kognitive  Grundlagen  Begriffliche und kognitive  Grundlagen  Begriffliche und kognitive  Grundlagen  Begriffliche und kognitive  Grundlagen  Begriffliche und kognitive  Grundlagen  Informatische Grundkonzepte Informationstechnische Kompetenzen und Inhalte Schlüsselqualifikationen  Abbildung 2.5: Informatische Grundkonzepte als begriﬄiche und kognitive Grundlage informationstechnischer Kompetenzen und Inhalte 272 Informatische Bildung 283 Konzept des Unterrichtsversuchs Zu Beginn der Konzeption des Unterrichts stand fest, dass die in Kapitel 2.4 vorgestellten informatischen Grundkonzepte in den F ¨achern Mathematik, Englisch, Deutsch und Musik in Klassenstufe 5 der Realschule vermittelt und Logo als p ¨adagogisches Werkzeug eingesetzt werden sollte. Logo wurde als Software ausgew ¨ahlt, da bereits vielf ¨altige und jahrzehntelange positive Erfahrungen bei der Arbeit mit Kindern vorlagen. Ohne lange Einarbeitungsphasen k ¨onnen bereits in Klassenstufe 5 von Beginn an Produkte entwickelt werden. Als universelles Programmierwerkzeug ist es beliebig einsetzbar. Sowohl Teile der Logo-Philosophie (Kapitel 3.1.1) als auch gewisse Spracheigenschaften von Logo (Kapitel 3.1.2), spezielle Metaphern und verschiedene Mikrowelten unterst ¨utzen den Lernund Vermittlungsprozess der informatischen Grundkonzepte. Abbildung 3.1 zeigt die Entwicklung des Unterrichtskonzepts schematisch. Die angegebenen Nummern beziehen sich jeweils auf die Kapitel dieser Arbeit. Im ersten Schritt stand die Analyse der Lehrpl ¨ane der F ¨acher Mathematik, Englisch, Deutsch und Musik im Mittelpunkt, um Unterrichtsthemen zu identiﬁzieren, in deren fachlichem Kontext die informatischen Grundkonzepte sinnvoll vermittelt werden konnten. Eine Vorauswahl wird in Kapitel 3.3 dargestellt. In der Feinplanung ergaben sich im Laufe des Schuljahrs einige ¨Anderungen. In Kapitel 4 werden die tats ¨achlich durchgef¨uhrten Unterrichtseinheiten, die dort neu erarbeiteten informatischen Grundkonzepte in Verbindung mit den Inhalten der F ¨acher und die verwendeten Mikrowelten vorgestellt. Parallel zur Analyse des Lehrplans wurde die Idee einer Rittergeschichte f ¨ur eine mehrw ¨ochige f ¨acher ¨ubergreifende Projektarbeit entwickelt. In dieser sollten die Arbeit an Fachinhalten und informatischen Grundkonzepten mit der Erstellung eines multimedialen Produkts in Logo verkn ¨upft werden. F ¨ur diejenigen informatischen Grundkonzepte, f¨ur die weder Bezugspunkte zu den Fachinhalten noch im Ritterprojekt gefunden werden konnten, wurden am Ende der ersten Phase des Entwurfs des Unterrichtskonzepts fachunabh ¨angige und f ¨ur die Sch ¨ulerinnen und Sch ¨uler motivierende Themen ausgew ¨ahlt. Die Ergebnisse werden in Kapitel 4.3 dargestellt. Die Grobplanung der Unterrichtsthemen in der zweiten Phase gliederte sich in drei Schritte. Zun ¨achst erfolgte eine Sichtung der fachdidaktischen Ver ¨oﬀentlichungen zur Vermittlung informatischer Konzepte und Logo-Unterrichtsvorschl ¨age. Dann wurden die verschiedenen Rollen der informatischen Grundkonzepte und Logo innerhalb des Unterrichtskonzepts identiﬁziert. Zuletzt wurden die Unterrichtsmethoden und f ¨acher ¨ubergreifenden Aspekte des Unterrichtskonzepts (siehe Kapitel 3.4) herausgearbeitet. 293 Konzept des Unterrichtsversuchs Projekt Informatische Grundkonzepte  ohne Fachbezug Informatische Grundkonzepte  eingebettet in Fachinhalte  Identifikation geeigneter  Fachinhalte im Lehrplan Festlegung eines Projektthemas  Identifikation geeigneter  Fachinhalte im Lehrplan  Zuordnung informatischer  Grundkonzepte (3.3)  Identifikation fehlender infor matischer Grundkonzepte  Festlegung der Rolle der  informatischen Grund konzepte im Fachkontext Festlegung der Rolle von Logo  zur Vermittlung der informa tischen Grundkonzepte (3.1.3) Festlegung der Rolle von  Logo im Fachkontext Ideen zur Vermittlung der infor matischen Grundkonzepte Ideen zur Einbettung der informatischen Grundkonzep te in die Fach inhalte und ihre Vermittlung (3.3) Zuordnung zu fach unabhängigen Themen  Sequenzierung bezüglich der  informatischen Grundkonzepte Sequenzierung bezüglich der  Programmiersprache Logo Sequenzierung bezüglich der  Fachinhalte  Ausarbeitung einzelner Unterrichtsthemen (4) Zuordnung informatischer  Grundkonzepte (3.3) Unterrichtsthemen  Literaturrecherche Fachdidaktik Informatik  und Logo-Projekte Grobplanung der Unterrichtsthemen  Unterrichtsmethoden – fächerübergreifende Konzepte (3.4)  Zeitliche Sequenzierung  Sequenzierung des Gesamtablaufs  Rahmenbedingungen  Berücksichtigung institutioneller Faktoren (3.2)  Feinplanung der Unterrichtsthemen  Durchführung der Unterrichtsthemen  Analyse der Unterrichtsstunden Literaturrecherche „Fachdidaktik Informatik“ und „L ogo-Projekte“  Abbildung 3.1: Entwicklung des Unterrichtskonzepts 303.1 Logo Die sich aus der Grobplanung der Themen ergebenden Abh ¨angigkeiten erforderten in der dritten Phase eine Sequenzierung der Themen bez ¨uglich der Fachinhalte, der informatischen Grundkonzepte und der programmiersprachlichen Aspekte von Logo. Aus diesen drei Sequenzen wurde schließlich der Gesamtablauf abgeleitet. Zwei Monate vor der Erprobung des Unterrichtskonzepts standen die Rahmenbedingungen (siehe Kapitel 3.2) fest. Sie waren in Form von institutionellen Faktoren und durch die eigene Auswahl der beiden Logo-Systeme gegeben. Zum Abschluss der Vorbereitungsphase wurden sie in das Gesamtkonzept integriert. Die konkrete Ausarbeitung der Unterrichtsthemen erfolgte im laufenden Schuljahr (siehe Kapitel 4). Dabei wurden die Erfahrungen aus den einzelnen Unterrichtsstunden in das Gesamtkonzept eingearbeitet, so dass sich im Laufe des Schuljahrs Ver ¨anderungen bez ¨uglich der Themen, der Zuordnung der informatischen Grundkonzepte zu diesen, der Methodenwahl zu ihrer Vermittlung und der Reihenfolge der einzelnen Unterrichtseinheiten ergaben. Parallel zur Entwicklung des Gesamtkonzepts erhielten die Fachlehrerinnen von der Forscherin eine Einf ¨uhrung in die informatischen Grundkonzepte und Logo (siehe Kapitel 3.5). Einige Unterrichtseinheiten konnten mit ihnen in den Veranstaltungen erprobt werden. An vier Abenden zu Beginn des Schuljahrs hatten auch die Eltern die M ¨oglichkeit, sich im Rahmen einer Einf ¨uhrungsveranstaltung in Logo (siehe Kapitel 3.6) ¨uber die Inhalte zu informieren. 3.1 Logo In diesem Kapitel werden die Entwicklung der Programmiersprache Logo, ihre lerntheoretischen Wurzeln, die Kernpunkte ihrer Philosophie und ihre programmiersprachlichen Konzepte, die die Vermittlung der informatischen Grundkonzepte in Klasse 5 besonders unterst ¨utzen, vorgestellt. Logo wurde 1967 von Daniel Bobrow und Wallace Feurzeig, die zu diesem Zeitpunkt beide Mitarbeiter der Firma Bolt, Beranek and Newman (BBN) in Cambridge Massachusetts waren, zusammen mit Seymour Papert am Massachusetts Institute of Technology (MIT) entwickelt. Bobrow implementierte die erste Logo-Version, Feurzeig war haupts ¨achlich f ¨ur Forschung und Design zust ¨andig und Papert entwickelte die LogoPhilosophie bez ¨uglich des Unterrichtsstils, der mit der Logo-Arbeit verbunden war (Chakraborty & al., 1999). 1970 zog die gesamte Logo-Gruppe an das MIT um. Dort formierte sie sich neu an dem von Seymour Papert und Marvin Minsky gegr ¨undeten Institut f ¨ur K¨unstliche Intelligenz. Schon die unterschiedlichen Verantwortlichkeiten der Entwickler von Logo zeigt deutlich, dass es sich bei Logo nicht allein um eine Programmiersprache, sondern ebenfalls um eine Philosophie handelt. In den folgenden beiden Kapiteln werden zun¨achst die von Papert (1982) ausgef ¨uhrte Logo-Philosophie vorgestellt und dann die f¨ur den Unterrichtsversuch relevanten Konzepte der Programmiersprache erl ¨autert. 313 Konzept des Unterrichtsversuchs 3.1.1 Logo-Philosophie Piaget und K ¨unstliche Intelligenz Die theoretischen Wurzeln der Logo-Philosophie gehen auf Jean Piaget, bei dem Papert von 1958 bis 1963 arbeitete, und das Wissenschaftsgebiet der K ¨unstlichen Intelligenz zur ¨uck. Papert beschreibt piagetsches Lernen als nat ¨urliches, spontanes Lernen von Menschen, die mit ihrer Umgebung interagieren (Papert, 1982, S. 193). Aus diesem Grund ist es wichtig, dass mit Logo Lernumgebungen entwickelt werden k ¨onnen, die auf m¨oglichst nat ¨urliche Weise Interaktionen mit den in ihnen enthaltenen Lerngegenst ¨anden unterst ¨utzen. Nach Papert (1982, S. 195) fordert Piaget bei der Untersuchung des Lernens, sich auf die Struktur der Lerninhalte zu konzentrieren und nicht den Lernprozess vom Lerninhalt zu trennen. Papert kritisiert allerdings, dass Piaget seinen theoretischen Schwerpunkt auf das innere Geschehen legt, obwohl er davon ausgeht, dass die inneren Strukturen in Wechselwirkung mit der ¨außeren Welt stehen. Papert geht einen Schritt weiter. Er sucht in den jeweiligen Bereichen nach geeigneten Lernumgebungen, in denen die nat ¨urliche Umgebung keine reichlichen Quellen bietet, damit Kinder ihre intellektuellen Strukturen entwickeln k ¨onnen (Papert, 1982, S. 198). Solche Lernumgebungen bezeichnet er als Mikrowelten . Seine bekannteste Mikrowelt ist die des Logo-Igels, in der bereits sehr junge Kinder auf Entdeckungsreise in die Geometrie gehen k ¨onnen. Neben den Ideen von Piaget beeinﬂussten auch die Ergebnisse der Forschung im Bereich derK¨unstlichen Intelligenz (KI) als Kognitionswissenschaft die Entwicklung der LogoPhilosophie. ”Das Ziel der KI ist, Ideen ¨uber das Denken, die zuvor abstrakt, sogar metaphysisch schienen, konkrete Form zu geben.“ (Papert, 1982, S. 195) Wenn sich nach Meinung Paperts (1982, S. 43) Kinder mit KI besch ¨aftigen, werden sie dazu angeregt, sich ¨uber ihre eigenen geistigen Prozesse Gedanken zu machen, da diese eine konkrete Form erhalten. Sie werden dadurch zu Erkenntnistheoretikern . Am intensivsten ist die Auseinandersetzung bei der Artikulation der geistigen Prozesse (Papert, 1982, S. 195). Die Kommunikation wird in Logo durch die Aufteilung von Problemen in Module erleichtert (Papert, 1982, S. 210). Aus diesem Grund spielen die computertechnischen Strukturen der Prozeduren, die als Module eingesetzt werden k ¨onnen, in der Logo-Philosophie eine besondere Rolle. Neben der Betrachtung einzelner Module ist auch ihre Vernetzung wichtig. Mit Hilfe einer Sprache, die von Kindern leicht erlernt werden kann, muss die Kommunikation zwischen den konstruierten Einheiten beschrieben werden k ¨onnen. Jede Mikrowelt enth ¨alt eine solche Sprache, die f ¨ur den in ihr abgebildeten Lernbereich Vokabeln enth ¨alt. 323.1 Logo Konstruktionismus Die Forderungen nach M ¨oglichkeiten der Interaktion oder Reﬂexion der eigenen Denkprozesse legt nahe, dass die Logo-Philosophie auf einer konstruktivistischen Lerntheorie basiert. Die Kinder programmieren den Computer und dieser programmiert nicht die Kinder (Papert, 1982, S. 28). Zus ¨atzlich ist f ¨ur Papert wichtig, dass beim Lernen ein Produkt entsteht, das f ¨ur den Lernenden pers ¨onlich bedeutsam wird. F ¨ur ihn stellt dies eine Erweiterung des Konstruktivismus dar, die er als Konstruktionismus bezeichnet und folgendermaßen charakterisiert: ”Yes doing is a good way to learn. And it is made better by talking and thinking. But we learn best of all by the special kind of doing that consists of constructing something outside of ourselves.“ (Papert, 1999, S. 13) Wichtig ist, dass ein Arbeitsergebnis in der Realit ¨at entsteht, das anderen gezeigt, ¨uber das diskutiert und das ¨uberpr ¨uft werden kann. Dies f ¨ordert nach Meinung Paperts das Nachdenken ¨uber die Vorstellungen, die zur Entstehung des Produkts beigetragen haben. Diese k ¨onnen dann genauso wie das Arbeitsergebnis selbst angepasst und verbessert werden. Da ein Produkt meist in mehreren Schritten erstellt wird, spielen auch die M¨oglichkeiten der Interaktion in der Logo-Philosophie eine besondere Rolle. Wichtig ist ein schnelles Feedback des Systems, das durch seine Implementierung als Interpretersprache gesichert ist. Mikrowelten Die Konstruktion von Produkten mit Hilfe des Computers ist nicht auf ausgew ¨ahlte Wissensbereiche beschr ¨ankt. ”Der Computer ist der Proteus der Maschinen. Sein Wesen ist seine Universalit¨at, seine Simulationsf ¨ahigkeit. Weil er tausend Formen annehmen und tausend Funktionen erf ¨ullen kann, kann er tausend verschiedenen Anspr ¨uchen gen¨ugen.“ (Papert, 1982, S. 24) Diese Universalit ¨at zeigt sich in ganz verschiedenen Mikrowelten, die in Logo erstellt werden k ¨onnen. Eine Mikrowelt kann folgendermaßen charakterisiert werden: ”A microworld is a well-deﬁned, but limited learning environment in which interesting things happen and in which there are important ideas to be learned.“ (Goldenberg, 1982, S. 218) Das Konzept der Beschr ¨ankung auf einen sehr kleinen Wissensbereich, in dem nur bestimmte Fragen relevant sind und andere nicht, wurde aus der K¨unstlichen Intelligenz ¨ubernommen. Durch die Festlegung von Annahmen und Einschr ¨ankungen kann das p ¨adagogische Problem der vernetzten Strukturen von Wissen, das f ¨ur interessante Inhalte oftmals ein großes Vorwissen erfordert, gel ¨ost werden. 333 Konzept des Unterrichtsversuchs ”In diesen Welten k ¨onnen Lernerfahrungen stattﬁnden, unbehindert von den Komplexit ¨aten der Welt.“ (Papert, 1998, S. 66) Papert (1982, S. 158 ﬀ.) formuliert am Beispiel der Newtonschen Bewegungsgesetze noch drei weitere Kriterien f ¨ur das Design von Mikrowelten: •Eine Mikrowelt muss ein einfaches und sehr zug ¨angliches Beispiel enthalten, mit dem man arbeiten kann, •es m¨ussen M ¨oglichkeiten f ¨ur Aktivit ¨aten und zum Spielen angeboten werden und •alle notwendigen Begriﬀe m ¨ussen innerhalb der Mikrowelt deﬁnierbar sein. Mikrowelten werden dann zu”Brutk ¨asten f ¨ur Wissen“ (Papert, 1982, S. 153) oder k¨onnen als”Gew¨achshaus f ¨ur eine bestimmte Spezies schlagkr ¨aftiger Ideen oder intellektueller Strukturen“ (Papert, 1982, S. 157) genutzt werden. Die Lernenden gehen in den Mikrowelten auf Entdeckungsreise, erforschen deren Ideen, verallgemeinern diese und entwickeln daraus eigene Theorien. Dies geschieht in einem ganz pers ¨onlichen Prozess, der nicht von Dritten ¨ubernommen werden kann. Außerdem wird in Mikrowelten nicht allein das Lernen von Inhalten unterst ¨utzt, sondern den Lernenden M ¨oglichkeiten angeboten, als Mathematiker, Dichter, K ¨unstler etc. zu agieren. Dies setzt spezielle Sprachen voraus, mit denen wie in einem”Mathematikland“ das”Mathematik Sprechen“ oder in einem”Musikland“ das”Musik Sprechen“ simuliert wird. Die Inhalte der Mikrowelten werden wie eine nat ¨urliche Sprache in dem entsprechenden Land erlernt. Schlagkr ¨aftige Ideen Mikrowelten, die nicht nur konstruktives Arbeiten der Lernenden f ¨ordern, sondern gleichzeitig noch den Kontakt zu schlagkr ¨aftigen Ideen (engl. powerful ideas) herstellen, sind f¨ur das Lernen besonders wertvoll, da sie als ¨Ubergangsobjekte f ¨ur den pers ¨onlichen Erwerb der Ideen fungieren (Papert, 1999, S. 13). Eine schlagkr ¨aftige Idee deﬁniert Goldenberg (1982, S. 224) als ”An idea that can be used in a variety of personally meaningful contexts, that can be thought through, and that is a model for clear thinking is certainly powerful.“ Eine Auﬂistung von schlagkr ¨aftigen Ideen ist bei Papert allerdings nicht zu ﬁnden. Er formuliert lediglich die folgenden vier Kriterien: ”They should be simple, general, useful, and syntonic.“ (Lawler, 1982, S. 150, zitiert) Einfachheit ist notwendig, da die Ideen verstanden werden m ¨ussen. N ¨utzlich sind sie, wenn sie in verschiedenen Kontexten eingesetzt werden k ¨onnen. Dazu m ¨ussen sie allgemeing ¨ultig sein. Außerdem ist es wichtig, dass schlagkr ¨aftige Ideen in Verbindung zu bereits existierendem Wissen der Lernenden stehen, damit pers ¨onliche Beziehungen zu 343.1 Logo ihnen aufgebaut und Verkn ¨upfungen hergestellt werden k ¨onnen. Watt und Watt (1986) formulieren zwanzig konkrete schlagkr ¨aftige Ideen. Sie weisen jedoch auch darauf hin, dass Lernende die Auﬂistung bei der eigenen Arbeit mit Logo automatisch erweitern. Zu den schlagkr ¨aftigen Ideen, die in dieser Arbeit eine besondere Rolle spielen, geh ¨oren das Probleml ¨osen, das strukturierte Programmieren, das Debugging, die Spracherweiterung und die Systematik, die im Folgenden diskutiert werden. Probleml ¨osen Probleml ¨osen heißt, einen unerw ¨unschten Anfangszustand in einen erw ¨unschten Zielzustand zu ¨uberf ¨uhren. Zwischen beiden Zust ¨anden liegen Barrieren, die ¨uberwunden werden m ¨ussen. Wissen und Verfahren m ¨ussen auf verschiedenartige L ¨osungsm ¨oglichkeiten transferiert werden (siehe Gudjons 1999, S. 231). Edelmann (2000, S. 317) und Wessels (1994, S. 356) unterscheiden folgende Probleml ¨osestrategien: •Versuch und Irrtum •Probleml ¨osen durch Umstrukturieren •Probleml ¨osen durch Anwenden von Strategien •Probleml ¨osen durch Systemdenken •Probleml ¨osen durch Kreativit ¨at. Lernen in der Schule erfolgt h ¨auﬁg durch Vermittlung von Wissen und Regeln, dem Stellen von Aufgaben und dem schematischen Verwenden des Wissens und der Regeln zur L ¨osung der Aufgaben. Sollen die Lernenden jedoch als Mathematiker, Dichter oder Musiker arbeiten, so k ¨onnen sie nicht nur Aufgaben oder bereits gel ¨oste Probleme studieren, sondern m ¨ussen sich mit neuen Fragestellungen besch ¨aftigen (Goldenberg, 1982, S. 224). Mikrowelten mit M ¨oglichkeiten zur Exploration f ¨ordern die Probleml ¨osekompetenz. Angstfrei k ¨onnen die Lernenden verschiedene L ¨osungswege ausprobieren, diese im Debugging-Modus in nachvollziehbare kleine Einheiten zerlegen, konkrete Objekte manipulieren, unmittelbares Feedback vom System erhalten und daraufhin ihre Vorgehensweisen und ihre kognitiven Strategien anpassen und die Funktionalit ¨at der Mikrowelten erweitern. Durch diese Erweiterungen und Umstrukturierungen k ¨onnen sie in kreativen Prozessen neue L ¨osungsstrategien entwickeln. Wichtig dabei ist, dass sie immer das Gef¨uhl der Kontrolle ¨uber das System behalten. Zus¨atzlich zum Erwerb von Probleml ¨osekompetenzen werden die Lernenden schon fast gezwungen, eigene Fragestellungen (engl. problem-posing) zu entwickeln, da sie immer wieder auf unvorhergesehene und zun ¨achst unl ¨osbare Probleme stoßen, deren Bew ¨altigung sie in Richtung der L ¨osung des Gesamtproblems f ¨uhren. Harper stellt folgende Behauptung auf: ”The development of strategies for problem posing und problem solving is a major goal of Logo.“ (Harper, 1989, S. 11) Masterson (1985) bezeichnet das Ausmaß, mit dem eine Programmiersprache das Nach353 Konzept des Unterrichtsversuchs denken ¨uber Probleme erleichtert, als kognitive Eﬃzienz (engl. cognitive eﬃciency). Logo besitzt eine hohe kognitive Eﬃzienz, da in gelungenen Mikrowelten auf einfache Art und Weise Hypothesen bez ¨uglich der Zusammenh ¨ange innerhalb von Problembereichen repr¨asentiert und ausgetestet werden k ¨onnen. Ob nun tats ¨achlich Probleml ¨osekompetenzen durch die Arbeit mit Logo verbessert werden, kann nicht eindeutig belegt werden. Es gibt nach Harper (1989, S. 10) sowohl Studien, die dieser These widersprechen als auch welche, die einen Nachweis erbringen. Den Eﬀekt sch ¨atzt Harper (1989, S. 13) mit der folgenden Aussage realistisch ein: ”Logo may not have dramatic eﬀect on the formal thinking abilities of children, but it smooths their acquisition of abstract reasoning.“ Strukturiertes Programmieren Eine weitere schlagkr ¨aftige Idee der Logo-Philosophie ist das strukturierte Programmieren. Der prozedurale Sprachaufbau von Logo legt diese Vorgehensweise beim Probleml ¨osen sehr nahe. Es handelt sich dabei um eine Programmiermethode, bei der komplexe Probleme in eine Vielzahl von Teilproblemen zerlegt werden. Dieser Prozess wird so lange rekursiv fortgesetzt, bis die L ¨osungen einfach erstellt werden k ¨onnen. Sie werden dann zusammengesetzt, in Prozeduren verpackt und bilden die Grundlage der Gesamtl ¨osung. Diese Teill ¨osungen m ¨ussen entsprechend ihrer Funktionalit ¨at benannt werden. Papert (1982, S. 134) zitiert einen Jungen, der von”geistgerechten Bissen“ spricht. Er war vor der Anwendung des strukturierten Programmierens mit der Erstellung von L¨osungen f ¨ur komplexere Probleme ¨uberfordert gewesen. Papert stellt folgende Behauptung auf: ”Es ist m ¨oglich, ein verzweigtes intellektuelles System aufzubauen, ohne jemals einen unverst ¨andlichen Schritt zu tun. Und wenn man es hierarchisch strukturiert, kann man das System als Ganzes erfassen, d.h. man kann das System”wie von oben“ sehen.“ (Papert, 1982, S. 135) Der Vorteil einer strukturierten Probleml ¨osung wird am deutlichsten, wenn bei der Fehlersuche die Orientierung verloren geht. In strukturierten Programmen kann jede einzelne Prozedur auf Korrektheit ¨uberpr ¨uft werden, bevor die Vernetzung der einzelnen Bausteine zur Gesamtl ¨osung veriﬁziert wird. Dies erleichtert die Eingrenzung von Fehlerquellen erheblich. Debugging Unter Debugging wird klassischerweise die Fehlerverfolgung und -beseitigung verstanden (Claus und Schwill, 2003). Der Begriﬀ Fehler muss jedoch sehr weit gefasst werden, da es sich teilweise nicht um Fehler, sondern um unerwartete Verhaltensweisen handelt. Im Gegensatz zu den Erfahrungen der Sch ¨ulerinnen und Sch ¨uler im Schulalltag, in dem Fehler mit schlechten Noten bestraft werden, stellen Fehler, auch Bugs genannt, in der 363.1 Logo Logo-Philosophie eine Quelle zum Lernen dar, da der Prozess der Fehlersuche dazu beitr¨agt, ein Problem zu verstehen. ”Fehler helfen uns, weil sie uns dazu bringen, herauszuﬁnden, was geschehen ist, zu verstehen, was falsch gelaufen ist und aufgrund dieses Verst ¨andnisses die Fehler zu korrigieren.“ (Papert, 1982, S. 146) Sie stellen eine M ¨oglichkeit dar, die Unstimmigkeiten in den eigenen Vorstellungen aufzudecken, Ideen zu hinterfragen und diese dann durch exakteres Wissen zu ersetzen (Watt und Watt, 1986, S. 1). Debugging in der Logo-Philosophie wird als das Studieren von Fehlern und das Nachdenken ¨uber ihre Ursachen deﬁniert. Der in einer Programmiersprache implementierte Debugging-Mechanismus kann den Abbau der Widerst ¨ande der Lernenden gegen ¨uber dem Debugging f ¨ordern. Wichtig ist, dass der Ablauf eines Programms und die Zust ¨ande des Systems zu ausgew ¨ahlten Zeitpunkten anschaulich visualisiert werden k ¨onnen. Das Debugging beschr ¨ankt sich dann nicht nur auf das mentale Nachvollziehen des Programms. Die Eﬃzienz des Lernens ist im Gegensatz zum”Lernen wie Ratten in einem Irrgarten“ (Papert, 1982, S. 145) durch ablaufende Reﬂexionsprozesse deutlich h ¨oher. Goldenberg (1982) fordert, dass die Lehrenden die Lernenden ermutigen sollten, ihre Fehler zu lieben, da sie durch unerwartetes Verhalten neue Ideen entwickeln k ¨onnen, die viel interessanter als die urspr ¨ungliche Aufgabe sind. ”A bug can be neat! It can certainly teach you something . . .study it!“ (Goldenberg, 1982, S. 214) Sicherlich gibt es nicht erst seit der Erﬁndung des Computers Debugging-Strategien, allerdings k ¨onnen sie mit seiner Hilfe und einem geeigneten System wie Logo nicht nur gedanklich, sondern auch am Bildschirm sichtbar nachvollzogen werden. Diese DebuggingPhilosophie wird in Logo-Systemen dadurch unterst ¨utzt, dass sich die Interaktion mit dem System an nat ¨urlichen Dialogen orientiert und nicht ¨uber”Geheimcodes“ erfolgt. Dies gilt auch f ¨ur Fehlermeldungen.”Deshalb sind Logo-Fehlermeldungen semantisch ausdrucksstark und gezielt [...]“ (Hoppe und L ¨othe, 1984, S. 7). Spracherweiterung Die Kommunikation zwischen Lernenden und dem Computer erfolgt nat ¨urlich auch in Logo nicht auf Basis einer zwischenmenschlichen Kommunikation. Lernende m ¨ussen die Sprache des Computers erwerben oder diese den eigenen W ¨unschen anpassen. Durch den bereits weiter oben erw ¨ahnten prozeduralen Aufbau von Logo kann das Vokabular sehr leicht erweitert werden. Bei der Deﬁnition neuer W ¨orter als Prozeduren kann auf bereits vorhandene Prozeduren zur ¨uckgegriﬀen werden, da diese als unabh ¨angige Bausteine einsetzbar sind. Durch die Festlegung eigener Namen f ¨ur Prozeduren, die dann zu neuen W ¨ortern der gemeinsamen Sprache mit dem Logo-System werden, wird eine pers¨onliche Beziehung zur Arbeit aufgebaut. Der Lernende bringt dem Computer etwas bei, er modelliert die Kommunikation zwischen sich und dem Computer und legt somit das Kommunikationsverhalten fest. Es wird ihm das Gef ¨uhl vermittelt, dass er der Be373 Konzept des Unterrichtsversuchs stimmende ist, die Kontrolle in der Hand h ¨alt und nicht passiv von außen manipuliert wird. Er formt und modiﬁziert durch neue W ¨orter die Wirklichkeit, in der er arbeitet. Systematik Zuletzt wird noch auf die Bedeutung der schlagkr ¨aftigen Idee des systematischen Vorgehens in Logo eingegangen. Ein Computerprogramm l ¨auft mechanisch Schritt f ¨ur Schritt nach einem programmierten Ablauf ab. Papert (1982, S. 52) behauptet, dass manche Kinder mit dem Erlernen von formalen Lerngegenst ¨anden Schwierigkeiten haben, weil sie die Vorteile dieser schematischen Denkweise nicht verstehen. Eine Einsicht k ¨onnen sie nur dadurch gewinnen, dass sie mit Problemstellungen konfrontiert werden, die die ¨Uberlegenheit des systematischen Vorgehens anschaulich demonstrieren, und Formalismen in die Hand bekommen, die eine pr ¨azise Beschreibung der Systematik erm ¨oglichen. Unabh ¨angig vom Computer oder einer Programmiersprache muss Material entwickelt werden, das zum systematischen Vorgehen anregt, da die Kultur arm an Modellen f ¨ur dieses Vorgehen ist und Probleme in der Regel eher tastend angegangen werden (Papert, 1982, S. 47). Vor allem die deskriptiven Formalismen und das Prozedurkonzept von Logo tragen dazu bei, systematisches Vorgehen beim Erarbeiten von L ¨osungen zu erzwingen. Die erarbeiteten Formalismen k ¨onnen getestet werden und sichtbare Ergebnisse entstehen. Aus den Beschreibungen der verschiedenen schlagkr ¨aftigen Ideen wird deutlich, dass sie untereinander stark vernetzt sind. Dies f ¨ordert ihr Erlernen. Wichtig ist, dass die Ideen f¨ur die Sch ¨ulerinnen und Sch ¨uler bei der Arbeit mit Logo zu Werkzeugen des Denkens werden, so dass sie im Alltag ganz nat ¨urlich eingesetzt werden. 3.1.2 Logo als Programmiersprache Logo, auf seine programmiersprachlichen Aspekte reduziert, ist ein Dialekt der Programmiersprache LISP (List Processing Language), die vor allem im Bereich der K¨unstlichen Intelligenz in der Forschung eingesetzt wird. Der Einstieg in die Arbeit mit Logo ist jedoch sehr viel leichter, da sich die Syntax st ¨arker an der Umgangssprache orientiert (Ziegenbalg, 1985, S. 5). Harvey (1982, S. 191) beschreibt das Designziel von Logo folgendermaßen: ”Logo is designed to make explicit many of the fundamental ideas of computer programming. Someone who learns Logo is likely to have a very clear idea of the nature of variables, procedures, and most other programming constructs.“ Logo-Systeme enthalten ca. 200 bis 400 Prozeduren aus verschiedenen Bereichen wie zum Beispiel den Grundrechenarten ( SUMME ,DIFFERENZ ,. . .), der Logik ( UND,ODER,. . .) oder der Einund Ausgabe von Daten ( LIESWORT ,DRUCKEZEILE ,. . .). Diese werden auch als 383.1 Logo Logo-Grundprozeduren (engl. primitives) bezeichnet. Die bekanntesten Befehle sind die der Igelgraﬁk (engl. turtle graphic) wie zum Beispiel VORW ¨ARTS,R¨UCKW ¨ARTS,RECHTS , undLINKS , mit denen ein Igel auf dem Bildschirm herumkommandiert werden kann. Sie werden h ¨auﬁg als Einstieg in das Programmieren mit Logo verwendet. Abbildung 3.2 zeigt den Igel als Dreieck, der einen Stift in der Hand h ¨alt und bereits 100 Schritte in Richtung seiner Nase nach vorne gegangen ist, sich dann um 90 Igeleinheiten nach rechts gedreht hat und schließlich noch seinen Weg um 50 Schritte fortgesetzt hat. Abbildung 3.2: Zeichnung des Logo-Igels In Logo wurden ihm daf ¨ur folgende Befehle erteilt: VORW ¨ARTS 100 RECHTS 90 VORW ¨ARTS 50 Befehle sind Prozeduren, die eine Nebenwirkung auf das System haben und dessen Zustand ver ¨andern. Mit Hilfe dieser kann ein Programmierer das System, im Fall der Igelgraﬁk den Igel, zu einer Aktion veranlassen. Zur Erweiterung k ¨onnen eigene Befehle erstellt werden. Sie fassen eine Folge von Prozeduren unter einem neuen Namen zusammen und k ¨onnen analog zu den Grundbefehlen verwendet werden. Als Bezeichnung wird in der Regel ein Imperativ gew ¨ahlt, der die Funktionalit ¨at inhaltlich m ¨oglichst pr ¨azise beschreibt. Ein Beispiel daf ¨ur ist der Befehl Quadrat , durch dessen Aufruf der Igel am Bildschirm ein Quadrat zeichnet. Abgek ¨urzt wird er nicht mit der Imperativform ”zeichne ein Quadrat“, sondern mit Quadrat . PR Quadrat WIEDERHOLE 4 [ VORW ¨ARTS 40 RECHTS 90 ] ENDE Wird der Befehl Quadrat aufgerufen, so wiederholt der Igel viermal das Vorw ¨artsgehen von 40 Schritten, gefolgt von dem Rechtsdrehen um 90 Igeleinheiten. Am Bildschirm entsteht das Quadrat in Abbildung 3.3. Abbildung 3.3: Quadrat des Logo-Igels 393 Konzept des Unterrichtsversuchs Um den Befehl ﬂexibler zu gestalten, kann ein Parameter L¨ange eingef ¨uhrt werden. PR Quadrat :L¨ ange WIEDERHOLE 4 [ VORW ¨ARTS :L¨ ange RECHTS 90 ] ENDE Der Igel wiederholt nun viermal das Vorw ¨artsgehen um eine bestimmte L¨ange und das Rechtsdrehen um 90 Igeleinheiten. Die L ¨angenangabe wird erst beim Aufruf an den Formalparameter ¨ubergeben, so dass der Igel weiß, wie weit er gehen muss. Abstrakt kann ein Befehl als eine Box dargestellt werden, in die oben Eingaben hineinfallen. Abbildung 3.4 zeigt links die Box des Befehls Quadrat , die genau einen Eingabetrichter besitzt und eine Eingabe erh ¨alt. Die Boxen mit den Trichtern werden auch als Maschinen bezeichnet, da sie die Vorg ¨ange, die in ihrem Inneren ablaufen, verbergen.   Quadrat    Rechteck   Abbildung 3.4: Maschinendarstellung der Befehle Quadrat und Rechteck Die Maschine des Befehls Rechteck hat zwei Eingabetrichter, da ein Rechteck zwei unterschiedlich lange Seiten besitzt. Ihr Logo-Programmcode sieht folgendermaßen aus: PR Rechteck :L¨ ange :Breite WIEDERHOLE 2 [ VORW ¨ARTS :L¨ ange RECHTS 90 VORW ¨ARTS :Breite RECHTS 90 ] ENDE Parameter und auch Variablen werden in Logo nicht typisiert. Es k ¨onnen ihnen w ¨ahrend eines Programmablaufs also beliebige Werte zugewiesen werden. Dadurch wird der Programmierer nicht gezwungen, eine Variable nur f ¨ur einen ganz bestimmten Zweck zu deklarieren. Harvey (1982, S. 174) sieht dies nicht als Nachteil an, da eine Variable in Logo in der Regel zu einer Prozedur geh ¨ort und somit an deren Kontext gebunden ist. Im Gegensatz zu Befehlen werden in Logo Prozeduren, die einen Wert an das System zur¨uckgeben, als Funktionen bezeichnet. Die Logo-Grundprozedur SINist zum Beispiel eine Funktion, die f ¨ur einen im Gradmaß angegebenen Winkel den Sinuswert ermittelt.   SIN   Abbildung 3.5: Maschinendarstellung der Funktion SIN(Sinus) 403.1 Logo Ihre Maschinendarstellung hat zus ¨atzlich zum Eingabetrichter f ¨ur den Winkel einen Trichter an der unteren Seite der Box, aus dem symbolisch der R ¨uckgabewert, der entsprechende Sinuswert, der Funktion heraus f ¨allt. Eine Logo-Prozedur kann maximal einen Ausgabetrichter besitzen. Da Funktionen Einund Ausgabewerte besitzen, k¨onnen sie zu Funktionsgeﬂechten verkettet werden. Ein zuf ¨alliger Satz aus einem Subjekt und einem Pr ¨adikat kann durch die in Abbildung 3.6 dargestellte Komposition der Funktionen Subjekt ,Pr¨ adikat und SATZ und des Befehls DRUCKEZEILE am Bildschirm ausgegeben werden.   SATZ      DRUCKEZEILE   Subjekt  Prädikat   Abbildung 3.6: Funktionsgeﬂecht zur Ausgabe eines zuf ¨alligen Satzes am Bildschirm Die Funktionen Subjekt undPr¨ adikat geben zuf ¨allig ein Subjekt und Pr ¨adikat zur ¨uck, mit Hilfe der Funktion SATZ k¨onnen W ¨orter zu einem Satz bzw. einer Liste zusammengesetzt werden und der Befehl DRUCKEZEILE gibt die ¨ubergebene Liste am Bildschirm aus. Es ist leicht zu erkennen, wie die Daten zwischen den Funktionen ﬂießen und die Maschinen kommunizieren. Zur Bezeichnung von Funktionen werden h ¨auﬁg Substantive verwendet, die die zur ¨uckgegebenen Werte charakterisieren (vgl. Subjekt ,Pr¨ adikat ). Wird das Konzept der funktionalen Programmierung streng verfolgt, so sind in einem Programm keinerlei globale Variablen erforderlich, sondern die Daten werden zwischen den Funktionen an den Schnittstellen ausgetauscht. Logo ist eine erweiterbare Sprache. Es werden keine Programme im klassischen Sinne geschrieben, sondern das Logo-Grundsystem wird um Befehle und Funktionen erweitert. Diese m ¨ussen, anders als Bibliotheken, nicht extra in Programme eingebunden werden, sondern stehen ohne zus ¨atzlichen Aufwand zur Verf ¨ugung und k ¨onnen mit bereits bestehenden Modulen interagieren (Ziegenbalg, 1985, S. 152). Dies gilt genauso f ¨ur Kontrollstrukturen. Die Fakult ¨at der nat ¨urlichen Zahl N= 8 k ¨onnte in Logo folgendermaßen berechnet werden: SETZE "Fak 1 SETZE "N 8 Solange [:N > 1][SETZE "Fak PRODUKT :Fak :N SETZE "N DIFFERENZ :N 1] DRUCKEZEILE :Fak 413 Konzept des Unterrichtsversuchs Nicht alle Logo-Systeme enthalten die Kontrollstruktur Solange . Fehlt sie, so muss ein Befehl implementiert werden (Ziegenbalg, 1985, S. 153). Der Befehlsname ist Solange , der erste Parameter die Abbruchbedingung der Schleife ( :N > 1 ) und der zweite die Handlung, die w ¨ahrend eines Schleifendurchlaufs ausgef ¨uhrt wird ( SETZE "Fak PRODUKT :Fak :N SETZE "N DIFFERENZ :N 1 ). Dies ist in Logo nur dadurch m ¨oglich, dass Parametern logische Ausdr ¨ucke und Befehlsfolgen als Werte zugewiesen werden k ¨onnen. Der Befehl Solange hat, wie bereits beschrieben, die beiden Eingabeparameter Bedingung undHandlung . Zun ¨achst erfolgt die Pr ¨ufung ( PRUEFE ) der ausgewerteten ( TUE) Bedingung. Wenn das Ergebnis wahr ist (WENNWAHR ), wird die Handlung ausgef ¨uhrt ( TUE) und der Solange-Befehl ( Solange ) erneut aufgerufen. PR Solange :Bedingung :Handlung PRUEFE TUE :Bedingung WENNWAHR [ TUE :Handlung Solange :Bedingung :Handlung ] ENDE Der Befehl Solange ruft sich also selbst auf und hat somit eine rekursive Struktur. Harvey (1982, S. 166) beschreibt den Vorteil von rekursiven Probleml ¨osungen folgendermaßen: ”By allowing a complicated problem to be described in terms of simpler versions of itself, recursion allows very large problems to be stated in a very compact form.“ Dies wird bereits an diesem einfachen Beispiel deutlich. Nicht nur Kontrollstrukturen, sondern auch Datenstrukturen wie z.B. Arrays oder Matrizen k ¨onnen als eigenst ¨andige Prozeduren implementiert werden (vgl. Ziegenbalg, 1985, S. 163). Als Datentypen stehen in Logo nur Zahlen, W ¨orter und Listen zur Verf ¨ugung. Zu den Zahlen geh ¨oren ganze Zahlen und Dezimalzahlen. W ¨orter sind Zeichenketten aus Buchstaben, Ziﬀern und Sonderzeichen. Sie k ¨onnen sowohl als W ¨orter in ihrem herk ¨ommlichen Sinn als Elemente einer nat ¨urlichen Sprache als auch als Namen und somit als Symbole f ¨ur Variablen und Prozeduren verwendet werden. Die m ¨achtigste Datenstruktur in Logo ist die Liste. Sie kann aus einer beliebigen Anzahl von Zahlen, W ¨ortern oder selbst wieder Listen bestehen. Ihre Struktur ist beliebig und kann sich w ¨ahrend der Bearbeitung ver ¨andern. Im Gegensatz zu Arrays k ¨onnen Listen sehr ﬂexibel eingesetzt werden. Der direkte Zugriﬀ auf einzelne Elemente von Listen ist zwar nicht m ¨oglich, Zugriﬀsfunktionen k ¨onnen jedoch implementiert werden. Der Grad der Flexibilit ¨at bei der Programmierung mit Logo wird dadurch noch erh ¨oht, dass Prozeduren w ¨ahrend des Programmablaufs dynamisch ver ¨andert werden k ¨onnen. Dies ist m ¨oglich, da Logo intern nicht zwischen Daten und Programmen unterscheidet. Insgesamt ist Logo also im Sinne von Harvey eine sehr m¨achtige Sprache f ¨ur Lernende. 423.1 Logo ”The power of a language is a way of measuring how much the language helps you concentrate on the actual problem you wanted to solve in the ﬁrst place, rather than having to worry about the constraints of the language.“ (Harvey, 1997, S. XV) Ein Teil der M ¨achtigkeit macht die Implementierung als Interpretersprache aus. Da kein Maschinencode generiert wird, entf ¨allt bei der Programmentwicklung die zeitaufw ¨andige Arbeit der Programmeingabe in einen Editor, des Kompilierens und des Ausf ¨uhrens von generiertem Maschinencode. In Logo kann im Direktausf ¨uhrungsmodus ein Befehl eingegeben werden, der sofort bearbeitet wird. Vor seiner Ausf ¨uhrung muss er vom Interpreter ¨ubersetzt werden. Somit laufen zwar bereits geschriebene Programme langsamer, die Programmentwicklung und auch das Debugging sind jedoch wesentlich einfacher und schneller. Letzteres spielt beim Erlernen einer Programmiersprache die gr ¨oßere Rolle, da die Lernenden normalerweise die Programme nur zu ¨Ubungszwecken entwerfen und sp¨ater nie wieder verwenden. Ihre Laufzeit stellt also keine relevante Gr ¨oße dar (Harvey, 1982, S. 166). Analog dazu verh ¨alt es sich mit der Speicherverwaltung. Programmiersprachen, die nicht typisiert sind oder dynamische Datentypen anbieten, haben eine sehr komplexe Speicherverwaltung. Da diese automatisch vom Interpreter ¨ubernommen wird, hat ein Programmierer durch diese Flexibilit ¨at keine Nachteile. Allein der Zugriﬀ auf die Daten ist etwas langsamer (Harvey, 1982, S. 174). Zuletzt ist noch wichtig, dass die Syntax von Logo streng zwischen den Namen und den Werten von Variablen unterscheidet. In Logo bedeutet SETZE "X :X + 1 ”setze unter dem Namen X den Wert von X + 1“. Der Variablenname muss mit einem f¨uhrenden Anf ¨uhrungszeichen gekennzeichnet werden und auf den Wert einer Variablen wird mit Hilfe des Doppelpunkts zugegriﬀen. Die Zuweisung erfolgt explizit durch den Befehl SETZE (Harvey, 1982, S. 180). In manchen Logo-Versionen gibt es auch die M¨oglichkeit, Zuweisungen als NAME :X + 1 "X auszudr ¨ucken. Der Code kann dann als”nenne das Ergebnis der Addition X“ gelesen werden. Zusammenfassung Logo als Programmiersprache bietet beim Probleml ¨osen einige Vorteile. Es minimiert die Zeit, die zum Schreiben der L ¨osungen notwendig ist, unterst ¨utzt die Nat ¨urlichkeit der Formulierungen und spiegelt in den Probleml ¨osungen das urspr ¨ungliche Problem wider. F¨ur Lernende sind dies wichtigere Eigenschaften als die Speicherund Laufzeiteﬃzienz. Ziegenbalg (1985, S. 179) bezeichnet die Vorteile als kognitive Eﬃzienz einer Program433 Konzept des Unterrichtsversuchs miersprache . Er legt damit im Gegensatz zu Masterson (1985), bei dem das Nachdenken ¨uber Probleme im Vordergrund steht (vgl. Kapitel 3.1.1), mehr Wert auf die Spracheigenschaften. Abelson (1982, S. 112) bekr ¨aftigt diese Aussage mit seiner Forderung: ”If we can dispel the delusion that learning about computers should be an activity of ﬁddling with array indexes and worrying about whether xis an integer or a real number, we can begin to focus on programming as a source of ideas . For programming is an activity of describing things. The descriptions are phrased so that they can be interpreted by a computer, but that is not really so important. Computational descriptions, like those of science or mathematics, provide a perspective, a collection of”tools of thought“, such as procedural organization, hierarchical structure, and recursive formulations.“ 3.1.3 Logo und informatische Grundkonzepte Die Logo-Philosophie und die programmiersprachlichen Aspekte von Logo unterst ¨utzen, wie bereits in den Kapiteln 3.1.1 und 3.1.2 angedeutet, das Erlernen informatischer Grundkonzepte. Eine ausf ¨uhrliche Darstellung erfolgt in diesem Kapitel. Wirkprinzipien von Informatiksystemen Jeder Programmcode einer Programmiersprache ist ein Algorithmus , eine eindeutige Verarbeitungsvorschrift. Schon in der ersten Stunde mit Logo, in der der Igel ein Quadrat zeichnet (vgl. Kapitel 3.1.2), kann eine Abfolge von Verarbeitungsschritten in der Sprache des Igels formuliert werden. Erfolgt die Eingabe der Befehle im Direktausf ¨uhrungsmodus ¨uber die Kommandozeile, so werden sie sofort interpretiert. Das Verhalten des Igels kann also Schritt f ¨ur Schritt am Bildschirm nachvollzogen werden. Es wird deutlich, dass der Computer keine willk ¨urlichen Entscheidungen triﬀt, sondern sich genau an die vorgegebenen Anweisungen h ¨alt. Gerade zu Beginn der Arbeit ist dieses direkte Feedback f ¨ur das Verst ¨andnis der Arbeitsweise von Informatiksystemen sehr hilfreich. Unterst ¨utzt wird es außerdem von dem anthropomorphen Modell des Igels. Seine Bewegungen k ¨onnen die Kinder mit ihrem eigenen K ¨orper imitieren. Werden Algorithmen komplexer, so k ¨onnen sie mit Hilfe von Debugging-Techniken nachvollzogen werden. Logo bietet daf ¨ur die in Kapitel 3.1.1 beschriebenen Debugging-Mechanismen an. Schon zu Beginn der Arbeit mit Logo k ¨onnen Prozesse automatisiert werden. Beim Zeichnen eines Dreiecks k ¨onnen die Befehle einzeln, als Folge oder mit dem WIEDERHOLE -Befehl im Direktausf ¨uhrungsmodus eingegeben werden. Außerdem kann ein neuer Befehl erstellt werden, der dann direkt ausgef ¨uhrt wird. Durch die Reduzierung des Programmcodes wird der Automatisierungsgrad erh ¨oht. Informatische Modellierung Variablen, Prozedurparameter und Funktionswerte sind in Logo nicht typisiert (vgl. 443.1 Logo Kapitel 3.1.2). Aus diesem Grund entstehen bei der Arbeit insgesamt wenige syntaktische Fehler, deren Fehlermeldungen oftmals schwierig zu verstehen sind. Stattdessen wird ein Nachdenken ¨uber die inhaltlichen Ergebnisse erzwungen. Soll zum Beispiel der Titel der Personen Pr¨asident Busch ,Jimmy oder K¨onigin Elisabeth ausgew ¨ahlt werden, so k ¨onnen erstaunliche Ergebnisse entstehen. Aus der Liste [[Pr¨ asident Bush] Jimmy [K¨ onigin Elisabeth]] wird das erste Element der Listeneintr ¨age mit folgender Anweisung am Bildschirm ausgegeben: DRUCKEZEILE ERSTES ZEL [[Pr¨ asident Bush] Jimmy [K¨ onigin Elisabeth]] Das Ergebnis ist Pr¨asident ,Joder K¨onigin . Die Funktion ZEL(Zufallselement aus Liste) kann Daten vom Typ Liste ( [Pr¨ asident Bush], [K¨ onigin Elisabeth] ) und vom Typ Wort ( Jimmy ) zur ¨uckgeben. Die Funktion ERSTES extrahiert aus einer Liste deren erstes Element ( Pr¨ asident ,K¨ onigin ) und aus einem Wort dessen erstes Zeichen ( J). Die Befehlszeile erzeugt keine Fehlermeldung, liefert jedoch im Fall von Jimmy nicht das gew ¨unschte Ergebnis. Aufgrund der Diskrepanz zwischen dem erwarteten und dem tats¨achlichen Ergebnis werden Denkprozesse angestoßen, um eine L ¨osung f ¨ur Personen ohne Titel zu erarbeiten. Eine denkbare L ¨osung ist DRUCKEZEILE ERSTES ZEL [[Pr¨ asident Bush] [Jimmy] [K¨ onigin Elisabeth]] Andere L ¨osungen entstehen beim weiteren Experimentieren. Da f ¨ur alle Datentypen in den Igel-, Wortund Satz-Mikrowelten Anwendungsm ¨oglichkeiten zur Verf ¨ugung stehen, die direktes Feedback zur ¨uckgeben, werden Sch ¨ulerinnen und Sch ¨uler durch die geschilderte Problematik nicht ¨uberfordert. Gleichzeitig k ¨onnen mit Hilfe des ¨außerst ﬂexiblen Datentyps der Liste auch sehr komplexe und der Problemstellung angepasste eigene Datenstrukturen entwickelt werden. In jedem Logo-System kann der Igel als ein Objekt einer Igel-Klasse betrachtet werden. Er besitzt einen Zustand, der durch seine Position auf dem Bildschirm, seine Blickrichtung, die Haltung seines Stiftes etc. beschrieben wird. Außerdem gibt es verschiedene Befehle und Funktionen wie VORW ¨ARTS,LINKS ,STIFTAB ,STIFTHOCH ,AUFKURS ,AUFXY , KURS,ORToder STIFTUNTEN , mit denen der Zustand des Igels gelesen oder ver ¨andert werden kann. Das Konzept der Attribute und Methoden kann leicht nachvollzogen werden. In objektorientierten Logo-Systemen spielt des Weiteren die Namensgebung eine wichtige Rolle. Jedes Objekt muss mit seinem Namen angesprochen werden. Objekte verschiedener Klassen besitzen außerdem ganz unterschiedliche Eigenschaften und Methoden. Ein Schaltﬂ ¨achen-Objekt hat wie ein Igel-Objekt Attribute, die seine Position auf dem Bildschirm beschreiben. Zus ¨atzlich besitzt es Eigenschaften, die den Text auf der Schaltﬂ ¨ache oder seine Breite und H ¨ohe festlegen. Entsprechend gibt es Methoden wieSETCAPTION oder SETSIZE , mit denen die Attributwerte gesetzt werden k ¨onnen. Vorteilhaft wirkt sich in Logo aus, dass viele Objekte an der Oberﬂ ¨ache sichtbar sind, ein 453 Konzept des Unterrichtsversuchs großer Teil ihrer Attribute dem intuitiven Verst ¨andnis der Objekte aus der realen Welt entsprechen, die Nomenklatur der Methoden einem nachvollziehbaren Schema folgt, die Methoden teilweise ¨uber das Kontextmen ¨u ohne Programmierung ausgef ¨uhrt werden k¨onnen und nur eine begrenzte Anzahl von Klassen mit dem System ausgeliefert wird. Insgesamt erleichtert dieses System den schwierigen Einstieg in die objektorientierten Denkweisen , indem die fundamentalen Konzepte Klasse ,Objekt ,Attribut undAttributwert schrittweise auf unterschiedlich abstrakten Niveaus eingef ¨uhrt werden k ¨onnen. Arbeitstechniken Der streng prozedurale Aufbau der Programmiersprache Logo erfordert eigentlich einen modularisierten Entwurf einer Probleml ¨osung. Teill ¨osungen k ¨onnen in einzelnen Prozeduren verpackt und hierarchisch zur Gesamtl ¨osung zusammengesetzt werden. Prozeduren ohne globale Parameter sind sogar unabh ¨angig von dem urspr ¨unglichen Problemkontext ﬂexibel einsetzbar und k ¨onnen als Spracherweiterung aufgefasst werden. Das Prinzip der Iteration wird bei der Verwendung des WIEDERHOLE -Befehls deutlich undrekursive L ¨osungen werden durch rekursive Aufrufe von Funktionen und Befehlen erm¨oglicht. Das Konzept der Abstraktion in Logo wurde bereits anhand der Erweiterung desQuadrat -Befehls in Kapitel 3.1.2 vorgestellt. Informatische Beschreibungsmittel Programmablaufpl ¨ane, Syntaxdiagramme, UML-Klassendiagramme, Hierarchien und Netzwerke sind standardisierte informatische Beschreibungsmittel. In der professionellen Softwareentwicklung werden sie teilweise als Basis zur automatischen Generierung von Programmcode verwendet. Da Logo f ¨ur diese Art der Codegenerierung keine Unterst ¨utzung anbietet, wird ihr Erwerb durch die Programmiersprache selbst nicht gef¨ordert. Allerdings gibt es Bez ¨uge zwischen den graﬁschen Darstellungen und ihrer Umsetzung in ausf ¨uhrbaren Logo-Programmcode. Programmablaufpl ¨anebestehen zum Beispiel nach Claus und Schwill (2003) aus Aktionen und Verzweigungen. In Logo entspricht dies Prozeduraufrufen und dem WENN-Befehl. Syntaxdiagramme k¨onnen mit Hilfe der Funktion SATZ umgesetzt werden. Terminalsymbole werden als Zeichen oder Wort und Nichtterminalsymbole als Funktionen, die einen entsprechenden Wert zur ¨uckgeben, implementiert. Ein deutscher Satz aus einem Subjekt und einem Pr ¨adikat kann durch das Syntaxdiagramm Subjekt Prädikat .Subjekt Prädikat  Abbildung 3.7: Syntaxdiagramm eines Satzes bestehend aus Subjekt und Pr ¨adikat repr¨asentiert und als 463.2 Rahmenbedingungen DRUCKEZEILE (SATZ Subjekt Pr¨ adikat ".) in Logo umgesetzt werden. Analog w ¨urde das Vorgehen f ¨urUML-Klassendiagramme bedeuten, dass entsprechende Klassen in Logo entwickelt werden. Dies ist jedoch erst bei gr ¨oßeren und komplexeren Problemstellungen sinnvoll. In Klasse 5 werden UML-Klassendiagramme nur zur Veranschaulichung von Sachverhalten verwendet. Gleiches gilt f ¨urHierarchien undNetzwerke . Ihre Umsetzung in die Logo-Datenstruktur Liste und die Programmierung von entsprechenden Zugriﬀsfunktionen auf die Knoten der Hierarchien und Netzwerke ¨uberfordern Zehnj ¨ahrige. Fachnahe Inhalte Das Konzept der Funktionen kann spielerisch beim Experimentieren mit W ¨ortern und S¨atzen erprobt werden. Die Wortund Satz-Mikrowelten stellen analog zur Igel-Mikrowelt ein Repertoire an Grundfunktionen f ¨ur die Deﬁnition von Grammatiken und die automatische Erzeugung von S ¨atzen zur Verf ¨ugung. Beispielsweise geh ¨oren SATZ,WORT,ERSTES , OHNEERSTES ,LETZTES ,OHNELETZTES ,WORT? ,SATZ? ,DRUCKEZEILE oder ZELzu diesen Funktionen. Zu Beginn der Arbeit tritt h ¨auﬁg die Fehlermeldung”Was soll denn geschehen mit . . .“ auf. Es wird vergessen, dass Funktionen Objekte zur ¨uckgeben, die weiterverarbeitet werden m ¨ussen. Es wird also immer wieder auf den R ¨uckgabewert aufmerksam gemacht. DieSyntax von S ¨atzen einer nat ¨urlichen Sprache kann in Logo sehr einfach deﬁniert werden. Dies wurde bereits weiter oben bei der Umsetzung der Syntaxdiagramme in Logo-Programme beschrieben. Bei der automatischen Generierung der S ¨atze wird dabei sehr schnell deutlich, dass zu einer Sprachdeﬁnition nicht nur syntaktische, sondern auch semantische Regeln geh¨oren, da teilweise”Unsinnss ¨atze“ entstehen. Logo als Arbeitsmittel verdeutlicht die Verletzung der semantischen Regeln. 3.2 Rahmenbedingungen Der Unterrichtsversuch zur Vermittlung der informatischen Grundkonzepte wurde ¨uber das gesamte Schuljahr 2003/2004 in einer 5. Klasse an einer Realschule in Baden-W ¨urttemberg durchgef ¨uhrt. Die Versuchsklasse wurde vom Rektor zuf ¨allig ausgew ¨ahlt und setzte sich aus 13 Jungen und 17 M ¨adchen zusammen. Sie besuchten zuvor Grundschulen in sechs verschiedenen Gemeinden, so dass sie sich zu Beginn des Schuljahrs gr ¨oßtenteils nicht kannten. Unterrichtsf ¨acher Der Unterrichtsversuch fand in den F ¨achern Mathematik, Englisch, Deutsch und Musik statt, die von drei Fachlehrerinnen unterrichtet wurden. Eine Lehrerin war f ¨ur Deutsch 473 Konzept des Unterrichtsversuchs und Musik verantwortlich. In jedem Fach wurden die informatischen Grundkonzepte in einer Stunde pro Woche vermittelt, so dass in Mathematik noch drei, in Englisch und Deutsch vier und in Musik eine weitere Unterrichtsstunde zur Verf ¨ugung standen. Letztere wurde f ¨ur alle Sch ¨ulerinnen und Sch ¨uler der Klassenstufe 5 als Projektstunde im Chor, im Orﬀ-Orchester, in der Band, in der Akrobatik-Gruppe etc. abgehalten, so dass die Versuchsklasse keinen regul ¨aren Musikunterricht hatte. Aus diesem Grund mussten alle Fachinhalte aus Musik im Unterricht zu den informatischen Grundkonzepten vermittelt werden. Unterrichtsorganisation Im ersten Schulhalbjahr fand der Unterricht jeweils montags in der zweiten und dritten und donnerstags in der ersten und zweiten Stunde statt. Im zweiten Schulhalbjahr gab es an beiden Tagen eine Verschiebung um eine Stunde nach hinten. W ¨ahrend dieser vier Schulstunden unterrichtete die Forscherin die gesamte Klasse. Die entsprechende Fachlehrerin war im Unterrichtsraum anwesend. Zus ¨atzlich arbeitete die Forscherin vom 8. bis 12. Dezember, als eine schulweite Methodikwoche stattfand, mit jeweils der H ¨alfte der Klasse an drei Tagen zwei Stunden allein im Computerraum. Jeden Donnerstag wurde in der siebten und achten Schulstunde eine freiwillige Computer AG angeboten, in der die Sch ¨ulerinnen und Sch ¨uler sehr frei an eigenen oder vorgeschlagenen Themen arbeiteten. Unterrichtsr ¨aume In den vier regul ¨aren Unterrichtsstunden waren sowohl das Klassenzimmer als auch der Computerraum reserviert. Meistens begann der Unterricht im Klassenzimmer, das sich im dritten Stockwerk befand. Es war weder mit einem station ¨aren Rechner noch mit einem Beamer ausgestattet. H ¨auﬁg fand in der Doppelstunde ein Wechsel in den Computerraum im zweiten Stockwerk statt. Die Tischanordnung in beiden R ¨aumen ist in Abbildung 3.8 und 3.9 dargestellt. Abbildung 3.8: Klassenzimmer 483.2 Rahmenbedingungen Abbildung 3.9: Computerraum Im Computerraum befanden sich 16 vernetzte Sch ¨ulerund ein Lehrer-Computer. Am Rechner des Lehrers war ein Beamer angeschlossen. Die Arbeitsergebnisse der Sch ¨ulerinnen und Sch ¨uler wurden auf einem zentralen Server und nicht auf den lokalen Rechnern abgespeichert, so dass sie vom Lehrer-Computer aus vor der Klasse pr ¨asentiert werden konnten. An zwei Rechnern durften Kinder allein, ansonsten nur in Paaren arbeiten. ¨Uber das Schuljahr hinweg ver ¨anderte sich die Zusammensetzung der Partner. Kinder, die im Klassenzimmer nebeneinander saßen, bildeten im Computerraum nicht zwangsl ¨auﬁg ein Paar. Ab Mai standen dem Unterrichtsversuch 15 Convertibles zur Verf ¨ugung. Die Funktionalit¨at, das Display auf die Tastatur zu legen und Benutzereingaben handschriftlich mit einem speziellen Stift vorzunehmen, wurde nur in einer Stunde bei der Verwendung eines selbst erstellten Malprogramms genutzt. Aufgrund der Mobilit ¨at der Ger ¨ate fand der Unterricht ab diesem Zeitpunkt nur noch im Klassenzimmer statt. Die Ger ¨ate mussten vor ihrer Verwendung aus dem darunter liegenden Stockwerk geholt werden, da sie im Klassenzimmer nicht sicher eingeschlossen werden konnten. Sie standen also nicht unmittelbar am Arbeitsort zur Verf ¨ugung. Aufgrund eines fehlenden Beamers im Klassenzimmer konnten auch keine elektronischen Materialien mehr pr ¨asentiert werden. Logo-Systeme W¨ahrend des gesamten Unterrichtsversuchs wurde nur Logo-Software eingesetzt. Bis Februar 2004 wurde mit MSW Logo6.4h1in einer deutschen ¨Ubersetzung gearbeitet, da eine nat ¨urliche Formulierung von Probleml ¨osungen im Vordergrund stand und diese nur in der Muttersprache m ¨oglich ist. Vorteile bot außerdem die sehr einfach und intuitiv zu bedienende Benutzeroberﬂ ¨ache (vgl. Abbildung 3.10). Im Men ¨u wurden nur die Befehle Datei→Bewahre ,Datei→Lade undDatei→Ade zum Speichern und Laden von Logo-Programmen und dem Verlassen von MSW Logo 1http://www.ph-ludwigsburg.de/logo.html (Abruf 03.08.05) 493 Konzept des Unterrichtsversuchs Abbildung 3.10: Benutzeroberﬂ ¨ache von MSW Logo genutzt (vgl. Abbildung 3.11). Jede weitere Funktionalit ¨at musste aus der Kommandozeile des Hauptfensters aufgerufen werden. Eine einzelne Prozedur wurde mit dem Befehl EDIT <Prozedurname> und alle im Programm deﬁnierten Prozeduren mit EDAin den Editor geladen, um dort bearbeitet zu werden. Zum Schließen des Editors musste der Men¨upunkt Datei→Lerne u. Ende aus der in Abbildung 3.11 dargestellten Men ¨ustruktur ausgew ¨ahlt werden. Dies geschah sehr intuitiv, da der Editor in einer Metapher als Lernort des Igels bzw. des Systems eingef ¨uhrt worden war. Abbildung 3.11: Benutzeroberﬂ ¨ache des Editors von MSW Logo 503.2 Rahmenbedingungen In der zweiten Phase des Unterrichtsversuchs wurde der Fokus st ¨arker auf das Programmieren im Großen gelegt, so dass die Sch ¨ulerinnen und Sch ¨uler an einem System arbeiten sollten, das die informatischen Grundkonzepte der Objektorientierung ,Modularisierung ,Hierarchisierung undModellierung von Benutzerschnittstellen verdeutlichte. Diesen Anspr ¨uchen wurde MSW Logo nicht gerecht. Aus dem weiteren Wunsch, mit einem neuen System auch ¨asthetisch ansprechende interaktive multimediale Projekte erstellen zu k ¨onnen, ergaben sich folgende Anforderungen: •Sichtbarkeit objektorientierter Konzepte an der Programmoberﬂ ¨ache und im Programmcode •Darstellung der Modulstruktur und ihrer hierarchischen Abh ¨angigkeiten •M¨oglichkeit zur einfachen Erstellung von Benutzerschnittstellen •Einbindung multimedialer Objekte ohne Programmierung. Logo-Systeme in deutscher Sprache, die nur ann ¨ahernd diesen Anforderungen gen ¨ugen, existierten zu Beginn des Unterrichtsversuchs nicht. Aus diesem Grund musste auf ein englischsprachiges System zur ¨uckgegriﬀen werden. Die Entscheidung ﬁel auf Imagine Logo2. Abbildung 3.12: Objekthierarchie und Kontextmen ¨u in Imagine Logo Sein objektorientierter Aufbau spiegelt sich an der Oberﬂ ¨ache in der Objekthierarchie der Entwicklungsumgebung, in den Kontextmen ¨us der einzelnen Bildschirmobjekte (vgl. Abbildung 3.12) und der M ¨oglichkeit zur ¨Anderung von Attributwerten in Registerkarten, wie in Abbildung 3.13 dargestellt, wider. Analoges gilt f ¨ur die Ebene der Programmierung. Anstatt Kontextmen ¨us mit der rechten Maustaste auszuw ¨ahlen, m ¨ussen Objekte im Programmcode unter ihrem Namen angesprochen und mit Methoden wie setPos oder setBGColour manipuliert werden. In Imagine Logo k ¨onnen eigene Module durch Einblendung der Prozedurhierarchie (vgl. Abbildung 3.14) angezeigt werden. In ihr sind die entsprechenden Prozeduren linear angeordnet. Die Abh ¨angigkeiten der Module untereinander werden jedoch nicht dargestellt. 2Logotron Educational Software, http://www.logo.com/imagine (Abruf 03.08.05) 513 Konzept des Unterrichtsversuchs Abbildung 3.13: Registerkarte der Attribute eines Igel-Objekts in Imagine Logo Abbildung 3.14: Prozedurhierarchie in Imagine Logo Die Benutzerschnittstelle kann sehr einfach durch die Auswahl von Oberﬂ ¨achenobjekten aus der Symbolleiste erstellt werden. Es stehen, wie in Abbildung 3.15 angedeutet,Ebenen ,Schaltﬂ ¨achen ,Textfelder ,Schieberegler ,Eingabeboxen ,Verweism ¨oglichkeiten ins Internet undSeiten zur Verf ¨ugung. Nach der Auswahl eines Oberﬂ ¨achenobjekts kann dieses mit Hilfe der Maus an einer beliebigen Position im Arbeitsbereich eingef ¨ugt werden. Seine Attributwerte sind dann initialisiert und m ¨ussen gegebenenfalls ¨uber die Change -Methode im Kontextmen ¨u angepasst werden. Genauso wie die Oberﬂ ¨achenelemente k ¨onnen multimediale Objekte eingebunden werden. Hier werden in der Symbolleiste Bilder-, Audio-, Video-, Musik(siehe Abbildung 3.16) oder Web-Browserobjekte angeboten. 523.3 Fachinhalte und informatische Grundkonzepte Abbildung 3.15: Oberﬂ ¨achenobjekte in Imagine Logo Abbildung 3.16: Multimediaobjekte in Imagine Logo 3.3 Fachinhalte und informatische Grundkonzepte Im Schuljahr 2003/2004 war in Baden-W ¨urttemberg an Realschulen der Bildungsplan von 1994 (Kultusministerium Baden-W ¨urttemberg, 1994b) g ¨ultig. Aus diesem wurden die Inhalte der F ¨acher Mathematik, Englisch, Deutsch und Musik ausgew ¨ahlt, in deren Kontext die informatischen Grundkonzepte sinnvoll vermittelt werden konnten. Eine ¨Ubertragung auf die Inhalte des neuen Bildungsplans (Kultusministerium Baden-W ¨urttemberg, 2004b) ist jedoch leicht m ¨oglich. Wirkprinzipien von Informatiksystemen In den F ¨achern Deutsch und Englisch spielen sprachliche Strukturen eine Rolle, die sich systematisieren lassen. Ihre Beschreibungen k ¨onnen genutzt werden, um automatisch Instanzen zu erzeugen. ¨Ahnlich k ¨onnen abgeleitete Substantive gebildet werden. Sie werden aus einem Wortstamm und einer Endung zusammengesetzt. Die Hervorhebung der entsprechenden Endungen unterst ¨utzt die Fehlervermeidung bei der Groß-/Kleinschreibung. Alle Unterrichtsthemen, in denen Regeln gelernt werden, bieten sich f ¨ur eine Einf ¨uhrung vonAlgorithmen an. In Musik sind dies die Positionen der Halbtonschritte in Durund Moll-Tonleitern, in Englisch die Bildungsgesetze der Verlaufsform der Verben und in Mathematik die Umwandlung der r ¨omischen Zahlen in das Dezimalsystem. Algorithmen erfordern eine formalisierte und somit pr ¨azise Beschreibung der Regeln. Sie k ¨onnen in Form eines Computerprogramms dem Rechner beigebracht werden. Die Richtigkeit kann durch intelligentes Testen ¨uberpr ¨uft werden. Sachverhalte k ¨onnen h ¨auﬁg auf ganz unterschiedliche Art und Weise dargestellt werden. Bei Erfassung aller relevanten Eigenschaften handelt es sich um ¨aquivalente Repr ¨asenta533 Konzept des Unterrichtsversuchs tionen, die verschieden codiert sind. Zahlen k ¨onnen zum Beispiel als r ¨omische Zahlen oder Dezimalzahlen und Noten im F ¨unﬂiniensystem oder als Balkendiagramme repr ¨asentiert werden. Informatische Modellierung In Sprachen wird zwischen Wortarten (z.B. Substantiv, Verb) und Satzgliedern (Subjekt, Pr¨adikat, Genitivobjekt etc.) unterschieden. Im ersten Fall handelt es sich um einzelne W¨orter, im zweiten um Wortgruppen wie”das Haus“ oder”dessen sch ¨oner Garten“, die als Einheit betrachtet werden. Ihre Darstellung erfordert unterschiedliche Datenstrukturen, da die W ¨orter der Satzglieder zusammengefasst werden m ¨ussen. Gleiches gilt in der Musik f ¨ur die Unterscheidung zwischen einzelnen Noten und Melodiebausteinen, die aus mehreren Noten bestehen. Modelle beschreiben die Realit ¨at abstrakt und beschr ¨anken sich auf die f ¨ur einen Kontext wesentlichen Eigenschaften. Sie spielen im Fremdsprachenunterricht eine Rolle. Dort steht im Anfangsunterricht ein sehr begrenzter Wortschatz zur Verf ¨ugung, so dass nur mit einem Modell der Sprache gearbeitet wird. Beim Lernen grammatikalischer Regeln wird dies besonders deutlich, da zun ¨achst nur diejenigen Regeln und Ausnahmen gelernt werden m ¨ussen, die f ¨ur den g ¨ultigen Wortschatz relevant sind. Mit der Erweiterung des Wortschatzes erfolgt dann auch eine weitere Diﬀerenzierung der Grammatikregeln. Als Einf ¨uhrung in die objektorientierten Konzepte derKlassen ,Attribute undObjekte bieten sich in Musik T ¨one an. Leicht k ¨onnen Eigenschaften identiﬁziert und eine Klasse Ton mit Attributen Tonh ¨ohe und Tonl ¨ange deﬁniert werden. Die eindeutige Namensgebung und der Aufruf von Methoden in der Objektorientierung kann bei der Animation von Objekten ge ¨ubt werden. Arbeitstechniken Um das Konzept der Modularisierung anwenden zu k ¨onnen, muss eine Problemstellung komplex genug sein. In Mathematik bietet sich daf ¨ur die Erstellung von Bandornamenten und in den Sprachen die Generierung von S ¨atzen an. Im Zusammenhang mit der Modularisierung kann auch die Hierarchisierung thematisiert werden, da die L ¨osungen der Teilprobleme hierarchisch zur Gesamtl ¨osung zusammengesetzt werden. Das Prinzip der Abstraktion wird anhand der ebenen Figuren in Mathematik anschaulich. Die Begriﬀe Viereck ,Quadrat ,Raute , etc. deﬁnieren jeweils Klassen von unendlich vielen geometrischen Objekten, die sich in ganz speziellen Eigenschaften unterscheiden. Beim Quadrat zum Beispiel wird von der Seitenl ¨ange abstrahiert. Gleiches gilt f ¨ur Satzglieder oder Wortgruppen in Sprachen oder T ¨one in Musik. Wenn die Orientierungsbefehle VORW ¨ARTS und RECHTS weggelassen und nur die Befehle zur Bewegung des Igels betrachtet werden, so ist die Formel zur Berechnung des Umfangs von Quadraten und Rechtecken dem iterativen Programm, das das Zeichnen dieser Figuren mit Hilfe einer Schleife realisiert, sehr ¨ahnlich. 543.4 Unterrichtsmethoden WIEDERHOLE 4 [ VORW ¨ARTS :L¨ ange RECHTS 90 ] U = 4 * L¨ ange WIEDERHOLE 2 [ VORW ¨ARTS :L¨ ange RECHTS 90 VORW ¨ARTS :Breite RECHTS 90 ] U = 2 * L¨ ange * Breite DieRekursion bietet als elegante und ¨außerst kompakte Beschreibungsform Ankn ¨upfungspunkte an das Fach Deutsch. Informatische Beschreibungsmittel Die standardisierten informatischen Beschreibungsmittel eignen sich zur Veranschaulichung der Fachinhalte ganz unterschiedlich. Zur Darstellung von Prozessen sind Programmablaufpl ¨anesehr n ¨utzlich. Das Vorgehen bei der Umwandlung r ¨omischer Zahlen in Dezimalzahlen kann mit ihnen visualisiert werden. Syntaxdiagramme beschreiben statische Strukturen und werden zur formalen Deﬁnition einer Grammatik eingesetzt. Zur Veranschaulichung der verschiedenen Beziehungen zwischen den ebenen Figuren Viereck, Parallelogramm, Quadrat, Rechteck und Raute und der Vererbung ihrer Eigenschaften bieten sich UML-Klassendiagramme an.Hierarchien undNetzwerke spielen in fast allen F¨achern zur Strukturierung fachlicher Zusammenh ¨ange eine Rolle. Fachnahe Inhalte Die fachnahen Inhalte k ¨onnen den entsprechenden Unterrichtseinheiten aus dem Lehrplan zugeordnet werden. Grammatik ,Syntax undSemantik sind Themen in den F ¨achern Englisch und Deutsch und Funktionen werden prop ¨adeutisch f ¨ur die Klassenstufe 8 in Mathematik eingef ¨uhrt. Das Schema des Unterrichtskonzepts zur Vermittlung der informatischen Grundkonzepte im f¨acher ¨ubergreifenden Unterricht (vgl. Abbildung 2.5) kann somit noch um Logo und die vier F ¨acher erweitert werden. In dem daraus resultierenden Gesamtschema in Abbildung 3.17 werden die wichtigsten Komponenten und Interdependenzen beschrieben. 3.4 Unterrichtsmethoden Die Anforderungen an die Sch ¨ulerinnen und Sch ¨uler waren im Unterrichtsversuch aufgrund der unterschiedlichen Lerninhalte sehr hoch. Sie mussten informatische Grundkonzepte, Fachinhalte, die Programmiersprache Logo, informationstechnische Grundkonzepte und Schl ¨usselqualiﬁkationen wie Selbstst ¨andigkeit, Gestaltungsf ¨ahigkeit etc. erlernen. Außerdem wurden die verschiedenen Inhalte dieser Gebiete immer wieder miteinander verkn ¨upft. Damit sie durch den Grad der Komplexit ¨at nicht ¨uberfordert wurden, war es vor allem bei der Einf ¨uhrung neuer informatischer Grundkonzepte notwendig, die Instruktionsphasen nicht zu knapp zu gestalten. Das Konzept des problemorientierten Lernens eignete sich f ¨ur das Erlernen der informatischen Grundkonzepte vor allem in 553 Konzept des Unterrichtsversuchs Arbeiten und Lernen mit  informationstechnischen  Werkzeugen Zusammenarbeiten  und  Kommunizieren Entwickeln,  Zusammenhänge verstehen  und Reflektieren Modellbildung Vorausschauendes und  vernetztes Denken Selbstständigkeit und  Zuverlässigkeit Organisations fähigkeit  Abschätzung von Technik und Technologiefolgen  Gestaltungs fähigkeit  Lernfähigkeit Abstraktions vermögen Medienkompetenz  Team fähigkeit Kommunikations fähigkeit Kreativität  Wirkprinzi pien von IS  Begriffliche und kognitive  Grundlagen  Begriffliche und kognitive  Grundlagen  Begriffliche und kognitive  Grundlagen  Informatische Grundkonzepte Informationstechnische Kompetenzen und Inhalte  Arbeits techniken Informatische   Modellierung Informatische  Beschreibungs mittel Fachnahe  Inhalte Lehrplan  Mathe  Englisch  Deutsch  Musik Logo  Philosophie  Pro grammier sprache  Mikro welten Schlüsselqualifikationen  Abbildung 3.17: Gesamtkonzept den Unterrichtseinheiten in der ersten H ¨alfte des Schuljahrs. Dadurch konnte eine angemessene Balance zwischen Konstruktion und Instruktion, wie sie von Schnurer & al. (2003, S. 156) gefordert wird, erreicht und die Vorteile beider Methoden vereint werden. Beim problemorientierten Lernen wurden die authentischen Problemstellungen jeweils aus einem der vier F ¨acher gew ¨ahlt, so dass sie eine unterrichtliche Relevanz f ¨ur die Sch¨ulerinnen und Sch ¨uler hatten und das Erlernen der Fachinhalte in den anderen Unterrichtsstunden unterst ¨utzten. Viele informatische Grundkonzepte wurden auch in unterschiedliche fachliche Kontexte eingebettet. Dies hatte zur Auswirkung, dass die Fachinhalte untereinander st ¨arker vernetzt wurden und die Konzepte ﬂexibel anwendbar waren. Das selbstgesteuerte und soziale Lernen fand vor allem am Computer statt. Dort hatten alle die M ¨oglichkeit, in einem eigenen Lerntempo mit dem Partner zu arbeiten, L¨osungen mit ihm zu diskutieren, Alternativen auszuprobieren, sich die Arbeiten der anderen an den Rechnern anzuschauen oder sich Hilfestellungen bei den Mitsch ¨ulerin563.4 Unterrichtsmethoden nen und Mitsch ¨ulern oder der Lehrerin zu holen. Theoretische Inhalte wie zum Beispiel die informatischen Beschreibungsmittel, deren Syntax und Semantik nicht explorativ erarbeitet werden k ¨onnen, und programmiersprachliche Konstrukte wurden dagegen instruktiv im Frontalunterricht eingef ¨uhrt. Dieses Vorgehen verschaﬀte den Lernenden einen schnellen ¨Uberblick und unterst ¨utzte sie vor allem bei anf ¨anglichen Programmierschwierigkeiten. Somit wurden die Vorteile der Instruktion, wie sie in Hense & al. (2001, S. 7) beschrieben sind, mit denen eines aktiven und konstruktiven Vorgehens optimal verkn ¨upft und der Aussage von Mayer (2004, S. 18) Rechnung getragen, dass Instruktion auch in konstruktiven Lernans ¨atzen ihre Bedeutung hat: ”Pure discovery did not work in the 1960s, it did not work in the 1970s, and it did not work in the 1980s, so after these three strikes, there is little reason to believe that pure discovery will somehow work today.“ Die Vermittlung informatischer Grundkonzepte in Mathematik, Englisch, Deutsch und Musik legte einen f ¨acher ¨ubergreifenden Ansatz der Unterrichtskonzeption sehr nahe. Huber (1998) sieht als Vorteil des f ¨acher ¨ubergreifenden Unterrichts seinen ganzheitlichen Ansatz, der eher der nat ¨urlichen Neugier des Kindes entgegenkommt, seine Problemorientierung durch die Arbeit an m ¨oglichst relevanten praktischen Problemen, seine F¨orderung reﬂexiven Denkens und sein Umgang mit der Heterogenit ¨at, die Vielfalt hervorbringen soll. Huber (1995) unterscheidet f ¨unf verschiedene Formen f ¨acher ¨ubergreifenden Unterrichts bez ¨uglich ihrer Organisationsformen: •Derf¨acher ¨uberschreitende Unterricht ﬁndet in einem einzelnen Fach statt. Von diesem ausgehend werden die Fachgrenzen ¨uberschritten und Inhalte anderer F ¨acher einbezogen. •Imf¨acherverkn ¨upfenden Unterricht steht ein zentrales Thema im Mittelpunkt, das mehrere F ¨acher miteinander verbindet. •F¨acherkoordinierender Unterricht ist ein f ¨acherverkn ¨upfender Unterricht, in dem die beteiligten F ¨acher sehr stark kooperieren. •Imf¨achererg ¨anzenden Unterricht wird die F ¨acherordnung zugunsten von themenund projektorientiertem Unterricht ausgesetzt. Er erg ¨anzt den Fachunterricht. •Derf¨acheraussetzende Unterricht hebt f ¨ur einen festgelegten Zeitraum den gesamten Fachunterricht, wie zum Beispiel in Projektwochen, auf. Das Unterrichtskonzept beinhaltete verschiedene Organisationsformen. H ¨auﬁg fand ein f¨acherkoordinierender Unterricht statt, da die informatischen Grundkonzepte im Kontext mehrerer F ¨acher angesprochen wurden. Es bot sich zum Beispiel an, das Thema Abstraktion sowohl im Zusammenhang mit den ebenen Figuren in Mathematik als auch der Satzglieder in den Sprachen zu thematisieren. Der Lehrplan der Klassenstufe 5 enthielt auch Fachinhalte, deren Erarbeitung ein f ¨acher573 Konzept des Unterrichtsversuchs verkn ¨upfendes Vorgehen anbot. So wurde die Einf ¨uhrung der Tonl ¨ange in Musik mit Konzepten der Bruchrechnung verkn ¨upft. Durch die Analyse der Sprachstrukturen in Deutsch und Englisch ergaben sich Ankn ¨upfungspunkte. Diese wurden durch die Verwendung von Syntaxdiagrammen zur Darstellung der Satzstrukturen sehr deutlich. Auch Beschreibungen waren nicht nur Thema des Fachs Deutsch. Sie konnten in Musik bei der Charakterisierung von Melodiebausteinen angewendet werden. Alle Beispiele verdeutlichen, dass ausgehend von einem Fach die F ¨achergrenzen ¨uberschritten und die Bez ¨uge zu anderen Inhalten hergestellt wurden. Die mehrw ¨ochige Projektarbeit wurde als f ¨achererg ¨anzender Unterricht konzipiert, da in den vorgegebenen Pﬂichtteilen weiterhin an Fachinhalten aus Mathematik, Englisch, Deutsch und Musik gearbeitet wurde. Nur w ¨ahrend einer kompakten Methodikwoche war der Fachunterricht komplett ausgesetzt. In Moegling (1998) werden eine Reihe von Methoden f ¨ur f¨acher ¨ubergreifendes Lernen beschrieben. Im Unterrichtskonzept zur Vermittlung der informatischen Grundkonzepte wurde meistens das exemplarische Lernen als didaktisch-methodischer Weg gew ¨ahlt. Im Rahmen eines speziellen Fachthemas wurden die informatischen Grundkonzepte als ganz allgemeine Prinzipien, Strukturen und Konzepte eingef ¨uhrt und ge ¨ubt. In den Fachkontexten hatten sie die Rolle eines Denkoder Hilfsmittels. Ihre allgemeine Bedeutung wurde durch Anwendung in weiteren F ¨achern hervorgehoben. Im f ¨achererg ¨anzenden Unterricht wurde die Projektmethode angewendet. 3.5 Vorbereitung der Fachlehrerinnen Ein sehr wichtiger Erfolgsfaktor f ¨ur den Unterrichtsversuch war die Einstellung der beteiligten Fachlehrerinnen. Sie hatten letztendlich die Verantwortung f ¨ur die Unterrichtsinhalte in den F ¨achern und insgesamt eine Stunde weniger Zeit, sie zu vermitteln. Zun¨achst konnte von einer intrinsisch hohen Motivation ausgegangen werden, da sie sich freiwillig zur Mitarbeit im Forschungsprojekt bereit erkl ¨art hatten. Trotzdem sollten sie schon einige Monate vor Schuljahresbeginn das Konzept zur Vermittlung der informatischen Grundkonzepte genauer kennen lernen. In mehreren Sitzungen (vgl. Tabelle 3.1) arbeiteten sie ¨ahnlich wie sp ¨ater die Sch ¨ulerinnen und Sch ¨uler mit Logo an einzelnen Unterrichtsthemen. Jeder Lehrerin stand ein Computer zur Verf ¨ugung. Durch eigene Lernerfahrungen wurde ihnen sehr schnell deutlich, dass es sich bei dem Konzept nicht um den sonst ¨ublichen Unterricht zur Informationstechnischen Grundbildung handelte, sondern das Erlernen der informatischen Grundkonzepte im Mittelpunkt stand und mit Hilfe der Logo-Programmierung vertieft und angewendet wurde. Außerdem erfuhren sie vorab, in welcher Form die informatischen Konzepte in die Inhalte ihrer F ¨acher integriert wurden. Obwohl sich die F ¨ahigkeiten der Lehrerinnen im Umgang mit dem Computer deutlich unterschieden, konnten sie die informatischen Grundkonzepte und 583.5 Vorbereitung der Fachlehrerinnen Logo-Programmierung in der Weiterbildung gemeinsam erlernen. Die Mathematiklehrerin, die auch das Fach Mensch und Umwelt und Biologie unterrichtete und das dritte Jahr nach ihrem Referendariat an der Schule t ¨atig war, nutzte den Computer intensiv als Werkzeug zur Erstellung von Unterrichtsmaterialien, zur Verwaltung von Sch ¨ulerdaten, Recherchen im Internet und zum Schreiben von E-Mails. Ihre Kompetenzen hatte sie bereits im Studium erworben. Die berufserfahrene Englischlehrerin mit Zweitfach Sport, die bis zum Zeitpunkt des Unterrichtsversuchs die eigene Arbeit am Computer m¨oglichst vermied, hatte sehr wenige Vorkenntnisse. Die Deutschund Musiklehrerin, die bereits ¨uber 20 Jahre im Schuldienst war, f ¨uhrte Recherchen im Internet durch und schrieb E-Mails und einfache Textdokumente. Termin Thema Anwendungen 10.04.2003 (16:30-18:30 Uhr)Vorstellung der Gesamtkonzeption des Unterrichtsversuchs 14.04.2003 (10:00-12:00 Uhr)Befehle aufrufen, Befehlsfolgen, Wiederholung, Befehle erstellenIgel-Graﬁk: Quadrat, Rechteck 05.05.2003 (19:00-21:00 Uhr)Befehle mit Eingabeparametern erstellenIgel-Graﬁk: Quadrat, Quadratﬁguren, Drehﬁguren, Bandornamente, Spiegelungen, Blumen 19.05.2003 (19:00-21:00 Uhr) EnglischlehrerinFunktionen, Maschinendarstellung, Funktionsgeﬂechte, Konstruktoren und Selektoren f ¨ur W ¨orterSpielereien mit W ¨ortern 26.05.2003 (19:00-21:00 Uhr)Funktionen, Maschinendarstellung, Funktionsgeﬂechte, Konstruktoren und Selektoren f ¨ur W ¨orterSpielereien mit W ¨ortern 02.06.2003 (19:00-21:00 Uhr)Funktionen, Konstruktoren und Selektoren f ¨ur S¨atzeSpielereien mit S ¨atzen, Phrasendreschmaschine 06.06.2003 (10:00-12:00 Uhr) Englisch/DeutschlehrerinBedingungen, Unterscheidung von Variablennamen, Prozedurnamen und W¨ortern, Unterscheidung von Befehlen und FunktionenUnbestimmter englischer Artikel, Plural englischer Substantive 16.06.2003 (19:00-21:00 Uhr)Einf¨uhrung der endst ¨andigen Rekursion, BefehleIgel-Graﬁk 14.07.2003 (19:00-21:00 Uhr)Fortsetzung der endst ¨andigen Rekursion, FunktionenWortund Satzspielereien 25.07.2003 (10:00-12:00 Uhr)Einf¨uhrung in Musik, Listen, Codierung Eigene Melodien, Transponieren, Tonleiter 02.09.2003 (19:00-21:00 Uhr)Wiederholung: Befehle, Funktionen, Bedingungen, Variablen, VariablenwerteBandornamente, abgeleitete Substantive, Perfekt und Partizip Perfekt englischer Verben, W ¨orterbuch Tabelle 3.1: Logo-Fortbildung der Lehrerinnen 593 Konzept des Unterrichtsversuchs 3.6 Vorbereitung der Eltern Auch die positive Einstellung der Eltern zum Unterrichtsversuch hatte eine große Bedeutung f ¨ur seinen Erfolg. Sie sollten nicht das Gef ¨uhl haben, dass ihre Kinder durch die zus¨atzlichen Anforderungen der Vermittlung der informatischen Grundkonzepte, dem Arbeiten am Computer und dem Programmieren in Logo zu sehr belastet werden. F ¨ur die meisten war der Schulwechsel mit einem Ortswechsel verbunden. Der Schulweg wurde dadurch mit einem ¨oﬀentlichen Bus zur ¨uckgelegt. Die Kinder kannten sich zum großen Teil nicht, so dass alle erst einmal ihren Platz innerhalb der Klasse ﬁnden mussten. Neu war auch der Fachunterricht, der von verschiedenen Lehrerinnen und Lehrern durchgef¨uhrt wurde. In jeder Schulstunde mussten sie sich auf eine andere Person einstellen. Gleich zu Beginn des Schuljahrs wurde ein Fortbildungsangebot an vier Abenden eingerichtet, an dem die Eltern selbst ausprobieren konnten, in welcher Form ihre Kinder ¨uber das Schuljahr hinweg mit Logo arbeiteten. Gleichzeitig lernten sie die Logo-Philosophie, den Nutzen informatischer Grundkonzepte, die Zusammenh ¨ange zwischen den informatischen Grundkonzepten und den Fachinhalten und das Gesamtkonzept in einem ¨Uberblick kennen. Etwa die H ¨alfte der Eltern nahm das Angebot an. Die Inhalte der vier Veranstaltungen sind in Tabelle 3.2 abgebildet. Termin Thema Anwendungen 30.09.2003 (19-21 Uhr)Befehle aufrufen, Befehlsfolgen, Wiederholung, Befehle erstellenEbene Figuren, Verschiebungen, Drehﬁguren 14.10.2003 (19-21 Uhr)Befehle mit Eingabeparametern erstellen, Listen, Funktionen, Maschinendarstellung, FunktionsgeﬂechteQuadratund Rechteckﬁguren, Gl ¨ucksrad, Spielereien mit W¨ortern, englische Kurzs ¨atze 21.10.2003 (19-21 Uhr)Befehle mit Eingabeparametern erstellen, Funktionen, Konstruktoren und Selektoren f ¨ur W ¨orter, BedingungenSpinnennetz, Spielereien mit W¨ortern, Imperativ, Komparativ, Verben ohne Vorsilben, unbestimmter englischer Artikel, Plural englischer Substantive 28.10.2003 (19-21 Uhr)Einf¨uhrung in die Musik, Listen, Befehle, Funktionen, CodierungZahlenr ¨atsel, Tonleitern, Rhythmen, Transposition, Krebs, Umkehrung Tabelle 3.2: Logo-Fortbildung der Eltern 604 Unterrichtseinheiten zu informatischen Grundkonzepten Der Unterrichtsversuch gliedert sich in drei Phasen, die sich bez ¨uglich der Methoden, der Wissensvermittlung und -anwendung und der Integration der informatischen Grundkonzepte in die Fachinhalte unterscheiden: 1.Vermittlung einzelner informatischer Grundkonzepte in einem Fach 2.Anwendung informatischer Grundkonzepte im f ¨acher ¨ubergreifenden Projektunterricht 3.Erarbeitung informatischer Grundkonzepte anhand fachunabh ¨angiger Themen. In der ersten Phase bis Ende M ¨arz war der instruktionale Anteil des Unterrichts am gr¨oßten, da informatische Grundkonzepte und Logo-Sprachstrukturen eingef ¨uhrt wurden. Die Wissensvermittlung stand in k ¨urzeren Unterrichtseinheiten im Zusammenhang eines Fachinhalts im Vordergrund. Anschließend wurden die erlernten informatischen Grundkonzepte in einer f ¨unfw ¨ochigen Projektarbeit bei der Erstellung einer multimedialen Rittergeschichte angewendet. Innerhalb des Projekts wurde gleichzeitig an Inhalten der F ¨acher Mathematik, Englisch, Deutsch und Musik gearbeitet. In der dritten Phase wurden schließlich weitere informatische Grundkonzepte in einem meist fachunabh ¨angigen Unterricht erarbeitet und vertieft. Die einzelnen Lehr-/Lernarrangements dieser drei Phasen werden in den folgenden Kapiteln kompakt dargestellt. Zu Beginn steht jeweils eine tabellarische Auﬂistung der informatischen Schwerpunkte, Fachinhalte und verwendeten Logo-Mikrowelten. Es schließt sich eine ausf ¨uhrliche Beschreibung der Einbettung der informatischen Grundkonzepte in die Fachinhalte, der didaktischen ¨Uberlegungen zur Vermittlung der informatischen Grundkonzepte und der Erprobung der Unterrichtseinheiten an. 4.1 Fachunterricht Die Reihenfolge der im Folgenden vorgestellten Unterrichtseinheiten entspricht ihrer zeitlichen Abfolge w ¨ahrend des Schuljahrs. Die vier Wochenstunden zur Vermittlung der informatischen Grundkonzepte wurden sehr ﬂexibel auf die Inhalte der F ¨acher verteilt. Die einzelnen Einheiten waren auf zwei bis vier Stunden angelegt. Meistens wurde an zwei Themen parallel gearbeitet. 614 Unterrichtseinheiten zu informatischen Grundkonzepten Neue informatische Grundkonzepte Fachinhalt Mikrowelt Wiederholung Befehle, Befehlsfolgen Mathematik: Berechnung einer Streckenl ¨ange auf einem StadtplanStadt-Mikrowelt Metapher Igel spielen Mathematik: Quadrat, senkrechte GeradenIgel-Mikrowelt Algorithmus, Planung einer komplexenIgelbewegung Iteration Mathematik: Quadrat, Rechteck Igel-Mikrowelt Kompakte Beschreibung, Kontrollstruktur Repr ¨asentationsformen Musik: Tonleiter Musik-Mikrowelt Datentyp Liste Befehle deﬁnieren Mathematik: Quadrat, Rechteck, Parallelogramm, RauteIgel-Mikrowelt Spracherweiterung, systematische Beschreibung von Strukturen, Abstraktion, Prozeduren, Automatisierung Fehlende Intelligenz in Computerprogrammen Englisch: Vokabeltrainingsprogramm f¨ur die erste SchulbucheinheitVokabeltrainingMikroweltIntelligenz von Computersystemen, Begrenztheit Befehle mit Parametern Mathematik: Quadrat, Quadratﬁgur, Rechteck, RechteckﬁgurIgel-Mikrowelt Abstraktion, Module, gebundene Variablen Funktionen Deutsch: Abgeleitete Substantive, Tageszeit, GroßschreibungWort-Mikrowelt, Drucke-MikroweltMetapher Gl¨ucksrad , Datentyp Liste, Automatisierung, Syntax, Semantik Englisch: Englische Sprachdialoge Dialog-Mikrowelt Begrenztheit, Formalisierung, Digitalisierung UML-Klassendiagramme Mathematik: Beziehungen zwischen ebenen FigurenOberklasse, Unterklasse, Eigenschaften, Vererbung Modularisierung Musik: Musikbausteine anh ¨oren, beschreiben und zusammensetzenMelodieMikroweltBottom-up Funktionsgeﬂecht Englisch: Struktur von”This is“S¨atzen und”Is“-FragenSatz-Mikrowelt, Drucke-MikroweltMaschinen, Abstraktion, zusammengesetzte Maschinen, Datenstruktur geschachtelter Listen, Modularisierung 624.1 Fachunterricht Neue informatische Grundkonzepte Fachinhalt Mikrowelt Wiederholung Algorithmus Mathematik: Umwandlung r ¨omischer Zahlen ins ZehnersystemR¨omische ZahlenMikroweltRegelwerk mit Ausnahmen lesen, schriftlicher Algorithmus und Programmablaufplan lesen, Bedingungen ¨Aquivalenz von Repr ¨asentationsformen Musik: Musikbausteine anh ¨oren, beschreiben und Repr ¨asentationen im F¨unﬂiniensystem Balkendiagrammen zuordnenPapagenoMikroweltModule Abstraktion Englisch:”Is“-Fragen Satz-Mikrowelt, Drucke-MikroweltBefehle, Funktionen, Funktionsgeﬂechte, zusammengesetzte Maschinen, Modularisierung, Abstraktion Programmablaufpl ¨ane erstellen Deutsch: Steigerung von Adjektiven Wort-Mikrowelt, Drucke-MikroweltFunktionen, Maschinen, Formulierung von Regeln, Bedingungen Automatisierung Allgemein: Fadenbilder zweier Igel FadenbilderMikroweltObjekt, Planung komplexer Bilder, Modularisierung Allgemein: Weihnachtskarten (Englisch: Kurztexte, Mathematik: Drehﬁguren, Verschiebung)WeihnachtskartenMikroweltModule, Planung komplexer Bilder Fehleranf ¨alligkeit von Computersystemen Mathematik: Zweisatz Syntaxdiagramme Deutsch: Satzlehre, Satzglieder Satz-Mikrowelt, Drucke-MikroweltMaschinen, Funktionen, Datenstrukturen, Abstraktion, Modularisierung, Syntax, Semantik Automatisierte Tests Englisch: Unbestimmter englischer ArtikelWort-Mikrowelt, Satz-Mikrowelt, Drucke-MikroweltSchriftliche Formulierung von Regeln, Algorithmus, Programmablaufplan erstellen, Maschinen, Funktionen, Funktionsgeﬂechte, zusammengesetzte Maschinen, Bedingungen, Umformung formaler Beschreibungsformen 634 Unterrichtseinheiten zu informatischen Grundkonzepten Neue informatische Grundkonzepte Fachinhalt Mikrowelt Wiederholung Objekte in unterschiedlichen Repr ¨asentationsformen und ihre Umwandlung Musik: F ¨unﬂiniensystem, Takt, Taktstrich, Notenschl ¨usselMusik-Mikrowelt Attribute, Funktionen Grammatik Englisch: Satzlehre, S ¨atze mit sGenitivSyntaxdiagramme Erweiterung von Repr ¨asentationsformen bei Einf ¨uhrung neuer Attribute Musik: Tondauer, Notenh ¨alse, Taktart, GrundschlagMusik-Mikrowelt Umwandlung in verschiedene Repr¨asentationsformen, schriftliche Formulierung von Regeln, Algorithmus, Datentypen, Noten als Objekte Attribute Mathematik: Potenzen Potenz-Mikrowelt Maschinen, Funktionen, Syntaxdiagramme Codierung Deutsch: Rechtschreibung durch GeheimcodesKomplexe Programmablaufpl ¨ane lesen ¨Aquivalenz formaler Beschreibungsformen Englisch: Verlaufsform im Pr ¨asens Wort-Mikrowelt, Satz-Mikrowelt, Drucke-MikroweltSyntaxdiagramme, Maschinen, Funktionen, schriftliche Formulierung von Regeln, Algorithmus, Programmablaufplan, Funktionen Hierarchische Darstellung mit Mindmaps Mathematik: Wiederholung Potenzen Objekte und Ereignisse an der Programmoberﬂ ¨ache Mathematik: Potenzlernprogramm PotenzspielMikroweltKlasse Schaltﬂ ¨ache undIgel, Ereignisse (onClick ,onPush ), Methoden Hierarchie Deutsch: Rechtschreibung, W ¨orter mitieund iehPegasusMikroweltBaum, Bl ¨atter, Wurzel, Ebene, Attribute, Klasse Textfeld und Seite Objektorientierte Programmierung Englisch: Eine kleine Geschichte Jim-Mikrowelt Namensgebung, Objekte, Methoden Konstruktion eines Netzwerks Englisch: Beschreibung verwandtschaftlicher Verh ¨altnisse Tabelle 4.1: Informatische Grundkonzepte eingebettet in Fachinhalte 644.1 Fachunterricht Befehle, Befehlsfolgen Mit der Igel-Graﬁk erfolgte f ¨ur die Sch ¨ulerinnen und Sch ¨uler ein sehr motivierender Einstieg in den Unterricht zur Vermittlung der informatischen Grundkonzepte und von Logo. Wie in der Literatur beschrieben (vgl. Shimabukuro 1988) kommandierte die Klasse zun¨achst einen Mitsch ¨uler mit verbundenen Augen durch den Klassenraum. Dabei erlernten die Kinder die Angabe von pr ¨azisen, nach einem vorgegebenen Schema gebildeten Befehlen und bauten eine Beziehung zwischen dem Arbeiten mit dem Igel und der eigenen K ¨orpervorstellung auf. Genau wie sie selbst in der ersten Schulwoche die neue Schule und den Schulort erkundet hatten, mussten sie in ihrer ersten Aufgabe am Computer den Igel kreuz und quer durch eine ﬁktive Stadt (vgl. Abbildung 4.1) schicken und verschiedene Orte mit den Befehlen VORW ¨ARTS 50 ,VORW ¨ARTS 100 ,VORW ¨ARTS 150 ,VORW ¨ARTS 200 , RECHTS 90 undLINKS 90 ansteuern lassen. Die mehrfache Angabe des VORW ¨ARTS-Befehls mit unterschiedlichen L ¨angenangaben sollte die Kinder zum Experimentieren mit verschiedenen Aktualparametern auﬀordern. Ziel der Arbeit war, den k ¨urzesten Weg, auf dem der Igel alle Orte der Stadt besuchen konnte, zu ﬁnden und diesen zu dokumentieren. Die Streckenl ¨ange mussten sie selbst berechnen. Die Stadt-Mikrowelt konnte mit den Befehlen start und Stadtplan geladen werden, so dass bereits nach 30 Minuten Unterricht die ersten Logo-Befehle im System geschrieben wurden. Abbildung 4.1: Stadt-Mikrowelt In einer zweiten Aufgabe zeichneten die Kinder mit dem Igel ein Quadrat. Die Einf ¨uhrung erfolgte zun ¨achst mit einem realen Holzigel im Klassenverband an der Tafel. Der Holzigel hatte wie in Logo eine spitze Nase und konnte sich nur in Richtung dieser fortbewegen. Außerdem hatte er in der Mitte ein Loch, in dem eine Kreide steckte. Beim Laufen 654 Unterrichtseinheiten zu informatischen Grundkonzepten hinterließ er dadurch eine Spur. Gemeinsam erarbeitete die Klasse die f ¨ur das Quadrat notwendigen Befehle. Jeder wurde einzeln notiert und der Holzigel entsprechend gedreht oder bewegt. Somit wurde der sp ¨atere Ablauf am Computer schrittweise simuliert. Anschließend pr ¨asentierte die Forscherin noch die M ¨oglichkeit der Eingabe ganzer Befehlsfolgen, bevor die Sch ¨ulerinnen und Sch ¨uler ihre Arbeit am Rechner begannen. Die Mitarbeit in dieser ersten Unterrichtseinheit war sehr gut. In einer Art Wettkampf versuchten die Sch ¨ulerinnen und Sch ¨uler hoch motiviert den k ¨urzesten Weg durch die Stadt zu ﬁnden. Auch die gemeinsame Erarbeitung des Quadrats erfolgte unter Beteiligung fast aller. Die Umsetzung bereitete keinerlei Probleme, so dass alle Sch ¨uler Erfolgserlebnisse hatten. Einige experimentierten selbstst ¨andig mit sehr großen Zahlen. Iteration Die sehr m ¨uhsame Eingabe der jeweils acht Befehle f ¨ur ein neues Quadrat motivierte eine kompaktere Beschreibung der L ¨osung. Im Unterrichtsgespr ¨ach fand die Klasse heraus, welche Teile der L ¨osung iteriert werden mussten und wie oft dies zu geschehen hatte. Eine Umsetzung in Logo erfolgte mit dem WIEDERHOLE -Befehl. Auf einem Hausaufgabenblatt vertieften die Sch ¨ulerinnen und Sch ¨uler diesen Abstraktionsprozess von der schrittweisen Konstruktion einer Figur zur abstrakteren Formulierung ihrer Eigenschaften mit Hilfe von Iterationen anhand der ebenen Figur des Rechtecks. Sie mussten zun ¨achst ein Rechteck mit Geodreieck und Bleistift zeichnen, die Eigenschaften der Figur schriftlich formulieren, dann die notwendigen Igel-Befehle notieren und schließlich die kompakte Darstellung mit dem WIEDERHOLE -Befehl entwickeln. Durch die Anordnung der Linien (vgl. Abbildung 4.2), auf denen die einzelnen Befehle der L ¨osung eingetragen werden mussten, wurde der Abstraktionsschritt von der sequentiellen zur iterativen Repr ¨asentation unterst ¨utzt. Aus dieser Darstellung konnten die Anzahl der Wiederholungen und der wiederkehrende Teil sehr leicht abgelesen werden.   _______________ _______________ _______________ ___ ____________  _______________ _______________ _______________ ___ ____________    wiederhole     [        ]       wie oft?              was?   vorwärts 40  vorwärts 40 vorwärts 100 vorwärts 100 rechts  90  rechts  90 rechts  90 rechts  90  Abbildung 4.2: Abstraktion des Befehls Rechteck Die Umsetzung in die formale Beschreibungsform der Programmiersprache Logo wurde durch die Beschriftung der Platzhalter des WIEDERHOLE -Befehls erleichtert. 664.1 Fachunterricht WIEDERHOLE 2 [ VORW ¨ARTS 40 RECHTS 90 VORW ¨ARTS 100 RECHTS 90 ] Trotz der Besprechung der Hausaufgabe und der Implementierung des Rechtecks in Logo im Unterricht war die Ergebnissicherung in Form der Rechtecke auf den Arbeitsbl ¨attern nur in 18 F ¨allen korrekt. Im Unterricht gaben einige Sch ¨ulerpaare weiterhin noch einzelne Befehle in das Logo-System ein und benutzten den WIEDERHOLE -Befehl nicht. F ¨ur sie war der ¨Ubergang von der sequentiellen zur iterativen Darstellung zu schnell. Andere hingegen spielten bereits mit Zahlen und erzeugten interessante Muster am Bildschirm. Eine Gruppe entwarf bereits Drehbilder. Repr ¨asentationsformen T¨one waren im Logo-System zun ¨achst in Form von Zahlen repr ¨asentiert. Tabelle 4.3 zeigt die Zuordnung der Zahlen zu den T ¨onen. Halbtonschritte waren als Einerund Ganztonschritte als Zweierschritte implementiert. Ton Zahl c160 d162 e164 f165 g167 a169 h171 c272 Abbildung 4.3: Repr ¨asentation von T ¨onen als Zahlen Die erste Tonleiter wurde als R ¨atsel eingef ¨uhrt. Aufgabe : Bilde nach folgenden Vorschriften Reihen 1.Die Reihe hat genau 8 Zahlen. 2.Die erste Zahl der Reihe ist die 55. 3.Die letzte Zahl der Reihe ist die 67. 4.Zweimal ist eine Zahl um 1 gr ¨oßer als ihre Vorg ¨angerzahl. 5.F¨unfmal ist eine Zahl um 2 gr ¨oßer als ihre Vorg ¨angerzahl. Die Beschreibung war bewusst nicht eindeutig gew ¨ahlt. Die Sch ¨ulerinnen und Sch ¨uler bekamen die Aufgabe, drei verschiedene Reihen zu bilden und diese sich mit dem Befehl spiele in der Musik-Mikrowelt anzuh ¨oren. Nach einer Experimentierphase wurden dann zwei Reihen, n ¨amlich die Durund die nat ¨urliche Moll-Tonleiter, ausgezeichnet und ihr Aufbau genau deﬁniert. Zur Vorbereitung des Algorithmusbegriﬀs wurden weitere R¨atsel zu Tonleitern mit eindeutigen Beschreibungen als Zahlenund Buchstabenr ¨atsel bearbeitet. Eine Vertiefung erfolgte durch die Formulierung eigener R ¨atsel. 674 Unterrichtseinheiten zu informatischen Grundkonzepten Schwierigkeiten bereitete die Unterscheidung von Befehlen und Parametern in Logo durch das Vergessen des notwendigen Leerzeichens. Eine Gruppe experimentierte bereits mit dem spiele -Befehl, erzeugte chromatische Tonleitern und setzte den WIEDERHOLE Befehl ein, um Tonleitern mehrfach abzuspielen. Befehle deﬁnieren In Mathematik war mit dem WIEDERHOLE -Befehl eine verk ¨urzte Notation f ¨ur Quadrate und Rechtecke eingef ¨uhrt worden. Durch die Deﬁnition eigener Befehle als Spracherweiterung lernten die Sch ¨ulerinnen und Sch ¨uler als weitere Abstraktionsstufe den Prozedurbegriﬀ kennen. Mit den neuen Befehlen Quadrat und Rechteck zeichnete der Igel die ebenen Figuren, ohne dass Aussagen ¨uber deren Deﬁnition gemacht werden mussten. Ein in der Frontalphase eingesetztes Arbeitsblatt zur Erkl ¨arung der Funktionsweise des Logo-Editors erwies sich als sehr hilfreich. Alle Kinder der Klasse konnten ohne gr ¨oßere Schwierigkeiten eigene Befehle erstellen. Fehlende Intelligenz in Computerprogrammen In der ersten Unterrichtseinheit in Englisch wurde den Sch ¨ulerinnen und Sch ¨ulern ein sehr einfaches Vokabellernprogramm zur Verf ¨ugung gestellt, mit dem sie ihre ersten englischen Vokabeln trainieren konnten. Abbildung 4.4: Benutzeroberﬂ ¨ache des englischen Vokabeltrainers Intern waren die Vokabeln als deutsch-englische Paare gespeichert. Genau die exakte Paarkombination wurde mit dem Programm ¨uberpr ¨uft. Dies f ¨uhrte zum Beispiel in der ersten Zeile in Abbildung 4.4 dazu, dass das Programm die eigentlich richtige ¨Ubersetzung”Good morning“ von”Guten Morgen.“ ablehnte, da der abschließende Punkt fehlte. Die Kinder verloren also schon zu Beginn des Unterrichtsversuchs die Illusion, dass Computersysteme in der Lage sind, sich intelligent zu verhalten oder Handlungen von Menschen einsch ¨atzen zu k ¨onnen. Ihr ¨Arger ¨uber die eigentlich richtigen Antworten und das Herausﬁnden der Fehlerquelle erzeugten die notwendige Aufmerksamkeit. Befehle mit Parametern In einer weiteren Unterrichtseinheit wurde die Flexibilit ¨at des Quadrat -Befehls erh ¨oht (vgl. Kapitel 3.1.2). Der Befehl aus einer vorherigen Stunde wurde an der Tafel notiert 684.1 Fachunterricht und dann schrittweise f ¨ur Quadrate unterschiedlicher Gr ¨oßen durch Ausstreichen und Ersetzen der Seitenl ¨ange verbessert. PR Quadrat     WIEDERHOLE 4  [ VORWÄRTS 40  RECHTS 90 ]  ENDE 60 80  Abbildung 4.5: Befehl mit Parameter Die Sch ¨ulerinnen und Sch ¨uler erkannten, welcher Teil der Befehlsdeﬁnition ﬂexibel gestaltet werden musste. Dieser wurde durch einen Platzhalter in Form eines Dreiecks ersetzt. PR Quadrat WIEDERHOLE 4 [ VORW ¨ARTS/triangle RECHTS 90 ] ENDE Da auf der Tastatur kein Dreiecksymbol zu ﬁnden war, sahen die Kinder leicht ein, dass sie statt des Dreiecks besser einen Namen wie L¨ange verwendeten. Der f ¨uhrende Doppelpunkt wurde mit der Unterscheidung von Namen und Platzhaltern motiviert. Entsprechend des Aufrufmusters Quadrat 40 wurde schließlich noch der Platzhalter direkt hinter den Befehlsnamen geschrieben. PR Quadrat :L¨ ange WIEDERHOLE 4 [ VORW ¨ARTS :L¨ ange RECHTS 90 ] ENDE Dieser noch abstraktere Quadrat -Befehl zum Zeichnen eines Quadrats beliebiger Gr ¨oße wurde zur Erstellung der beiden Quadratﬁguren in Abbildung 4.6 verwendet. In einer sehr guten L ¨osung wurde die linke Figur in einem eigenen Befehl gekapselt und zur Erzeugung der rechten Figur verwendet. Wie in der Auswertung in Kapitel 6.4.1 dargestellt wird, gelang dies jedoch nicht sehr vielen Sch ¨ulerinnen und Sch ¨ulern. Funktionen deﬁnieren W¨ahrend des Unterrichtsversuchs wurde zur Generierung von W ¨ortern und S ¨atzen h ¨auﬁg die Funktion ZELeingesetzt. ¨Ahnlich wie beim Drehen eines Gl ¨ucksrads gibt sie zuf ¨allig ein Element aus einer Liste zur ¨uck. In Abbildung 4.7 ist ein Gl ¨ucksrad zur Auswahl eines Wochentags dargestellt, das in Logo als Funktion Wochentag folgendermaßen implementiert werden kann: PR Wochentag RG ZEL [Montag Dienstag Mittwoch Donnerstag Freitag Samstag Sonntag] ENDE 694 Unterrichtseinheiten zu informatischen Grundkonzepten Abbildung 4.6: Quadratﬁguren Das Gl ¨ucksrad bzw. die Funktion gibt den Wochentag zur ¨uck, der sich auf der Scheibe unten am Trichter beﬁndet bzw. von der Funktion ZELausgew ¨ahlt wird. Montag  Dienstag Mittwoch  Donnerstag  Freitag  Samstag Sonntag  Abbildung 4.7: Metapher Gl¨ucksrad Im Fach Deutsch wurde das Konzept der Funktionen am Beispiel von Zeitangaben wie Donnerstagabend oder Dienstagmorgen eingef ¨uhrt. Diese wurden aus einem zuf ¨allig ausgew¨ahlten Wochentag und einer Tageszeit zusammengesetzt. WORT Wochentag Tageszeit Eine Vertiefung erfolgte anhand von abgeleiteten Substantiven. drucke WORT Wortstamm Endung Letztere Anweisung erzeugte am Bildschirm abgeleitete Substantive wie Schicksal oder Reichtum , aber auch”Gesundkeit“ oder”Schicktum“. Den Kindern verdeutlichte dies Beispiel, dass die Angabe der syntaktischen Regel”ein abgeleitetes Substantiv setzt sich aus einem Wortstamm und einer Endung zusammen“ nicht ausreichend ist, sondern auch 704.1 Fachunterricht semantische Vorschriften beachtet werden m ¨ussen. Zur Vertiefung in einem anderen Kontext wurden in Englisch die Dialoge •What’s your name? My name is . . .. •How old are you, . . .? I’m . . .years old. •Where are you from, . . .? I’m from . . .. verschiedener Sch ¨ulerpaare digital aufgezeichnet. In der zur Verf ¨ugung gestellten DialogMikrowelt (vgl. Abbildung 4.8) mussten diese erst in Funktionen eingebaut werden, bevor sie¨uber die Schaltﬂ ¨achen abgespielt werden konnten. Abbildung 4.8: Benutzeroberﬂ ¨ache f ¨ur englische Kurzdialoge Die Funktion agef¨ur den zweiten Dialog musste zum Beispiel den Namen der AudioDatei des Dialogs zur ¨uckgeben. PR age RG ZEL [ age_Ingrid age_Hans age_Dieter age_Natalie ] ENDE Sehr motivierend waren f ¨ur die Sch ¨ulerinnen und Sch ¨uler sowohl die Aufnahme der Dialoge als auch die Verwendung des Programms, da ein eigenes Produkt entstand und die Dialoge der anderen angeh ¨ort werden konnten. Schwierigkeiten bei der Arbeit im Editor gab es nicht. Auch die Funktionen konnten nach einer Einf ¨uhrung im Klassenzimmer von fast allen Sch ¨ulerpaaren selbstst ¨andig erstellt werden. UML-Klassendiagramme Zum Abschluss der Unterrichtseinheit ebene Figuren in Mathematik wurden noch einmal die verschiedenen Eigenschaften der Vierecke, Quadrate, Rechtecke, Parallelogramme und Rauten wiederholt, gemeinsame Eigenschaften herausgearbeitet und die Beziehungen zwischen den Figuren verdeutlicht. Zusammenfassend wurde dies in dem UMLKlassendiagramm in Abbildung 4.9 dargestellt. Schon die Anzahl der Eigenschaften zeigte, dass die Spezialisierung der Figuren in entgegengesetzter Richtung zu den Pfeilspitzen zunahm. Die Sch ¨ulerinnen und Sch ¨uler mussten selbst gleiche Eigenschaften in den Klassen farblich markieren und Beziehungen wie 714 Unterrichtseinheiten zu informatischen Grundkonzepten Viereck  1.  hat 4 Seiten  Parallelogramm  1.  hat 4 Seiten  2.  gegenüberliegende Seiten  sind parallel zueinander  3. gegenüberliegende Seiten  sind gleich lang  Raute  1.  hat 4 Seiten  2.  gegenüberliegende Seiten  sind parallel zueinander  3. gegenüberliegende Seiten  sind gleich lang  5. alle Seiten sind gleich lang Rechteck  1.  hat 4 Seiten  2.  gegenüberliegende Seiten  sind parallel zueinander  3. gegenüberliegende Seiten  sind gleich lang  4. benachbarte Seiten stehen  senkrecht aufeinander  Quadrat  1.  hat 4 Seiten  2.  gegenüberliegende Seiten  sind parallel zueinander  3. gegenüberliegende Seiten  sind gleich lang  4. benachbarte Seiten stehen  senkrecht aufeinander  5. alle Seiten sind gleich lang  Abbildung 4.9: UML-Klassendiagramm – Ebene Figuren ”ein Rechteck ist auch ein Parallelogramm“ oder”ein Rechteck ist auch ein Viereck“ beschreiben. Die kompakte Darstellung bot einen sehr guten ¨Uberblick ¨uber die Zusammenh ¨ange. Modularisierung Um die auditive Wahrnehmung der Sch ¨ulerinnen und Sch ¨uler zu f ¨ordern, wurden im Musikunterricht mit Logo Melodien abgespielt. Die Lieder Pfeifer Tim undBunt sind schon die W ¨alder lagen in vier bzw. sechs Module zerlegt vor, die mit den Befehlen pt1,. . .,pt4und bs1,. . .,bs6angeh ¨ort werden konnten. Die meisten Melodiefragmente unterschieden sich im Rhythmus und der Tonbewegung deutlich. Den Charakter der Melodiebewegungen beschrieben die Kinder auf einem Arbeitsblatt. Anschließend komponierten sie aus den Musikmodulen eigene Melodien. Wie im Prozess der Modularisierung wurden die Kompositionen aus den Teill ¨osungen zusammengesetzt. Aufgrund der sehr einfach zu bedienenden Melodie-Mikrowelt und der kompakt formulierten Arbeitsauftr ¨age arbeiteten die Sch ¨ulerinnen und Sch ¨uler in dieser Unterrichtseinheit sehr selbstst ¨andig. 724.1 Fachunterricht Funktionsgeﬂecht Die Konstruktion von Funktionsgeﬂechten bereitete den Sch ¨ulerinnen und Sch ¨ulern h¨auﬁg große Schwierigkeiten, da sie nicht selbst in die Kommunikation involviert waren, sondern die Funktionen miteinander kommunizierten. In der Unterrichtseinheit zu den englischen”Is“-Fragen wurde mit einem Arbeitsblatt gearbeitet, das die Sch ¨ulerinnen und Sch ¨uler mit Hilfe vieler detaillierter Fragen in folgenden vier Schritten an die Formulierung von Funktionsgeﬂechten heranf ¨uhrte: 1.Konkrete Auspr ¨agung eines Aussagesatzes •This is Jenny 2.Aussages ¨atze mit Abstraktion der Namen •This is Jenny •This is Ben •This is Trundle 3.Fragen mit Abstraktion der Namen •IsJenny a girl? •IsBen a girl? •IsTrundle a girl? 4.Fragen mit Abstraktion der Namen und der Eigenschaften •IsJenny ateacher ? •IsBen eleven ? •IsTrundle a girl ? Auf den ersten beiden Stufen wurde der Datenﬂuss zwischen den Funktionen durch folgende zusammengesetzte Maschine beschrieben: drucke sentence  sentence  drucke This is Jenny  sentence  drucke This is name  sentence  drucke a Is name  girl?  sentence  drucke Is name  ?characteristic  Abbildung 4.10: Zusammengesetzte Maschinen – Aussages ¨atze Angeleitet durch das Arbeitsblatt wurden aus diesen die Funktion name und die Funktionsgeﬂechte DRUCKE ( SENTENCE "This "is "Jenny ) und DRUCKE ( SENTENCE "This "is name ) 734 Unterrichtseinheiten zu informatischen Grundkonzepten abgeleitet. Von Stufe zwei nach drei gab es keinerlei konzeptionelle Ver ¨anderungen. Aus diesem Grund mussten das Funktionsgeﬂecht in Logo und die Komposition der Maschinen f ¨ur die S ¨atze der Stufe drei ohne Hilfestellung entwickelt werden. drucke sentence  sentence  drucke This is Jenny  sentence  drucke This is name  sentence  drucke a Is name  girl?  sentence  drucke Is name  ?characteristic  Abbildung 4.11: Zusammengesetzte Maschinen – Abstraktion der Namen in Fragen Einige der von Logo automatisch generierten S ¨atze und Fragen wurden immer wieder auf das Arbeitsblatt eingetragen und dort beantwortet. Im letzten Schritt erfolgte eine Abstraktion der Namen und Eigenschaften. Zun ¨achst notierten die Sch ¨ulerinnen und Sch¨uler die Eigenschaften auf Englisch, erstellten dann eine Funktion characteristic und testeten schließlich das Logo-Funktionsgeﬂecht. drucke sentence  sentence  drucke This is Jenny  sentence  drucke This is name  sentence  drucke a Is name  girl?  sentence  drucke Is name  ?characteristic  Abbildung 4.12: Zusammengesetzte Maschinen – Abstraktion der Namen und Eigenschaften in Fragen In allen Schritten erarbeiteten die Kinder die Syntax der S ¨atze und Fragen sowohl als Funktionsgeﬂecht als auch als zusammengesetzte Maschine. Die Unterrichtseinheit umfasste insgesamt f ¨unf Arbeitsbl ¨atter, mit denen sich die Sch ¨ulerinnen und Sch ¨uler selbstst ¨andig besch ¨aftigten. Einige Kinder waren allerdings nicht bereit, die Aufgabenstellungen schrittweise zu lesen und zu bearbeiten. Sie riefen h ¨auﬁg die Forscherin und ließen sich die Aufgaben erkl ¨aren. R ¨uckblickend w ¨are es besser gewesen, f¨ur die verschiedenen Schritte eigene Arbeitsbl ¨atter zu erstellen und sie einzeln auszugeben. Der Umfang der Materialien w ¨urde dann nicht schon im Vorfeld der Bearbeitung zu einer negativen Arbeitshaltung f ¨uhren. Algorithmus Bei der Umwandlung von r ¨omischen Zahlen ins Zehnersystem mussten die Sch ¨ulerinnen und Sch ¨uler einen Algorithmus in schriftlicher Form und als Programmablaufplan lesen 744.1 Fachunterricht und maschinell abarbeiten. Als Einf ¨uhrung wurden zun ¨achst die r ¨omischen Zahlzeichen M, D, C, L, X, V und I vorgestellt und einige Zahlen aus dem Zehnersystem in das r¨omische System umgewandelt. Sie waren so gew ¨ahlt, dass die Zahlzeichen absteigend waren und somit dekodiert als Summand notiert werden konnten. LXVI 50 + 10 + 5 + 1 = 66 Anschließend wurde die Umwandlung exakt beschrieben. Regel : Stehen die Zahlen in absteigender Gr ¨oße von links nach rechts, so werden ihre Werte addiert. Ausnahme : Stehen die Zeichen I, X oder C vor einem Zeichen mit h ¨oherem Wert, so wird ihr Wert nicht addiert, sondern subtrahiert. Anhand von zwei Beispielen wurden die Regel und Ausnahme veranschaulicht und dann allein von den Sch ¨ulerinnen und Sch ¨ulern ge ¨ubt. Einige Schwierigkeiten traten auf, da die Abfolge der Anwendung der Regel und Ausnahme nicht vorgegeben war. Dies motivierte jedoch die Beschreibung des folgenden Algorithmus: 1.Hat die r ¨omische Zahl nur 1 Zahlzeichen? a)Falls deine Antwort jaist, so schreibe den Wert des letzten r ¨omischen Zahlzeichens ganz links als Addition in deine Rechnung und f¨uhre die Berechnung durch. Dadurch erh ¨altst du das Ergebnis. b)Falls deine Antwort nein ist, arbeite bei 2. weiter. 2.Schaue dir in der r ¨omischen Zahl das Zahlzeichen ganz links an. Ist es kleiner als das Zahlzeichen direkt rechts daneben? a)Falls deine Antwort jaist, so schreibe den Wert des r ¨omischen Zahlzeichens ganz rechts als Subtraktion in deine Rechnung. b)Falls deine Antwort nein ist, so schreibe den Wert des r ¨omischen Zahlzeichens ganz links als Addition in deine Rechnung. 3.Streiche das erste Zahlzeichen aus der r ¨omischen Zahl und fange wieder bei 1. an. L¨angere Texte wurden h ¨auﬁg nicht oder nicht genau genug gelesen. Deshalb wurde der Algorithmus zus ¨atzlich als Programmablaufplan (siehe Abbildung 4.13) angeboten. Wie beim Algorithmus in Textform mussten die Sch ¨ulerinnen und Sch ¨uler auch im Programmablaufplan den Pfeilen folgen, bei Ja-Nein-Entscheidungen die entsprechende Alternative w ¨ahlen und Handlungen ausf ¨uhren bis das Ende erreicht wurde. Zur Festigung wandelten sie in einer weiteren ¨Ubungsstunde noch einige vorgegebene und selbst konstruierte r ¨omische Zahlen in das Zehnersystem um. Die Ergebnisse wurden mit der in der Mikrowelt der r ¨omischen Zahlen vorhandenen Funktion imZehnersystem ¨uberpr ¨uft. Zus¨atzlich bekamen sie die Aufgabe, r ¨omische Zahlen zu ﬁnden, die von der Funktion imZehnersystem entweder nicht richtig umgerechnet wurden oder nicht zul ¨assig waren. Im ersten Fall konnten sie keinen Fehler ﬁnden. Allerdings wurden Zahlen wie VIC 754 Unterrichtseinheiten zu informatischen Grundkonzepten Start  Ende Hat die römische Zahl  nur ein Zahlzeichen?  Ist der Wert des  Zahlzeichens ganz links  kleiner als das direkt  rechts daneben liegende  Zahlzeichen? Schreibe den Wert des  Zahlzeichens in deine  Rechnung ganz links als  Addition.  Rechne das Ergebnis aus.  Schreibe den Wert des  Zahlzeichens in deine  Rechnung ganz rechts  als Subtraktion. Schreibe den Wert des  Zahlzeichens in deine  Rechnung ganz links  als Addition.  Streiche das Zahlzeichen  ganz links aus der  römischen Zahl. Ja  Ja Nein  Nein  Abbildung 4.13: Programmablaufplan – Umwandlung r ¨omischer Zahlen in 104 oder XXXXXXX in 70 konvertiert, obwohl es sich um keine korrekt gebildeten r¨omischen Zahlen handelte. Wie schon bei der Verwendung des englischen Vokabeltrainers sollte auch hier eine Sensibilisierung f ¨ur die Schw ¨achen von Computerprogrammen geweckt werden. Die Unterrichtseinheit war sehr erfolgreich, da sowohl mit Hilfe der textuellen Beschreibung des Algorithmus als auch mit dem Programmablaufplan viele Sch ¨ulerinnen und Sch¨uler die Aufgaben l ¨osen konnten. ¨Aquivalenz von Repr ¨asentationsformen In Musik wurde ein weiteres Mal mit Musikbausteinen gearbeitet. Ausgew ¨ahlt wurde die Melodie Ein Vogelf ¨anger des Papageno aus der Oper Die Zauberﬂ ¨otevon Wolfgang Amadeus Mozart, da die Kinder die Oper in einer konzertanten Auﬀ ¨uhrung besuch764.1 Fachunterricht ten. Der Melodieverlauf einzelner Teile musste sowohl textuell als auch mit Hilfe einer Tonh ¨ohenlinie beschrieben werden. Dies bereitete die Sch ¨ulerinnen und Sch ¨uler auf die Darstellung der Noten im F ¨unﬂiniensystem vor. In Abbildung 4.14 sind zwei der vier Musikbausteine dargestellt. Sie unterscheiden sich sowohl in der L ¨ange als auch im Melodieverlauf. Abbildung 4.14: Melodieverlauf im F ¨unﬂiniensystem Eine weitere Repr ¨asentationsform waren Balkendiagramme. Die Tonh ¨ohe wurde in der H¨ohe und die Tonl ¨ange in der Breite der Balken kodiert. Die Musikmodule lagen also in eigenen textuellen Beschreibungen mit Angabe der Melodien in Form graﬁscher Linienverl ¨aufe, in Form von Audiodaten, im F ¨unﬂiniensystem und als Balkendiagramme vor. Die Melodiebausteine in den verschiedenen Repr ¨asentationsformen mussten einander zugeordnet werden. Eine Vertiefung erfolgte an drei weiteren Modulen aus dem Vogelf ¨anger . Abbildung 4.15: Melodieverlauf als Balkendiagramm F¨ur die meisten Kinder stellte die Aufgabe eine motivierende Herausforderung dar. Konzentriert setzten sie ihren H ¨oreindruck mit der Notation in Beziehung und erkannten die Unterschiede in den Melodieverl ¨aufen. Abstraktion Zu den Inhalten der Unterrichtseinheit”Is“-Fragen in Englisch wurde ein Test geschrieben. Maschinen mussten in Befehle oder Funktionen aufgeteilt, Funktionen in Logo for774 Unterrichtseinheiten zu informatischen Grundkonzepten muliert, zusammengesetzte Maschinen in Logo-Funktionsgeﬂechte ¨ubersetzt und englische S ¨atze, die eine zusammengesetzte Maschine erzeugte, aufgeschrieben werden. In der letzten Aufgabe wurden aufgrund der Analyse der Fragen Is the desk green ? Is the chair red ? Is the pencil blue ? Is the school bag yellow ? die beiden Module object undcolour identiﬁziert und als Funktionen implementiert. Die zusammengesetzte Maschine sentence  drucke Is object  ?colour  the  Abbildung 4.16: Zusammengesetzte Maschinen – Englische”Is“-Fragen implementiert als Funktionsgeﬂecht in Logo drucke ( SENTENCE "Is "the object colour "? ) erzeugte dann die Fragen. Bei der Besprechung des Tests wurden parallel zu den zusammengesetzten Maschinen zum ersten Mal Syntaxdiagramme zur Veranschaulichung der Satzstrukturen entwickelt. Die Testergebnisse waren sehr schlecht. Nicht alle Sch ¨ulerinnen und Sch ¨uler konnten die Abstraktion erkennen und diese dann auch formal mit zusammengesetzten Maschinen oder Logo-Funktionen beschreiben. M ¨oglicherweise scheiterten einige schon daran, dass sie f¨ur die englischen W ¨orter desk,chair ,pencil undschool bag keinen Oberbegriﬀ auf Englisch kannten. Bei einer Wiederholung m ¨usste auf jeden Fall sicher gestellt werden, dass alle Kinder das zur L ¨osung der Aufgabe notwendige Vokabular kennen. Programmablaufpl ¨ane erstellen Die Bildung des Komparativs eignete sich f ¨ur die Konstruktion von Programmablaufpl¨anen, da schrittweise die verschiedenen Ausnahmen in das Schaubild aufgenommen werden konnten. Zun ¨achst wurden die Steigerungsformen der Adjektive hell,d¨urr,stark , gut,reich,leise,ﬂeißig undsch¨ongebildet. Diese waren als Positiv, Komparativ oder Superlativ vorgegeben, so dass jeweils die fehlenden Formen gefunden werden mussten. F¨ur die regelm ¨aßigen Adjektive formulierten die Sch ¨ulerinnen und Sch ¨uler selbstst ¨andig die Bildungsregel und die Logo-Funktion Komparativ . 784.1 Fachunterricht PR Komparativ :Positiv RG WORT :Positiv "er ENDE Nach der Hinzunahme des Adjektivs leise wurde der folgende Programmablaufplan erstellt Ist der letzte  Buchstabe vom  Positiv ein „e“?  Hänge an den Positiv  ein „r“ an und gib das  Wort zurück. Hänge an den Positiv  ein „er“ an und gib das  Wort zurück. Start  Ende  Abbildung 4.17: Programmablaufplan – Bildung des Komparativs und die Funktion Komparativ um die Zeile WENN GLEICH? LETZTER :Positiv "e [ RG WORT :Positiv "r ] erweitert. F ¨ur die Hinzunahme der Adjektive stark undgutwurden die Bestandteile des Programmablaufplans auf einem Extrablatt vorgegeben. Diese mussten ausgeschnitten, in die richtige Reihenfolge gebracht und aufgeklebt werden. Gemeinsam wurden die Erweiterungen in die Funktion Komparativ eingebaut und die Zusammenh ¨ange zwischen den Ja-Nein-Entscheidungen und Handlungen der Programmablaufpl ¨ane und dem WENNBefehl mit seinen beiden Parametern Vergleich und Handlung wiederholt. Das Verst ¨andnis des WENN-Befehls in Logo konnte im Laufe der Unterrichtseinheit verbessert werden. Im Computerraum hatten allerdings diejenigen Sch ¨ulerinnen und Sch ¨uler, die die gemeinsam erarbeiteten L ¨osungen nicht korrekt von der Tafel abgeschrieben hatten, Schwierigkeiten, die syntaktisch komplexe Struktur des WENN-Befehls in Logo umzusetzen. Automatisierung In der Methodik-Woche Anfang Dezember war der Unterricht in den einzelnen F ¨achern aufgehoben. Da in dieser Zeit immer nur eine H ¨alfte der Klasse im Computerraum war, 794 Unterrichtseinheiten zu informatischen Grundkonzepten konnte jedes Kind alleine an einem Rechner arbeiten. Zun ¨achst hatten die Kinder die Aufgabe, mit Hilfe der Automatisierung Fadenbilder zu erstellen. In der FadenbilderMikrowelt standen zwei Igel zur Verf ¨ugung, die sich gegenseitig ein Fadenkn ¨auel zuwarfen und dadurch Linien auf dem Bildschirm hinterließen. Nur einer der beiden Igel war jeweils aktiv, hielt das Fadenkn ¨auel in der Hand und konnte mit den Standardbefehlen VORW ¨ARTS,RECHTS etc. bewegt werden. Mit den Befehlen erster Igel und zweiter Igel wurde ein Igel aktiv gesetzt. Zum Werfen des Fadens gab es die beiden Befehle Faden zumersten und Faden zumzweiten . Falls der entsprechende Igel nicht aktiv war, wurde eine Fehlermeldung ausgegeben. Bewusst wurde nicht nur ein Befehl Faden werfen implementiert, der automatisch immer den Faden von dem gerade aktiven Igel warf. Dadurch wurden die Sch ¨ulerinnen und Sch ¨uler wie in der Objektorientierung gezwungen, explizit Objekte auszuw ¨ahlen. Abbildung 4.18: Fadenbilder In der Arbeit der Sch ¨ulerin links in Abbildung 4.18 ist zu sehen, dass der linke Igel beim Zeichnen der Figur, die das Kind Rohr nannte, auf einem Kreis gelaufen war und seinen Weg mehrmals unterbrochen hatte, um dem rechten Igel einen Faden zuzuwerfen. Ein Rohr wurde somit automatisch durch die Befehlsfolge WIEDERHOLE 40 [ VORW ¨ARTS 33 RECHTS 53 Faden_zum_zweiten ] erzeugt. Im Bild rechts ließ ein Sch ¨uler den Igel ein Zw ¨olfeck ablaufen, an jedem Eckpunkt dem anderen Igel einen Faden zuwerfen und jede zweite Fl ¨ache schwarz einf ¨arben. Auch ein Teil dieses Bildes wurde algorithmisch beschrieben. Zur Gestaltung von Weihnachtskarten stellte die Weihnachtskarten-Mikrowelt einige Figuren in Form der Befehle Quadrat ,Rechteck ,Dreieck ,Kreis undKerze zur Verf ¨ugung. 804.1 Fachunterricht Der Befehl Igeltext gab an der Position des Igels einen Text auf dem Bildschirm aus. Mit diesen sehr einfachen Mitteln der Weihnachtskarten-Mikrowelt wurden verschiedene Kompositionen entworfen (vgl. Abbildung 4.19). Abbildung 4.19: Weihnachtskarte Sowohl bei den Fadenbildern als auch bei den Weihnachtskarten waren die Sch ¨ulerinnen und Sch ¨uler motiviert und sehr produktiv. Es entstanden ganz unterschiedliche und teilweise sehr kreative Ergebnisse. Nicht alle automatisierten die Erstellung ihrer Bilder. Der kognitive Mehraufwand rechtfertigte f ¨ur diese Kinder nicht die Zeitersparnis. Fehleranf ¨alligkeit von Computersystemen Am Beispiel der W ¨ahrungsumrechnung stellte sich f ¨ur die Sch ¨ulerinnen und Sch ¨uler sehr anschaulich dar, dass auch Ergebnisse, die der Computer berechnet, ¨uberpr ¨uft werden m¨ussen. Zun ¨achst waren die Preise eines Skipasses, einer Bratwurst, einer Cola und einer Rakete f ¨ur ein Silvesterfeuerwerk in Schweizer Franken vorgegeben. Ohne Angabe eines Wechselkurses sollten die Preise in Euro gesch ¨atzt werden. Dabei mussten die Verh¨altnisse der Preise in Schweizer Franken und Euro in Beziehung gesetzt werden. Dies gelang nur einem Sch ¨uler. Die Berechnung der exakten Preise wurde gemeinsam mit Hilfe des Zweisatzes entwickelt. Anhand des Szenarios, dass ein Mitarbeiter einer Bank beim R ¨ucktausch von 360 Schweizer Franken in Euro statt Schweizer Franken amerikanische Dollar in den Computer eingegeben hat, musste ausgerechnet werden, ob die Bank mit dem Gesch ¨aft einen Gewinn 814 Unterrichtseinheiten zu informatischen Grundkonzepten oder Verlust machte. 360 SF sind ... Euro 360 USD sind ... Euro Der Umrechnungskurs der amerikanischen Dollar war mit 60 zu 47 angegeben. Anhand der Aufgabe wurde im Klassenverband analysiert, welche Funktionalit ¨at ein Computerprogramm zur Umrechnung von W ¨ahrungen besitzen muss, an welchen Stellen der Umrechnung Fehler auftreten k ¨onnen und von wem die Fehler verursacht werden. Sehr konzentriert und motiviert rechneten die Sch ¨ulerinnen und Sch ¨uler die W ¨ahrungen um. Der Kontext vermittelte ihnen das Gef ¨uhl, ein R ¨atsel l ¨osen zu d ¨urfen. Die Kreativit¨at bei der Reﬂexion m ¨oglicher Fehlerquellen war sehr unterschiedlich. Syntaxdiagramme Im Themenkomplex Satzlehre in Deutsch wurden zahlreiche Satzbaupl ¨ane mit Hilfe von Syntaxdiagrammen formal beschrieben. Dabei konnten die Permutationsm ¨oglichkeiten der einzelnen Satzglieder in der deutschen Sprache im Gegensatz zum Englischen sehr anschaulich dargestellt werden. Subjekt Prädikat Dativ Akkusativ . Subjekt Prädikat Dativ Akkusativ . Subjekt Prädikat Dativ Akkusativ . Subjekt Prädikat Dativ Akkusativ . subject ing-Form object .is  Abbildung 4.20: Stellung der Satzglieder in deutschen S ¨atzen Aus den Syntaxdiagrammen leiteten die Sch ¨ulerinnen und Sch ¨uler dann sehr leicht LogoFunktionsgeﬂechte ab. Im Beispiel in Abbildung 4.21 Subjekt Prädikat Dativ Akkusativ . Subjekt Prädikat Dativ Akkusativ . Subjekt Prädikat Dativ Akkusativ . Subjekt Prädikat Dativ Akkusativ . subject ing-Form object .is  Abbildung 4.21: Syntaxdiagramm – Aussages ¨atze mit Dativund Akkusativobjekten wurden die Rechtecke als Funktionen implementiert und das Gesamtdiagramm mit der Funktion SATZ drucke ( SATZ Subjekt Pr¨ adikat Dativ Akkusativ ". ) zusammengesetzt. Nat ¨urlich entstanden auch semantisch falsche S ¨atze, so dass ¨uber die Bedeutung von Sprache diskutiert wurde. 824.1 Fachunterricht Einige Sch ¨ulerinnen und Sch ¨uler konnten die Satzglieder zwar farbig richtig unterstreichen, eine Abstraktion in Form eines Syntaxdiagramms gelang ihnen jedoch nicht. Problematisch war im R ¨uckblick, dass die Beispiels ¨atze und die zu zeichnenden Syntaxdiagramme auf verschiedenen Seiten des Arbeitsblatts abgebildet waren. Automatisierte Tests Bis zu diesem Zeitpunkt hatten die Sch ¨ulerinnen und Sch ¨uler verschiedene Programme entworfen, mit denen einzelne Zufallss ¨atze oder auch Zufallsw ¨orter wie die abgeleiteten Substantive oder der Komparativ generiert wurden. Auch f ¨ur unbestimmte Artikel englischer Substantive formulierten die Kinder Regeln, zeichneten Programmablaufpl ¨ane und programmierten Logo-Funktionsgeﬂechte. Die erste Version der Funktion indefinite article , die den Artikel eines Substantivs zur ¨uckgab, wurde mit einigen Substantiven getestet. drucke indefinite_article "answer drucke indefinite_article "question drucke indefinite_article [exercise book] Die Funktion wurde dahingehend erweitert, dass zusammen mit dem unbestimmten Artikel auch das Substantiv zur ¨uckgegeben wurde. Dies hatte zur Folge, dass alle Testf ¨alle noch einmal ausprobiert werden mussten. Um Zeit zu sparen und systematischer vorzugehen, erstellten die Sch ¨ulerinnen und Sch ¨uler eine Funktion Substantiv , die die zu testenden Substantive enthielt und zuf ¨allig eines zur ¨uckgab. Mit dieser und dem WIEDERHOLE -Befehl konnte der Test der Funktion indefinite article automatisiert werden. WIEDERHOLE 15 [ drucke indefinite_article Substantiv neue_Zeile ] Die Anzahl der Wiederholungen war so groß zu w ¨ahlen, dass alle Substantive der Liste mindestens einmal ausgew ¨ahlt wurden. Um besser die ¨Ubersicht zu behalten, wurde nach jeder Ausgabe eines Substantivs eine neue Zeile erzeugt. Das sehr kleinschrittige Vorgehen unterst ¨utzte die Sch ¨ulerinnen und Sch ¨uler bei der Erstellung ihrer Funktionen und den Tests. Trotzdem hatten einige bereits syntaktische Regeln von Logo wie das Schreiben des komplexen WENN-Befehls vergessen, so dass h ¨auﬁg Hilfestellungen gegeben werden mussten. Objekte in unterschiedlichen Repr ¨asentationsformen und ihre Umwandlung Die Sch ¨ulerinnen und Sch ¨uler erarbeiteten sich das F ¨unﬂiniensystem in Musik selbst in einem Test, der bewertet wurde. Die Begriﬀe F¨unﬂiniensystem ,Linie ,Notenschl ¨ussel, Violinschl ¨ussel,Taktstrich undTakt waren in einem Text beschrieben und wurden gemeinsam gelesen. Danach mussten die Kinder f ¨ur jeden Begriﬀ ein Beispiel aufschreiben. In der zweiten Aufgabe ging es um die Unterscheidung von Attributwerten. Es musste die Anzahl der unterschiedlichen Noten, die sich aus den verschiedenen Tonh ¨ohen und 834 Unterrichtseinheiten zu informatischen Grundkonzepten Tonl¨angen ergab, in der Melodie in Abbildung 4.22 bestimmt werden. Abbildung 4.22: Melodie im F ¨unﬂiniensystem Zus¨atzlich zu der bis dahin verwendeten Repr ¨asentation der T ¨one als Zahlen lernten die Sch ¨ulerinnen und Sch ¨uler die Buchstaben-Zahlen-Kombinationen c1,d1etc. und die Positionen der Noten im F ¨unﬂiniensystem kennen. In der dritten Aufgabe wurde eine Funktion Buchstabe ausZahl zur Umwandlung der Zahldarstellung in Notennamen und ein Befehl drucke Note zur Visualisierung eines Notennamens im F ¨unﬂiniensystem zur Verf ¨ugung gestellt. Diese wurden sowohl in Textform als auch mit den in Abbildung 4.23 dargestellten Maschinen pr ¨asentiert. Buchstabe_aus_Zahl 69  Adrucke_Note A Bildschirm  Abbildung 4.23: Maschinen zur Umwandlung von Tonrepr ¨asentationen Die Sch ¨ulerinnen und Sch ¨uler mussten beide verwenden, um die T ¨one der C-Dur-Tonleiter von c1bisc3in einer Tabelle in allen Repr ¨asentationsformen einzutragen. In drei weiteren Aufgaben wurde die Umwandlung zwischen den einzelnen Repr ¨asentationsformen ge¨ubt. Sehr konzentriert arbeiteten die Kinder an den Arbeitsbl ¨attern. Niemand hatte Schwierigkeiten, Logo bzw. die angegebene Funktion und den Befehl als Werkzeug zu benutzen. Die Aufgaben l ¨osten fast alle. Ein Grund daf ¨ur k¨onnte die Bewertung des Tests sein, dessen Ergebnis in die Musiknote einging. Grammatik In Englisch wurden Aussages ¨atze der Form Jenny has got a silly tortoise. The twins have got a great dog. in S¨atze mit dem s-Genitiv Jenny’s tortoise is silly. The twins’ dog is great. umgeformt. Die syntaktische Regel der Grammatik f ¨ur die Aussages ¨atze mit”has got“ war durch folgendes Syntaxdiagramm vorgegeben: 844.1 Fachunterricht subject adjective object has got a . Abbildung 4.24: Syntaxdiagramm – Has-S ¨atze Die einzelnen Bestandteile mussten in den S ¨atzen farbig unterstrichen werden. F ¨ur die S¨atze mit”have got“ zeichneten die Kinder selbst ein Syntaxdiagramm. Außerdem bildeten sie neue has/have-S ¨atze und wandelten diese in Genitiv-S ¨atze um. Zum Abschluss entwarfen sie noch f ¨ur alle Genitiv-S ¨atze ein Syntaxdiagramm. So wurde die Grammatik nicht nur aus Syntaxdiagrammen gelernt, sondern die Sch ¨ulerinnen und Sch ¨uler konstruierten die Grammatik selbstst ¨andig aus den Beispiels ¨atzen durch Abstraktion und formalisierten sie mit Hilfe des informatischen Beschreibungsmittels. Die Sch ¨ulerinnen und Sch ¨uler arbeiteten sehr gut mit. Aus diesem Grund war es erstaunlich, dass, wie in Kapitel 6.4.5 weiter ausgef ¨uhrt wird, die Bearbeitung der Aufgabenbl ¨atter sehr unvollst ¨andig und teilweise trotz Besprechung nicht korrekt war. Erweiterung von Repr ¨asentationsformen bei Einf ¨uhrung neuer Attribute Wurden Melodien mit dem Befehl spiele abgespielt, so mussten die einzelnen T ¨one als Zahlen angegeben werden. Diese wie auch die Notennamen c1,d1etc. kodierten keine Tonl¨angen. Da nur Achtel, Viertel, halbeund ganze Noten stoﬀrelevant waren, wurden zur Erweiterung der Repr ¨asentationsform einfach die Anfangsbuchstaben a,v,hundg vor die Bezeichnungen gestellt. Die ver ¨anderte Datenstruktur erforderte zum Abspielen der T ¨one den neuen Befehl spiele Noten . Das Beispiel spiele_Noten [ vg1 ve1 he1 vf1 vd1 hd1 vc1 vd1 ve1 vf1 vg1 vg1 hg1 ] kodiert die ersten vier Takte der Melodie H¨anschen klein . Die Sch ¨ulerinnen und Sch ¨uler erkannten, dass Prozeduren mit ganz speziellen Repr ¨asentationsformen von Daten arbeiten, die nicht beliebig ausgetauscht werden k ¨onnen. Attribute Wie die T ¨one wurden auch die Potenzen als Klasse mit den Attributen Exponent und Basis eingef ¨uhrt. In einer Menge von Potenzen kennzeichneten die Sch ¨ulerinnen und Sch¨uler die Quadratzahlen, Kubikzahlen und Zehnerpotenzen in unterschiedlichen Farben. Anschließend wurde ihnen eine Logo-Funktion Potenz , mit der beliebige Potenzen berechnet werden konnten, in Maschinendarstellung pr ¨asentiert. Basis Exponent Potenz  Potenz  Abbildung 4.25: Funktion Potenz als Maschine 854 Unterrichtseinheiten zu informatischen Grundkonzepten Aus der Darstellungsform ging nicht hervor, in welcher Reihenfolge die Basis und der Exponent anzugeben waren. Aus diesem Grund wurde die Funktion mit dem Syntaxdiagramm Basis Exponent Potenz  Potenz  Abbildung 4.26: Funktion Potenz als Syntaxdiagramm weiter pr ¨azisiert. Zum ersten Mal wurden Syntaxdiagramme nicht zur Beschreibung von Sprache, sondern von mathematischen Strukturen verwendet. Dies verdeutlichte die Universalit ¨at des Beschreibungsmittels. Im Gegensatz dazu sahen die Sch ¨ulerinnen und Sch¨uler, dass ihre eigenen Funktionen Quadratzahl ,Kubikzahl und Zehnerpotenz wegen der Fixierung eines Attributs auf einen speziellen Wert nur einen Eingabeparameter hatten. Da die Kinder zu diesem Zeitpunkt sowohl Maschinen als auch Syntaxdiagramme als Beschreibungsmittel formaler Strukturen kannten, konnten sie die Funktion Potenz selbstst ¨andig zur ¨Uberpr ¨ufung der berechneten Ergebnisse verwenden. Codierung Das Konzept der Codierung wurde spielerisch am Beispiel der Entschl ¨usselung deutscher W¨orter eingef ¨uhrt. Die entsprechenden Dekodierungsalgorithmen waren als Programmablaufpl ¨ane formuliert, die bereits eine relativ komplexe Struktur besaßen. Durch sehr konzentriertes Abarbeiten des Ablaufs und der Befolgung der Anweisungen konnten die Sch¨ulerinnen und Sch ¨uler die W ¨orter dekodieren. Um das Codierungsprinzip zu erfassen, mussten in einem zweiten Schritt selbst W ¨orter kodiert werden. Dies erforderte, die Programmablaufpl ¨ane gedanklich r ¨uckw ¨arts zu lesen. Dies schaﬀten nur sehr wenige. ¨Aquivalenz formaler Beschreibungsformen Bei der automatischen Generierung englischer S ¨atze in der present progressive -Form standen zusammengesetzte Maschinen, Logo-Funktionsgeﬂechte und Syntaxdiagramme im Vordergrund. Zun ¨achst schrieben die Sch ¨ulerinnen und Sch ¨uler S ¨atze der Form My mother is reading a book. My father is cleaning the dishes. My brother is helping in the kitchen. auf. Daraufhin abstrahierten sie die S ¨atze in Form des Syntaxdiagramms, Subjekt Prädikat Dativ Akkusativ . Subjekt Prädikat Dativ Akkusativ . Subjekt Prädikat Dativ Akkusativ . Subjekt Prädikat Dativ Akkusativ . subject ing-Form object .is  Abbildung 4.27: Syntaxdiagramm – S ¨atze im present progressive 864.1 Fachunterricht der zusammengesetzten Maschine sentence is object ing_form subject .verb  Abbildung 4.28: Zusammengesetzte Maschinen – S ¨atze im present progressive und dem Logo-Funktionsgeﬂecht. ( sentence subject "is ing_form verb object ". ) Mit allen drei Beschreibungsformen konnte die Struktur der englischen S ¨atze im present progressive ¨aquivalent dargestellt werden. Die erste Version der Funktion ingform der Kinder gab f ¨ur regelm ¨aßige Verben die entsprechende ing-Form zur ¨uck. Da die Funktion verb nur die Verben read,clean ,help,draw,listen undwork enthielt, lieferte das LogoFunktionsgeﬂecht korrekte S ¨atze. Nach der Erweiterung der Liste um die Verben write ,make undcome stellte sich beim Testen heraus, dass die ing-Formen der neuen Verben falsch waren. Diese Sonderf ¨alle beschrieben die Sch ¨ulerinnen und Sch ¨uler algorithmisch als Text, integrierten sie in den Programmablaufplan der Gesamtl ¨osung und bauten sie anschließend in die LogoFunktion ingForm ein. Dabei erkannten sie, dass es sich auch bei diesen Beschreibungen um¨aquivalente Repr ¨asentationsformen handelte, die sich f ¨ur verschiedene Problemstellungen unterschiedlich gut eigneten. Im Programmablaufplan konnte die Unterscheidung zwischen dem allgemeinen Fall und Sonderfall sehr deutlich und kompakt dargestellt werden. Hierarchische Darstellung mit Mindmaps Bei der Wiederholung der Potenzen in Mathematik wurden die Inhalte, Fragestellungen und konkreten Aufgaben in der in Abbildung 4.29 dargestellten Mindmap den Sch ¨ulerinnen und Sch ¨ulern pr ¨asentiert. Im Zweig der besonderen Potenzen undAufgabentypen konnten an die Bl ¨atter der Hierarchie Beispiele geschrieben werden. Der geschlossene Ast der Aufgaben enthielt Arbeitsanweisungen zur Darstellung von Dezimalzahlen als Potenzen. Dies Beispiel zeigte den Sch ¨ulerinnen und Sch ¨ulern, wie Lernstoﬀe ¨ubersichtlich strukturiert, wichtige Inhalte hervorgehoben und Aufgabenstellungen selbst entwickelt werden k¨onnen. Mindmaps wurden auch in anderen F ¨achern eingesetzt, so dass verschiedene Einsatzformen deutlich wurden. 874 Unterrichtseinheiten zu informatischen Grundkonzepten Abbildung 4.29: Mindmap zu Potenzen Objekte und Ereignisse an der Programmoberﬂ ¨ache Die Einf ¨uhrung in die Objektorientierung mit der Speziﬁzierung von Objekten und Ereignissen erfolgte bei der Einf ¨uhrung von Imagine Logo. Als Anwendung wurde ein Spiel zum Erlernen der Zehnerpotenzen eingesetzt, das von den Sch ¨ulerinnen und Sch ¨ulern angepasst werden musste (vgl. Abbildung 4.30). Durch Anklicken einer ﬂiegenden Zahl wurde f ¨ur eine vorgegebene Zahl der Exponent der Zehnerpotenz ausgew ¨ahlt. Bei der ersten Demonstration des Programms durch die Forscherin identiﬁzierten die Sch ¨ulerinnen und Sch ¨uler im Klassengespr ¨ach die verschiedenen Objekte. Sie unterschieden die Textfelder, die ﬂiegenden Zahlen und die Schaltﬂ ¨ache. Auf einem Arbeitsblatt trugen sie diese zusammen mit den englischen Bezeichnungen in eine Tabelle ein. In einem zweiten Schritt beschrieben sie die M ¨oglichkeit der Interaktion. Sie hielten die unterschiedlichen Reaktionen des Programms beim Dr ¨ucken der Schaltﬂ ¨ache Neue Aufgabe und dem Anklicken der richtigen und falschen Exponenten schriftlich fest. 884.1 Fachunterricht Abbildung 4.30: Lernspiel Zehnerpotenzen Die Mikrowelt der Zehnerpotenzen, mit der die Sch ¨ulerinnen und Sch ¨uler anschließend eigenst ¨andig arbeiteten, enthielt alle Objekte an der Oberﬂ ¨ache. Zum Erlernen des Unterschieds zwischen den Ereignissen onPush und onClick der Klassen Schaltfl¨ ache und Igel musste die komplette Interaktion selbst programmiert werden. Die Methoden zur¨Anderung des Schaltﬂ ¨achen-Objekts und der Zahlen-Objekte wurden mit der Maus ausgew ¨ahlt. Mit Hilfe der Befehle neue_Zehnerpotenz starte_fliegende_Zahlen und pr¨ ufe_Ergebnis_Zehnerpotenz steuerten die Sch ¨ulerinnen und Sch ¨uler den Spielverlauf in den Ereignissen onPush und onClick . Alle drei Befehle waren bereits in der Mikrowelt enthalten. Hierarchie Die Struktur einer Hierarchie, dargestellt in einem Baum mit Wurzel, mehreren Ebenen und Bl ¨attern, wurde in Deutsch in eine Rechtschreib ¨ubung eingebettet. Die Sch ¨ulerinnen und Sch ¨uler ordneten die Verben und Substantive in die Hierarchie in Abbildung 4.31 ein, erfanden zu den Bildern in Abbildung 4.32 eine Geschichte, in der mindestens zehn der Begriﬀe vorkamen, und schrieben sie auf die drei vorgegebenen Bilderseiten in Imagine Logo. Dabei lernten sie die Attribute Schriftart ,Schriftgr ¨oße,Schriftschnitt und Schriftfarbe der Klasse Text (engl. text box ) kennen und experimentierten mit deren Attributwerten. 894 Unterrichtseinheiten zu informatischen Grundkonzepten Wort  Wort  Substantiv Wort  Verb  Wort  Substantiv  enthält „ie“ Wort  Substantiv  enthält „ieh“ Wort  Verb  enthält „ieh“ Wort  Verb  enthält „ie“  Vieh, Fliege, -ieh, liegen, Ziel, fliegen, Substant iv, fliehen, -ie-, Verb, -ieh-, ziehen, lieben, Sti er, -ie-, wiehern  Abbildung 4.31: Begriﬀshierarchie Abbildung 4.32: Bildergeschichte Insgesamt zeigte sich, dass die Kinder ohne Einf ¨uhrung mit dem in Imagine Logo eingebetteten sehr einfachen Textsystem arbeiten konnten. Es war nicht notwendig, neues Anwendungswissen aufzubauen, da es bereits durch die Arbeit an den informatischen Grundkonzepten und mit ihrer Anwendung in den Logo-Systemen erworben worden war. Objektorientierte Programmierung Die Sch ¨ulerinnen und Sch ¨uler vertieften die Syntax englischer S ¨atze in der Verlaufsform anhand einer Bildergeschichte. Bei der Animation einer Figur der Geschichte wurde in die objektorientierte Programmierung eingef ¨uhrt. In dem in Abbildung 4.33 dargestellten Bild (Hauß & al., 1997) der Geschichte l ¨auft ein Junge gerade von der Schule nach Hause. Diese Situation wurde im Klassenraum mit einer Sch ¨ulerin simuliert. Ihre Mitsch ¨ulerinnen und Mitsch ¨uler hatten die Aufgabe, sie vom Lehrerpult zur T ¨ur und wieder zur ¨uck 904.1 Fachunterricht Abbildung 4.33: Animation einer Figur zu kommandieren. Sie durfte sich nur bewegen, wenn sie mit ihrem Namen angesprochen wurde. Außerdem musste genau gesagt werden, was sie tun sollte. Der Junge in der Bildergeschichte erhielt den Namen Jim. Mit dem Befehl Jim’FORWARD 20 konnte auch er vorw ¨arts bewegt werden. Da Jim st ¨andig weiterlaufen sollte, musste ihm der Befehl immer wieder neu erteilt werden. FOREVER [ Jim’FORWARD 20 ] Die Sch ¨ulerinnen und Sch ¨uler stellten fest, dass er durch diese Anweisung viel zu schnell rannte. Sie mussten also zwischen jedem Schritt eine kurze Pause einbauen. FOREVER [ Jim’FORWARD 20 WAIT 100 ] Die Bewegung von Figuren faszinierte die Kinder auch in vielen weiteren Unterrichtseinheiten. Da die programmiersprachliche Umsetzung in Logo sehr intuitiv und einfach zu formulieren war, konnten alle Kinder die Animationen umsetzen. Konstruktion eines Netzwerks Aus einer textuellen Beschreibung von 28 verwandtschaftlichen Beziehungen, die in Englisch im Genitiv formuliert waren, mussten die Sch ¨ulerinnen und Sch ¨uler in dieser Unterrichtseinheit einen Familienstammbaum konstruieren. Waltraud’s mother is Hulda. Hulda’s husband is Gustav. Waltraud’s sister is Charlotte. ... Anders als in einer Hierarchie hatten die Knoten hier fast immer zwei Vorg ¨anger, den Vater und die Mutter. Es gab keinen ausgezeichneten Knoten, so dass die Struktur des Stammbaums ein Netzwerk war. Der Begriﬀ des Netzwerks wurde nicht eingef ¨uhrt. Da es im Gegensatz zur Hierarchie keine nat ¨urliche Anordnung der Knoten gibt, war es 914 Unterrichtseinheiten zu informatischen Grundkonzepten besonders wichtig, dass die Sch ¨ulerinnen und Sch ¨uler in ihren Darstellungen selbst eine klare Struktur aufbauten und die verwandtschaftlichen Beziehungen durch Verbindungen verdeutlichten. Dies gelang, wie in Kapitel 6.4.4 beschrieben wird, noch nicht allen. 4.2 Projektarbeit Nachdem die einzelnen informatischen Grundkonzepte im Kontext der verschiedenen Fachinhalte eingef ¨uhrt waren, hatten die Sch ¨ulerinnen und Sch ¨uler w ¨ahrend der Projektarbeit an der Rittergeschichte die M ¨oglichkeit, •an einem großen Projekt zu arbeiten, in dem sie sich ihre Zeit selbst einteilten, •in einer Arbeit die Inhalte von vier verschiedenen F ¨achern zu erlernen, •die informatischen Grundkonzepte anzuwenden und zu vertiefen, •in kreativer Arbeit ein ¨asthetisch ansprechendes Produkt zu erstellen und •eine Pr ¨asentation vorzubereiten (Wursthorn, 2005b). Um sie nicht zu ¨uberfordern, erhielten sie zu Beginn der Projektarbeit ein Arbeitsblatt, auf dem die Pﬂichtteile des Projekts in Form von Handlungen abgebildet waren. Diese sollten sie nutzen, um zur Planung der Reihenfolge der verschiedenen Seiten ihrer multimedialen Geschichte einen Programmablaufplan zu erstellen. Außerdem bekamen sie nach etwa zwei Wochen eine Checkliste, auf der sie die Anforderungen einzeln abhaken konnten. In den ersten beiden Wochen wurden in Doppelstunden die Fachthemen achsensymmetrische Figuren (Mathematik), Genitiv (Englisch), Gedicht (Deutsch) und Rhythmus (Musik) in kurzen Einf ¨uhrungen aufgegriﬀen und das f ¨ur die Umsetzung in Logo notwendige Wissen instruktional vermittelt. Im Anschluss daran arbeiteten die Sch ¨ulerinnen und Sch ¨uler v ¨ollig selbstst ¨andig an ihren Produkten. Außer der Rittergeschichte, die als Hausaufgabe geschrieben wurde, und den Bildern, die im Kunstunterricht gezeichnet und von der Forscherin eingescannt wurden, entstanden die Projektergebnisse ausschließlich im Unterricht. Sie wurden nach f ¨unf Wochen den Eltern pr ¨asentiert. Somit gen ¨ugte das Thema der Rittergeschichte und die Durchf ¨uhrung der Arbeit fast allen von Gudjons (1997) beschriebenen Merkmalen eines Projekts. Der Situationsbezug war nicht nur auf das Schreiben einer Geschichte beschr ¨ankt, sondern durch ihre multimediale Gestaltung konnten auch Aspekte aus anderen F ¨achern, wie zum Beispiel die achsensymmetrische Ritterburg, integriert werden. Das Thema der Rittergeschichte selbst orientierte sich sowohl an den k ¨ampferischen Interessen der Jungen als auch den gestalterischen der M ¨adchen. Da es sich bei der Rittergeschichte um das erste Projekt der Sch ¨ulerinnen und Sch ¨uler handelte, mussten sie bei der zielgerichteten Projektplanung und der Selbstorganisation mit Hilfe der oben beschriebenen Checkliste unterst ¨utzt und gelenkt werden. Nach einer gewissen Zeit arbeiteten sie jedoch in v ¨olliger Selbst924.2 Projektarbeit verantwortung. Die Einbeziehung vieler Sinne war durch die Arbeit am Computer auf das Sehen und H ¨oren eingeschr ¨ankt. Soziales Lernen ¨ubten die Sch ¨ulerinnen und Sch ¨uler durch die Zusammenarbeit in Paaren. Besonders bei den kreativen T ¨atigkeiten mussten sie aufgrund unterschiedlicher Vorstellungen h ¨auﬁg Kompromisse aushandeln. Die Interdisziplinarit ¨at und Produktorientierung des Projekts war durch die Integration der F¨acher Mathematik, Englisch, Deutsch und Musik und die Erstellung einer Pr ¨asentation vorgegeben. Neue informatische Grundkonzepte Fachinhalt Mikrowelt Wiederholung Modularisierung Mathematik: Achsensymmetrische BurgSpiegelMikroweltBefehle, Befehlsfolgen, Planung komplexer Igelbewegungen Netzwerk Englisch: Stammbaum der Ritterfamilie Klasse Textfeld ,Igel Objektorientierung Englisch: R ¨atsel zum Stammbaum der RitterfamilieKlasse Textfeld ,Schaltﬂ ¨ache, objektorientierte Programmierung, Objekte, Methoden, Ereignisse Oberﬂ ¨achengestaltung Musik: Trommelrhythmus RhythmusMikroweltBefehle, Objekte Deutsch: Rittergeschichte Klasse Textfeld ,Igel Automatisierung Allgemein: Animation von Objekten Objektorientierte Programmierung, Namensgebung, Objekte, Methoden Syntax, Semantik Deutsch: Generierte Gedichte SatzMikroweltSyntaxdiagramme, Funktionen, Maschinen, zusammengesetzte Maschinen, Oberﬂ¨achengestaltung, Klasse Schaltﬂ ¨ache, Objektorientierte Programmierung, Ereignisse Tabelle 4.2: Informatische Grundkonzepte in der Projektphase Modularisierung Mathematischer Inhalt der Rittergeschichte war die Achsenspiegelung. Die Sch ¨ulerinnen und Sch ¨uler erstellten einen Befehl Viertel Burg, mit dem der Igel die in Abbildung 4.34 dargestellte Viertel-Burg zeichnete. 934 Unterrichtseinheiten zu informatischen Grundkonzepten Abbildung 4.34: Viertel-Burg Anschließend f ¨uhrten sie zun ¨achst Spiegelungen mit Papier und Bleistift durch, um aus dem Viertel die gesamte Burg zu konstruieren. Sie erkannten, dass insgesamt drei Spiegelungen notwendig waren und beschrieben die Spiegelachsen in Abh ¨angigkeit der Blickrichtung des Igels. Dies erleichterte ihnen die Analogiebildung zu den eingef ¨uhrten Befehlen •spiegel Blickrichtung •spiegel senkrecht zurBlickrichtung •spiegel Blickrichtung undSenkrechte der Spiegel-Mikrowelt. Sie erhielten im Eingabeparameter den Namen des Befehls ¨ubergeben, in dem der Igel die zu spiegelnde Grundﬁgur zeichnete. Deutlich wurde bei der Arbeit, dass in modularen Umgebungen gewisse Regeln bei der Erstellung der Module eingehalten werden m ¨ussen. Da die Spiegelachsen der drei Befehle abh ¨angig von der Blickrichtung und Position des Igels am Ende des Zeichenprozesses waren, musste der Igel in Viertel Burg am Ende wieder in seinen Ausgangszustand gebracht werden, d.h. er musste an der gleichen Position stehen und in die gleiche Richtung schauen. Netzwerk In Englisch wurde auf einer Seite der multimedialen Geschichte der Stammbaum der Ritterfamilie als Netzwerk modelliert und visualisiert. Hier brachten sich die Sch ¨ulerinnen und Sch ¨uler vor allem kreativ bei der Darstellung des Stammbaums ein. Objektorientierung Zu dem Stammbaum erstellten die Kinder ein interaktives R ¨atsel. Ja-/Nein-Fragen zu verwandtschaftlichen Beziehungen formulierten sie auf Englisch mit Hilfe des Genitivs. F¨ur jede Frage stellten sie zwei Antwortschaltﬂ ¨achen zur Verf ¨ugung. Richtig beantwortete Fragen f ¨arbten sie gr ¨un und falsche rot. Zur Initialisierung des R ¨atsels programmierten sie ebenfalls eine Schaltﬂ ¨ache. Insgesamt gab es zahlreiche Objekte, die miteinander programmiertechnisch verkn ¨upft waren. Aus diesem Grund wurden die Sch ¨ulerinnen und Sch ¨uler mehrfach aufgefordert, 944.2 Projektarbeit Abbildung 4.35: Interaktives R ¨atsel zum Stammbaum der Ritterfamilie den Objekten sinnvolle Bezeichnungen wie text question1 oder question1 button no zu geben, damit diese im Programmcode leichter angesprochen werden konnten. Die Methoden der einzelnen Objekte wurden nicht mehr ¨uber das Kontextmen ¨u mit der Maus ausgew ¨ahlt, sondern abstrakt durch Anweisungen wie text_question1’setBGColour "green formuliert. Die fast nat ¨urlichsprachliche Anweisung verdeutlicht die Struktur der Objektauswahl, die Zuordnung der Methode zu dem Objekt und die Speziﬁkation des Attributwerts. Oberﬂ ¨achenmodellierung Bei der Erstellung der Trommelrhythmen spielte keines der informatischen Grundkonzepte explizit eine Rolle. Vielmehr wurde die Rhythmus-Mikrowelt, die acht verschiedene T¨one zur Verf ¨ugung stellte, einfach angewendet (vgl. Abbildung 4.36). Allerdings war es nicht m ¨oglich, Rhythmen mit Hilfe einer Schaltﬂ ¨ache abzuspeichern, sondern nur der aktuell dargestellte Rhythmus konnte abgespielt werden. Um Rhythmen auf anderen Seiten des Projekts einzubauen, mussten die Sch ¨ulerinnen und Sch ¨uler ihre Kompositionen mit dem Befehl speicher Rhythmus abspeichern. Mit spiele Rhythmus konnten diese dann an beliebiger Stelle eingebaut werden. Die Oberﬂ ¨ache der Mikrowelt war also nur begrenzt komfortabel zu bedienen. Abbildung 4.36: Rhythmus eines Sch ¨ulerpaares 954 Unterrichtseinheiten zu informatischen Grundkonzepten Automatisierung Fast alle Sch ¨ulerinnen und Sch ¨uler animierten auf mindestens einer Seite eine ihrer zahlreichen Figuren. Die Bewegungen automatisierten sie mit Hilfe des Befehls FOREVER entweder mit konstanter Geschwindigkeit auf einer Geraden oder zuf ¨allig. Auch bei dieser Arbeit vertieften sie Kenntnisse der objektorientierten Programmierung, da wie beim R¨atsel zum Stammbaum der Ritterfamilie die Methoden von Objekten im Programmcode aufgerufen wurden. Eine Gruppe bewegte zum Beispiel ihren Drachen folgendermaßen ¨uber den Bildschirm: dragon’FOREVER [FORWARD 20 RIGHT 80 WAIT 100 FORWARD 20 RIGHT 60 WAIT 100] Syntax, Semantik Im Fach Deutsch ließen die Sch ¨ulerinnen und Sch ¨uler das Programm ein Gedicht generieren. Thematisch vorgegeben war eigentlich ein Liebesgedicht des Ritters an sein Ritterfr ¨aulein. Allerdings erwies sich das Thema als zu heikel. Stattdessen wurde an einem Vers, bestehend aus Subjekt und Pr ¨adikat, gearbeitet. Der syntaktische Aufbau der Verse wurde mit einem Syntaxdiagramm an der Tafel dargestellt und die Klasse suchte gemeinsam entsprechende Beispiele. Die Bestandteile der Verse setzten die Sch ¨ulerinnen und Sch ¨uler in Funktionen um, die sie zur automatischen Generierung der Verse nutzten. Anschließend entwarfen sie auf einer Seite des Projekts eine Benutzerschnittstelle, mit deren Hilfe das Gedicht am Bildschirm ausgegeben werden konnte. Im Ereignis onPush der Schaltﬂ ¨ache hinterlegten sie den entsprechenden Code. Beim Testen ﬁel ihnen allerdings auf, dass die Verse ¨ubereinander geschrieben wurden. Als L ¨osung setzten sie den schreibenden Igel nach der Ausgabe des Verses entweder direkt in eine neue Zeile oder f ¨ugten eine neue Schaltﬂ ¨ache zur Bewegung des Igels ein. Eine sehr kreative Gruppe drehte den Igel nach jedem Vers, so dass ein Gedicht in Form von Sonnenstrahlen entstand. 4.3 Fachunabh ¨angiger Unterricht F¨ur einige informatische Grundkonzepte konnten nur sehr schwierig fachliche Kontexte gefunden werden. Aus diesem Grund waren am Ende des Schuljahrs die Modellierung, Objektorientierung, Modularisierung, Hierarchisierung und Rekursion im Unterricht noch ¨uberhaupt nicht oder nicht intensiv behandelt worden. Bis auf letztere k ¨onnen alle dem Programmieren im Großen zugeordnet werden, das am besten in umfangreichen Programmierprojekten thematisiert werden kann. Obwohl sich die Sch ¨ulerinnen und Sch¨uler¨uber mehrere Monate sehr intensiv mit der Logo-Programmierung auseinandergesetzt hatten, h ¨atte sie ein großes, eigenst ¨andiges Programmierprojekt ¨uberfordert. Aus diesem Grund wurde in diesem letzten Teil des Unterrichtsversuchs die Erweiterung be964.3 Fachunabh ¨angiger Unterricht reits existierender Logo-Programme als methodische Form gew ¨ahlt. Dieses Vorgehen bot sich an, da die grundlegenden Strukturen der Programme erarbeitet werden mussten und dabei die Prozesse der Modularisierung, Hierarchisierung und Modellierung nachvollzogen werden konnten. Als Themen wurden zwei Spiele und ein Malprogramm gew ¨ahlt, da Humbert (2001) fordert, dass die Problemstellungen, die im Unterricht behandelt werden, nicht nur fachlich zu begr ¨unden sind, sondern sich auch an den Interessen der Sch¨ulerinnen und Sch ¨uler orientieren m ¨ussen. Neue informatische Grundkonzepte Fachinhalt Mikrowelt Wiederholung Modellierung Erweiterung eines Autospiels Autospiel-Mikrowelt Modularisierung, Hierarchisierung, Objektorientierung, Ereignisse, Oberﬂ ¨achengestaltung Rekursive Struktur Englisch: Wortfeld Kleider im Windows-ExplorerVerzeichnis, Datei, Dokument, Hierarchie Beschreibung rekursiver Figuren Rekursive Strukturen erkennen, beschreiben und zeichnen Modellierung Entwurf eines Malprogramms und Erstellung eines LabyrinthspielsMal-Mikrowelt, Labyrinth-MikroweltObjektorientierung, Oberﬂ ¨achengestaltung Tabelle 4.3: Informatische Grundkonzepte ohne Fachbezug Modellierung Die Unterrichtseinheit Autospiel wurde konzipiert, um die Lernenden in Kontakt mit der Modularisierung, Hierarchisierung, Objektorientierung und Modellierung zu bringen, ohne gleichzeitig ihre programmiertechnischen F ¨ahigkeiten zu ¨uberfordern. In Abbildung 4.37 ist das Autospiel in seinem Anfangszustand dargestellt. Der Rennwagen, der sich mit konstanter Geschwindigkeit bewegte, musste auf der vorgegebenen Fahrbahn gehalten werden. Der Wagen konnte mit den Pfeiltasten in die vier Himmelrichtungen gelenkt werden. Relative Richtungs ¨anderungen waren nicht m ¨oglich. Am Rande der Fahrbahn befanden sich Objekte, die beim ¨Uberschreiten von bestimmten Streckenabschnitten zu Hindernissen auf der Fahrbahn wurden. Die Ereignisse, die die Hindernisse verursachten, wurden mit Hilfe von Ger ¨auschen dargestellt. Ein Sturm ließ zum Beispiel die B ¨aume umst ¨urzen und ein heftiger Regen den Teich anschwellen. Mit Hilfe der Schaltﬂ ¨ache Neues Autospiel konnten der Rennwagen auf seine Startposition gesetzt und alle Hindernisse von der Fahrbahn entfernt werden. Mit Start wurde der Motor des Wagens gestartet und die kontinuierliche Rennfahrt begonnen. 974 Unterrichtseinheiten zu informatischen Grundkonzepten Abbildung 4.37: Benutzeroberﬂ ¨ache des Autospiels In Wursthorn (2005a, S. 317) wird beschrieben, wie das Erlernen der informatischen Grundkonzepte mit dem Spielen am Computer verkn ¨upft werden muss, um aufgebautes Wissen anschließend beim konstruktiven Arbeiten zu festigen und zu vertiefen. Dort werden drei Arbeitsformen beschrieben: •Spielen •Analysieren •Ver¨andern. In der Spielphase steht das zweckfreie Spielen im Vordergrund, um die Funktionalit ¨at kennen zu lernen. Daran schließt sich eine Analysephase, in der der innere Aufbau des Programms durch Codestudium erarbeitet und in der anschließenden dritten Phase aktiv ver ¨andert wird. Schon bei der Konzeption des Spiels muss darauf geachtet werden, dass sinnvolle Ver ¨anderungsund Erweiterungsm ¨oglichkeiten enthalten sind, damit die Sch¨ulerinnen und Sch ¨uler m ¨oglichst selbstst ¨andig arbeiten k ¨onnen. Beim Autospiel war dies auf drei verschiedene Arten m ¨oglich. Zun ¨achst konnten neue Spiel-Modi eingef ¨uhrt werden, die das Rennauto in unterschiedlichen Geschwindigkeiten ¨uber die Fahrbahn bewegten (siehe Zeile 14 im Programmcode). Dies hatte zur Konsequenz, dass die Kommunikationsschnittstelle zur Auswahl der verschiedenen Modi angepasst werden musste. Eine zweite Ver ¨anderungsm ¨oglichkeit bestand in der Verwendung anderer Steuerungstasten (vgl. Zeile 5 – 8 im Programmcode). Zuletzt erschien es noch sinnvoll, die absoluten Richtungs ¨anderungen durch relative zu ersetzten, so dass das 984.3 Fachunabh ¨angiger Unterricht Fahrzeug auch auf einer kreisf ¨ormigen Bahn mit Hilfe von zwei Tasten gelenkt werden konnte (siehe ebenfalls Zeile 5 – 8). 1: to Starte_Autofahrt 2: 3: Auto’setKeyMenu [ 4: esc [cancel "move] 5: up [Auto’setHeading 0] 6: right [Auto’setHeading 90] 7: down [Auto’setHeading 180] 8: left [Auto’setHeading 270] 9: ] 10: 11: playWave ".\\Spiel\\Sound\\AutoAnlasser.WAV 12: wait 3000 13: 14: (Auto’forever [fd 1 wait 10 15: ... ] 16: ) 17: end Die ersten beiden Phasen wurden sehr stark mit Hilfe von Arbeitsbl ¨attern gelenkt. Es mussten die Stellen auf der Fahrbahn, an denen die Hindernisse entstanden, markiert, die Objekte an der Programmoberﬂ ¨ache benannt und die Befehlsstrukturen des gesamten Programms erarbeitet werden. Dies stellte sicher, dass nicht nur gespielt, sondern auch Wissen ¨uber den Programmaufbau erworben wurde. Obwohl drei Alternativen zur Ver ¨anderung des Spiels vorgegeben waren, arbeiteten alle Gruppen an neuen Spielmodi. Sie f ¨ugten meist mehrere neue Geschwindigkeitsstufen an der Benutzerschnittstelle ein und implementierten f ¨ur diese neue Befehle. Dabei erweiterten sie softwareergonomisch ansprechend die Benutzerschnittstelle und passten das Modell des Autospiels an. Die Unterrichtseinheit machte den Sch ¨ulerinnen und Sch ¨ulern sehr viel Spaß, obwohl sie an den sehr anspruchsvollen informatischen Konzepten der Modularisierung, Hierarchisierung, Objektorientierung, Modellierung und Softwareergonomie arbeiteten und sich in fremden Programmcode einlesen mussten. Besonders die M ¨oglichkeit spielen und eigenst ¨andige”Verbesserungen“ in das bereits bestehende Programm einf ¨ugen zu k ¨onnen, waren f ¨ur die hohe Motivation verantwortlich. Rekursion Zur Einf ¨uhrung von rekursiven Vorstellungen wurde nicht mit Logo, sondern mit dem Windows-Explorer gearbeitet. Auf einem Arbeitsblatt ordneten die Sch ¨ulerinnen und Sch¨uler englische Begriﬀe aus dem Wortfeld Kleider in eine vorgegebene Hierarchie 994 Unterrichtseinheiten zu informatischen Grundkonzepten ein. Außerdem lagen sowohl die Bl ¨atter als auch die inneren Knoten der Hierarchie im Windows-Explorer elektronisch als Bilder in Dateien und als Verzeichnisse vor, die hierarchisch sortiert werden mussten. Die Beziehungen zwischen Daten, Dateien und Verzeichnissen wurden in Form der Metaphern beschriftete Schachtel undbeschrifteter Schrank in einer Frontalphase vorgestellt. Die rekursive Struktur der Verzeichnisse wurde durch das Bild in Schr ¨anken k ¨onnen sich wieder Schr ¨anke beﬁnden veranschaulicht. Die Sch ¨ulerinnen und Sch ¨uler arbeiteten in dieser Unterrichtseinheit sehr konzentriert, da ihnen die Vorstellung von Dateien und Verzeichnissen als Schachteln und Schr ¨anke geﬁel und sie Erfolgserlebnisse beim Einsortieren der Begriﬀe in die Hierarchie hatten. Auch die anschließende kreative Phase, in der sie mit den Bildern ein Kleidergesch ¨aft einrichteten, wurde sehr positiv bewertet. Explizit wurde die Rekursion erst beim Zeichnen von Figuren eingef ¨uhrt. Zun ¨achst wurde eine rekursive Figur an die Tafel gemalt und auf Basis der Beschreibung der Sch ¨ulerinnen und Sch ¨uler erneut gezeichnet. Aufgrund von Ungenauigkeiten entstand nicht die Ausgangsﬁgur. Anschließend mussten die Sch ¨ulerinnen und Sch ¨uler selbst nach der Anweisung ”Achtrekeln“ bedeutet, in dem oberen Kreis der Acht eine neue Acht zu zeichnen und diese neue Acht dann zu”Achtrekeln“ die Figur vervollst ¨andigen. Abbildung 4.38: Rekursive Figur – Vorlage und L ¨osung einer Sch ¨ulerin Gleiches wurde noch an zwei weiteren Beispielen ge ¨ubt. Aufgrund der Misserfolge bei der Beschreibung der Figuren an der Tafel, arbeiteten die Sch ¨ulerinnen und Sch ¨uler sehr z¨ogerlich und ließen sich st ¨andig die Richtigkeit ihrer L ¨osungen best ¨atigen. Besonderen Spaß machte ihnen das Zeichnen einer eigenen rekursiven Figur. Bei der abschließenden 1004.3 Fachunabh ¨angiger Unterricht Beschreibung vorgegebener rekursiver Figuren griﬀen viele jedoch wieder auf iterative Formulierungen zur ¨uck (siehe Kapitel 6.4.3). Modellierung Um auch denjenigen Sch ¨ulerinnen und Sch ¨ulern, die nicht die Computer AG besuchten, die M ¨oglichkeit anzubieten, auf den Convertibels mit dem Stift zu arbeiten und um die Konzepte der Modellierung von Benutzeroberﬂ ¨achen zu vertiefen, wurde ein Malprogramm mit einer Farbe und Strichst ¨arke zur Verf ¨ugung gestellt. Nach dem Dr ¨ucken der Schaltﬂ ¨ache Starte Malprogramm konnte mit dem Stift gezeichnet werden. Es gab die M ¨oglichkeit, die Zeichnung auf dem Bildschirm zu l ¨oschen, das Bild in einer Datei abzuspeichern oder ein bereits bestehendes Bild zu laden. Mit Beende Malprogramm wurde der Malmodus verlassen. Die Aufgabe der Kinder bestand in der selbstst ¨andigen Erweiterung des Programms um weitere Farben und Strichst ¨arken. Abbildung 4.39: Benutzeroberﬂ ¨ache des Malprogramms eines Sch ¨ulerinnenpaares Es wurde ein Beispiel an der Tafel mit dem Hinweis besprochen, im Ereignis onPush der beiden Schaltﬂ ¨achen Rotundfeiner Stift die L ¨osung nachschauen zu k ¨onnen. Die verschiedenen Codes der Farben und Strichst ¨arken wurden auf zwei weiteren Seiten der Mal-Mikrowelt angegeben, so dass ohne Arbeitsbl ¨atter gearbeitet werden konnte. Die Vorgehensweise der Sch ¨ulerinnen und Sch ¨uler unterschied sich sehr. Die einen waren bestrebt, ein komplettes Malprogramm mit m ¨oglichst vielen Farben und unterschiedlichen 1014 Unterrichtseinheiten zu informatischen Grundkonzepten Strichst ¨arken (siehe Abbildung 4.39) zu erzeugen und andere priorisierten das Zeichnen mit dem Stift. Alle waren motiviert, da sie mit dem Stift als Eingabeger ¨ate arbeiten durften. Gleichzeitig vertieften sie die objektorientierten Konzepte bei der Programmierung der Schaltﬂ ¨achen und modellierten Benutzerschnittstellen. In einem zweiten Schritt musste ein Labyrinthspiel nach vorgegebenen Schritten vervollst ¨andigt werden. Ziel war es, in der Mal-Mikrowelt ein Labyrinth zu zeichnen, es dort abzuspeichern und dann in der Labyrinth-Mikrowelt zu laden, um dort mit einem M ¨auschen zu spielen. Durch den auf dem Arbeitsblatt vorgegebenen Programmcode if equal? mouse’dotColour "red [ wurde gezeigt, wie das M ¨auschen feststellen konnte, ob es gegen eine Wand des Labyrinths lief. Dies verdeutlichte den Kindern, dass sie ihr Labyrinth in der Mal-Mikrowelt nur in einer Farbe zeichnen durften und diese dann in der Bedingung des Befehls starte Labyrinthspiel angeben mussten. Das Modell des Programms hatte also Schw ¨achen, die den Sch ¨ulerinnen und Sch ¨ulern beim weiteren Experimentieren auﬃelen. Einige Sch ¨ulerinnen und Sch ¨uler waren nicht motiviert genug, die Arbeit an dem Malprogramm aufzugeben und sich mit dem Labyrinth auseinanderzusetzen. Ihnen war es zu m ¨uhsam, sich die vier Arbeitsschritte •Labyrinth im Malprogramm speichern, •Malprogramm schließen, •Labyrinthspiel starten und •im Malprogramm abgespeichertes Labyrinth laden zu verdeutlichen, um ¨uberhaupt das Labyrinthspiel nutzen zu k ¨onnen. So lagen nur sehr wenige lauﬀ ¨ahige Labyrinthspiele vor. Trotzdem ist es wichtig, Aktivit ¨aten dieser Art anzubieten, da Kinder auch aus verschiedenartigen Anwendungen ausw ¨ahlen, manche ablehnen und andere vertiefend durchf ¨uhren k ¨onnen sollen. 1025 Konzeption und Durchf¨ uhrung der Untersuchung 5.1 Fragestellung und Untersuchungsdesign Im Zentrum dieser Untersuchung steht die Frage nach der Eignung des Unterrichtskonzepts zur Vermittlung der informatischen Grundkonzepte in Klassenstufe 5 der Realschule. Zu ber ¨ucksichtigen sind das kognitive Erlernen der informatischen Grundkonzepte, die Beurteilung des Unterrichts durch die Lehrerinnen, Sch ¨ulerinnen und Sch ¨uler, die im Unterricht entstandenen Arbeitsergebnisse und die Einstellungen der Sch ¨ulerinnen und Sch¨uler bez ¨uglich der Verwendung des Computers. Daraus ergeben sich f ¨ur die Auswertung folgende zentrale Fragestellungen: •Eignet sich das Gesamtkonzept zur Vermittlung der informatischen Grundkonzepte in Klassenstufe 5 der Realschule? •L¨asst sich ein Lernerfolg f ¨ur die informatischen Grundkonzepte feststellen? •Gibt es beim Erlernen der informatischen Grundkonzepte Unterschiede bez ¨uglich des Geschlechts, des kognitiven Gesamtleistungsniveaus oder der sprachgebundenen, zahlengebundenen oder formallogischen F ¨ahigkeiten? •Wie ver ¨andern sich die Einstellungen der Sch ¨ulerinnen und Sch ¨uler bez ¨uglich des Computers? F¨ur die Untersuchung dieser Fragestellungen wurden geeignete Erhebungsinstrumente ausgew ¨ahlt oder entwickelt. Vor allem qualitative Methoden sind geeignet, um die verschiedenen Aspekte des Unterrichtsversuchs zu ber ¨ucksichtigen. Aus diesem Grund wurde sowohl mit den Lehrerinnen als auch mit sechs Sch ¨ulerinnen und Sch ¨ulern am Ende des Schuljahrs ein Leitfadeninterview durchgef ¨uhrt und von der Forscherin selbst ein Forschungstagebuch ¨uber die einzelnen Unterrichtsstunden geschrieben. Außerdem existieren Unterrichtsmaterialien wie Arbeitsbl ¨atter und Logo-Programme, die qualitativ ausgewertet wurden. Quantitative Instrumente wurden zur Ermittlung des Lernerfolgs der informatischen Grundkonzepte, der Erfassung des kognitiven Gesamtleistungsniveaus, des sprachgebundenen, zahlengebundenen und formallogischen Denkens und zur Messung der Einstellungen zum Computer verwendet. Die zeitliche Abfolge des Einsatzes der verschiedenen Erhebungsinstrumente wird im 1035 Konzeption und Durchf ¨uhrung der Untersuchung Untersuchungsplan in Abbildung 5.11skizziert. Pretest inf. GK Fragebogen  Einstellungen Vermittlung der inf. GK im Fachunterricht  KFT  Posttest inf. GK Fragebogen  Einstellungen  Interview Lehrerinnen  Interview Schülerinnen u. Schüler Arbeitsergebnisse der  Schülerinnen u. Schüler  Forschungstagebuch Schuljahresbeginn Schuljahresende Vortest inf. GK Fragebogen  Einstellungen Vermittlung der inf. GK im Fachunterricht  KFT  Nachtest inf. GK Fragebogen  Einstellungen  Interview Lehrerinnen  Interview Schülerinnen u. Schüler Arbeitsergebnisse der  Schülerinnen u. Schüler  Forschungstagebuch Schuljahresbeginn Schuljahresende  Abbildung 5.1: Untersuchungsplan 5.2 Quantitative Erhebung Um Aussagen ¨uber den Lernerfolg der informatischen Grundkonzepte Algorithmisierung, Automatisierung, Codierung, Datenstrukturen, Modellierung, Objektorientierung, Modularisierung, Hierarchisierung, Abstraktion, Iteration, Rekursion, Programmablaufpl¨ane, Syntaxdiagramme, UML-Klassendiagramme, Hierarchien, Netzwerke, Grammatik, Syntax, Semantik und Funktionen ganz allgemein und in Abh ¨angigkeit der F ¨ahigkeiten der Sch ¨ulerinnen und Sch ¨uler machen zu k ¨onnen, muss das Erlernen dieser Konzepte quantiﬁziert werden. Da es f ¨ur die informatischen Grundkonzepte keine standardisierte Form der Operationalisierung gibt, musste ein eigenes Erhebungsinstrument entwickelt werden (vgl. Kapitel 5.2.1). Zur Erfassung des kognitiven Gesamtleistungsniveaus und der sprachgebundenen, zahlengebundenen und formallogischen F ¨ahigkeiten der Sch ¨ulerinnen und Sch ¨uler wurde der KFT ( Kognitiver F ¨ahigkeitstest ) (Heller & al., 2000) eingesetzt. Es handelt sich um einen diﬀerentiellen Intelligenztest zur Ermittlung der kognitiven Ausstattung von Sch ¨ulerinnen und Sch ¨ulern. Er liefert Informationen ¨uber sprachliches, quantitatives und nonverbal-ﬁgurales Denken. Außerdem wurden noch die Ver¨anderungen der Einstellungen der Sch ¨ulerinnen und Sch ¨uler bez ¨uglich des Computers als Arbeitsger ¨at mit Hilfe eines selbst entwickelten Fragebogens zu Beginn und am Ende des Unterrichtsversuchs gemessen. 1KFT – Kognitiver F ¨ahigkeitstest; inf. GK – informatische Grundkonzepte 1045.2 Quantitative Erhebung Im Folgenden werden zun ¨achst die Entwicklung des Tests zu den informatischen Grundkonzepten skizziert und die Testg ¨utekriterien diskutiert, bevor das Ausgangsmaterial und die Auswertungsverfahren vorgestellt werden. 5.2.1 Testentwicklung zu informatischen Grundkonzepten Da Sch ¨ulerinnen und Sch ¨uler zu Beginn der Klassenstufe 5 m ¨oglicherweise informatische Grundkonzepte anwenden, jedoch begriﬄich nicht fassen k ¨onnen, muss ein Leistungstest genau dieses Anwendungswissen in der Erfahrungswelt der Kinder ¨uberpr ¨ufen. Die Testitems m ¨ussen also ohne Verwendung der Begriﬀe der informatischen Grundkonzepte auskommen. Ein Item zur Modularisierung sah zum Beispiel folgendermaßen aus: Aufgabe: Das folgende Bild wurde mit Kartoﬀelstempeln erstellt. Beschreibe genau, wie 8 Personen das Bild m ¨oglichst schnell herstellen k ¨onnen. Es m ¨ussen die Kartoﬀelstempel geschnitzt und das Bild mit den Stempeln gedruckt werden. Abbildung 5.2: Aufgabe zur Modularisierung Insgesamt enth ¨alt das Bild acht verschiedene geometrische Figuren, so dass acht Kartoﬀelstempel hergestellt werden m ¨ussen. Die Arbeit wird dann eﬃzient aufgeteilt, wenn jede Person genau einen Stempel schnitzt und somit einen unabh ¨angigen Grundbaustein f ¨ur die Gesamtl ¨osung zur Verf ¨ugung stellt. F ¨ur die L ¨osung der Aufgabe ist also nur Anwendungsund kein Begriﬀswissen entscheidend. In einem ersten Schritt wurden von der Forscherin zu allen informatischen Grundkonzepten Aufgaben entwickelt und mit Kollegen in einem Expertenteam wiederholt diskutiert und erweitert. Dabei wurde deutlich, dass das Verst ¨andnis gewisser Konzepte, wie zum Beispiel die Modellierung, nicht in Form eines schriftlichen Leistungstests gemessen werden kann. 1055 Konzeption und Durchf ¨uhrung der Untersuchung Als Pilotuntersuchung wurde der Test am Ende des Schuljahrs 2002/2003 in einer 5. Klasse durchgef ¨uhrt. Die Sch ¨ulerinnen und Sch ¨uler erhielten die kompletten Testaufgaben mit der Arbeitsanweisung, in 45 Minuten beliebig viele Aufgaben zu l ¨osen. Schon w ¨ahrend der Aufgabenbearbeitung wurde deutlich, dass die Kinder gr ¨oßtenteils durch die vielen Aufgabenbl ¨atter irrten und die einzelnen Aufgaben nur oberﬂ ¨achlich bearbeiteten. Mit der selbstst ¨andigen Zeiteinteilung waren sie ¨uberfordert. Ein Tag sp ¨ater f ¨uhrte die Forscherin mit einigen Kindern ein kurzes Interview, um m ¨ogliche Schwierigkeiten zu erfahren. Es best ¨atigte sich, dass Aufgaben teilweise ¨uberhaupt nicht richtig gelesen und Formulierungen nicht verstanden worden waren. Die Testitems wurden daraufhin sprachlich angepasst, Erkl ¨arungen erg ¨anzt, Darstellungen ver ¨andert und die Anzahl der Aufgaben gek ¨urzt, so dass alle Testitems in 50 Minuten bearbeitet werden konnten. Auch die Durchf ¨uhrung des Tests wurde angepasst. In der zweiten Pilotstudie in einer weiteren 5. Klasse las die Forscherin die einzelnen Aufgaben vor. Die Sch ¨ulerinnen und Sch¨uler bearbeiteten sie direkt im Anschluss. Das Vorgehen bew ¨ahrte sich, so dass dieses beibehalten wurde. Vereinzelt ¨anderten sich nach der Auswertung der zweiten Pilotstudie noch Testitems, doch insgesamt erwies sich die Version als sehr stabil und konnte somit in der Versuchsklasse eingesetzt werden. Der Gesamttest wurde in drei gleich große Teile zerlegt. Jeder wurde mit acht Punkten bewertet und konnte in einer Schulstunde bearbeitet werden. Da der Test zu Beginn und am Ende des Unterrichtsversuchs durchgef ¨uhrt wurde, um den Lernerfolg als Diﬀerenz der Testergebnisse zu messen, wurde eine zweite leicht modiﬁzierte Form entwickelt, um die Wiedererkennung von Aufgabenstellungen zu vermeiden. Die Tabellen 5.1, 5.2 und 5.3 geben einen ¨Uberblick ¨uber die einzelnen Testitems der drei Testteile und die dort gepr¨uften informatischen Grundkonzepte. Aufgaben Informatische Grundkonzepte Lebewesen auf Plauturus Objektorientierung Einordnung von Begriﬀen Objektorientierung, Hierarchie Ordnung von Figuren Objektorientierung, Attribute Kreisdiagramme Objektorientierung, Attribute Folgen Iteration ”Quadrekel“ Rekursion, Algorithmus Zeichnung Iteration, Algorithmus Beschreibung Iteration, Rekursion, Algorithmus Tabelle 5.1: Aufgaben zu den informatischen Grundkonzepten (1. Teil) Beurteilung der Testg ¨ute Den drei zentralen Kriterien der Testg ¨uteObjektivit ¨at,Reliabilit ¨atundValidit ¨atkann die endg¨ultige Version des Tests zu den informatischen Grundkonzepten nicht standhalten. In Bortz und D ¨oring (2002, S. 194) wird die Objektivit ¨at als ein Maß deﬁniert, das 1065.2 Quantitative Erhebung Aufgaben Informatische Grundkonzepte Bild gemeinsam zeichnen Probleml ¨osestrategie, Modularisierung Kartoﬀelstempel Probleml ¨osestrategie, Modularisierung Wunderstempel Probleml ¨osestrategie, Abstraktion Eigene Adresse Adressen anordnen Datenstruktur Fragen zu Adressen beantworten Adressanordnung Datenstruktur Rezept Datenstruktur Variables Rezept Abstraktion Morgenqualen Algorithmus, Wissensrepr ¨asentation, Programmablaufplan Tabelle 5.2: Aufgaben zu den informatischen Grundkonzepten (2. Teil) Aufgaben Informatische Grundkonzepte Formen im Land”Droblavie“ Sprache, Grammatik ”Formalien“ Sprache, Grammatik Roboter Sprache, Grammatik Geheimschrift Dekodierung Eigene Geheimschrift Codierung 1. Steigerungsform bilden Steigerungsform”Motor“ Wissensrepr ¨asentation, Funktion Bildung von S ¨atzen Wissensrepr ¨asentation, Syntaxdiagramm Unregelm ¨aßige SteigerungsformenWissensrepr ¨asentation, Programmablaufplan Tabelle 5.3: Aufgaben zu den informatischen Grundkonzepten (3. Teil) angibt, wie stark die Testergebnisse vom Testanwender unabh ¨angig sind. Die Kriterien der Durchf ¨uhrungsund Auswertungsobjektivit ¨at sind durch die genaue Beschreibung des Vorgehens (vgl. Kapitel 5.2.2) erf ¨ullt. Die Zuverl ¨assigkeit und die G ¨ultigkeit des Tests konnten aus Zeitgr ¨unden nicht anhand von Reliabilit ¨atsund Validit ¨atspr ¨ufungen gemessen werden. Hier sind in Zukunft weitergehende umfassende Forschungsarbeiten notwendig. Die Testergebnisse k ¨onnen trotzdem als Indikatoren f ¨ur den Lernerfolg bez ¨uglich der informatischen Grundkonzepte interpretiert werden. Abgesichert werden sie durch die aus den qualitativen Auswertungen der Interviewdaten und Unterrichtsmaterialien abgeleiteten Aussagen. 1075 Konzeption und Durchf ¨uhrung der Untersuchung 5.2.2 Test zu informatischen Grundkonzepten Stichprobe Am Vorund Nachtest zu den informatischen Grundkonzepten sowohl zu Beginn als auch am Ende des Schuljahrs nahmen alle Sch ¨ulerinnen und Sch ¨uler der Versuchsklasse teil. Material Der Leistungstest bestand aus drei Testteilen, die jeweils in einer Unterrichtsstunde bearbeitet wurden. Der Vortest des Leistungstests ist in Anhang B abgebildet. Durchf ¨uhrung Die drei Testteile wurden an drei verschiedenen Tagen im Klassenverband bearbeitet. Da nur eine Form des Tests vorlag, wurde die Klasse geteilt, so dass gegenseitiges Abschreiben ausgeschlossen werden konnte. Jede Aufgabe wurde von der Forscherin genau zweimal vorgelesen und direkt im Anschluss bearbeitet. Die Kinder, die einen Testteil wegen Erkrankung vers ¨aumten, schrieben diesen m ¨oglichst zeitnah nach. Der Test selbst wurde in der Klasse nicht besprochen, sondern es wurden nur die Testergebnisse bekannt gegeben. Auswertung Die Aufgaben des Tests wurden von der Forscherin einzeln ausgewertet. Nur vollkommen richtige Ergebnisse wurden mit einem Punkt bewertet. Insgesamt konnten maximal 24 Punkte erreicht werden. 5.2.3 Kognitiver F ¨ahigkeitstest Stichprobe Alle Sch ¨ulerinnen und Sch ¨uler der Versuchsklasse nahmen am KFT ( Kognitiver F ¨ahigkeitstest ) (Heller & al., 2000) teil. Material Der KFT wurde eingesetzt, um Diﬀerenzen bez ¨uglich des kognitiven Gesamtleistungsniveaus und der sprachgebundenen, zahlengebundenen und formallogischen F ¨ahigkeiten zu messen. Die drei Testteile des KFT bestanden jeweils aus drei Aufgabenreihen. Der Verbal-Teil setzte sich aus den Subtests Wortschatz ,Wortklassiﬁkation undWortanalogien, der Quantitativ-Teil aus Mengenvergleichen ,Zahlenreihen undGleichungenbilden und der Nonverbal-Figural-Teil aus Figurenklassiﬁkationen ,Figurenanalogien undFaltaufgaben zusammen. Die Ergebnisse aller drei Testteile beschrieben das kognitive Ge1085.2 Quantitative Erhebung samtleistungsniveau. Dies bezeichnet Heller & al. (2000, S. 46) als Maß f ¨ur die allgemeine Intelligenz. Durchf ¨uhrung Der KFT wurde vor den Herbstferien nach ca. 6 Wochen Unterricht als Gruppentest mit zwei parallelen Formen durchgef ¨uhrt. Die Klasse war geteilt, so dass in einer Gruppengr¨oße von 15 Kindern gearbeitet wurde. Diejenigen, die einen Testteil verpassten, holten ihn in einer Einzelsitzung nach. Auswertung Der KFT wurde mit Hilfe der vorgegebenen Auswertungsschablonen evaluiert. Nach den Anweisungen wurden die Werte der Subtests in jedem Testteil addiert, die Gesamtleistung als deren Summe gebildet und die resultierenden Werte mit der beigef ¨ugten Normentabelle in den f ¨ur Klasse 5 schultypischen Standard transformiert. 5.2.4 Fragebogen zu Einstellungen zum Computer Stichprobe Sowohl in der zweiten Woche des Schuljahrs als auch in der drittletzten Schulwoche erhielten alle 30 Sch ¨ulerinnen und Sch ¨uler einen Fragebogen zu den Einstellungen zum Computer. Der R ¨ucklauf des Fragebogens zu Beginn des Schuljahrs war vollst ¨andig. Am Ende des Schuljahrs fehlten zwei B ¨ogen. Außerdem waren nicht alle Items bearbeitet. Die Antworth ¨auﬁgkeiten der einzelnen Items lag zwischen 21 und 30. Die genaue Verteilung ist in Anhang D dargestellt. Material Zur Erfassung der Ver ¨anderungen der Einstellungen zum Computer als Arbeitsger ¨at wurde ein selbst entwickelter Fragebogen mit 39 Items zu den Inhaltsbereichen •motivationale Aspekte bei der Verwendung des Computers (9 Items) •Gef¨uhle bei der Benutzung des Computers (15 Items) •Selbsteinsch ¨atzung der Kompetenzen im Umgang mit dem Computer (5 Items) •Beurteilung der Eigenschaften des Computers (10 Items) eingesetzt. Die Items mussten auf einer 5-stuﬁgen Rating-Skala, die mit den verbalen Marken stimmt ¨uberhaupt nicht ,stimmt eher nicht ,teils teils ,stimmt eher undstimmt vollgekennzeichnet war, beurteilt werden. Der Fragebogen ist in Anhang C abgebildet. Durchf ¨uhrung Die Bearbeitung des Fragebogens erfolgte als Hausaufgabe. Besonders am Ende des Schuljahrs erfolgte die R ¨uckgabe der ausgef ¨ullten Frageb ¨ogen nicht von allen Kindern 1095 Konzeption und Durchf ¨uhrung der Untersuchung am vorgegebenen Termin, so dass manche einen etwas l ¨angeren Bearbeitungszeitraum hatten. Auswertung F¨ur jedes Item wurden sowohl f ¨ur die Vorals auch Nachbefragung die zentralen Tendenzen der Einsch ¨atzungen der Klasse mit dem Median und dem ersten (Q1) und dritten Quartil (Q3), die die mittleren 50 Prozent der Werte begrenzen, und die Ausreißer in Box-Plots dargestellt. Die Entwicklung der Meinungs ¨anderungen wurde zus ¨atzlich in H¨auﬁgkeitsverteilungen beschrieben. 5.3 Qualitative Erhebung Mit Hilfe der quantiﬁzierten Ergebnisse des Leistungstests zu den informatischen Grundkonzepten kann das Unterrichtskonzept nur sehr begrenzt beurteilt werden, denn verschiedenste Einﬂussgr ¨oßen auf den Lernerfolg, f ¨orderliche oder behindernde Rahmenbedingungen etc. bleiben unber ¨ucksichtigt. Diese k ¨onnen nur mit Hilfe qualitativer Forschungsmethoden erfasst werden. 5.3.1 Forschungstagebuch Im Laufe des Schuljahrs stellte sich heraus, dass die Arbeit mit der Klasse montags nach dem Wochenende sehr viel schwieriger als donnerstags war. Diese Art von Einﬂussgr ¨oßen auf den Unterrichtsversuch dokumentierte die Forscherin ¨uber das gesamte Schuljahr hinweg in einem Forschungstagebuch. Vor allem das kontinuierliche Beschreiben der Stimmungslage der Sch ¨ulerinnen und Sch ¨uler w ¨ahrend des Unterrichts und der in den einzelnen Unterrichtseinheiten aufgetretenen Besonderheiten wurden festgehalten. Material Zu Beginn des Schuljahrs wurde mit einem stark strukturierten Forschungstagebuch gearbeitet, das folgende Kategorien enthielt: •Fach, Datum, Uhrzeit •Thema des Fachunterrichts •Informatische Grundkonzepte •Explizit angesprochene informatische Grundkonzepte; Methoden und Hilfsmittel zu ihrer Vermittlung •Eingesetzte Mikrowelten, verwendete Logo-Befehle •Produkte, Pr ¨asentationen der Sch ¨ulerinnen und Sch ¨uler •Verteilung der Unterrichtszeit auf Lehrervortrag, Klassengespr ¨ach, Arbeit am Computer, Pr ¨asentation, Sch ¨ulerarbeit ohne Computer 1105.3 Qualitative Erhebung •Verteilung der Unterrichtszeit auf die Fachinhalte, Logo und das Anwenden der eigenen Produkte •Stundenverlauf (verbal und als Rating-Skala) •Motivation der Sch ¨ulerinnen und Sch ¨uler (verbal und als Rating-Skala) •Schwierigkeitsgrad der Fachinhalte, der informatischen Grundkonzepte und Logo (verbal und als Rating-Skala) •Probleme mit der Programmiersprache, den informatischen Grundkonzepten und Fachinhalten •Sonstige Schwierigkeiten. Im Laufe der ersten Schulwochen stellte sich heraus, dass die Struktur des Forschungstagebuchs nicht ﬂexibel genug war. Viele Kategorien wurden kaum verwendet. Andererseits war es teilweise schwierig, wichtige Ereignisse im Schema festzuhalten. Aus diesem Grund wurde die Struktur nach den Herbstferien folgendermaßen angepasst: •Fach, Datum, Uhrzeit •Thema des Fachunterrichts •Informatische Grundkonzepte •Eingesetzte Mikrowelten, verwendete Logo-Befehle •Produkte, Pr ¨asentationen der Sch ¨ulerinnen und Sch ¨uler •Verteilung der Unterrichtszeit auf Lehrervortrag, Klassengespr ¨ach, Arbeit am Computer, Pr ¨asentation, Sch ¨ulerarbeit ohne Computer. Daran anschließend konnten dann in oﬀener Form weitere Anmerkungen angef ¨ugt werden. Da vor allem die letzten Kategorien h ¨auﬁg nicht genutzt und die meisten Eintragungen im oﬀenen Teil am Ende der Vorlage gemacht wurden, gab es Ende Februar eine weitere ¨Anderung. Das Forschungstagebuch enthielt nur noch die organisatorischen Daten wie Fach, Datum und Zeit und gliederte den oﬀenen Teil in die Abschnitte •allgemeine Stimmung, •Arbeit, •Besonderheiten, •Schwierigkeiten und •Sonstiges. Durchf ¨uhrung Die Forscherin selbst schrieb das Forschungstagebuch in der Regel direkt im Anschluss an die Unterrichtsstunden. Auswertung Bei der Auswertung der einzelnen Unterrichtseinheiten (vgl. Kapitel 4 und 6.4) wurden die entsprechenden Aufzeichnungen des Forschungstagebuchs auf besondere Situationen im Unterricht hin evaluiert. 1115 Konzeption und Durchf ¨uhrung der Untersuchung 5.3.2 Leitfadeninterview Lehrerinnen Zur qualitativen Befragung der Lehrerinnen bez ¨uglich des gesamten Unterrichtsversuchs wurde ein Interviewleitfaden (vgl. Anhang E) entwickelt. Mit ihm wurden Informationen zum Unterrichtskonzept, seiner Wirkung auf die Sch ¨ulerinnen und Sch ¨uler und die Integration in den Fachunterricht aus der Perspektive der beobachtenden und teilweise sehr berufserfahrenen Lehrerinnen gewonnen. Material Der Lehrerinnen-Interviewleitfaden umfasste zw ¨olf Bereiche: •Arbeitsbl ¨atter •Logo-Mikrowelten •Unterrichtsformen •Projektarbeit •Hausaufgaben •Integration in die Schulf ¨acher •F¨acher ¨ubergreifender Unterricht•Lernerfolg •Motivation und Ausdauer der Sch ¨ulerinnen und Sch ¨uler •Rolle der Forscherin •Rahmenbedingungen •Fortf ¨uhrung des Konzepts durch die Fachlehrerinnen. In der Auswertung wurden diese zu folgenden Hauptthemen zusammengefasst: •Beurteilung des Gesamtkonzepts auf Basis der Einsch ¨atzung –der Eignung des Gesamtkonzepts f ¨ur Klassenstufe 5 –der Unterrichtsformen –des f¨acher ¨ubergreifenden Ansatzes –der Arbeitsmaterialien –der Projektarbeit •Erfassung der Lernergebnisse und Einﬂussfaktoren –Fachinhalte –informatische Grundkonzepte und Computerbedienung –allgemeine F ¨ahigkeiten –F¨orderung und/oder Benachteiligung bestimmter Gruppen von Sch ¨ulerinnen und Sch ¨ulern –Computer AG •Verhalten der Sch ¨ulerinnen und Sch ¨uler im Unterricht –Motivation –Ausdauer –Bedeutung des Unterrichts –Kooperation •Einﬂuss der Rahmenbedingungen auf den Unterrichtsversuch –Aufteilung des Unterrichts auf zwei Lehrerinnen in einem Fach –Unterrichtsr ¨aume –Doppelstunden 1125.3 Qualitative Erhebung –Partnerarbeit am Computer –Hausaufgaben –Einschr ¨ankung der Arbeit auf Logo-Systeme –Benotung –Unterrichtskonzeption und -durchf ¨uhrung durch die Forscherin –weitere Rahmenbedingungen (Stundenverteilung, Belohnung, etc.). 5.3.3 Leitfadeninterview Sch¨ ulerinnen und Sch¨ uler Auch f ¨ur die Sch ¨ulerinnen und Sch ¨uler wurde ein Interviewleitfaden (vgl. Anhang F) entworfen. Mit ihm wurden Informationen ¨uber den Unterrichtsversuch, die erlernten Inhalte, die Selbsteinsch ¨atzung des Verhaltens im Unterricht und den Einﬂuss der Rahmenbedingungen gewonnen. Den Unterricht zur Vermittlung der informatischen Grundkonzepte nannten die Sch ¨ulerinnen und Sch ¨uler Computerunterricht. Material Der Interviewleitfaden f ¨ur die Sch ¨ulerinnen und Sch ¨uler gab folgende Themenschwerpunkte vor: •Einstellungen zum Computerunterricht •Mitarbeit •Vergleich Computerunterricht – Fachstunden •Zusammenarbeit •Arbeitsbl ¨atter•Logo •Ritterprojekt •Lerninhalte •Fortf ¨uhrung des Computerunterrichts •Bedeutung des Computerunterrichts außerhalb der Schule. F¨ur die Auswertung ergaben sich daraus die Hauptthemen •Beurteilung des Gesamtkonzepts auf Basis der Einsch ¨atzung –der Stunden im Computerund Fachunterricht –der Arbeitsmaterialien –der Projektarbeit •Pers¨onliche Bedeutung des Computerunterrichts –Wunsch nach Fortf ¨uhrung –Gespr ¨achsthema bei den Eltern und Freunden •Erfassung der Lernergebnisse bez ¨uglich –der Fachinhalte in Mathematik, Englisch, Deutsch und Musik –der Computerbedienung •Sch¨ulerverhalten im Unterricht –Mitarbeit –Partnerarbeit am Computer 1135 Konzeption und Durchf ¨uhrung der Untersuchung –Einstellungen zur Arbeit im Computerunterricht –gegenseitige Hilfe •Logo –Vergleich zwischen der Arbeit mit Logo und anderen Programmen –negative Aspekte von Logo –Vergleich zwischen MSW Logo und Imagine Logo –Besonderheiten in Imagine Logo. 5.3.4 Unterrichtsmaterialien zu einzelnen Unterrichtseinheiten Aussagen ¨uber das Erlernen einzelner informatischer Grundkonzepte k ¨onnen nicht allein aus Ergebnissen eines Leistungstests abgeleitet werden. Vielmehr ist es notwendig, die in allt ¨aglichen Unterrichtssituationen entstandenen Materialien wie Arbeitsbl ¨atter, Tests und Programme zu evaluieren. Sie geben detailliert Auskunft, welche Teile des Unterrichtskonzepts erfolgreich waren und an welchen Stellen Ver ¨anderungen, Anpassungen oder Vertiefungen vorgenommen werden m ¨ussen. Stichprobe Der Stichprobenumfang bei den Arbeitsbl ¨attern variiert sehr stark. Eine Sch ¨ulerin konnte¨uber sechs Wochen von Mitte Mai bis Ende Juni nicht am Unterricht teilnehmen, so dass von ihr aus dieser Zeit keine Ergebnisse vorliegen. Abweichungen von der Stichprobengr ¨oße von 30 Kindern sind in Kapitel 6.4 bei der Darstellung der Auswertungsergebnisse der Unterrichtsmaterialien angegeben. An den beiden Tests zu den informatischen Grundkonzepten, die Ende November und Mitte Februar geschrieben wurden, nahmen alle Kinder teil. Da die Logo-Programme in Paaren erstellt wurden, ist der Stichprobenumfang bei diesen maximal 15. Weniger sind es zum Beispiel dann, wenn Arbeiten nicht abgespeichert wurden. Material Zur¨Uberpr ¨ufung des Lernerfolgs einzelner informatischer Grundkonzepte wurden Unterrichtsmaterialien ausgew ¨ahlt, die diese zum Inhalt hatten und die R ¨uckschl ¨usse auf das Erlernen erm ¨oglichten. Somit wurden die Arbeitsbl ¨atter ausgeschlossen, die im Klassenverband bearbeitet wurden. Auswertung Die Arbeitsbl ¨atter, Logo-Programme und Aufgaben der Tests wurden von der Forscherin in Abh ¨angigkeit der durch die zu ¨uberpr ¨ufenden informatischen Grundkonzepte vorgegebenen speziﬁschen Fragestellungen ausgewertet. 1146 Darstellung und Interpretation der Ergebnisse Die Darstellung und Interpretation der Ergebnisse gliedert sich in f ¨unf Abschnitte. Die Eignung des Gesamtkonzepts zur Vermittlung der informatischen Grundkonzepte in Mathematik, Englisch, Deutsch und Musik wird auf Basis der Ergebnisse der Interviewdaten beurteilt. Die Projektarbeit an der Rittergeschichte wird in einem eigenen Kapitel diskutiert. Darauf folgt die quantitative Auswertung der Tests zu den informatischen Grundkonzepten. Die Ergebnisse werden hinsichtlich ihrer Abh ¨angigkeit vom Geschlecht und den unterschiedlichen F ¨ahigkeiten der Kinder analysiert. Anschließend wird der Lernerfolg der Klasse bez ¨uglich einzelner informatischer Grundkonzepte qualitativ beschrieben. Dies erfolgt auf Basis der Arbeitsbl ¨atter und Logo-Programme und der qualitativ ausgewerteten Teile der Tests. Der letzte Abschnitt besch ¨aftigt sich schließlich mit der Ver¨anderung der Motivationen und Einstellungen der Sch ¨ulerinnen und Sch ¨uler im Umgang mit dem Computer. Abbildung 6.1 gibt einen ¨Uberblick ¨uber die Aspekte der Datenauswertung und ihrer Wechselbeziehungen zur Beurteilung des Gesamtkonzepts. Abbildung 6.1: ¨Uberblick Evaluation 1156 Darstellung und Interpretation der Ergebnisse 6.1 Gesamtkonzept Die Durchf ¨uhrung des Unterrichtsversuchs hat gezeigt, dass Sch ¨ulerinnen und Sch ¨ulern bereits zu Beginn der Sekundarstufe I in einem kontinuierlichen Prozess informatische Grundkonzepte im Fachunterricht vermittelt werden k ¨onnen. Trotz der sehr hohen Anforderungen f ¨ur die Klassenstufe 5 aufgrund •des gleichzeitigen Lernens von Fachinhalten und informatischen Grundkonzepten, •der Umsetzung von Probleml ¨osungen in Logo und •der h ¨auﬁg fachintegrativen und f ¨acher ¨ubergreifenden Lernund Arbeitsformen ist das Konzept an keiner Stelle eingebrochen. Der in Kerres (2001, S. 97) dargestellte Neuigkeitseﬀekt durch den Einsatz der neuen Medien, der schnell abklingt und somit zu einem Nachlassen der Lernmotivation f ¨uhrt, war, anders als von Schrage (1994) und Clark (1985) in einigen Studien kritisiert, nicht ausschlaggebend f ¨ur den Erfolg. Vielmehr wurde deutlich, dass permanenter Computereinsatz im Fachunterricht auch mit dem Ziel m¨oglich ist, informatische Grundkonzepte zu vermitteln. Der Unterricht l ¨auft dann wie in anderen Schulf ¨achern ab. Detaillierte Beschreibungen von St ¨arken und Schw ¨achen des Unterrichtskonzepts werden aus dem Datenmaterial der Interviews der Lehrerinnen als Beobachtende und Sch ¨ulerinnen und Sch ¨uler als Betroﬀene abgeleitet. 6.1.1 Verfahren zur Auswertung der Interviewdaten Zur Auswertung der Interviewdaten der Lehrerinnen und der Sch ¨ulerinnen und Sch ¨uler wurde die induktive Kategorienbildung nach Mayring eingesetzt. Es handelt sich dabei um eine Technik der zusammenfassenden qualitativen Inhaltsanalyse. Dies hat den Vorteil, dass die Kategorien direkt aus dem Material in einem Verallgemeinerungsprozess abgeleitet werden, ohne dass vorher ein Theoriekonzept entwickelt wird, auf das Bezug genommen werden muss (Mayring, 2003, S. 75). Aufgrund der geringen Anzahl von Interviews (drei Lehrerinnen und sechs Sch ¨ulerinnen und Sch ¨uler) wurde auf den Schritt der Revision des Kategoriensystems und die damit verbundene R ¨uckkopplung zur erneuten Bearbeitung des kompletten Ausgangsmaterials verzichtet. Daraus ergibt sich das in Abbildung 6.2 dargestellte Prozessmodell. In der ersten Phase Ziel der Analyse wird die Fragestellung f ¨ur die Auswertung der Interviews pr ¨azisiert. Bei der Deﬁnition des Ausgangsmaterials werden die Interviewdaten und ihre Entstehungssituation beschrieben. Das Material, das Ausgangspunkt der Kategoriendeﬁnition ist, wird durch die Festlegung des Selektionskriteriums in Abh ¨angigkeit der zuvor deﬁnierten Fragestellung bestimmt. Zur Zusammenfassung der Inhalte muss einAbstraktionsniveau festgelegt werden. Bei der lokalen Materialdurcharbeitung und Kategorienformulierung wird das Material Zeile f ¨ur Zeile untersucht. Entspricht eine 1166.1 Gesamtkonzept Ziel der Analyse  Definition des  Ausgangsmaterials  Festlegung des Selektionskriteriums  und des Abstraktionsniveaus  Lokale Materialdurcharbeitung  und Kategorienformulierung  Globale Materialdurcharbeitung  und Kategorienformulierung  Interpretation und Analyse des  entstandenen Kategoriensystems  Abbildung 6.2: Prozessmodell der induktiven Kategorienbildung Aussage einem Selektionskriterium, so wird unter Ber ¨ucksichtigung des Abstraktionsniveaus die erste Kategorie formuliert. Weiter selektierte Textstellen werden entweder in bereits vorhandene Kategorien einsortiert oder sie bilden selbst eine neue Kategorie (Mayring, 2003, S. 76). In dieser Arbeit wurden w ¨ahrend der lokalen Materialdurcharbeitung nur Kategorien innerhalb eines Themenkomplexes gebildet. Bei der globalen Materialdurcharbeitung undKategorienformulierung werden die zusammengeh ¨orenden Kategorien in Analogie zur Revision bei Mayring (2003, S. 75) identiﬁziert, zusammengef¨uhrt und entsprechend erweitert. Allerdings wird das gesamte Ausgangsmaterial nicht noch einmal durchgearbeitet. Zum Abschluss wird das entstandene Kategoriensystem interpretiert und analysiert. Die einzelnen Auswertungsschritte werden im Folgenden erst f ¨ur die Auswertung der Interviews der Lehrerinnen und dann der Sch ¨ulerinnen und Sch ¨uler konkretisiert. Lehrerinnen-Interviews Ziel der Analyse : Aus den Interviewdaten der Lehrerinnen sollten induktiv Aussagen ¨uber •die Qualit ¨at des Gesamtkonzepts (Arbeitsmaterial, Projekt, Unterrichtsformen, f¨acher ¨ubergreifender Ansatz), 1176 Darstellung und Interpretation der Ergebnisse •die Lernergebnisse und Einﬂussfaktoren, •das Sch ¨ulerverhalten im Unterricht und •den Einﬂuss der gegebenen Rahmenbedingungen auf den Unterrichtsversuch abgeleitet werden. Deﬁnition des Ausgangsmaterials : Das Material bestand aus drei Interviews, die die Forscherin mit den Lehrerinnen am Ende des Unterrichtsversuchs durchf ¨uhrte. Grundlage war der Interviewleitfaden aus Anhang E. Die Lehrerinnen konnten aufgrund ihrer Teilnahme an den Fortbildungen (vgl. Kapitel 3.5) und ihren Beobachtungen im Unterricht die Fragen qualiﬁziert beantworten. Die Transkription der Tonbandaufzeichnungen erfolgte durch die Forscherin selbst. Es wurden lediglich die Interviewtexte transkribiert, parasprachliche Elemente wie Pausen oder Stimmlagen jedoch nicht ber ¨ucksichtigt. Festlegung des Selektionskriteriums und des Abstraktionsniveaus : F¨ur die lokale Materialdurcharbeitung der zw ¨olf Bereiche (vgl. Kapitel 5.3.2, Anhang E) wurden folgende Abstraktionsniveaus deﬁniert: •Arbeitsbl ¨atter : Alle Bemerkungen, die Form und Inhalt bewerten •Logo-Mikrowelten : Aussagen bez ¨uglich der Eignung der Mikrowelten f ¨ur die 5. Klassenstufe und ihre Erweiterungsm ¨oglichkeiten •Unterrichtsformen : Bewertung der Aufteilung von Frontalund Arbeitsphasen am Computer und des Arbeitens an theoretischen Konzepten mit und ohne Computer •Projektarbeit : Alle konkreten Charakterisierungen bez ¨uglich des Projektthemas, des Verhaltens der Sch ¨ulerinnen und Sch ¨uler im Projekt, der Projektrahmenbedingungen und der Projektergebnisse •Hausaufgaben : Einsch ¨atzungen bez ¨uglich ihrer Notwendigkeit zur Vermittlung von informatischen Grundkonzepten •Integration in die Schulf ¨acher : Auswirkungen der Vermittlung der informatischen Grundkonzepte auf den Fachunterricht und die Eignung der Verkn ¨upfung der informatischen Grundkonzepte mit konkreten Fachinhalten •F¨acher ¨ubergreifender Unterricht : Aussagen zur f ¨acher ¨ubergreifenden Vermittlung der informatischen Grundkonzepte und der Wiederholung dieser in verschiedenen Fachkontexten •Lernerfolg : Beschreibung der erlernten Inhalte, der Vorund Nachteile f ¨ur einzelne Sch¨ulerinnen und Sch ¨uler, der Einﬂussfaktoren auf das Durchhalteverm ¨ogen der Klasse und der Auswirkungen des Besuchs der Computer AG •Motivation und Ausdauer : Einsch ¨atzung der Motivation und Ausdauer der Sch ¨ulerinnen und Sch ¨uler bei der Vermittlung der informatischen Grundkonzepte und Angabe von beeinﬂussenden Faktoren •Rolle der Forscherin : Bewertung der Forscherin als Lehrerin •Rahmenbedingungen : Konkrete Aussagen ¨uber die Auswirkungen der Rahmenbe1186.1 Gesamtkonzept dingungen (Stundenverteilung, Partnerarbeit am Computer, Aufteilung des Unterrichts in den beteiligten F ¨achern auf zwei Lehrerinnen, fehlende Pr ¨asentationsm ¨oglichkeiten im Klassenzimmer, Einschr ¨ankung auf die Arbeit mit Logo-Systemen etc.) auf den Erfolg des Gesamtkonzepts •Fortf ¨uhrung des Konzepts : Begr ¨undung, warum die Vermittlung der informatischen Grundkonzepte mit Logo-Systemen von den Lehrerinnen nicht fortgesetzt wird und Einsch ¨atzung, ob das Konzept ¨uberhaupt f ¨ur die Klassenstufe 5 geeignet ist. Lokale Materialdurcharbeitung und Kategorienformulierung : Die Forscherin wertete die zw ¨olf Themenbereiche zun ¨achst lokal aus und formulierte Kategorien. Globale Materialdurcharbeitung und Kategorienformulierung : Das gesamte Datenmaterial der Interviews wurde ein zweites Mal durchgearbeitet, um das Kategoriensystem auf Basis von relevanten Aussagen der verschiedenen Themenbereiche zu verdichten. Interpretation und Analyse des entstandenen Kategoriensystems : Das entwickelte Kategoriensystem wurde bez ¨uglich der vier Ziele der Analyse zusammengestellt und¨ubergreifend interpretiert. Sch¨ulerinnenund Sch ¨uler-Interviews Bez¨uglich der Auswertung der Interviews der Sch ¨ulerinnen und Sch ¨uler werden nur die Auswertungsschritte charakterisiert, die sich von denen der Lehrerinnen-Interviews unterscheiden. Ziel der Analyse : Zielsetzung der Interviews war die Erhebung von Daten ¨uber das Unterrichtskonzept aus Sicht der Betroﬀenen. Induktiv sollten dabei Aussagen ¨uber •das Gesamtkonzept (integrierte Unterrichtsform, Arbeitsmaterial, Projektarbeit), •die pers ¨onliche Bedeutung des Unterrichts f ¨ur die Sch ¨ulerinnen und Sch ¨uler, •das Lernen sowohl der Computerbedienung unter Ber ¨ucksichtigung der informatischen Grundkonzepte als auch der Fachinhalte, •das Sch ¨ulerverhalten im Unterricht und •die Eignung von Logo als Denkund Arbeitsmittel gewonnen werden. Deﬁnition des Ausgangsmaterials : Das Material bestand aus Interviewdaten mit drei Sch ¨ulerinnen und drei Sch ¨ulern, die jeweils starke, mittlere und schwache Ergebnisse in den Tests zu den informatischen Grundkonzepten im Laufe des Schuljahrs (vgl. Anhang G) und dem Nachtest zu den informatischen Grundkonzepten am Ende des Unterrichtsversuchs erzielt hatten. Grundlage der Interviews war der Interviewleitfaden in Anhang F. Die Transkription der Tonbandaufzeichnungen der Interviews erfolgte analog zu den Lehrerinnen-Interviews. 1196 Darstellung und Interpretation der Ergebnisse Festlegung des Selektionskriteriums und des Abstraktionsniveaus : Auch der Interviewleitfaden f ¨ur die Sch ¨ulerinnen und Sch ¨uler erforderte durch seinen Aufbau (vgl. Kapitel 5.3.3 und Anhang F) die Deﬁnition von zehn verschiedenen Abstraktionsniveaus f¨ur die Materialdurcharbeitung. •Einstellungen zum Computerunterricht : Aussagen bez ¨uglich der Wichtigkeit des Computerunterrichts und der dort erstellten Arbeiten •Mitarbeit : Eigene Einsch ¨atzung und Begr ¨undung •Vergleich Computerunterricht – Fachunterricht : Einsch ¨atzung des Schwierigkeitsgrads und Aussagen ¨uber Unterschiede •Zusammenarbeit : Charakterisierung der Partnerarbeit an den Computern, der gegenseitigen Hilfestellungen und der Beobachtung der Arbeiten anderer Partner •Arbeitsbl ¨atter : Anmerkungen ¨uber das Lesen und Verstehen •Logo: Vergleichende Aussagen zwischen Imagine Logo und MSW Logo, Logo im Allgemeinen und dem Arbeiten mit anderen Computerprogrammen und Beschreibung der Besonderheiten von Imagine Logo •Ritterprojekt : Charakterisierung der Ver ¨anderungen im Unterricht w ¨ahrend der Arbeit an der Rittergeschichte, empfundene Auswirkungen und Begr ¨undung der geringen Experimentierfreudigkeit bei vorgegebenen Aufgabenstellungen •Lerninhalte : Beschreibung der erlernten informatischen und fachlichen Inhalte •Fortf ¨uhrung des Computerunterrichts : Aussagen ¨uber den Wunsch, den Computerunterricht fortzuf ¨uhren und konkrete Ver ¨anderungsvorschl ¨age •Bedeutung des Computerunterrichts außerhalb der Schule : Darstellungen ¨uber die Thematisierung. Die lokale und globale Materialdurcharbeitung und Kategorienformulierung und die Interpretation der Kategorien erfolgte entsprechend dem Vorgehen bei den Lehrerinnen. Die folgenden Unterkapitel nehmen nur auf die Interviewdaten Bezug, die f ¨ur die Beurteilung des Gesamtkonzepts und speziell des Projektunterrichts relevant waren. Die Aussagen der Lehrerinnen zum Bereich Rolle der Forscherin lieferten zum Beispiel keine wesentlichen Informationen und wurden aus diesem Grund vernachl ¨assigt. 6.1.2 Aspekte des Gesamtkonzepts Eignung f ¨ur Klassenstufe 5 Aus Sicht aller Lehrerinnen ist die Klassenstufe 5 prinzipiell zur Vermittlung der informatischen Grundkonzepte geeignet. Ihrer Meinung nach sind die informatischen Grundkonzepte f ¨ur die Sch ¨ulerinnen und Sch ¨uler nicht zu schwierig. Sie argumentierten, dass diejenigen, die sie in Klasse 5 nicht verstehen, sie auch zu einem sp ¨ateren Zeitpunkt nicht lernen w ¨urden. Die Mathematiklehrerin, die eine ¨Uberforderung bei wenigen Kindern sah, bezog diese auf die sehr hohen kognitiven Leistungen des geistigen Vorweg1206.1 Gesamtkonzept nehmens von Abl ¨aufen beim Programmieren. Sie wies außerdem auf die Schwierigkeit hin, dass die Kinder in Klasse 5 mit sehr viel Neuem konfrontiert w ¨urden. Aus diesem Grund nannte sie Klasse 6 und 7 als Alternative f ¨ur einen Einstieg in die informatischen Grundkonzepte. Vergleich Computerund Fachunterricht Auch die Sch ¨ulerinnen und Sch ¨uler sch ¨atzten die Anforderungen im Unterricht zu den informatischen Grundkonzepten als nicht zu hoch ein (vgl. Tabelle 6.1). Drei von ihnen beurteilten den Unterricht sogar als einfacher als den Fachunterricht. Nur ein Sch ¨uler fand ihn schwieriger. Dies stand im Widerspruch zu den Aussagen von f ¨unf Sch ¨ulerinnen und Sch ¨ulern, dass sie die Inhalte nicht sofort verstanden h ¨atten. Unterschiede im III, 1) Fandest du den Computerunterricht schwerer als den normalen Unterricht in den F ¨achern Mathematik, Deutsch, Englisch und Musik?Anzahl schwerer 1 leichter 3 abh¨angig vom Fach 1 widerspr ¨uchliche Aussage 1 Tabelle 6.1: Schwierigkeitsgrad des Computerund Fachunterrichts im Vergleich (6 Sch ¨ulerinnen und Sch ¨uler) Computerund Fachunterricht stellten die Kinder vor allem im Bereich der Rahmenbedingungen (R ¨aume, B ¨ucher, Hausaufgaben, Klassenarbeiten), der Arbeitsformen (Arbeit am Computer, Bearbeitung von Arbeitsbl ¨attern) und beim Schreiben fest. Diese deuten jedoch auf keinerlei ¨Uberforderung hin. Auch die von den Kindern genannten fachspeziﬁschen Unterschiede (vgl. Tabelle 6.2) best ¨atigen diese Annahme. Allein ein Sch ¨uler hatte sprachliche Schwierigkeiten bei der Bedienung des englischen Imagine Logo Systems. III, 2) Was war im Computerunterricht eigentlich anders als im normalen Unterricht?Anzahl kein richtiges Englisch 1 in Imagine Logo nur englische Kommunikation m ¨oglich; die Englischlehrerin spricht auch mal Deutsch1 weniger Schreiben 1 keine Arbeit mit Zahlen 1 Umgang mit dem Computer ist f ¨ur sp ¨ater wichtig, Englisch nicht 1 keine Angabe 1 Tabelle 6.2: Computerund Fachunterricht im Vergleich (6 Sch ¨ulerinnen und Sch ¨uler) Das Arbeitstempo beim L ¨osen der Aufgaben beurteilten die Sch ¨ulerinnen und Sch ¨uler als angemessen. Insbesondere zur F ¨orderung des explorativen Lernens mit Logo stand 1216 Darstellung und Interpretation der Ergebnisse ihnen gen ¨ugend Zeit zur Verf ¨ugung, so dass ein Experimentieren m ¨oglich war. Zwei von ihnen h ¨atten teilweise auch schneller arbeiten k ¨onnen. Unterrichtsformen Frontalphasen zur Einf ¨uhrung theoretischer Konzepte waren nach Ansicht der Lehrerinnen notwendig. Sie m ¨ussten durch eine bessere Mischung mit Arbeitsphasen am Computer noch verk ¨urzt werden. Insgesamt ¨außerten alle Lehrerinnen den Wunsch, den Anteil der praktischen Arbeit zu erh ¨ohen, um den Sch ¨ulerinnen und Sch ¨ulern noch mehr Zeit zum Ausprobieren und Experimentieren zur Verf ¨ugung zu stellen. Im Zusammenhang III, 1) Der Computerunterricht war h ¨auﬁg in Frontalphasen und in Gruppenarbeit am Computer aufgeteilt. Wie beurteilen Sie diese Aufteilung?Anzahl bessere Mischung, mehr Methodenwechsel 1 mehr praktische Arbeit am Computer 3 k¨urzere Frontalphasen 1 III, 2) Der Computerunterricht fand f ¨ur die Sch ¨ulerinnen und Sch ¨uler nicht nur am Computer statt. Wie beurteilen Sie die Aufteilung zwischen Computerarbeitsphasen und Arbeitsphasen ohne Computer?Anzahl weniger Theorie 1 k¨urzere Theoriephasen 1 methodische Kniﬀe in Theoriephasen st ¨arker ber ¨ucksichtigen 2 Tabelle 6.3: Frontalphasen, Partnerarbeit am Computer und Theorieunterricht (3 Lehrerinnen, Mehrfachnennungen m ¨oglich) damit standen die Aussagen zum Theorieunterricht. Nach Meinung der Deutschlehrerin sollte er insgesamt eingeschr ¨ankt werden. Die Mathematiklehrerin forderte zumindest eine Verk ¨urzung der zusammenh ¨angenden Theoriephasen und zwei der Lehrerinnen w¨unschten sich eine st ¨arkere Ber ¨ucksichtigung methodischer Tricks. Die Trennung von theoretischen und praktischen Arbeiten bzw. Frontalunterricht und Partnerarbeit am Computer wurde nach Aussage der Mathematiklehrerin durch die Arbeit in zwei verschiedenen Unterrichtsr ¨aumen noch verst ¨arkt. “Dann war das immer so f ¨ur viele Sch ¨uler einfach so, im Klassenzimmer, da ist halt das ¨Ubel, da m ¨ussen wir jetzt wieder Theorie machen und dann gehen wir in den Computerraum und da wird’s dann interessant. Dort d ¨urfen wir was Sch ¨ones machen.“ (LM, S. 6, 37 ﬀ.1) Es ist also sinnvoll, dass der gesamte Unterricht im Computerraum stattﬁndet, damit den Sch ¨ulerinnen und Sch ¨ulern die Grenzen und ¨Uberg ¨ange zwischen den theoretischen und praktischen Teilen der Arbeit nicht so deutlich werden. Dies erfordert, dass die 1Erl¨auterung zur Codierung: Die drei Lehrerinnen wurden mit LM (Mathematik), LE (Englisch) und LD (Deutsch und Musik) abgek ¨urzt. Die Codierung besteht aus der Bezeichnung der Lehrerin, gefolgt von der Seitenzahl und den Zeilennummern im Transkript des entsprechenden Interviews. 1226.1 Gesamtkonzept schwierigen und h ¨auﬁg zeitintensiven Wechsel zwischen Frontalphasen und Arbeiten am Rechner mit Hilfe von Ritualen konsequent einge ¨ubt werden. F¨acher ¨ubergreifender Ansatz Das Design des Unterrichtskonzepts zur Vermittlung der informatischen Grundkonzepte in Mathematik, Englisch, Deutsch und Musik war f ¨acher ¨ubergreifend konzipiert. Wie aus Tabelle 6.4 hervorgeht, fand der Unterricht aus der Perspektive der Lehrerinnen nicht immer f ¨acher ¨ubergreifend statt. Interessanterweise wurde von der Deutschlehrerin der Unterricht zu den informatischen Grundkonzepten als Anker f ¨ur eine Abstimmung der F ¨acher angegeben. ”Also ich denk, das war eigentlich auch so bisschen der Aufh ¨anger, dass wir da, ja, dass wir einfach uns abgestimmt haben, damit man das dann auch im Computer dann machen kann.“ (LD, S. 10, 30 f.) VII, 1) Wurden die Inhalte f ¨acher ¨ubergreifend vermittelt oder liefen die Stunden in den einzelnen F ¨achern nebeneinander her?Anzahl zu Beginn des Schuljahrs nicht f ¨acher ¨ubergreifend 1 teilweise nicht f ¨acher ¨ubergreifend 1 f¨acher ¨ubergreifend 1 Aufh ¨anger f ¨ur die Abstimmung zwischen den F ¨achern 2 VII, 1a) K ¨onnen Sie Beispiele angeben? Anzahl s-Genitiv 1 Grammatik 1 Bruchrechnen, Noten 2 Ritterprojekt 2 Befehle 1 Maschinendarstellung von Funktionen 1 Tabelle 6.4: F ¨acher ¨ubergreifender Unterricht (3 Lehrerinnen, Mehrfachnennungen m¨oglich) Die Bef ¨urchtung, die Kinder durch mehrfaches Wiederholen der informatischen Inhalte in den verschiedenen Fachkontexten zu langweilen, wurde von den Lehrerinnen nicht best¨atigt. Arbeitsmaterialien Da im Unterricht ohne Buch gearbeitet wurde, erhielten die Sch ¨ulerinnen und Sch ¨uler sehr viele Arbeitsbl ¨atter. Ihren klaren Aufbau bewerteten alle Lehrerinnen sehr positiv. Allerdings waren die Bl ¨atter ihrer Meinung nach zu lang, enthielten zu viel Text und waren manchmal in einer f ¨ur Kinder schwierig zu verstehenden Sprache formuliert. Dies best ¨atigten vor allem die beiden schw ¨acheren Sch ¨ulerinnen und Sch ¨uler, die die Arbeitsbl ¨atter nicht gerne gelesen haben und eigentlich schneller am Computer h ¨atten arbeiten wollen. Bei den anderen war dies nicht der Fall. Sie sch ¨atzten die Arbeitsbl ¨atter 1236 Darstellung und Interpretation der Ergebnisse als Nachschlagewerke, um Inhalte selbstst ¨andig nachzulesen. Die beiden st ¨arksten Kinder gaben außerdem an, dass die Arbeitsbl ¨atter f ¨ur sie verst ¨andlich gewesen seien. Die Arbeitsbl ¨atter lassen sich in vier Gruppen einteilen: •Bearbeitung im Klassenverband •selbstst ¨andiges Durcharbeiten •selbstst ¨andiges Durcharbeiten mit Angabe von Punkten •Erarbeitung neuer Inhalte und gleichzeitiger Test. Die Punkte, die den Schwierigkeitsgrad der Aufgaben beschrieben und einen Anreiz f¨ur die Sch ¨ulerinnen und Sch ¨uler darstellen sollten, wurden von zwei Lehrerinnen als ¨uberﬂ ¨ussig angesehen. Sie waren der Meinung, dass die Kinder die Punkte ¨uberhaupt nicht wahrgenommen h ¨atten (siehe Tabelle 6.5). Die Mathematiklehrerin bezeichnete I, 2) Es wurden vier verschiedene Formen von Arbeitsbl ¨attern verwendet. Welche Formen haben sich bew ¨ahrt?Anzahl Mischen verschiedener Bearbeitungsformen 2 Punkte nicht notwendig 2 selbstst ¨andiges Durcharbeiten 1 Erarbeitung neuer Inhalte und gleichzeitiger Test 1 Tabelle 6.5: Verschiedene Bearbeitungsformen der Arbeitsbl ¨atter (3 Lehrerinnen, Mehrfachnennungen m ¨oglich) das eigenst ¨andige Erarbeiten der Inhalte mit integriertem Test als optimale L ¨osung. Ziel kann es ihrer Meinung nach zwar nicht sein, die Kinder durch Notendruck zur Arbeit anzuspornen, gleichzeitig sah sie es aber als eine sehr wirkungsvolle Methode an. Die Englischlehrerin pr ¨aferierte das selbstst ¨andige Durcharbeiten der Arbeitsbl ¨atter. Da keine Bearbeitungsform besonders hervorgehoben wurde, scheint das von zwei Lehrerinnen vorgeschlagene Mischen verschiedener Formen am sinnvollsten. Die eingesetzten Mikrowelten beschrieben die Lehrerinnen als sehr passend, oﬀen, interessant und motivierend. Sie waren ihrer Ansicht nach aber nicht mit kommerziellen Programmen vergleichbar. Die Mathematikund Deutschlehrerin ¨außerten sich auch ¨uber den ausschließlichen Einsatz von Logo-Systemen. Die Einschr ¨ankung vermied ihrer Meinung nach eine ¨Uberforderung der Sch ¨ulerinnen und Sch ¨uler. Erstere war davon¨uberzeugt, dass sich die Kinder nach einem Jahr Unterricht zu den informatischen Grundkonzepten leicht in g ¨angige Programme einarbeiten werden k ¨onnen. Die andere widersprach sich dahingehend, dass sie es auch gut gefunden h ¨atte, mit weiteren Programmen zum Versenden von E-Mails, zur Erzeugung von Notentabellen und Schreiben von Texten zu arbeiten. Erfolg des Konzepts Ein Indiz f ¨ur den Erfolg des Gesamtkonzepts ist die Tatsache, dass die Mehrheit der 1246.1 Gesamtkonzept interviewten Sch ¨ulerinnen und Sch ¨uler weiterhin gerne am Unterricht zu den informatischen Grundkonzepten teilnehmen w ¨urde. Diese Kinder bedauerten das Ende sogar, da sie im Computerunterricht mehr Spaß als im Fachunterricht hatten. Lediglich die beiden Schw ¨acheren waren froh, dass der Computerunterricht zu Ende war. Das M ¨adchen wird allerdings die Projektarbeit vermissen. Aus den in Tabelle 6.6 genannten ¨Anderungsw ¨unschen k ¨onnen keine grunds ¨atzlichen Ver¨anderungen des Konzepts abgeleitet werden. Drei Sch ¨ulerinnen und Sch ¨uler betonten, dass ihnen der Unterricht gut gefallen habe. Ein Kind w ¨unschte sich eine Reduzierung des Stundenumfangs. Ein weiterer Sch ¨uler wollte nicht mehr an einem Ritterprojekt arbeiten. Bei dieser Aussage ging aus den Interviewdaten nicht hervor, ob damit das Thema oder die Projektarbeit an sich angesprochen wurde. Da die Projektarbeit von den anderen Mitsch ¨ulerinnen und Mitsch ¨ulern und den Lehrerinnen ansonsten sehr positiv bewertet wurde und auch die Arbeitsergebnisse der Kinder teilweise herausragend waren, wird die Projektarbeit ein wesentlicher Bestandteil des Gesamtkonzepts bleiben. Ein weiterer Wunsch bestand darin, l ¨anger an einer Sache arbeiten zu d ¨urfen. Dies widersprach den Aussagen bez ¨uglich des Arbeitstempos im Unterricht. Eine weitere ¨Anderung betraf neue Spiele. Hier dachte der Sch ¨uler sicherlich an die Ausweitung der Programmierung von Spielen. Dass nur ganz wenige Lieder im Laufe des Schuljahrs gesungen wurden, lag an der in Kapitel 3.2 dargestellten Besonderheit der Projektstunde in Klassenstufe 5, so dass die Klasse keinen regul ¨aren Musikunterricht hatte. IX, 2a) Stell dir vor, ich mache im n ¨achsten Schuljahr in deiner Klasse den Computerunterricht so wie in diesem Schuljahr weiter. Was sollte dann anders sein?Anzahl weniger Unterrichtsstunden in der Woche 1 kein Ritterprojekt 1 l¨anger an einer Sache arbeiten und trotzdem Abwechslung 1 neue Spiele 1 mehr Lieder singen 1 nichts 1 Tabelle 6.6: ¨Anderungsw ¨unsche f ¨ur den Computerunterricht (6 Sch ¨ulerinnen und Sch¨uler) Zusammenfassung Nach Ansicht der Lehrerinnen, Sch ¨ulerinnen und Sch ¨uler ist das Gesamtkonzept f ¨ur die Klassenstufe 5 geeignet. Der Unterricht wird von den Kindern nicht schwieriger als der Fachunterricht wahrgenommen und stellt keine zu hohen Anforderungen. Die Theoriephasen und der Frontalunterricht m ¨ussen gek ¨urzt und methodisch abwechslungsreicher gestaltet werden. F ¨acher ¨ubergreifende Aspekte sollten vor allem zu Beginn des Schuljahrs in den k ¨urzeren Unterrichtseinheiten st ¨arker herausgearbeitet werden. Die f ¨ur den 1256 Darstellung und Interpretation der Ergebnisse Unterricht konzipierten Arbeitsbl ¨atter bewerten die Lehrerinnen positiv. Sie weisen auf ihren klaren Aufbau hin und heben die Mischung der verschiedenen Bearbeitungsformen hervor. Teilweise m ¨ussen noch Formulierungen angepasst und kleinere Einheiten gebildet werden. Obwohl die Mikrowelten nicht mit kommerziellen Programmen vergleichbar sind, sind sie f ¨ur den Unterricht geeignet. Der Erfolg des Gesamtkonzepts kann auf Basis der nur unwesentlichen ¨Anderungsw ¨unsche der Sch ¨ulerinnen und Sch ¨uler und der im folgenden Kapitel dargestellten Lernerfolge begr ¨undet werden. 6.1.3 Lernerfolge allgemein Fachinhalte Trotz der verk ¨urzten Unterrichtszeit f ¨ur die Vermittlung der reinen Fachinhalte durch die zus ¨atzlichen informatischen Grundkonzepte konnten nach Angaben der Lehrerinnen alle Fachinhalte vermittelt werden. Allerdings musste gegen Ende etwas schneller gearbeitet und die ¨Ubungszeit insgesamt reduziert werden. Dies kann nach Aussage der Englischlehrerin in Jahrgangsstufe 6 durch Wiederholungen ausgeglichen werden. Sie hob auch eine positive R ¨uckwirkung des Unterrichts zu den informatischen Grundkonzepten auf ihr eigenes Fach hervor. Sie nannte zus ¨atzliche ¨Ubungen, die Vertiefung der Kenntnisse und eine Verdeutlichung der grammatikalischen Strukturen. Geeignete Verbindungen zwischen den informatischen Grundkonzepten und Fachinhalten sahen die Lehrerinnen in der Grammatik in Deutsch und Englisch und beim Thema Spiegelung und Parallelogramme in Mathematik. Hier lassen sich ihrer Meinung nach die informatischen Grundkonzepte optimal in das Fach integrieren. Auch die Sch ¨ulerinnen und Sch ¨uler erkannten, dass bei der Arbeit mit dem Computer Inhalte aus den F ¨achern erlernt wurden (vgl. Tabelle 6.7). Interessant ist, dass sie sowohl im Fachbereich Mathematik als auch Deutsch Programmablaufpl ¨ane nannten. Hier nahmen sie anscheinend nicht wahr, dass es sich bei Programmablaufpl ¨anen um allgemeine informatische Beschreibungsmittel und nicht um Inhalte des Fachs handelte. Gefragt nach den Inhalten, die ihnen im Computerunterricht besonders wichtig waren, hoben drei Kinder Themen aus dem Bereich Musik hervor. Dies best ¨atigte, dass paralleler Fachunterricht notwendig ist. Weiter nannte eine Sch ¨ulerin das Thema Potenzen aus Mathematik. F ¨ur einen Sch ¨uler war eine Unterrichtsstunde wichtig, in der Dateien und Verzeichnisse behandelt wurden. Sie beinhaltete zwar die informatischen Grundkonzepte Hierarchien undrekursive Datenstrukturen , der Sch ¨uler sah jedoch die praxisorientierte Anwendung, die ihm beim Arbeiten mit dem Computer helfen wird. Informatische Grundkonzepte und Computerbedienung Die Sch ¨ulerinnen und Sch ¨uler konnten nicht nach informatischen Grundkonzepten gefragt werden, die sie im Schuljahr erlernt hatten, da diese zum großen Teil nicht begriﬄich eingef ¨uhrt worden waren. Aus diesem Grund mussten sie ¨uber ihre Lernerfolge bez ¨uglich der Bedienung des Computers berichten (siehe Tabelle 6.8). 1266.1 Gesamtkonzept Mathematik Anzahl R¨omische Zahlen 2 Potenzen 3 Schweizer Franken 1 Fadenbilder 1 Programmablaufpl ¨ane 1 Musik Anzahl Noten 5 Takt, Taktart 1 Rhythmus 1 Melodie 1Deutsch Anzahl Satzbildung 2 Schreiben 3 Rechtschreibung 2 Geheimcode 1 Programmablaufpl ¨ane 2 Englisch Anzahl W¨orter 5 nichts 1 Tabelle 6.7: Lernerfolge bez ¨uglich der Fachinhalte im Computerunterricht (6 Sch ¨ulerinnen und Sch ¨uler, Mehrfachnennungen m ¨oglich) VIII, 1) Was hast du im Computerunterricht ¨uber den Computer und seine Bedienung gelernt? Erz ¨ahl mir ein paar Beispiele.Anzahl MSW Logo 3 Imagine Logo 2 Grundtechniken ( ¨oﬀnen, schreiben, speichern von Programmen) 3 Gestaltung 2 Programmierung 1 F¨ahigkeiten des Computers einsch ¨atzen 1 Bedienung eines Laptops 2 mit dem Computer umgehen 1 Tabelle 6.8: Lernerfolge bez ¨uglich des Computers und seiner Bedienung (6 Sch ¨ulerinnen und Sch ¨uler, Mehrfachnennungen m ¨oglich) Die schw ¨acheren Sch ¨ulerinnen und Sch ¨uler nannten sehr konkrete Dinge wie MSW Logo und Imagine Logo. Im Gegensatz dazu gaben die leistungsst ¨arkeren Kinder allgemeine Grundtechniken wie das ¨Oﬀnen, Schreiben und Speichern von Programmen an. Auch der kreative Umgang mit dem Computer wurde durch die Gestaltung hervorgehoben. Informatische Inhalte wurden zweimal angesprochen. Ein Kind erw ¨ahnte die Programmierung und ein anderes glaubte, durch den Unterricht die F ¨ahigkeiten des Computers besser einsch ¨atzen zu k ¨onnen. Werden unter Programmierung Inhalte wie Algorithmen , Befehle ,Funktionen ,Abstraktion ,Modularisierung etc. subsumiert, so haben beide die intendierten Lernziele des Unterrichts erreicht. Allgemeine F ¨ahigkeiten Zentral f ¨ur die Auswertung des Unterrichtskonzepts waren die Aussagen der Lehrerinnen ¨uber die Lernergebnisse. Sie nannten F ¨ahigkeiten wie Vorausdenken ,Strukturieren ,An1276 Darstellung und Interpretation der Ergebnisse wenden von Schemata ,genaues Arbeiten ,Strategien zur Bew ¨altigung von Frustrationen undVerstehen von Fehlermeldungen . Der Erfolg des Unterrichtskonzepts wird aufgrund dieser Feststellungen best ¨atigt. Die Kompetenzen sind nicht allein f ¨ur die Arbeit mit dem Computer wichtig, sondern in vielen Bereichen hilfreich. Die F ¨ahigkeit zu strukturieren unterst ¨utzt das Erschließen und Darstellen von Zusammenh ¨angen eines Inhaltsbereichs. Informationen k ¨onnen leichter organisiert und geordnet werden. Dies ist sowohl f ¨ur das eigene Lernen als auch zur Aufbereitung von Informationen f ¨ur andere sinnvoll. Die immer st ¨arkere Vernetzung der Welt und die damit wachsende Entscheidungskomplexit¨at l¨asst die Bedeutung des vorausschauenden Denkens zunehmen. H ¨auﬁg m ¨ussen unterschiedliche Vorgehensweisen analysiert, die sich aus ihnen ergebenden Konsequenzen abgewogen und auf Basis der Ergebnisse Entscheidungen getroﬀen werden. Auf der anderen Seiten kann das Anwenden von Schemata von Routinet ¨atigkeiten entlasten. Genaues Arbeiten spielt in allen Bereichen des Lebens eine Rolle. In der Schule und im Berufsleben m ¨ussen Aufgabenstellungen richtig erfasst und pr ¨azise gel ¨ost werden. Gleiches gilt f¨ur die Frustrationstoleranz. Permanent werden Sch ¨ulerinnen und Sch ¨uler mit Herausforderungen konfrontiert, die es zu bew ¨altigen gilt. In der Schule werden sie dabei noch sehr stark von den Lehrerinnen und Lehrern betreut und motiviert. Im Berufsleben sind sie auf sich selbst gestellt. Wichtig sind dann Strategien, mit denen der sich bei Schwierigkeiten entwickelnde Frust abgebaut werden kann. Allein das genannte Verst ¨andnis von Fehlermeldungen bezieht sich auf den Umgang mit dem Computer. Bei den ersten f¨unf Punkten handelt es sich um Schl ¨usselqualiﬁkationen, die den in den Bildungsstandards f ¨ur Informationstechnische Grundbildung beschriebenen allgemeinen F ¨ahigkeiten (vgl. Kapitel 2.2.2) zugeordnet werden k ¨onnen. Im hier vorgestellten Unterrichtskonzept bleibt es allerdings im Gegensatz zu den Bildungsstandards nicht oﬀen, unter welchen konkreten Bedingungen diese Schl ¨usselqualiﬁkationen gef ¨ordert werden. Entscheidend ist eine kontinuierliche, ¨uber einen l ¨angeren Zeitraum hin stattﬁndende Vermittlung der informatischen Grundkonzepte in systematischen Lernprozessen. Zus ¨atzlich muss noch folgender Aussage der Englischlehrerin Beachtung geschenkt werden: ”Ja und sie haben wohl einen Grundstock, der ihnen hoﬀentlich bis ans Ende ihrer Schulzeit hier reicht.“ (LE, S. 8, 6 f.) Da die Informationstechnische Grundbildung an Realschulen h ¨auﬁg als Anwendungsund Produktschulung durchgef ¨uhrt wird, nimmt die Lehrerin an, dass die informatischen Grundkonzepte eine Basis f ¨ur das Kennenlernen von verschiedenen Programmen sei. Dies unterst ¨utzt die These, dass auch in einem benutzerorientierten Unterricht grundlegende und allgemeine informatische Konzepte vermittelt werden m ¨ussen. F¨orderung und Benachteiligung Sehr unterschiedlich waren die Aussagen der Lehrerinnen, welche Kinder von der Unterrichtskonzeption proﬁtierten und welche durch sie benachteiligt wurden. Die Mathematiklehrerin sch ¨atzte die Situation f ¨ur alle als vorteilhaft ein. Die anderen beschr ¨ankten es auf gute Sch ¨ulerinnen und Sch ¨uler, auf Kinder mit großen Vorkenntnissen oder 1286.1 Gesamtkonzept diejenigen, die gewissenhaft veranlagt waren. Auf der anderen Seite reichte das Spektrum der Benachteiligten von niemandem, ¨uber Kinder mit Konzentrationsschw ¨achen oder schlechtem abstrakten Denkverm ¨ogen bis zu Sch ¨ulerinnen und Sch ¨ulern, die nicht genau arbeiten konnten. Auch sie haben bis an das Schuljahresende durchgehalten. Ausschlaggebend daf ¨ur waren nach Meinung der Lehrerinnen verschiedene Gr ¨unde. Teilweise waren die Eltern sehr daran interessiert, dass ihre Kinder den Umgang mit dem Computer erlernten, so dass sie sie von der Wichtigkeit des Unterrichts ¨uberzeugten. Andere Sch¨ulerinnen und Sch ¨uler waren aufgrund ihres eigenen Interesses an den Inhalten sehr motiviert. Nach Ansicht der Deutschlehrerin war es manchmal auch die Fachlehrerin, die im Unterricht mit anwesend war, da sie die Autorit ¨atsperson war, die die Kinder beurteilte. Als weiterer Grund f ¨ur das Durchhalteverm ¨ogen wurde von der Englischund Deutschlehrerin die Computer AG genannt, da die Kinder dort freier an eigenen Themen arbeiten konnten. Eine versprochene Belohnung am Ende des Schuljahrs f ¨ur die Kinder, die ihre Leistungen bez ¨uglich der informatischen Grundkonzepte besonders steigern konnten, sah die Englischlehrerin mit als ausschlaggebend an. Zuletzt nannte die Mathematiklehrerin noch die M ¨oglichkeit, etwas anderes tun zu d ¨urfen, oder eben auch eine fehlende Alternativm ¨oglichkeit. Computer AG Die Mathematikund Deutschlehrerin stimmten darin ¨uberein, dass der Besuch der freiwilligen Computer AG wegen der zus ¨atzlichen ¨Ubungszeit Vorteile f ¨ur den Unterricht hatte (siehe Tabelle 6.9). Erstere behauptete, dass Inhalte in der Computer AG manchmal schon fr ¨uher eingef ¨uhrt worden seien. Dies geschah bei konkretem Nachfragen der Sch ¨ulerinnen und Sch ¨uler. Inhaltlich handelte es sich um technische Fragen zur Bedienung des Logo-Systems und einige Logo-Befehle und nicht um informatische Grundkonzepte. Richtig ist sicherlich, dass das Engagement vieler Kinder, die an der Computer AG teilnahmen, auch im regul ¨aren Unterricht gr ¨oßer war. Dies lag nach Ansicht der Englischlehrerin jedoch nicht an der Computer AG an sich, sondern an der hohen Eigenmotivation der Kinder. Obwohl die Sch ¨ulerinnen und Sch ¨uler w ¨ahrend des VIII, 5) Konnten Sie beobachten, dass die Sch ¨ulerinnen und Sch ¨uler, die zus ¨atzlich die Computer AG besuchten, einen Vorteil im normalen Computerunterricht hatten? In welchen Bereichen hatten sie Vorteile?Anzahl die¨Ubung 2 vorher eingef ¨uhrte Inhalte 1 pers¨onlicher Einsatz der Sch ¨ulerinnen und Sch ¨uler 1 Tabelle 6.9: Vorteile durch den Besuch der Computer AG (3 Lehrerinnen, Mehrfachnennungen m ¨oglich) Unterrichtsversuchs vor allem bei der Bearbeitung der Aufgaben am Computer ihre Zeit frei und selbstbestimmt gestalten konnten, forderte die Englischlehrerin, den Anteil des Ausprobierens und Experimentierens zu erh ¨ohen, damit vor allem auch die Kinder, die 1296 Darstellung und Interpretation der Ergebnisse die Computer AG nicht besuchten, mehr M ¨oglichkeiten zum praktischen ¨Uben h ¨atten. Wichtig war ihr dabei das Verst ¨andnis und nicht das Entstehen von Produkten. ”Man m ¨usste halt auch mehr Zeit haben und nicht einfach denken, ha ja, es muss doch was bei rauskommen, die Sch ¨uler m ¨ussen das verstehen.“ (LE, S. 10, 30 f.) Zusammenfassung Obwohl im Unterricht zus ¨atzlich an den informatischen Grundkonzepten gearbeitet wird, k¨onnen alle Fachinhalte der Klassenstufe 5 vermittelt werden. Im Englischunterricht unterst¨utzt sogar die Besch ¨aftigung mit den informatischen Grundkonzepten das Erlernen grammatikalischer Strukturen. Diese werden den Sch ¨ulerinnen und Sch ¨ulern mit Hilfe der verschiedenen informatischen Beschreibungsmittel deutlicher. Aus Sicht der Lehrerinnen lernen die Kinder außerdem das Vorausdenken, das Strukturieren, das Anwenden von Schemata, das genaue Arbeiten, Strategien zur Bew ¨altigung von Frustrationen und das Verstehen von Fehlermeldungen. Da es sich hier um Schl ¨usselqualiﬁkationen handelt, die nicht allein f ¨ur eine informationstechnische Grundbildung wichtig sind, sondern in allen Bereichen sowohl in der Schule als auch im sp ¨ateren Beruf eine enorme Bedeutung haben, wird der Eﬀekt des Unterrichtskonzepts best ¨atigt. Wichtig f¨ur diesen Erfolg ist die ¨uber ein Schuljahr stattﬁndende Arbeit an den informatischen Grundkonzepten, die systematisch eingef ¨uhrt und in unterschiedlichen Fachkontexten wiederholt werden. Eine Benachteiligung durch das Unterrichtskonzept sehen die Lehrerinnen u.a. f ¨ur Kinder mit schlechtem Abstraktionsverm ¨ogen. Diesen Kindern m ¨usste insgesamt mehr Zeit zur Verf ¨ugung gestellt werden, damit sie das abstrakte Denken l¨anger an einfachen Beispielen ¨uben k ¨onnten. 6.1.4 Verhalten der Sch¨ ulerinnen und Sch¨ uler im Unterricht Weitere wichtige Indikatoren zur Beurteilung des Gesamtkonzepts sind die Motivation und Ausdauer, die Bedeutung, die der Unterricht und die Arbeiten f ¨ur die einzelnen Sch¨ulerinnen und Sch ¨uler im Laufe des Schuljahrs hatten, und die Kooperation der Kinder untereinander. Motivation Die Lehrerinnen unterschieden zwischen positiven und negativen Motivationsfaktoren, die sich im Laufe des Schuljahrs ¨anderten. Als positive Faktoren wurden die M ¨oglichkeit, etwas f ¨ur das Leben zu lernen, die Arbeit am Computer, das Gef ¨uhl, etwas Neues zu machen, Freude und Interesse genannt. Dem wurden von der Mathematikund Englischlehrerin zum Beispiel die Haltung eines Elternpaares gegen ¨ubergestellt, die dem Forschungsprojekt lange Zeit sehr ablehnend gegen ¨uberstanden. Dies wirkte sich auf das Kind dahingehend aus, dass es sich am Unterricht nicht beteiligte. Nach Meinung 1306.1 Gesamtkonzept der Englischlehrerin hatte auch die fehlende Vergabe von Noten einen negativen Einﬂuss auf die Motivation. ”[...] die Idee, dass es daf ¨ur keine Noten gibt und deshalb man sich da auch nicht anstrengen musste, dass das alles auch freiwillig ist.“ (LE, S. 10, 6 f.) Außerdem wurden noch der Theorieunterricht, die fehlenden Vorstellungsm ¨oglichkeiten, mangelnde Konzentrationsf ¨ahigkeiten und eine zu geringe Anerkennung der Leistungen durch die Forscherin genannt. Bis auf die fehlende Notenvergabe und den Theorieunterricht bezogen sich die negativen Einﬂussfaktoren lediglich auf einzelne Sch ¨ulerinnen und Sch¨uler und k ¨onnen nicht verallgemeinert werden. Die Kinder selbst wurden nicht nach der Motivation, sondern nach ihrer Mitarbeit im Unterricht gefragt. Insgesamt beurteilten sie diese eher schlecht (siehe Tabelle 6.10). II, 1) Hast du im Computerunterricht gut mitgearbeitet? Anzahl schlecht 2 mittelm ¨aßig 3 gut 1 Tabelle 6.10: Mitarbeit im Unterricht (6 Sch ¨ulerinnen und Sch ¨uler) Das Fehlen von Noten spielte hierbei keine Rolle. Allein das M ¨adchen mit den besten Leistungen bez ¨uglich der informatischen Grundkonzepte gab an, dass es sich bei der Vergabe von Noten noch mehr angestrengt h ¨atte. Als negative Einﬂussfaktoren auf die Mitarbeit nannten die Kinder fehlende Motivation und Desinteresse am Unterricht. Die negative Beurteilung wurde von zwei Kindern auch auf Verst ¨andnisschwierigkeiten zur¨uckgef ¨uhrt. Im Zusammenhang mit den in Kapitel 6.1.2 beschriebenen Schwierigkeiten mit neuen Unterrichtsinhalten k ¨onnte die tendenziell schlechte Beurteilung der Mitarbeit gr ¨oßtenteils auf mangelndes Verst ¨andnis zur ¨uckgef ¨uhrt werden. Da die Motivation nicht unbedingt von den Fachinhalten oder der Lehrperson abh ¨angig sein muss, sondern aus einer Haltung der Sch ¨ulerinnen und Sch ¨uler gegen ¨uber Schule und Unterricht im Allgemeinen resultieren kann, wurden die Lehrerinnen noch zu Unterschieden bez ¨uglich der Motivation im Unterricht zu den informatischen Grundkonzepten und dem Fachunterricht gefragt. Zwei von ihnen sahen hier keine Unterschiede. Die Deutschlehrerin hob zweimal hervor, dass die Motivationsunterschiede nicht von der Lehrperson abh ¨angig seien, sondern individuelle Gr ¨unde ausschlaggebend w ¨aren. Als Beispiel nannte sie einen Sch ¨uler, der bei der Computerarbeit sehr viel motivierter als in ihrem Unterricht war. Dies begr ¨undete sie damit, dass er im Deutschunterricht aufgrund von Rechtschreibproblemen große Schwierigkeiten hatte, seine kreativen Arbeiten am Computer jedoch von seinen Mitsch ¨ulerinnen und Mitsch ¨ulern sehr bewundert wurden. Andererseits gab es ihrer Meinung nach auch Kinder, die den Theorieunterricht zu den 1316 Darstellung und Interpretation der Ergebnisse informatischen Grundkonzepten nicht verstanden und deswegen im Deutschunterricht motivierter mitarbeiteten. Als Motivationsh ¨ohepunkt gaben die Lehrerinnen das Ritterprojekt, das Musikprogramm, das Autospiel und die Unterrichtseinheiten zu Schuljahresbeginn an. Auf diesen Gebieten konnten die Sch ¨ulerinnen und Sch ¨uler sehr viel praktisch arbeiten, ihre Kreativit ¨at einsetzen und direkt mit dem Logo-System ¨uber visuelle Ausgaben im Graﬁkbereich oder Ton kommunizieren. Das beschriebene Motivationshoch zu Beginn des Schuljahrs kann auf den Neuigkeitseﬀekt und die Aussicht, viel mit dem Computer arbeiten zu d ¨urfen, zur¨uckgef ¨uhrt werden. Schnell wurde jedoch deutlich, dass diese Arbeit sehr anstrengend sein kann, hohe mentale Leistungen erfordert und theoretisches Wissen voraussetzt. Ausdauer Die Lehrerinnen stuften die Ausdauer im Unterricht zu den informatischen Grundkonzepten im Vergleich zum Fachunterricht als normal ein. Sie war ihrer Meinung nach sowohl abh¨angig von den einzelnen Kindern als auch von den Inhalten. Die Mathematiklehrerin bezeichnete sie vor allem in den langen Theoriephasen als sehr gut. Bedeutung des Unterrichts Das Verhalten der Sch ¨ulerinnen und Sch ¨uler wurde auch dadurch beeinﬂusst, wie gerne sie am Unterricht zu den informatischen Grundkonzepten teilnahmen, was ihnen im Unterricht wichtig war, welchen Stellenwert ihre Arbeitsergebnisse f ¨ur sie selbst hatten und welche Dinge ihnen nicht geﬁelen. Die beiden schw ¨acheren Kinder gaben zum Beispiel an, dass sie den Unterricht zur Vermittlung der informatischen Grundkonzepte nicht gerne besucht h ¨atten. Er habe ihnen keinen Spaß gemacht und sie gelangweilt. Alle anderen nahmen gerne am Computerunterricht teil, obwohl es auch ihnen manchmal langweilig oder auch zu schwierig war. Als besonders wichtig bezeichneten alle Sch ¨ulerinnen und Sch ¨uler das Rennautospiel, gefolgt vom Ritterprojekt, an dem sie ¨uber einen sehr langen Zeitraum frei und kreativ arbeiten durften. Die Arbeiten, die dabei entstanden, scheinen eine sehr viel geringere Bedeutung zu haben (vgl. Tabelle 6.11). I, 2) Was hat dir im Computerunterricht besonders gut gefallen? Was war spannend?Anzahl Autospiel 2 Fadenbilder 1 Reime 1 Bilder 1 Imagine Logo 1 MSW Logo 1 Tabelle 6.11: Wichtige Arbeiten im Computerunterricht (6 Sch ¨ulerinnen und Sch ¨uler, Mehrfachnennungen m ¨oglich) 1326.1 Gesamtkonzept M¨oglicherweise konnten die Kinder die Fragen, was ihnen im Computerunterricht wichtig war und welches ihre wichtigsten Arbeiten waren, auch nicht diﬀerenziert genug beantworten. Die Nennung ganz verschiedener Arbeiten best ¨atigt jedoch, dass eine Vielfalt an Arbeitsangeboten ¨uber ein Schuljahr hinweg bestehen muss. Dies ergibt sich automatisch bei der Einbindung verschiedener F ¨acher. Als weitere wichtige T ¨atigkeit wurden noch die Erstellung von Animationen und ganz allgemeine Dinge wie das Spielen, die Erstellung eigener Produkte, das Rechnen, das Zeichen und das Programmieren aufgez ¨ahlt. F¨ur den informatisch leistungsst ¨arksten Sch ¨uler waren alle Inhalte besonders wichtig. Er konnte hier keinen besonders hervorheben. Keinen Gefallen hatten die beiden schwachen Kinder am Ritterprojekt. Dies lag jedoch vor allem an ihren Partnern. Das M ¨adchen musste mit einem Jungen zusammenarbeiten und der Sch ¨uler hatte einen dominanten Partner, bei dem er nur sehr wenig selbst machen durfte. Ein weiterer Sch ¨uler fand es schwierig, mit einem englischsprachigen Programm zu arbeiten und zwei bem ¨angelten die Arbeit ohne Computer. Allerdings ﬁel zwei Kindern ¨uberhaupt nichts Negatives ein. Kooperation Die beiden schwachen Sch ¨ulerinnen und Sch ¨uler gaben nicht nur im Ritterprojekt an, dass sie lieber alleine an einem Computer gearbeitet h ¨atten. Dies lag auch daran, dass sie die Aufgaben am Rechner aufteilten und so selbst h ¨ochstens die H ¨alfte der Zeit im Unterricht aktiv waren. Die anderen hingegen sahen den Vorteil der Partnerarbeit in der M¨oglichkeit, sich gegenseitig zu helfen. Bei ihnen fand richtige Partnerarbeit und nicht nur abwechselndes Arbeiten statt. Beide waren gedanklich aktiv am Probleml ¨osungsprozess beteiligt, auch wenn nur einer die Tastatur und die Maus bedienen konnte (vgl. Tabelle 6.12). IV, 2) Habt ihr am Computer alles zusammen gemacht oder die Aufgaben eher aufgeteilt?Anzahl Zusammenarbeit 1 Aufteilung 2 Mischform 2 keine Aussage 1 Tabelle 6.12: Arbeitsformen am Computer (6 Sch ¨ulerinnen und Sch ¨uler) Die Englischlehrerin sah vor allem bei den Jungen der Klasse ein fehlende Kooperationsbereitschaft. ”Also bei den meisten M ¨adchenpaaren war das der Fall. Bei den Jungs war das etwas anders. Da hat wirklich dann derjenige, der nicht am Computer saß, auch geistig abgeschaltet.“ (LE, S. 11, 20 f.) 1336 Darstellung und Interpretation der Ergebnisse In diesem Fall verfehlt jedes Unterrichtskonzept, das die Zusammenarbeit von zwei Kindern an einem Computer vorsieht, einen Teil seiner Wirkung. Nicht nur die Zusammenarbeit der Partner an einem Rechner, sondern auch die der Kinder im Klassenverband war insgesamt eher schlecht. Hilfestellungen im Unterricht hatten nur die H ¨alfte der interviewten Kinder gegeben, die Hilfe von anderen angenommen jedoch fast alle. Lediglich der beste Sch ¨uler sagte, dass er keine Hilfe von anderen gebraucht habe. Dies wurde auch dadurch deutlich, dass die Kinder bei Schwierigkeiten sehr stark auf die Forscherin ﬁxiert waren. In etwa der H ¨alfte der F ¨alle wurde sie und nicht ein Mitsch ¨uler oder eine Mitsch ¨ulerin gefragt (siehe Tabelle 6.13). IV, 5) Hast du bei Problemen eher die Lehrerin oder eher deine Mitsch ¨ulerinnen und Mitsch ¨uler zu Hilfe gerufen?Anzahl Lehrerin 2 Lehrerin oder Mitsch ¨ulerinnen und Mitsch ¨uler 2 Mitsch ¨ulerinnen und Mitsch ¨uler zuerst, dann die Lehrerin 1 Mitsch ¨ulerinnen und Mitsch ¨uler, bei schwierigen Problemen die Lehrerin 1 Tabelle 6.13: Hilfe bei Schwierigkeiten (6 Sch ¨ulerinnen und Sch ¨uler) Das Ziel, die Kommunikation der Kinder untereinander ¨uber ihre Produkte zu f ¨ordern, wurde also nicht erreicht. Zusammenfassung Die Motivation der Sch ¨ulerinnen und Sch ¨uler im Unterricht zu den informatischen Grundkonzepten ist normal. Wie auch in anderen F ¨achern h ¨angt sie vor allem von den individuellen Interessen und F ¨ahigkeiten der Kinder und weiteren Faktoren wie zum Beispiel den Einstellungen der Eltern, der Vergabe von Schulnoten, der Anerkennung der Leistungen durch die Lehrperson, dem Einsatz des Mediums Computer und dem Neuigkeitseﬀekt zu Beginn des Schuljahrs ab. Motivationsh ¨ohen gibt es in den Unterrichtseinheiten, in denen sehr viel praktisch kreativ gearbeitet wird. Die Ausdauer dagegen wird teilweise in zu langen Theoriephasen ¨uberstrapaziert und die Mitarbeit von den Sch ¨ulerinnen und Sch ¨ulern selbst als schlecht eingestuft, wenn die Inhalte des Unterrichts nicht sofort verstanden werden. Die Kinder f ¨uhlen sich dann ¨uberfordert und sind gelangweilt. Sehr problematisch ist die teilweise schlechte Zusammenarbeit der Partner an den Computern. Vor allem bei den Jungen ist nur derjenige Partner geistig aktiv bei der Arbeit, der auch die Tastatur und Maus bedient. Eine Kommunikation zwischen Sch ¨ulerinnen und Sch ¨ulern, die nicht zusammenarbeiteten, ﬁndet kaum statt. 1346.1 Gesamtkonzept 6.1.5 Rahmenbedingungen Zwei Lehrerinnen in einem Fach Eine echte Integration der informatischen Grundkonzepte in den Fachunterricht kann nach Meinung der Mathematikund Deutschlehrerin erst erreicht werden, wenn der Unterricht zu den informatischen Grundkonzepten auch von den Fachlehrerinnen selbst durchgef ¨uhrt wird. Als ein Nachteil wurde zum Beispiel die teilweise fehlende ¨Ubereinstimmung der Begriﬄichkeiten genannt. Zwei Arbeitsr ¨aume Einen sehr großen Einﬂuss auf die Arbeit hatte die Tatsache, dass in zwei verschiedenen R¨aumen gearbeitet wurde (vgl. Tabelle 6.14). Von zwei Lehrerinnen wird die Bewegung III, 3) Solange wir die Computer im Computerraum verwendet haben, fand ein Teil des Computerunterrichts im Klassenzimmer statt. F ¨ur die Computerarbeit musste die Klasse dann in den Computerraum wechseln. Wie beurteilen Sie die Aufteilung zwischen der Arbeit im Klassenzimmer und im Computerraum? – VorteileAnzahl Bewegung 2 beim Erkl ¨aren sitzen die Kinder nicht vor Computern 1 Sch¨ulerinnen und Sch ¨uler sitzen an ihren gew ¨ohnlichen Pl ¨atzen 1 III, 3) Nachteile Anzahl Theorie im Klassenzimmer – Praxis im Computerraum 2 Plakate nur im Computerraum 1 Tafelanschrieb im Klassenzimmer fehlt im Computerraum 1 Tabelle 6.14: Vorund Nachteile des Raumwechsels (3 Lehrerinnen, Mehrfachnennungen m¨oglich) positiv bewertet, die die Sch ¨ulerinnen und Sch ¨uler zwangsl ¨auﬁg beim Wechsel des Raums haben. Bewegung kann jedoch auch in einem Unterrichtsraum durch geeignete methodische Maßnahmen gef ¨ordert werden. Außerdem kann das Sitzen am eigenen Platz im Klassenzimmer auch als nachteilig empfunden werden, da einige Arbeiten im Computerraum vorbereitet wurden und die Tischnachbarn im Klassenzimmer nicht unbedingt Partner im Computerraum waren. Wie bereits oben angesprochen muss die Verkn ¨upfung des Klassenzimmers mit theoretischen und des Computerraums mit praktischen Arbeiten auf jeden Fall vermieden werden. Hier d ¨urfen die Kinder auf keinen Fall eine Polarisierung in unangenehme und angenehme Unterrichtsstunden erleben. Vielmehr muss ihnen bewusst werden, dass erlernte theoretische Konzepte hilfreich f ¨ur eine eﬃziente Arbeit am Computer sind. Einen weiteren großen Nachteil stellten die Unterrichtsmaterialien dar, die nur in einem der Unterrichtsr ¨aume vorhanden waren. Die Lehrerinnen nannten hier die Plakate, auf denen die eingef ¨uhrten Logo-Befehle standen, oder die im Computerraum fehlenden Tafelanschriebe aus dem Klassenzimmer. Dem hinzuzuf ¨ugen ist noch 1356 Darstellung und Interpretation der Ergebnisse das Vergessen der Hefte im Klassenzimmer, so dass einzelnen Sch ¨ulerinnen und Sch ¨ulern im Computerraum dann weitere Arbeitsmaterialien fehlten. Doppelstunden Prinzipiell waren nach Meinung der Lehrerinnen Doppelstunden f ¨ur die Vermittlung der informatischen Grundkonzepte geeignet. Sie hoben jedoch hervor, dass an theoretischen Themen nicht ¨uber zwei Stunden hinweg gearbeitet werden darf. F ¨ur die Arbeit am Computer wurden Doppelstunden dagegen als wichtig eingesch ¨atzt. Partnerarbeit am Computer Da im Computerraum nur 16 Rechner zur Verf ¨ugung standen, mussten jeweils zwei Kinder zusammenarbeiten. Dies erm ¨oglichte ihnen, sich gegenseitig zu helfen, was von zwei Lehrerinnen als Vorteil angesehen wurde. Richtigerweise argumentierte die Englischlehrerin, dass dies auch mit Kindern an benachbarten Computern m ¨oglich sei. Sie kritisierte an der Partnerarbeit, dass nicht beide Partner aktiv seien. Dies beobachtete sie vor allem bei den Jungen. Wie bereits in Kapitel 6.1.4 dargestellt, entspricht dies der Aussage der schw ¨acheren Kinder, die die Zusammenarbeit mit einem Partner an einem Rechner selbst als problematisch einsch ¨atzten. Hausaufgaben Hausaufgaben zur Vermittlung der informatischen Grundkonzepte wurden nur teilweise als notwendig erachtet. Die Mathematikund Deutschlehrerin waren ¨uberzeugt, dass die theoretischen Inhalte auch zu Hause ge ¨ubt werden m ¨ussten. Sie forderten gleichzeitig eine Bewertung, damit sie f ¨ur die Sch ¨ulerinnen und Sch ¨uler einen h ¨oheren Stellenwert bek¨amen. Die Englischlehrerin sah das ¨Uben im Unterricht als ausreichend an. Logo Wie die Lehrerinnen die Auswirkungen des ausschließlichen Einsatzes von Logo-Systemen einsch ¨atzten, wurde schon in Kapitel 6.1.2 diskutiert. Die Englischund Deutschlehrerin sahen durch die Eingrenzung Vorteile. Die Sch ¨ulerinnen und Sch ¨uler selbst f ¨uhlten sich nicht eingeschr ¨ankt. Auf die Frage, ob sie etwas beim Arbeiten mit dem Logo-System gest¨ort habe, beklagten sich lediglich zwei von ihnen, dass die Befehlsnamen in Imagine Logo englisch gewesen seien und sie die entsprechenden W ¨orter nicht im Englischunterricht gelernt h ¨atten (vgl. Tabelle 6.15). Vielmehr beschrieben sie eine h ¨ohere Flexibilit ¨at bei der Arbeit mit Logo im Vergleich zu Standardprogrammen und Spielen. Ihrer Meinung nach waren die M ¨oglichkeiten der Gestaltung in Logo gr ¨oßer. Außerdem konnten sie durch Programmierung ihre eigenen Ideen umsetzen. Was mit der Speicherung gemeint wurde, kann nicht nachvollzogen werden. Interessant ist außerdem, welche Unterschiede den Sch ¨ulerinnen und Sch ¨ulern zwischen MSW Logo und Imagine Logo auﬃelen (vgl. Tabelle 6.16). Oﬀensichtlich waren dies die Sprache, in der die Befehle eingegeben werden mussten, der Igel, der eigentlich nur als Dreieck dargestellt wurde, und die Schildkr ¨ote und schließlich die M ¨oglichkeit der Ver1366.1 Gesamtkonzept VI, 1) Gab es insgesamt etwas, was dich bei der Arbeit mit Logo gest ¨ort hat?Anzahl nichts 2 englische Befehle 2 VI, 3) Vergleiche nun deine Arbeit mit Logo mit der Arbeit mit den anderen Programmen. Was war an der Arbeit mit Logo besonders f ¨ur dich?Anzahl mehr Gestaltungsm ¨oglichkeiten im Vergleich zu Textverarbeitungsprogrammen 2 Gestaltung eigener Spiele 1 Programmierung eigener Dinge 2 Speicherung 1 Tabelle 6.15: Vergleich von Logo und anderen Programmen (6 Sch ¨ulerinnen und Sch ¨uler) VI, 4) Kannst du den Unterschied zwischen MSW Logo und Imagine Logo beschreiben?Anzahl Deutsch – Englisch 4 Igel – Schildkr ¨ote 2 ein Igel – viele Tiere 1 keine Gestaltungsm ¨oglichkeit – Gestaltung 4 – Animation von Objekten durch Programmierung 1 – wie gewohnte Programme 1 kaum ein Unterschied erkennbar 1 Tabelle 6.16: Vergleich von MSW Logo und Imagine Logo (6 Sch ¨ulerinnen und Sch ¨uler, Mehrfachnennungen m ¨oglich) wendung eines Igels oder vieler Tiere. Erstaunlich war die Unterscheidung der Systeme durch die Mehrheit der Kinder dahingehend, dass nur mit Imagine Logo gestaltet werden konnte, da auch in MSW Logo zum Beispiel Fadenbilder, Weihnachtskarten oder andere Bilder entwickelt wurden. Der Begriﬀ der Gestaltung wurde von den Sch ¨ulerinnen und Sch ¨ulern wohl im Zusammenhang der Erstellung multimedialer Produkte verwendet. Außerdem konnten nach Ansicht eines Sch ¨ulers in Imagine Logo Objekte durch Programmierung animiert werden. Eine Sch ¨ulerin beschrieb die ¨Ahnlichkeit von Imagine Logo und Standardanwendungen, die sie bereits kannte2. Es wird deutlich, dass die Aufgabenstellungen und die M¨oglichkeit der einfachen Einbindung von Texten und Bildern von dem Kern der Arbeit, der Formalisierung von Sachverhalten mit Hilfe von eigenen Programmen, ablenkten. 2Dies bezog sich sicherlich auf die Auswahl von Funktionen aus der Toolbar, den Aufbau des Kontextmen ¨us zur Ver ¨anderung der Objekteigenschaften, das Zeichenprogramm, die M ¨oglichkeit, Texte und Bilder einzubauen, und den farbigen Aufbau des Programms. 1376 Darstellung und Interpretation der Ergebnisse Weitere Rahmenbedingungen Die Lehrerinnen beschrieben noch die Lage der Schulstunden am fr ¨uhen Morgen, die Ausstattung des Computerraumes, die Projektpr ¨asentationen vor den Eltern und die am Ende des Schuljahrs versprochene Belohnung f ¨ur diejenigen, die ihre Leistung bez ¨uglich der informatischen Grundkonzepte am meisten steigerten, als positive Einﬂussfaktoren. Zusammenfassung Insgesamt gesehen haben die verschiedenen Rahmenbedinungen keinen entscheidenden Einﬂuss auf den Erfolg des Unterrichtskonzepts. Eine richtige Integration der informatischen Grundkonzepte in den Fachunterricht kann nach Meinung der Lehrerinnen erst erfolgen, wenn sie diese selbst unterrichten. Die Arbeit in zwei verschiedenen R ¨aumen wirkt sich dann nachteilig aus, wenn die Sch ¨ulerinnen und Sch ¨uler eine Polarisierung in angenehme praktische und unangenehme theoretische Stunden wahrnehmen oder die notwendigen Unterrichtsmaterialien wie Plakate und Tafelanschriebe nicht zur Verf ¨ugung stehen. Theoretische Fragestellungen d ¨urfen nicht ¨uber Doppelstunden hinweg bearbeitet werden. Hausaufgaben sind auch in diesem Unterrichtsarrangement notwendig, um die theoretischen Inhalte zu ¨uben. Noch mehr muss auf die M ¨oglichkeiten in Logo aufmerksam gemacht werden, dass im Gegensatz zu Spielen oder Standardanwendungen Programme aktiv gestaltet und den eigenen W ¨unschen angepasst werden k ¨onnen. 6.2 Projektarbeit Mit der Arbeit am Ritterprojekt ver ¨anderte sich das methodische Konzept des Unterrichts. Die informatischen Grundkonzepte wurden bei der f ¨acher ¨ubergreifenden Arbeit angewendet. Nach Altermann-K ¨oster & al. (1990, S. 73) kann davon ausgegangen werden, dass ein projektorientierter Grundbildungsunterricht dann qualitativ hochwertig ist und von den Sch ¨ulerinnen und Sch ¨ulern akzeptiert wird, wenn die Sch ¨ulerinnen und Sch¨uler zu folgenden Aspekten positive Beurteilungen abgeben: •Lebensweltbezug der Lerninhalte •f¨acher ¨ubergreifender Projektcharakter •handlungsorientierte Eigent ¨atigkeit •gesellschaftsorientiertes Lernen •Einsatz neuer Technologien. Der Erfolg des Ritterprojekts wird in der Zusammenfassung des Kapitels auf Basis der Aussagen der Sch ¨ulerinnen und Sch ¨uler und der Rahmenbedingungen des Projekts begr¨undet. Rahmenbedingungen Die Projektarbeit begann nach etwa sieben Monaten Unterricht zu den informatischen Grundkonzepten. Die f ¨ur die Rittergeschichte zur Verf ¨ugung gestellte Zeit bewertete die 1386.2 Projektarbeit Mehrheit der Lehrerinnen als gut. Die Deutschlehrerin h ¨atte die Anzahl der Stunden etwas begrenzt und das Projekt st ¨arker strukturiert. Darin stimmten auch fast alle Sch ¨ulerinnen und Sch ¨uler¨uberein. Die schw ¨acheren Kinder h ¨atten nichts zus ¨atzlich umsetzen wollen. Die anderen nannten Animationen und Bilder, die ohnehin schon Bestandteil der Projektarbeit waren. Allein der Wunsch, Audiodaten aufzunehmen und als Dateien in das Projekt einzubinden, war ein neuer Inhalt. Das Thema wurde sowohl f ¨ur M ¨adchen als auch f ¨ur Jungen als geeignet oder sogar ideal eingesch ¨atzt. Die Rahmenbedingungen bildeten also die Grundlage f ¨ur eine gute Projektarbeit. Projekterfolg Die Lehrerinnen beschrieben die Einstellungen und Gef ¨uhle der Kinder w ¨ahrend des Projektunterrichts sehr positiv (vgl. Tabelle 6.17). IV, 1) Sehen Sie das Ritterprojekt als erfolgreich an? Wie beurteilen Sie das Projekt?Anzahl IV, 5) Wie sind die Sch ¨ulerinnen und Sch ¨uler mit den Freiheiten der Projektarbeit zurechtgekommen? Einstellungen motiviert 1 konzentriert 2 normal bez ¨uglich der Mitarbeit 1 identiﬁzierend 1 Gef¨uhle Anzahl keine ¨Uberforderung 1 großer Spaß 1 Euphorie 1 Bewusstsein, etwas Besonderes zu machen 1 Tabelle 6.17: Einstellungen und Gef ¨uhle w ¨ahrend der Projektarbeit (3 Lehrerinnen, Mehrfachnennungen m ¨oglich) Zus¨atzlich hoben die Lehrerinnen hervor, dass alle Kinder die M ¨oglichkeit hatten, sich mit ihren ganz speziellen F ¨ahigkeiten einzubringen. Dadurch seien die tollen f ¨acher ¨ubergreifenden Leistungen erst m ¨oglich gewesen. Ohne n ¨ahere Speziﬁkation sagten sie, dass die Sch ¨ulerinnen und Sch ¨uler w ¨ahrend des Projekts viel gelernt h ¨atten. Die Projektergebnisse wurden als imponierend, erstaunlich und”gigantisch“ bezeichnet. Die Kinder stellten die Arbeit an den Laptops, die sehr freie Arbeitsform, den Unterricht ohne Arbeitsbl ¨atter und einzelne Inhalte des Ritterprojekts als das Besondere an der Arbeit heraus. Demgegen ¨uber beschrieben drei Sch ¨ulerinnen und Sch ¨uler den Partner, mit dem sie zusammenarbeiten mussten, das Eintippen der Rittergeschichte und die 1396 Darstellung und Interpretation der Ergebnisse Anstrengung, sich einiges Ausdenken zu m ¨ussen, als etwas Negatives. Letztere Aussage machte jedoch ein Sch ¨uler, dem gerade das Ausdenken seiner Geschichte und das Malen der Bilder sehr viel Spaß gemacht hatte. Das Gesagte muss dementsprechend relativiert werden. Lerninhalte Das Lernen der informatischen Grundkonzepte fand nach Meinung der Mathematikund Englischlehrerin vor dem Ritterprojekt statt. Erstere ging sogar soweit, dass sie keine M ¨oglichkeit sah, diese in Projekten zu vermitteln. Die andere schr ¨ankt dies unter der Bedingung ein, dass sehr viel Zeit und extrem viel Geduld notwendig w ¨aren. Die Deutschlehrerin sah sogar die Projektarbeit als geeigneter als den Theorieunterricht an, schlug jedoch auch eine Mischform vor. Inhaltlich sahen die Sch ¨ulerinnen und Sch ¨uler bis auf die Tatsache, dass an verschiedenen Inhalten in einem Produkt gearbeitet wurde, keine Unterschiede zwischen der Projektarbeit und dem Unterricht zuvor. Sie nahmen den Wechsel vom Erlernen hin zur Anwendung der informatischen Grundkonzepte ¨uberhaupt nicht wahr. Viel auﬀ ¨alliger waren f ¨ur sie methodische Ver ¨anderungen wie das selbstst ¨andige Arbeiten, die Realisierung eigener Ideen, die reduzierten Hilfen und die Arbeit an einem umfangreichen Produkt ¨uber einen l ¨angeren Zeitraum hinweg. Von einem Sch ¨uler wurde die Projektarbeit auch als schwieriger eingestuft. Ein Kind erw ¨ahnte außerdem die Arbeit an den Laptops. Diese konnten jedoch eher zuf ¨allig zu Beginn der Projektarbeit zur Verf ¨ugung gestellt werden. Schwierigkeiten Wichtig ist festzuhalten, dass nicht alle Aufgaben im Ritterprojekt in der vorgesehenen Art und Weise gel ¨ost wurden. Beim Zeichnen der achsengespiegelten Burg gaben sich alle Sch ¨ulerinnen und Sch ¨uler mit der urspr ¨unglichen Form zufrieden (vgl. Kapitel 4.2, S. 93). Gleiches galt f ¨ur die generierten Gedichte. In keinem der beiden F ¨alle wurde experimentiert. Als Gr ¨unde daf ¨ur gaben die Kinder ihre Faulheit, Schwierigkeiten bei der Entwicklung anspruchsvollerer L ¨osungen und ihr knappes Zeitbudget an, das sie lieber in anderen Bereichen investierten. Zwei von ihnen waren mit der einfachen L ¨osung zufrieden und einer Sch ¨ulerin reichte es aus, genau das zu tun, was die Lehrerin von ihr verlangte. Die Vermutungen der Lehrerinnen stimmten mit den Begr ¨undungen der Sch ¨ulerinnen und Sch ¨uler sehr gut ¨uberein (siehe Tabelle 6.18). Der Faulheit kann als Begr ¨undung die nicht erbrachte zus ¨atzliche Anstrengung zugeordnet werden. Außerdem nannten die Lehrerinnen auch alternative Arbeitsm ¨oglichkeiten. Die Gleichg ¨ultigkeit entspricht dem Vorgehen, genau das zu machen, was die Lehrperson vorgibt. Ein neuer Aspekt hingegen ist die von der Englischund Deutschlehrerin vermutete fehlende Vorstellungskraft f ¨ur Burgen aus geometrisch interessanteren Grundformen. 1406.2 Projektarbeit Lehrerinnen (IV, 6) Anzahl Sch¨ulerinnen und Sch ¨uler (VII, 6) Anzahl zus¨atzliche Anstrengung 3 Faulheit 1 alternative Freiheiten 1 enges Zeitbudget 5 Gleichg ¨ultigkeit 1 Abarbeiten der Vorgaben der Lehrerin; Zufriedenheit mit der einfachen L ¨osung3 fehlende Vorstellung 2 schwierige L ¨osung 2 Tabelle 6.18: Ursache f ¨ur fehlende Experimentierfreudigkeit (3 Lehrerinnen, 6 Sch ¨ulerinnen und Sch ¨uler, Mehrfachnennungen m ¨oglich) Wie schon in anderen Unterrichtseinheiten war auch im Projektunterricht in einigen wenigen F ¨allen die Zusammenarbeit am Computer problematisch. Vor allem bei den im Vergleich zu den sonstigen Arbeiten sehr kreativen T ¨atigkeiten h ¨atten einige Kinder gerne selbst mehr gemacht. Allerdings gab es auch einige Partner, die sich optimal erg ¨anzten. Der eine ¨ubernahm dann bei den eher technisch orientierten Programmiert ¨atigkeiten und der andere in den kreativ gepr ¨agten Teilen der multimedialen Rittergeschichte die F¨uhrung. Optimal w ¨are es also, wenn gen ¨ugend Computer zur Verf ¨ugung stehen w ¨urden, so dass sich jede Sch ¨ulerin und jeder Sch ¨uler zwischen Einzelund Partnerarbeit entscheiden und im letzteren Fall auch seinen Partner ausw ¨ahlen k ¨onnte. Zusammenfassung Nach Altermann-K ¨oster & al. (1990, S. 73) war das Projekt der multimedialen Rittergeschichte sehr erfolgreich. W ¨ahrend der Projektarbeit wurden neue Technologien eingesetzt. Wie die Sch ¨ulerinnen und Sch ¨uler selbst feststellten, arbeiteten sie an mehreren Inhalten gleichzeitig, also f ¨acher ¨ubergreifend. Auch die Handlungsorientierung war so deutlich, dass die Kinder sie in den Interviews nannten. Da es bei der Einbeziehung der Fachinhalte in das Ritterprojekt darum ging, diese in einem Produkt praktisch umzusetzen und anzuwenden, kann auch von einem Bezug zur Lebenswelt gesprochen werden. Die Lehrerinnen sahen das Thema der Rittergeschichte sowohl f ¨ur M ¨adchen als auch f ¨ur Jungen als geeignet an. Allein f ¨ur interessantere Grundrisse von Burgen fehlte den Kindern die Vorstellungskraft. Die Lehrerinnen betonten außerdem, dass sich alle Kinder mit ihren ganz speziellen F ¨ahigkeiten einbringen konnten und dabei eine tolle f ¨acher ¨ubergreifende Leistung erzielten. Die entstandenen multimedialen Rittergeschichten beschrieben sie als imponierend, erstaunlich und”gigantisch“. Allein das gesellschaftsorientierte Lernen fand im Projekt nicht statt. Allerdings wurde es im Laufe des gesamten Schuljahrs immer wieder thematisiert. 1416 Darstellung und Interpretation der Ergebnisse 6.3 Lernerfolg informatischer Grundkonzepte – Vorund Nachtest Die Lehrerinnen, Sch ¨ulerinnen und Sch ¨uler gaben, wie in Kapitel 6.1.3 dargestellt, keine exakte Auskunft ¨uber den Lernerfolg bez ¨uglich der informatischen Grundkonzepte. Ein Grund daf ¨ur war, dass sie die Inhalte im Unterricht nicht als informatische Grundkonzepte wahrgenommen hatten. Aus diesem Grund erfolgte eine Quantiﬁzierung der Konzepte mit Hilfe des in Kapitel 5.2.2 beschriebenen Tests. DerLernerfolg wurde als Diﬀerenz der Testergebnisse am Ende und zu Beginn des Schuljahrs deﬁniert. In Kapitel 6.3.1 wird die Punkteverteilung der Sch ¨ulerinnen und Sch¨uler im Vorund Nachtest dargestellt. Außerdem wurde mit dem Wilcoxon-Test zum Vergleich zweier abh ¨angiger Stichproben bez ¨uglich ihrer zentralen Tendenzen der Lernerfolg auf Signiﬁkanz gepr ¨uft. Anschließend wird in den Kapiteln 6.3.2 und 6.3.3 der Lernerfolg f ¨ur die Merkmale •Geschlecht, •kognitives Gesamtleistungsniveau, •sprachgebundenes Denken, •zahlengebundenes Denken und •formallogisches Denken mit den Merkmalsauspr ¨agungen”Junge“,”M¨adchen“,”stark“ und”schwach“ untersucht. Die Darstellung der Ergebnisse erfolgt in Box-Plots, in denen die minimalen und maximalen Lernerfolge, die Mediane als zentrale Tendenzen der Verteilungen der Ergebnisse und die Streuungen in Form der Interquartilabst ¨ande Q1 und Q3 gekennzeichnet sind. Außerdem wurde der Unterschied des Lernerfolgs bez ¨uglich der korrespondierenden Auspr ¨agungen jedes Merkmals mit Hilfe des U-Test von Mann und Whitney zum Vergleich von zwei Stichproben hinsichtlich ihrer zentralen Tendenz auf Signiﬁkanz ¨uberpr¨uft. Die Rohdaten der Auswertung des Leistungstests zu den informatischen Grundkonzepten und des KFT ( Kognitiver F ¨ahigkeitstest ), mit dem die F ¨ahigkeiten kognitives Gesamtleistungsniveau ,sprachgebundenes Denken ,zahlengebundenes Denken undformallogisches Denken gemessen wurden, sind in Tabelle 6.19 dargestellt. Die Nullwerte sind aufgrund der in Heller & al. (2000) beschriebenen Auswertungsanweisungen entstanden, da die Sch¨ulerinnen und Sch ¨uler in verschiedenen Teilen des Tests nur sehr wenige Punkte erzielt hatten. 1426.3 Lernerfolg informatischer Grundkonzepte – Vorund Nachtest Informatische Kognitiver F ¨ahigkeitstest (KFT) Grundkonzepte Kind m/w Beginn Ende gesamt sprachgeb. zahlengeb. formallog. 1 m 13 14 63 48 69 63 2 m 11 17 50 39 44 65 3 m 7 17 49 30 53 73 4 m 7 14 50 35 61 61 5 m 12 19 48 29 52 60 6 m 8 15 43 0 49 60 7 m 5 11 35 27 43 47 8 m 8 14 38 27 53 45 9 m 7 10 49 36 40 69 10 m 3 12 49 40 41 55 11 m 7 17 38 25 33 53 12 m 6 12 34 27 33 50 13 m 3 12 0 28 0 32 14 w 6 12 53 39 52 71 15 w 9 10 52 38 55 60 16 w 9 10 48 52 49 45 17 w 6 8 45 35 52 49 18 w 10 18 57 54 41 73 19 w 8 18 49 47 39 58 20 w 4 8 49 45 40 55 21 w 9 6 46 45 40 54 22 w 10 11 57 60 38 60 23 w 15 16 47 51 33 53 24 w 4 8 43 47 27 53 25 w 9 10 42 40 35 54 26 w 9 10 45 52 28 52 27 w 8 8 46 47 37 50 28 w 10 10 43 55 29 46 29 w 9 10 38 40 0 53 30 w 4 5 30 32 30 36 Tabelle 6.19: Rohdaten der Tests zu den informatischen Grundkonzepten und des KFT 1436 Darstellung und Interpretation der Ergebnisse 6.3.1 Informatische Grundkonzepte allgemein Die H ¨auﬁgkeitsverteilungen der erreichten Punkte im Vorund Nachtest zu den informatischen Grundkonzepten sind in Abbildung 6.3 dargestellt. 01234567 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 Vortest Häufigkeiten  01234567 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 Nachtest Häufigkeiten  0123456789 -3 0 1 2 3 4 6 7 8 9 10  Leistungssteigerung in  Punkten Häufigkeiten Median  Median  Abbildung 6.3: H ¨auﬁgkeitsverteilung der Punkte im Vorund Nachtest Im Nachtest ist eine deutliche Verschiebung der H ¨auﬁgkeitsverteilung hin zu h ¨oheren Punktzahlen und somit besseren Leistungen zu erkennen. Abbildung 6.4 zeigt die genaue Leistungssteigerung vom Vorzum Nachtest. Ein Kind verschlechterte sein Ergebnis, und zwei hatten in beiden Tests dieselbe Punktzahl. 01234567 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 Vortest Häufigkeiten  01234567 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 Nachtest Häufigkeiten  0123456789 -3 0 1 2 3 4 6 7 8 9 10  Leistungssteigerung in  Punkten Häufigkeiten Median  Median  Abbildung 6.4: H ¨auﬁgkeitsverteilung der Diﬀerenzen der Punkte des Nachund Vortests Signiﬁkante Unterschiede zwischen dem Vorund Nachtest wurden mit dem WilcoxonTest zum Vergleich zweier abh ¨angiger Stichproben bez ¨uglich ihrer zentralen Tendenzen ¨uberpr ¨uft. Das Alpha-Niveau von p= 0,05 wurde mit Hilfe der Bonferroni-Korrektur auf 1446.3 Lernerfolg informatischer Grundkonzepte – Vorund Nachtest p= 0,05/6 versch ¨arft, da wie in den Kapiteln 6.3.2 und 6.3.3 beschrieben wird, insgesamt sechs Tests durchgef ¨uhrt wurden (vgl. Z ¨ofel 2002, S. 69). Daraus ergab sich f ¨ur die Untersuchung ein Alpha-Niveau von p= 0,008. Da die berechnete Wahrscheinlichkeit kleiner als das festgelegte Alpha-Niveau von 0,008 ist ( Z=−4,382, p < 0,001), kann die Nullhypothese, dass sich die Ergebnisse im Vorund Nachtest nicht signiﬁkant voneinander unterscheiden, verworfen werden. Zusammenfassung und Interpretation Bereits vor dem Unterricht zu den informatischen Grundkonzepten konnten die Sch ¨ulerinnen und Sch ¨uler einige informatische Strategien anwenden. Der Unterschied im Vorund Nachtest ist zwar signiﬁkant, allerdings liegt er bei fast der H ¨alfte der Kinder unter vier Punkten. Wie auch in anderen F ¨achern hatten die Sch ¨ulerinnen und Sch ¨uler am Ende des Schuljahrs einige informatische Inhalte wieder vergessen. Außerdem war ihre Konzentration im Nachtest am Schuljahresende vermutlich geringer. Sie waren mit der Situation bereits vertraut und ein Teil von ihnen glaubte, sich weniger anstrengen zu m¨ussen. 6.3.2 Informatische Grundkonzepte und Geschlecht Wie die beiden Box-Plots in Abbildung 6.5 zeigen, unterschied sich der Lernerfolg, d.h. die Diﬀerenz der Ergebnisse des Nachund Vortests, bei den Jungen und M ¨adchen deutlich. -4 -2 0246810  Jungen Mädchen  Abbildung 6.5: Box-Plots der Diﬀerenzen der Punkte des Nachund Vortests – Geschlecht Zwar lag die maximale Leistungssteigerung in beiden Gruppen bei zehn Punkten, im Gegensatz zu den Jungen verschlechterte sich aber ein M ¨adchen. Der Median der Jungen beﬁndet sich bei den Sch ¨ulern bei sieben und bei den Sch ¨ulerinnen nur bei einem Punkt. Die Interquartilbereiche sind bei beiden Gruppen gleich groß, ¨uberlappen sich jedoch nicht. 1456 Darstellung und Interpretation der Ergebnisse Zu Beginn des Schuljahrs waren die M ¨adchen im Test zu den informatischen Grundkonzepten etwas erfolgreicher (vgl. Abbildung 6.6). Im Nachtest ¨anderte sich dies. Unterhalb des Medians lagen 76 Prozent der M ¨adchen und nur 15 Prozent der Jungen. 01234567 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 Vortest Häufigkeiten Mädchen  Jungen  01234567 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 Nachtest Häufigkeiten Mädchen  Jungen Median  Median  Abbildung 6.6: H ¨auﬁgkeitsverteilung der Punkte im Vorund Nachtest getrennt nach dem Merkmal Geschlecht Die Ausgangssituation war also f ¨ur beide Gruppen etwa gleich, die Entwicklung der Jungen jedoch wesentlich erfolgreicher. Die Nullhypothese, dass sich die Diﬀerenz der Ergebnisse des Nachund Vortests der Jungen und M ¨adchen nicht signiﬁkant voneinander unterscheidet, muss verworfen werden. Mit dem U-Test von Mann und Whitney wurde eine Wahrscheinlichkeit ( Z=−3,257, p= 0 ,001) kleiner als das festgelegte Alpha-Niveau von 0,008 berechnet. Zusammenfassung Sowohl M ¨adchen als auch Jungen k ¨onnen im Alter von zehn Jahren informatische Grundkonzepte in schriftlichen Aufgaben ohne vorherigen speziellen Unterricht selbstst ¨andig anwenden. Nach einem Jahr Unterricht zu den informatischen Grundkonzepten erzielen die Jungen sehr viel bessere Testergebnisse. Die Leistungssteigerungen vom Vorzum Nachtest sind bei ihnen sogar signiﬁkant h ¨oher als bei M ¨adchen. 6.3.3 Informatische Grundkonzepte und F ¨ahigkeiten Mit Hilfe des KFT ( Kognitiver F ¨ahigkeitstest ) wurden die verschiedenen F ¨ahigkeiten der Sch¨ulerinnen und Sch ¨uler getrennt nach den Merkmalen 1466.3 Lernerfolg informatischer Grundkonzepte – Vorund Nachtest •kognitives Gesamtleistungsniveau, •sprachgebundenes Denken, •zahlengebundenes Denken und •formallogisches Denken erfasst. F ¨ur jedes Merkmal wurden die mittleren 20 Prozent der Sch ¨ulerinnen und Sch ¨uler herausgeﬁltert, so dass sich in der Gruppe der Leistungsstarken und Leistungsschwachen jeweils 12 Kinder beﬁnden. Die Verteilung der Jungen und M ¨adchen auf die verschiedenen Gruppen ist in Tabelle 6.20 dargestellt. Absolute (relative) H ¨auﬁgkeiten Jungen M ¨adchen kognitives Gesamtleistungsniveau leistungsschwach 6 (46,2%) 6 (35,3%) mittel 1 (7,7%) 5 (29,4%) leistungsstark 6 (46,2%) 6 (35,3%) sprachgebundenes Denken leistungsschwach 10 (76,9%) 2 (11,8%) mittel 2 (15,4%) 4 (23,5%) leistungsstark 1 (7,7%) 11 (64,7%) zahlengebundenes Denken leistungsschwach 3 (23,1%) 9 (52,9%) mittel 2 (15,4%) 4 (23,5%) leistungsstark 8 (61,5%) 4 (23,5%) formallogisches Denken leistungsschwach 5 (38,5%) 7 (41,2%) mittel 1 (7,7%) 5 (35,3%) leistungsstark 7 (53,8%) 5 (29,4%) Tabelle 6.20: Verteilung der M ¨adchen und Jungen in den untersuchten Gruppen In den Auswertungen wurden nur die leistungsschwachen und leistungsstarken Sch ¨ulerinnen und Sch ¨uler bez ¨uglich der vier Merkmale betrachtet. Zum Vergleich der korrespondierenden Gruppen wurden Box-Plots erstellt und Signiﬁkanzen ¨uberpr ¨uft. Die Box-Plots der Leistungssteigerungen der im KFT starken und schwachen Sch ¨ulerinnen und Sch ¨uler in Abbildung 6.7 ganz links sind sich sehr ¨ahnlich. Der Interquartilbereich, der Median und der Minimalwert liegen bei der Gruppe mit dem st ¨arkeren kognitiven Gesamtleistungsniveau etwas h ¨oher. 1476 Darstellung und Interpretation der Ergebnisse -4 -2 0246810  Jungen Mädchen  -4 -2 0246810  Kognitives  Gesamtleistungsniveau  stark  Kognitives  Gesamtleistungsniveau  schwach  Sprachgebundenes  Denken stark  Sprachgebundenes  Denken schwach  Zahlengebundenes  Denken stark  Zahlengebundenes  Denken schwach  Formallogisches  Denken stark  Formallogisches  Denken schwach -4 -2 0246810  Jungen Mädchen  -4 -2 0246810  Kognitives  Gesamtleistungsniveau  stark  Kognitives  Gesamtleistungsniveau  schwach  Sprachgebundenes  Denken stark  Sprachgebundenes  Denken schwach  Zahlengebundenes  Denken stark  Zahlengebundenes  Denken schwach  Formallogisches  Denken stark  Formallogisches  Denken schwach  Abbildung 6.7: Box-Plots der Diﬀerenzen der Punkte des Nachund Vortests – F ¨ahigkeiten Zu Beginn des Schuljahrs waren die Ergebnisse der beiden Gruppen im Test zu den informatischen Grundkonzepten sehr ausgeglichen um den Median verteilt (siehe Abbildung 6.8). 012345 3 4 5 6 7 8 9 10 11 12 13 14 15  Anzahl der Punkte im Vortest Häufigkeiten kogn. Gesamtleistung schwach  kogn. Gesamtleistung stark  012345 3 4 5 6 7 8 9 10 11 12 13 14 15  Anzahl der Punkte im Vortest Häufigkeiten sprachgeb. Denken schwach  sprachgeb. Denken stark Median Median  Abbildung 6.8: H ¨auﬁgkeitsverteilungen der Punkte im Vortest getrennt nach den Merkmalen kognitives Gesamtleistungsniveau undsprachgebundenes Denken Beim Merkmal sprachgebundenes Denken ist derselbe Eﬀekt wie beim Geschlecht zu beobachten. Die im sprachgebundenen Denken schw ¨acheren Sch ¨ulerinnen und Sch ¨uler steigerten ihre Leistungen im Nachtest im Vergleich zum Vortest wesentlich mehr als die Kinder mit st ¨arkeren F ¨ahigkeiten in diesem Bereich. Die Mediane liegen sehr weit auseinander und es existiert keine ¨Uberlappung der Interquartilbereiche. Ein Grund f ¨ur die¨Ahnlichkeit der Ergebnisse ist die Zusammensetzung der beiden Gruppen. In der Gruppe der im sprachgebundenen Denken schwachen Kinder ist der Anteil der Jungen wesentlich h ¨oher. Umgekehrt sind in der Gruppe der St ¨arkeren haupts ¨achlich M ¨adchen (vgl. Tabelle 6.20). Die unterschiedlichen Leistungssteigerungen k ¨onnen m ¨oglicherweise 1486.3 Lernerfolg informatischer Grundkonzepte – Vorund Nachtest darauf zur ¨uckgef ¨uhrt werden, dass die im sprachgebundenen Denken Schwachen im Vortest nur sehr schlechte Ergebnisse erzielt hatten (siehe Abbildung 6.8) und sich somit leichter verbessern konnten. Die Box-Plots der korrespondierenden Merkmalsauspr ¨agungen der Variablen zahlengebundenes undformallogisches Denken stimmen fast ¨uberein. Die Gruppen der St ¨arkeren waren etwas erfolgreicher. Die Diﬀerenzen ihrer Ergebnisse des Nachund Vortests waren gr ¨oßer. Wie Abbildung 6.9 zeigt, erzielten die verschiedenen Gruppen auch bez ¨uglich dieser Variablen im Vortest ¨ahnliche Ergebnisse. 012345 3 4 5 6 7 8 9 10 11 12 13 14 15  Anzahl der Punkte im Vortest Häufigkeiten formallog. Denken schwach  formallog. Denken stark  012345 3 4 5 6 7 8 9 10 11 12 13 14 15  Anzahl der Punkte im Vortest Häufigkeiten zahlengeb. Denken schwach  zahlengeb. Denken stark Median Median  Abbildung 6.9: H ¨auﬁgkeitsverteilung der Punkte im Vortest getrennt nach den Merkmalenzahlengebundenes undformallogisches Denken Im Gegensatz zum Merkmal Geschlecht zeigte der U-Test von Mann und Whitney f ¨ur keines der Merkmale kognitives Gesamtleistungsniveau (Z=−0,819, p= 0 ,413), sprachgebundenes Denken (Z=−2,539, p= 0 ,011), zahlengebundenes Denken (Z= −1,820, p= 0,069) und formallogisches Denken (Z=−1,588, p= 0 ,112) einen signiﬁkanten Unterschied bez ¨uglich der Diﬀerenz der Ergebnisse des Nachund Vortests in den korrespondierenden Gruppen. Die Nullhypothese, dass sich die Diﬀerenzen der Ergebnisse des Nachund Vortests f ¨ur die starken und schwachen Gruppen der einzelnen Merkmale nicht signiﬁkant voneinander unterscheiden, kann also beibehalten werden. Zusammenfassung Eine signiﬁkant h ¨ohere Leistungssteigerung vom Vorzum Nachtest kann zwischen den Merkmalsauspr ¨agungen”stark“ und”schwach“ der Merkmale kognitives Gesamtleistungsniveau ,sprachgebundenes Denken ,zahlengebundenes Denken undformallogisches Denken nicht nachgewiesen werden. Sch ¨ulerinnen und Sch ¨uler mit einem h ¨oheren kognitiven Gesamtleistungsniveau und St ¨arken im zahlengebundenen und formallogischen Denken erzielen insgesamt ein etwas besseres Ergebnis. Umgekehrt verh ¨alt es sich bez ¨uglich des Merkmals sprachgebundenes Denken . Hier ist die Leistungssteigerung derjenigen mit schlechten Ergebnissen im Verbal-Teil des KFT sehr viel h ¨oher. 1496 Darstellung und Interpretation der Ergebnisse 6.4 Lernerfolg informatischer Grundkonzepte – Unterrichtsmaterialien Wie bereits in Kapitel 5.3.4 beschrieben kann das Erlernen der informatischen Grundkonzepte nicht umfassend auf Basis der Ergebnisse eines Leistungstests erfasst werden. Aus diesem Grund werden f ¨ur alle informatischen Grundkonzepte detailliert Arbeitsbl ¨atter, Tests und Programme evaluiert. In einer sich anschließenden Analyse wird paarweise der Erfolg folgender Gruppen ¨uberpr ¨uft und miteinander verglichen: •Jungen ( N= 13) und M ¨adchen ( N= 17) •Kinder mir starken ( N= 12) und schwachen ( N= 12) Leistungen im KFT ( kognitives Gesamtleistungsniveau ) •Kinder mir starken ( N= 12) und schwachen ( N= 12) Leistungen im Verbal-Teil des KFT ( sprachgebundenes Denken ) •Kinder mir starken ( N= 12) und schwachen ( N= 12) Leistungen im QuantitativTeil des KFT ( zahlengebundenes Denken ) •Kinder mir starken ( N= 12) und schwachen ( N= 12) Leistungen im NonverbalFigural-Teil des KFT ( formallogisches Denken ) Lag der Anteil derjenigen, die eine Aufgabe korrekt l ¨osten, in den Gruppen korrespondierender Merkmalsauspr ¨agungen mehr als 30 Prozent auseinander, wird dies dargestellt, um die in Kapitel 6.3 vorgestellten Ergebnisse aus dem Leistungstest zu den informatischen Grundkonzepten zu ¨uberpr ¨ufen. Falls nicht anders angegeben, handelt es sich bei den Stichproben immer um die 30 Sch ¨ulerinnen und Sch ¨uler der Klasse ( N= 30). 6.4.1 Wirkprinzipien von Informatiksystemen Algorithmisierung Nach Schubert und Schwill (2004, S. 5) ist ein Algorithmus ein mit formalen Mitteln beschreibbares, mechanisch nachvollziehbares Verfahren zur L ¨osung einer Klasse von Problemen. Im Musikunterricht wurde eine textuelle algorithmische Beschreibung verwendet, um Durund Moll-Tonleitern einzuf ¨uhren (vgl. Kapitel 4.1, S. 67). Analog entwickelten die Sch ¨ulerinnen und Sch ¨uler selbst eine Zahlenund eine Buchstabenreihe als R ¨atsel. Bei den Zahlenreihen waren 10 der 24 L ¨osungen v ¨ollig korrekt. Sechs weitere enthielten ungenaue Formulierungen in Form von relativen Beschreibungen wie zum Beispiel ”die n ¨achsten Zahlen sind alle immer eins gr ¨oßer“, f ¨ur die keine Bezugspunkte festgelegt worden waren. Die R ¨atsel konnten jedoch trotzdem gel ¨ost werden. In Tabelle 6.21 ist dargestellt, auf welche Fehlerkategorien sich die acht fehlerhaften Beschreibungen verteilen. 1506.4 Lernerfolg informatischer Grundkonzepte – Unterrichtsmaterialien Fehlerkategorien Anzahl Keine komplette Beschreibung 5 Inkonsistenzen in der Beschreibung 2 Chaotische Beschreibung 1 Tabelle 6.21: Fehlerkategorien bei der Formulierung der Zahlenreihe als Algorithmus (N= 8) In einer unvollst ¨andigen Formulierung war zum Beispiel nicht angegeben, wie viele Elemente die Zahlenreihe enthielt. In einer anderen, inkonsistenten Darstellung entstand auf Basis der ersten sechs Anweisungen die L ¨osung in Abbildung 6.10. 55 57 60 61 63 65 67  + 2? + 2?  Abbildung 6.10: Zahlenreihe eines Sch ¨ulers Die letzte Anweisung lautete”Der Rest ist immer plus 2, außer denen, die schon dort stehen“. Es existierte also keine L ¨osungsm ¨oglichkeit f ¨ur das R ¨atsel. Formulierungen, die ein mechanisches Vorgehen erm ¨oglichen, waren, wie Abbildung 6.11 zeigt, vor allem f ¨ur die im sprachgebundenen Denken starken Kinder noch sehr schwierig. Sprachgebundenes  Denken  67%  33% 8%  42% 25% 25%  schwach stark richtig falsch nicht gelöst  Abbildung 6.11: Erfolg bei der algorithmischen Formulierung der Zahlenreihe Das Ergebnis ver ¨anderte sich auch in der zweiten ¨Ubung der Buchstabenreihen nicht. Hier waren 10 der 23 Algorithmen korrekt, f ¨unf enthielten ungenaue Formulierungen und die Fehlertypen blieben gleich. Wie in Abbildung 6.12 dargestellt, gab es bez ¨uglich fast aller kognitiven F ¨ahigkeiten und des Geschlechts Unterschiede bei der Formulierung eines exakten Verfahrens zur L ¨osung des Buchstabenr ¨atsels. 1516 Darstellung und Interpretation der Ergebnisse Geschlecht  70%  35% 15%  35% 15%  30%  m wKognitives  Gesamtleistungsniveau  33% 75% 42% 17% 25% 8%  schwach stark Zahlengebundenes  Denken  25% 58% 42% 25% 33% 17%  schwach stark Formallogisches  Denken  25% 66% 33% 17% 42% 17%  schwach stark richtig falsch nicht gelöst  Abbildung 6.12: Erfolg bei der algorithmischen Formulierung der Buchstabenreihe Die in Kapitel 4.1 (S. 74 ﬀ.) dargestellte Umwandlung r ¨omischer Zahlen in Dezimalzahlen wurde in Textform beschrieben. Die Ergebnisse der Abarbeitung des Algorithmus sind in Tabelle 6.22 abgebildet. Umwandlung von MCMLXIX Anzahl korrekt 24 falsch 4 Umwandlung von MCDXIV korrekt 17 falsch 5 nicht gel ¨ost 6 Umwandlung von CDLXIX korrekt 24 falsch 4 Tabelle 6.22: Ergebnis der Umwandlung r ¨omischer Zahlen in Dezimalzahlen ( N= 28) Der Algorithmus sah vor, dass die Subtrahenden rechts und die Summanden links aufsteigend angeordnet wurden. Trotzdem sortierten 28 Prozent der 28 Sch ¨ulerinnen und Sch ¨uler die Summanden und Subtrahenden nicht entsprechend und 7 Prozent vermischten sie sogar. Die Ungenauigkeiten f ¨uhrten nicht zwangsl ¨auﬁg zu Fehlern. Dies ist vermutlich darauf zur ¨uckzuf ¨uhren, dass die Sch ¨ulerinnen und Sch ¨uler ein intuitives Verst ¨andnis des Algorithmus hatten. Aus diesem Grund lasen sie die Anweisungen nicht genau und ignorierten formalere Inhalte wie”Streiche das erste Zahlzeichen aus der r ¨omischen Zahl“ (Kapitel 4.1, S. 75). Diese Inhalte sind zwar f ¨ur ein mechanisches Abarbeiten der Vorschriften notwendig, f ¨ur die Berechnung jedoch nicht relevant. 1526.4 Lernerfolg informatischer Grundkonzepte – Unterrichtsmaterialien Die Dominanz der Sch ¨ulerinnen und Sch ¨uler mit einem h ¨oheren kognitiven Gesamtleistungsniveau und besseren Ergebnissen im KFT im Bereich des zahlengebundenen und formallogischen Denkens bei der Umwandlung der zweiten r ¨omischen Zahl ist sehr deutlich. Wie schon bei der Beschreibung der Buchstabenreihe steht der Erfolg in keinem Zusammenhang mit dem sprachgebundenen Denken. Kognitives  Gesamtleistungsniveau  17% 92%  25% 8%  58%  schwach stark Zahlengebundenes  Denken  25% 75% 25% 17%  50% 8%  schwach stark Formallogisches  Denken  33% 92% 17% 8%  50%  schwach stark richtig falsch nicht gelöst  Abbildung 6.13: Erfolg bei der Umwandlung der r ¨omischen Zahl MCDXIV in das Dezimalsystem Die F ¨ahigkeit, algorithmische Beschreibungen exakt abzuarbeiten, scheint unabh ¨angig von der Darstellungsform zu sein. Bei der Dekodierung einer Geheimschrift mit Hilfe eines Programmablaufplans (Anhang G, S. 247) waren die Ergebnisse kaum besser. 19 von 30 Sch ¨ulerinnen und Sch ¨ulern entschl ¨usselten unabh ¨angig von ihren F ¨ahigkeiten alle vier W¨orter richtig. Auch hier wurden wieder zahlreiche Zwischenschritte, wie zum Beispiel das abschließende Vertauschen des ersten und letzten Buchstabens und das Schreiben des Ergebnisses in Schreibschrift, nicht dargestellt, sondern einfach das dekodierte Wort notiert (vgl. Tabelle 6.23). Ein Großteil der Kinder ist also nicht bereit, die Hilfestellungen, die durch die genaue Beschreibung der vielen Zwischenschritte angeboten werden, anzunehmen. Der Aufwand der konsequenten Abarbeitung der einzelnen Schritte ist ihnen zu hoch. Fehlende Zwischenschritte Anzahl mindestens ein Hilfswort fehlt 6 mindestens in einem Wort ist die Ersetzung nicht sichtbar 15 mindestens einmal ist die Vertauschung der Buchstaben nicht dargestellt25 mindestens ein Wort in Schreibschrift fehlt 11 Tabelle 6.23: Fehlende Zwischenschritte bei der Dekodierung von vier W ¨ortern mit Hilfe eines Programmablaufplans ( N= 30) 1536 Darstellung und Interpretation der Ergebnisse Automatisierung Unter Automatisierung wird in dieser Arbeit die Zusammenfassung wiederkehrender Abl ¨aufe verstanden, so dass sie von Routinet ¨atigkeiten entlastet. Mit der Automatisierung besch ¨aftigten sich die Sch ¨ulerinnen und Sch ¨uler schon zu Beginn des Unterrichts beim Zeichnen ebener Figuren. Befehle wurden einzeln eingegeben, imWIEDERHOLE -Befehl zusammengefasst und in Form neuer Befehle abstrahiert. Bei der Erstellung einer Drehﬁgur aus geschachtelten Quadraten (vgl. Kapitel 4.1, S. 68 f.) bot es sich an, zun ¨achst einen Befehl Quadrat mit Eingabeparameter zu formulieren, um mit ihm das Grundelement der Drehﬁgur in einem eigenen Befehl Quadratfigur zu erstellen. Auf 18 der 26 abgegebenen Arbeitsbl ¨atter wurden Quadratfigur -Befehle notiert. Zw¨olf davon waren korrekt. Die Hauptfehlerursache der sechs anderen war die Zusammenfassung der Aufrufe in eckigen Klammern. Vermutlich wurden die eckigen Klammern analog zum WIEDERHOLE -Befehl gesetzt. PR Quadratfigur [ Quadrat 20 Quadrat 40 Quadrat 60 Quadrat 80 Quadrat 100 ] ENDE Die H ¨alfte der acht fehlenden Quadratfigur -Befehle ist auf die Kinder zur ¨uckzuf ¨uhren, die folgende L ¨osung notierten: Quadrat 20 Quadrat 40 Quadrat 60 Quadrat 80 Quadrat 100 Den Aspekt der Automatisierung durch Zusammenfassung einer Befehlsfolge in einem neuen Befehl, der mehrfach verwendet wird, beachteten sie nicht. Zum Zeichnen der gedrehten Figur mussten sie die Befehlsfolge mehrfach eingeben. Wie Abbildung 6.14 zeigt, waren vor allem die Jungen und die im sprachgebundenen Denken schw ¨acheren und zahlengebundenen Denken st ¨arkeren Kinder erfolgreicher. Geschlecht  62%  24% 30%  12% 8%  64%  m wSprachgebundenes  Denken  59%  8% 33%  17% 8%  75%  schwach stark Zahlengebundenes  Denken  25% 59% 8% 33%  67% 8%  schwach stark richtig falsch nicht gelöst  Abbildung 6.14: Erfolg bei der Erstellung des Befehls Quadratfigur 1546.4 Lernerfolg informatischer Grundkonzepte – Unterrichtsmaterialien In der jeweils anderen Gruppe wurde von einem sehr hohen Anteil der Sch ¨ulerinnen und Sch¨uler¨uberhaupt kein Quadratfigur -Befehl erstellt. Nachdem die Kinder beim Zeichnen der Drehﬁgur nur sehr wenig Bereitschaft zeigten, Schwierigkeiten selbstst ¨andig zu l ¨osen und neue Figuren auszuprobieren, verhielten sie sich bei der Erstellung der Fadenbilder (siehe Kapitel 4.1, S. 80) v ¨ollig anders. Sie experimentierten von Beginn an mit den Bewegungen der beiden Igel und fanden schnell heraus, wie interessante Bilder entstehen (vgl. Abbildung 6.15). Abbildung 6.15: Automatisierte Fadenbilder Den Prozess des Zeichnens automatisierten sie dadurch, dass sie die kurzen Bewegungen und den Wurf des Fadens in WH-Befehlen3kapselten. WH 8 [ WH 10 [ VORW ¨ARTS 10 Faden_zum_zweiten ] RE 45 ] Mit dem inneren WIEDERHOLE -Befehl wurde jeweils eine Seite des Achtecks gezeichnet. Bei der Arbeit an den Fadenbildern hatten alle Kinder Erfolgserlebnisse und lernten das Konzept der Automatisierung als Arbeitserleichterung sch ¨atzen. Im Gegensatz zu anderen Unterrichtseinheiten versuchten sie ihre ersten L ¨osungen durch Ver ¨anderung der Schrittweiten und Drehwinkel und den Einsatz von Farben zu verbessern. In der Rittergeschichte bauten die Sch ¨ulerinnen und Sch ¨uler zahlreiche Bewegungen in Form von automatisierten Animationen (vgl. Kapitel 4.2, S. 96 f.) in ihre Projekte ein. Es bewegten sich Wachsoldaten vor einer Ritterburg, ein Drache rannte eingesperrt in einem K¨aﬁg umher und V ¨ogel ﬂogen am Himmel. Wie schon im Test zu den informatischen Grundkonzepten wurden die Animationen, die eine exakte formale Beschreibung der Bewegungsabl ¨aufe erforderten, vor allem von den Jungen, den im sprachgebundenen Denken schwachen und den im zahlengebundenen und formallogischen Denken starken Kindern erstellt. 3WHist in Logo die abk ¨urzende Schreibweise f ¨urWIEDERHOLE 1556 Darstellung und Interpretation der Ergebnisse Geschlecht  77%  24% 23%  70%  m wSprachgebundenes  Denken  67%  25% 33%  75%  schwach stark Zahlengebundenes  Denken  25% 58% 75% 42%  schwach stark Formallogisches  Denken  25% 67% 75% 33%  schwach stark Animation Keine  Abbildung 6.16: Erfolg bei der Erstellung automatisierter Animationen in der Rittergeschichte Codierung Codes sind Abbildungsvorschriften, die jedem Zeichen eines Zeichenvorrats (Urbildmenge) eindeutig ein Zeichen oder eine Zeichenfolge aus einem m ¨oglicherweise anderen Zeichenvorrat (Bildmenge) zuordnen (Claus und Schwill, 2003). Codes traten im Laufe des Schuljahrs h ¨auﬁger auf. In Musik waren zum Beispiel T ¨one zun¨achst als Zahlen, in Deutsch W ¨orter in Geheimschrift und in Mathematik Dezimalzahlen als r ¨omische Zahlen codiert. Selbstst ¨andig entwickelten die Sch ¨ulerinnen und Sch¨uler nur im Test zu den informatischen Grundkonzepten einen Code f ¨ur Geburtsdaten (vgl. Anhang B, S. 219). Im Vortest entwarfen 5 und im Nachtest 13 Sch ¨ulerinnen und Sch ¨uler einen korrekten Code. Fehlte die Abbildungsvorschrift f ¨ur den Punkt, so spielte das bei der Bewertung keine Rolle. Alle Kinder, die die Aufgabe zu Beginn des Schuljahrs l ¨osten, waren auch im Nachtest erfolgreich. Die von den Sch ¨ulerinnen und Sch ¨ulern f ¨ur die Codes gew ¨ahlten Urbildmengen k ¨onnen in vier Kategorien aufgeteilt werden: •Zahlen von 0 bis 9 und Punkt •Zahlen von 0 bis 9 •Nur die f ¨ur die Anwendung notwendigen Zahlen (unvollst ¨andig) •Zu viele Zahlen (keine eindeutige Codierung m ¨oglich). Der Sch ¨uler, der die L ¨osung in Abbildung 6.17 ganz links erstellte, codierte alle Zahlen von 0 bis 9 und den Punkt. Die L ¨osung der Sch ¨ulerin in der Mitte ber ¨ucksichtigte nur die Zahlen, die f ¨ur die Daten”20.03.1993“ und”30.12.1786“ notwendig waren. Aus diesem Grund fehlte die Abbildungsvorschrift f ¨ur die Ziﬀer”4“. Ganz rechts wurden Abbildungsvorschriften f ¨ur die Zahlen von 0 bis 12 notiert. Der Monat Dezember wurde mit”SA“ codiert. M ¨oglich w ¨are auch”J“ gewesen. 1566.4 Lernerfolg informatischer Grundkonzepte – Unterrichtsmaterialien Code 1 Code 2  Abbildung 6.17: Codes der Sch ¨ulerinnen und Sch ¨uler f ¨ur Daten Abbildung 6.18 zeigt die Verteilung der von den Sch ¨ulerinnen und Sch ¨ulern entwickelten Urbildmengen im Vortest (18 L ¨osungsversuche) und im Nachtest (27 L ¨osungsversuche). Vortest6% 22% 17%55%1 2 3 4 Nachtest15% 30% 7%48%Zahlen von 0 bis 9 und Punkt Zahlen von 0 bis 9 Nur die für die Anwendun g notwendigen Zahlen (unvollständig) Zu viele Zahlen (keine eindeutige Codierung möglich) Abbildung 6.18: Codetypen f ¨ur Geburtsdaten Interessant sind die verschiedenen Notationsformen des Codes. Die Abbildungsvorschriften wurden zum Beispiel mit Hilfe von Gleichheitszeichen (Abbildung 6.17 rechts), mit Bindestrichen, durch vertikale und horizontale (Abbildung 6.17 Mitte) Gegen ¨uberstellungen oder innerhalb einer Tabelle (Abbildung 6.17 links) in aufeinander folgenden Zellen in einer Zeile dargestellt. Es erfolgte immer eine direkte Zuordnung eines Elementes aus der Urbildmenge zu einem Element in der Bildmenge. Lediglich eine Sch ¨ulerin deﬁnierte im Nachtest die Urbildund Bildmenge getrennt f ¨ur Tage, Monate und Jahre. Sie gab nicht f ¨ur jedes Element einzeln eine Abbildungsvorschrift an. Diese war vielmehr in den Worten vonundabimplizit enthalten. F ¨ur die Jahreszahl wurde sie durch die Verbindung der einzelnen Ziﬀern durch Linien verdeutlicht (vgl. Abbildung 6.19). 1576 Darstellung und Interpretation der Ergebnisse Pretest6% 22% 17%55%1 2 3 4 Posttest15% 30% 7%48%Zahlen von 0 bis 9 und Punkt Zahlen von 0 bis 9 Nur die für die Anwendung notwendigen Zahlen (unvollständig) Zu viele Zahlen (inkonsistent) Abbildung 6.19: Abbildungsvorschrift eines Codes Zur Darstellung der Abbildung der Elemente der Urbildmenge auf die Elemente der Bildmenge wurden die Elemente der Urbildmenge typischerweise links und die der Bildmenge rechts angeordnet. Erstaunlicherweise war dies bei 33 Prozent der F ¨alle im Vortest und 25 Prozent im Nachtest nicht der Fall. Da in den folgenden beiden Aufgaben nur Geburtsdaten codiert und nicht dekodiert wurden, konnte nicht gekl ¨art werden, ob bei einer Vermischung der Aufgaben eine h ¨ohere Fehlerquote durch diese un ¨ubliche Anordnung auftreten w ¨urde. Dies ist vor allem bei identischen Urbildund Bildmengen zu erwarten. Abbildung 6.20 zeigt, dass bei der Erstellung der Codes zu den Geburtsdaten die im sprachlichen Denken st ¨arkeren Kinder wesentlich erfolgreicher waren. Dies widerspricht den in Kapitel 6.3.2 beschriebenen Ergebnissen der Tests zu den informatischen Grundkonzepten. Sprachgebundenes  Denken  25% 67% 75% 33%  schwach stark richtig falsch  Abbildung 6.20: Erfolg beim Entwurf des Codes f ¨ur Daten 1586.4 Lernerfolg informatischer Grundkonzepte – Unterrichtsmaterialien 6.4.2 Informatische Modellierung Datenstrukturen Mit Hilfe von Datenstrukturen werden Wertebereiche aus elementaren, d.h. nicht weiter zerlegbaren Wertebereichen mit Hilfe von Konstruktoren aufgebaut (Claus und Schwill, 2003). Die Datenstrukturen dienen dann zur Verwaltung und Verkn¨upfung von Daten, so dass auf diese zugegriﬀen werden kann. Im Unterricht entwickelten die Sch ¨ulerinnen und Sch ¨uler die Datenstrukturen nicht mit Hilfe von Konstruktoren, sondern implementierten sie direkt als Logo-Listen. Im zweiten Test w ¨ahrend des Schuljahrs schrieben sie Logo-Funktionen, mit denen die S ¨atze •Ben can play football. •Sanjay can sing a song. •Jenny can draw a picture. automatisch generiert wurden (vgl. Anhang G, S. 245). Wichtig war dabei, dass a song unda picture in eckigen Klammern geschachtelt wurden. [ football [a song] [a picture] ] 14 der 25 L ¨osungen enthielten Fehler. Die Datenstrukturen waren entweder aus anderen S¨atzen aufgebaut ( [ [der Brief] [die Leiter] ] ), die Objekte auf die W ¨orter song undpicture beschr ¨ankt ( [ football song picture ] ) oder es fehlten einfach die eckigen Klammern ( [ football a song a picture ] ). Die Datenstruktur an sich war nur im letzten Fall fehlerhaft. Ann ¨ahernd gleich verteilten sich die korrekten L ¨osungen auf die korrespondierenden Gruppen der Sch ¨ulerinnen und Sch ¨uler. Modellierung EinModell ist nach Baumann (1996, S. 161) eine vereinfachte strukturund verhaltenstreue Beschreibung eines realen Systems. Bei der Modellierung handelt es sich ganz allgemein gesprochen um den Entwurf eines Modells. Dies schließt nat ¨urlich eine Bearbeitung und Erweiterung ein. Beim Autospiel (vgl. Kapitel 4.3, S. 97 ﬀ.) wurden sowohl das Modell der Benutzerschnittstelle als auch der interne Aufbau des Programms erweitert. Nur zehn Sch ¨ulerpaare speicherten ihre L ¨osung ab. Diese enthielten zwei bis acht neue Spiel-Modi, f ¨ur die an der Oberﬂ ¨ache weitere Schaltﬂ ¨achen eingef ¨ugt worden waren. Ihre Beschriftung ließ in fast allen F ¨allen einen R ¨uckschluss auf den Schwierigkeitsgrad des Modus zu. Außerdem waren sie bez ¨uglich der Schwierigkeitsstufen fallend oder aufsteigend angeordnet. Sechs Paare achteten auch auf die ¨außere Gestalt der Schaltﬂ ¨achen. Es zeigte sich, dass die Sensibilit ¨at der Sch ¨ulerinnen und Sch ¨uler f ¨ur die Benutzerfreundlichkeit und den ¨asthetischen Gesamteindruck ihres Produkts sehr hoch war. So wurde das Modell der Benutzerschnittstelle stimmig erweitert. 1596 Darstellung und Interpretation der Ergebnisse Auch bei der Benennung neuer Befehle f ¨ur verschiedene Schwierigkeitsstufen war in allen L ¨osungen eine Systematik zu erkennen. Das prinzipielle Vorgehen wurde durch das vorherige Codestudium mit Hilfe von Arbeitsbl ¨attern vorbereitet, so dass sich die Kinder an der konsistenten Nomenklatur der verschiedenen Module, die zum Teil in Abbildung 6.21 dargestellt sind, orientieren konnten. Abbildung 6.21: Nomenklatur der Befehle im Autospiel F¨unf Paare w ¨ahlten Bezeichnungen, in denen der Spielmodus sichtbar wurde. Sie nannten sie zum Beispiel Anf¨ anger ,Fortgeschrittener ,Profi oder 10kmh ,50kmh ,100kmh . Die Verh¨altnisse der Geschwindigkeiten im letzten Beispiel spiegelten sich allerdings nicht im Programmcode wider. Ein Paar nutzte f ¨ur die Benennung seiner Befehle Abk ¨urzungen wie n(normal), p(Proﬁ) oder s(super schnell). Drei weitere L ¨osungen nahmen den vorgegebenen Befehlsnamen starte Autofahrt und h ¨angten entweder Nummern an (starte Autofahrt 2) oder vergaben Namen wie Starte Aut,Starte Auto,Starte Autof etc. Das interne Modell des Spiels wurde durch die Erweiterung der Funktionalit¨at konsistent ver ¨andert. Objektorientierung DieObjektorientierung bezeichnet ein Paradigma f ¨ur die Analyse und den Entwurf von Systemen, die aus gleichberechtigten Objekten aufgebaut sind. Grundlegende Prinzipien der Objektorientierung sind u.a. Objekte ,Klassen ,Attribute ,Methoden , Nachrichten ,Vererbung undIdentit ¨at. Am Ende des Schuljahrs beherrschten die Sch ¨ulerinnen und Sch ¨uler auf der Ebene der Programmierung einige objektorientierte Konzepte. Sie kannten Klassen des Imagine Logo Systems (z.B. TURTLE ,TEXTBOX ) mit Attributen und Methoden, benannten die Objekte der Klassen (Identit ¨at) und riefen entsprechende Methoden auf. Sie bewegten in der Rittergeschichte ( FOREVER [ knight’FD 20 WAIT 100 knight’RT 786 ] ) oder der Bildergeschichte ( FOREVER [ Jim’FD 20 WAIT 100 ] ) Figuren, ver ¨anderten die Attributwerte der Textfelder im R ¨atsel der Rittergeschichte ( question1’SETBGCOLOUR 12 ) 1606.4 Lernerfolg informatischer Grundkonzepte – Unterrichtsmaterialien oder ¨uberpr ¨uften im Labyrinthspiel die Ber ¨uhrung der Maus mit der Wand ( IF EQUAL? mouse’DOTCOLOUR "red ). 6.4.3 Arbeitstechniken Modularisierung und Hierarchisierung EinModul ist ein Teilsystem mit klaren Grenzen (Schnittstelle) zu seiner Umgebung. Die Modularisierung ist der Prozess der Zerlegung eines Systems in Module (Baumann, 1996, S. 261). Im Gegensatz dazu handelt es sich bei der Hierarchisierung um einen Prozess der Zusammensetzung eines komplexen Systems aus Modulen. Die informatischen Grundkonzepte der Modularisierung und Hierarchisierung wurden wie auch die Objektorientierung in sehr vielen Unterrichtseinheiten angewendet. In einigen Situationen wurden vorgegebene Module genutzt, um eine konkrete Aufgabenstellung zu l ¨osen. F ¨ur die Weihnachtskarte in Abbildung 6.22 verwendete der Sch ¨uler zum Beispiel das Modul Kerze zur Erzeugung eines Rahmens um die Karte und Dreieck zur Gestaltung des Sterns in der Mitte. Abbildung 6.22: Weihnachtskarte, zusammengesetzt aus den Modulen Kerze undDreieck Beim Entwurf der Satzund Fragegeneratoren mussten die Sch ¨ulerinnen und Sch ¨uler die Problemstellungen selbst in Teilprobleme zerlegen und f ¨ur diese eigenst ¨andige L ¨osungen in Form von Funktionen f ¨ur die einzelnen Satzteile implementieren. Diese setzten sie dann mit der Funktion SATZ bzw. SENTENCE zu Generatoren zusammen. 1616 Darstellung und Interpretation der Ergebnisse Die F ¨ahigkeit der Kinder, die Modularisierung und Hierarchisierung anzuwenden, werden im folgenden Abschnitt Abstraktion und in den Kapiteln 6.4.4 und 6.4.5 bei der Analyse der informatischen Grundkonzepte Syntaxdiagramm ,Grammatik undFunktion ausf¨uhrlich beschrieben. Abstraktion DieAbstraktion ist ein Verallgemeinerungsprozess. In zahlreichen Unterrichtsbeispielen abstrahierten die Sch ¨ulerinnen und Sch ¨uler Satzstrukturen aus Beispiels ¨atzen, beschrieben diese mit Maschinen und Syntaxdiagrammen und implementierten sie in Logo als Funktionen. Im ersten Test in Aufgabe 4 leiteten sie aus drei Fragen der Art”Is Nick the brother of Debbie?“ (vgl. Anhang G, S. 241) eine zusammengesetzte Maschine ab. Sie abstrahierten die Namen Nick,BenundDebbie in einer Maschine name . 21 Kinder l ¨osten die Aufgabe richtig. Sie schrieben nicht eine der Fragen direkt an die Eingabetrichter der Funktion SENTENCE , sondern zeichneten die Maschine name . Abbildung 6.23 zeigt die L ¨osung eines Sch¨ulers. Der Datenﬂuss von oben nach unten durch die Eingabeund Ausgabetrichter der Maschinen ist deutlich zu erkennen. Abbildung 6.23: Zusammengesetzte Maschinen – Englische”Is“-Fragen 14 L¨osungen enthielten auch den unteren Ausgabetrichter der Funktion. Sieben L ¨osungen waren falsch und nur zwei Kinder bearbeiteten die Aufgabe ¨uberhaupt nicht. Im zweiten Test drei Monate sp ¨ater, in dem Satzstrukturen mit Syntaxdiagrammen beschrieben wurden, war keine Leistungssteigerung zu erkennen (vgl. Kapitel 6.4.4, S. 168 ﬀ.). Wie schon bei der Entwicklung der Datenstruktur der geschachtelten Liste (siehe Kapitel 6.4.2, S. 159) verteilten sich die korrekten zusammengesetzten Maschinen etwa gleich auf die verschiedenen Gruppen der Sch ¨ulerinnen und Sch ¨uler. Anders sahen die Ergebnisse beim Lesen der zusammengesetzten Maschinen aus. Im ersten Test in Aufgabe 3 (vgl. Anhang G, S. 240) mussten zwei Fragen der Art”Is Ben from Asthon?“ aus der vorgegebenen zusammengesetzten Maschine abgeleitet werden. Hier waren die Kinder erfolgreicher, die im KFT insgesamt und im Bereich des formallogischen Denkens besser waren (vgl. Abbildung 6.24). Insgesamt konnten 22 Sch ¨ulerinnen und Sch ¨uler die Fragen richtig formulieren. 1626.4 Lernerfolg informatischer Grundkonzepte – Unterrichtsmaterialien Kognitives  Gesamtleistungsniveau  50% 92% 33% 8% 17%  schwach stark Formallogisches  Denken  59% 92% 33% 8% 8%  schwach stark richtig falsch nicht gelöst  Abbildung 6.24: Erfolg beim Lesen der zusammengesetzten Maschinen englischer”Is“Fragen Iteration Unter Iteration wird die Wiederholung von Anweisungen oder Anweisungsfolgen verstanden. In einer Unterrichtseinheit zu den ebenen Figuren mussten die Sch ¨ulerinnen und Sch ¨uler das Zeichnen eines Rechtecks iterativ beschreiben (vgl. Kapitel 4.1, S. 66). 18 Kinder l¨osten die Aufgabe richtig, acht Beschreibungen waren falsch und vier Arbeitsbl ¨atter wurden nicht bearbeitet. Die fehlerhaften Aufgaben verteilten sich auf die in Tabelle 6.24 dargestellten vier Kategorien. Fehlerkategorien Anzahl kein WIEDERHOLE -Befehl 3 vw 100 re 90 vw 50 re 90 vw 100 re 90 vw 50 re 90 vierfache Wiederholung 2 wh 4 [ vw 100 re 90 vw 50 re 90 ] Igel wird nur einmal gedreht 1 wh 2 [ vw 100 re 9 vw 50 ] keine Struktur zu erkennen 2 Tabelle 6.24: Fehlerkategorien bei der iterativen Beschreibung des Programmcodes eines Rechtecks Zwei wiederholten die Folge der Anweisungen viermal wie beim Quadrat. In drei L ¨osungen fehlte der WIEDERHOLE -Befehl ganz. Einmal wurde vergessen, dass sich der Igel nach jeder Bewegung drehen muss. In der Befehlsfolge vw 100 re 9 vw 50 wurde nur beachtet, dass ein Rechteck zwei verschieden lange Seiten hat. In den anderen fehlerhaften L¨osungen war ¨uberhaupt keine Struktur zu erkennen. 1636 Darstellung und Interpretation der Ergebnisse Abbildung 6.25 zeigt, dass vor allem wieder die Kinder mit einem hohen kognitiven Gesamtleistungsniveau und St ¨arken im formallogischen Denken den Abstraktionsschritt zu einer iterativen Beschreibung vollziehen konnten. Kognitives  Gesamtleistungsniveau  25% 84% 50% 8% 25% 8%  schwach stark Formallogisches  Denken  25% 84% 50% 8% 25% 8%  schwach stark richtig falsch nicht gelöst  Abbildung 6.25: Erfolg bei der iterativen Beschreibung eines Rechtecks Rekursion Rekursion ist die Deﬁnition einer Funktion oder eines Verfahrens durch sich selbst (Claus und Schwill, 2003). Beim Zeichnen von Figuren auf Basis von rekursiven Beschreibungen steigerten sich die Sch ¨ulerinnen und Sch ¨uler im Test zu den informatischen Grundkonzepten (vgl. Anhang B, S. 204) vom Schuljahresbeginn zum Schuljahresende erheblich. Im Vortest konnten lediglich 4, im Nachtest immerhin 20 Kinder eine rekursive Beschreibung in eine Zeichnung umsetzen. Auch im Unterricht ¨ubten die Sch ¨ulerinnen und Sch ¨uler das Zeichnen von rekursiven Figuren (vgl. Kapitel 4.3). Die Auswertung der Arbeitsbl ¨atter zeigte, dass fast alle Figuren w ¨ahrend der eigenen Arbeit oder der Besprechung im Klassenverband korrigiert wurden. Trotzdem enthielten viele Arbeitsbl ¨atter noch Fehler. Dies wurde vor allem an der zweiten Figur deutlich, die nach folgender Vorschrift gezeichnet wurde: Aufgabe: ”Kreisrekeln“ bedeutet, in einem Kreis in der linken H ¨alfte einen halb so großen Kreis zu zeichnen und diesen kleineren neuen Kreis dann zu”Kreisrekeln“. Die Fehlertypen sind in Tabelle 6.25 und entsprechende Beispiele in Abbildung 6.26 abgebildet. Im ersten Fall wurden in der rechten H ¨alfte Ovale gezeichnet. Im zweiten Bild beﬁndet sich nur der ¨außerste Kreis in der linken H ¨alfte seines ¨ubergeordneten Kreises. Die im Rekursionsaufruf konstruierten Kreise wurden dann jeweils in die Mitte 1646.4 Lernerfolg informatischer Grundkonzepte – Unterrichtsmaterialien KatNr Fehlerkategorien Anz. 1 Kreise in der rechten H ¨alfte 4 2 Kreise aus dem Rekursionsaufruf in der Mitte und nicht in der linken H ¨alfte4 3 Ovale statt Kreise 9 4 Keine Halbierung des Kreisdurchmessers 16 5 Kreise in der Mitte 1 Tabelle 6.25: Fehlerkategorien beim Zeichnen der rekursiven Kreisﬁgur ( N= 29; Mehrfachnennungen m ¨oglich) gezeichnet. Ganz rechts wurden die Kreise schon von Beginn an in der Mitte platziert. In allen drei F ¨allen fehlte außerdem die Halbierung des Kreisdurchmessers. Kat. 1, 3, 4 Kat. 2, 4 Kat. 4, 5  Abbildung 6.26: Fehlerhafte Darstellungen rekursiver Kreisﬁguren Beim abschließenden selbstst ¨andigen Zeichnen einer Figur, die”nach dem gleichen Prinzip aufgebaut“ war, wurden vor allem von den Jungen (siehe Abbildung 6.27) 18 L ¨osungen entwickelt. Eine davon wiederholte nur die Kreisﬁgur und in einer weiteren wurden Kreuze und Rechtecke vermischt. Geschlecht  77%  47% 23%  53%  m wrichtig nicht gelöst  Abbildung 6.27: Erfolg bei der selbstst ¨andigen Entwicklung einer rekursiven Figur 1656 Darstellung und Interpretation der Ergebnisse Anders als bei der Umsetzung der rekursiven Beschreibungen in Figuren, in der die Halbierung der Kreisdurchmesser nicht beachtet wurde, sind in der Dreiecksﬁgur links noch die Mittelsenkrechten der verschiedenen Dreiecke erkennbar. Der Sch ¨uler benutzte diese als Hilfslinien, um eine exakte L ¨osung zu konstruieren. Nach Fertigstellung der Zeichnung radierte er sie wieder aus. Abbildung 6.28: Rekursive Figuren der Sch ¨ulerinnen und Sch ¨uler Neun Kinder beschrieben zus ¨atzlich zu ihrer rekursiven Figur noch den Zeichenprozess. Allerdings gelang dies nur sehr wenigen rekursiv. Das Strichm ¨annchen in Abbildung 6.28 in der Mitte wurde von dem Sch ¨uler zum Beispiel folgendermaßen iterativ beschrieben: ”Strichm ¨annrekeln: Malen sie ein Strichm ¨annchen. Malen sie in den Kopf ein Strichm ¨annchen. Und jetzt wieder das immer wiederholen“ Eine korrekte rekursive Beschreibung lieferte eine Sch ¨ulerin f ¨ur die Figur rechts: ”Rechtforekeln bedeutet im linken oberen Teil des Rechtecks ein neues Rechteck zu zeichnen und dieses zu Rechtforekeln.“ Vier Tage sp ¨ater wurde das Beschreiben rekursiver Figuren wiederholt. Auch dort zeigte sich, dass das iterative Denken sehr stark ausgepr ¨agt war. Abbildung 6.29: Rekursive Kreuzund Rechtecksﬁguren 26 L¨osungen wurden von den Sch ¨ulerinnen und Sch ¨ulern f ¨ur die beiden Figuren in Abbildung 6.29 erstellt, doch keine Formulierung erfolgte rekursiv. Zwar deﬁnierten neun Kinder einen Namen f ¨ur das Vorgehen, verwendeten diesen dann aber nicht in ihrer Be1666.4 Lernerfolg informatischer Grundkonzepte – Unterrichtsmaterialien schreibung. 14 gaben die Anzahl der ineinander geschachtelten Figuren genau an (vgl. Tabelle 6.26). Formen der iterativen Beschreibung der Anzahl der Figuren Anzahl Jede einzelne Figur 4 (z.B.”Male ein großes Kreuz und oben rechts vom Kreuz noch ein neues Kreuz und dann in das Kreuz oben rechts noch ein Kreuz und dann oben rechts noch ein Kreuz und dann wieder oben rechts noch ein Kreuz. “) Konkrete Angabe von Wiederholungen 10 (z.B.”Malen Sie ein Kreuz. In das Eck rechts oben malen Sie ein halb so großes Kreuz. Wiederholen Sie es 3 mal. “) Oﬀen 10 (z.B.”Wiederhole das so oft wie es geht. “) Sonstige 2 Gr¨oßenangaben der geschachtelten Grundﬁgur Anzahl Keine 15 Halbierung 3 (z.B.”ein um die H ¨alfte kleineres Kreuz ) Sonstige Angaben 8 (z.B.”malst du wieder ein Kreuz so groß, dass die ganze Ecke ausgef ¨ullt ist “ oder ”ein kleineres Kreuz “) Tabelle 6.26: Beschreibung der rekursiven Kreuzﬁgur ( N= 26) Ann¨ahernd gleich verteilte sich die f ¨ur die Rekursion wichtige oﬀene Formulierung der Anzahl der Wiederholungen auf die L ¨osungen der korrespondierenden Gruppen. Das Ziel, Sch ¨ulerinnen und Sch ¨uler mit der Eleganz kompakter, rekursiver Beschreibungen zu faszinieren, wurde nach Ansicht der Forscherin allerdings erreicht, da die Kinder begeistert im Unterricht mitarbeiteten und selbstst ¨andig versuchten, rekursive Beschreibungen zu entwickeln. In weiteren Klassenstufen muss rekursives Denken noch ge ¨ubt werden. 6.4.4 Informatische Beschreibungsmittel Programmablaufplan Probleml ¨osungen k ¨onnen sich aus verschiedenen Einzelaktionen zusammensetzen, die in einer vorgegebenen Reihenfolge ausgef ¨uhrt werden m ¨ussen. F ¨ur ihre Beschreibung eignen sich Programmablaufpl ¨ane, eine normierte Methode zur graﬁschen Darstellung von Ablaufstrukturen. 1676 Darstellung und Interpretation der Ergebnisse Einen relativ komplexen Programmablaufplan entwickelten die Sch ¨ulerinnen und Sch ¨uler zum Vorgehen bei der Bildung des Komparativs regelm ¨aßiger und auf”e“ endender Adjektive und stark undgutaus vorgegebenen Entscheidungen und Handlungen (vgl. Kapitel 4.1, S. 78 f.). Korrekt waren 14 Programmablaufpl ¨ane, elf enthielten Fehler und f¨unf Kinder l ¨osten die Aufgabe ¨uberhaupt nicht. Bei genauerer Betrachtung der Struktur der Programmablaufpl ¨ane ﬁel auf, dass Fehler geh¨auft in L ¨osungen auftraten, in denen die Sch ¨ulerinnen und Sch ¨uler die Entscheidungen und Handlungen v ¨ollig unstrukturiert angeordnet hatten (vgl. Anhang H, S. 249). In L¨osungen, die inhaltlich die Allgemeinheit der Bildungsregeln der Komparativform ber¨ucksichtigten (vgl. Anhang H, S. 250), war die Quote der richtigen L ¨osungen h ¨oher. Es wird deutlich, dass sowohl formale als auch inhaltliche Strukturierungen zu besseren Ergebnissen f ¨uhrten. Vermutlich haben genau die im formallogischen Denken starken Kinder diese F ¨ahigkeit und k ¨onnen die Aufgabe besser l ¨osen (vgl. Abbildung 6.30). Auch die Kinder mit einem besseren kognitiven Gesamtleistungsniveau waren erfolgreicher. Kognitives  Gesamtleistungsniveau  33% 67% 33% 25% 33% 8%  schwach stark Formallogisches  Denken  25% 67% 42% 25% 33% 8%  schwach stark richtig falsch nicht gelöst  Abbildung 6.30: Erfolg bei der Erstellung des Programmablaufplans zur Steigerung von Adjektiven Syntaxdiagramm Syntaxdiagramme sind informatische Beschreibungsmittel zur Darstellung von kontextfreien Grammatiken (Claus und Schwill, 2003). Im zweiten Test in Aufgabe 2 waren die Elemente des Syntaxdiagramms, d.h. die Satzglieder und der Punkt, schon vorgegeben (vgl. Anhang G, S. 244). Diese mussten f ¨ur zwei S¨atze in die richtige Reihenfolge gebracht werden. 23 Darstellungen waren korrekt. In den sieben fehlerhaften Syntaxdiagrammen vertauschten die Sch ¨ulerinnen und Sch ¨uler die Reihenfolge der Dativund Akkusativobjekte. Beim anschließenden Formulieren eines Beispielsatzes wurden die Satzglieder wieder in der Reihenfolge der Beispiele und nicht entsprechend des Syntaxdiagramms angeordnet. 1686.4 Lernerfolg informatischer Grundkonzepte – Unterrichtsmaterialien Wahrscheinlich hatten die Kinder eher Schwierigkeiten mit der Bestimmung der Satzglieder als mit der Entwicklung der abstrakten Beschreibung in Form des Syntaxdiagramms. Die leistungsst ¨arkeren Sch ¨ulerinnen und Sch ¨uler und diejenigen mit gr ¨oßeren F ¨ahigkeiten beim zahlengebundenen Denken konnten die Aufgabe besser l ¨osen (vgl. Abbildung 6.31). Kognitives  Gesamtleistungsniveau  58% 92% 42% 8%  schwach stark Zahlengebundenes  Denken  50% 92% 50% 8%  schwach stark richtig falsch  Abbildung 6.31: Erfolg bei der Erstellung eines Syntaxdiagramms f ¨ur deutsche S ¨atze unter Vorgabe von Bausteinen In Aufgabe 1 des Tests (vgl. Anhang G, S. 243) waren die Bausteine des Syntaxdiagramms nicht vorgegeben. Da nicht davon ausgegangen werden konnte, dass alle das Satzglied der adverbialen Bestimmung des Ortes kannten, wurde es in den beiden Beispiels ¨atzen mit Ortgekennzeichnet. Die beiden Subjekte erhielten eine Marke Blume . Das Sytaxdiagramm der einfachsten L ¨osung h ¨atte folgendermaßen ausgesehen: Blume Ort wächst . Abbildung 6.32: Syntaxdiagramm deutscher S ¨atze 21 Sch ¨ulerinnen und Sch ¨uler nahmen die Hilfestellung ¨uberhaupt nicht wahr. Sie verwendeten in ihren Syntaxdiagrammen f ¨ur die Blume 21 Mal Subjekt und den Ort 13 Mal Objekt ,Akkusativ ,Dativ oder richtigerweise viermal adverbiale Bestimmung des Ortes . Obwohl das Pr ¨adikat in beiden S ¨atzen w¨achst war, wurde es von 16 Kindern zum Pr¨adikat abstrahiert. Dies wurde jedoch nicht als Fehler gewertet. Nur zw ¨olf Syntaxdiagramme waren korrekt, 16 falsch und zwei Sch ¨ulerinnen und Sch ¨uler versuchten ¨uberhaupt nicht, die Aufgabe zu l ¨osen. Das Ergebnis ﬁel schlechter aus, da der Schritt der Abstraktion selbst vollzogen werden musste. Teilweise wurde sehr ungenau gearbeitet, da die Struktur der deutschen S ¨atze f ¨ur das inhaltliche Verst ¨andnis nicht 1696 Darstellung und Interpretation der Ergebnisse analysiert werden musste. Hier waren die Kinder, die im KFT insgesamt und im Bereich des sprachgebundenen Denkens besser waren, erfolgreicher (siehe Abbildung 6.33). Kognitives  Gesamtleistungsniveau  25% 58% 67% 42% 8%  schwach stark Sprachgebundenes  Denken  17% 59% 83% 33% 8%  schwach stark richtig falsch nicht gelöst  Abbildung 6.33: Erfolg bei der Erstellung eines Syntaxdiagramms f ¨ur deutsche S ¨atze ohne Vorgabe von Bausteinen Anders verhielt es sich mit englischen S ¨atzen, deren Inhalte nicht intuitiv erfasst werden konnten. Aus diesen leiteten 17 Sch ¨ulerinnen und Sch ¨uler das Syntaxdiagramm richtig ab, obwohl ihnen die Satzstruktur zu diesem Zeitpunkt noch nicht bekannt war. M ¨oglicherweise f ¨allt eine allgemeine, abstrakte Darstellung von S ¨atzen in einer Fremdsprache leichter, da st ¨arker in Strukturen und weniger in Inhalten gedacht wird. F ¨unf Kinder l¨osten die Aufgabe ¨uberhaupt nicht und acht Syntaxdiagramme waren fehlerhaft. Bei den englischen S ¨atzen schnitten die Kinder, die im KFT eine im zahlengebundenen und formallogischen Denken h ¨ohere Leistung erzielt hatten, besser ab (vgl. Abbildung 6.34). Zahlengebundenes  Denken  42% 75% 25% 17% 33% 8%  schwach stark Formallogisches  Denken  42% 75% 33% 17% 25% 8%  schwach stark richtig falsch nicht gelöst  Abbildung 6.34: Erfolg bei der Erstellung eines Syntaxdiagramms f ¨ur englische S ¨atze ohne Vorgabe von Bausteinen 1706.4 Lernerfolg informatischer Grundkonzepte – Unterrichtsmaterialien UML-Klassendiagramm UML-Klassendiagramme werden genutzt, um Klassen und ihre Beziehungen formal zu beschreiben. Die Beziehungen basieren auf den die Klassen beschreibenden Merkmalen. In der Unterrichtseinheit zu den ebenen Figuren (vgl. Kapitel 4.1, S. 71 f.) mussten die Beziehungen zwischen den Klassen Viereck ,Parallelogramm ,Rechteck ,Raute und Quadrat verbal in Form”jedes Quadrat ist auch ein Rechteck“ beschrieben werden. Nat¨urlich existierten diese Beziehungen auch ¨uber mehrere Ebenen hinweg. In 12 der vorhandenen 26 L ¨osungen erkannten die Kinder dies und formulierten S ¨atze wie”Jede Raute ist ein Viereck und ein Parallelogramm“. In den 14 anderen L ¨osungen wurden nur die Beziehungen zur direkten Oberklasse beschrieben. Unabh ¨angig vom Geschlecht und den im KFT ermittelten F ¨ahigkeiten wurde die Aufgabe von allen Sch ¨ulerinnen und Sch¨ulern ann ¨ahernd gleich erfolgreich bearbeitet. Im Test zu den informatischen Grundkonzepten wurden im Gegensatz zum UML-Klassendiagramm der ebenen Figuren die Attribute der ¨ubergeordneten Klassen nicht wiederholt (vgl. Anhang B, S. 201). F ¨ur vier Klassen der dort charakterisierten Lebewesen schrieben die Sch ¨ulerinnen und Sch ¨uler die Eigenschaften auf. Nachdem im Vortest nur sieben Kinder die Aufgabe richtig l ¨osten, waren es im Nachtest immerhin 13. Nur eine Sch¨ulerin, die die Aufgabe im Vortest korrekt bearbeitet hatte, l ¨oste sie im Nachtest nicht. Auch hier kann kein Zusammenhang mit dem Geschlecht und den F ¨ahigkeiten aufgezeigt werden. Hierarchien Hierarchien sind Systeme, in denen Elemente einander ¨uberund untergeordnet sind. Dabei darf jedes Element h ¨ochstens einem anderen untergeordnet sein. Die Sch ¨ulerinnen und Sch ¨uler mussten im Test zu den informatischen Grundkonzepten sechs Begriﬀe in eine vorgegebene Hierarchie mit acht Elementen einordnen (vgl. Anhang B, S. 202). Zwei der Elemente waren bereits eingetragen. Im Vortest l ¨osten 13 und im Nachtest 12 Sch ¨ulerinnen und Sch ¨uler die Aufgabe korrekt. Erstaunlich ist allerdings, dass sieben Kinder, die die Begriﬀe im Vortest korrekt in die Hierarchie eintrugen, im Nachtest die Aufgabe nicht richtig l ¨osten. Ein m ¨oglicher Grund kann aus der Bearbeitungsweise der Aufgabe abgeleitet werden. Vor allem im Vortest waren die Sch¨ulerinnen und Sch ¨uler erfolgreicher, die die vorgegebenen Begriﬀe nach dem Einordnen in die Hierarchie systematisch markierten oder ausstrichen. Von den zw ¨olf, die die W¨orter kennzeichneten, l ¨osten acht im Vortest die Aufgabe richtig. Im Nachtest war dieser Eﬀekt nicht mehr so deutlich zu erkennen. Zu Beginn des Schuljahrs unterschieden sich die Ergebnisse bei der Bearbeitung dieser Aufgabenstellung nur hinsichtlich der Variablen formallogisches Denken (vgl. Abbildung 6.35). Im Nachtest zeigte sich dagegen das bei der Gesamtauswertung des Tests 1716 Darstellung und Interpretation der Ergebnisse zu den informatischen Grundkonzepten analysierte Ph ¨anomen, dass am Ende des Schuljahrs die Jungen und die Kinder, die im sprachgebundenen Denken schwach und im zahlengebundenen und formallogischen Denken stark waren, bessere Resultate erzielten (vgl. Abbildung 6.36). Formallogisches  Denken  33% 75% 67% 25%  schwach stark richtig falsch  Abbildung 6.35: Erfolg bei der Bildung der Begriﬀshierarchie im Vortest Geschlecht  77%  12% 23%  88%  m wSprachgbundenes  Denken  58%  25% 42%  75%  schwach stark Zahlengebundenes  Denken  17% 58% 83% 42%  schwach stark Formallogisches  Denken  25% 58% 75% 42%  schwach stark richtig falsch  Abbildung 6.36: Erfolg bei der Bildung der Begriﬀshierarchie im Nachtest Netzwerke Im Gegensatz zu Hierarchien fehlt bei der Deﬁnition von Netzwerken die Bedingung, dass ein Knoten h ¨ochstens einem anderen unmittelbar untergeordnet sein darf. Vielmehr k ¨onnen die Knoten im Netzwerk beliebig miteinander verkn ¨upft werden. Zur Darstellung eines Stammbaums konstruierten die Sch ¨ulerinnen und Sch ¨uler als Hausaufgabe ein Netzwerk (vgl. Kapitel 4.1, S. 91 f.). Der Stammbaum wurde durch 28 englische S ¨atze beschrieben. Da die S ¨atze nicht in der vorgegebenen Reihenfolge gelesen und 1726.4 Lernerfolg informatischer Grundkonzepte – Unterrichtsmaterialien abgearbeitet werden konnten, stellte die Aufgabe eine sehr große Herausforderung f ¨ur die Sch ¨ulerinnen und Sch ¨uler dar. Aus diesem Grund versuchten nur 17 Kinder einen L¨osungsansatz. Sieben von ihnen waren erfolgreich. Ihr Stammbaum enthielt alle Familienmitglieder in der korrekten Zuordnung der verwandtschaftlichen Beziehungen. Wie Abbildung 6.37 zeigt, waren die Sch ¨ulerinnen und Sch ¨uler mit einem h ¨oheren kognitiven Gesamtleistungsniveau und besseren Ergebnissen im formallogischen Denken erfolgreicher. Kognitives  Gesamtleistungsniveau  50% 42% 17% 58% 33%  schwach stark Formallogisches  Denken  8% 42% 33% 33% 58% 25%  schwach stark richtig falsch nicht gelöst  Abbildung 6.37: Erfolg bei der Ableitung eines Familienstammbaums Ihre L ¨osungen enthielten sehr stark strukturierte Stammb ¨aume, in denen die drei Ebenen der Großeltern, Eltern und Kinder deutlich erkennbar waren. Außerdem waren die Ehepaare h ¨auﬁg nebeneinander dargestellt und die Kinder mit Verbindungslinien den Eltern zugeordnet. Die Anordnung der Familienmitglieder in den fehlerhaften L ¨osungen war teilweise chaotisch (siehe Abbildung 6.38). Dazu kam noch ein nicht nachvollziehbares Netz von Verbindungslinien zur Kennzeichnung der verwandtschaftlichen Beziehungen. Abbildung 6.38: Chaotische Anordnung der Familienmitglieder in einem Stammbaum Die r ¨aumliche Positionierung der Objekte zur Darstellung ihrer Zusammengeh ¨origkeit und eine die Lesbarkeit unterst ¨utzende Nutzung von Verbindungslinien scheint also Voraussetzung f ¨ur die Bildung von Netzwerken zu sein. 1736 Darstellung und Interpretation der Ergebnisse 6.4.5 Fachnahe Inhalte Grammatik Nach Claus und Schwill (2003) ist eine Grammatik eine Menge von Regeln. Diese bestimmt, welche S ¨atze zu einer Sprache geh ¨oren und welche nicht. Im Unterrichtsversuch deﬁnierten die Sch ¨ulerinnen und Sch ¨uler in Deutsch und Englisch mehrmals f ¨ur kleine Ausschnitte der Sprachen Grammatiken. In Englisch mussten sie, wie in Kapitel 4.1 (S. 84 f.) dargestellt, die Struktur von has/have-S ¨atzen und ihre Umformungen in den s-Genitiv abstrahieren. Obwohl das Syntaxdiagramm f ¨ur has-S ¨atze als Beispiel vorgegeben war und die Satzteile in den Beispiels ¨atzen in einem ersten Schritt farbig markiert worden waren, konnten nur zw ¨olf Sch ¨ulerinnen und Sch ¨uler die Grammatik f ¨ur have-S ¨atze mit einem Syntaxdiagramm korrekt deﬁnieren. Sechs der acht falschen L ¨osungen verwendeten die ﬂektierte Verbform”has got“ anstatt”have got“ und ein Sch ¨uler vergaß das Verb ganz. Der Transfer von den S ¨atzen im Singular auf den Plural war nicht m ¨oglich. Die Regeln wurden zu ungenau angegeben. Vor allem die Sch ¨ulerinnen und Sch ¨uler mit besseren allgemeinen und formallogischen F¨ahigkeiten zeichneten das Syntaxdiagramm korrekt (vgl. Abbildung 6.39). Kognitives  Gesamtleistungsniveau  17% 67% 42% 33% 42%  schwach stark Formallogisches  Denken  17% 67% 33% 33%  50%  schwach stark richtig falsch nicht gelöst  Abbildung 6.39: Erfolg bei der Darstellung der Grammatik f ¨ur have-S ¨atze mit Hilfe von Syntaxdiagrammen Das Syntaxdiagramm f ¨ur die transformierten S ¨atze mit s-Genitiv konnten nur zwei Kinder nicht zeichnen. Obwohl die Satzglieder selbst bestimmt werden mussten und die Aufgabe dadurch schwieriger war, gelang 14 Sch ¨ulerinnen und Sch ¨ulern eine korrekte Darstellung. Die zuvor ausf ¨uhrliche Besprechung der L ¨osung der have-S ¨atze, der mehrfache Hinweis auf den Unterschied zwischen Terminalund Nichtterminalsymbolen und die wiederholte Erkl ¨arung des Zusammenhangs zwischen der abstrakten Darstellung der Regeln einer Grammatik in Form von Syntaxdiagrammen und konkreten S ¨atzen trug sicherlich zu dem etwas besseren Ergebnis bei. 1746.4 Lernerfolg informatischer Grundkonzepte – Unterrichtsmaterialien Zus¨atzlich zu den Gruppen, die schon bei der Erstellung des Syntaxdiagramms f ¨ur haveS¨atze erfolgreicher waren, erzielten auch diejenigen mit St ¨arken im zahlengebundenen Denken bessere Ergebnisse (vgl. Abbildung 6.40) Kognitives  Gesamtleistungsniveau  34% 75% 58% 25% 8%  schwach stark Zahlengebundenes  Denken  17% 75% 66% 25% 17%  schwach stark Formallogisches  Denken  25% 67% 58% 33% 17%  schwach stark richtig falsch nicht gelöst  Abbildung 6.40: Erfolg bei der Darstellung der Grammatik f ¨ur Genitiv-S ¨atze mit Hilfe von Syntaxdiagrammen Syntax und Semantik DieSyntax beschreibt den formalen Aufbau der S ¨atze einer Sprache, die Semantik hingegen die inhaltliche Bedeutung der Sprache. Bei der Generierung der S ¨atze im Unterricht wurden nur die syntaktischen Strukturen beschrieben. Die Semantik konnte h ¨ochstens dahingehend beeinﬂusst werden, dass in den Generatoren der einzelnen Satzteile nur Elemente aufgenommen wurden, die auch zu semantisch korrekten S ¨atzen f ¨uhrten. Im Ritterprojekt bei der Generierung des Gedichts ber ¨ucksichtigten dies alle Gruppen. Allerdings enthielt die L ¨osung eines Paares einen syntaktischen Fehler, da als Reime die Verben im Inﬁnitiv und nicht passend zum Subjekt in der dritten Person Singular angegeben wurden. Dies war anscheinend bei der Generierung der Beispielverse nicht aufgefallen. Funktionen Eine Funktion dr¨uckt die Abh ¨angigkeit einer Gr ¨oße von einer oder mehreren anderen Gr ¨oßen aus. Funktionen wurden prop ¨adeutisch f ¨ur den Mathematikunterricht der Klassenstufe 8 in Maschinendarstellung mit optionalen Eingabem ¨oglichkeiten und genau einer Ausgabe im Unterricht eingef ¨uhrt. Die Kommunikation der Funktionen untereinander wurde abstrakt mit zusammengesetzten Maschinen dargestellt und in Logo durch die Verkettung der Funktionen mit Hilfe der SENTENCE -Funktion programmiert. In den Tests w ¨ahrend des Schuljahrs mussten zusammengesetzte Maschinen konstruiert werden. F ¨ur Fragen wie”Is Ben the brother of Nick?“ (siehe Anhang G, S. 241) fanden im ersten Test 1756 Darstellung und Interpretation der Ergebnisse nur vier Kinder eine richtige L ¨osung. Etwas besser ﬁel das Ergebnis im zweiten Test aus. Immerhin neun Sch ¨ulerinnen und Sch ¨uler zeichneten eine richtige zusammengesetzte Maschine f ¨ur S¨atze der Form”Die Mohnblume w ¨achst auf dem Feld.“ (siehe Anhang G, S. 243). Anders als im Test zu den informatischen Grundkonzepten waren bei der Erstellung der zusammengesetzten Maschinen die Sch ¨ulerinnen und Sch ¨uler, die im sprachgebundenen Denken im KFT bessere Ergebnisse erzielt hatten, erfolgreicher (vgl. Abbildung 6.41). Wie schon bei einigen anderen informatischen Grundkonzepten zuvor erreichten außerdem die sehr leistungsstarken Kinder und die Sch ¨ulerinnen und Sch¨uler mit guten Leistungen im formallogischen Denken bessere Ergebnisse. Kognitives  Gesamtleistungsniveau  17% 50% 50% 42% 8%  33%  schwach stark Sprachgebundenes  Denken  8% 42% 67% 42% 18% 25%  schwach stark Formallogisches  Denken  17% 50% 58% 50% 25%  schwach stark richtig falsch nicht gelöst  Abbildung 6.41: Erfolg bei der Erstellung der zusammengesetzten Maschinen zu englischen”Is“-Fragen 6.4.6 Zusammenfassung und Interpretation Die Ergebnisse der Sch ¨ulerinnen und Sch ¨uler, die aus der Analyse der Arbeitsbl ¨atter, Tests und Programme abgeleitet wurden, sind sehr heterogen. Die selbstst ¨andige Formulierung exakter Beschreibungen von Vorgehensweisen unter Ber ¨ucksichtigung der Vollst¨andigkeit und Konsistenz f ¨allt teilweise noch schwer. Ein Grund daf ¨ur kann aus dem Verfahren bei der Abarbeitung vorgegebener Algorithmen abgeleitet werden. Anweisungen, die intuitive, aber notwendige Arbeitsschritte beinhalten, werden nur mental ausgef ¨uhrt. Bei der eigenen Formulierung werden diese h ¨auﬁg vergessen, so dass die Beschreibungen unvollst ¨andig sind. Das Konzept der Automatisierung wird h ¨auﬁg bei der Erstellung eigener Bilder und Animationen angewendet. Vor allem mit dem WIEDERHOLE Befehl wird sehr gerne bei der kreativen Erstellung von Bildern experimentiert. Am Ende des Schuljahrs k ¨onnen bereits 13 Sch ¨ulerinnen und Sch ¨uler selbstst ¨andig einen Code entwickeln. Die Abbildungsvorschriften werden in sehr unterschiedlichen Formaten wie zum Beispiel mit Gleichheitszeichen, Bindestrichen, durch vertikale und horizontale Gegen¨uberstellungen, in Tabellen oder getrennt f ¨ur Tag, Monat und Jahr verbal und in einer Zeichnung angegeben. 1766.4 Lernerfolg informatischer Grundkonzepte – Unterrichtsmaterialien Die h ¨auﬁg erstellten Wortgeneratoren bei der Deﬁnition von Subsprachen enthalten immer wieder fehlerhafte Datenstrukturen. Dies ist sowohl in schriftlichen Tests als auch bei Arbeiten am Rechner der Fall, obwohl die Fehler dort direkt am Bildschirm sichtbar werden. Die Erweiterung der Modelle von Programmen gelingt allen Sch ¨ulerinnen und Sch ¨ulern. Interne Strukturen und Benutzerschnittstellen werden ver ¨andert und angepasst. Sicher k ¨onnen die Kinder die objektorientierten Konzepte des Aufrufs von Methoden, der Ver ¨anderung von Attributwerten und der Auswahl bzw. Benennung von Objekten sowohl an der Oberﬂ ¨ache des Imagine Logo Systems als auch auf programmiertechnischer Ebene anwenden. Der Einsatz der Technik der Modularisierung und Hierarchisierung gelingt den Sch ¨ulerinnen und Sch ¨ulern in verschiedensten Kontexten. Die Abstraktion und die Formulierung dieser mit Hilfe der formalen informatischen Beschreibungsmittel der zusammengesetzten Maschinen oder der Syntaxdiagramme ist teilweise noch schwierig. Im Gegensatz dazu sind die Kinder beim Lesen der abstrakten Beschreibungen und der Ableitung von Beispiels ¨atzen wesentlich erfolgreicher. Iterative Formulierungen in Logo bekommen schon sehr viele zustande. Teilweise muss noch darauf geachtet werden, dass keine redundanten Wiederholungen durchgef ¨uhrt werden. Sehr stark unterscheiden sich die Sch¨ulerinnen und Sch ¨uler beim Zeichnen von Figuren, die rekursiv formuliert sind, und der eigenen Beschreibung rekursiver Figuren. Im ersten Fall ist die rekursive Struktur h¨auﬁg erkennbar, auch wenn Details wie die Halbierung von Gr ¨oßen oder die genaue Platzierung vernachl ¨assigt werden. Bei den eigenen verbalen Beschreibungen zeigt sich jedoch, dass das iterative Denken sehr stark ausgepr ¨agt ist. Keine Ausf ¨uhrung erfolgt rekursiv und selbst die Anzahl der ineinander geschachtelten Figuren wird in den meisten F¨allen konkret angegeben. Eine wichtige Voraussetzung f ¨ur korrekte formale Beschreibungen in Form von Programmablaufpl ¨anen oder Netzwerken scheint eine strukturierte Anordnung der Entscheidungen und Handlungen bzw. Knoten zu sein. Dies gelingt vor allem den allgemein Leistungsst ¨arkeren und denjenigen mit St ¨arken im formallogischen Denken besser. Die Beschreibung von Satzstrukturen mit Hilfe von Syntaxdiagrammen f ¨allt in Englisch besser als in Deutsch aus. Die Sch ¨ulerinnen und Sch ¨uler denken in der Fremdsprache m¨oglicherweise st ¨arker in Strukturen und in der Muttersprache stehen die Inhalte im Vordergrund, da Strukturen intuitiv erfasst werden k ¨onnen. Die Beziehungen zwischen Klassen in UML-Klassendiagrammen ¨uber mehrere Ebenen hinweg k ¨onnen die Kinder nur zum Teil formulieren. Vor allem solange die informatischen Beschreibungsmittel noch nicht nat ¨urlich angewendet werden k ¨onnen, ist ein systematisches Vorgehen notwendig. Dies zeigt sich bei der Einordnung von Begriﬀen in Hierarchien. Die Sch ¨ulerinnen und Sch¨uler, die die vorgegebenen Begriﬀe nach dem Einordnen in die Hierarchie markieren oder durchstreichen, sind erfolgreicher. Bei der Deﬁnition der Grammatik von Subsprachen und der Beschreibung der Syntax dieser mit Hilfe von Syntaxdiagrammen oder zusammengesetzten Maschinen fallen die 1776 Darstellung und Interpretation der Ergebnisse Ergebnisse sehr unterschiedlich aus. Wie bereits angedeutet, liegt dies eventuell an der mangelnden Abstraktionsf ¨ahigkeit. Ein Grund ist sicherlich auch die fehlende Konzentration der Sch ¨ulerinnen und Sch ¨uler, da einfache Aufgabenstellungen aufgrund von Ungenauigkeiten teilweise schlechter als schwierige Aufgaben gel ¨ost werden. Insgesamt k ¨onnte der Eindruck entstehen, dass die informatischen Grundkonzepte in nur geringem Umfang erlernt werden, da oftmals weniger als die H ¨alfte der Sch ¨ulerinnen und Sch¨uler die analysierten Aufgaben vollst ¨andig und richtig l ¨osen. Aber auch in anderen Unterrichtsf ¨achern bew ¨altigen Kinder nur einen Teil der gestellten Aufgaben, so dass dies der Normalit ¨at entspricht. Die Ergebnisse der Auswertung der Unterrichtsmaterialien, getrennt nach den korrespondierenden Gruppen bez ¨uglich der Merkmale Geschlecht ,kognitives Gesamtleistungsniveau,sprachgebundenes Denken ,zahlengebundenes Denken undformallogisches Denken , weichen nur zum Teil von denen aus den Tests zu den informatischen Grundkonzepten ab (vgl. Kapitel 6.3). Der signiﬁkante Unterschied des Lernerfolgs, d.h. die Diﬀerenz der Ergebnisse des Nachund Vortests, der Jungen und M ¨adchen spiegelt sich in der Bearbeitung der Aufgaben wider. In 5 der insgesamt 23 ausgewerteten Aufgabenstellungen haben bei den Jungen 30 Prozent mehr eine korrekte L ¨osung als bei den M ¨adchen. Umgekehrt ist dies nie der Fall (vgl. Tabelle 6.27). Der Unterschied ist allerdings nicht so groß wie im Test zu den informatischen Grundkonzepten. In Bezug auf das kognitive Gesamtleistungsniveau und das zahlengebundene undformallogische Denken ist der Eﬀekt deutlicher. ¨Uberlappen die Interquartilbereiche der Auspr ¨agungen”stark“ und ”schwach“ in den Box-Plots der Diﬀerenzen der Ergebnisse des Nachund Vortests (vgl. Abbildung 6.7) dieser Merkmale zu großen Teilen, so zeigt die qualitative Auswertung in 11, 8 bzw. 13 der F ¨alle deutlich bessere Ergebnisse in den Gruppen der Leistungsst ¨arkeren (siehe Tabelle 6.27). F ¨ahigkeiten im sprachgebundenen Denken spielen im Gegensatz zum Test zu den informatischen Grundkonzepten ¨uberhaupt keine Rolle. Werden die Ergebnisse der quantitativen und qualitativen Auswertungen zusammengefasst, so wird deutlich, dass die Jungen und die insgesamt sehr leistungsstarken Sch ¨ulerinnen und Sch ¨uler die Aufgaben zu den informatischen Grundkonzepten im Laufe des Schuljahrs erfolgreicher bearbeiten k ¨onnen. Auch das zahlengebundene und formallogische Denken scheint die Anwendung der informatischen Grundkonzepte zu unterst ¨utzen. 6.5 Ver ¨anderung der Einstellungen zum Computer Die meisten Sch ¨ulerinnen und Sch ¨uler verwendeten den Computer zu Hause bereits vor dem Unterrichtsversuch bei ganz verschiedenen T ¨atigkeiten. Wie aus der Befragung zu Beginn des Schuljahrs hervorgeht, war dies vor allem das Spielen. Sehr selten wurden mit dem Computer Texte geschrieben, Informationen im Internet gesucht, E-Mails verschickt oder Bilder gestaltet. Auch Lernprogramme wurden bereits eingesetzt. Aufgrund dieser 1786.5 Ver ¨anderung der Einstellungen zum Computer Erfolg in Abh ¨angigkeit des H¨auﬁgkeit Geschlechts Jungen 5 M¨adchen 0 kognitiven Gesamtleistungsniveaus stark 11 schwach 0 sprachgebundenen Denkens stark 3 schwach 3 zahlengebundenen Denkens stark 8 schwach 0 formallogischen Denkens stark 13 schwach 0 Tabelle 6.27: Zusammenfassung der Auswertung der Unterrichtsmaterialien Erfahrungen und der Haltung der Eltern, Geschwister und Freunde hatten die Sch ¨ulerinnen und Sch ¨uler bereits vor dem Unterrichtsversuch bestimmte Einstellungen zum Computer als technisches Ger ¨at. Diese wurden durch die intensive Besch ¨aftigung mit den informatischen Grundkonzepten beeinﬂusst. Die Unterschiede zwischen der Vorund Nachbefragung werden mit Hilfe von Box-Plots dargestellt, da die zentralen Tendenzen mit dem Median und dem ersten (Q1) und dritten Quartil (Q3), die die mittleren 50 Prozent der Werte begrenzen, und die Ausreißer dargestellt werden k ¨onnen. Zus ¨atzlich werden teilweise die Meinungs ¨anderungen der Sch¨ulerinnen und Sch ¨uler in H ¨auﬁgkeitsverteilungen visualisiert. Da die Frageb ¨ogen nicht immer vollst ¨andig ausgef ¨ullt worden waren und am Schuljahresende sogar zwei Frageb ¨ogen nicht zur ¨uckgegeben worden waren, fehlten zu verschiedenen Items Antworten. In Anhang D sind die Antworth ¨auﬁgkeiten bez ¨uglich der einzelnen Items dargestellt. In der Auswertung wurden nur die Antworten der Items ber ¨ucksichtigt, die sowohl in der Vorals auch der Nachbefragung vorlagen. Motivationale Aspekte bei der Verwendung des Computers Die Fragen zur Motivation beziehen sich auf folgende drei Bereiche: •Bedeutung von Wissen ¨uber den Computer •Anwendungsm ¨oglichkeiten des Computers •Auswirkungen der Arbeit mit dem Computer auf die Denkf ¨ahigkeiten. 1796 Darstellung und Interpretation der Ergebnisse Die Klasse stimmte der allgemeinen Aussage, dass Wissen ¨uber Computer wichtig sei, sowohl zu Beginn als auch am Ende des Schuljahrs zu. Die Meinungs ¨anderungen einzelner Kinder sind st ¨arker ablehnend (vgl. linke H ¨auﬁgkeitsverteilung in Abbildung 6.42). Die Mediane zu der pers ¨onlichen Frage, ob Wissen ¨uber Computer einzelnen etwas bringe, lagen in beiden Befragungen bei 4 ( stimmt eher ). Insgesamt ¨anderten jedoch sehr viele Kinder ihre Meinung, zum Teil sogar im Bereich von zwei und mehr Marken. 1.8) Die Funktionsweise des Computers interessiert  mich. 012345678 -4-3-2-1012341.6) Ich möchte mehr über den Computer wissen. 012345678 -4-3-2-1012 341.3) Ich finde Wissen über  den Computer wichtig. 012345678 -4-3-2-1012341.9) Wissen über Computer bringt mir was. 012345678 -4-3-2-101234 1.2) Der Umgang mit dem  Computer macht dumm. 0246810121416 -4-3-2-1012341.5) Der Umgang mit dem  Computer fordert mein  Denken. 0246810121416 -4-3-2-1012341.4) Mir ist es wichtig, mit  dem Computer zu spielen. 024681012 -4-3-2-1012341.1) Mir ist es wichtig, mit  dem Computer zu arbeiten. 024681012 -4-3-2-1012341.7) Mir ist es wichtig, mit  dem Computer zu lernen. 024681012 -4-3-2-10123412345 Vor (1.3)Nach (1.3)Vor (1.9)Nach (1.9)z 12345 Vor (1.8)Nach (1.8)Vor (1.6)Nach (1.6) 12345 Vor (1.4)Nach (1.4)Vor (1.1)Nach (1.1)Vor (1.7)Nach (1.7) 12345 Vor (1.2)Nach (1.2)Vor (1.5)Nach (1.5) Abbildung 6.42: Ver ¨anderung der Einstellung zur Bedeutung von Wissen ¨uber den Computer (1 = stimmt ¨uberhaupt nicht , 5 = stimmt voll ) Der Wunsch, die Funktionsweise des Computers kennen zu lernen (Item 1.8), ging im Laufe des Schuljahrs etwas zur ¨uck. Acht Sch ¨ulerinnen und Sch ¨uler korrigierten ihre Einsch ¨atzung um zwei oder mehr Marken nach unten (siehe H ¨auﬁgkeitsverteilung links in Abbildung 6.43). Auﬀ ¨alliger waren die Ver ¨anderungen bei der Frage, ob die Sch ¨ulerinnen und Sch ¨uler mehr ¨uber den Computer wissen wollen (Item 1.6). Am Schuljahresbeginn stimmte die Klasse dieser Aussage fast vollst ¨andig zu. Das Interesse von 15 Kindern nahm bis an das Ende des Schuljahrs jedoch stark ab. Der Median sank von 5 ( stimmt voll) auf 3.5 (zwischen stimmt eher undteils teils ). 1.8) Die Funktionsweise des  Computers interessiert  mich.  012345678 -4 -3 -2 -1 0 1 2 3 41.6) Ich möchte mehr über  den Computer wissen.  012345678 -4 -3 -2 -1 0 1 2 3 412345 Vor  (1.8) Nach  (1.8) Vor  (1.6) Nach  (1.6)  Abbildung 6.43: Ver ¨anderung der Einstellung zur Bedeutung von Wissen ¨uber den Computer (1 = stimmt ¨uberhaupt nicht , 5 = stimmt voll ) Am wichtigsten war den Kindern auch nach dem Schuljahr noch das Spielen (vgl. BoxPlots in Abbildung 6.44). Der Median stieg von 3.5 (zwischen teils teils undstimmt eher ) 1806.5 Ver ¨anderung der Einstellungen zum Computer auf 4 ( stimmt eher ) leicht an und ein sehr großer Teil der Kinder w ¨ahlte in der Nachbefragung eine Marke mit einem h ¨oheren Zustimmungsgrad (vgl. linke H ¨auﬁgkeitsverteilung in Abbildung 6.44). Insgesamt ¨anderten bis auf sechs Kinder alle ihre Meinung. 1.4) Mir ist es wichtig, mit  dem Computer zu spielen.  0246810 12  -4 -3 -2 -1 0 1 2 3 41.1) Mir ist es wichtig, mit  dem Computer zu arbeiten.  0246810 12  -4 -3 -2 -1 0 1 2 3 41.7) Mir ist es wichtig, mit  dem Computer zu lernen.  0246810 12  -4 -3 -2 -1 0 1 2 3 412345 Vor  (1.4) Nach  (1.4) Vor  (1.1) Nach  (1.1) Vor  (1.7) Nach  (1.7)  Abbildung 6.44: Ver ¨anderung der Einsch ¨atzung der Anwendungsm ¨oglichkeiten des Computers (1 = stimmt ¨uberhaupt nicht , 5 = stimmt voll ) Beim Item”Mir ist es wichtig, mit dem Computer zu arbeiten“ (Item 1.1) ist im BoxPlot keine Ver ¨anderung sichtbar. Bis auf zwei F ¨alle, deren Zustimmung um drei und vier Marken abnahm, zeigt auch die entsprechende H ¨auﬁgkeitsverteilung in Abbildung 6.44 keine großen Schwankungen. Die Wichtigkeit, den Computer als Ger ¨at zum Lernen einzusetzen, sank etwas. Der Interquartilbereich verschob sich nach unten. Nur f ¨ur zwei Kinder wuchs die Bedeutung des Computers beim Lernen stark an. Negative Auswirkungen auf die Denkf ¨ahigkeiten hat der Computer nach Meinung der Sch¨ulerinnen und Sch ¨uler nicht. Die Aussage, dass der Umgang mit dem Computer dumm mache (Item 1.2), lehnten fast alle ab (vgl. Box-Plots in Abbildung 6.45). Nur vier Kinder korrigierten ihre Meinung minimal. Dagegen divergierte die Einsch ¨atzung, ob der Umgang mit dem Computer das Denken fordere (Item 1.5), sehr stark. Sie sank, wie aus den Medianen, der Lage der Interquartilbereiche und der H ¨auﬁgkeitsverteilung in Abbildung 6.45 hervorgeht, am Schuljahresende ab. Zusammenfassung und Interpretation: Die Einsch ¨atzung der Bedeutung des Wissens ¨uber den Computer nahm im Laufe des Schuljahrs ab. Ein m ¨oglicher Grund daf ¨ur ist die inhaltliche Arbeit an den informatischen Grundkonzepten und in deren Kontext die Festigung der Anwenderfertigkeiten. Der Wissensbedarf ist nicht mehr so groß. Die Zunahme der Wichtigkeit des Spielens kann vielleicht auf den kognitiv fordernden Un1816 Darstellung und Interpretation der Ergebnisse 1.2) Der Umgang mit dem  Computer macht dumm.  0246810 12 14 16  -4 -3 -2 -1 0 1 2 3 41.5) Der Umgang mit dem  Computer fordert mein  Denken.  0246810 12 14 16  -4 -3 -2 -1 0 1 2 3 412345 Vor  (1.2) Nach  (1.2) Vor  (1.5) Nach  (1.5)  Abbildung 6.45: Ver ¨anderung der Einsch ¨atzung der Auswirkungen der Arbeit mit dem Computer auf die Denkf ¨ahigkeiten (1 = stimmt ¨uberhaupt nicht , 5 = stimmt voll ) terricht zur ¨uckgef ¨uhrt werden. Die Sch ¨ulerinnen und Sch ¨uler w ¨unschten sich weniger anstrengende T ¨atigkeiten am Computer. Gef¨uhle bei der Benutzung des Computers Die Sch ¨ulerinnen und Sch ¨uler wurden auf der 5-stuﬁgen Rating-Skala auch nach ihren Gef¨uhlen bei der Benutzung des Computers gefragt. In Abbildung 6.46 sind die zentralen Tendenzen und ihre Verteilungsformen der Vorund Nachbefragung in Box-Plots dargestellt. Die Mediane der Gef ¨uhle Spaß,Interesse ,Freude undNeugier befanden sich im zustimmenden Bereich zwischen 5 ( stimmt voll ) und 3 ( teils teils ).Anregung ,Herausforderung undEntspannung empfanden die Kinder eher weniger. Die Mediane und das erste und dritte Quartil lagen zwischen 1 ( stimmt ¨uberhaupt nicht ) und 3 ( teils teils ). 12345 Spaß Vor  (2.13)  Spaß Nach  (2.13)  Interesse Vor  (2.9)  Interesse Nach  (2.9)  Freude Vor  (2.1)  Freude Nach  (2.1)  Neugier Vor  (2.11)  Neugier Nach  (2.11)  Anregung Vor  (2.6)  Anregung Nach  (2.6)  Herausforderung  Vor (2.4)  Herausforderung  Nach (2.4)  Entspannung  Vor (2.8)  Entspannung  Nach (2.8)  Abbildung 6.46: Box-Plots der positiven Gef ¨uhle bei der Benutzung des Computers (1 = stimmt ¨uberhaupt nicht , 5 = stimmt voll ) Obwohl sich nur beim Item Neugier der Interquartilbereich stark ver ¨anderte, beurteilten die Kinder ihre Empﬁndungen in der Vorund Nachbefragung h ¨auﬁg sehr unter1826.5 Ver ¨anderung der Einstellungen zum Computer schiedlich. Abgesehen vom Item Spaß w¨ahlten jeweils 52 bis 64 Prozent unterschiedliche Marken. Die ¨Anderungen der Gef ¨uhle Spaß,Freude ,Anregung und Herausforderung waren sehr ausgeglichen. Beim Interesse , der Neugier und der Enstpannung zeigt Abbildung 6.47 hingegen, dass es ein ¨Ubergewicht hin zu einer st ¨arkeren Ablehnung gab. 2.11) Neugier  0246810 12  -4 -3 -2 -1 0 1 2 3 42.8) Entspannung  0246810 12  -4 -3 -2 -1 0 1 2 3 42.9) Interesse  0246810 12  -4 -3 -2 -1 0 1 2 3 4 Abbildung 6.47: Ver ¨anderung des Interesses , der Neugier und der Entspannung bei der Benutzung des Computers In den beiden Box-Plots des Items Interesse in Abbildung 6.46 wird dies durch die Abnahme des Medians von 5 ( stimmt voll ) auf 3 ( teils teils ) deutlich. Auch bei der Neugier sank der Median etwas. Auﬀ ¨alliger ist hier aber, dass sich das erste und dritte Quartil sehr stark ver ¨anderten. Dies zeigt, dass das Empﬁnden der Kinder in der Nachbefragung viel heterogener war. Eine weitere Streuung und ein Abfallen des Medians um eine Marke gab es auch beim Item Entspannung . Negative Gef ¨uhle wie Angst ,Bedrohung ,Unsicherheit ,Beunruhigung oder Nervosit ¨at ¨außerten die Sch ¨ulerinnen und Sch ¨uler fast ¨uberhaupt nicht (vgl. Box-Plots in Abbildung 6.48). 12345 Aufregung Vor  (2.3)  Aufregung Nach  (2.3)  Angst Vor (2.10)  Angst Nach (2.10)  Bedrohung Vor  (2.7)  Bedrohung Nach  (2.7)  Unsicherheit Vor  (2.14)  Unsicherheit  Nach (2.14)  Beunruhigung Vor  (2.5)  Beunruhigung  Nach (2.5)  Nervosität Vor  (2.12)  Nervosität Nach  (2.12)  Zeitverschwendung  Vor (2.15)  Zeitverschwendung  Nach (2.15)  Langeweile Vor  (2.2)  Langeweile Nach  (2.2)  Abbildung 6.48: Box-Plots der negativen Gef ¨uhle bei der Benutzung des Computers (1 = stimmt ¨uberhaupt nicht , 5 = stimmt voll ) Die Mediane lagen sowohl zu Beginn als auch am Ende des Schuljahrs bei 1 ( stimmt ¨uberhaupt nicht ). Im Fall der Items Angst undBedrohung ¨anderten auch nur 24 bzw. 1836 Darstellung und Interpretation der Ergebnisse 4 Prozent der Kinder ihre Gef ¨uhlseinsch ¨atzungen. Ganz unterschiedlich war bei den Kindern die Aufregung ausgepr ¨agt. Der Median sank insgesamt zwar von 3 ( teils teils ) auf 2 ( stimmt eher nicht ), das erste (Q1) und dritte Quartil (Q3) verblieben jedoch bei 1 (stimmt ¨uberhaupt nicht ) und 4 ( stimmt eher ). Allein bei den Items Zeitverschwendung undLangeweile ver¨anderte sich der Interquartilbereich. Wie in den beiden H ¨auﬁgkeitsverteilungen der Meinungs ¨anderungen in Abbildung 6.49 sichtbar ist, tendierten mehr Kinder dahin, die Empﬁndungen zu best ¨atigen. 2.15) Zeitverschwendung  0246810 12  -4 -3 -2 -1 0 1 2 3 42.2) Langeweile  0246810 12  -4 -3 -2 -1 0 1 2 3 4 Abbildung 6.49: Ver ¨anderung des Gef ¨uhls der Zeitverschwendung und der Langeweile bei der Benutzung des Computers Zusammenfassung und Interpretation: Die Gef ¨uhle und Empﬁndungen bei der Benutzung des Computers sind innerhalb der Klasse sehr stabil. Der Unterricht zu den informatischen Grundkonzepten beeinﬂusste sie also weder positiv noch negativ. Das Verh¨altnis der Kinder zum Computer ist sehr positiv. Sie haben Spaß und Freude und sind interessiert und neugierig. Die Benutzung des Computers stellt f ¨ur sie keine Herausforderung dar und ¨angstigende Gef ¨uhle im Umgang mit dem Ger ¨at kennen sie ¨uberhaupt nicht. Selbsteinsch ¨atzung der Kompetenzen im Umgang mit dem Computer Ihre F ¨ahigkeiten im Umgang mit dem Computer sch ¨atzte die Mehrheit der Sch ¨ulerinnen und Sch ¨uler schon zu Beginn des Schuljahrs sehr hoch ein (vgl. Box-Plots in Abbildung 6.50). Der Median des Items 3.4 (”Der Umgang mit dem Computer f ¨allt mir nicht schwer“) lag bei 4 ( stimmt eher ) und der des Items 3.1 (”Ich traue mir im Umgang mit Computern sehr viel zu“) bei 3 ( teils teils ). Im letzteren Fall lagen die Antworten von 75 Prozent der Sch ¨ulerinnen und Sch ¨uler allerdings im Bereich zwischen 3 ( teils teils ) und 5 (stimmt voll ). Dies ¨anderte sich auch in der Nachbefragung nicht. Aus der H ¨auﬁgkeitsverteilung der Diﬀerenzen zwischen der Vorund Nachbefragung in Abbildung 6.50 geht hervor, dass es nur leichte Meinungsschwankungen gab, die in ablehnender und zustimmender Richtung fast gleichgewichtet waren. Auﬀ ¨allig ist, dass die Selbsteinsch ¨atzungen der Sch ¨ulerinnen und Sch ¨uler sehr stabil blieben. Es gab bei einzelnen Kindern maximal Abweichungen von zwei Marken. 1846.5 Ver ¨anderung der Einstellungen zum Computer 3.4) Der Umgang mit dem  Computer fällt mir nicht  schwer.  0246810 12 14 16  -4 -3 -2 -1 0 1 2 3 43.1) Ich traue mir im Umgang  mit Computern sehr viel zu.  0246810 12 14 16  -4 -3 -2 -1 0 1 2 3 412345 Vor  (3.4) Nach  (3.4) Vor  (3.1) Nach  (3.1)  Abbildung 6.50: Ver ¨anderung der positiven Selbsteinsch ¨atzung im Umgang mit dem Computer (1 = stimmt ¨uberhaupt nicht , 5 = stimmt voll ) Die sehr pessimistischen Selbsteinsch ¨atzungen in den Items 3.2, 3.3 und 3.5 in Bezug auf die eigenen F ¨ahigkeiten, mit dem Computer umzugehen, lehnten die Sch ¨ulerinnen und Sch¨uler zum großen Teil sowohl in der Vorals auch in der Nachbefragung vollst ¨andig ab (vgl. Box-Plots in Abbildung 6.51). Nur in der Nachbefragung stimmte ein Kind dem Item”Der Computer liegt mir nicht“ (Item 3.2) voll zu. Ansonsten lagen die negativsten Selbsteinsch ¨atzungen bei 3 ( teils teils ) oder 4 ( stimmt eher ). 3.3) Den Umgang mit dem  Computer werde ich nie  richtig verstehen.  0246810 12 14 16 18  -4 -3 -2 -1 0 1 2 3 43.5) Für die Nutzung des  Computers habe ich einfach  keine Begabung.  0246810 12 14 16 18  -4 -3 -2 -1 0 1 2 3 43.2) Der Umgang mit dem  Computer liegt mir nicht.  0246810 12 14 16 18  -4 -3 -2 -1 0 1 2 3 412345 Vor  (3.3) Nach  (3.3) Vor  (3.5) Nach  (3.5) Vor  (3.2) Nach  (3.2)  Abbildung 6.51: Ver ¨anderung der negativen Selbsteinsch ¨atzung im Umgang mit dem Computer (1 = stimmt ¨uberhaupt nicht , 5 = stimmt voll ) Zusammenfassung und Interpretation: Die Sch ¨ulerinnen und Sch ¨uler sind bez ¨uglich ihrer Leistungen im Umgang mit dem Computer sehr selbstbewusst. Durch die sich von zu Hause unterscheidende Arbeitsweise im Unterricht zu den informatischen Grund1856 Darstellung und Interpretation der Ergebnisse konzepten, die sehr anspruchsvoll ist, verschlechtert sich wahrscheinlich bei manchen Kindern die Einsch ¨atzung der eigenen F ¨ahigkeiten am Schuljahresende. Beurteilung der Eigenschaften des Computers Am Ende des Fragebogens charakterisierten die Sch ¨ulerinnen und Sch ¨uler die Eigenschaften des Computers. Realistisch sch ¨atzten sie ein, dass der Computer nur das arbeiten k¨onne, was in dem benutzten Programm stehe (Item 4.6) und dass ihm genau gesagt werden m ¨usse, was er tun solle (Item 4.3). Im ersten Fall ver ¨anderten sich die Meinungen ¨uber das Schuljahr hinweg in beide Richtungen (siehe H ¨auﬁgkeitsverteilung der Meinungs ¨anderungen zu Item 4.6 in Abbildung 6.52). Auf Grund der eigenen Erfahrungen, mit Logo sehr exakt arbeiten zu m ¨ussen, korrigierten acht Kinder ihre Einsch ¨atzung bez¨uglich der Notwendigkeit zum genauen Arbeiten mit dem Computer (Item 4.3) nach oben. 4.6) Der Computer kann nur  das arbeiten, was in dem  benutzten Programm steht.  0246810 12 14  -4 -3 -2 -1 0 1 2 3 44.3) Der Computer kann nur  arbeiten, wenn ich ihm  genau sage, was er tun soll.  0246810 12 14  -4 -3 -2 -1 0 1 2 3 412345 Vor  (4.6) Nach  (4.6) Vor  (4.3) Nach  (4.3)  Abbildung 6.52: Ver ¨anderung der Einsch ¨atzung der Eigenschaften des Computers (1 = stimmt ¨uberhaupt nicht , 5 = stimmt voll ) Als”b¨osartig“ empfanden die Kinder den Computer nicht. Diese Einsch ¨atzung ¨anderte sich auch nicht am Ende des Schuljahrs (vgl. Abbildung 6.53). 4.7) Der Computer ist  bösartig.  0246810 12 14 16 18 20 22  -4 -3 -2 -1 0 1 2 3 44.4) Der Computer ist  undurchschaubar.  0246810 12 14 16 18 20 22  -4 -3 -2 -1 0 1 2 3 412345 Vor  (4.7) Nach  (4.7) Vor  (4.4) Nach  (4.4)  Abbildung 6.53: Ver ¨anderung der Einsch ¨atzung der Eigenschaften des Computers (1 = stimmt ¨uberhaupt nicht , 5 = stimmt voll ) 1866.5 Ver ¨anderung der Einstellungen zum Computer Die Undurchschaubarkeit wurde sehr heterogen beurteilt. Der Median lag in beiden Befragungen bei 3 ( teils teils ), der Interquartilbereich sank jedoch stark ab. Auch in der H ¨auﬁgkeitsverteilung der Meinungs ¨anderungen (siehe rechtes Diagramm in Abbildung 6.53) ist diese Tendenz deutlich zu erkennen. Wesentlich mehr Sch ¨ulerinnen und Sch¨uler berichtigten ihre Zustimmung nach unten als noch oben. Sicher waren sich die Sch ¨ulerinnen und Sch ¨uler darin, dass der Computer sie bei Problemen nicht verstehe (Item 4.2) und dass er ihnen selbstst ¨andig keine Hilfe anbiete (Item 4.5). Die Mediane blieben bei 1 ( stimmt ¨uberhaupt nicht ). Das dritte Quartil (Q3) sank am Schuljahresende ebenfalls auf 1. Die H ¨auﬁgkeitsverteilungen in Abbildung 6.54 zeigen, dass die Meinungs ¨anderungen haupts ¨achlich in Richtung Ablehnung tendierten. 4.2) Der Computer kann  mich verstehen, wenn ich  Probleme habe.  0246810 12 14 16  -4 -3 -2 -1 0 1 2 3 44.5) Der Computer erkennt  selbst, was ich brauche und  gibt es mir dann sofort.  0246810 12 14 16  -4 -3 -2 -1 0 1 2 3 412345 Vor  (4.2) Nach  (4.2) Vor  (4.5) Nach  (4.5)  Abbildung 6.54: Ver ¨anderung der Fehlvorstellungen ¨uber Eigenschaften des Computers (1 = stimmt ¨uberhaupt nicht , 5 = stimmt voll ) Hartn ¨ackig hielt sich bei wenigen Sch ¨ulerinnen und Sch ¨ulern die Tendenz in der Einsch ¨atzung, dass der Computer ihnen teilweise das Lernen abnehme (Item 4.10). Sieben Sch ¨ulerinnen und Sch ¨uler korrigierten diese sogar in Richtung Zustimmung (vgl. linke H ¨auﬁgkeitsverteilung der Meinungs ¨anderungen in Abbildung 6.55). 4.10) Dadurch dass ich  einen Computer benutzen  kann, muss ich selbst nicht  mehr so viel lernen.  0246810 12 14  -4 -3 -2 -1 0 1 2 3 44.8) Der Computer macht nur  Fehler, wenn er falsch  bedient wird.  0246810 12 14  -4 -3 -2 -1 0 1 2 3 412345 Vor  (4.10) Nach  (4.10) Vor  (4.8) Nach  (4.8)  Abbildung 6.55: Ver ¨anderung der Fehlvorstellungen ¨uber Eigenschaften des Computers (1 = stimmt ¨uberhaupt nicht , 5 = stimmt voll ) 1876 Darstellung und Interpretation der Ergebnisse Obwohl die Kinder im Unterricht selbst Programme erstellten und wussten, dass sie fehlerhaft sein k ¨onnen, stimmten sie sowohl zu Beginn als auch am Ende des Schuljahrs voll darin ¨uberein, dass der Computer nur Fehler macht, wenn er falsch bedient wird (Item 4.8). In der Nachbefragung gab es keine Sch ¨ulerin und keinen Sch ¨uler, der diese falsche Aussage v ¨ollig ablehnte (siehe Box-Plot in Abbildung 6.55). In ihrer Einsch ¨atzung, dass der Computer alles kann, waren die Kinder eher vorsichtig. Der Interquartilbereich lag in der Vorund Nachbefragung zwischen 1 ( stimmt ¨uberhaupt nicht ) und 3 ( teils teils ) (vgl. Box-Plot in Abbildung 6.56) und der Median sank von 2 (stimmt eher nicht ) auf 1 ( stimmt ¨uberhaupt nicht ). Die in der H ¨auﬁgkeitsverteilung dargestellten Meinungsschwankungen sind sehr groß. Lediglich acht Sch ¨ulerinnen und Sch¨uler blieben am Schuljahresende bei ihrer Aussage. Im Gegensatz dazu stimmte die Mehrheit der Kinder darin ¨uberein, dass der Computer schnell rechnen kann. 4.9) Der Computer kann  alles.  0246810 12 14 16  -4 -3 -2 -1 0 1 2 3 44.1) Der Computer kann  ganz schnell rechnen.  0246810 12 14 16  -4 -3 -2 -1 0 1 2 3 412345 Vor  (4.9) Nach  (4.9) Vor  (4.1) Nach  (4.1)  Abbildung 6.56: Ver ¨anderung der Einsch ¨atzung der F ¨ahigkeiten des Computers (1 = stimmt ¨uberhaupt nicht , 5 = stimmt voll ) Zusammenfassung und Interpretation: Den Sch ¨ulerinnen und Sch ¨ulern ist klar, dass der Computer nicht selbstst ¨andig arbeitet, sondern nur Anweisungen eines Programms oder einer Benutzerinteraktion folgen kann. Außerdem erhoﬀen sie sich von ihm bei Problemen keine Hilfestellungen. Das Gef ¨uhl der Kinder, dass der Computer undurchschaubar ist, hat bei einigen am Ende des Schuljahrs abgenommen. Dies kann m¨oglicherweise auf die intensive Besch ¨aftigung mit dem Computer zur ¨uckgef ¨uhrt werden, die sich systematisch an einigen informatischen Grundkonzepten orientierte. Beharrlich bleibt bei einigen Kindern die Vorstellung erhalten, dass sie durch die Benutzung des Computers selbst nicht mehr so viel lernen m ¨ussten. Bei wenigen nimmt sie sogar noch zu. V ¨ollig unerkl ¨arlich ist die Annahme fast aller Sch ¨ulerinnen und Sch ¨uler, dass der Computer nur Fehler mache, wenn er falsch bedient w ¨urde. Mehrfach hatten die Kinder im Unterricht selbst erfahren, dass ihre Logo-Programme”Fehler“ machten, weil sie von ihnen selbst nicht korrekt erstellt worden waren. M ¨oglicherweise k ¨onnen sie hier auch nicht zwischen der Bedienung von Computern und dem Schreiben von Programmen unterscheiden. Realistisch hingegen ist ihre Einsch ¨atzung, dass der Computer nicht alles kann. 1887 Fazit In der vorliegenden Arbeit wurde herausgearbeitet, dass die in den Bildungsstandards zur Informationstechnischen Grundbildung (ITG) im Bildungsplan 2004 f ¨ur Realschule (Kultusministerium Baden-W ¨urttemberg, 2004b) beschriebenen informationstechnischen Kompetenzen und Inhalte den geforderten Anspr ¨uchen einer Allgemeinbildung nicht gen ¨ugen, sondern allgemeine informatische Grundkonzepte vermittelt werden m ¨ussen. Im Rahmen des Forschungsprojekts wurde ein Unterrichtskonzept f ¨ur die Klassenstufe 5 entwickelt, in dem die informatischen Grundkonzepte, eingebettet in den Kontext der F ¨acher Mathematik, Englisch, Deutsch und Musik, in vier Stunden der Woche altersgem¨aß vermittelt werden. Der Computer wird dort unter ausschließlicher Verwendung von Logo-Software als zwangloses Denk-, Hilfsund Arbeitsmittel zum Erlernen der Fachinhalte und informatischen Grundkonzepte eingesetzt. In den meist vorgegebenen mathematischen, linguistischen und musikalischen Logo-Mikrowelten haben die Sch ¨ulerinnen und Sch ¨uler die M ¨oglichkeit, L ¨osungen zu Problemstellungen aus dem Fachunterricht zu gestalten. 7.1 Zusammenfassung Mit der vorgelegten Untersuchung konnte gezeigt werden, dass die Vermittlung informatischer Grundkonzepte bereits in Klassenstufe 5 im Fachunterricht m ¨oglich ist. Die Sch¨ulerinnen und Sch ¨uler sind trotz der teilweise abstrakten informatischen Inhalte, des gleichzeitigen Lernens von Fachinhalten und von informatischen Grundkonzepten, der Umsetzung von Probleml ¨osungen in die Programmiersprache Logo und des h ¨auﬁg fachintegrativen und f ¨acher ¨ubergreifenden Lernens und Arbeitens nicht ¨uberfordert. Der kognitiv sehr anspruchsvolle Unterricht zu den informatischen Grundkonzepten ist f ¨ur Sch¨ulerinnen und Sch ¨uler nicht schwieriger als der Fachunterricht. Die Fortf ¨uhrung des Unterrichts ist erw ¨unscht. Als geeignet erweist sich die Aufteilung des Schuljahrs in drei Phasen, die sich bez ¨uglich der Methoden, der Wissensvermittlung und -anwendung und der Integration der informatischen Grundkonzepte in die Fachinhalte unterscheiden. Zu Beginn ist es sinnvoll, die informatischen Grundkonzepte und Logo-Sprachkonstrukte in k ¨urzeren Unterrichtseinheiten eingebettet in die Fachinhalt zu vermitteln. Die abstrakten Inhalte k ¨onnen schrittweise eingef ¨uhrt und die Vernetzung der informatischen Grundkonzepte und Fachinhalte 1897 Fazit auf ein zu bew ¨altigendes Maß eingeschr ¨ankt werden. Im anschließenden f ¨acher ¨ubergreifenden Projektunterricht wird bei der Erstellung einer multimedialen Rittergeschichte das zuvor Erlernte angewendet und vertieft. Die Sch ¨ulerinnen und Sch ¨uler arbeiten sehr motiviert an Themen aus verschiedenen F ¨achern, die implizit mit Kenntnissen der informatischen Grundkonzepte verkn ¨upft sind. Aufgrund der M ¨oglichkeit, sich mit seinen speziellen F ¨ahigkeiten einbringen zu k ¨onnen, entstehen imponierende f ¨acher ¨ubergreifende Arbeiten. Mit Problemstellungen, die nicht nur fachlich begr ¨undet sind, sondern sich an den Interessen der Sch ¨ulerinnen und Sch ¨uler orientieren, kann das Schuljahr inhaltlich abgerundet werden. Bei der Erweiterung von Spielen und eines Malprogramms werden eigene aktive Gestaltungsm ¨oglichkeiten bei der Arbeit mit einer Programmierumgebung deutlich und informatische Grundkonzepte des Programmierens im Großen erlernt und vertieft. Die Motivation der Sch ¨ulerinnen und Sch ¨uler ist nach dem Abklingen des Neuigkeitseffekts durch den Einsatz des Computers normal. Sie h ¨angt wie auch in anderen F ¨achern sehr stark von den individuellen Interessen, Einstellungen und F ¨ahigkeiten der einzelnen Kinder ab. Motivationsh ¨ohen sind die Unterrichtseinheiten, in denen sehr viel praktisch gearbeitet wird. In zu langen Theoriephasen im Klassenzimmer darf die Ausdauer der Sch¨ulerinnen und Sch ¨uler nicht ¨uberstrapaziert werden, um zu vermeiden, dass sich eine Polarisierung des Unterrichts in angenehme praktische Stunden im Computerraum und unangenehme theoretische im Klassenzimmer ergibt. Der Theorieunterricht muss somit auch im Computerraum stattﬁnden, so dass in k ¨urzeren Phasen ein Wechsel mit praktischen Arbeiten am Rechner m ¨oglich ist. Die Form der Zusammenarbeit an den Rechnern gestaltet sich sehr unterschiedlich. Schwierigkeiten gibt es vor allem bei Jungen, da oftmals nur derjenige Partner geistig aktiv ist, der die Tastatur und Maus bedient. Andererseits arbeiten auch Paare gemeinsam, die sich aufgrund ihrer eher gestalterischen und technischen F ¨ahigkeiten optimal in der Zusammenarbeit erg ¨anzen. Kommunikation zwischen Sch ¨ulerinnen und Sch ¨ulern, die nicht an einem Computer zusammenarbeiten, ﬁndet kaum statt. Zur St ¨arkung der Kooperation innerhalb des Klassenverbandes m ¨ussen Aufgabenformen entwickelt werden, deren L ¨osung die Kommunikation erfordert. Vorbild sollte das Vorgehen bei der arbeitsteiligen Entwicklung von Softwaresystemen sein. Die Kinder h ¨atten dann zum Beispiel die Aufgabe, Arbeitspakete zu vereinbaren, sich ¨uber Schnittstellen zu einigen und das Endprodukt aus den Teill ¨osungen zusammenzusetzen. Die Vermittlung der informatischen Grundkonzepte hat keine negativen R ¨uckwirkungen auf den Fachunterricht. Alle Fachinhalte der Klassenstufe 5 in Mathematik, Englisch, Deutsch und Musik k ¨onnen vermittelt werden, obwohl wegen der zus ¨atzlichen informatischen Grundkonzepte insgesamt weniger Unterrichtszeit zur Verf ¨ugung steht. In Englisch unterst ¨utzt die Besch ¨aftigung mit den informatischen Grundkonzepten sogar das Erlernen der grammatikalischen Strukturen der Sprache. Außerdem werden durch die Thematisierung der informatischen Grundkonzepte in den verschiedenen Anwendungskontexten der beteiligten F ¨acher die Gemeinsamkeiten und Zusammenh ¨ange der Fachinhalte deutlicher aufgezeigt. 1907.1 Zusammenfassung Sch¨ulerinnen und Sch ¨uler k ¨onnen auch ohne formalen Unterricht vereinzelt informatische Strategien anwenden. Nach dem Unterricht zu den informatischen Grundkonzepten sind die Leistungen jedoch signiﬁkant besser. In Klassenstufe 5 k ¨onnen also abstrakte informatische Inhalte erlernt werden. Die Leistungssteigerungen sind sehr unterschiedlich. Bei den Jungen und M ¨adchen unterscheiden sie sich sogar signiﬁkant. Dies wird auch in den ausgewerteten Unterrichtsmaterialien deutlich. Zwischen den Auspr ¨agungen ”stark“ und”schwach“ der Merkmale kognitives Gesamtleistungsniveau ,sprachgebundenes Denken ,zahlengebundenes Denken undformallogisches Denken ergeben sich keine signiﬁkanten Unterschiede bez ¨uglich der Diﬀerenz der Ergebnisse des Nachund Vortests. Die Bearbeitung der Aufgaben im Unterricht gelingt Kindern mit einem hohen kognitiven Gesamtleistungsniveau und st ¨arkeren Ergebnissen im zahlengebundenen und formallogischen Denken besser. Um vor allem den schw ¨acheren Kindern einen leichteren Zugang zu den theoretischen Konzepten anzubieten, m ¨ussten diese f ¨ur sie”erlebbar“ werden. Eine M ¨oglichkeit ist die Entwicklung weiterer Mikrowelten f ¨ur die Themenbereiche, die ansonsten theoretisch bearbeitet werden. Dies h ¨atte auch zur Konsequenz, dass die Kinder mehr am Computer arbeiten und die langen Theoriephasen verk ¨urzt w¨urden. Ein¨außerst wichtiges Ergebnis ist die Tatsache, dass im Unterricht allgemeine Kompetenzen wie das Vorausdenken, das Strukturieren, das Anwenden von Schemata, das genaue Arbeiten und Strategien zur Bew ¨altigung von Frustrationen erworben werden. Diese Schl ¨usselqualiﬁkationen sind nicht nur f ¨ur eine informationstechnische Grundbildung, sondern in allen Bereichen des Lebens von enormer Bedeutung und werden wie bereits beschrieben zus ¨atzlich zu den Fachinhalten erlernt. Nat ¨urlich wird auch die Bedienkompetenz von Informatiksystemen, die nicht explizit geschult wird, durch die Arbeit am Computer, aber auch durch die Vermittlung von informatischen Vorstellungen verbessert. Die ausschließliche Verwendung der beiden Logo-Systeme f ¨ordert die Konzentration auf die informatischen Grundkonzepte, da eine explizite Einarbeitung nicht erforderlich ist. Sie erfolgt anhand von Aufgabenstellungen und nimmt nur einen ganz geringen Teil der Unterrichtszeit in Anspruch. Da die informatischen Grundkonzepte immer in einem Fachzusammenhang stehen, bleiben sie f ¨ur die Kinder keine abstrakten Konstrukte. Ihre Umsetzung in Logo-Mikrowelten ﬁndet nicht in Form eines Programmierkurses statt, sondern die Sch ¨ulerinnen und Sch ¨uler gestalten in mathematischen, linguistischen und musikalischen”Umwelten“ (Mikrowelten) L ¨osungen zu Problemstellungen aus dem Fachunterricht. Beim Programmieren trainieren sie das aktive Auseinandersetzen mit Problemen, Planen von L ¨osungen, Antizipieren von Situationen, Gliedern von komplexen Problemen, Abstrahieren, Formalisieren, pr ¨azises Denken und sprachliches Formulieren von Gedanken, exaktes Arbeiten, Denken in Querbez ¨ugen und das kritische ¨Uberpr ¨ufen der eigenen Arbeitsergebnisse (Mittermeir 2003, Sperber 2002). Dies sind genau die von den Lehrerinnen zum Teil beobachteten allgemeinen Schl ¨usselkompetenzen. Notwendige Voraussetzung f ¨ur ihren Erwerb ist der Einsatz einer Programmiersprache wie Logo, 1917 Fazit die einen geringen Sprachumfang besitzt, erweiterbar ist, mit der von der ersten Stunde an Probleml ¨osungen erstellt werden k ¨onnen und die informatische Denkkonzepte veranschaulicht. Die Einstellungen der Kinder zum Computer ver ¨andern sich durch den Unterricht zu den informatischen Grundkonzepten kaum. Die Bedeutung des Rechners im Alltag ist ihnen bewusst. ¨Angstigende Gef ¨uhle im Umgang mit diesem kennen sie nicht. Die Einsch ¨atzung ihrer Kompetenzen ist sehr selbstbewusst. Sie nimmt teilweise etwas ab. Dies k ¨onnte an den anspruchsvollen Inhalten des Unterrichts liegen. Das Spielen bleibt die beliebteste Besch ¨aftigung. Allein der Glaube daran, dass der Computer keine Fehler mache, festigt sich hartn ¨ackig, obwohl selbst fehlerhafte Programme erstellt werden. Die Einsch ¨atzung k¨onnte m ¨oglicherweise auch auf eine fehlende Diﬀerenzierung zwischen der Bedienung von Computern und dem Schreiben von Programmen zur ¨uckzuf ¨uhren sein. Das Konzept zeigt, dass permanenter Computereinsatz im Fachunterricht auch mit dem Ziel m ¨oglich ist, informatische Grundkonzepte zu vermitteln. Basis des Erfolgs ist der kontinuierliche, ¨uber einen l ¨angeren Zeitraum hin stattﬁndende Unterricht, der die informatischen Grundkonzepte in systematischen Lernprozessen vermittelt. Die im Bildungsplan 2004 f ¨ur Realschulen (Kultusministerium Baden-W ¨urttemberg, 2004b) beschriebenen informationstechnischen Kompetenzen und Inhalte und die Schl ¨usselqualiﬁkationen entwickeln sich dann auf dem Fundament der informatischen Grundkonzepte bei der Arbeit ohne explizite Anwendungsschulungen. 7.2 Grenzen der Untersuchung Einzelfallstudie Das vorliegende Unterrichtskonzept wurde auf Basis einer Einzelfallstudie evaluiert. Die Auswahl der Versuchsklasse, deren Sch ¨ulerinnen und Sch ¨uler aus der Grundschule ohne speziﬁsche Vorkenntnisse bez ¨uglich des Umgangs mit dem Computer kamen, und die vorliegenden schultypischen Rahmenbedingungen lassen eine bedingte ¨Ubertragung der Ergebnisse auf andere Klassen und Schulen zu. Da der Unterricht jedoch von der Forscherin selbst, einer Informatikerin, die keine Lehrbef ¨ahigung f ¨ur die Schule und keinerlei Unterrichtserfahrung mit Sch ¨ulerinnen und Sch ¨uler hatte, durchgef ¨uhrt wurde, muss die ¨Ubertragbarkeit bez ¨uglich der Lehrperson eingeschr ¨ankt werden. Im Gegensatz zur Forscherin fehlen den Fachlehrerinnen und Fachlehrern die zur Vermittlung der informatischen Grundkonzepte notwendigen fachlichen Kompetenzen. Sie m ¨ussten selbst eine umfassende informatische Basisausbildung erhalten, um den Sch ¨ulerinnen und Sch¨ulern die verschiedensten grundlegenden Konzepte der Informatik bei der Interaktion mit Informatiksystemen deutlich machen zu k ¨onnen. Dies kann nicht in Anwendungsschulungen beim Schreiben von E-Mails, Surfen im Internet oder Verfassen von Texten in Textverarbeitungssystemen erfolgen. 1927.3 Konsequenzen f ¨ur die Implementierung des Unterrichtskonzepts Fehlender standardisierter Leistungstest f ¨ur informatische Grundkonzepte Der signiﬁkante Unterschied der Leistungssteigerungen der Jungen und M ¨adchen vom Vorzum Nachtest zu den informatischen Grundkonzepte hat nur unter Vorbehalt G ¨ultigkeit, da aus Zeitgr ¨unden die Reliabilit ¨at und Validit ¨at des Tests nicht ¨uberpr ¨uft werden konnten (vgl. Kapitel 5.2.1). Das Erlernen der Konzepte ließe sich nur mit standardisierten Tests, die noch nicht existieren, empirisch valide evaluieren. Im Forschungsprojekt wurden zur Absicherung der Ergebnisse zus ¨atzlich zahlreiche Unterrichtsmaterialien analysiert und ausgewertet, um die Ergebnisse abzusichern. Dies ist bei gr ¨oßeren Stichproben jedoch aus zeitlichen Gr ¨unden nicht m ¨oglich. Außerdem ist es schwierig, auf Basis der Auswertung schriftlicher Tests und Unterrichtsmaterialien informatische Strategien und Vorgehensweisen zu ¨uberpr ¨ufen, da nur Endprodukte von Arbeitsprozessen vorliegen. Zur Gewinnung von exakteren Ergebnissen m ¨ussten f ¨ur die einzelnen informatischen Grundkonzepte st ¨arker fokussierte Untersuchungsfragen gestellt und diese auf Basis von sehr pr ¨azisen Untersuchungsdesigns und Erhebungsinstrumenten analysiert werden. Kurzfristige Ergebnisse Durch die Anlage der Untersuchungskonzeption k ¨onnen keine langfristigen Auswirkungen gemessen werden. Die Englischlehrerin stellt zum Beispiel ein Jahr nach der Durchf¨uhrung des Unterrichtsversuchs fest, dass das Leistungsniveau der Klasse sehr hoch sei. Auf den Englischunterricht bezogen ist ihrer Meinung nach der Anteil der Kinder, die die grammatikalischen Strukturen verstehen und anwenden k ¨onnen, sehr viel h ¨oher als in den 6. Klassen, die sie bis zu diesem Zeitpunkt unterrichtet hatte. Nur zwei bis drei Sch¨ulerinnen und Sch ¨uler h ¨atten Schwierigkeiten. Ein Wirkungszusammenhang kann jedoch nicht nachgewiesen werden. Außerdem bleibt oﬀen, inwiefern die informatischen Grundkonzepte das eigenst ¨andige Einarbeiten in neue Softwaresysteme unterst ¨utzen. Aus den Unterrichtsbeobachtungen kann abgeleitet werden, dass dies im Falle der in Imagine Logo integrierten Werkzeuge, wie zum Beispiel dem einfachen Texteditor, leicht m¨oglich war. 7.3 Konsequenzen f¨ ur die Implementierung des Unterrichtskonzepts ¨Ubertragung des Unterrichtskonzepts auf die Klassenstufen 6 bis 10 Wie in Kapitel 7.1 beschrieben, war das entwickelte Unterrichtskonzept sehr erfolgreich. Informatische Grundkonzepte, Fachinhalte und ganz allgemeine Schl ¨usselkompetenzen wurden von den Sch ¨ulerinnen und Sch ¨ulern der Klassenstufe 5 erworben. Im Rahmen einer Grundbildung m ¨ussen die informatischen Grundkonzepte aber auch in h ¨oheren Klassenstufen wieder aufgegriﬀen und vertieft werden. Außerdem ist es notwendig, weitere grundlegende informatische Denkund Arbeitsweisen in den Katalog der informatischen Grundkonzepte aufzunehmen. Das Unterrichtskonzept muss also auf die Klassenstufen 1937 Fazit 6 bis 10 ¨ubertragen werden. Dies bedeutet, entsprechende informatische Grundkonzepte f¨ur die verschiedenen Klassen auszuw ¨ahlen und den relevanten Unterrichtsthemen aus einem erweiterten F ¨acherkatalog zuzuordnen. Wichtig ist, dass das bereits erworbene begriﬄiche informatische Wissen immer wieder aufgegriﬀen und spiralf ¨ormig weiter aufgebaut wird. F¨ur einige Fachinhalte werden in der Literatur Unterrichtsbeispiele mit Logo beschrieben. In den Berichten zur Informatik und Datenverarbeitung in der Schule der P ¨adagogischen Hochschule Ludwigsburg (vgl. Espenschied und Mauch 1984, Quehl 1985, L ¨othe & al. 1987, Weber 1988) werden vor allem Unterrichtseinheiten aus der Mathematik vorgestellt. Auch in aktuellen Logo-Ver ¨oﬀentlichungen sind Themen der Mathematik zu ﬁnden (vgl. Boytchev 2003, Farkas 2003). Um naturwissenschaftliches Arbeiten zu f¨ordern, wird das Programmieren von Logo mit Lego-Aktivit ¨aten verkn ¨upft. Es entstehen dabei spielzeug ¨ahnliche Objekte (Alimisis & al., 2005) oder auch technische L ¨osungen f ¨ur Alltagsprobleme (Sipitakiat und Cavallo, 2003). In den letzten Jahren wurden Logo-Versionen wie StarLogo1und NetLogo2entwickelt, in denen Tausende von Igeln, ausgestattet mit Sensoren, parallel bewegt werden k ¨onnen. Mit diesen k ¨onnen dynamische Systeme, wie zum Beispiel die Ausbreitung von Krankheiten (Colella & al., 2001, S. 114), Stauentwicklungen (Resnick, 1996, S. 264) oder Bakterienkulturen (Resnick, 2001, S. 50), modelliert und simuliert werden. Zus¨atzlich m ¨ussen weitere Software-Produkte hinsichtlich ihrer Eignung zur Veranschaulichung informatischer Grundkonzepte evaluiert werden. Dies schließt Standardanwendungen nicht aus. Wichtig ist dann die Entwicklung von Ideen und Konzepten, in denen die Anwendungen auf Basis der mentalen informatischen Modelle eingef ¨uhrt werden. Einen Ansatz in diese Richtung beschreibt Bescherer (2005) mit den LoDiCs (Learning on Demand in Computing). Dabei handelt es sich um eine strukturierte Methode, die einen Rahmen vorgibt, wie die Vermittlung fundamentaler Konzepte der Informationstechnologie in beliebige Aufgabenstellungen integriert werden kann. Ausund Fortbildungskonzept f ¨ur Lehrerinnen und Lehrer Am dringlichsten ist sicherlich die Entwicklung eines Ausund Fortbildungskonzepts f ¨ur Lehrerinnen und Lehrer, das auf informatisches Grundlagenwissen und nicht auf Anwendungsschulungen ausgerichtet ist. Schon 1974 forderten Eyferth & al. (1974, S. 282): ”Mit der Ausund Weiterbildung von Lehrern in Datenverarbeitung/Informatik muß sofort begonnen werden. Sie ist prim ¨ar zu f ¨ordern.“ Ein zuk ¨unftiges T ¨atigkeitsfeld f ¨ur die Forschung muss deshalb das Erarbeiten eines Konzepts f ¨ur Lehrerinnen und Lehrer aller Fachbereiche sein, das realistisch umgesetzt werden kann. Hier k ¨onnen internationale Entwicklungen als Vorbild dienen und dem deut1http://education.mit.edu/starlogo (Abruf: 03.08.05) 2http://ccl.northwestern.edu/netlogo (Abruf: 03.08.05) 1947.3 Konsequenzen f ¨ur die Implementierung des Unterrichtskonzepts schen Kontext angepasst werden. Im Zeitraum von 1982 bis 1988 wurden zum Beispiel in Parma in Italien mehr als 1000 Lehrerinnen und Lehrer in Logo fortgebildet. Sie erhielten eine Einf ¨uhrung in die Logo-Programmierung und die Methodik zur Umsetzung der erlernten Inhalte in ihrem Unterricht (Ambrosini & al., 1989). Ein Fortbildungsprogramm in Brasilien w ¨ahlte einen anderen Ansatz. Dort wurde in den folgenden f ¨unf Modulen das eigene Erlernen von Logo sehr stark mit dem Unterrichten vernetzt: •Einf¨uhrung in Logo •Programmierung in Logo mit einem Kind •Vertiefung der Logokenntnisse •Programmierung in Logo mit einer ganzen Klasse •Ausarbeitung eines p ¨adagogischen Projekts. Die Arbeiten mit den Sch ¨ulerinnen und Sch ¨ulern in Modul 2 und 4 wurden von dem Kursverantwortlichen beobachtet und anschließend mit den Lehrerinnen und Lehrern gemeinsam analysiert. Die Kommunikation erfolgte teilweise ¨uber das Internet (Valente, 1997). Da nach dem neuen Bildungsplan 2004/2005 jede Lehrerin und jeder Lehrer an Realschulen in Baden-W ¨urttemberg die Informationstechnische Grundbildung unterrichten muss, ist der Fortbildungsbedarf enorm. Eine Umsetzung des Konzepts in der Breite ist nur dann m ¨oglich, wenn es in jeder Realschule zumindest einen Experten im Bereich der informatischen Grundkonzepte und Logo gibt. Bei 467 ¨oﬀentlichen und privaten Realschulen3(Stand Oktober 2004) ist dies allein schon ein großer Kraftakt. Eine Weiterbildung der Experten sollte nach dem brasilianischen Vorbild aus vernetzten Pr ¨asenz-, Selbstlernund Transferphasen bestehen. In den Pr ¨asenzund Selbstlernphasen muss der Wissenserwerb der informatischen Grundkonzepte und von Logo im Vordergrund stehen, die in ¨Ubungen am Rechner angewendet und vertieft werden. Die Betreuung der ¨Ubungen muss in den Pr ¨asenzveranstaltungen im Rechnerraum und in den Selbstlernphasen durch einen Online-Tutor erfolgen. Schon fr ¨uhzeitig m ¨ussen konkrete Umsetzungen von Unterrichtssequenzen, in denen die informatischen Grundkonzepte in Fachinhalte eingebettet werden, mit den Kursverantwortlichen gemeinsam geplant und in den Transferphasen in den Schulen umgesetzt, ausgewertet und m ¨oglicherweise angepasst werden. Die Beschreibungen der Unterrichtsideen und die erforderlichen Materialien wie Arbeitsbl ¨atter oder Logo-Mikrowelten m ¨ussen den anderen Experten in einem gemeinsamen internetbasierten Arbeitsbereich wie zum Beispiel auf einem BSCW-Server4zur Verf¨ugung gestellt werden. Dadurch kann im Laufe der Fortbildung eine Sammlung guter Unterrichtsbeispiele entstehen, auf die alle zur ¨uckgreifen k ¨onnen. Eine Basisausbildung muss sich mindestens ¨uber ein Jahr erstrecken. Wie auch bei der Nachqualiﬁkation der 3http://www.statistik.baden-wuerttemberg.de/BildungKultur/Landesdaten/abschulen.asp (Abruf: 03.08.05) 4Basic Support for Cooperative Work, http://www.bscw.de (Abruf: 03.08.05) 1957 Fazit Lehrkr ¨afte f ¨ur Informatik an Gymnasien in Bayern im Programm SIGNAL5m¨ussen die Teilnehmer Anrechnungsstunden erhalten, um die h ¨ohere Arbeitsbelastung bew ¨altigen zu k¨onnen. Nach der Fortbildung m ¨ussen die Experten in den Realschulen die Rolle der Multiplikatoren f¨ur die rund 16000 Kollegen6(Stand Schuljahr 2004/2005) ¨ubernehmen. Sie geben im laufenden Schulbetrieb ihr Wissen ¨uber die informatischen Grundkonzepte und Logo in w¨ochentlichen Sitzungen anhand konkreter Unterrichtsbeispiele weiter. Außerdem stellen sie Unterrichtsmaterialien und didaktisch-methodische ¨Uberlegungen vor und sind permanenter Ansprechpartner. Ein wichtiger Forschungsbereich in diesem Zusammenhang wird die Entwicklung aufeinander abgestimmter Konzepte und Materialien sein, die die Lehrerinnen und Lehrer sowohl als Lernende als auch Lehrende optimal unterst ¨utzen. Dies kann ¨ahnlich zu der in Kapitel 3.5 beschriebenen Logo-Fortbildung erfolgen, in der die Lehrerinnen an ganz konkreten Unterrichtsbeispielen arbeiteten, die informatischen Grundkonzepte jedoch auf einem h ¨oheren Abstraktionsniveau thematisiert wurden. So kann das erworbene fachfremde Wissen schon kurze Zeit sp ¨ater an die Sch ¨ulerinnen und Sch ¨uler weitergegeben werden. 5SIGNAL: Sofortprogramm Informatik am Gymnasium – Nachqualiﬁkation von Lehrkr ¨aften, http://www.stmwfk.bayern.de/hochschule/signal.html (Abruf: 03.08.05) 6http://www.statistik.baden-wuerttemberg.de/BildungKultur/Landesdaten/ablehrer.asp (Abruf: 03.08.05) 196Anhang A Empfehlungen zu einer informatischen Bildung 1976 Zielsetzungen und Inhalte des Informatikunterrichts (GI, 1976) Schwerpunkte : Algorithmen ﬁnden und als Programm formulieren Praxisorientierte Probleme mit Informatiksystemen l ¨osen Gesellschaftliche Auswirkungen der Datenverarbeitung kennen Theoretische und technische Grundlagen der Informatik erarbeiten Bezeichnung : Informatik Klassenstufe : — Angebot : Pﬂichtbereich 1981 Empfehlungen zur Einbeziehung informatischer Inhalte in den Mathematikunterricht der Sekundarstufe I (GDM, 1981) Schwerpunkte : Algorithmen formulieren und implementieren Strukturieren von Daten und Umgang mit großen Datenmengen Bezeichnung : Informatik im Mathematikunterricht Klassenstufe : Sek. I Angebot : — 1985 Empfehlungen und ¨Uberlegungen zur Gestaltung von Lehrpl ¨anen f ¨ur den Computer-Einsatz im Unterricht der allgemeinbildenden Schulen (MNU, 1985a) Schwerpunkte : Anwendungen nutzen Probleml ¨osungen durchf ¨uhren Funktionsprinzipien von Ger ¨aten kennen und bedienen Gesellschaftliche Auswirkungen der Informationstechnologien kennen Bezeichnung : Informationstechnische Grundbildung Klassenstufe : nicht vor dem 8. Schuljahr Angebot : wenige, komplexe Unterrichtseinheiten 1985 Empfehlungen zur Gestaltung von Lehrpl ¨anen f ¨ur die informationstechnische Bildung in der Sekundarstufe I. bzw. II und f ¨ur den Computer-Einsatz im Mathematikunterricht der Sekundarstufe II (MNU, 1985b) Schwerpunkte : Anwendungen nutzen und anpassen Phasen der Probleml ¨osung und Modellbildung durchf ¨uhren Funktionsprinzipien von Softund Hardwaresystemen kennen und bedienen 197Anhang A Empfehlungen zu einer informatischen Bildung Gesellschaftliche Auswirkungen der Informationstechnologien kennen Bezeichnung : Informationstechnische Bildung Klassenstufe : im Anschluss an die Informationstechnische Grundbildung Angebot : Fakultativ oder Wahlpﬂichtfach 1986 Rahmenempfehlung f ¨ur die Informatik im Unterricht der Sekundarstufe I (GI, 1986) Schwerpunkte : L¨osungsverfahren verstehen L¨osungen in Programmen formulieren Arbeitsweisen des Computers kennen Auswirkungen der Informationstechnik auf die Gesellschaft kennen Bezeichnung : Informatik Klassenstufe : Sek. I Angebot : Pﬂichtbereich 1987 Gesamtkonzept f ¨ur die informationstechnische Bildung – Informationstechnische Grundbildung (BLK, 1987) Schwerpunkte : Individuelle Erfahrungen mit Informationstechniken aufarbeiten Grundstrukturen und Grundbegriﬀe der Informationstechniken kennen Computer und Peripherie bedienen Probleml ¨osungen in algorithmischer Form darstellen Entwicklung der elektronischen Datenverarbeitung kennen Chancen und Risiken der Informationstechniken einsch ¨atzen Bezeichnung : Informationstechnische Grundbildung Klassenstufe : Sek. I, jedoch nicht zu Beginn Angebot : Einbettung in vorhandene F ¨acher 1987 Gesamtkonzept f ¨ur die informationstechnische Bildung – Vertiefende informationstechnische Grundbildung in Form der Informatik (BLK, 1987) Schwerpunkte : Funktionsprinzipien und Grenzen von Computern kennen und einsch ¨atzen Probleml ¨osemethoden kennen Programmiersprachen lernen und strukturiert programmieren Computer als Werkzeug in anderen F ¨achern einsetzen Prozeßsteuerung durch Mikroprozessoren verstehen Bezeichnung : Informatik Klassenstufe : Sek. I (Wahlpﬂicht), Sek. II Angebot : — 198Anhang A Empfehlungen zu einer informatischen Bildung 1993 GI-Empfehlungen f ¨ur das Fach Informatik in der Sekundarstufe II allgemeinbildender Schulen (GI, 1993) Schwerpunkte : Modellierungstechniken und ihre Darstellung kennen Theoretische Grundlagen von Computersystemen kennen Funktionsprinzipien und Grenzen von Computern verstehen Auswirkungen der Arbeit in vernetzten Systemen einsch ¨atzen Bezeichnung : Informatik Klassenstufe : Sek. II Angebot : eigenes Fach 1995 Medienerziehung in der Schule – Orientierungsrahmen (BLK, 1995) Schwerpunkte : Medien f ¨ur verschiedene Aufgaben nutzen Wirkungsweise und Produktionsbedingungen von Medien kennen lernen Medien gestalten Bezeichnung : Medienerziehung Klassenstufe : 1 – 10 Angebot : — 1999 Informatische Bildung und Medienerziehung (GI, 1999) Schwerpunkte : Daten automatisch verarbeiten Mit Informatiksystemen interagieren In Netzen kommunizieren Bezeichnung : Informatische Bildung Klassenstufe : Sek. I und II Angebot : eigenes Fach Informatik 2000 Empfehlungen f ¨ur ein Gesamtkonzept zur informatischen Bildung an allgemein bildenden Schulen (GI, 2000) Schwerpunkte : Mit Informatiksystemen interagieren Wirkprinzipien von Informatiksystemen kennen Informatische Modellierungstechniken anwenden Wechselwirkungen zwischen Informatiksystemen, Individuum und Gesellschaft kennen Bezeichnung : Informatische Bildung Klassenstufe : 1 – 4, 5 – 13 Angebot : m ¨oglichst fr ¨uh ein eigenes Fach Informatik 199Anhang B Informatische Grundkonzepte – Vortest Forschungsproje kt  Vermittlung  informatischer Grundk onzepte im fächerübergreifenden Unterr icht in Klasse 5 der Realschule Test für S chülerinnen und Schüler (Vorerhebung) •Informatische Grundkonzepte Teil 1 Dipl. Inf. Birgit Wursthorn Institut für Mathematik und Informatik, Pädagogische HochschuleLudwigsburg Als erstes musst  du d einen Coden amen  eintragen. Wie  du d ich vie lleicht noch erinnern kannst, besteht dein Codename aus den ersten beiden Buchstaben des Vo rnamens der Mutter dein er Mutter (d.h. d einer Großmutte r), gefolgt von d em Tag deiner Geburt und de n ersten beiden Bu chstaben des Vornamens deines Vaters. Heißt  die Mutter deiner Mutter "Linda", bist du am 12.09.1993 g eboren und h eißt d ein Va ter "Manuel", so lautet dein Code  "Li12Ma". Schreibe jetzt deinen Codename n in da s dafür vorgesehene Feld. Codename:  __________________________   1) Die Lebewesen auf "Platu rus" In der folgenden Darstellung sind die Eigenschaften der Tierarten "Säugetier", ""Hasentier" und "Feldhase" und i hre verwandtschaftlic hen Bez iehun gen abgebildet. Folgende Information en kann m an aus der Darstellung links ablesen: •Feldhasen sind g raubraun, h aben lange Ohren und sä ugen ihre Kind er.  •Hasentiere haben lange Ohren und s äugen ihre Kind er  •Säugetiere säugen ihre Kind er          200Anhang B Informatische Grundkonzepte – Vortest In "Platurus" leben ebenfalls Tie rarten. Sie und ih re verwandschaftlichen Beziehun gen sind im  folgenden dargestellt: Schreibe für die Tierarten "Opusis", "Sweka", "Penkibus " und " Bruferus" alle Eigenschaften a uf, die  man aus der Darstellung ablesen kann. •Opusis: _________________________________________________________________ _______________________________________________________________________ •Sweka: _________________________________________________________________  _______________________________________________________________________ •Penkibus : _______________________________________________________________ _______________________________________________________________________ •Bruferus: _______________________________________________________________ _______________________________________________________________________             201Anhang B Informatische Grundkonzepte – Vortest 2) Einordnun g von Begr iffen Ordne die folgenden Begriffe in das vorgegebene Schema e in.  FahrradFahrzeug Tanklaster PKW Kippl aster Rennrad Du m usst die einzelnen Begriffe auf die freien Linien schreiben. 2 Be griffe wurden be reits in d as Schema eingetragen.     3) Ordnun g von Figu ren Ordne die folgenden Figuren. Zeichne verwandte Figuren möglichst nahe zus ammen.             202Anhang B Informatische Grundkonzepte – Vortest 4) Zeichne  in das Schaubi ld mindestens 6 verschiedene Dreiecke oder Vierecke.     5) Folgen Trage die nächsten 3 Z ahlen auf den Linien ein. 481216_____________________   361224_____________________   123123123123_____________________   Zeichne die nächsten 3 S ymbol e.   203Anhang B Informatische Grundkonzepte – Vortest 6) "Qu adrekel"  "Quadrekel" das folgende Quadrat. "Quadrekeln" bedeutet, ein Qu adrat in 4 g leich große Quadrate zu unterteilen und d as rechts oben e ntstandene Quadrat zu "Quadrekeln".                                 204Anhang B Informatische Grundkonzepte – Vortest 7) Zeichnung Die vielen Quad rate unten sollen g enau 1 cm  breit und 1 cm  hoch sein. Führe die f olgende Beschreibung ganz ge nau aus. 1.Starte die Zeichnung an d em kleinen Kr eis.  2.Zeichne ein Quadrat mit  der Seitenlänge 1 cm.  3.Wiederhol e die folgenden beiden Anwei sungen bis das kleine Kr euz in der Zeichnun g liegt.  •Starte die Zeichnung an d em kleinen Kr eis.  •Zeichne ein um 1 cm größer es Quadrat                          205Anhang B Informatische Grundkonzepte – Vortest 8) Beschreibung Beschreibe, wie die folgende Figur gezeichnet werden kann. D ie Zeichnun g muss an dem kleinen Kreis anfangennhang B Informatische Grundkonzepte – Vortest Forschungsproje kt  Vermittlung  informatischer Grundk onzepte im fächerübergreifenden Unterr icht in Klasse 5 der Realschule Test für S chülerinnen und Schüler (Vorerhebung) •Informatische Grundkonzepte Teil 2 Dipl. Inf. Birgit Wursthorn Institut für Mathematik und Informatik, Pädagogische HochschuleLudwigsburg Als erstes musst  du d einen Coden amen  eintragen. Wie  du d ich vie lleicht noch erinnern kannst, besteht dein Codename aus den ersten beiden Buchstaben des Vo rnamens der Mutter dein er Mutter (d.h. d einer Großmutte r), gefolgt von d em Tag deiner Geburt und de n ersten beiden Bu chstaben des Vornamens deines Vaters. Heißt  die Mutter deiner Mutter "Linda", bist du am 12.09.1993 g eboren und h eißt d ein Va ter "Manuel", so lautet dein Code  "Li12Ma". Schreibe jetzt deinen Codename n in da s dafür vorgesehene Feld. Codename:  __________________________                               207Anhang B Informatische Grundkonzepte – Vortest 1) Bild er 1. Be schreibe, wie 3 Per sonen zusam men das fol gende Bild am schnellsten mit  Pinse l und M alkasten malen könn en.  _______________________________________________________________________ _______________________________________________________________________ _______________________________________________________________________ _______________________________________________________________________ _______________________________________________________________________ _______________________________________________________________________             208Anhang B Informatische Grundkonzepte – Vortest 2. Das  folgende Bild wur de mit Kartoffelstempeln erstellt. Beschreibe genau, wi e 8 Personen das Bild mögli chst schnell  herstellen könn en. Es müssen  die Kartoffelstempel ge schnitzt und da s Bild mit den Stempeln  gedruckt werdennhang B Informatische Grundkonzepte – Vortest 3. Stell  dir vor, du ka nnst einen W underst empel  herstellen, dessen Gr öße verände rt werden kann. M it dem Wunderst empel kannst du z .B. die Figuren stempeln.  Insgesamt kannst du n atürlich noch viel mehr F iguren damit  stempeln. Zeichne bitte  alle Wunderst empel  auf, die du zu r Herstellung des Stempelbildes auf d er vorh erigen Seite brauchst.                               210Anhang B Informatische Grundkonzepte – Vortest 2) Adres sliste 1. Sch reibe in die f olgende Zeile deine komplette Ad resse. ___________________________________________________________________________  2. Or dne möglichst üb ersichtlich 3 e rfundene Adressen deiner Mitschülerinnen ode r Mitschüler an, so dass du aus der A nordnung die Fragen und Auf gaben •Wie viele Schülerinnen und Schül er kom men aus Östr ingen?  •Gib di e Vo rnamen de r Schülerinnen und Schül er an.  •Aus wie viel verschiedenen Ortschaften kom men die Schül erinnen und Schül er?  •Welcher  Schüler wohnt in der Bahnhofstr aße?  leicht ablesen  und  beantworten kannst. Ordne nun zun ächst die 3 Adressen üb ersichtlich a n.               3. Be antworte die Fragen aus deinen auf geschriebenen Ad ressen in d en dafür vorgesehenen freien Zeilen. •Wie viele Schülerinnen und Schül er kom men aus Östr ingen?  ____________________________________________________________________________  •Gib die Vornamen de r Schül erinnen und S chüler an.  ____________________________________________________________________________  •Aus wie viel verschiedenen O rtschaften kom men die Schülerinnen und Schül er?  ____________________________________________________________________________  •Welcher  Schüler wohnt in d er Bahnhofst raße?  ____________________________________________________________________________      211Anhang B Informatische Grundkonzepte – Vortest 4. Ist deine übersichtliche Anordnun g der Adressen auch geeignet, alle Adressen der Schül erinnen und Schül er deiner Realschule aufzun ehmen?  Begründe dein e Antwo rt in den folgenden Zeilennhang B Informatische Grundkonzepte – Vortest 3) Ein Rezept 1.Um Pfannku chen für eine P erson zu machen, benöti gt man  folgende Zutaten:  •50 gr . Mehl  •1 Ei  •100 m l Milch  •25 gr . Butter    2.Pfannku chen für zwei Personen entstehen aus  •100 gr . Mehl  •2 Eie r  •200 m l Milch  •50 gr . Butter    3.Kannst du d ie Zutaten fü r das Rezept a uch fü r 5 Person en in die folgenden Z eilen schreiben?  _______________________________________________________________________ _______________________________________________________________________ _______________________________________________________________________ _______________________________________________________________________   4.Schreibe als Letztes das Rezept nun mit  Kreisen   anstatt mit Zahlen auf, so d ass ich beim Ansehen d einer Arbeit eine von mir aus gedachte Zahl von Per sonen in die Kreise eintragen kann und das  Rezept dann imme r noch richtig ist.  _______________________________________________________________________ _______________________________________________________________________ _______________________________________________________________________ _______________________________________________________________________           213Anhang B Informatische Grundkonzepte – Vortest 4) Mor genqu alen Beschreibe in ei nem Diagramm,  was du mor gens zwis chen dem Aufstehen und de r Schu le machst . Schreibe  •Hand lungen in R echtecke ( ) und  •Ja-Nein -Entscheidu ngen in K aros ( ).  Dam it dir die Lösung der Aufg abe leichter fällt, ist der Anfang vorgegeben. Vervoll ständige das Diagramm,  auch wenn deine ersten Sch ritte etwas anders aus sehen.     214Anhang B Informatische Grundkonzepte – Vortest Forschungsprojekt  Vermittlun g informati scher Grundkon zepte im fächerübergreifenden Unterr icht in Klasse 5 der Realschule Test für S chülerinnen und Schüler (Vorerhebung) •Informatische Grundkonzepte Teil 3 Dipl. Inf. Birgit Wursthorn Institut für Mathematik und Informatik, Pädagogische HochschuleLudwigsburg Als erstes musst  du d einen Coden amen  eintragen. Wie  du d ich vie lleicht noch erinnern kannst, besteht dein Codename aus den ersten beiden Buchstaben des Vo rnamens der Mutter dein er Mutter (d.h. d einer Großmutte r), gefolgt von d em Tag deiner Geburt und de n ersten beiden Bu chstaben des Vornamens deines Vaters. Heißt  die Mutter deiner Mutter "Linda", bist du am 12.09.1993 g eboren und h eißt d ein Va ter "Manuel", so lautet dein Code  "Li12Ma". Schreibe jetzt deinen Codename n in da s dafür vorgesehene Feld. Codename:  __________________________ 1) Formen  im Land  "Droblavie" Welche F ormen existieren in dem  Land "Droblavie", in dem es nu r die Farben •rot  •blau  und di e Eigenschaft en •dreieckig  •viereckig  gibt. Ze ichne alle Formen aus "Droblavie" auf.                 215Anhang B Informatische Grundkonzepte – Vortest 2) "Fo rmal ien" Die Sprache der Einwohner  in "Formalien" hat nu r die 3 Bu chstaben Ihre Wörter setzen si ch aus mehreren B uchstaben zusam men.  Sie dürf en jedoch höchs tens 2 gleiche Buchstaben in einem Wort nebenein ander setzen. In jeder Zeile steht e in W ort. Welche d er folgenden Wör ter haben di e Einwohn er von "F ormalien" in ih rer Sprache richtig gebildet?                     216Anhang B Informatische Grundkonzepte – Vortest 3) Robot er Der Robot er "Dummie" kennt nu r die folgenden beiden Wörter •blub  •blob  Welche Aus rufe mit höchst ens 3 Wö rtern kann " Dummie" mach ennhang B Informatische Grundkonzepte – Vortest 4) Geh eimsch rift Du sie hst unt en ein e Tabelle mit einer Geheims chrift Löse die folgenden A ufgaben: 1.Finde das geheime Wor t 72 65 85 83 und t rage es in di e folgende Zeile ein.  ___________________________________________________ 2.Schreibe das Wort  BLUME in de r Geheims chrift. ___________________________________________________         218Anhang B Informatische Grundkonzepte – Vortest 5) Dein e Geheimschr ift 1.Schreibe dein Geburtsdatum  in die folgende Zeile.    _______________________________________________________   2.Erfinde s elbst eine Geh eimschrift  für die Darstellung eines Geburtsdatums und s chreibe sie in den folgenden Kas ten.                        3.Gib dein G eburtsdatum in deiner Geheimschrift a n.    _______________________________________________________   4.Schreibe den  30.12.1786 in d einer Geheimschr ift in die folgende Zeile.  _______________________________________________________     219Anhang B Informatische Grundkonzepte – Vortest 6) Die 1. Steigerungsform von "schön", "hel l" und " bunt"   Die Steigerung von bunt funktioni ert folgendermaßen: buntbunter am bunt esten  1. Steigerungs form2. Steigerungsform Steigere du nun d as Adjektiv  schön. schön_______________________________ _______________________________  1. Steigerungsform 2. Steigerungs form   Auf d er linken Seite siehst du ei nen Maschine. Diese Maschine kann die 1. Steigerungsform für die Adjektive "bunt", "schön" und "h ell" erzeugen. E s fehlt jedoch der Motor der Maschine. Mit wel chem auf der rechten Seite dargestellten Motor kannst du die M aschine funk tionstüchtig machen. Kreuze diesen Moto r an.                     220Anhang B Informatische Grundkonzepte – Vortest 7) Bildun g von Sätzen Die Maschine  erzeugt gute Sätze.  Welche r der folgenden Sätze wur den mit  dieser Maschine gebaut? Kreuze diesen bitte  an.  Sie g eht nach Ha use.  Peter rennt in di e Schul e  Sie läuft nach Hause.  Peter geht aus der Schul e.                   221Anhang B Informatische Grundkonzepte – Vortest 8) Die 1. Steigerungsform von "hoch", "langsam" und "gut" Welche r Moto r arbeitet hier korrekt. Kr euze ihn bitte a n.   222Anhang B Informatische Grundkonzepte – Vortest       223Anhang C Einstellungen zum Computer – Fragebogen 1) Motivationale Aspekte bei der Verwendung des Computers 1) Deine Mo tivation für die V erwen dung des Co mputers    stimmt überhaupt nichtstimmt eher nichtteils teilsstimmt eherstimmt voll 1.1)Mir ist es wich tig, mit dem Computer z u arbeiten. 1.2)Der Um gang mit dem Computer  mac ht du mm. 1.3)Ich finde Wissen  über den Computer wi chtig. 1.4)Mir ist es wich tig, mit dem Computer z u spielen. 1.5)Der Um gang mit dem Computer  fordert mein Denken. 1.6)Ich möchte me hr über den Computer  wissen. 1.7)Mir ist es wich tig, mit dem Computer z u lernen. 1.8)Die Funktions weise des Computers int eressiert mich. 1.9)Wissen über Computer  bringt mir  was.    2) Gefühle bei d er Benutz ung des Com pute rs  Welche G efühle hast du b ei der Arbeit mit  dem Computer?stimmt überhaupt nichtstimmt eher nich tteils teilsstimmt eherstimmt voll 2.1)Freude 2.2)Langeweile 2.3)Aufregung 2.4)Herausforderung 2.5)Beunruhigung 2.6)Anregung 2.7)Bedrohun g 2.8)Entsp annun g 2.9)Interesse 2.10)Angst 2.11)Neugier 2.12)Nervosit ät 2.13)Spaß 2.14)Unsic herheit 2.15)Gefühl d er Zeitverschwendun g   3) Einsc hätzung der eigenen  Begabu ng bezü glich des Co mputers   stimmt überhaupt nichtstimmt eher nichtteils teilsstimmt eherstimmt voll 3.1)Ich traue mir im  Umgang mit Computern viel zu. 3.2)Der Um gang mit dem Computer  liegt mir nicht. 3.3)Den Umgan g mit dem Computer  werde ich ni e richtig verstehen 3.4)Der Um gang mit Computern  fällt mir  nicht schwer. 3.5)Für die Nutzung d es Computer s habe ich einfach kein e Begabung   4) Eigenschaf ten des Computers   stimmt überhaupt nichtstimmt eher nichtteils teilsstimmt eherstimmt voll 4.1)Der Computer kann ganz schnell rechnen. 4.2)Der Computer kann m ich verstehen, wenn i ch Pr oblem e habe. 4.3)Der Computer kann nu r arbeiten, we nn ich ihm  genau sage, was er tun soll. 4.4)Der Computer ist undur chschaubar. 4.5)Der Computer erkennt s elbst, w as ich brauche und g ibt es mir dann s ofort. 4.6)Der Computer kann nu r das arbeiten, w as in dem benutzten Pro gramm steht. 4.7)Der Computer ist bös artig. 4.8)Der Computer macht nu r Fehler, wenn e r falsch bedient wi rd. 4.9).Der Computer kann alles. 4.10)Dadurch dass ich ei nen Computer benutzen ka nn, mus s ich selber nicht mehr so vi el lernen. 224Anhang C Einstellungen zum Computer – Fragebogen 2) Gef ¨uhle bei der Benutzung des Computers 1) Deine Mo tivation für die V erwen dung des Co mputers    stimmt überhaupt nichtstimmt eher nichtteils teilsstimmt eherstimmt voll 1.1)Mir ist es wich tig mit  dem Computer zu  arbeiten. 1.2)Der Um gang mit dem  Computer  mac ht dumm. 1.3)Ich finde Wissen  über den Co mputer wi chtig. 1.4)Mir ist es wich tig mit  dem Computer zu  spielen. 1.5)Der Um gang mit dem  Computer  fordert mein Denken. 1.6)Ich möchte me hr über den Co mputer wiss en. 1.7)Mir ist es wich tig mit  dem Computer zu  lernen. 1.8)Die Funkti onsw eise des Computers int eressiert mich. 1.9)Wissen übe r Computer  bringt mir was.    2) Gefühle bei d er Benutz ung des Com pute rs  Welche G efühl e hast du b ei der Arbeit mit  dem Computer?stimmt überha upt nichtstimmt eher nichtteils teilsstimmt eherstimmt voll 2.1)Freude 2.2)Langeweile 2.3)Aufregung 2.4)Herausforderung 2.5)Beunruhigung 2.6)Anregung 2.7)Bedrohun g 2.8)Entsp annun g 2.9)Interesse 2.10)Angst 2.11)Neugier 2.12)Nervosität 2.13)Spaß 2.14)Unsi cherheit 2.15)Gefühl d er Zeitverschwendun g   3) Einsc hätzung der eigenen  Begabu ng bezü glich des Co mputers   stimmt überh aupt nichtstimmt eher nichtteils teilsstimmt eherstimmt voll 3.1)Ich traue mir im  Umgang mit Computern viel zu. 3.2)Der Um gang mit dem Computer  liegt mir nicht. 3.3)Den Umgan g mit dem Computer  werde ich ni e richtig verstehen 3.4)Der Um gang mit Computern  fällt mir  nicht schwer. 3.5)Für die Nutzung d es Computer s habe ich einfach kein e Begabung   4) Eigenschaf ten des Computers   stimmt überhaupt nichtstimmt eher nichtteils teilsstimmt eherstimmt voll 4.1)Der Computer k ann g anz schnell rechnen. 4.2)Der Computer k ann m ich verstehen, wenn i ch Pr obleme  habe. 4.3)Der Computer k ann nu r arbeiten, w enn ich ihm  genau sage, was er tun soll. 4.4)Der Computer i st undu rchschaubar. 4.5)Der Computer er kennt s elber, wa s ich brauche und g ibt es mir dann s ofort. 4.6)Der Computer k ann nu r das arbeiten, w as in dem benutzten Pro gramm steht. 4.7)Der Computer i st bös artig. 4.8)Der Computer macht nu r Fehler, wenn e r falsch be dient wird. 4.9).Der Computer k ann a lles. 4.10)Dadurch dass ich einen Computer benutz en kann, muss  ich selber nicht mehr so vi el lernen. 225Anhang C Einstellungen zum Computer – Fragebogen 3) Selbsteinsch ¨atzung der Kompetenzen im Umgang mit dem Computer 1) Deine Mo tivation für die V erwen dung des Co mputers   Deine Motiva tion für d ie Verwendun g des Computers stimmt überhaupt nichtstimmt eher nichtteils teilsstimmt eherstimmt voll 1.1)Mir ist es wich tig, mit dem Computer z u arbeiten. 1.2)Der Um gang mit dem Computer  mac ht du mm. 1.3)Ich finde Wissen  über den Computer wi chtig. 1.4)Mir ist es wich tig, mit dem Computer z u spielen. 1.5)Der Um gang mit dem Computer  fordert mein Denken. 1.6)Ich möchte me hr über den Computer  wissen. 1.7)Mir ist es wich tig, mit dem Computer z u lernen. 1.8)Die Funktions weise des Computers int eressiert mich. 1.9)Wissen über Computer  bringt mir  was.    2) Gefühle bei d er Benutz ung des Com pute rs  Welche G efühle hast du b ei der Arbeit mit  dem Computer?stimmt überhaupt nichtstimmt eher nich tteils teilsstimmt eherstimmt voll 2.1)Freude 2.2)Langeweile 2.3)Aufregung 2.4)Herausforderung 2.5)Beunruhigung 2.6)Anregung 2.7)Bedrohun g 2.8)Entsp annun g 2.9)Interesse 2.10)Angst 2.11)Neugier 2.12)Nervosit ät 2.13)Spaß 2.14)Unsic herheit 2.15)Gefühl d er Zeitverschwendun g   3) Einsc hätzung der eigenen  Begabu ng bezü glich des Co mputers   stimmt überhaupt nichtstimmt eher nichtteils teilsstimmt eherstimmt voll 3.1)Ich traue mir im  Umgang mit Computern viel zu. 3.2)Der Um gang mit dem Computer  liegt mir nicht. 3.3)Den Umgan g mit dem Computer  werde ich ni e richtig verstehen. 3.4)Der Um gang mit Computern  fällt mir  nicht schwer. 3.5)Für die Nutzung d es Computer s habe ich einfach kein e Begabung.   4) Eigenschaf ten des Computers  stimmt überhaupt nichtstimmt eher nichtteils teilsstimmt eherstimmt voll 4.1)Der Computer kann ganz schnell rechnen. 4.2)Der Computer kann m ich verstehen, wenn i ch Pr oblem e habe. 4.3)Der Computer kann nu r arbeiten, we nn ich ihm  genau sage, was er tun soll. 4.4)Der Computer ist undur chschaubar. 4.5)Der Computer erkennt s elbst, w as ich brauche und g ibt es mir dann s ofort. 4.6)Der Computer kann nu r das arbeiten, w as in dem benutzten Pro gramm steht. 4.7)Der Computer ist bös artig. 4.8)Der Computer macht nu r Fehler, wenn e r falsch bedient wi rd. 4.9).Der Computer kann alles. 4.10)Dadurch dass ich ei nen Computer benutzen ka nn, mus s ich selbst ni cht mehr so vi el lernen. 226Anhang C Einstellungen zum Computer – Fragebogen 4) Beurteilung der Eigenschaften des Computers 1) Deine Mo tivation für die V erwen dung des Co mputers   Deine Motiva tion für d ie Verwendun g des Computers stimmt überhaupt nichtstimmt eher nichtteils teilsstimmt eherstimmt voll 1.1)Mir ist es wich tig, mit dem Computer z u arbeiten. 1.2)Der Um gang mit dem Computer  mac ht du mm. 1.3)Ich finde Wissen  über den Computer wi chtig. 1.4)Mir ist es wich tig, mit dem Computer z u spielen. 1.5)Der Um gang mit dem Computer  fordert mein Denken. 1.6)Ich möchte me hr über den Computer  wissen. 1.7)Mir ist es wich tig, mit dem Computer z u lernen. 1.8)Die Funktions weise des Computers int eressiert mich. 1.9)Wissen über Computer  bringt mir  was.    2) Gefühle bei d er Benutz ung des Com pute rs  Welche G efühle hast du b ei der Arbeit mit  dem Computer?stimmt überhaupt nichtstimmt eher nich tteils teilsstimmt eherstimmt voll 2.1)Freude 2.2)Langeweile 2.3)Aufregung 2.4)Herausforderung 2.5)Beunruhigung 2.6)Anregung 2.7)Bedrohun g 2.8)Entsp annun g 2.9)Interesse 2.10)Angst 2.11)Neugier 2.12)Nervosit ät 2.13)Spaß 2.14)Unsic herheit 2.15)Gefühl d er Zeitverschwendun g   3) Einsc hätzung der eigenen  Begabu ng bezü glich des Co mputers   stimmt überhaupt nichtstimmt eher nichtteils teilsstimmt eherstimmt voll 3.1)Ich traue mir im  Umgang mit Computern viel zu. 3.2)Der Um gang mit dem Computer  liegt mir nicht. 3.3)Den Umgan g mit dem Computer  werde ich ni e richtig verstehen. 3.4)Der Um gang mit Computern  fällt mir  nicht schwer. 3.5)Für die Nutzung d es Computer s habe ich einfach kein e Begabung.   4) Eigenschaf ten des Computers  stimmt überhaupt nichtstimmt eher nichtteils teilsstimmt eherstimmt voll 4.1)Der Computer kann ganz schnell rechnen. 4.2)Der Computer kann m ich verstehen, wenn i ch Pr oblem e habe. 4.3)Der Computer kann nu r arbeiten, we nn ich ihm  genau sage, was er tun soll. 4.4)Der Computer ist undur chschaubar. 4.5)Der Computer erkennt s elbst, w as ich brauche und g ibt es mir dann s ofort. 4.6)Der Computer kann nu r das arbeiten, w as in dem benutzten Pro gramm steht. 4.7)Der Computer ist bös artig. 4.8)Der Computer macht nu r Fehler, wenn e r falsch bedient wi rd. 4.9).Der Computer kann alles. 4.10)Dadurch dass ich ei nen Computer benutzen ka nn, mus s ich selbst ni cht mehr so vi el lernen. 227Anhang D R ¨ucklauf der Frageb ¨ogen zu den Einstellungen zum Computer 1) Motivationale Aspekte bei der Verwendung des Computers 20 21 22 23 24 25 26 27 28 29 30 1.1)  1.2)  1.3)  1.4)  1.5)  1.6)  1.7)  1.8)  1.9)  Antworthäufigkeiten Vortest  Nachtest  228Anhang D R ¨ucklauf der Frageb ¨ogen zu den Einstellungen zum Computer 2) Gef ¨uhle bei der Benutzung des Computers 20 21 22 23 24 25 26 27 28 29 30 2.1)  2.2)  2.3)  2.4)  2.5)  2.6)  2.7)  2.8)  2.9)  2.10)  2.11)  2.12)  2.13)  2.14)  2.15)  Antworthäufigkeiten Vortest  Nachtest  229Anhang D R ¨ucklauf der Frageb ¨ogen zu den Einstellungen zum Computer 3) Selbsteinsch ¨atzung der Kompetenzen im Umgang mit dem Computer 20 21 22 23 24 25 26 27 28 29 30 3.1)  3.2)  3.3)  3.4)  3.5)  Antworthäufigkeiten Vortest  Nachtest  4) Beurteilung der Eigenschaften des Computers 20 21 22 23 24 25 26 27 28 29 30 4.1)  4.2)  4.3)  4.4)  4.5)  4.6)  4.7)  4.8)  4.9)  4.10)  Antworthäufigkeiten Vortest  Nachtest  230Anhang E Interviewleitfaden Lehrerinnen Wir haben jetzt ein Jahr lang die Klasse bei der Vermittlung von informatischen Grundkonzepten in den F ¨achern Mathematik, Deutsch, Englisch und Musik betreut. I) Zu den einzelnen Themen wurden von mir f ¨ur die Sch ¨ulerinnen und Sch ¨ulerArbeitsbl¨atter erstellt. 1.Wie bewerten Sie die Arbeitsbl ¨atter f ¨ur den Unterricht? 2.Es wurden vier verschiedene Formen von Arbeitsbl ¨attern verwendet: •zum selbstst ¨andigen Durcharbeiten •zum selbstst ¨andigen Durcharbeiten mit Punkten f ¨ur einzelne Aufgaben •zum selbstst ¨andigen Erarbeiten ganz neuer Inhalte und gleichzeitigem bewerteten Test •zum gemeinsamen Durcharbeiten mit der Lehrperson Welche Formen haben sich bew ¨ahrt? II) F ¨ur viele Inhalte wurden den Sch ¨ulerinnen und Sch ¨ulern von mir Programme , so genannte Mikrowelten, vorgegeben. 1.Waren die Themen der Mikrowelten interessant oder eher k ¨unstlich f ¨ur die Sch ¨ulerinnen und Sch ¨uler? a)Nennen Sie bitte Beispiele. 2.Waren die Programme oﬀen genug, damit sie von den Sch ¨ulerinnen und Sch ¨ulern sinnvoll ausgebaut werden konnten? a)Falls ja : An welche Programme denken Sie? b)Falls nein : Welche Programme konnten von den Sch ¨ulerinnen und Sch ¨ulern nicht gen ¨ugend ausgebaut werden? c)Falls nein : Wie h ¨atten diese Programme anders gestaltet werden m ¨ussen, damit sie die Sch ¨ulerinnen und Sch ¨uler sinnvoll h ¨atten einsetzen k ¨onnen? III) Der Unterricht im Forschungsprojekt fand in ganz verschiedenen Unterrichtsformen statt. 1.Der Computerunterricht war h ¨auﬁg in Frontalphasen und in Gruppenarbeit am Computer aufgeteilt. Wie beurteilen Sie diese Aufteilung? 2.Der Computerunterricht fand f ¨ur die Sch ¨ulerinnen und Sch ¨uler nicht nur am Computer statt. Wie beurteilen Sie die Aufteilung zwischen Computerarbeitsphasen und Arbeitsphasen ohne Computer? 3.Solange wir die Computer im Computerraum verwendet haben, fand ein Teil des Computerunterrichts im Klassenzimmer statt. F ¨ur die Computerarbeit musste die Klasse dann in den Computerraum wechseln. Wie beurteilen Sie die Aufteilung zwischen der Arbeit im Klassenzimmer und im Computerraum? 231Anhang E Interviewleitfaden Lehrerinnen IV) Ab M ¨arz haben die Sch ¨ulerinnen und Sch ¨uler¨uber f ¨unf Wochen an dem Ritterprojekt gearbeitet. 1.Sehen Sie das Ritterprojekt als erfolgreich an? a)Wie beurteilen Sie das Projekt? 2.Wurde mit der Projektarbeit zum richtigen Zeitpunkt begonnen? a)Falls nein :Welchen Zeitpunkt h ¨atten Sie als geeignet angesehen? b)Falls nein :Was w ¨are an diesem Zeitpunkt besser gewesen? 3.Haben Sie den Eindruck, dass den Sch ¨ulerinnen und Sch ¨ulern gen ¨ugend Zeit zur Verf¨ugung stand? a)F¨ur was w ¨are mehr/weniger Zeit notwendig gewesen? 4.Wie passend beurteilen Sie das Thema Rittergeschichte f¨ur eine Projektarbeit in Klasse 5? 5.Wie sind die Sch ¨ulerinnen und Sch ¨uler mit den Freiheiten der Projektarbeit zurechtgekommen? 6.Beim Gedicht und beim Grundriss der Burg haben viele Sch ¨ulerinnen und Sch ¨uler zum Beispiel nur die Pﬂichtvorgaben abgearbeitet. Sie haben weder versucht, das Gedicht zu erweitern noch einen interessanteren Grundriss der Burg zu konstruieren. Warum haben sie ihr Ritterprojekt in dieser Hinsicht nicht ausgebaut und dadurch interessanter gestaltet? 7.Im Ritterprojekt haben die Sch ¨ulerinnen und Sch ¨uler weniger an konkreten Fachinhalten als im Unterricht zuvor gearbeitet. Ist nun zur Vermittlung der theoretischen informatischen Grundkonzepte der integrierte Fachunterricht oder Projektarbeit besser geeignet? a)Was haben Sie w ¨ahrend des Schuljahrs beobachtet? V) Auch im Forschungsprojekt wurden den Sch ¨ulerinnen und Sch ¨ulern Hausaufgaben aufgegeben, die sich auf die Inhalte des Fachs oder auf das theoretische ¨Uben der informatischen Grundkonzepte bezogen. Zu Beginn des Schuljahrs gab es im Computerunterricht regelm ¨aßig Hausaufgaben, mit Beginn des Ritterprojekts fast keine mehr. 1.Wie beurteilen Sie die Hausaufgaben im Computerunterricht? VI) Der Computerunterricht fand in Ihrem Fach integriert statt. 1.Hat der Computerunterricht auf den normalen Unterricht in Ihrem Fach bei den Sch¨ulerinnen und Sch ¨ulern zur ¨uckgewirkt? a)Was haben Sie beobachtet? 2.Hatten Sie Probleme, die Inhalte aus dem Lehrplan in der verk ¨urzten Zeit zu vermitteln? a)Falls ja : Lohnt es sich trotzdem, diesen Nachteil in Kauf zu nehmen? 3.Welche Verkn ¨upfungen zwischen den Fachinhalten und den theoretischen informatischen Grundkonzepten waren f ¨ur Ihr Fach geeignet/ungeeignet? a)K¨onnen Sie Beispiele angeben? 232Anhang E Interviewleitfaden Lehrerinnen 4.Unterstellen wir einmal, dass das Forschungsprojekt wiederholt wird. a)Sollten dann die Computerphasen im Fachunterricht ausgebaut oder eingeschr¨ankt werden? b)K¨onnen Sie konkrete Themenbereiche benennen, an denen ¨Anderungen vorgenommen werden sollten? VII) Der Computerunterricht im Forschungsprojekt war f¨acher ¨ubergreifend konzipiert. 1.Wurden die Inhalte f ¨acher ¨ubergreifend vermittelt oder liefen die Stunden in den einzelnen F ¨achern nebeneinander her? a)K¨onnen Sie Beispiele angeben? 2.Haben Inhalte aus anderen beteiligten F ¨achern in Ihrem Fach gewirkt? a)Falls ja : Geben Sie Beispiele an. 3.Durch den f ¨acher ¨ubergreifenden Aspekt wurden die theoretischen informatischen Grundkonzepte in verschiedenen F ¨achern angesprochen. Zum Beispiel wurde sowohl in Deutsch als auch in Englisch mit Syntaxdiagrammen gearbeitet. Wurden diese theoretischen informatischen Grundkonzepte h ¨auﬁg genug oder vielleicht auch zu oft wiederholt? VIII) Jetzt noch ein paar Fragen zum Lernerfolg der Sch ¨ulerinnen und Sch ¨uler im Computerunterricht. 1.Was haben die Sch ¨ulerinnen und Sch ¨uler, ganz allgemein gesagt, im Computerunterricht in diesem Schuljahr ¨uberhaupt gelernt? 2.Welche Sch ¨ulerinnen und Sch ¨uler haben von dem Computerunterricht proﬁtiert? a)Aus welchem Grund haben nur diese Sch ¨ulerinnen und Sch ¨uler vom Computerunterricht proﬁtiert? 3.Betrachtet man den Gesamtunterricht in den vier beteiligten F ¨achern zusammen mit dem Computerunterricht, welche Sch ¨ulerinnen und Sch ¨uler hatten dann eher Nachteile? a)Welche Nachteile waren das? Was konnten Sie genau beobachten? 4.Die Sch ¨ulerinnen und Sch ¨uler haben das ganze Jahr im Computerunterricht durchgehalten. Was war ausschlaggebend daf ¨ur? (Computer AG, Eltern, . . .) 5.Konnten Sie beobachten, dass die Sch ¨ulerinnen und Sch ¨uler, die zus ¨atzlich die Computer AG besuchten, einen Vorteil im normalen Computerunterricht hatten? a)In welchen Bereichen hatten sie Vorteile? IX) Der Computerunterricht wurde von den Sch ¨ulerinnen und Sch ¨ulern ganz unterschiedlichangenommen . 1.K¨onnen Sie die unterschiedlichen Motivationen der Sch ¨ulerinnen und Sch ¨uler beschreiben? 2.Gab es bei einzelnen Sch ¨ulerinnen und Sch ¨ulern Unterschiede bez ¨uglich der Moti233Anhang E Interviewleitfaden Lehrerinnen vation im Computerunterricht und Ihrem Unterricht in den anderen Stunden des Fachs? a)Was haben Sie beobachtet? 3.Hat sich die Motivation der Sch ¨ulerinnen und Sch ¨uler¨uber das Schuljahr hinweg ver¨andert? a)Wann gab es H ¨ohen und Tiefen? b)K¨onnen Sie sich diese H ¨ohen und Tiefen erkl ¨aren? 4.Wie sch ¨atzen Sie die Ausdauer der Sch ¨ulerinnen und Sch ¨uler im Computerunterricht ein? 5.Unterscheidet sich die Ausdauer der Sch ¨ulerinnen und Sch ¨uler bei der Arbeit im Computerunterricht und in dem von ihnen gestalteten Fachunterricht? a)Falls ja : Wie k ¨onnen Sie sich diese Unterschiede erkl ¨aren? X) Jetzt noch ein paar Fragen zu meiner Person . 1.Wie habe ich auf die Sch ¨ulerinnen und Sch ¨uler gewirkt? 2.Wie habe ich mich im Laufe des Schuljahrs entwickelt? 3.Welche Ratschl ¨age f¨ur die Zukunft w ¨urden Sie mir geben, wenn ich das Forschungsprojekt noch einmal durchf ¨uhren w ¨urde? XI) Einige Rahmenbedingungen im Forschungsprojekt waren entweder durch die Schule oder durch meine Person vorgegeben. An dieser Stelle m ¨ochte ich gerne ihre Meinung bez ¨uglich dieser Rahmenbedingungen und ihrer Auswirkungen auf das Forschungsprojekt erfahren. 1.Sind Doppelstunden f ¨ur den Computerunterricht geeignet? (Argumente) 2.Braucht jede Sch ¨ulerin und jeder Sch ¨uler einen eigenen Computer? (Argumente) 3.Muss die Fachlehrerin/der Fachlehrer auch die Person sein, die den Computerunterricht durchf ¨uhrt? (Argumente) 4.Welche anderen Rahmenbedingungen fallen Ihnen noch ein, die irgendeinen Einﬂuss auf den Projektverlauf hatten? Benennen Sie diese zusammen mit ihrem Einﬂuss auf das Projekt. 5.Braucht man zur Veranschaulichung im Klassenzimmer auch Pr ¨asentationsm ¨oglichkeiten wie einen Beamer? (Argumente) 6.Welche Auswirkung hatte die Tatsache, dass nur mit Logo ¨uber das gesamte Jahr gearbeitet wurde? XII) Die Art des Computerunterrichts im Forschungsprojekt k ¨onnte von Ihnen im Rahmen des integrierten ITG-Unterrichts im neuen Bildungsplan in den n ¨achsten Schuljahren fortgef ¨uhrt werden. 1.Werden Sie diese Art von Unterricht fortf ¨uhren? a)Falls ja : Was werden Sie genau machen? Nennen Sie einige Beispiele? b)Falls nein : Was hindert Sie daran, den Unterricht in dieser Art fortzusetzen? 234Anhang E Interviewleitfaden Lehrerinnen 2.Wie ist Ihr Eindruck nach einem Jahr der Vermittlung der informatischen Grundkonzepte. Ist die 5. Klassenstufe ¨uberhaupt geeignet, um diese zu vermitteln? a)Welche Argumente sprechen daf ¨ur und welche dagegen? 3.Waren die Sch ¨ulerinnen und Sch ¨uler generell gesehen mit dem Computerunterricht ¨uberfordert? a)Bei welchen Inhalten oder wann ist Ihnen das besonders aufgefallen? Gibt es weitere Punkte, die Ihnen r ¨uckblickend auf das Forschungsprojekt wichtig erscheinen? 235Anhang F Interviewleitfaden Sch ¨ulerinnen und Sch ¨uler I) Wir unterhalten uns jetzt etwas ¨uber deine Erfahrungen im Computerunterricht in diesem Schuljahr. 1.Bist du gerne in den Computerunterricht gegangen? 2.Was hat dir im Computerunterricht besonders gut gefallen? Was war spannend? 3.Was hat dir im Computerunterricht nicht gefallen? 4.Hast du im Computerunterricht immer alles gleich verstanden? a)Falls nein : Mit was kamst du ¨uberhaupt nicht klar? 5.Erz¨ahl mal, was du im Computerunterricht am liebsten gemacht hast? 6.Was war im Computerunterricht so wichtig f ¨ur dich, dass du es zu Hause gerne weiter machen m ¨ochtest? 7.Auf welche deiner Arbeiten im Computerunterricht warst du so richtig stolz? II) In seinen Lieblingsf ¨achern arbeitet man gerne im Unterricht mit. 1.Hast du im Computerunterricht gut mitgearbeitet? a)Falls ja : Kannst du dich noch erinnern, bei welchen Themen du gut mitgearbeitet hast? i.Falls ja : Welche Themen waren es? ii.Falls ja : Woran lag es, dass du bei diesen Themen gut mitgearbeitet hast? b)Falls nein : Warum hast du im Computerunterricht nicht gut mitgearbeitet? III) Du hattest den Computerunterricht bei mir und die anderen Stunden in den F¨achern Mathematik, Deutsch, Englisch und Musik bei deinen Fachlehrerinnen. 1.Fandest du den Computerunterricht schwerer als den normalen Unterricht in den F¨achern Mathematik, Deutsch, Englisch und Musik? a)Falls ja : Was war denn im Computerunterricht schwerer? b)Falls nein : War der Computerunterricht dann leichter? i.Falls ja : Was war denn im Computerunterricht leichter? 2.Was war im Computerunterricht eigentlich anders als im normalen Unterricht? 3.F¨ur die Arbeit am Computer habe ich immer eine l ¨angere Zeit eingeplant, damit jedes Sch ¨ulerpaar am Computer in seinem eigenen Tempo arbeiten konnte. a)Konntest du in deinem eigenen Tempo arbeiten? b)Wie fandest du das? IV) Es war von mir geplant, dass ihr w ¨ahrend der Arbeit am Computer euch viel intensiver mit euren Mitsch ¨ulerinnen und Mitsch ¨ulern austauschen k¨onnt, indem ihr zusammen mit eurem Partner die Aufgaben am Computer l ¨ost und euch auch die Arbeiten eurer Mitsch ¨ulerinnen und Mitsch ¨uler an den anderen Computern anschaut. 236Anhang F Interviewleitfaden Sch ¨ulerinnen und Sch ¨uler 1.Hast du gerne mit einem Partner an einem Computer zusammengearbeitet oder h¨attest du lieber alleine gearbeitet? 2.Habt ihr am Computer alles zusammen gemacht oder die Aufgaben eher aufgeteilt? 3.Hast du Mitsch ¨ulerinnen und Mitsch ¨ulern an anderen Rechnern auch manchmal geholfen? Was zum Beispiel? 4.Haben dir andere auch geholfen? Was zum Beispiel? 5.Hast du bei Problemen eher die Lehrerin oder eher deine Mitsch ¨ulerinnen und Mitsch ¨uler zu Hilfe gerufen? 6.Bist du w ¨ahrend des Unterrichts auch zu den Rechnern anderer Mitsch ¨ulerinnen und Mitsch ¨uler gegangen? Was hast du dort gemacht oder beobachtet? V) Im Computerunterricht hast du ganz viele Arbeitsbl ¨atter bekommen. Hier siehst du noch einmal die Ordner der einzelnen F ¨acher und des Ritterprojekts mit den verschiedenen Arbeitsbl ¨attern. 1.Hast du die Arbeitsbl ¨atter gerne gelesen oder eher nicht? a)Falls ja : Waren die Texte und Fragen auf den Arbeitsbl ¨attern zu schwer? i.Falls ja : Was war zum Beispiel zu schwer? b)Falls nein : Warum hast du die Arbeitsbl ¨atter zum Beispiel nicht gerne gelesen? 2.Wie hast du dir helfen lassen, wenn du die Aufgaben auf den Arbeitsbl ¨attern nicht gleich verstanden hast? VI) Wir haben das ganze Schuljahr mit Logo gearbeitet. Zun ¨achst haben wir eine deutsche (MSW Logo) und dann eine englische Version (Imagine Logo) verwendet. 1.Gab es insgesamt etwas, was dich bei der Arbeit mit Logo gest ¨ort hat? 2.Du hast ja auch schon mit anderen Programmen mit dem Computer gearbeitet. Mit welchen anderen Programmen hast du schon gearbeitet? 3.Vergleiche nun deine Arbeit mit Logo mit der Arbeit mit den anderen Programmen. Was war an der Arbeit mit Logo Besonders f ¨ur dich? 4.Kannst du den Unterschied zwischen MSW Logo und Imagine Logo beschreiben? 5.Was hat dir an Imagine Logo besonders gut gefallen? VII) Vor den Osterferien haben wir mit dem Ritterprojekt angefangen und etwa 5 Wochen daran gearbeitet. Hier kannst du dir am Rechner noch einmal deine Arbeit anschauen. 1.Was war w ¨ahrend des Projektunterrichts anders als zuvor im Computerunterricht? 2.Was hat dir besonders gefallen? 3.Was fandest du nicht gut? 4.H¨attest du gerne mehr Zeit f ¨ur dein Ritterprojekt gehabt? 5.Was h ¨attest du gerne noch zus ¨atzlich eingebaut? 6.Warum hast du im Ritterprojekt beim Gedicht oder beim Zeichnen des Grundrisses 237Anhang F Interviewleitfaden Sch ¨ulerinnen und Sch ¨uler der Ritterburg nicht mehr ausprobiert? VIII) Jetzt interessiert mich noch, was du im Computerunterricht gelernt hast. 1.Was hast du im Computerunterricht ¨uber den Computer und seine Bedienung gelernt? Erz ¨ahl mir ein paar Beispiele. 2.Hast du im Computerunterricht auch etwas ¨uber Mathematik, Deutsch, Englisch oder Musik gelernt? Was zum Beispiel? 3.Von den Dingen, die du im Computerunterricht gelernt hast, was fandest du besonders wichtig? 4.H¨attest du dich im Computerunterricht mehr angestrengt, wenn es eine Note im Zeugnis gegeben h ¨atte? IX) Ein ganzes Schuljahr hat der Computerunterricht nun schon stattgefunden. 1.Bist du froh, dass der Computerunterricht vorbei ist oder nicht? a)Kannst du mir das erkl ¨aren? 2.Stell dir vor, ich mache im n ¨achsten Schuljahr in deiner Klasse den Computerunterricht so wie in diesem Schuljahr weiter. F ¨andest du das gut? a)Was sollte dann anders sein? 3.Hast du deinen Eltern ¨uber deine Arbeiten im Computerunterricht erz ¨ahlt? a)Was zum Beispiel? 4.Hast du deinen Freundinnen oder Freunden ¨uber deine Arbeiten im Computerunterricht erz ¨ahlt? a)Was zum Beispiel? X) Jetzt habe ich dich ganz viele Dinge gefragt. 1.M¨ochtest du mir noch etwas zum Computerunterricht sagen, was dir ganz wichtig ist? 238Anhang G Informatische Grundkonzepte – Tests im laufenden Schuljahr Test 1: Funktionen 239Anhang G Informatische Grundkonzepte – Tests im laufenden Schuljahr 240Anhang G Informatische Grundkonzepte – Tests im laufenden Schuljahr 241Anhang G Informatische Grundkonzepte – Tests im laufenden Schuljahr 242Anhang G Informatische Grundkonzepte – Tests im laufenden Schuljahr Test 2: Syntaxdiagramme ,Funktionen und Programmablaufpl¨ane 243Anhang G Informatische Grundkonzepte – Tests im laufenden Schuljahr 244Anhang G Informatische Grundkonzepte – Tests im laufenden Schuljahr 245Anhang G Informatische Grundkonzepte – Tests im laufenden Schuljahr 246Anhang G Informatische Grundkonzepte – Tests im laufenden Schuljahr 247Anhang G Informatische Grundkonzepte – Tests im laufenden Schuljahr 248Anhang H Sch ¨ulerbeispiele Programmablaufplan zur Steigerung von Adjektiven – Chaotische Anordnung von Entscheidungen und Handlungen 249Anhang H Sch ¨ulerbeispiele Programmablaufplan zur Steigerung von Adjektiven – Strukturierte Anordnung von Entscheidungen und Handlungen 250Abbildungsverzeichnis 2.1 Entwicklung der Empfehlungen zur informatischen Bildung . . . . . . . . 6 2.2 Bildungsstandards f ¨ur Informationstechnische Grundbildung an Realschulen in Baden-W ¨urttemberg: Kompetenzen und Inhalte . . . . . . . . . . 13 2.3 Fundamentale Ideen der Informatik . . . . . . . . . . . . . . . . . . . . . 15 2.4 Informatik-Turm . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16 2.5 Informatische Grundkonzepte als begriﬄiche und kognitive Grundlage informationstechnischer Kompetenzen und Inhalte . . . . . . . . . . . . . . 27 3.1 Entwicklung des Unterrichtskonzepts . . . . . . . . . . . . . . . . . . . . 30 3.2 Zeichnung des Logo-Igels . . . . . . . . . . . . . . . . . . . . . . . . . . . 39 3.3 Quadrat des Logo-Igels . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39 3.4 Maschinendarstellung der Befehle Quadrat und Rechteck . . . . . . . . . 40 3.5 Maschinendarstellung der Funktion SIN. . . . . . . . . . . . . . . . . . . 40 3.6 Funktionsgeﬂecht zur Ausgabe eines zuf ¨alligen Satzes am Bildschirm . . . 41 3.7 Syntaxdiagramm eines Satzes bestehend aus Subjekt und Pr ¨adikat . . . . 46 3.8 Klassenzimmer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48 3.9 Computerraum . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49 3.10 Benutzeroberﬂ ¨ache von MSW Logo . . . . . . . . . . . . . . . . . . . . . 50 3.11 Benutzeroberﬂ ¨ache des Editors von MSW Logo . . . . . . . . . . . . . . 50 3.12 Objekthierarchie und Kontextmen ¨u in Imagine Logo . . . . . . . . . . . 51 3.13 Registerkarte der Attribute eines Igel-Objekts in Imagine Logo . . . . . . 52 3.14 Prozedurhierarchie in Imagine Logo . . . . . . . . . . . . . . . . . . . . . 52 3.15 Oberﬂ ¨achenobjekte in Imagine Logo . . . . . . . . . . . . . . . . . . . . . 53 3.16 Multimediaobjekte in Imagine Logo . . . . . . . . . . . . . . . . . . . . . 53 3.17 Gesamtkonzept . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 56 4.1 Stadt-Mikrowelt . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65 4.2 Abstraktion des Befehls Rechteck . . . . . . . . . . . . . . . . . . . . . . 66 4.3 Repr ¨asentation von T ¨onen als Zahlen . . . . . . . . . . . . . . . . . . . . 67 4.4 Benutzeroberﬂ ¨ache des englischen Vokabeltrainers . . . . . . . . . . . . . 68 4.5 Befehl mit Parameter . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 69 4.6 Quadratﬁguren . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70 4.7 Metapher Gl¨ucksrad . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70 4.8 Benutzeroberﬂ ¨ache f ¨ur englische Kurzdialoge . . . . . . . . . . . . . . . . 71 4.9 UML-Klassendiagramm – Ebene Figuren . . . . . . . . . . . . . . . . . . 72 251Abbildungsverzeichnis 4.10 Zusammengesetzte Maschinen – Aussages ¨atze . . . . . . . . . . . . . . . 73 4.11 Zusammengesetzte Maschinen – Abstraktion der Namen in Fragen . . . . 74 4.12 Zusammengesetzte Maschinen – Abstraktion der Namen und Eigenschaften in Fragen . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74 4.13 Programmablaufplan – Umwandlung r ¨omischer Zahlen . . . . . . . . . . 76 4.14 Melodieverlauf im F ¨unﬂiniensystem . . . . . . . . . . . . . . . . . . . . . 77 4.15 Melodieverlauf als Balkendiagramm . . . . . . . . . . . . . . . . . . . . . 77 4.16 Zusammengesetzte Maschinen – Englische”Is“-Fragen . . . . . . . . . . . 78 4.17 Programmablaufplan – Bildung des Komparativs . . . . . . . . . . . . . 79 4.18 Fadenbilder . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 80 4.19 Weihnachtskarte . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81 4.20 Stellung der Satzglieder in deutschen S ¨atzen . . . . . . . . . . . . . . . . 82 4.21 Syntaxdiagramm – Aussages ¨atze mit Dativund Akkusativobjekten . . . 82 4.22 Melodie im F ¨unﬂiniensystem . . . . . . . . . . . . . . . . . . . . . . . . . 84 4.23 Maschinen zur Umwandlung von Tonrepr ¨asentationen . . . . . . . . . . . 84 4.24 Syntaxdiagramm – Has-S ¨atze . . . . . . . . . . . . . . . . . . . . . . . . 85 4.25 Funktion Potenz als Maschine . . . . . . . . . . . . . . . . . . . . . . . . 85 4.26 Funktion Potenz als Syntaxdiagramm . . . . . . . . . . . . . . . . . . . . 86 4.27 Syntaxdiagramm – S ¨atze im present progressive . . . . . . . . . . . . . . 86 4.28 Zusammengesetzte Maschinen – S ¨atze im present progressive . . . . . . . 87 4.29 Mindmap zu Potenzen . . . . . . . . . . . . . . . . . . . . . . . . . . . . 88 4.30 Lernspiel Zehnerpotenzen . . . . . . . . . . . . . . . . . . . . . . . . . . 89 4.31 Begriﬀshierarchie . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90 4.32 Bildergeschichte . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90 4.33 Animation einer Figur . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91 4.34 Viertel-Burg . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 94 4.35 Interaktives R ¨atsel zum Stammbaum der Ritterfamilie . . . . . . . . . . 95 4.36 Rhythmus eines Sch ¨ulerpaares . . . . . . . . . . . . . . . . . . . . . . . . 95 4.37 Benutzeroberﬂ ¨ache des Autospiels . . . . . . . . . . . . . . . . . . . . . . 98 4.38 Rekursive Figur – Vorlage und L ¨osung einer Sch ¨ulerin . . . . . . . . . . . 100 4.39 Benutzeroberﬂ ¨ache des Malprogramms eines Sch ¨ulerinnenpaares . . . . . 101 5.1 Untersuchungsplan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 104 5.2 Aufgabe zur Modularisierung . . . . . . . . . . . . . . . . . . . . . . . . 105 6.1 ¨Uberblick Evaluation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 115 6.2 Prozessmodell der induktiven Kategorienbildung . . . . . . . . . . . . . . 117 6.3 H ¨auﬁgkeitsverteilung der Punkte im Vorund Nachtest . . . . . . . . . . 144 6.4 H ¨auﬁgkeitsverteilung der Diﬀerenzen der Punkte des Nachund Vortests 144 6.5 Box-Plots der Diﬀerenzen der Punkte des Nachund Vortests – Geschlecht 145 6.6 H ¨auﬁgkeitsverteilung der Punkte im Vorund Nachtest getrennt nach dem Merkmal Geschlecht . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 146 252Abbildungsverzeichnis 6.7 Box-Plots der Diﬀerenzen der Punkte des Nachund Vortests – F ¨ahigkeiten 148 6.8 H ¨auﬁgkeitsverteilungen der Punkte im Vortest getrennt nach den Merkmalen kognitives Gesamtleistungsniveau undsprachgebundenes Denken .148 6.9 H ¨auﬁgkeitsverteilungen der Punkte im Vortest getrennt nach den Merkmalen zahlengebundenes undformallogisches Denken . . . . . . . . . . . 149 6.10 Zahlenreihe eines Sch ¨ulers . . . . . . . . . . . . . . . . . . . . . . . . . . 151 6.11 Erfolg bei der algorithmischen Formulierung der Zahlenreihe . . . . . . . 151 6.12 Erfolg bei der algorithmischen Formulierung der Buchstabenreihe . . . . 152 6.13 Erfolg bei der Umwandlung der r ¨omischen Zahl MCDXIV in das Dezimalsystem . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 153 6.14 Erfolg bei der Erstellung des Befehls Quadratfigur . . . . . . . . . . . . 154 6.15 Automatisierte Fadenbilder . . . . . . . . . . . . . . . . . . . . . . . . . . 155 6.16 Erfolg bei der Erstellung automatisierter Animationen in der Rittergeschichte . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 156 6.17 Codes der Sch ¨ulerinnen und Sch ¨uler f ¨ur Daten . . . . . . . . . . . . . . . 157 6.18 Codetypen f ¨ur Geburtsdaten . . . . . . . . . . . . . . . . . . . . . . . . . 157 6.19 Abbildungsvorschrift eines Codes . . . . . . . . . . . . . . . . . . . . . . 158 6.20 Erfolg beim Entwurf des Codes f ¨ur Daten . . . . . . . . . . . . . . . . . . 158 6.21 Nomenklatur der Befehle im Autospiel . . . . . . . . . . . . . . . . . . . 160 6.22 Weihnachtskarte, zusammengesetzt aus den Modulen Kerze undDreieck 161 6.23 Zusammengesetzte Maschinen – Englische”Is“-Fragen . . . . . . . . . . . 162 6.24 Erfolg beim Lesen der zusammengesetzten Maschinen englischer”Is“-Fragen 163 6.25 Erfolg bei der iterativen Beschreibung eines Rechtecks . . . . . . . . . . . 164 6.26 Fehlerhafte Darstellungen rekursiver Kreisﬁguren . . . . . . . . . . . . . 165 6.27 Erfolg bei der selbstst ¨andigen Entwicklung einer rekursiven Figur . . . . 165 6.28 Rekursive Figuren der Sch ¨ulerinnen und Sch ¨uler . . . . . . . . . . . . . . 166 6.29 Rekursive Kreuzund Rechtecksﬁguren . . . . . . . . . . . . . . . . . . . 166 6.30 Erfolg bei der Erstellung des Programmablaufplans zur Steigerung von Adjektiven . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 168 6.31 Erfolg bei der Erstellung eines Syntaxdiagramms f ¨ur deutsche S ¨atze unter Vorgabe von Bausteinen . . . . . . . . . . . . . . . . . . . . . . . . . . . 169 6.32 Syntaxdiagramm deutscher S ¨atze . . . . . . . . . . . . . . . . . . . . . . 169 6.33 Erfolg bei der Erstellung eines Syntaxdiagramms f ¨ur deutsche S ¨atze ohne Vorgabe von Bausteinen . . . . . . . . . . . . . . . . . . . . . . . . . . . 170 6.34 Erfolg bei der Erstellung eines Syntaxdiagramms f ¨ur englische S ¨atze ohne Vorgabe von Bausteinen . . . . . . . . . . . . . . . . . . . . . . . . . . . 170 6.35 Erfolg bei der Bildung der Begriﬀshierarchie im Vortest . . . . . . . . . . 172 6.36 Erfolg bei der Bildung der Begriﬀshierarchie im Nachtest . . . . . . . . . 172 6.37 Erfolg bei der Ableitung eines Familienstammbaums . . . . . . . . . . . . 173 6.38 Chaotische Anordnung der Familienmitglieder in einem Stammbaum . . . 173 6.39 Erfolg bei der Darstellung der Grammatik f ¨ur have-S ¨atze mit Hilfe von Syntaxdiagrammen . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 174 253Abbildungsverzeichnis 6.40 Erfolg bei der Darstellung der Grammatik f ¨ur Genitiv-S ¨atze mit Hilfe von Syntaxdiagrammen . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 175 6.41 Erfolg bei der Erstellung der zusammengesetzten Maschinen zu englischen ”Is“-Fragen . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 176 6.42 Ver ¨anderung der Einstellung zur Bedeutung von Wissen ¨uber den Computer (1) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 180 6.43 Ver ¨anderung der Einstellung zur Bedeutung von Wissen ¨uber den Computer (2) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 180 6.44 Ver ¨anderung der Einsch ¨atzung der Anwendungsm ¨oglichkeiten des Computers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 181 6.45 Ver ¨anderung der Einsch ¨atzung der Auswirkungen der Arbeit mit dem Computer auf die Denkf ¨ahigkeiten . . . . . . . . . . . . . . . . . . . . . . 182 6.46 Box-Plots der positiven Gef ¨uhle bei der Benutzung des Computers . . . . 182 6.47 Ver ¨anderung des Interesses , der Neugier und der Entspannung bei der Benutzung des Computers . . . . . . . . . . . . . . . . . . . . . . . . . . 183 6.48 Box-Plots der negativen Gef ¨uhle bei der Benutzung des Computers . . . 183 6.49 Ver ¨anderung des Gef ¨uhls der Zeitverschwendung und der Langeweile bei der Benutzung des Computers . . . . . . . . . . . . . . . . . . . . . . . . 184 6.50 Ver ¨anderung der positiven Selbsteinsch ¨atzung im Umgang mit dem Computer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 185 6.51 Ver ¨anderung der negativen Selbsteinsch ¨atzung im Umgang mit dem Computer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 185 6.52 Ver ¨anderung der Einsch ¨atzung der Eigenschaften des Computers (1) . . . 186 6.53 Ver ¨anderung der Einsch ¨atzung der Eigenschaften des Computers (2) . . . 186 6.54 Ver ¨anderung der Fehlvorstellungen ¨uber Eigenschaften des Computers (1) 187 6.55 Ver ¨anderung der Fehlvorstellungen ¨uber Eigenschaften des Computers (2) 187 6.56 Ver ¨anderung der Einsch ¨atzung der F ¨ahigkeiten des Computers . . . . . . 188 254Tabellenverzeichnis 2.1 Grundkenntnisse ¨uber Computer und Informatik in den Bildungspl ¨anen von 1984 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10 2.2 Lehrpl ¨aneInformationstechnische Grundbildung undInformationstechnische Grundkenntnisse von 1994 . . . . . . . . . . . . . . . . . . . . . . . 10 2.3 Bildungsstandards f ¨ur Informationstechnische Grundbildung von 2004 . . 11 2.4 Zusammenhang der Leitlinien informatischer Bildung und informatischer Kompetenz . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17 2.5 Kompetenzklassen nach Puhlmann . . . . . . . . . . . . . . . . . . . . . 18 2.6 Positionen der Fachdidaktik Informatik . . . . . . . . . . . . . . . . . . . 20 3.1 Programm zur Logo-Fortbildung der Lehrerinnen . . . . . . . . . . . . . 59 3.2 Programm zur Logo-Fortbildung der Eltern . . . . . . . . . . . . . . . . . 60 4.1 Informatische Grundkonzepte eingebettet in Fachinhalte . . . . . . . . . 64 4.2 Informatische Grundkonzepte in der Projektphase . . . . . . . . . . . . . 93 4.3 Informatische Grundkonzepte ohne Fachbezug . . . . . . . . . . . . . . . 97 5.1 Aufgaben zu den informatischen Grundkonzepten (1. Teil) . . . . . . . . 106 5.2 Aufgaben zu den informatischen Grundkonzepten (2. Teil) . . . . . . . . 107 5.3 Aufgaben zu den informatischen Grundkonzepten (3. Teil) . . . . . . . . 107 6.1 Schwierigkeitsgrad des Computerund Fachunterrichts im Vergleich (Sch ¨ulerinnen und Sch ¨uler) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 121 6.2 Computerund Fachunterricht im Vergleich (Sch ¨ulerinnen und Sch ¨uler) . 121 6.3 Frontalphasen, Partnerarbeit am Computer und Theorieunterricht (Lehrerinnen) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 122 6.4 F ¨acher ¨ubergreifender Unterricht (Lehrerinnen) . . . . . . . . . . . . . . . 123 6.5 Verschiedene Bearbeitungsformen der Arbeitsbl ¨atter (Lehrerinnen) . . . . 124 6.6 ¨Anderungsw ¨unsche f ¨ur den Computerunterricht (Sch ¨ulerinnen und Sch ¨uler)125 6.7 Lernerfolge bez ¨uglich der Fachinhalte im Computerunterricht (Sch ¨ulerinnen und Sch ¨uler) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 127 6.8 Lernerfolge bez ¨uglich des Computers und seiner Bedienung (Sch ¨ulerinnen und Sch ¨uler) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 127 6.9 Vorteile durch den Besuch der Computer AG (Lehrerinnen) . . . . . . . . 129 6.10 Mitarbeit im Unterricht (Sch ¨ulerinnen und Sch ¨uler) . . . . . . . . . . . . 131 255Tabellenverzeichnis 6.11 Wichtige Arbeiten im Computerunterricht (Sch ¨ulerinnen und Sch ¨uler) . . 132 6.12 Arbeitsformen am Computer (Sch ¨ulerinnen und Sch ¨uler) . . . . . . . . . 133 6.13 Hilfe bei Schwierigkeiten (Sch ¨ulerinnen und Sch ¨uler) . . . . . . . . . . . . 134 6.14 Vorund Nachteile des Raumwechsels (Lehrerinnen) . . . . . . . . . . . . 135 6.15 Vergleich von Logo und anderen Programmen (Sch ¨ulerinnen und Sch ¨uler) 137 6.16 Vergleich von MSW Logo und Imagine Logo (Sch ¨ulerinnen und Sch ¨uler) . 137 6.17 Einstellungen und Gef ¨uhle w ¨ahrend der Projektarbeit (Lehrerinnen) . . . 139 6.18 Ursache f ¨ur fehlende Experimentierfreudigkeit (Lehrerinnen, Sch ¨ulerinnen und Sch ¨uler) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 141 6.19 Rohdaten der Tests zu den informatischen Grundkonzepten und des KFT 143 6.20 Verteilung der M ¨adchen und Jungen in den untersuchten Gruppen . . . . 147 6.21 Fehlerkategorien bei der Formulierung der Zahlenreihe als Algorithmus . 151 6.22 Ergebnis der Umwandlung r ¨omischer Zahlen in Dezimalzahlen . . . . . . 152 6.23 Fehlende Zwischenschritte bei der Dekodierung von vier W ¨ortern mit Hilfe eines Programmablaufplans . . . . . . . . . . . . . . . . . . . . . . . . . 153 6.24 Fehlerkategorien bei der iterativen Beschreibung des Programmcodes eines Rechtecks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 163 6.25 Fehlerkategorien beim Zeichnen der rekursiven Kreisﬁgur . . . . . . . . . 165 6.26 Beschreibung der rekursiven Kreuzﬁgur . . . . . . . . . . . . . . . . . . . 167 6.27 Zusammenfassung der Auswertung der Unterrichtsmaterialien . . . . . . 179 256Literaturverzeichnis [Abelson 1982] Abelson , Harold: A Beginner’s Guide to Logo. In: BYTE 7(8) (1982), S. 88–112 [Alimisis & al. 2005] Alimisis , Dimitris; Karatrantou , Anthi; Tachos , Nikolaos: Technical school students design and develop robotic gear-based constructions for the transmission of motion. In: Gregorczyk , Grazyna (Hrsg.); Walat , Andrzej (Hrsg.); Kranas , Witold (Hrsg.); Borowiecki , Maciej (Hrsg.): Digital Tools for Lifelong Learning . Warschau: Proceedings of the Tenth European Logo Conference, 2005, S. 76–86 [Altermann-K ¨oster & al. 1990] Altermann-K ¨oster , Marita; Holtappels , Heinz G.; Kanders , Michael; Pfeiffer , Hermann; de Witt , Claudia: Bildung ¨uber Computer? Weinheim und M ¨unchen: Juventa Verlag, 1990 [Ambrosini & al. 1989] Ambrosini , G.;Baraldi , D.;Bertolotti , S.;Benati , G.; Bussoni , E.;Calabrese , E.;Canuti , D.;Cassi , R.;Chiari , S.;Chiavarini , G.; Compiani , A.;cornetti , A.;Corradi , C.;Delsante , V.;Frigeri , V.;Rege , C.; Rizzardi , A.;Rosa , C.;Rossi , A.;Superchi , A.: Logo and teacher training in Parma’s compulsory school. In: Schuyten , G. (Hrsg.); Valcke , M. (Hrsg.): Proceedings of the Second European Logo Conference, Gent , 1989, S. 2–23 [Baumann 1996] Baumann , R¨udeger: Didaktik der Informatik . 2., vollst ¨andig neu bearbeitete Auﬂage. Stuttgart: Klett Verlag, 1996 [Bescherer 2005] Bescherer , Christine: LoDiC – Learning on Demand in Computing. In:Proceedings of the 8th IFIP World Conference on Computers in Education 2005, Cape Town , 2005 [BLK 1987] BLK : Gesamtkonzept f ¨ur die informationstechnische Bildung. In: Materialien zur Bildungsplanung und Forschungsf ¨orderung Bd. 16. Bonn: BLK-Gesch ¨aftsstelle, 1987 [BLK 1995] BLK : Medienerziehung in der Schule. In: Materialien zur Bildungsplanung und Forschungsf ¨orderung Bd. 44. Bonn: BLK-Gesch ¨aftsstelle, 1995 [BMBF 2003] BMBF :IT-Ausstattung der allgemein bildenden und berufsbildenden Schulen in Deutschland . 2003. – URL www.bmbf.de/pub/it-ausstattung_der_ schulen_gesamt_2003.pdf – Zugriﬀsdatum: 03.08.2005 257Literaturverzeichnis [Bortz und D ¨oring 2002] Bortz , J¨urgen; D¨oring , Nicola: Forschungsmethoden und Evaluation f ¨ur Humanund Sozialwissenschaftler . 3. Auﬂage. Berlin u.a.: SpringerVerlag, 2002 [Boytchev 2003] Boytchev , Pavel: 2. Turtle Metamorphoses (From”FD1“ To 3D Animated Characters). In: Proceedings of the 9th European Logo Conference – Be creative ... re-inventing technology on education . Porto, 2003, S. 50–61 [Brinda 2004] Brinda , Torsten: Didaktisches System f ¨ur objektorientiertes Modellieren im Informatikunterricht der Sekundarstufe II , Fachbereich 12 – Elektrotechnik und Informatik der Universit ¨at Siegen, Dissertation, 2004. – URL www.ub.uni-siegen. de/pub/diss/fb12/2004/brinda/brinda.pdf – Zugriﬀsdatum: 03.08.2005 [Chakraborty & al. 1999] Chakraborty , Anit; Graebner , Randy; Stocky , Tom: LOGO – A Project History . 1999. – URL web.mit.edu/6.933/www/LogoFinalPaper. pdf– Zugriﬀsdatum: 03.08.2005 [Clark 1985] Clark , Richard E.: The Importance of Treatment Explication: A Reply to J. Kulik, C-L. Kulik und R. Bangert-Drowns. In: Journal of Educational Computing Research 4(1) (1985), S. 398–393 [Claus und Schwill 2003] Claus , Volker; Schwill , Andreas: Sch¨ulerduden Informatik . 4. aktualisierte Auﬂage. Mannheim u.a.: Dudenverlag, 2003 [Colella & al. 2001] Colella , Vanessa S.; Klopfer , Eric; Resnick , Mitchel: Adventures in Modeling: Exploring Complex, Dynamic Systems with StarLogo . New York: Teachers College Press, 2001 [Deutsches PISA-Konsortium 2001] Deutsches PISA-Konsortium (Hrsg.): PISA 2000. Opladen: Leske und Budrich Verlag, 2001 [Edelmann 2000] Edelmann , Walter: Lernpsychologie . 6. vollst ¨andig ¨uberarbeitete Auﬂage. Weinheim: Psychologie Verlags Union, 2000 [Engbring 2003] Engbring , Dieter: Informatik im Herstellungsund Nutzungskontext – Ein technikbezogener Zugang zur fach ¨ubergreifenden Lehre , Fakult ¨at f¨ur Elektrotechnik, Informatik und Mathematik der Universit ¨at Paderborn, Dissertation, 2003. – URL ubdata.uni-paderborn.de/ediss/17/2004/engbring/disserta.pdf – Zugriﬀsdatum: 03.08.2005 [Espenschied und Mauch 1984] Espenschied , Wolfgang; Mauch , Ulrich: Beispiele zu numerischen Verfahren in der Sekundarstufe I unter Verwendung von Logo . Didaktisches Zentrum P ¨adagogische Hochschule Ludwigsburg, 1984. – Informatik und Datenverarbeitung in der Schule – Materialien und Berichte (2) 258Literaturverzeichnis [Eyferth & al. 1974] Eyferth , Klaus; Fischer , Klaus; Kling , Ulrich; Korte , Wolfgang; Laubsch , Joachim; L¨othe , Herbert; Schmidt , Rainer; Schulte , Herbert; Werkhofer , Konrad: Computer im Unterricht . Stuttgart: Ernst Klett Verlag, 1974 [Farkas 2003] Farkas , K´ aroly: Logo and native language. Intrinsic procedures of some curves. In: Proceedings of the 9th European Logo Conference – Be creative ... reinventing technology on education . Porto, 2003, S. 69–79 [Fatke 2003] Fatke , Reinhard: Jean Piaget. Meine Theorie der geistigen Entwicklung . Weinheim u.a.: Beltz Verlag, 2003 [Frey 2003] Frey , Elke: Informatik in der Jahrgangsstufe 6 – ein Bericht aus der Praxis. In: Hubwieser , Peter (Hrsg.): Informatische Fachkonzepte im Unterricht . Bonn: K ¨ollen Druck + Verlag GmbH, 2003, S. 33. – Gesellschaft f ¨ur Informatik, INFOS 2003 10. GI-Fachtagung Informatik und Schule vom 17.-19. September 2003 in Garching bei M ¨unchen [Friedrich 2003] Friedrich , Steﬀen: Informatik und PISA – vom Wehe zum Wohl der Schulinformatik. In: Hubwieser , Peter (Hrsg.): Informatische Fachkonzepte um Unterricht . Bonn: K ¨ollen Druck + Verlag GmbH, 2003, S. 133–144. – Gesellschaft f¨ur Informatik, INFOS 2003 10. GI-Fachtagung Informatik und Schule vom 17.-19. September 2003 in Garching bei M ¨unchen [GDM 1981] GDM :Empfehlungen zur Einbeziehung informatischer Inhalte in den Mathematikunterricht der Sekundarstufe I . 1981 [GI 1976] GI: Zielsetzungen und Inhalte des Informatikunterrichts. In: Zentralblatt f ¨ur Didaktik der Mathematik 8(1) (1976), S. 53–60 [GI 1986] GI: Rahmenempfehlung f ¨ur die Informatik im Unterricht der Sekundarstufe I. In:Informatik Spektrum 9(2) (1986), S. 141–143 [GI 1993] GI: Empfehlungen f ¨ur das Fach Informatik in der Sekundarstufe II allgemeinbildender Schulen. In: Informatik Spektrum 16(6) (1993), S. 349–356 [GI 1999] GI: Informatische Bildung und Medienerziehung. In: Beilage zu LOG IN 19-6 (1999). – URL www.learn-line.nrw.de/angebote/medienbildung/Foyer/GI/ gi_empfehlung.pdf – Zugriﬀsdatum: 03.08.2005 [GI 2000] GI: Empfehlungen der Gesellschaft f ¨ur Informatik e.V. f ¨ur ein Gesamtkonzept zur informatischen Bildung an allgemein bildenden Schulen. In: Informatik Spektrum 20 (2000), S. 378–382. – URL www.gi-ev.de/informatik/publikationen/ gesamtkonzept_26_9_2000.pdf – Zugriﬀsdatum: 03.08.2005 [Goldenberg 1982] Goldenberg , E. P.: Logo – A Cultural Glossary. In: BYTE 7(8) (1982), S. 210–228 259Literaturverzeichnis [Gudjons 1997] Gudjons , Herbert: Handlungsorientiert lehren und lernen. Sch ¨uleraktivierung – Selbst ¨andigkeit – Projektarbeit . 5. Auﬂage. Bad Heilbrunn/Obb.: Klinkhardt Verlag, 1997 [Gudjons 1999] Gudjons , Herbert: P¨adagogisches Grundwissen . 6. Auﬂage. Bad Heilbrunn/Obb.: Klinkhardt Verlag, 1999 [Harper 1989] Harper , Dennis O.: LOGO: Theory and Practice . Paciﬁc Grove, California: Brooks/Cole Publishing Company, 1989 [Hartmann und Nievergelt 2002] Hartmann , Werner; Nievergelt , J¨urg: Informatik und Bildung zwischen Wandel und Best ¨andigkeit. In: Informatik Spektrum 25(6) (2002), S. 465–476 [Harvey 1982] Harvey , Brian: Why Logo? In: BYTE 7(8) (1982), S. 163–193 [Harvey 1997] Harvey , Brian: Computer Science Logo Style – Symbolic Computing . 2nd edition. Cambridge, Massachusetts: The MIT Press, 1997 [Hauß & al. 1997] Hauß , A.;Neudecker , W.; Taylor , R. J.: English G 2000 B1, Vorschl ¨age zur Leistungsmessung . Berlin: Cornelsen Verlag, 1997 [Heller & al. 2000] Heller , Kurt A.; Gaedike , A.-K.; Weinl ¨ader , H.: KFT 4-13+, Kognitiver F ¨ahigkeits-Test . G¨ottingen: Hogrefe, 2000 [Hense & al. 2001] Hense , Jan; Mandl , Heinz; Gr¨asel , Cornelia: Problemorientiertes Lernen – Warum der Unterricht mit neuen Medien mehr sein muss als Unterrichten mit neuen Medien. In: Computer und Unterricht 44 (2001), S. 6–11 [Hoppe und L ¨othe 1984] Hoppe , Heinz U.; L¨othe , Herbert: Probleml ¨osen und Programmieren mit LOGO . Stuttgart: B. G. Teubner Verlag, 1984 [Huber 1995] Huber , Ludwig: Individualit ¨at zulassen und Kommunikation stiften. In: Die Deutsche Schule H.2 (1995), S. 161–182 [Huber 1998] Huber , Ludwig: F ¨acher ¨ubergreifender Unterricht – auch auf der Sekundarstufe II? In: Duncker , Ludwig (Hrsg.); Popp , Walter (Hrsg.): F¨acher ¨ubergreifender Unterricht in der Sekundarstufe I und II . Bad Heilbrunn/Obb.: Klinkhardt Verlag, 1998, S. 18–33 [Hubwieser 2001] Hubwieser , Peter: Didaktik der Informatik . 1. Auﬂage. Berlin Heidelberg: Springer Verlag, 2001 [Humbert 2001] Humbert , Ludger: Informatiklehre – zeitgem ¨aße Ans ¨atze zur nachhaltigen Qualiﬁkation aller Sch ¨ulerinnen. In: Keil-Slawik , Reinhard (Hrsg.); Magenheim , Johannes (Hrsg.): Informatikunterricht und Medienbildung . Bonn: K ¨ollen 260Literaturverzeichnis Druck + Verlag GmbH, 2001, S. 121–132. – Gesellschaft f ¨ur Informatik, INFOS 2001 9. GI-Fachtagung Informatik und Schule vom 17.-20. September 2001 in Paderborn [Humbert 2003] Humbert , Ludger: Zur wissenschaftlichen Fundierung der Schulinformatik , Fachbereich Elektrotechnik und Informatik der Universit ¨at Siegen, Dissertation, 2003. – URL www.ub.uni-siegen.de/pub/diss/fb12/2003/humbert/humbert. pdf– Zugriﬀsdatum: 03.08.2005 [IFIP Technical Committee on Computer Education 1970] IFIP Technical Committee on Computer Education : Computer education for teachers in secondary schools – an outline guide for teachers. Montvale NJ: AFIPS press, 1970 [IFIP Technical Committee on Computer Education 1971] IFIP Technical Committee on Computer Education : Computer education for teachers in secondary schools – an outline guide. Montvale NJ: AFIPS press, 1971 [IFIP Technical Committee on Computer Education 1972] IFIP Technical Committee on Computer Education : Computer education for teachers in secondary schools – aims and objectives in teacher training. Montvale NJ: AFIPS press, 1972 [Kerres 2001] Kerres , Michael: Multimediale und telemediale Lernumgebungen: Konzeption und Entwicklung . 2. Auﬂage. M ¨unchen Wien: Oldenbourg Verlag, 2001 [Klaudt und Wursthorn 2005] Klaudt , Dieter; Wursthorn , Birgit: Mathematikdidaktik und neue Medien – neue M ¨oglichkeiten und neue Probleme. In: Bescherer , Christine (Hrsg.): Einﬂuss der neuen Medien auf die Fachdidaktiken – Erfahrungen aus dem Projekt Virtualisierung im Bildungsbereich . Baltmannsweiler: Schneider Verlag Hohengehren, 2005, S. 173–191 [Kultusministerium Baden-W ¨urttemberg 1984a] Kultusministerium BadenW¨urttemberg :Bildungsplan f ¨ur das Gymnasium der Normalform . VillingenSchwenningen: Neckar-Verlag, 1984 (Kultus und Unterricht) [Kultusministerium Baden-W ¨urttemberg 1984b] Kultusministerium BadenW¨urttemberg :Bildungsplan f ¨ur die Realschule . Villingen-Schwenningen: NeckarVerlag, 1984 (Kultus und Unterricht) [Kultusministerium Baden-W ¨urttemberg 1994a] Kultusministerium BadenW¨urttemberg :Bildungsplan f ¨ur das Gymnasium . Villingen-Schwenningen: NeckarVerlag, 1994 (Kultus und Unterricht) [Kultusministerium Baden-W ¨urttemberg 1994b] Kultusministerium BadenW¨urttemberg :Bildungsplan f ¨ur die Realschule . Villingen-Schwenningen: NeckarVerlag, 1994 (Kultus und Unterricht) 261Literaturverzeichnis [Kultusministerium Baden-W ¨urttemberg 2004a] Kultusministerium BadenW¨urttemberg :Bildungsplan f ¨ur das allgemein bildende Gymnasium . VillingenSchwenningen: Neckar-Verlag, 2004 (Kultus und Unterricht) [Kultusministerium Baden-W ¨urttemberg 2004b] Kultusministerium BadenW¨urttemberg :Bildungsplan f ¨ur die Realschule . Villingen-Schwenningen: NeckarVerlag, 2004 (Kultus und Unterricht) [Lawler 1982] Lawler , Robert W.: Designing Computer-Based Microworlds. In: BYTE 7(8) (1982), S. 138–160 [L¨othe 2004] L¨othe , Herbert: Responsible and well-devised computer use – standards for computer as working and learning tool in elementary education. In: Learning for 21st century: What really matters? , 2004, S. 41–42. – International workshop of IFIP WG 3.5, 28. June 2. July 2004 in Budapest [L¨othe & al. 1987] L¨othe , Herbert; W¨olpert , Heinrich; Wolpert , Sibylle: Raumigel – Dokumentation einer Arbeitsgemeinschaft in Klasse 9 Realschule . Didaktisches Zentrum P ¨adagogische Hochschule Ludwigsburg, 1987. – Informatik und Datenverarbeitung in der Schule – Materialien und Berichte (14) [Masterson 1985] Masterson , Fred A.: Evaluating Logo: A Case Study in Requirements for Student Programming Languages. In: Computers in the Schools 2(2/3) (1985), S. 179–195 [Mayer 2004] Mayer , Richard E.: Should There Be a Three-Strikes Rule Against Pure Discovery Learning? The Case for Guided Methods of Instruction. In: American Psychologist 59(1) (2004), S. 14–19 [Mayring 2003] Mayring , Philipp: Qualitative Inhaltsanalyse . 8. Auﬂage. Weinheim und Basel: Beltz Verlag, 2003 [Mittermeir 2003] Mittermeir , Roland T.: Wof ¨ur lehren wir Informatik! In: LOG IN 122/123 (2003), S. 43–45 [MNU 1985a] MNU : Empfehlungen und ¨Uberlegungen zur Gestaltung von Lehrpl ¨anen f¨ur den Computer-Einsatz im Unterricht der allgemeinbildenden Schulen. In: Der mathematische und naturwissenschaftliche Unterricht Bd. 38(4). Bonn: Ferd. D ¨ummlers Verlag, 1985 [MNU 1985b] MNU : Empfehlungen zur Gestaltung von Lehrpl ¨anen f ¨ur die informationstechnische Bildung in der Sekundarstufe I bzw. II und f ¨ur den Computer-Einsatz im Mathematikunterricht der Sekundarstufe II. In: Der mathematische und naturwissenschaftliche Unterricht Bd. 39(2). Bonn: Ferd. D ¨ummlers Verlag, 1985 262Literaturverzeichnis [Modrow 2003] Modrow , Eckart: Pragmatischer Konstruktivismus und fundamentale Ideen als Leitlinien der Curriculumentwicklung am Beispiel der theoretischen und technischen Informatik , Mathematisch-Naturwissenschaftlich-Technische Fakult ¨at der Martin-Luther-Universit ¨at Halle-Wittenberg, Dissertation, 2003. – URL sundoc.bibliothek.uni-halle.de/diss-online/03/03H066/t1.pdf – Zugriﬀsdatum: 03.08.2005 [Moegling 1998] Moegling , Klaus: F ¨acher ¨ubergreifender Unterricht. In: Moegling , Klaus (Hrsg.): F¨acher ¨ubergreifender Unterricht – Wege ganzheitlichen Lernens in der Schule . Bad Heilbrunn/Obb.: Klinkhardt Verlag, 1998. – URL www.sowi-online. de/reader/integration/09beitrag.htm – Zugriﬀsdatum: 03.08.2005 [Nievergelt 1995] Nievergelt , J¨urg: Welchen Wert haben theoretische Grundlagen f¨ur die Berufspraxis? Gedanken zum Fundament des Informatikturms. In: Informatik Spektrum 18(6) (1995), S. 342–344 [Papert 1982] Papert , Seymour: Mindstorms – Kinder, Computer und Neues Lernen . Basel: Birkh ¨auser Verlag, 1982 [Papert 1998] Papert , Seymour: Die vernetzte Familie . Stuttgart: Kreuz Verlag, 1998 [Papert 1999] Papert , Seymour: What is Logo? Who Needs It? In: Logo Philosophy and Implementation . Logo Computer Systems Inc., 1999, S. V–XVI. – URL www. microworlds.com/company/philosophy.pdf – Zugriﬀsdatum: 03.08.2005 [Puhlmann 2003] Puhlmann , Hermann: Informatische Literalit ¨at nach dem PISAMuster. In: Hubwieser , Peter (Hrsg.): Informatische Fachkonzepte im Unterricht . Bonn: K ¨ollen Druck + Verlag GmbH, 2003, S. 145–154. – Gesellschaft f ¨ur Informatik, INFOS 2003 10. GI-Fachtagung Informatik und Schule vom 17.-19. September 2003 in Garching bei M ¨unchen [Quehl 1985] Quehl , Werner: Logo in der Sekundarstufe I – Kursunterlagen . Didaktisches Zentrum P ¨adagogische Hochschule Ludwigsburg, 1985. – Informatik und Datenverarbeitung in der Schule – Materialien und Berichte (4) [Reichert 2003] Reichert , Raimond: Theory of Computation as a Vehicle for Teaching Fundamental Concepts of Computer Science , ETH Z ¨urich, Dissertation, 2003. – URL e-collection.ethbib.ethz.ch/ecol-pool/diss/abstracts/p15035.pdf – Zugriﬀsdatum: 03.08.2005 [Reichert & al. 2004] Reichert , Raimond; Nievergelt , J¨urg;Hartmann , Werner: Programmieren mit Kara. Ein spielender Zugang zur Informatik . Berlin Heidelberg: Springer Verlag, 2004 263Literaturverzeichnis [Resnick 1996] Resnick , Mitchel: New Paradigms for Computing, New Paradigms for Thinking. In: Kafai , Yasmin (Hrsg.); Resnick , Mitchel (Hrsg.): Constructionism in Practice. Designing, Thinking, and Learning in a Digital World . Mahwah, New Jersey: Lawrence Erlbaum Associates, 1996, S. 255–267 [Resnick 2001] Resnick , Mitchel: Turtles, Termites, and Traﬃc Jams. Explorations in Massively Parallel Microworlds . MIT Press, 2001 [Schnurer & al. 2003] Schnurer , Katharina; Stark , Robin; Mandl , Heinz: Auf dem Weg in eine neue Lehr-Lern-Kultur. Gestaltung problemorientierter Lernumgebungen. In:Erziehungswissenschaft und Beruf 2 (2003), S. 147–160 [Schrage 1994] Schrage , Michael: Beware the Computer Technocrats. Hardware Won’t Educate Our Kids. In: Educational Media and Technology Yearbook . Englewood, 1994 (20), S. 64–65 [Schubert und Schwill 2004] Schubert , Sigrid; Schwill , Andreas: Didaktik der Informatik . Heidelberg u.a.: Spektrum Akademischer Verlag, 2004 [Schulmeister 1996] Schulmeister , Rolf: Grundlagen hypermedialer Lernsysteme. Theorie – Didaktik – Design . Bonn u.a.: Addison-Wesley, 1996 [Schulte 2003] Schulte , Carsten: Lehr-Lernprozesse im Informatik-Anfangsunterricht – Theoriegeleitete Entwicklung und Evaluation eines Unterrichtskonzepts zur Objektorientierung in der Sekundarstufe II , Fakult ¨at f¨ur Elektrotechnik, Informatik und Mathematik der Universit ¨at Paderborn, Dissertation, 2003. – URL www. informatica-didactica.de/Examensarbeiten/Schulte2003.pdf – Zugriﬀsdatum: 03.08.2005 [Schwill 2001] Schwill , Andreas: Ab wann kann man mit Kindern Informatik machen? – Eine Studie ¨uber informatische F ¨ahigkeiten von Kindern. In: Keil-Slawik , Reinhard (Hrsg.); Magenheim , Johannes (Hrsg.): Informatikunterricht und Medienbildung . Bonn: K ¨ollen Druck + Verlag GmbH, 2001, S. 13–30. – Gesellschaft f ¨ur Informatik, INFOS 2001 9. GI-Fachtagung Informatik und Schule vom 17.-20. September 2001 in Paderborn [Shimabukuro 1988] Shimabukuro , Gini: Thinking in Logo – A Sourcebook for Teachers of Primary Students . Addison-Wesley, 1988 [Sipitakiat und Cavallo 2003] Sipitakiat , Arnan; Cavallo , David P.: Digital Technology for Conviviality: Making the Most of Learners’ Energy and Imagination. In: Proceedings of the 9th European Logo Conference – Be creative ... re-inventing technology on education . Porto, 2003, S. 264–273 264Literaturverzeichnis [Sperber 2002] Sperber , Michael: Programmieren f ¨ur alle, Projekt”DeinPRogramm“ . 2002. – URL www.deinprogramm.de/overview/overview.html – Zugriﬀsdatum: 03.08.2005 [Stritzky 1995] Stritzky , Regine V.: Informationstechnische Grundbildung in der Schule: eine empirische Untersuchung zu Voraussetzungen und Wirkungen eines neuen Lernangebots f ¨ur die Sekundarstufe I . M¨unster u.a.: Waxmann Verlag, 1995 [Valente 1997] Valente , Jos´ e A.: Contextualizing continuous education in logo via internet. In: Turcsanyi-Szabo , M. (Hrsg.): Learning and Exploring with Logo . Budapest: Proceedings of the Sixth European Logo Conference, 1997, S. 70–79. – URL eurologo.web.elte.hu/lectures/valente.htm – Zugriﬀsdatum: 03.08.2005 [Watt und Watt 1986] Watt , Molly; Watt , Daniel: Teaching With Logo – Building Blocks for Learning . Addison-Wesley Verlag, 1986 [Weber 1988] Weber , Joachim: Graﬁkwerkzeuge – Implementation und Einsatz in Klasse 8 Realschule . Didaktisches Zentrum P ¨adagogische Hochschule Ludwigsburg, 1988. – Informatik und Datenverarbeitung in der Schule – Materialien und Berichte (16) [Wedekind & al. 2004a] Wedekind , Hartmut; Ortner , Erich; Inhetveen , R¨udiger: Informatik als Grundbildung. In: Informatik Spektrum 27(2) (2004), S. 172–180 [Wedekind & al. 2004b] Wedekind , Hartmut; Ortner , Erich; Inhetveen , R¨udiger: Informatik als Grundbildung. Teil II: Bildung von Elementars ¨atzen. In: Informatik Spektrum 27(3) (2004), S. 265–272 [Wedekind & al. 2004c] Wedekind , Hartmut; Ortner , Erich; Inhetveen , R¨udiger: Informatik als Grundbildung. Teil III: Gleichheit und Abstraktion. In: Informatik Spektrum 27(4) (2004), S. 337–341 [Wedekind & al. 2004d] Wedekind , Hartmut; Ortner , Erich; Inhetveen , R¨udiger: Informatik als Grundbildung. Teil IV: Objektsprache/Metasprache. In: Informatik Spektrum 27(5) (2004), S. 459–466 [Wedekind & al. 2005] Wedekind , Hartmut; Ortner , Erich; Inhetveen , R¨udiger: Informatik als Grundbildung. Teil VI: Logik und Geltungssicherung. In: Informatik Spektrum 28(1) (2005), S. 48–52 [Wessels 1994] Wessels , Michael G.: Kognitive Psychologie . 3. Auﬂage. New York: Harper & Row (UTB f ¨ur Wissenschaft), 1994 265Literaturverzeichnis [Wursthorn 2005a] Wursthorn , Birgit: Erwerb informatischer Grundkonzepte durch Spielen. In: Engel , J. (Hrsg.); Vogel , R. (Hrsg.); Wessolowski , S. (Hrsg.): Strukturieren – Modellieren – Kommunizieren; Leitbilder mathematischer und informatischer Aktivit ¨aten. Hildesheim, Berlin: Franzbecker Verlag, 2005, S. 313–326 [Wursthorn 2005b] Wursthorn , Birgit: Fundamental concepts of computer science in a Logo-environment. In: Gregorczyk , Grazyna (Hrsg.); Walat , Andrzej (Hrsg.); Kranas , Witold (Hrsg.); Borowiecki , Maciej (Hrsg.): Digital Tools for Lifelong Learning . Warschau: Proceedings of the Tenth European Logo Conference, 2005, S. 219–227 [Wursthorn 2005c] Wursthorn , Birgit: Informatische Grundkonzepte zu Beginn der Sekundarstufe I . 2005. – wird im Tagungsband der Konferenz INFOS 2005 (Dresden) ver¨oﬀentlicht [Z¨ofel 2002] Z¨ofel , Peter: Statistik verstehen . M¨unchen: Addison-Wesley Verlag, 2002 [Ziegenbalg 1985] Ziegenbalg , Jochen: Programmieren lernen mit Logo . M¨unchen u.a.: Carl Hanser Verlag, 1985 266