  Arno Pasternak (Hrsg.)Informatik für alle18. GI-Fachtagung Informatik und Schule16. - 18. September 2019DortmundGesellschaft für Informatik e.V. (GI)Lecture Notes in Informatics (LNI) - ProceedingsSeries of the Gesellschaft für Informatik (GI)Volume P-288ISBN 978-3-88579-682-4ISSN 1617-5468Volume EditorsDr. Arno PasternakTU DortmundOtto-Hahn-Str. 14D-44227 DortmundGermanyArno.Pasternak@tu-dortmund.deSeries Editorial BoardHeinrich C. Mayr, Alpen-Adria-Universität Klagenfurt, Austria (Chairman, mayr@ifit.uni-klu.ac.at)Torsten Brinda, Universität Duisburg-Essen, GermanyDieter Fellner, Technische Universität Darmstadt, GermanyUlrich Flegel, Infineon, GermanyUlrich Frank, Universität Duisburg-Essen, GermanyMichael Goedicke, Universität Duisburg-Essen, GermanyRalf Hofestädt, Universität Bielefeld, GermanyWolfgang Karl, KIT Karlsruhe, GermanyMichael Koch, Universität der Bundeswehr München, GermanyThomas Roth-Berghofer, University of West London, Great BritainPeter Sanders, Karlsruher Institut für Technologie (KIT), GermanyAndreas Thor, HFT Leipzig, GermanyIngo Timm, Universität Trier, GermanyKarin Vosseberg, Hochschule Bremerhaven, GermanyMaria Wimmer, Universität Koblenz-Landau, GermanyDissertationsSteffen Hölldobler, Technische Universität Dresden, GermanyThematicsAndreas Oberweis, Karlsruher Institut für Technologie (KIT), Germany Gesellschaft für Informatik, Bonn 2019printed by Köllen Druck+Verlag GmbH, Bonn This book is licensed under a Creative Commons BY-SA 4.0 licence.cbaArno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1VorwortSeit inzwischen über 50 Jahren gibt es Informatik-Angebote in den Schulen. Aus den erstenArbeitsgemeinschaften und Projekten erwuchs in den 70-Jahren das Schulfach Informatik.Mit der Reform der gymnasialen Oberstufe im Jahre 1972 wurde es in den Rang eines‚normalen’ Schulfaches gehoben, das von den Schülerinnen und Schülern in der gymnasialenOberstufe gewählt werden konnte[KM72].Folglich entwickelte sich die didaktische Forschung in der Schulinformatik, Schulbücherwurden erstellt, Lehrer ausgebildet und weiterqualiﬁziert. Zusätzlich entstanden in derSekundarstufe I Lehrangebote von Arbeitsgemeinschaften bis hin zu Wahlpﬂichtangeboten.Eigentlich stellte sich nicht die Frage, ob Informatik in der Sekundarstufe I Schulfachwerden sollte oder nicht, sondern nur wann und wie. EineGrundbildung Informatikfür alleSchülerinnen und Schüler war ein wichtiges bildungspolitisches Thema [Bo85,fPuTdS86,Ku90,vP86,Bi90].Ausdruck dieser intensiven bildungspolitischen Diskussion um das Schulfach Informatikwar u.A. der Start der KonferenzreiheInformatik und Schulemit der ersten Tagung vom8. bis zum 10. Oktober 1984 in Berlin vor fast genau 35 Jahren. Dort formuliertePeterHeyderho in einem GrundsatzartikelDidaktik der Schulinformatikden Anspruch auf eineInformatik für alle:„Ein Schüler, der nach 10 Schuljahren in die Berufsausbildung entlassen wird,muß verstehen, wie eine Problemlösung in Einzelschritten erarbeitet wirdund welche intellektuellen Fähigkeiten des Menschen durch Rechner sinnvollunterstützt werden können. In seiner Berufssituation als Betro ener undals Anwender muß er in fachlicher und sozialer Kompetenz zum Einsatztechnischer Medien Stellung beziehen können[He84, S.66]."Er schliesst seine Analyse mit:„Die Herausforderung durch die Informationstechnik führt zu der Notwen-digkeit, Informatikunterricht in allen Bildungsbereichen einzuführen. Dies istmittlerweile eine unumstrittene und allgemein akzeptierte Erkenntnis und mußkonsequenterweise dazu führen, daß Informatikunterricht sehr bald von einemSpezialgebiet und Wahlfach zu einem festen Bestandteil des Pﬂichtfachbereichsin der allgemeinbildenden Schule wird[He84, S.71]."Diese schon 1984 berechtigte Forderung nach einerInformatik für alleist in Deutschlandbis heute nicht realisiert.In der Euphorie der Anfangsjahre der Schulinformatik und der ersten INFOS-Konferenz istvermutlich allen Beteiligten entgangen, dass diese Position nicht von allen im Bildungsbe-reich Tätigen geteilt worden sind. Während fast alle Informatikdidaktiker in der Vorbereitungund Teilnahme der ersten INFOS involviert waren, wurde fast zur gleichen Zeit vom 6.bis zum 8. September 1984 ziemlich genau 500 km entfernt an der Universität Dortmundeine KonferenzNeue Medien und Lernendurchgeführt, an der eine Vielzahl von Perso-nen aus dem Bildungsbereich — allerdings bis auf Ausnahmen keine Informatiklehrer —teilnahmen.Am letzen Tag dieser Veranstaltung wurde in einer Plenumssitzung nach einer Diskussions-runde auf einem Podium mit ca. zehn Personen aus vielen Bereichen des Bildungswesenseine (vorbereitete) Resolution von den Teilnehmern fast einstimmig verabschiedet. Aufdiesem Podium waren von der Gewerkschaft GEW bis zum Verband der Lateinlehrer unter-schiedlichste Positionen vertreten, nur ein Vertreter aus dem Bereich der Informatik(lehrer)fehlte. So konnte auch ein damals recht junger Informatiklehrer von einer Gesamtschuleaus Hagen nicht verhindern, dass gegen seine (o ensichtlich nicht gewünschten und alsStörung der grossen sonst so einmütigen Gemeinsamkeit empfundenen) Einwände folgenderGrundsatz im Rahmen dieser Erklärung festgelegt wurde:„Eine ,informationstechnologische Grundbildung’ sollte am Ende der Sekun-darstufe I in Form von Blockphasen eingerichtet werden. Diese Grundbildungsoll jedoch nicht in Form eines eigenständigen Fachs, sondern projektförmigin Verbindung mit Naturwissenschaften, Sozialwissenschaften und Sprachenunterrichtet werden. [RZ85, S.198]“Allerdings wurde auch festgestellt:„Wenn es zutri t, daß die Neuen Medien Universalmedien sind, die aufInformatik (engl. computer science) als Grundlagenwissenschaft beruhen, dannerhält die Notwendigkeit einer wissenschaftspropadeutischen Grundbildungfür alle neue unabweisbare Begründung. [RZ85, S.199]“Diese Erkenntnis wurde aber sofort wieder eingeschränkt:„Diese wissenschaftspropädeutische Grundbildung dürfte sich allerdings nichtdarauf beschränken, in die Grundlagen der Informatik einzuführen. [RZ85,S.199]“Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 3Selten hat eine Konferenz die praktische Bildungspolitik beeinﬂusst wie diese. Ein durch-gängiges Fach Informatik in der Sekundarstufe I gibt es in Deutschland landesweit bis heutenicht. Zwangsläuﬁg kommt daher in mehr oder weniger unregelmässigen Abständen dieDiskussion um ein Schulfach Informatik erneut auf. So wird auch derzeit im Rahmen deraktuellen Diskussion um dieDigitalisierung der Schuleerneut das Schulfach Informatikin der Sekundarstufe I von vielen gefordert. Diese Forderungen werden inzwischen durchdieGI Bildungsstandards Informatikfür den Primarbereich [Ar] und die Sekundarstufen Iund II inhaltlich gestützt und beschrieben [Ar08,Ar16].Es ist und tut gut, dass die Teilnehmer auf der18. GI-Fachtagung Informatik und Schulewieder hier in Dortmund die Möglichkeit haben, durch ihre Diskussionen und Beratungenals Grundlage weiterer Forschungen in den Hochschulen sowie Unterrichten in den Schulenals auch Planungen im adminstrativen Bereich die Voraussetzungen dafür zu scha en, dengrandiosen Fehler der Tagung von vor 35 Jahren zu korrigieren.Wünschen wir daher allen Schülerinnen und Schülern der Gegenwart und Zukunft, dass eskeine weiteren 35 Jahre mehr dauert, bisInformatik für alleeine gelebte Selbstverständlichkeit ist.INFOS 2019In diesem Band zur TagungINFOS 2019 — Informatik für allebeﬁnden sich die angenom-menen wissenschaftlichen Beiträge und Praxisberichte sowie die Beschreibungen der aufder Tagung durchgeführten Workshops und präsentierten Poster.Das Programmkomitee hat aus 38 eingereichten wissenschaftlichen Beiträgen 12 ausgewählt.Dies entspricht einer Annahmequote von 32%. Von 33 eingereichten Praxisberichten wurden19 angenommen. Dies entspricht einer Annahmequote von 58%. Damit sind von insgesamt 71Einreichungen 31 Beiträge — also 44% — angenommen worden. Ich danke allen Autorinnenund Autoren für ihre Mitarbeit an der Konferenz und allen beteiligten Gutachterinnen undGutachtern für den sehr konstruktiven Review-Prozess.Ich ho e, dass die Vorträge und Workshops auf der Konferenz für alle eine Bereicherungdarstellen. Es bleibt zu ho en, dass diese Tagung für die Teilnehmer und darüber hinaus vorallem für alle Lehrerinnen und Lehrer einen positiven Einﬂuss auf den Unterricht hat und wirentsprechend dem Konferenzmotto baldInformatik für alleals Normalität feststellen können.Dortmund, im September 2019Arno PasternakLiteraturverzeichnis[Ar]Arbeitskreis ’Bildungsstandards Informatik im Primarbereich’ der GI: Kompetenzen fürinformatische Bildung im Primarbereich. LOGIN-Verlag, Berlin.[Ar08]Arbeitskreis ’Bildungsstandards’ der GI: Grundsätze und Standards für die Informatikin der Schule. LOGIN-Verlag, Berlin, 2008.[Ar16]Arbeitskreis ’Bildungsstandards SII’ der GI: Bildungsstandards Informatik für dieSekundarstufe II. LOGIN-Verlag, Berlin, 2016.[Bi90]Bikos, Konstantinos: Informationstechnologische Grundbildung als Curriculum-Problemder Achtziger Jahre. Europäische Hochschulschriften: Pädagogik. Peter Lang, Frankfurtam Main, 1990.[Bo85]Bosler, Ulrich; Hampe, Wolfgang; Wanke, Ilona; van Weert, Tom J.: GrundbildungInformatik. J.B. Metzlersche Verlagsbuchhandlung, Stuttgart, 1985.[fPuTdS86]für Praxis und Theorie der Schule, Landesinstitut Schleswig-Holstein: Informationstech-nische Grundbildung - Band1. Aulis Verlag Deubner & Co KG, Köln, materialien fürden mathematikunterricht in allgemeinbildenden schulen des landes schleswig-holstein(klassenstufe 8). Auﬂage, 1986.[He84]Heyderho , Peter: Didaktik der Schulinformatik. In (Arlt, Wolfgang, Hrsg.): Informatikals Herausforderung an Schule und Ausbildung. Jgg. 1, R.Oldenbourg Verlag, München,1984.[KM72]KMK (Ständige Konferenz der Kultusminister der Länder der Bundesrepublik Deutsch-land): Vereinbarung zur Gestaltung der gymnasialen Oberstufe in der Sekundarstufe II.1972.[Ku90]Kultusminister, NRW: Vorläuﬁge Richtlinien zur Informations- und Kommunikations-technologischen Grundbildung in der Sekundarstufe I, Jgg. 5051. Ritterbach, Frechen,1990. Schriftenreihe des Kultusministers.[RZ85]Rol , Hans-Günter; Zimmermann, Peter: Neue Medien und Lernen. Beltz Verlag,Weinheim, 1985.[vP86]von Puttkamer, Ewald, Hrsg. Informatik-Grundbildung in Schule und Beruf, GI-Fachtagung, Kaiserslautern, 29. September - 1. Oktoker 1986, Proceedings, Jgg. 129 inInformatik-Fachberichte. Springer, 1986.Tagungsleitung Gesamtleitung:  Arno Pasternak, TU Dortmund Doktorandensymposium:  Martin Weinert, TU Dortmund  Programmkomitee Leitung des Programmkommitees:   Arno Pasternak  (V orsitz) Peer Stechert (stellvertretender V orsitz)   Christian Borowski  Universität Oldenburg Michael Brinkmeier  Universität Osnabrück Katrin Büttner   Goethe-Mittelschule Heidenau Dino Capovilla   Humboldt-Universität zu Berlin Beat Döbeli Honegger  Pädagogische Hochschule Schwyz Ira Diethelm   Carl von Ossietzky Universität Oldenburg Rebecca Doherty   Landrat-Lucas-Gymnasium Leverkusen Dieter Engbring   Universität Bonn Johannes Fischer   TU Dortmund Jens Gallenbacher   TU Darmstadt Kathrin Haselmeier  Universität Wuppertal Werner Hartmann   Pädagogische Hochschule Bern Lutz Hellmig    Universität Rostock Tino Hempel   Richard-Wossidlo-Gymnasium Henry Herper   Universität Magdeburg Sven Hofmann   Universität Leipzig Alexander Hug   Universität Koblenz-Landau Ludger Humbert   Willy-Brandt-Gesamtschule Bergkamen Lennard Kerber   Otto-Nagel-Gymnasium Berlin Maria Knobelsdorf  Universität Wien Martin Lehmann    Pädagogische Hochschule Bern Peter Micheuz   Alpen-Adria-Universität Klagenfurt Andreas Muehling  Universität Kiel Dorothee Müller   Bergische Universität  Simone Opel   Universität Paderborn Arno Pasternak   TU Dortmund Johannes Pieper   Joseph-König-Gymnasium Haltern Wolfgang Pohl   Bundesweite Informatikwettbewerbe Mareen Przybylla   Universität Potsdam Hermann Puhlmann  Leibniz-Gymasium Altdorf Gerhard Röhner   Studienseminar für Gymnasien Darmstadt Ralf Romeike      Freie Universität Berlin Carsten Schulte   Universität Paderborn Andreas Schwill   Universität  Potsdam Peer Stechert   RBZ Technik Kiel Kerstin Strecker   Universität Göttingen Renate Thies   Cusanus Gymnasium Erkelenz Marco Thomas   Westfälische Wilhelms-Universität Münster Michael Weigend   Westfälische Wilhelms-Universität Münster  Organisationsteam Kensuke Akao   TU Dortmund Frank Thorsten Breuer  TU Dortmund Stefan Dissmann   TU Dortmund Johannes Fischer   TU Dortmund Gundel Jankord   TU Dortmund Florian Kurpicz   TU Dortmund Alfred Schenk   TU Dortmund Martin Weinert   TU Dortmund  Joachim Deckers   GI FG NRW (Registrierungssystem) Tobias Brinkjost    TU Dortmund (Webseite)    Lektorat Eberhard Kranert   Fritz-Steinhoff-Gesamtschule Hagen Jörg Kuhlmann   Essen Torben Leopold   Fritz-Steinhoff-Gesamtschule Hagen Uwe Marnowsky   Fritz-Steinhoff-Gesamtschule Hagen Irene Pasternak   Essen   Proceedings-Support Anatolij Fandrich   Carl von Ossietzky Universität Oldenburg Nils Pancratz   Carl von Ossietzky Universität Oldenburg               Sponsor Wir danken der Firma   Google   für die Finanzierung dieses Bandes und die weitere Unterstützung der Konferenz. InhaltsverzeichnisEingeladene VorträgeOliver KaczmarekLernen in der digitalen Welt..................... 21Hans Werner HeymannAllgemeinbildung und Informatik...................Ira DiethelmVon Dagstuhl nach Frankfurt – auf dem Weg zu einem interdisziplinärenModell digitaler Bildung....................... 23Torsten Brinda, Niels Brüggen, Ira Diethelm, Thomas Knaus, SvenKommer, Christine Kopf, Petra Missomelius, Rainer Leschke,Friederike Tilemann, Andreas WeichFrankfurt-Dreieck zur Bildung in der digital vernetzten Welt - Eininterdisziplinäres Modell....................... 25Dino CapovillaInformatische Bildung und inklusive Pädagogik........... 35Wissenschaftliche BeiträgeKevin Baum, Nadine Kirsch, Kerstin Reese, Pascal Schmidt, LukasWachter, Verena WolfInformatikunterricht in der Grundschule? - Erprobung und Auswertungeines Unterrichtsmoduls mit Calliope mini.............. 49Alexander BestBild der Informatik von Grundschullehrpersonen: Ergebnisse einesmehrjährigen Projekts zu informatikbezogenen Vorstellungen.... 59Ira Diethelm, Sebastian GlücksAnalyse von Curricula auf Abdeckung der Kompetenzen zur Bildung in derdigitalen Welt............................. 69Alexander Hacke, Mareen Przybylla, Andreas SchwillBeobachtungen zum inform. Problemlösen im Escape-Adventure-Spiel„Room-X“............................... 79Kathrin HaselmeierInformatik an Grundschulen – Stellschraube Lehrerbildung..... 89Kathrin Haselmeier, Ludger Humbert, Klaus Killich, Dorothee MüllerInteresse an Informatik und Informatikselbstkonzept bei Schülerinnen undSchülern zu Beginn der fünften Jahrgangsstufe des Gymnasiums - Eineempirische Untersuchung....................... 99Niko Hausner, Matthias Wendlandt, Katharina WendlandtInformatikunterricht – Ein Muss zur politischen Mündigkeit..... 109Daniel Losch, Ludger HumbertInformatische Bildung für alle Lehramtsstudierenden – Reformprozesseiner allgemeinbildenden Informatikveranstaltung in der universitärenLehrerbildung............................. 119Tilman Michaeli, Ralf RomeikeDebuggen im Unterricht - Ein systematisches Vorgehen macht den Unterschied 129Kathrin Müller, Carsten Schulte, Johannes MagenheimZur Relevanz eines Prozessbereiches Interaktion und Exploration imKontext informatischer Bildung im Primarbereich.......... 139Ilona Petrenko, Marco ThomasEntwicklung ökologischen Denkens im Informatikunterricht..... 149PraxisberichteMarc Berges, Matthias Ehmann, Martin Hennecke, Ute Heuer,Annabel Lindner, Rainer Gall, André Greubel, NicoleGünzel-Weinkamm, Verena Haller, Julia Kronawitter, Nicolai PöhnerErfahrungsbericht zur Qualiﬁzierungsmaßnahme Informatik alsErweiterungsfach (Lehramt Realschule) in Bayern.......... 161Dieter Engbring„Bildung in der digital vernetzten Welt“ Ohne Informatik nicht denkbar!? 171Katharina Geldreich, Mike Talbot, Peter HubwieserAufgabe ist nicht gleich Aufgabe – Vielfältige Aufgabentypen bewusst inScratch einsetzen........................... 181Lisa Göbel, Lutz HellmigInformatik spannend präsentieren – Ein Einstieg in den StudiengangLehramt Informatik.......................... 191Andrea Gumpert, Pascal ZauggFit für den Lehrplan 21 – Wie Klassenlehrpersonen auf denInformatikunterricht vorbereitet werden (können).......... 201Michael Hielscher, Christian WagenknechtFLACI – Eine Lernumgebung für theoretische Informatik...... 211Tamara Hochthurn, Jens GallenbacherInnovative Gestaltung und Einsatz von Erklärvideos im Informatikunterricht 221Beat Döbeli Honegger, Martin Hermida, Regina SchmidZur Entwicklung des Masterstudiengangs "Medien und Informatik". 231Ludger Humbert, Henry Herper, Alexander Best, Christian Borowski,Rita Freudenberg, Martin Fricke, Kathrin Haselmeier, Henry Herper,Volkmar Hinz, Dorothee Müller, Andreas Schwill, Marco ThomasEmpfehlungen der GI – Kompetenzen für informatische Bildung imPrimarbereich............................. 237Florian Kapp, Carsten SchulteEinsatz von Jupyter Notebooks am Beispiel eines ﬁktiven Kriminalfalls .. 247Andreas Koch, Alexander MittagInformatikunterricht in Baden-Württemberg............. 257Urs MeierTPA-Modell.............................. 265Peter MicheuzMischen possible. Didaktische und unterrichtspraktische überlegungenzum Mischen im Informatikunterricht................. 275Simone Opel, Michael Schlichtig, Carsten Schulte, Rolf Biehler, DanielFrischemeier, Susanne Podworny, Thomas WassongEntwicklung und Reﬂexion einer Unterrichtssequenz zum MaschinellenLernen als Aspekt von Data Science in der Sekundarstufe II..... 285Nils Pancratz, Anatolij Fandrich, Christos Chytas, Mareike Daeglau,Ira DiethelmBlöcke, Blumen, Mikrocontroller und das Internet of Things – Ein Konzeptzum kontextorientierten Einsatz von Parametric Design und PhysicalComputing in Mädchen-Workshops.................. 295Thomas SchmalfeldtEinsatz von Skill Cards und Story Cards für einen kreativitätsförderndenInformatikunterricht auf der Sekundarstufe I............. 305Ann-Katrin Schmidt, Carsten SchulteDas RetiBNE Café - Ein Konzept für Repair Cafés in der informatischenBildung................................ 315Stefan Seegerer, Annabel Lindner, Ralf RomeikeAI Unplugged – Wir ziehen Künstlicher Intelligenz den Stecker... 325Kerstin Strecker, Eckart ModrowEine Unterrichtssequenz zum Einstieg in Konzepte des maschinellen Lernens 335KurzbeiträgeNils Pancratz, Ira DiethelmWas haben Staubsaugerroboter, Spielekonsolen und Smartphonesgemeinsam? Schülervorstellungen von Teil-Ganzes-Beziehungen inInformatiksystemen.......................... 347Marco Thomas, Niklas KlingeZur Beliebtheit des Schulfach Informatik in der Oberstufenordrhein-westfälischer Schulen - Studie zu Einﬂüssen auf die Wahl vonInformatik in der Oberstufe...................... 351Bettina WaldvogelInformatikwissen im Schulalltag sichtbar machen.......... 355PosterChristoph GräßlAlgorithmen im Anfangsunterricht mit RunCode........... 361Claudia Hildebrandt, Matthias MatznerIdentiﬁzierung leistungsstarker Schülerinnen und Schüler in der Informatik 363Peter MicheuzGratulation! Sie haben die Prüfung bestanden............ 365Philipp Straube, Martin Brämer, Hilde KösterFreies Explorieren und Programmieren im Sachunterricht...... 367Juliane Wegner, Mona ArndtAufhören oder weitermachen? Ursachen des Studienabbruchs im FachInformatik............................... 369WorkshopsMike Barkmin, Torsten BrindaInformatiksysteme für den Unterricht aufbereiten.......... 373Peter Brichzin, Petra Kastl, Ralf RomeikeAgile Schule – Weiterentwicklung des Projektunterrichts in der Informatikund darüber hinaus.......................... 374Julian DornInstaHub Datenbanken und Datenschutz mit einem extra für den Unterrichtentwickelten sozialen Netzwerk unterrichten............. 375Julian DornJavaScript als ideale textbasierte Programmiersprache im Unterrichtanhand von ada7 lebensnah und e zient für Mädchen und Jungen. 376Anja Gärtig-Daugs, Alexander Werner, Ute SchmidInformatische Konzepte spielerisch begreifen und anwenden..... 377Laura Hembrock, Patrick Tschorn, Michael BrinkmeierIoT zum Nachbauen.......................... 378Tobias Jördens, Jens GallenbacherQuadrologik – Workshop....................... 379Andrea Langer, Nadine Bergner, Ulrik SchroederMehr als Programmieren lernen - einen Mikrocontroller-Roboter zumLeben erwecken / Zweitägiges Workshopkonzept zur Mädchenförderungmit dem B-O-B-3........................... 380Kris Markussen, Kirsten Alich, Jana Gerdes, Mareike Daeglau, NilsPancratz, Ira DiethelmÜber Lottofeen zu (mehr) Computernerds: Undoing Gender imInformatikunterricht durch eine selbstreﬂektierte Konfrontation mitgeschlechtsspeziﬁschen Stereotypisierungen............. 381Maximilian Marowsky, Paul Ohm, Julian DierkerPair Programming im Klassenraum – Eine Digital Game-based LearningMethode für die Sekundarstufe I................... 382Elisaweta Ossovski, Michael BrinkmeierMaschinelles Lernen Unplugged – Ein Workshop zum MaschinellenLernen in der Oberstufe........................ 383Tobias M. Schi erle, Eike Rösch, Peter SuterWie gelingt eine obligatorische Informatikweiterbildung für Tausende vonLehrpersonen der Volksschule? - ein Erfahrungsbericht mit erlebbarenPraxisteilen.............................. 384Michael Schlichtig, Simone Opel, Carsten Schulte, Rolf Biehler, DanielFrischemeier, Susanne Podworny, Thomas WassongMaschinelles Lernen im Unterricht mit Jupyter Notebook...... 385Pascal Schmidt, Stefan StrobelKünstliche Intelligenz (KI) im Informatikunterricht der Sekundarstufe II .386Eingeladene VorträgecbaEditor (Hrsg.): INFOS 2019,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Lernen in der digitalen WeltOliver Kaczmarek,Sprecher für Bildung und Forschung der SPD-BundestagsfraktionAbstract:Den Wandel unserer Arbeits- und Lebenswelt gerecht zu gestalten, ist die politischeHerausforderung vor der wir bildungspolitisch, aber auch weit darüber hinaus stehen. Digitalisierung,Ökologisierung und Globalisierung greifen ineinander und verändern unsere ganz persönliche Lebens-und Arbeitswelt ebenso wie die Gesellschaft als Ganzes. Gerade die Bildungspolitik ist deswegengefordert zu handeln, da die Vermittlung von adäquaten Kompetenzen und Wissen entscheidenddafür sein werden, dass der Wandel erfolgreich im Sinne der Menschen gestaltet werden kann. Damites gerecht dabei zugeht, sind drei zentrale Themen wichtig. Erstens gilt es die Selbstbestimmungder Menschen im digitalen Zeitalter zu garantieren. Zweitens sollen die Aussichten auf eine guteBeschäftigung gesichert werden und drittens soll von Anfang an eine Kultur des Lernens etabliertwerden, die lebensbegleitendes Lernen fördert.Selbstbestimmung im digitalen Zeitalter bedeutet, dass nicht die Maschinen über das Leben derMenschen bestimmen, sondern die Menschen über die Maschinen bestimmen. Dafür sind neueKompetenzen im Umgang mit digitalen Geräten nötig. Wie gehen Menschen kritisch mit der ständigenVerfügbarkeit von Informationen um und wie können sie den Wert und die Qualität einer Informationunterscheiden? Wie kann es gelingen, dass Menschen sich auch von der digitalen Welt abgrenzenkönnen, damit sie nicht durch permanente Benachrichtigungen unter Stress gesetzt werden? Wie gehtman am besten souverän mit den eigenen persönlichen Daten um?Die Arbeitswelt der Zukunft wird sich stark von der heutigen unterscheiden. Viele Arbeitsabläufewerden automatisch ablaufen und die Tätigkeiten der Menschen werden sich wandeln. Sind heute nochviele Berufe von den Tätigkeitsfeldern Herstellen und Produzieren geprägt, wird in Zukunft der BereichÜberwachen und Kontrollieren im Vordergrund stehen. Gleichzeitig wird standortunabhängigesArbeiten immer leichter möglich werden. Menschen aus unterschiedlichen Teilen der Welt könnenunabhängig von Zeit und Ort miteinander kooperieren. Auf diese gewandelte Arbeitswelt sollen unsereBildungseinrichtungen optimal vorbereiten. Dabei ist ebenso zu beachten, dass Menschen auch unterden neuen Voraussetzungen der digitalen Welt, selbstbestimmt ihr Leben gestalten können, um ihrePersönlichkeit zu entfalten.Eine Kultur des lebensbegleitenden Lernens wird sich nur dann etablieren, wenn sie von Anfang angelebte Praxis ist. Neugier und die Freude am Erwerb von neuen Kompetenzen und neuem Wissen sindschon im frühkindlichen Bereich zu fördern. Der selbstverständliche Umgang mit neuen Informationen,neuer Technik und einem stetig wachsenden Wissen ist eine Kompetenz, die in den Schulen vermitteltwerden soll. Damit wird klar, dass es nicht mehr um den abschließenden Erwerb von Wissen geht,sondern dass fortwährendes Lernen ein integraler Bestandteil des gesamten Lebens ist.cba doi:10.18420/infos2019-01Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 21cbaArno Pasternak (Hrsg.): INFOS2019: Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 11Von Dagstuhl nach FrankfurtIra Diethelm1Abstract:Dieser Hauptvortrag beschreibt die Entwicklung vomDagstuhl-Dreieckund derDagstuhl-Erklärung zur Bildung in der digital vernetzten Welt[Br16] hin zumFrankfurt-Dreieck[Br19],das auf den folgenden Seiten mit dem Originaltext der interdisziplinären Autor*innengemeinschaftbeschrieben ist. Der Hauptvortrag skizziert den Entstehungsprozess und erläutert wesentliche Gründefür die Weiterentwicklung desDagstuhl-Dreiecksund wesentliche Punkte des neuen Modells.Keywords:Bildung in der digital vernetzten Welt, Dagstuhl-Dreieck, Frankfurt-DreieckLiteraturverzeichnis[Br16]Brinda, Torsten; Diethelm, Ira; Gemulla, Rainer; Romeike, Ralf; Schöning, Johannes;Schulte, Carsten: Dagstuhl-Erklärung: Bildung in der digital vernetzten Welt. 2016.http://www.dagstuhl-dreieck.de.[Br19]Brinda, Torsten; Brüggen, Niels; Diethelm, Ira; Knaus, Thomas; Kommer, Sven; Kopf,Christine; Missomelius, Petra; Leschke, Rainer; Tilemann, Friederike; Weich, Andreas:Frankfurt-Dreieck zur Bildung in der digital vernetzten Welt. In (Pasternak, Arno, Hrsg.):Informatik und Schule 2019: Informatik für alle. Köllen Verlag, Bonn, S. 25–33, 2019.1Carl von Ossietzky Universität, Didaktik der Informatik, 26111 Oldenburgira.diethelm@uol.decba doi:10.18420/infos2019-02Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 23cbaArno Pasternak (Hrsg.): INFOS2019: Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 11Frankfurt-Dreieck zur Bildung in der digital vernetzten WeltEin interdisziplinäres ModellTorsten Brinda1, Niels Brüggen2, Ira Diethelm3, Thomas Knaus4, Sven Kommer5, ChristineKopf6, Petra Missomelius7, Rainer Leschke8, Friederike Tilemann9, Andreas Weich10Abstract:DasFrankfurt-Dreieckist eine Erweiterung und Fortschreibung des in derDagstuhl-ErklärungenthaltenenDagstuhl-Dreiecksund richtet sich in Ergänzung dazu nun in erster Linie anForscher*innen und andere Personen, die sich - primär reﬂexiv und theoretisch – mit Bildung imKontext des digitalen Wandels beschäftigen. Das Papier will die aus verschiedenen Disziplinen andie Gruppe der Autorinnen und Autoren herangetragenen konzeptionellen Lücken beispielsweise zurGestaltung von Informatiksystemen oder zur Einordnung und Rolle des Individuums als handelndes undmedial adressiertes Subjekt schließen. Entsprechend gelten die politischen Forderungen derDagstuhl-Erklärung[Br16] weiterhin, werden konzeptionell ergänzt und auf außerschulische Bildungskontexteerweitert.Keywords:Bildung in der digital vernetzten Welt, Dagstuhl-Dreieck, Informatik, Medienwissen-schaften, MedienpädagogikDie Funktion dieses Modells besteht darin, einen überfachlichen Orientierungs- und Re-ﬂexionsrahmen für Bildungsprozesse imdigitalen Wandelbereitzustellen und möglichstalle relevanten Perspektiven daran beteiligter Disziplinen einzubeziehen11. Das gemeinsamentwickelte Modell – im Weiteren bezeichnet alsFrankfurt-Dreieck, benannt nach dem Ortseiner Entstehung in zwei Expert*innen-Workshops 2017 und 2018 in Frankfurt am Main– basiert auf dem in der sogenanntenDagstuhl-ErklärungenthaltenenDagstuhl-Dreieck,das 2016 unter Beteiligung von Akteur*innen aus Informatik, Informatikdidaktik, Medien-pädagogik, Schulpraxis, Wirtschaft und Bildungspolitik in einem mehrtägigen Workshop1Universität Duisburg-Essen, Didaktik der Informatik,torsten.brinda@uni-due.de2JFF-Institut für Medienpädagogik in Forschung und Praxis, Münchenniels.brueggen@j .de3Carl von Ossietzky Universität Oldenburg, Didaktik der Informatik,ira.diethelm@uol.de4PH Ludwigsburg | Frankfurt University of Applied Sciences, FTzM,knaus@ftzm.de5RWTH Aachen, Institut für Erziehungswissenschaft,sven.kommer@rwth-aachen.de6DFF - Deutsches Filminstitut & Filmmuseum, Frankfurt,kopf@d .ﬁlm7Universität Innsbruck, Institut für Medien, Gesellschaft und Kommunikation,petra.missomelius@uibk.ac.at8Universität Siegen, Medienwissenschaft,leschke@medien-peb.uni-siegen.de9PH Zürich, Bildung und Erziehung, Fachteam Medienpädagogik,friederike.tilemann@phzh.ch10HBK Braunschweig, Institut für Medienwissenschaft,an.weich@hbk-bs.de| TU Braunschweig, ProjektgruppeLehre und Medienbildung,a.weich@tu-braunschweig.de11Dieser Text erscheint daher nicht nur hier, sondern auch in anderen Publikationsorganen der beteiligtenFachgesellschaften: merz 5/19 und MedienPaedagogik.com, Medienimpulse 58/19 sowie den Webseiten derGesellschaft für Informatik e.V.cba doi:10.18420/infos2019-03Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 2512 Torsten Brinda, Niels Brüggen, Ira Diethelm, Thomas Knaus, Sven Kommer, Christine Kopf,Petra Missomelius, Rainer Leschke, Friederike Tilemann, Andreas Weichauf Schloss Dagstuhl erarbeitet und von einer breiten Ö entlichkeit – entsprechend seinerIntention – insbesondere von Praktiker*innen und Politiker*innen wahrgenommen wurde.Ziel ist es vielmehr, aus den disziplinären Perspektiven von Informatik, Informatikdidaktik,Medienpädagogik und Medienwissenschaft die Phänomene einer digitalen Welt und diedaraus resultierenden Erfordernisse für Bildungsprozesse zu beschreiben und dadurcheine gemeinsame Reﬂexionsbasis zu entwickeln sowie darauf aufbauend – in künftigenSchritten – die notwendigen Kompetenzen für Partizipation in einer digital geprägten Weltzu deﬁnieren.Eine Herausforderung im Diskussionsprozess der Autor*innengruppe war, dass es zuwesentlichen Kernbegri en bislang kein etabliertes Begri sverständnis gab – schon garkein zwischen den beteiligten Disziplinen abgestimmtes. So wird beispielsweise „digitaleBildung“ häuﬁg als Schlagwort verwendet (mal mit einem auf das Lehren und Lernenmitdigitalen Mitteln eingeschränkten Bildungsverständnis, maleinschließlichinformatischerGrundlagen gedacht usw.). Das Adjektiv „digital“ wird in der ö entlichen Diskussion undBerichterstattung oft als ein Synonym für „neuartig“ oder „modern“ verwendet. Dabeibeschreibt es ursprünglich die Repräsentation von Daten und indirekt auch Information ineiner Weise, die die automatische Verarbeitung mittels Computern ermöglicht, und „Digita-lisierung“ damit die Umwandlung analoger in diskrete Werte, was heute im Wesentlichendurch binäre Signale realisiert wird. So ist Digitalisierung eines der drei Grundprinzipien derInformatik neben Automatisierung und Vernetzung, wird aber oft stellvertretend für diesegenannt. Mit der Digitalisierung wurde die Voraussetzung für eine universelle Kompatibilitätvon Daten und Informationen gescha en und zugleich die Bedingungen für die Integrationbislang getrennter Praktiken, sozialer Strukturen und Technologien, was einen nachhaltigenEinﬂuss auf die tradierten räumlichen und temporären Unterscheidungen sowie soziale Ein-und Ausschließungen hat. Heute wird der Begri  der Digitalisierung in politischen undsozialen Kontexten vor allem zur Beschreibung von aktuellen informatisch und technischinduzierten gesellschaftlichen Transformationsprozessen genutzt.Wir gehen davon aus, dass die Digitalisierung in den heutigen Gesellschaften die Kultur,die Infrastruktur und entsprechend die weitere Technologieentwicklung wesentlich mitprägtund sprechen daher vomdigitalen Wandel. Die Teilhabe an politischen, kulturellen undökonomischen Prozessen innerhalb der Gesellschaft setzt Fähigkeiten im UmgangmitundzurAnalyse, ReﬂexionundGestaltungvondigitalen Artefaktenvoraus. Erforderlich hierfürist die Kenntnis der informatischen Grundlagen sowie der medienwissenschaftlichen underziehungswissenschaftlichen Zugänge und Diskurse.Analog zumDagstuhl-Dreieckwerden im Modell drei Perspektiven ausdi erenziert, dieBildung für und über den digitalen Wandel aufgreifen muss. Diese werden im weiterentwi-ckelten Modell bezeichnet alstechnologisch-mediale Perspektive,gesellschaftlich-kulturellePerspektiveundInteraktionsperspektive. Diesen Perspektiven sind jeweils die ProzesseAnalyse, ReﬂexionundGestaltungzugeordnet, die Lernende mit dem Ziel der Befähigungzur Partizipation an der durch Digitalisierung geprägten Welt und am digitalen Wandeljeweils durchlaufen sollen. Zugleich kann eine umfassende Analyse, Reﬂexion und Gestal-26 Torsten Brinda et al.Frankfurt-Dreieckzur Bildung in der digital vernetzten Welt 13tung des digitalen Wandels nur gelingen, wenn alle drei Perspektiven systematisch und sichwiederholend eingenommen werden.DieMittedes Modells bietet Raum für den jeweiligenBetrachtungsgegenstandder durchDigitalisierung geprägten Welt, also digitale Artefakte wie beispielsweise autonome Fahr-zeuge, soziale Netzwerke, Hate Speech und Multitasking und damit in Zusammenhangstehende Phänomene, der dann aus Sicht der drei zuvor benannten Perspektiven und dendamit verbundenen Prozessen aufgearbeitet werden soll.Auf Basis dieses Modells sollen künftig Konkretisierungen im Hinblick auf Handlungsfelderwie Schule, außerschulische Bildungskontexte wie Kinder- und Jugendbildung, KulturelleBildung und Erwachsenenbildung, Berufsbildung und Hochschule, Lehrerinnen- undLehrerbildung sowie Aus- und Fortbildung von pädagogischen Fachkräften entwickeltwerden. Diese können dann in weiteren Schritten im Hinblick auf Kompetenzmodelle undfachdidaktischen- sowie mediendidaktische Fragen und insbesondere die Weiterentwicklungvon vorhandenen (Unterrichts-) Konzepten und Empfehlungen der Fachgesellschaften[GI08,LK08,Gf13,LK15,GI16,Gf16,DG17,KMT17,Gf16,GI19] usw. ausgearbeitetwerden.Frankfurt-Dreieck zur Bildung in der digital vernetzten Welt 2714 Torsten Brinda, Niels Brüggen, Ira Diethelm, Thomas Knaus, Sven Kommer, Christine Kopf,Petra Missomelius, Rainer Leschke, Friederike Tilemann, Andreas WeichTechnologisch-mediale PerspektiveZiele der Betrachtung aus einertechnologisch-medialen Perspektivesind das Hinterfragenund Reﬂektieren der den Phänomenen und Artefakten der durch Digitalisierung geprägtenWelt zugrundeliegenden Strukturen und deren Funktionsweisen sowie eine Befähigung zur(Mit-) Gestaltung solcher Artefakte und Phänomene. Dazu erfolgt eine Auseinandersetzungmit konzeptionellen Fragen, insbesondere mit informatischen und medialen Funktionsprin-zipien digitaler Systeme, mit den zu deren Erstellung verwendeten informatischen undmedialen Strukturierungs- und Gestaltungsmitteln und -formen, den sich durch sie ergeben-den technischen Analyse- und Verarbeitungsmöglichkeiten sowie den an der „Oberﬂäche“meist nicht sichtbaren kulturellen, politischen oder persönlichen Einschreibungen.In dieser Perspektive werden damit zwei Aspekte verknüpft, die untrennbar miteinanderverbunden sind:1.Unter Anwendung langlebiger Informatik-Konzepte werden ausinformatischer Sichtdie Funktionsweise von digitalen Artefakten, die die digitale vernetzte Welt ausma-chen, sowie damit in Zusammenhang stehenden Phänomenen hinterfragt und bewertet.ZugrundeliegendeFunktionsprinzipienundStrukturen der digitalen Artefaktewerdenanalysiert und aufgedeckt und damit Möglichkeiten zurGestaltung und Erweiterungder Funktion digitaler Systemeunter Berücksichtigung von informatischen Problem-lösestrategien und -methoden einerseits, aber auch zu einem reﬂektierten Umgangmit digitalen Systemen andererseits angelegt. Die Basis hierfür bilden theoretischeund praktische Grundlagen der Informatik insbesondere in den Bereichen Digitali-sierung, Automatisierung und Vernetzung und deren Anwendung auf aktuelle undgesellschaftlich relevante Themen (wie z. B. Big Data oder Künstliche Intelligenz)sowie Aussagen zu den praktischen und theoretischen Grenzen von Berechenbarkeitbzw. Automatisierung. Hinzu kommen Konzepte zur Kommunikation informatischerSysteme untereinander (z. B. Netzwerke, Protokolle, Verschlüsselung), Priorisie-rungen darin (insbes. Netzneutralität) sowie systematische Vorgehensmodelle zurErstellung von digitalen Artefakten und Systemen.2.Durch informatische Modellierung von Ausschnitten der Welt mit entsprechendenMitteln und Werkzeugen sowie geprägt durch kulturelle Einschreibungen und diepersönliche Perspektive von Entwickler*innen (z. B. Auswahl von Trainingsdatenfür KI, normative Algorithmen ohne Legitimierung von Entwicklern), entstehendigitale Artefakte. Diese beeinﬂussen als soziotechnische Informatiksysteme mitcharakteristischen Eigenschaften, Ästhetiken, Formen und Grenzen die menschlicheWahrnehmung und bedürfen daher auch einer Auseinandersetzung ausmedialerSicht. Von den Entwickler*innen und/oder den Auftraggeber*innen wird explizit undmitunter auch interessengeleitet, unreﬂektiert oder aufgrund kultureller Konventionenfestgelegt, was sichtbar oder wahrnehmbar ist, wie auch, was in den Hintergrund tritt.Hierdurch wird die mit solchen Systemen mögliche Interaktion und insbesonderedas Repertoire kultureller Ausdrucks- und Kommunikationsmöglichkeiten bestimmt.28 Torsten Brinda et al.Frankfurt-Dreieckzur Bildung in der digital vernetzten Welt 15Mit diesen charakteristischen Prägungen schreibt sich die Technologie mittels ihrerArtefakte, aber auch deren Geschichte und Genese, in die durch sie ermöglichtenkulturellen und sozialen Formenein: In ihnen sindSozialstrukturenangelegt, in ihnenist festgeschrieben, was in welcher Weise archiviert, was vergessen und ignoriert wirdsowie was historisches Gewicht verliehen bekommt.Darüber hinaus legen verwendete Technologien erforderliche Kompetenzen für ihre Nutzungfest. Umgekehrt kann die Reﬂexion und Kenntnis von solchen Determinationsverhältnissen indie Konstruktion von digitalen Artefakten einﬂießen, was zu einem dynamischen souveränenUmgang mit Technologien befähigen würde. Es ist daher unerlässlich, die Strukturen,Funktionen und Funktionsweisen von digitalen (Medien-) Systemen aus informatischer undmedialer Sichtanalysieren, reﬂektieren und (mit-)gestaltenund diese Sichten aufeinanderbeziehen zu können. Solcherart fundiertes und verknüpftes Informatik- und Medienwissenerklärt technologische und mediale Phänomene mit langlebigen Konzepten und scha tzusammen mit der Entwicklung grundlegender Problemlösestrategien die Basis für diereﬂektierte Teilhabe an einer digital geprägten Welt.Gesellschaftlich-kulturelle PerspektiveDer digitale Wandel prägt die sozialen Kommunikations- und Interaktionsbedingungensowie die politische Organisation von Gesellschaften. Er bildet dabei nicht zuletzt aucheinen kulturellen Möglichkeitsraum, der von Gesellschaften genutzt und gestaltet werdenkann. Dasselbe gilt auch für die ökonomische Reproduktion von Gesellschaften. Es werdenbeispielsweise neue Arbeitsbedingungen, Produktionsmethoden und Austauschbedingungenentwickelt. Dadurch verändern sich die gesellschaftlichen Rollen von Akteur*innen sowiedie Dynamiken gesellschaftlicher Entwicklung. Gesellschaften entwerfen Normen undRegeln für die Verwendung und den Einsatz von Technologien und Techniken, die diekonkrete Bedeutung und den Einﬂuss von digitaler Technik strukturieren. So werden in ge-sellschaftlichen Aushandlungsprozessen die Bedingungen von Privatheit und Ö entlichkeitfestgelegt, es werden Interaktionsmöglichkeiten gescha en oder aber begrenzt und es wirdder Zugang zu technischen Systemen geregelt. Gesellschaften prägen Bildungsinstitutionenund regulieren durch Bildungsangebote für den Erwerb entsprechender Kompetenzen dasVerständnis für und die gesellschaftliche Nutzung von digitalen Technologien und Techniken.Der Grad der gesellschaftlichen Durchdringung mit Technologien und auch deren sozialeRolle wird daher wesentlich vom Bildungssystem bestimmt. Dabei bestimmt der Grad derEnkulturation digitaler Technologien und Techniken auch die Rolle einer digitalen Kultur inder Gesellschaft und deren Verhältnis zu analogen kulturellen Artefakten.Ausgesellschaftlich-kultureller Perspektivewerden deshalb Wechselwirkungen zwischenIndividuen, Gesellschaft und digitalen Systemen vor dem Hintergrund der Medialisierungund des digitalen Wandels analysiert und reﬂektiert. Im Vordergrund stehen die Verände-rungen, denen Individuen und Gesellschaft unterworfen werden, sowie eine Analyse undFrankfurt-Dreieck zur Bildung in der digital vernetzten Welt 2916 Torsten Brinda, Niels Brüggen, Ira Diethelm, Thomas Knaus, Sven Kommer, Christine Kopf,Petra Missomelius, Rainer Leschke, Friederike Tilemann, Andreas WeichBewertung von Chancen und Problemen, die sich durch den digitalen Wandel ergeben.Das betri t beispielsweise sich durch digitalisierungsbezogene Kompetenzen erö nendeMöglichkeiten für wirtschaftliches, ökologisches, nachhaltiges und politisches Handeln unddie damit einhergehende Verantwortung einerseits sowie die sich durch Nutzung digitalerSysteme ergebenden Datenspuren der*des Einzelnen im Netz und die damit verbundenenProﬁlbildungen für kommerzielle oder ideologische Zwecke andererseits. Zudem werdenunter den Bedingungen digitaler Infrastrukturen das Erkennen und die Bewertung medialerEinﬂüsse sowie die aktive Teilhabe an gesellschaftlichen und kulturellen Entwicklungenvoraussetzungsreicher. Sie erfordern Hintergrundwissen und speziﬁsche Kompetenzen, wiebeispielsweise das Beurteilen von Information oder die Entwicklung eigener Standpunkte.Hierbei lassen sich widersprüchliche Tendenzen feststellen: die erhöhten Partizipationsmög-lichkeiten steigern den potentiellen Einﬂuss von Individuen, wohingegen die wachsendeKomplexität einer digital gewandelten/beeinﬂussten Kultur und die Geschlossenheit au-tonomer und/oder selbstlernender Systeme den individuellen und gesellschaftlichen Ein-und Zugri  wiederum erschweren. Dadurch stellt sich die Frage nach einer Mitgestaltungvon „digitaler“ Kultur und ihrer Enkulturation grundlegend neu. Zugleich können in derdigitalen Welt mittels digitaler Technologien (neue) soziale Ungleichheiten produziertbeziehungsweise verfestigt werden, so dass auch Fragen sozialer Gerechtigkeit und sozialenAusgleichs neu reﬂektiert werden müssen.Ein weiterer Aspekt ist die historische und die damit einhergehende politische Entwicklungvon Informations- und Kommunikationstechniken. Dazu muss analysiert werden, welcheNormen und Regeln in mediengestützten sozialen Prozessen wirksam sind, wie und von wemsie ausgestaltet werden und welche Machtstrukturen hier eingeschrieben sind. Konkret sindbeispielsweise Fragen der Netzneutralität in den Blick zu nehmen – auch im Hinblick derEntstehung des Internets und seiner Dynamiken vor dem Hintergrund historischer Prozesse.Dazu gehören auch ökonomische Implikationen digitaler Technologien und Techniken.So müssen Fragen wie die von Nutzung versus Besitz, die des Eigentums an Daten, dievon Persönlichkeitsrechten, die der Mündigkeit der verschiedenen Akteur*innen, die derinformationellen Selbstbestimmung sowie die eines zivilen Ungehorsams gegenüber immerautonomer werdenden technischen Systemen und die der gesellschaftlichen Teilhabe geradeauch aus einer ethischen Perspektive analysiert werden.InteraktionsperspektiveIm Fokus derInteraktionsperspektivestehen die Menschen, zentral sind die Fragen, wiesie vor dem Hintergrund der technologisch-medialen und gesellschaftlich-kulturellenVoraussetzungen welche digitalen Medien und Systemewarumundwozunutzen,inwiefernsie am digitalen Wandel teilhaben und ihn mitgestalten (können) sowiewiesie sich alshandlungsfähige Subjekte konstituieren (vgl. auch Medienaneignung). Dabei sind dieAspekte Nutzung, Handlung und Subjektivierung zentral.30 Torsten Brinda et al.Frankfurt-Dreieckzur Bildung in der digital vernetzten Welt 17UnterNutzungist die funktionale Anwendung von digitalen Medien und Systemen beispiels-weise für rezeptive, gestalterische, kommunikative, problemlösende und organisatorischeZwecke gefasst. Diese Nutzungsoptionen, die von Einzelnen oder Gruppen von Personenwahrgenommen, selektiert und ggf. auch verändert werden, beziehen sich auf digitaleArtefakte und die von ihnen erö neten Möglichkeiten.Im Rahmen vonHandlungenwerden diese Nutzungsoptionen in unterschiedliche sozialePraktiken integriert. Dabei werden kulturell tradierte Interaktions- und Kommunikations-formen sowohl aufgenommen als auch transformiert. Eine bewusste Aneignung dieserNutzungsoptionen setzt stets bestimmte Handlungsmotive wie auch die Reﬂexion und Ana-lyse der technologischen und medialen Funktionsprinzipien und Potentiale sowie rahmendersoziokultureller Praktiken voraus – dies gilt gleichermaßen für den Einsatz von Bildungsme-dien, Lehr- und Lerntechniken. Auf dieser Grundlage lassen sich die Gestaltungspotentialedigitaler Artefakte realisieren. Derartige Handlungsoptionen bilden auch den Horizont fürdie individuelle Kompetenzentwicklung.MitSubjektivierungist schließlich darauf verwiesen, dass im Zusammenwirken vondigitalen Medien und Systemen sowie menschlichem Handeln auch die Identitätsbildungund -entwicklung angelegt, ermöglicht oder auch behindert werden können. Dies betri tmehrere Ebenen: Konkret sind damit erstens Formen der Selbstthematisierung gemeint,die in und über digitale Medien und Systeme ermöglicht und nahegelegt werden. So sindbeispielsweise in Interfaces von sozialen Netzwerken bestimmte Handlungsau orderungeneingeschrieben, wie man sich in und über diese Dienste zeigen und darin agieren soll und sichzugleich damit selbst konstituiert. Aus der Interaktionsperspektive betrachtet, interessiert,welches Menschenbild durch diese Formen möglicher Selbstthematisierung konstituiertwird. Zweitens wird abstrakter auch die Frage gestellt, wie und vor dem Hintergrund welcherkulturellen Einschreibungen Subjekte in den jeweiligen Medien repräsentiert und adressiertsind, beispielsweise in Form von Interessenproﬁlen in Empfehlungs- und Filtersystemenoder auf Ebene von Interfaces und Interaktionsmöglichkeiten. Drittens sind beispielsweiseim Angesicht von Data Analytics und Künstlicher Intelligenz traditionell auf Subjektebezogene Konzepte wie Autonomie und Authentizität auch auf technologisch-medialerEbene in den Blick zu nehmen.Reﬂektiert werden soll aus der Interaktionsperspektive, wie und warum digitale Medi-en und Systeme als Werkzeuge jeweils für konkrete Vorhaben ausgewählt und genutztwerden. Dies erfordert eine Orientierung hinsichtlich der vorhandenen Möglichkeitenund Funktionsumfänge gängiger Werkzeuge in der jeweiligen Anwendungsdomäne sowiederen sichere Handhabung, aber auch die Kenntnis ökonomischer, gesellschaftlicher undpolitischer Interessen, welche Anbietende von digitalen Werkzeugen vertreten. Mit demeigenen Handeln stellt sich so auch immer die Frage, welche anderen Handlungsoptionenindividuell und sozial wünschenswert und realisierbar wären. Gleichzeitig ist aus dieserPerspektive immer auch zu reﬂektieren, welche Subjektpositionen technologisch-medial undkulturell angelegt sind, wie Subjekte sich in diesem Rahmen konstituieren und inwiefernsich Subjektivität angesichts digitaler autonomer Systeme transformiert.Frankfurt-Dreieck zur Bildung in der digital vernetzten Welt 3118 Torsten Brinda, Niels Brüggen, Ira Diethelm, Thomas Knaus, Sven Kommer, Christine Kopf,Petra Missomelius, Rainer Leschke, Friederike Tilemann, Andreas WeichAnschlüsseDie drei Seiten desFrankfurt-Dreiecksbeschreiben jeweils unterschiedliche Perspektivenfür dieAnalyse, ReﬂexionundGestaltungvon Artefakten und Phänomenen einer durchdigitale Medien und Systeme geprägten Welt. Dies schließt jeweils unterschiedlicheZugänge zur Erklärung der digitalen Artefakte und damit verbundener Phänomene ein.Das (theoretisch-konzeptionelle) Modell bietet eine begri iche und strukturelle Grundlage,um an die Diskurse der Disziplinen Informatik, Informatikdidaktik, Medienpädagogikund Medienwissenschaft anschließen zu können, in einen produktiven interdisziplinärenAustausch einzutreten und eigene anschlussfähige Theoriebildung zur Ausdi erenzierungund Konkretisierung voranzutreiben.Für Bildungskonzepte, die digitale Medien und Systeme einschließlich der damit verbun-denen Phänomene und ihrer Grundlagen adressieren und zur Teilhabe an der durch siegeprägten Welt befähigen sollen, ergibt sich aus demFrankfurt-Dreieckdie Maßgabe,dass sowohl die technologischen und medialen Strukturen und Funktionen, als auch diegesellschaftlich-kulturellen Wechselwirkungen sowie die Nutzungs-, Handlung- und Sub-jektivierungsweisen in Interaktionen mit digitalen Medien und Systemen einzubeziehensind. Das übergeordnete Ziel muss dabei sein, digitale Artefakte und mit ihnen verbundenePhänomene im Zusammenspiel dieser drei Perspektiven analysieren, reﬂektieren, gestaltenund damit erklären und beurteilen zu können.Vor dem Hintergrund derartiger Bildungskonzepte gilt es im Austausch mit Bildungspolitikund -praxis konkrete Kompetenzanforderungen weiterzuentwickeln und im Zusammen-wirken informatischer, informatikdidaktischer, medienwissenschaftlicher und medienpäd-agogischer Expertise (fach-)didaktische Szenarien und Lernmaterialien zu entwickeln, dieden Auf- und Ausbau dieser Kompetenzen in Bildungseinrichtungen ermöglichen. DiesesRahmenmodell kann dabei für alle Praxis- und Handlungsfelder in Bildungskontextenund pädagogischer Arbeit adaptiert werden: für die allgemeinbildende Schule, für dieHochschule, die Lehrer*innenbildung wie auch für außerschulische Bildungskontexte,wie die Kinder- und Jugendarbeit und Erwachsenenbildung. Perspektivisch ergibt sich soein umfassender, wissenschaftlich fundierter und interdisziplinär getragener Katalog vonZielstellungen und Maßnahmen für Bildungskonzepte in einer durch digitale Medien undSysteme geprägten Welt.Literaturverzeichnis[Br16]Brinda, Torsten; Diethelm, Ira; Gemulla, Rainer; Romeike, Ralf; Schöning, Johannes; Schulte,Carsten: , Dagstuhl-Erklärung: Bildung in der digital vernetzten Welt. http://www.dagstuhl-dreieck.de, 2016.[DG17]DGfE Sektion Medienpädagogik: Orientierungsrahmen für die Entwicklung von Curriculafür medienpädagogische Studiengänge und Studienanteile. MedienPädagogik: Zeitschriftfür Theorie und Praxis der Medienbildung, Dezember 2017.32 Torsten Brinda et al.Frankfurt-Dreieckzur Bildung in der digital vernetzten Welt 19[Gf13]GfM - Gesellschaft für Medienwissenschaften, Strategiekommission und AG Medienkultur& Bildung: , "Medienkultur und Bildung"Positionspapier der GfM, 2013.[Gf16]GfM Gesellschaft für Medienwissenschaften: , Stellungnahme der Arbeitsgemeinschaft’Medienkultur und Bildung’ der Gesellschaft für Medienwissenschaft (GfM) zum Entwurfder Strategie der Kultusministerkonferenz "Bildung in der digitalen Welt", 2016.[GI08]GI - Gesellschaft für Informatik e.V.: , Grundsätze und Standards für die Informatik in derSchule. http://www.informatikstandards.de, 2008.[GI16]GI – Gesellschaft für Informatik e.V.: , Bildungsstandards Informatik – Sekundarstufe II.http://www.informatikstandards.de, 2016.[GI19]GI – Gesellschaft für Informatik e.V.: , Kompetenzen für informatische Bildung im Primar-bereich. http://www.informatikstandards.de, 2019.[KMT17]Knaus, Thomas; Meister, Dorothee M.; Tulodziecki, Gerhard: Futurelab Medienpädagogik:Qualitätsentwicklung – Professionalisierung – Standards. Thesenpapier zum Forum Kom-munikationskultur 2017 der GMK. MedienPädagogik: Zeitschrift für Theorie und Praxisder Medienbildung, Oktober 2017.[LK08]LKM - Länderkonferenz MedienBildung: , Kompetenzorientiertes Konzept für die schulischeMedienbildung -LKM-Positionspapier Stand 01.12.2008. https://lkm.lernnetz.de, 2008.[LK15]LKM - Länderkonferenz MedienBildung: , Kompetenzorientiertes Konzept für die schulischeMedienbildung – LKM-Positionspapier Stand 29.01.2015. https://lkm.lernnetz.de, 2015.Frankfurt-Dreieck zur Bildung in der digital vernetzten Welt 33<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15  Informatische Bildung und inklusive Pädagogik Dino Capovilla1 Abstract: Informatiksysteme haben unser Zusammenleben in vielerlei Hinsicht verändert und von diesen Veränderungen haben auch behinderte Menschen maßgeblich profitiert. In der informatischen Bildung fand diese zentrale Bedeutung von Informatiksystemen als Mittel zur Förderung von Teilhabe bisher jedoch wenig Beachtung, was sich mit Blick auf die Neufassung der ländergemeinsamen inhaltlichen Anforderungen für die Informatik-Lehramtsstudiengänge offenbar ändern soll. Mit der vorliegenden Arbeit sollen einige Ansätze aufgezeigt werden, wie die Didaktik der Informatik im Sinne einer inklusiven Pädagogik für behinderungsbedingte Bedürfnisse anschlussfähiger werden kann. Dabei liegt der Fokus auf der Herstellung einer Vielfalt unterschiedlicher Handlungs- und Ausdrucksmodi und der sensorischen und kognitiven Parallelisierung von Unterrichtsinhalten. Keywords: Informatische Bildung, Inklusive Pädagogik, Sensorische Parallelisierung, Anforderungsniveaus, Leichte Sprache, Assistive Technologien 1 Einleitung Digitalisierung verändert und reorganisiert unser Interaktionsverhalten, unsere gesellschaftliche Selbstbeschreibung und letztlich sämtliche Strukturen unserer schulischen, beruflichen und privaten Lebensbereiche [KM16]. Dieser Wandel wird wesentlich durch rasante technologische Innovationen angestoßen, die geprägt durch Vorstellungen von informatisch hochqualifizierten Menschen verfügbar gemacht werden [GI16a]. Auf der anderen Seite wächst der Kreis der Nutzenden weiter und schließt somit immer mehr Menschen ein, deren Stärken in technikfernen Bereichen liegen oder die gar mit ihrer Technikaversion kokettieren.  Bereits vor 30 Jahren hatten Wilfried und Ute Brauer [BB89] unser heutiges informationsgesellschaftliches Selbstverständnis bemerkenswert treffend prophezeit. Durch die omnipräsente, einfache und unbegrenzte Verfügbarkeit von Informationen werde die Überzeugung reifen, dass eine verständnisschaffende Ausbildung im Umgang mit Informatik-Systemen nicht mehr notwendig sei. In dieser reinen Anwendungsorientierung werde sich die technomorphe Vorstellung von Informatiksystemen hin zu einer anthropomorphen Vorstellung mythologisieren. Der Umgang mit solchen vermenschlichten Informatiksystemen werde in Zukunft weniger rational und viel mehr emotional sein. Diese Entwicklung nahm mit Karl Klammer ihren Anfang und ist mit Siri, Alexa und Cortana längst Wirklichkeit geworden.                                                          1 Institut für Rehabilitationswissenschaften/Humboldt-Universität zu Berlin, Abteilung Pädagogik bei Beeinträchtigungen des Sehens, Unter den Linden 6, 10099 Berlin, dino.capovilla@hu-berlin.de cba doi:10.18420/infos2019-04Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 35 16 Vorname1 Nachname1 und Vorname2 Nachname2  Um Menschen auf die Anforderungen und Herausforderungen unserer Zeit im Rahmen ihrer schulischen Bildung vorzubereiten und ihnen ein möglichst hohes Maß an Selbstbestimmung und Autonomie in der Anwendung von digitalen Systemen zu geben, fordert die KMK [KM16] eine flächendeckende und systematische Vorbereitung. Dies impliziert, dass diese Vorbereitung kein durch Intuition oder Learning-by-doing gesteuerter Prozess der Selbstläufigkeit ist, sondern auf einer nicht zu ignorierenden und durchaus komplexen Fachlichkeit beruht [GI18]. Vor diesem Hintergrund einer informatischen Bildung, die sich an alle Menschen richtet, geht es im vorliegenden Artikel um die Zielgruppe von Menschen mit Behinderungen. Wie zu zeigen sein wird, nimmt die informatische Bildung eine erweiterte Bedeutung bei den Bemühungen um die Realisierung schulischer Inklusion und gesellschaftlicher Teilhabe ein. Dabei sei vorausgeschickt, dass es im inklusiven Kontext keine spezielle Didaktik der Informatik für Menschen mit Behinderungen geben kann. Das sonderpädagogische Anliegen diesbezüglich besteht darin, die allgemeine Didaktik der Informatik anschlussfähig für die besonderen Lernvoraussetzungen von Menschen mit Behinderungen zu gestalten, was im Wesentlichen mit einigen methodischen und wenigen inhaltlichen Erweiterungen verbunden ist. Es gilt also zu überlegen, welche Veränderungen im Regelunterricht sinnvoll und notwendig sind, damit mehr Lernende mit Behinderungen die Dinge lernen können, die auch alle unbehinderten Lernenden lernen.  Bevor nun diese besondere Rolle von Informatiksystemen näher beschrieben wird und anschließend der Versuch unternommen wird, einige inklusive pädagogische Ansätze mit der informatischen Bildung zu verbinden, sollen die Begriffe informatische Bildung und Inklusion in einer für diesen Artikel geeigneten Form bestimmt werden.  Hubwieser [Hu07, S. 43ff.] subsumiert die Unterstützung von Lernprozessen, die Bedienungsschulung und den Informatikunterricht unter das Dach der informatischen Bildung, wobei er hinsichtlich des Informatikunterrichts die Prinzipien, Konzepte und Strategien zur Planung, Konstruktion, Beschreibung und Bewertung abstrakter Informatiksysteme besonders hervorhebt. Ergänzt und konkretisiert werden sollte diese Definition durch medienpädagogische Aspekte, die bei Hubwieser implizit im Zusammenspiel aus Benutzungsschulung und Informatikunterricht verortet sein dürften. Medienbildung soll Kompetenzen in den Bereichen Wahrnehmungs-, Nutzungs- und Konstruktionsprozesse von und mit Medien, sowie der kritischen Verarbeitung und Bewertung von Medien und deren Einflüsse fördern [De18]. Die informatische Bildung soll damit zusammenfassend Lernende zu kompetenten und reflektierten Anwenderinnen und Anwendern von bestehenden Informatiksystemen machen und ihnen durch das Verständnis der Wirkprinzipien dieser Informatiksysteme Möglichkeiten zu deren aktiver Mitgestaltung eröffnen [CA12, S. 4].  Eine allgemein akzeptierte Begriffsbestimmung schulischer Inklusion scheint es weder im wissenschaftlichen noch im gesellschaftlichen Diskurs zu geben. Trotz dieser begrifflichen Unschärfe wurde schulische Inklusion 2012 zum Bildungsziel aller Bundesländer erhoben, was mit der Idee des gemeinsamen Lernens von Kindern und Jugendlichen mit und ohne Behinderungen verbunden wurde [KM12]. Da jedoch 36 Dino Capovilla Der Kurztitel des Beitrags 17  gemeinsames Lernen nicht bereits mit der lediglich gemeinsamen Anwesenheit im selben Raum realisiert wird, wird in der Forschungsliteratur das gemeinsame Lernen mit den beiden Zielen der effektiven Förderung und der sozialen Anerkennung der Lernenden mit sonderpädagogischem Förderbedarf verbunden [Ge15]. 2 Informatiksysteme und die Bildung behinderter Menschen Die UN-Behindertenrechtskonvention beschreibt in diversen Artikeln die Bereitstellung und den Einsatz von Technologien und Medien als wesentlich für die Durchsetzung der Rechte von behinderten Menschen. Dabei geht es u.a. um die Verwirklichung des Rechts auf uneingeschränkte Teilhabe an der Informationsgesellschaft, der mediatisierten Welten und der Kommunikationskultur [Bo14]. Vor diesem Hintergrund sollte die von Diethelm und Brinda [GI18] vorgeschlagene Bestimmung der Rollen von Informatiksystemen im Bildungsprozess ergänzt werden. Informatiksysteme dienen im Bildungsprozess nicht nur als Organisationsmittel, Lehr-Lern-Mittel, Werkzeug und Unterrichtsgegenstand, sondern auch als Mittel zur Förderung von Teilhabe.  In dieser Rolle haben Informatiksysteme die Lebensbedingungen von behinderten Menschen in den letzten Dekaden entscheidend verbessert [Mi15] und in vielen Fällen überhaupt erst die Rahmenbedingungen geschaffen, die gemeinsames Lernen möglich machen [CH13]. Wesentlich dabei sind die Möglichkeiten, die sich durch die technologiegestützte Interaktion zwischen behinderten und unbehinderten Lernenden ergeben haben und die Möglichkeiten, die den Zugang zu Informationen immer weiter in den Bereich der Selbstbestimmung von behinderten Menschen verschieben. Da zahlreiche dieser Technologien und Konzepte inhaltlich zurecht der Informatik zugeordnet werden und vor allem die Bedienung immer enger mit der Anwendung und dem Verständnis von Standard-Soft- und Hardware verbunden ist, muss sich die informatische Bildung gründlich mit ihrer Rolle in der Umsetzung der schulischen und gesellschaftlichen Inklusion auseinandersetzen. Diese besondere Rolle wird in der Neufassung der ländergemeinsamen, inhaltlichen Anforderungen für die Fachwissenschaften und Fachdidaktiken in der Lehrerbildung für Informatik [KM17] spürbar, mit der zahlreiche Bezüge zu inklusionsrelevanten Inhalten hergestellt wurden. In der Verbindung von Informatiksystemen und Inklusion gilt es zwischen dem Ziel und dem Weg zu unterscheiden. Das Ziel beschreibt Caspers [AM11] als die vollständige informationelle Partizipation, die darin besteht, alle Informations- und Kommunikationssysteme so zu gestalten, dass sie für alle Menschen unabhängig von Hardware, Software, Sprache, Kultur, Ort, physischen oder kognitiven Fähigkeiten nutzbar sind. Auf dem Weg zu diesem idealen Ziel müssen zwei grundsätzlich verschiedene Herangehensweisen zur technologiegestützten Förderung von Teilhabe kombiniert werden: Auf der einen Seite müssen die Technologien und das mediale Angebot selbst so verändert werden, dass es für möglichst viele Personen zugänglich ist. Auf der anderen Seite müssen die individuellen Voraussetzungen der einzelnen Person an Informatische Bildung und inklusive Pädagogik 37 18 Vorname1 Nachname1 und Vorname2 Nachname2  die Anforderungen der verfügbaren Technologien und des medialen Angebots angepasst werden, was durch spezielle Technologien, Medien und Bedienungskonzepte gelingt.  Insbesondere die erstgenannte Herangehensweise ist im Kontext der allgemeinen informatischen Bildung relevant. Mithilfe von Technologien und veränderten medialen Angeboten sollen Barrieren im Informationszugang und in der Interaktion abgebaut werden und Produkte sowie ganze Lebensräume für möglichst viele Menschen jeden Alters und unterschiedlicher Fähigkeiten verfügbar gemacht werden [SMM98]. Um ein entsprechendes gesellschaftliches Selbstverständnis zu etablieren und die Grundlagen für die Entwicklung entsprechender Kompetenzen zu legen, erscheint es sinnvoll, alle Lernenden möglichst früh in ihrer Bildungsbiographie mit dieser besonderen Bedeutung und Funktion von Technologien und Medien für unser Zusammenleben zu konfrontieren und zu sensibilisieren. Da das Ideal der universell designten Welt jedoch in absehbarer Zeit praktisch nicht vollständig erreicht werden kann, wird es auch weiterhin zusätzliche assistive Technologien und Medien geben müssen, welche die physischen, sensorischen oder kognitiven Voraussetzungen der einzelnen Person dahingehend stärken, dass sie in unterschiedlichen Umgebungen mehr Unabhängigkeit gewinnen und ihre behinderungsspezifischen Eigenarten in den Hintergrund rücken [SMM98]. Die konkrete Einweisung und Unterstützung im Umgang mit diesen ergänzenden Technologien und Medien stellt jedoch aufgrund des individuellen Charakters und der hohen Spezifität keinen Gegenstand der allgemeinen informatischen Bildung dar und ist in der additiven sonderpädagogischen oder rehabilitativen Förderung zu verorten [Ca15, S. 30]. Insbesondere in den letzten Jahren sind die Strukturen in unserer Welt beachtlich universeller geworden und immer mehr handelsübliche Endgeräte bieten Funktionen an, die individualisierte assistive Hard- und Softwarelösungen überflüssig machen. Konkret bedeutet dies, dass technologiegestützte Zugänglichkeit in Zukunft immer weniger eine Frage der Verfügbarkeit und der ökonomischen Möglichkeit sein wird, sondern viel mehr eine didaktische Herausforderung, die sich immer weiter in den Kernbereich der informatischen Bildung verschieben wird [Ca15, S. 28]. 3 Ansätze für einen inklusiven Informatikunterricht Aus der Perspektive der inklusiven Pädagogik muss die allgemeine Didaktik der Informatik den besonderen Lernvoraussetzungen von behinderten Menschen Rechnung tragen und entsprechend anschlussfähig sein. Diese Anschlussfähigkeit wird im Wesentlichen durch diverse methodische und wenige inhaltliche Erweiterungen realisiert. Die zentrale Fragestellung der inklusiven Didaktik der Informatik besteht also darin, welche Veränderungen im Regelunterricht sinnvoll und notwendig sind, damit mehr Lernende mit Behinderungen die Dinge lernen können, die auch alle unbehinderten Lernenden lernen. Inklusiver Informatikunterricht zeichnet sich daher entsprechend der Forderung der Kultusministerkonferenz [KM17] durch eine systematische Ausrichtung an 38 Dino Capovilla Der Kurztitel des Beitrags 19  einer heterogenen Lerngruppe aus, die weit über die bereits heute übliche Binnendifferenzierung hinausgeht.  Bei der Unterrichtsplanung für homogene Lerngruppen orientiert sich die Lehrkraft in der Regel an ihrer fiktiven Vorstellung der oder des durchschnittlichen Lernenden und es obliegt den realen Lernenden, sich den hierdurch geschaffenen Bedingungen anzupassen. Genau dieses Vorgehen wird einer heterogenen Lerngruppe nicht gerecht. Im Unterricht für heterogene Lerngruppen wird versucht, anhand der individuellen Lernvoraussetzungen der einzelnen Lernenden zusätzliche, inhaltsgleiche Lernangebote zu schaffen, die zum einen den Unterricht für genau diese einzelnen Lernenden öffnen und zum anderen auch für weitere Lernende Vorteile mit sich bringen können. Der Unterricht orientiert sich damit an den Gemeinsamkeiten mehrerer „realer“ Lernender und nicht an den Eigenarten einer oder eines fiktiven vorweggenommenen Einzelnen. Eine solche systematische Ausrichtung lässt sich naturgemäß auf unterschiedlichen Wegen erreichen, die abhängig von der tatsächlichen Lerngruppe auch unterschiedlich gut geeignet sind.  Einige dieser Wege, die inzwischen auch in Europa an Bedeutung gewinnen, orientieren sich an den sieben Prinzipien des Universal Designs [SMM98], welche auf unterschiedliche Art und Weise auf den Bildungskontext übertragen werden [DV15]. Diese lassen sich zu drei Gruppen klassifizieren [Bu08]. Bei Ansätzen wie dem Universal Design in Education werden die sieben Prinzipen des Universal Designs direkt übertragen. Bei Ansätzen wie dem Universal Design for Instruction werden die sieben Prinzipen verändert und erweitert. Bei Ansätzen wie dem Universal Design for Learning werden schließlich gänzlich neue Prinzipien geschaffen.  Im Kontext der informatischen Bildung erscheint vor allem der Ansatz des Universal Designs for Learning [RM02] als geeignet, da die parallelen Lernangebote vor allem mithilfe von digitalen Werkzeugen und Artefakten bereitgestellt und realisiert werden. Informatiksysteme entfalten ihre Wirkung im Lernprozess damit nicht nur in der Rolle als Mittel zur Förderung von Teilhabe, sondern auch in den von Diethelm und Brinda [GI18] genannten Rollen als Organisationsmittel, Lehr-Lern-Mittel und Werkzeug. Das Universal Design for Learning fußt auf den vier Handlungsfeldern Lernziele, Methoden, Bewertung und Material, die mit den drei Strategien Vielfalt der Handlungs- und Ausdrucksmodi, der Motivations- und Intentionsmodi und der Repräsentationsmodi universeller gestaltet werden sollen [RM02]. Im Folgenden sollen die beiden Strategien Vielfalt der Handlungs- und Ausdrucksmodi und Vielfalt der Repräsentationsmodi beispielhaft mit der Unterrichtsplanung einer Einheit zur Datenstruktur „Baum“ verbunden werden, um die praktische Anwendung zu verdeutlichen.  In Bezug auf verschiedene Ausdrucks- und Handlungsmodi werden die inhaltlichen Lern- und Leistungsziele festgeschrieben, während die Wege und Mittel zu diesen Zielen bewusst freigestellt werden. Zum einen geht es also darum, dass sich die Lernenden zwischen unterschiedlichen Handlungsmodi entscheiden und zwischen diesen auch im Verlauf des Lernprozesses wechseln können. Zum anderen bleibt auch der Ausdrucksmodus des Produkts am Ende des Lernprozesses weitgehend unbestimmt. Die Informatische Bildung und inklusive Pädagogik 39 20 Vorname1 Nachname1 und Vorname2 Nachname2  Vergleichbarkeit und Bewertung der einzelnen Leistungen wird nicht anhand der Abweichungen der realen Produkte von einem fiktiven Normal- und Idealprodukt hergestellt, sondern über die mit dem Produkt abgebildete, zugrundeliegende Kompetenzvermutung.  In der Praxis muss diese Freiheit zwecks Realisierbarkeit eingegrenzt werden, da erfahrungsgemäß zahlreiche Lernende diese Freiheiten nicht ohne Führung ausschöpfen könnten oder wollen. Das Konzept „Baum“ könnte die Lehrkraft beispielsweise mit den beiden Ausdrucksmodi Quellcode und verbal-visuelle Darstellung planen. Innerhalb der Ausdrucksmodi könnte sie die Handlungsmodi über verschiedene Anforderungsniveaus realisieren. Einen sinnvollen Ansatz für die Realisierung von Anforderungsniveaus zeigt Roth [GU13] auf, der zwischen Reproduktion, Rekonstruktion und Konstruktion unterscheidet. Für den Ausdrucksmodus Quellcode könnten die drei Niveaus folgendermaßen verwirklicht werden: Abschreiben einer bestehenden Codevorlage und Vervollständigen einer bestehenden Lücken-Codevorlage (Reproduktion), Erstellung eines Codes durch Verkettung vermischter Programmteile oder auf der Grundlage eines funktionsähnlichen Codes (Rekonstruktion) und schließlich selbständiges Schreiben des Codes (Konstruktion). Für den Ausdrucksmodus der verbal-visuelle Darstellung könnten die Anforderungsniveaus wie folgt umgesetzt werden: Suchen und nachspielen von passenden Videos oder Vervollständigung eines thematischen Posters (Reproduktion), strukturelle Neugestaltung (Collage) eines thematischen Posters oder Nachbildung einer ikonischen Video-Visualisierung durch haptische Modelle (Rekonstruktion) und schließlich selbständige Gestaltung eines verbal-visuellen Mediums (Konstruktion). Damit würden sechs Zugänge entstehen, zwischen denen die Lernenden entsprechend ihrer Schwächen, Stärken und Neigungen wählen und natürlich auch im Lernverlauf wechseln können.  Bei der Vielfalt verschiedener Repräsentationsmodi werden die Unterrichtsinhalte mithilfe verschiedener möglichst gleichwertiger Repräsentationen angeboten. Die Bedeutung der unterschiedlichen Repräsentationsmodi unterstreicht auch die Kultusministerkonferenz [KM17] durch die ausdrückliche Nennung im fachspezifischen Kompetenzprofil. Demnach sollen Informatiklehrkräfte Möglichkeiten zur Illustration von informatischen Prinzipien, welche die visuelle, auditive und haptische Wahrnehmung ansprechen und die Regeln für leichte Sprache kennen. Für die Realisierung verschiedener Repräsentationsmodi gibt es mehrere Ansätze. Eine erste mögliche Form sind multikodale Aufbereitungen [We02]. Hierbei unterscheiden sich die Angebote hinsichtlich ihrer Repräsentation durch verschiedene Symbol- oder Kodierungssysteme. Ein Beispiel hierfür sind die äquivalenten textuellen Beschreibungen (Verbalisierung) von Tabellen oder Diagrammen in wissenschaftlichen Arbeiten. Eine zweite Möglichkeit besteht in der multimodalen Aufbereitung der Unterrichtsinhalte, bei der gleichzeitig unterschiedliche Sinnesmodalitäten angesprochen werden [We02]. Im Unterschied dazu sprechen monomodale Darbietungen in einem bestimmten Zeitpunkt genau einen Sinneskanal an. Das klassische Beispiel für eine multimodale Darbietung ist der Lehrfilm, bei dem das visuelle Angebot durch eine nicht deckungsgleiche akustisch wahrnehmbare Erklärung unterstützt wird. Eine dritte Methode ist die sensorische Parallelisierung [Ca15, S. 52]. 40 Dino Capovilla Der Kurztitel des Beitrags 21  Hierbei wird derselbe Inhalt in mindestens zwei unterschiedlichen sensorischen Formen angeboten. Wesentlich ist dabei, dass die sensorisch parallelen Angebote inhaltlich möglichst vollständig und weitestgehend substituierbar sein sollten. Dies bedeutet also, dass bei der sensorischen Parallelisierung mehrere eigenständige und inhaltsgleiche mono- oder multimodale Lernangebote zur Verfügung stehen, die sich insbesondere durch die Kombination der Kodierungsformen unterscheiden. Hierzu gehört beispielsweise die Digitalisierung von handgeschriebenem Material, die auditive Aufbereitung von gedruckten Texten, die ergänzende Bereitstellung von zugänglichen Präsentationsfolien, die textuelle Beschreibung (Verbalisierung) von Grafiken, Bildern und visuellen Modellen oder auch die Anfertigung von haptischen oder taktilen Modellen die zweidimensionalen Abbildungen entsprechen [CH13].  Neben dieser wahrnehmungsorientierten, eher technischen Herangehensweise, lässt sich die Vielfalt der Repräsentationen auch im Bereich der kognitiven Zugänglichkeit erhöhen. Ausgangspunkt sind in diesem Zusammenhang Leseeinschränkungen, welche das Verstehen und Behalten von Allgemein- oder Fachtexten erschweren oder unmöglich machen können [BM18]. Leseeinschränkungen können dabei ganz unterschiedliche Wurzeln haben, weshalb es auch unterschiedliche Ansätze gibt, diesen Barrieren zu begegnen. Einige Lernende können beispielsweise vom Einsatz inhaltsgleicher Versionen in unterschiedlichen Sprachen profitieren [Ca15, S. 125f.]. Ein solches mehrsprachiges Angebot lässt nicht nur positive Effekte für den Fremdsprachenerwerb erwarten, sondern erhöht auch die Zugänglichkeit für Lernende mit internationaler Geschichte. Zudem lassen sich in guten mehrsprachigen Darstellungen möglicherweise spannende kulturelle Facetten erkennen, die das Sprachgefühl fördern und motivieren. Die textuelle Parallelisierung muss jedoch nicht notwendigerweise mehrsprachig erfolgen. In Bildungsinstitutionen ist nach wie vor eine mittelschichtsorientierte Sprache maßgebend [Bo14]. Diese kann insbesondere für Lernende mit Leseeinschränkungen ein Lernhindernis darstellen. Die informatische Bildung baut zudem in vielen Bereichen auf ein ausgeprägtes Fachvokabular auf, welches für Lernende eine faktische oder motivationale Barriere darstellen kann. In beiden Fällen können inhaltsgleiche Varianten auch mit hohem sprachlichem Anspruch [Bo14], sowie Varianten unterschiedlicher Sprachniveaus sinnvoll sein.  Ein systematischer Ansatz zur textuellen Parallelisierung auf unterschiedlichen Sprachniveaus ist die Leichte Sprache. Bei Leichter Sprache geht es darum, die Verständlichkeit standarddeutscher Texte für Personen mit Leseeinschränkungen zu erhöhen. Leichte Sprache zeichnet sich u.a. dadurch aus, dass einfache und präzise Worte in einfachen grammatikalischen Formen zu kurzen Sätzen zusammengefasst werden. Auf Worttrennungen, Abkürzungen, Passivformen und Negationen wird verzichtet. Sätze sind in größerer Schrift linksbündig ausgerichtet und die Satztrennung erfolgt durch Zeilenumbrüche. Schwierige Worte und Inhalte werden zudem durch weitere textuelle Erklärungen verdeutlicht [BM18].  Ein erster Eindruck lässt sich anhand der Definition des Studienfachs der Informatik im Wörterbuch für leichte Sprache (hurraki.de) gewinnen, wobei hier auf die üblichen Informatische Bildung und inklusive Pädagogik 41 22 Vorname1 Nachname1 und Vorname2 Nachname2  Zeilenumbrüche aus redaktionellen Gründen verzichtet wurde: „Informatik ist die Lehre von der Information. Die Menschen bekommen heute viele Informationen. Die Informationen kommen aus den Nachrichten. Die Informationen kommen von anderen Menschen. Die Informationen kommen von den Computern anderer Menschen. Die meisten Menschen lesen das nicht nur, sondern machen daraus neue Informationen. Sie rechnen Zahlen aus. Sie schreiben Texte. Sie drucken Listen. Nehmen Fotos auf oder Videos oder Musik. Kein Mensch weiß heute mehr, welche Informationen es gibt, und wo die alle herkommen. Darum brauchen wir Computer. […]“. Zwischen der akademischen Standardsprache und der leichten Sprache lässt sich das Konzept der einfachen Sprache verorten, bei der lediglich sprachliche und keine inhaltlichen Vereinfachungen vorgenommen werden [BM18]. Konkret bedeutet dies, dass überschaubar lange Sätze genau einen Gedanken enthalten sollen und nicht zusammengesetzt werden, dass aktiv formuliert wird und sprachliche Bilder, Synonyme und Untertöne konsistent konkretisiert werden. Im vorliegenden Text würde also die parallele Verwendung der Begriffe „Informatiksysteme“, „Technologien und digitale Medien“ sowie „Digitale Systeme und Artefakte“ nicht mit den Grundsätzen der einfachen Sprache vereinbar sein.  Abschließend stellt sich die Frage, für welche Lernenden dieses Angebot geschaffen werden sollte und inwiefern der damit verbundene Aufwand überhaupt gerechtfertigt ist. Der günstigste Faktor für einen sensiblen Umgang mit den Bedürfnissen behinderter Lernender und eine damit verbundene zielführende Binnendifferenzierung bleibt, unabhängig von allen theoretischen und praktischen Konzepten und wissenschaftlichen Veröffentlichungen, eine engagierte und kluge Lehrkraft. Daran haben natürlich auch die postulierten Bildungsrechte in der Behindertenkonvention nichts geändert. Die entscheidende Veränderung durch die Behindertenrechtskonvention für die Unterrichtsplanung besteht darin, dass eben keine konkrete Person mehr notwendig ist, um Lernangebote zu schaffen, die ein breiteres Spektrum von Lernenden adressieren.  Für diesen inklusiven Denkansatz spricht außerdem, dass nicht nur Lernende mit Behinderungen von dieser systematischen Binnendifferenzierung profitieren können, sondern auch ein Teil der Lernenden ohne festgestellten Förderbedarf. Beispielsweise lässt die multimodale sensorische Aufbereitung eine tiefere Verarbeitung der Lerninhalte potentiell bei allen Lernenden erwarten [Br11, S. 95], während Lernende mit bestimmten sensorischen Präferenzen oder Beeinträchtigungen genau die Lernangebote wählen können, welche ihre Bedürfnisse treffen. Vergleichbar lässt sich auch im Bereich der sprachlichen Vielfalt und für die Vielfalt bei den Handlungs- und Ausdrucksmodi argumentieren. 4 Assistive Technologien Wie bereits beschrieben, werden bei der Ausrichtung des Unterrichts an heterogenen Lerngruppen die Lernbedingungen so verändert, dass der Unterricht für eine bedeutend größere Zahl von Lernenden – unabhängig von deren individuellen Voraussetzungen – 42 Dino Capovilla Der Kurztitel des Beitrags 23  offen steht. Davon abgesehen wird es jedoch vermutlich immer Lernvoraussetzungen geben, die so speziell sind, dass die allgemeine Unterrichtsausrichtung an Grenzen stößt. Ein Ansatz, um diese verbleibenden, fehlenden Fähigkeiten und Fertigkeiten im Unterricht zu kompensieren, besteht im Einsatz von assistiven Technologien. Klassische Beispiele für solche assistiven Technologien sind Elektrorollstühle, Prothesen, Sprachausgaben, Hörgeräte, Tafelkamerasysteme usw. Die Kultusministerkonferenz [KM17] ist diesbezüglich bei der Neufassung des fachspezifischen Kompetenzprofils überraschend weit gegangen und postuliert, dass Informatiklehrkräfte die Möglichkeiten, die sich durch den Einsatz von assistiven Technologien im Informatikunterricht eröffnen, einschätzen und bewerten können sollen. Auch wenn es hier nicht um den konkreten Einsatz von assistiven Technologien geht, ist diese geforderte Kompetenz durchaus anspruchsvoll. Beispielsweise sollte eine Informatiklehrkraft beurteilen können, ob und wie sehbehinderte oder blinde Lernende, ggf. durch den Einsatz von assistiven Technologien, funktionale Modelle erstellen können. Auf der Grundlage dieser Einschätzung sollte dann die Informatiklehrkraft die notwendige, sonderpädagogische Unterstützung einfordern, die ressourcenabhängig geleistet werden kann.  Wie bereits erwähnt, gehört die Einweisung und Unterstützung beim Einsatz assistiver Technologien zum additiven, sonderpädagogischen Angebot. Da nun aber assistive Technologien im schulischen Kontext häufig Informatiksysteme sind, stellt sich die Frage, ob sich diese aus der alleinigen, funktionalen Verknüpfung mit Hilfsmitteln lösen und für sinnvolle pädagogische Anwendungskontexte in der allgemeinen informatischen Bildung öffnen lassen [SB12, S. 21]. Auf der Grundlage des Dagstuhl-Dreiecks [GI16b] lassen sich solche Unterrichtsgegenstände vor allem aus der gesellschaftlich-kulturellen und technologischen Perspektive begründen. Aus gesellschaftlich-kultureller Perspektive verspricht die Auseinandersetzung mit assistiven Technologien diverse Einsichten und eine Sensibilisierung für die ansonsten häufig vorurteilsgeformten Lebensbedingungen behinderter Menschen. Ein kritisch hinterfragender Blick aus der technologischen Perspektive auf die Funktionsweise von assistiven Technologien könnte in Einzelfällen auch besondere methodische oder inhaltliche Ansätze rechtfertigen, wie das folgende Beispiel zeigen soll [Ca15, S. 30ff.; CG16].  Sehbeeinträchtigte Menschen verwenden grundsätzlich handelsübliche Hard- und Software, die durch assistive Technologien ergänzt wird. Im Unterschied zum herkömmlichen Arbeitsplatz wird der Rechner mit einer Screen Reader Software ausgestattet. Diese Software abstrahiert den Bildschirminhalt und extrahiert relevante Informationen. Diese Informationen können dann mittels einer Sprachausgabe oder einer Braillezeile auditiv bzw. haptisch wahrnehmbar ausgegeben werden.  Die Bedienungskonzepte dieses dadurch entstehenden assistiven Informatiksystems unterscheiden sich grundlegend von der herkömmlichen Arbeitsweise von unbehinderten Menschen. Entscheidend hierfür ist, dass die grafische Benutzeroberfläche bei sehbeeinträchtigten Menschen ihre zentralen Vorteile verliert: Das sind die intuitive Informatische Bildung und inklusive Pädagogik 43 24 Vorname1 Nachname1 und Vorname2 Nachname2  Führung und die Maussteuerung. Die sich aus dem Verzicht auf Intuition und Maus ergebenden Nachteile müssen durch das abstrakte Verständnis der Bildschirminhalte und ein tastaturbasiertes Steuerungskonzept ersetzt werden. Mit anderen Worten heißt das, dass sehbeeinträchtigte Menschen ein maßgeblich visuell orientiertes System soweit abstrahieren müssen, dass die enthaltenen Konzepte unabhängig von der konkreten Ausgestaltung am Bildschirm verstanden werden können. Davon ausgehend müssen alternative, in der Regel nicht intuitive Steuerungstechniken erlernt werden. Muss ein Computer ohne das Ausgabemedium Bildschirm bedient werden, besteht Lernprozess vor allem darin, die Klassen der grafischen Benutzeroberfläche kennenzulernen und anhand von Beispielen die zugehörigen, nicht visuell-orientierten Bedienungskonzepte zu erarbeiten. Das tatsächliche, nicht visuell-orientierte Arbeiten besteht dann darin, die Klasse des gefundenen Objekts zu erkennen, sich an das Bedienungskonzept für genau diese Klasse zu erinnern und dieses dann zielorientiert anzuwenden. Eine solche Herangehensweise lässt sich erfahrungsgemäß als alternativer Handlungsmodus durchaus in den Informatikunterricht integrieren oder bereichert die ansonsten rein intuitiv geleitete, rezepthafte Bedienungsschulung. 5 Schluss Am Ende dieses Artikels stehen zusammenfassend drei Thesen: Erstens kann es in einer inklusiven Pädagogik keine spezifische Didaktik der Informatik geben, sondern die Didaktik der Informatik muss sich dahingehend verändern, dass sie hinsichtlich der besonderen Bedürfnisse behinderter Lernender anschlussfähig wird. Zweitens sind Informatiksysteme wesentlich für die Förderung von Teilhabe und sollten in dieser Rolle auch Gegenstand der informatischen Bildung sein. Drittens verspricht eine sensorische und kognitive Parallelisierung Vorteile für behinderte und unbehinderte Lernende und ist damit eine inklusive und keine sonderpädagogische Maßnahme.  Vor diesem Hintergrund erscheint es bemerkenswert, dass die inklusionsfördernde Wirkung der informatischen Bildung in der Argumentation zur flächendeckenden Einführung eines Pflichtfachs Informatik bisher so wenig Beachtung gefunden hat. Informatische Bildung ist offenkundig für viele behinderte Lernende ganz unmittelbar Inklusionsunterricht und wenn wir dann davon ausgehen, dass wir durch das gegenseitige Verständnis von Interaktionenformen, Arbeitsweisen, Möglichkeiten etc. Vorurteile abbauen und in manchen Bereichen voneinander lernen können, dann auch für alle anderen.  6 Literaturverzeichnisses [AM11] AM, Aktion Mensch e.V.: Einführung in die Barrierefreiheit. www.einfach-fuer-alle.de/artikel/einfuehrung-barrierefreiheit/, Stand: 19.01.2019. 44 Dino Capovilla Der Kurztitel des Beitrags 25  [BB89] Brauer, W.; Brauer, U.: Better Tools - Less Education? In (Ritter, G. Hrsg.): Information Processing IFIP’89. Elsevier Science Publishers B.V., Amsterdam, S.101–106, 1989. [BM18] Bredel, U; Maaß, C.: Leichte Sprache. In (Maaß, C.; Rink, I. Hrsg.): Handbuch Barrierefreie Kommunikation. Frank & Timme, Berlin, S. 251-271, 2018. [Bo14] Bosse, I.: Zur Rolle der Medienpädagogik im Inklusionsprozess. VHN 2/2014, S. 149-152, 2014. [Br11] Brand, M.: Gedächtnis. In (Schütz, A.; Brand, M.; Selg, H.; Lautenbacher, S. Hrsg,): Psychologie: Eine Einführung in ihre Grundlagen- und Anwendungsfächer. W. Kohlhammer, Stuttgart, S. 89-103, 2011. [Bu08] Burgstahler, S.: Universal Design of Instruction. From Principles to Practice. In: Universal Design in Higher Education. MA: Harvard Education Press, Cambridge, S. 23-44, 2008. [Ca15] Capovilla, D.: Inklusion in der Informatischen Bildung am Beispiel von Menschen mit Sehschädigung. PhD thesis, TU München, München, 2015. [CA12] CASWG: Computer Science: A curriculum for schools. www.computingatschool.org.uk/data/uploads/ComputingCurric.pdf, 19.01.2019, 2012. [CG16] Capovilla, D.; Gebhardt, M.: Assistive Technologien für Menschen mit Sehschädigung im inklusiven Unterricht. Zeitschrift für Heilpädagogik 1/2016, S. 4-15, 2016. [CH13] Capovilla, D.; Hubwieser, P.: Soziale Inklusion als fachdidaktisches Problem der Informatik. blind – sehbehindert 4/2013, S. 226-235, 2013. [De18] Dengel, A.: Digitale Bildung: ein interdisziplinäres Verständnis zwischen Medienpädagogik und Informatik. MedienPädagogik 33, S. 11–29, 2018. [DV15] DVfR: Universal Design im Kontext von Hochschule und Hochschulbildung. www.reha-recht.de/fachbeitraege/beitrag/artikel/beitrag-d11-2015/, Stand: 19.01.2019. [Ge15] Gebhardt, M.: Gemeinsamer Unterricht von Schülerinnen und Schülern mit und ohne sonderpädagogischen Förderbedarf. Ein empirischer Überblick. In (Kiel, E. Hrsg.): Inklusion im Sekundarbereich. W. Kohlhammer, Stuttgart, S. 39-52, 2015. [GI16a] GI: Stellungnahme zum KMK-Strategiepapier „Bildung in der digitalen Welt“, fb-iad.gi.de/fileadmin/FB/IAD/Dokumente/gi-fbiad-stellungnahme-kmk-strategie-digitale-bildung.pdf, 19.01.2019, 2016. [GI16b] GI: Dagstuhl-Erklärung: Bildung in der digitalen vernetzten Welt, gi.de/fileadmin/GI/Hauptseite/Themen/Dagstuhl-Erkla__rung_2016-03-23.pdf, 19.01.2019, 2016. [GI18] GI: Stellungnahme zu den Veränderungsvorschlägen zu den „Ländergemeinsamen inhaltlichen Anforderungen für die Fachwissenschaften und Fachdidaktiken in der Lehrerbildung“ (Fachstandards) der Kultusministerkonferenz auf Basis der KMK-Strategie zur „Bildung in der digitalen Welt“, fb-iad.gi.de/fileadmin/FB/IAD/Dokumente/gi-fbiad-stellungnahme-kmk-anforderungen-lehrerbildung-digitalisierung.pdf, Stand: 19.01.2019, 2018. Informatische Bildung und inklusive Pädagogik 45 26 Vorname1 Nachname1 und Vorname2 Nachname2  [GU13] GU, Thüringer Forschungs- und Arbeitsstelle für den Gemeinsamen Unterricht/Inklusion: Hinweise und Anregungen zur Differenzierung,  www.gu-thue.de/material/RROTH_Differenzierung.pdf, 19.01.2019, 2013. [Hu07] Hubwieser, P.: Didaktik der Informatik. 3. Auflage, Springer VS, Berlin, 2007. [KM12] KMK: Sonderpädagogische Förderung in Schulen 2001 bis 2010, www.kmk.org/fileadmin/pdf/Statistik/Dokumentationen/Dokumentation_SoPaeFoe_2010.pdf, 19.01.2019, 2012. [KM16] KMK: Bildung in der digitalen Welt, www.kmk.org/fileadmin/Dateien/pdf/ PresseUndAktuelles/2017/Strategie_neu_2017_datum_1.pdf, 19.01.2019, 2016. [KM17] KMK: Ländergemeinsame inhaltliche Anforderungen für die Fachwissenschaften und Fachdidaktiken in der Lehrerbildung, www.kmk.org/fileadmin/Dateien/veroeffentlichungen_beschluesse/2008/2008_10_16-Fachprofile-Lehrerbildung_01.pdf, 19.01.2019, 2017. [Mi15] Miesenberger, K.: Advanced and Emerging Solutions: ICT and AT in Education of Low Vision and Blind Students. In (Kouroupetroglou, G. Hrsg.): Proceedings of ICEAPVI’15. Athen, S. 17-26, 2015. [RM02] Rose, D.; Meyer, A.: Teaching Every Student in the Digital Age. Universal Design for Learning. Association for Supervision and Curriculum Development, Alexandria, 2002. [SB12] Schnaak, T.; Böhmig, S.: Inklusive Medienpädagogik – was ist das? In (Landesarbeitsgemeinschaft Lokale Medienarbeit NRW in Kooperation mit der Technischen Jugendfreizeit- und Bildungsgesellschaft Hrsg.): In Materialien für eine inklusive Medienpädagogik, S. 17-21, 2012. [SMM98] Story, M. F.; Mueller, J. L.; Mace, R. L.: The Universal Design File. Designing for People of All Ages and Abilities. Revised Edition, files.eric.ed.gov/fulltext/ED460554.pdf 27.04.2019, 1998. [St14] Sturm, T.; Rekonstruktion der Herstellung und Bearbeitung von Differenz im inklusiven Unterricht mithilfe der Dokumentarischen Videointerpretation. In: (Bohnsack, R.; Fritzsche, B.; Wagner-Willi, M. Hrsg.): Dokumentarische Video- und Filminterpretation. Barbara Budrich, Opladen, S. 153-178, 2014. [We02] Weidenmann, B.: Multicodierung und Multimodalität im Lernprozess. Information und Lernen mit Multimedia und Internet 3, S. 45-62, 2002. 46 Dino CapovillaWissenschaftliche BeiträgecbaHerausgeber et al. (Hrsg.): INFOS 2019,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Informatikunterricht in der Grundschule? – Erprobung undAuswertung eines Unterrichtsmoduls mit Calliope miniKevin Baum1, Nadine Kirsch1, Kerstin Reese1, Pascal Schmidt1, Lukas Wachter1, VerenaWolf1Abstract:Im Zuge der Digitalisierung wird die Lebenswelt von Grundschulkindern mehr und mehrdurch Informatiksysteme geprägt. Informatische Bildung in der Grundschule kann zur Entmystiﬁ-zierung solcher Systeme maßgeblich beitragen und so die Grundlage für tiefgreifendes Verständnislegen. Bisher ist allerdings nur wenig bekannt über das Vorwissen der SchülerInnen in Bezug aufInformatiksysteme und über die Wirksamkeit der eingesetzten Unterrichtsmaterialien im Hinblick aufden Erwerb von informatischen Kompetenzen. In der hier beschriebenen Studie mit insgesamt 137Kindern wurde das Vorwissen von Viertklässlern mit einem Leitfadeninterview ermittelt. Danachwurde eine fünfstündige Unterrichtseinheit zu algorithmischen Grundbausteinen und dem Mikrocon-troller Calliope mini durchgeführt. Die Unterrichtseinheit endete mit einer Aufgabenstellung, für diedie Kinder das Eingabe-Verarbeitung-Ausgabe-Prinzip (EVA-Prinzip) nachvollziehen und mit demMikrocontroller umsetzen mussten. Die Bearbeitung dieser Aufgabenstellung wurde per Screencastfestgehalten. Unsere Ergebnisse zeigen, dass ein Großteil der Kinder bestenfalls vage Vorstellungenvon Informatiksystemen hat, aber sehr gut in der Lage ist, ein altersangemessenes System wie denCalliope mini zielgerichtet zu programmieren.Keywords:Grundschule; Informatik; Calliope mini1 Motivation und Ziele der StudieInformatiksysteme halten mehr und mehr Einzug in den Lebensalltag aller Menschen,darunter auch SchülerInnen der Primarstufe. Doch im Gegensatz zu Phänomenen dernatürlichen Umwelt, über die der Sachkundeunterricht größtenteils aufklärt, sind Systemeder digitalen Welt noch nicht Gegenstand des Unterrichts in der Primarstufe. Im Gegensatzzu anderen Ländern gibt es in Deutschland zur Zeit weder ein eigenes Unterrichtsfachnoch eine feste Verankerung dieser Themen in den Lehrplänen der bestehenden Grund-schulfächer (vgl. [ST11]). Das Calliope-Mini-Projekt des Ministeriums für Bildung undKultur (MBK) Saarland ist ein erster Schritt, um dies zu ändern: Seit Anfang 2017 werdenLehrerfortbildungen vom Landesinstitut für Pädagogik und Medien im Saarland angeboten,die den Mikrocontroller Calliope mini als didaktisches Informatiksystem zum Einsatz inder Schule vorstellen und Grundkonzepte zur informatischen Bildung in der Primarstufevermitteln. Das Gerät soll nach Vorstellung des MBK ab Klassenstufe 3 saarlandweit im1Universität des Saarlandes,Campus, DE-66123 Saarbrücken,[kevin.baum|kerstin.reese|pascal.schmidt|verena.wolf]@uni-saarland.de,[s8nakirs|s8luwach]@stud.uni-saarland.decba doi:10.18420/infos2019-05Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 492 Kevin Baum, Nadine Kirsch, Kerstin Reese, Pascal Schmidt, Lukas Wachter, Verena WolfRegelunterricht eingesetzt werden [LP17].Ziel der hier beschriebenen Studie ist es, die Vorkenntnisse von GrundschülerInnen zubeleuchten und Calliope mini auf seine Tauglichkeit bei der Einführung von Algorithmenund der Funktionsweise (reaktiver) Informatiksysteme im Regelunterricht zu untersuchen.Das sind wichtige Kompetenzen, die auch von der GI für den Primarbereich gefordertwerden (vgl. [Be18]). Die Forschungsfragen, die hierzu geklärt werden sollen, lassen sichauf zwei wesentliche Hauptfragen A und B einschränken.AGelingt es Kindern der 4. Klasse nach einer dreistündigen Einführung in Algorithmenund die Programmierung des Calliope mini, eigenständig Programme zur Lösungvorgegebener Eingabe-Ausgabe-Zusammenhänge zu entwerfen?Daraus ergeben sich folgende Teilfragen:A1Nutzen die Kinder zielgerichtet algorithmische Grundbausteine (Eingaben, Ausgaben,Sequenzen) sowie Sensoren und Aktoren?A2Lassen sich typische Missverständnisse oder Verständnisschwierigkeiten identiﬁzie-ren?Fragestellung B bezieht sich primär auf das Vorwissen der Lernenden:BErkennen Kinder ein ihnen unbekanntes Informatiksystem als solches (und nichtnur als Spielzeug oder allgemeines technisches Gerät) und wie beschreiben sie einsolches System?Hier werden drei Teilfragen unterschieden:B1Welche Bestandteile und Funktionsweisen eines beobachteten Informatiksystemsnennen die Kinder?B2Beschreiben die Kinder einen zutre enden kausalen Zusammenhang zwischenEingabe und Ausgabe?B3Falls die Kinder einen solchen Zusammenhang hergestellt haben: Welche Ursacheschreiben die Kinder dem genannten Zusammenhang zu?In der Studie wurde zunächst das Vorwissen von Viertklässlern ermittelt. Danach wurde einefünfstündige Unterrichtseinheit zu algorithmischen Grundbausteinen und dem Mikrocontrol-ler Calliope mini durchgeführt. Die Unterrichtseinheit endete mit einer Aufgabenstellung,für die die Kinder das Eingabe-Verarbeitung-Ausgabe-Prinzip (EV A-Prinzip) nachvollziehenund mit dem Mikrocontroller umsetzen mussten.Unsere Ergebnisse zeigen, dass ein Großteil der Kinder bestenfalls vage Vorstellungen vonInformatiksystemen hat, aber sehr gut in der Lage ist, ein altersangemessenes System wieden Calliope mini zielgerichtet zu programmieren. Er ermöglicht den Kindern einen erstenZugang zum EVA-Prinzip und wird erfolgreich von ihnen zur Problemlösung eingesetzt.2 Organisation der StudieDie Studie wurde von September bis Dezember 2018 in acht Klassen an fünf saarländischenGrundschulen mit insgesamt 137 Kindern durchgeführt (Tab. 1). Die nachfolgend beschrie-50 Kevin Baum et al.Unterrichtsmodul mit Calliope mini 3Nr.12345678⌃Schulcode11123445Anzahl SchülerInnen20 17 21 18 17 15 18 11137Tab. 1: Anzahl der an der Studie teilnehmenden Schulen, Klassen und SchülerInnenbene Unterrichtseinheit hat einen Umfang von drei Doppelstunden. Unterrichtet wurdeim Klassenraum mit einem Team von zwei Personen, wobei die Lehrperson der Klassezusätzlich anwesend war. Das erforderliche technische Equipment – Calliope mini, Beamer,Laptops – wurde vom Projektteam vorbereitet und mitgebracht. Auf den Laptops wurdemithilfe eines lokalen Web-Servers eine O ine-Version des Microsoft MakeCode-Editors[Mi] betrieben, um von einem Internetzugang unabhängig zu sein. Der Calliope mini warals Download-Ordner des Web-Browsers konﬁguriert, so dass beim Klick auf den Knopf„Herunterladen“ sofort der angeschlossene Calliope mini bespielt wurde.Um die Vorstellungen der Kinder von Informatiksystemen zu untersuchen, wurden Cubeletsbenutzt [Mo]. Die über Magnete zusammensteckbaren Cubeletmodule hatten sich in Vortestsbewährt, weil sie nicht direkt als „Computer“ erkennbar sind. Cubeletmodule sind Blöckemit unterschiedlichen Funktionen, wie z.B. Motoren oder Sensoren. Damit stellen sie einabstraktes, programmierbares Informatiksystem dar, das den Kindern recht wahrscheinlichnicht bereits bekannt war.3 Verlauf der UnterrichtseinheitErste Doppelstunde: Interviews, Wortfeldarbeit und AlGo.Zur Exploration des Vor-wissens wurden alle SchülerInnen zunächst einzeln mithilfe eines standardisierten Leitfadensinterviewt: Nach einer kurzen Demonstration der Funktionsweise eines Cubelet-Aufbaus mitMotor- und Sensorblock – das Erkennen eines Gegenstandes im Nahbereichs des Sensorssetzt den Motor für wenige Sekunden in Bewegung – wurden die SchülerInnen aufgefordert,das Gesehene zu beschreiben bzw. zu erklären.Die im Verlauf der Interviews gesammelten Begri e wurden auf Kärtchen notiert undim Plenum nacheinander an die Tafel geheftet, ggf. geklärt und anhand verschiedenerKriterien (z.B. Verhalten vs. Bestandteile des Roboters) sortiert. Neben einer gemeinsamen(sprachlichen) Ausgangsbasis wurde dadurch eine erste Sensibilisierung für die im Hinblickauf das EVA-Prinzip notwendige Unterscheidung zwischen Ein- und Ausgaben gescha en.Die Einführung algorithmischer Grundkonzepte erfolgte zunächst unplugged, um dasgleichzeitige Auftreten konzeptioneller und technischer Herausforderungen zu verhindenund um eine Ablenkung durch rein technische Probleme zu verhindern. Dafür wurde dasAlgorithmenspiel Algo! verwendet, welches lediglich LEGO-Zubehör und Befehlskartenmit Piktogrammen nutzt. Die einfachste Aufgabenvariante besteht darin, eine Spielﬁgurentlang eines Weges zu steuern, indem der passende Algorithmus mithilfe von elemen-taren Anweisungen eines begrenzten Befehlssatzes beschrieben wird. Nach einer kurzenKennenlernphase bearbeiteten die SchülerInnen in Zweiergruppen mit jeweils eigenemInformatikunterricht in der Grundschule mit Calliope 514 Kevin Baum, Nadine Kirsch, Kerstin Reese, Pascal Schmidt, Lukas Wachter, Verena WolfSpielset unterschiedlich komplexe Szenarien (z.B. auch die Umkehraufgabe: Wegebau zuvorgegebenem Algorithmus).Zweite Doppelstunde: Calliope ohne und mit Strom.In der ersten Hälfte der Doppel-stunde lernten die Kinder die Bestandteile der (zunächst noch stromlosen) Minis kennen undordneten diese den Kategorien „Eingabe“, „Ausgabe“ und „Sonstiges“ zu. Anschließenderkundeten sie die Funktionsweise der Geräte: Hierzu wurden vier unterschiedlich pro-grammierte Sorten von Minis (Kombinationen aus Eingabe (Knopf A gedrückt, geschüttelt)und Ausgabe (Smiley-Folge, Ampel-Farben)) an die SchülerInnen verteilt und jeweils einprototypischer Vertreter in eine Raumecke platziert. Die SchülerInnen mussten sich nunso im Klassenraum positionieren, dass in den Ecken nur gleich funktionierende Minis(d.h. gleiche Kombination von Ein- und Ausgabe) zusammenkamen. In der anschließendenBesprechung wurde herausgearbeitet, dass sich das unterschiedliche Verhalten der Minisdurch unterschiedliche, von Menschen gemachte Programmierung erklärt – damit war eineMotivation zum Kennenlernen der MakeCode-Entwicklungsumgebung gegeben.Die Präsentation der Entwicklungsumgebung und die Programmierung eines Mini wurdenzunächst am Beamer erläutert und anschließend von den SchülerInnen in Zweiergruppen ameigenen Rechner nachvollzogen. Nach erfolgreicher Reproduktion eines zweiten Beispielsdurften die Kinder die vorgegebenen Programme verändern und weitere Befehle aus denBereichen „Grundlagen“, „Eingabe“ und „Musik“ ausprobieren.Dritte Doppelstunde: Abschlussaufgaben und Projekte.In der dritten Doppelstundebearbeiteten die Kinder in Zweiergruppen vier Programmieraufgaben mit ansteigendemSchwierigkeitsgrad. Alle Programme sind mit sequenziellen Befehlen lösbar, wie auf derersten Stufe des Stufenmodells von [HWW17]. Die SchülerInnen wurden nicht darüberinformiert, dass es sich um „Testaufgaben“ handelt, um eine möglichst natürliche undungezwungene Atmosphäre zu scha en. Im Einzelnen sollten folgende Aufgaben bearbeitetwerden:Aufgabe 1: Reproduktion einer bereits bekannten Programmierung („Auf Knopfdruck A:Smileys anzeigen“).Aufgabe 2: Transfer durch leichte Variation („Auf Knopfdruck B: Text „CODE“ anzeigen“).Aufgabe 3: Vorlage eines Calliope mini, dessen Verhalten die Kinder zunächst erkundenund dann in Form eines Programms rekonstruieren sollten („Auf Knopfdruck A: längereSequenz von unterschiedlichen Ausgaben“).Aufgabe 4: Aufgabenstellung wie Aufgabe 3, bis auf komplexeres Verhalten des Calliopemini (drei unterschiedliche Inputs, die jeweils unterschiedliche Outputfolgen auslösen).Die Bearbeitung der Abschlussaufgaben beanspruchte durchschnittlich 50 Minuten. In derrestlichen Zeit durften die SchülerInnen selbstständig eigene Projekte realisieren und dieseam Ende der Doppelstunde vor der gesamten Klasse präsentieren. Die Auswertung desfreien Programmierens ist nicht Teil dieser Verö entlichung.52 Kevin Baum et al.Unterrichtsmodul mit Calliope mini 5IDKategoriebezeichnungDeﬁnition AnkerbeispielOK 1VerhaltenUK 1.1kann Verhalten repro-duzierenSchülerIn wird selber aktiv, handelt undreproduziert das gezeigte VerhaltenUK 1.2kann Verhalten be-schreibenSchülerIn beschreibt das Beobachtete„Wenn man die Hand dahin hält, fährter nach links“, Interview-Nr. 59OK 2Begri eUK 2.1benutzt mystische Be-gri eAussagen, in denen Begri e auftreten,die vermenschlichen oder eine höhereGewalt hinzuziehen„Es hat Angst, dass es kaputt geht undweiß, dass es weglaufen soll“, Interview-Nr. 61UK 2.2benutzt nicht-mystische, abernicht-technischeBegri eAussagen, in denen Begri e aus der Bio-logie oder Analogien mit dem menschli-chen Körperbau, z.B. Augen, beinhaltetsind„Die Augen reagieren auf die Hand“,Interview-Nr. 64UK 2.3benutzt technische Be-gri eAussagen, in denen Begri e, die fürein technisches System angemessen sind,z.B. Räder, Sensoren, beinhaltet sind„Da ist ein Sensor drin, der Bewegungwahrnimmt“, Interview-Nr. 82OK 3Weiterführend/SpeziellerUK 3.1gibt Antwort auf„Warum“-FrageAntwort auf die „Warum“-Frage, die fürden Schüler/die Schülerin sinnvoll ist„Da ist was drin, das dafür sorgt, dasses sich bewegt“, Interview-Nr. 96UK 3.2erwähnt, dass einMensch das so gebaut/programmiert hatAussagen, in denen erwähnt wird, dassein Mensch das Informatiksystem gebaut/programmiert hat„Jemand hat sich was ausgedacht undwollte es umsetzen“, Interview-Nr. 93UK 3.3verwendet den Begri „Programmierung“SchülerIn kennt das Wort und verwendetes im Interview„Das ist so programmiert“, Interview-Nr. 116UK 3.4hat eine Erklärung da-für, was „Programmie-rung“istAuf Nachfrage: Erklärung des Begri s„Programmierung“, die für den Schüler/-die Schülerin sinnvoll ist„Man kann ihm sagen, was es machensoll“, Interview-Nr. 103Tab. 2: Kategorienssystem zur Einordnung der Aussagen in den Interviews4 Erhebungsinstrumente und AuswertungsmethodenWährend der Interviews zur Vorwissensabfrage wurden Reaktionen und Antworten derKinder von einem Protokollanten in Form von schriftlichen Notizen festgehalten.Bei den Programmieraufgaben wurden die Aktionen am Computer per Screencast erfasst.Die Screencasts wurden mit der Software OBS [Op] angefertigt, die automatisch mit demEditor startete. Während der Bearbeitung der Programmieraufgaben wurden Rückfragender Kinder beantwortet, ggf. auch Hilfestellungen und Tipps geben – beides wurde mitZuordnung zu dem/der betre enden Schüler(in) und Zeitstempel notiert. Ton- oder Video-aufzeichnungen wurden nicht angefertigt.Die Interviews wurden in Anlehnung an Mayring (vgl. [Ma02]) ausgewertet, da ledig-lich Notizen zu den Schülerantworten und -reaktionen vorlagen und keine vollständigenTranskriptionen. Tab.2zeigt das Kategoriensystem, welches induktiv entwickelt und inRückkopplung mit seiner Anwendung mehrfach angepasst wurde.Da die Notizen kurz und die Deﬁnitionen und Ankerbeispiele bereits sehr konkret sind,wurde auf Codierregeln verzichtet. Das Kategoriensystem wurde von mehreren Personenzur unabhängigen Auswertung genutzt. Im nächsten Schritt ließen sich die Unterkategorien„mystische“ (UK 2.1), „nicht-technische“ (UK 2.2), „technische“ (UK 2.3) Begri e, dieAntwort auf die „Warum-Frage“ (UK 3.1) und die Erklärung des Begri s „Programmierung“(UK 3.4) in Anlehnung an Mayring reduzieren.Informatikunterricht in der Grundschule mit Calliope 536 Kevin Baum, Nadine Kirsch, Kerstin Reese, Pascal Schmidt, Lukas Wachter, Verena WolfBei der quantitativen Auswertung der Screencasts ist für jedes Team und jede Aufgabebestimmt worden, ob die Aufgabe vollständig, bis auf kleine Mängel oder gar nicht gelöstwurde. Ebenso wurde die Bearbeitungsdauer erfasst. Aufgabe 4 wurde aufgrund ihrerKomplexität genauer ausgewertet. Um diese Aufgabe erfolgreich zu lösen, musste sie inTeilaufgaben zerlegt werden. Der Erfolg beim Erkennen und Bearbeiten der Teilaufgabenund das Vorgehen der Schülerinnen und Schüler wurden festgehalten.5 Ergebnisse der Studie5.1 Ergebnisse der InterviewauswertungEs lagen 133 Notizen zu Interviews vor, die ausgewertet werden konnten (Tab. 3). Alsmystische Begri e (UK 2.1) wurde z.B. „Jedi-Fahrzeug“ genannt. Es wurde unterstellt, dassdie Cubelets „denken“oder „sich erschrecken“. Zusammenfassend kann gesagt werden, dassdiese Gruppe von Kindern die Cubelets als handelnd beschreibt. Neun Kinder haben imInterview mystische Begri e verwendet.Die Reduktion der nicht technischen Begri e (UK 2.2) ergab, dass diese Gruppe vonKindern das eingesetzte Informatiksystem häuﬁg mit Analogien aus der Biologie beschreibt.Die Cubelets haben „Augen“ oder die „Sonne löst etwas aus“. Meist werden Begri e fürden sichtbaren Teil der Sensoren gesucht: „Löcher“, „das Schwarze“ oder „Punkte“. 41Kinder haben wenigstens einen nicht-technischen Begri  benutzt.An technischen Begri en (UK 2.3) wurden meist „Sensor“ oder Analogien („Scanner“,„Bewegungsmelder“) genannt. Die sichtbaren, mechanischen Bestandteile der Cubeletswurden öfter mit Begri en wie „Räder“oder „Rollen“beschrieben. Innerhalb der Cubeletswurden „Kabel“, „Motoren“, „Elektronik“ und „Batterien“ vermutet. Manche Kinder dieserGruppe erklärten die berührungsfreie Interaktion mit den Cubelets mit „Magneten“ oder„Wärme“. Einige sagten, dass „Signale“ oder „Daten“ vom Sensor an den Motor geschicktwerden. Insgesamt kann der Gebrauch der technischen Begri e als überwiegend vagebezeichnet werden. 115 Kinder benutzten technische Begri e.Als Antwort auf die „Warum“-Frage (UK 3.1) wurde meist genannt, dass das System „soprogrammiert“ oder etwas „so eingebaut“ sei. Als Erklärung wurde oft nur gesagt, dass eseinen „Sensor“ gibt. Die Antworten blieben kurz und kamen über Schlagworte – „Technik“,„Elektronik“, „Signale“– kaum hinaus. Oft wurde erst auf Nachfrage eine Antwort gegeben.66 Kinder gaben eine Antwort auf die „Warum“-Frage.Wenn die Kinder den Begri  „Programmieren“ benutzt haben, wurde nachgefragt, was dassei (UK 3.4). Die Kinder erläuterten, dass „ein Mensch etwas sagt“ oder „etwas eingestelltwird“. Das macht man „am Computer“ und „überträgt“ es auf das Informatiksystem. 24Schulcode11123445⌃Anzahl Interviews17 17 21 18 17 15 17 11133Tab. 3: Anzahl der verwertbaren Interviews54 Kevin Baum et al.Unterrichtsmodul mit Calliope mini 7bearbeitet vollst. gelöst kl. Fehler nicht gelöstmin maxAufg. 1 63 58 4 101:00 03:19 19:31Aufg. 2 59 57 1 100:38 04:48 17:59Aufg. 3 62 47 10 503:23 13:38 37:12Aufg. 4 54 9 0 4513:18 23:09 36:29Tab. 4: Anzahl der bearbeiteten Aufgaben, Erfolg und BearbeitungszeitenKinder hatten eine eher vage Vorstellung davon, was Programmieren ist. Kein Kind schienvon eigenen Erfahrungen berichten zu können.5.2 Ergebnisse aus der Screencast-AuswertungNach der Erhebungsphase lagen 63 auswertbare Screencasts mit insgesamt mehr als 50Stunden Videomaterial vor. Tab.4zeigt den nach Aufgaben aufgeschlüsselten Erfolg derBearbeitung sowie die Bearbeitungsdauer.Festzustellen ist, dass bei den ersten drei Aufgaben jeweils über 90% der Gruppen einekorrekte Lösung oder eine Lösung mit nur kleinen Fehlern gefunden haben. Zur erfolgreichenBearbeitung der 3. Aufgabe mussten die Teams ein komplexeres Verhalten des Calliopemini nachbilden. Dazu musste das Verhalten der Vorlage genau beobachtet und Schritt fürSchritt programmiert werden. Nahezu 75% der Teams konnten diese Aufgabe vollständiglösen, während nur ca. 10% keine Lösung gelang.Bei der 4. Aufgabe mussten mehrere Eingabe-Ausgabe-Zusammenhänge erkannt undimplementiert werden. Besonders gut gelang es den Kindern, eine rein visuelle Sequenzzu erkennen und zu reproduzieren: Zwei Drittel konnten die korrekte Reihenfolge für dasLauﬂicht auf dem LED-Feld programmieren.Zur Bestimmung der Bearbeitungsdauer der einzelnen Aufgaben (vgl.Abb. 1) wurde die Zeitgemessen, die entsprechend der Screencasts an der Lösung der Aufgabe verbracht wurde.Da die Aufgaben ohne Vorplanung lösbar waren und im Unterricht keine Planungszeitohne Aktivität am Computer beobachtet werden konnte, gehen wir davon aus, dass dieermittelten Bearbeitungszeiten in Tab.4ausreichend genau sind. Zu erkennen ist, dass dieBearbeitungsdauer mit ansteigendem Schwierigkeitsgrad zunehmend stärker variiert. Daslässt vermuten, dass die erste Aufgabe als Einstieg den meisten Kindern gerecht wurde.Die in einzelnen Fällen sehr geringe Bearbeitungszeit bei Aufgabe 2 ergibt sich daraus, dassnur wenige Teams den Baustein „Zeige Zeichenfolge“ benutzt haben. Die meisten Teamshaben jeden Buchstaben einzeln auf dem LED-Feld gezeichnet, womit diese Umsetzunglänger dauerte.Gut 87% der Teams waren während (mehr oder minder) der gesamten Bearbeitungszeit mitden Aufgaben beschäftigt. Die Teams, die nicht an der Lösung gearbeitet haben, schautensich an anderer Stelle des Editors um. Kein Team hat den Editor verlassen, andere Programmeaufgerufen oder die Arbeit am Computer komplett eingestellt.Informatikunterricht in der Grundschule mit Calliope 558 Kevin Baum, Nadine Kirsch, Kerstin Reese, Pascal Schmidt, Lukas Wachter, Verena WolfAbb. 1: Dauer der erfolgreichen Bearbeitung für jede AufgabeDie 4. Aufgabe bestand aus drei Teilaufgaben, die grundsätzlich in beliebiger Reihenfolgeabgearbeitet werden konnten:Teilaufgabe 1:Dauerhaft blinkendes Muster auf dem LED-FeldTeilaufgabe 2:Wenn Knopf A gedrückt wird, werden 3 verschiedene Töne gespieltTeilaufgabe 3:Wenn Knopf B gedrückt wird, werden 3 verschiedene Töne gespielt undder Ampelfarbverlauf (Rot, Gelb, Grün) dargestelltFast alle Teams bearbeiteten als erstes Teilaufgabe 1, die auch am häuﬁgsten korrekt gelöstworden ist (gut 60% aller Teams). Bei den Teilaufgaben 2 und 3 sank der Anteil dererfolgreichen Teams auf ca. ein Viertel.5.3 Beobachtungen während der Arbeit an den AbschlussaufgabenGelegentlich fehlten Teile des zu entwickelnden Algorithmus, wie z.B. das Ausschalten desLED-Felds am Ende des ersten Programms. Insbesondere bei Aufgabe 3 fehlte oft der ﬁnaleTon, da der Calliope mini nicht sehr laut piept. Es ﬁel einigen Kindern schwer, selbstständigneue Bausteine, wie z.B. den „dauerhaft“-Baustein für Aufgabe 4 oder den „Wenn Knopf Bgedrückt“-Baustein für Aufgabe 2, zu integrieren. Wir vermuten, dass dies an der Kürzeder Arbeit mit dem Editor lag und Probleme dieser Art mit zunehmender Übung seltenerauftreten dürften.56 Kevin Baum et al.Unterrichtsmodul mit Calliope mini 9Nur wenige Kinder verwendeten bei Aufgabe 3 auf Anhieb auch das Ausschalten desLED-Felds, um es zum Blinken zu bringen. Fast alle versuchten das Blinken mit dem„Pausiere“-Baustein umzusetzen. Dies wurde möglicherweise durch die Programmierungder Ampel in der Einführung begünstigt, bei der man diesen Baustein benötigt. Zudemkönnte der Bezeichner dazu geführt haben, dass die Kinder in den „Pausiere“-Bausteineine andere Semantik hinein interpretierten ("tue eine Zeit lang nichts"), von der sie auchnur schwer abzubringen waren. Die Verwendung eines leeren „Zeige LEDs“-Bausteins inVerbindung mit dem „Pausiere“-Baustein überzeugte die Kinder deutlich mehr.6 Fazit und abschließende WorteDie Ergebnisse der Studie zeigen einerseits die geringen Vorkenntnisse der interviewtenSchülerInnen und o enbaren zugleich das Potential kindgerechter reaktiver Informatiksyste-me – hier in Form des Calliope mini – für das Erlernen informatischer Grundprinzipien.Ein Großteil der 137 TeilnehmerInnen verschiedener Schulen in unterschiedlichen Einzugs-gebieten hatte bislang allenfalls rudimentäres Vorwissen über Informatiksysteme. Eineadäquate Vorstellung der Funktionsweise des EVA-Prinzips konnte nahezu überhaupt nichtfestgestellt werden.Die Ergebnisse der abschließenden Programmierarbeit zeigen, dass die Kinder mit deneinfachen EVA-Problemstellungen, wie sie in den Aufgaben 1-3 zu lösen waren, kaumProbleme hatten. Dies zeigt auch, dass sie im Laufe der Unterrichtseinheit die Kompe-tenz erworben haben, mit elementaren Programmierelementen und dem Editor sinnvollumzugehen. Die 4. Aufgabe erforderte eine Zerlegung in überschaubare Teilprobleme,also eine durchaus fortgeschrittene Kompetenz des "computional thinking". Insofern istes bewerkenswert, dass neun Teams (ca. 14%) diese Aufgabe vollständig korrekt lösenkonnten und fast alle anderen Teams immerhin korrekte Teilergebnisse bei der Wahl derEin-Ausgabe-Bausteine und der Deﬁnition der Sequenzen angeben konnten.Insgesamt ziehen wir hieraus das Fazit, dass SchülerInnen der 4. Klasse in der Lage sind,einfache Beispiele für das EV A-Prinzip zu verstehen und in einem konkreten Informatiksys-tem zu implementieren – wie es auch [Sc01] aus kognitionspsychologischer Sicht bestätigt.Der Calliope mini stellte sich als gutes Hilfsmittel zur Entmystiﬁzierung solcher Systemeheraus und ist den Ergebnissen der Studie nach zu urteilen als didaktisches Informatiksystemzum Einsatz in der Primarstufe geeignet. Zu sehr ähnlichen Schlussfolgerungen kommtauch eine Studie von Murmann et al. (vgl. [Mu18]), in der ebenfalls Unterrichtseinheitenfür Calliope mini entworfen und durchgeführt worden sind. Während der Bremer Fokus aufBeobachtungen und Befragungen der Kinder lag, die mit den Calliope minis arbeiteten,beinhaltet unsere Studie auch die Auswertung eines Abschlusstests und fokussiert damitauch die Performanz der SchülerInnen. Eine weitere Studie mit der ProgrammierspracheScratch ﬁndet sich in [FGH17].Abschließend möchten wir einige persönliche Eindrücke schildern: Viele Lehrkräfte warenim Vorfeld skeptisch und zeigten gegenüber den Geräten Berührungsängste. Manchekonnten sich kaum vorstellen, dass ihre SchülerInnen im Umgang mit den MinicomputernInformatikunterricht in der Grundschule mit Calliope 5710 Kevin Baum, Nadine Kirsch, Kerstin Reese, Pascal Schmidt, Lukas Wachter, Verena Wolfetwas Sinnvolles lernen könnten. Die Unterrichtseinheit hat dieses Bild deutlich verändert,weil sie den Kindern Spaß machte und ihre Ergebnisse die Erwartungen der Lehrkräfteschon nach kurzer Zeit deutlich übertrafen – eine Erkenntnis, die bei möglichst vielenGrundschullehrkräften erreicht und gefestigt werden muss.DanksagungWir danken Ludger Humbert (Universität Wuppertal), der uns in derVorbereitungsphase für die Studie unterstützt hat. Ebenso danken wir den beteiligtenLehrerInnen und SchülerInnen für ihre Bereitschaft, an der Studie teilzunehmen.Literatur[Be18]Best, A.; Borowski, C.; Büttner, K.; Freudenberg, R.; Fricke, M.; Haselmei-er, K.; Herper, H.; Hinz, V.; Humbert, L.; Müller, D.; Thomas, M.: Kompeten-zen für informatische Bildung im Primarbereich. LOG IN 38/189/190, S. 1–36,2018.[FGH17]Funke, A.; Geldreich, K.; Hubwieser, P.: Analysis of scratch projects of anintroductory programming course for primary school students. In: IEEE GlobalEngineering Education Conference (EDUCON). S. 1229–1236, Apr. 2017.[HWW17]Ho mann, S.; Wendlandt, K.; Wendlandt, M.: Algorithmisieren im Grund-schulalter. In: Informatische Bildung zum Verstehen und Gestalten der digitalenWelt. Gesellschaft für Informatik, Bonn, S. 73–82, 2017.[LP17]LPM: Bildungsminister Commerçon stellt Landeskonzept Medienbildung undFörderprogramm für Medienschulen vor, 2017,   :https://www.lpm.uni-sb.de/typo3/index.php?id=2092&tx_ttnews%5Btt_news%5D=679&cHash=fc7e178c61bb18f79092d46e441cccf0&L=0, Stand: 18. 05. 2019.[Ma02]Mayring, P.: Einführung in die qualitative Sozialforschung. Beltz, 2002.[Mi]Microsoft: MakeCode,   :makecode.calliope.cc, Stand: 18. 05. 2019.[Mo]Modular Robotics: Cubelets,   :www.modrobotics.com, Stand: 18. 05. 2019.[Mu18]Murmann, P. D. L.; Schelhowe, P. D. H.; Bockermann, D. I.; Engelbertz, S.; Ill-ginnis, S.; Moebus, A.: Calliope mini - Eine Explorationsstudie im pädagogisch-didaktischen Kontext, Abschlussbericht, 2018,   :https://elib.suub.uni-bremen.de/edocs/00106848-1.pdf, Stand: 18. 05. 2019.[Op]Open Broadcaster Software: OBS Studio,   :https://obsproject.com,Stand: 18. 05. 2019.[Sc01]Schwill, A.: Ab wann kann man mit Kindern Informatik machen? - Eine Studieüber informatische Fähigkeiten von Kindern. In: Informatikunterricht undMedienbildung. INFOS ’01, GI, S. 13–30, 2001.[ST11]Starruß, I.; Timmermann, B.: Informatische Bildung in Deutschland. LOG IN31/1, S. 49–59, 2011.58 Kevin Baum et al.Arno Pasternak (Hrsg.): INFOS 2019,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1 Bild der Informatik von Grundschullehrpersonen Ergebnisse eines mehrjährigen Projekts zu informatikbezogenen Vorstellungen Alexander Best1 Abstract: Grundschullehrpersonen (n=11) wurden mittels leitfadengestützter Einzelinterviews zu ihren Vorstellungen zur Informatik und zum Informatikunterricht befragt. Die Analyse der Transkripte deckte vier Sichtweisen auf Informatik auf: eine mathematische, mediengeprägte, gesellschaftliche und technische. Die Lehrpersonen gehen von einer dichotomen Einteilung in Informatik-Insider sowie Informatik-Outsider aus und haben eine funktional geprägte Sichtweise auf digitale Artefakte (black box). Informatiksysteme nehmen einen hohen Stellenwert ein; es werden aber auch Unplugged-Ansätze expliziert. Fachliche Vorstellungen beschränken sich auf sämtliche GI-Prozessbereiche und die GI-Inhaltsbereiche INFORMATION UND DATEN, ALGORITHMEN sowie INFORMATIK, MENSCH UND GESELLSCHAFT. Der Kontakt mit Informatik entstand in der eigenen Schulzeit, Freizeit, im Studium oder beruflichen Umfeld und führte zu unterschiedlichen biografischen Zugängen. Das selbstständige Unterrichten einer informatischen Unterrichtseinheit führte bei Lehrpersonen (n=3) sowohl zur Vorstellungsänderung (conceptual change) als auch Vorstellungsbeständigkeit und -resilienz (belief perseverance oder conceptual conservatism bzw. robustness), welche in abschließenden Einzelinterviews erhoben wurden. Keywords: Informatik in der Grundschule; Primarbildung; Bild der Informatik; Lehrervorstellungen; Einzelfallstudien; Leitfadeninterviews; Grounded Theory 1 Einleitung Das Projekt „Informatik in der Grundschule (IGS)“ am Arbeitsbereich Didaktik der Informatik der WWU Münster wurde 2014 initiiert und an ein Dissertationsvorhaben gekoppelt. Die Forschungsfragen lauten: RQ1 Welche biografischen Bezüge zur Informatik und zum Informatikunterricht werden von Grundschullehrpersonen assoziiert? RQ2 Welche zentralen Begriffe der Informatik sind nach Auffassung der Lehrpersonen für die Grundschule von Bedeutung; warum sind sie es und wie sind diese ihrer Ansicht nach inhaltlich belegt? RQ3 Wo begegnen Kinder im Grundschulalter nach Ansicht der Grundschullehrpersonen Informatik in ihrem Alltag?                                                         1 Westfälische Wilhelms-Universität Münster, Didaktik der Informatik, Corrensstraße 80, 48149 Münster, alexander.best@uni-muenster.de cba doi:10.18420/infos2019-06Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 59 2 Alexander Best RQ4 Welche implizit-unbewussten informatikbezogenen Vorstellungen manifestieren sich beim Unterrichten einer informatischen Unterrichtseinheit und inwiefern kommt es hierbei zu Vorstellungsänderung, -beständigkeit und/oder -resilienz? Auf der INFOS 2015 wurden erste Forschungsergebnisse vorgestellt, welche durch einen hypothesenprüfenden Zugang mittels eines Fragebogens gewonnen wurden [BM15]. Grundlage bildete ein Datensatz von 27 Lehrpersonen des Faches Sachunterricht an 13 Grundschulen. Auf der INFOS 2017 wurden Zwischenergebnisse vorgestellt, die über einen hypothesengenerierenden Zugang mittels leitfadengestützter Einzelinterviews gewonnen wurden [Be17]. Grundlage bildeten zwei kontrastierende Einzelfälle. In diesem Beitrag werden die abschließenden Ergebnisse des Vorhabens vorgestellt, welche zwischen 2014 und 2019 gewonnen wurden. Die Datenerhebung war auf Grundschulen in öffentlicher Trägerschaft im Regierungsbezirk Münster (NRW) beschränkt. Die Population besteht aus 6.469 Lehrpersonen (♂=534) an 411 Schulen2. 2 Forschungsstand Lehrpersonen besitzen sowohl fachliche, allgemeindidaktische als auch fachdidaktische Kenntnisse. Besonders Shulman zeigte in seinen Arbeiten, dass Drittes als „besonderes Amalgam“ dient, um Erstes und Zweites zu verknüpfen [Sh87]. Hierauf basierend entwickelte Ernest ein Modell für die Mathematikdidaktik, in dem er neben Kenntnissen (knowledge) auch Vorstellungen (beliefs) und Einstellungen (attitudes) von Lehrpersonen als bedeutsame Faktoren für professionelles Handeln herausstellte und in Anlehnung an Thompsons Vorarbeiten drei Sichtweisen auf Mathematik auswies: problem-solving view, Platonist view und instrumentalist view [Er89]. Das Interesse der Forschung an Lehrervorstellungen stieg zunehmend und erhielt mit Pajares Aufsatz „Teachers' Beliefs and Educational Research: Cleaning Up a Messy Construct“ von 1992 ein Manifest, welches die multidisziplinären Ergebnisse und Erkenntnisse bündelte und systematisierte. Für die Fachdidaktik Informatik gelangt Bender zu zahlreichen „professionellen Überzeugungen“3 von Informatiklehrpersonen [Be16]. Lewis, Jackson und Waite zeigen, dass sich Vorstellungen und Einstellungen von Hochschuldozierenden (faculty) und Studierenden (students) gleichen, unterscheiden, annähern und auseinanderentwickeln [LJW10]. Dengel weist in einer Studie mit 116 Informatiklehrpersonen an unterschiedlichen Schulformen der Sekundarstufe nach, dass eine Mehrheit frühe informatische Bildung sowohl für möglich als auch sinnig erachtet [De17]. Funke, Geldreich und Hubwieser führten eine Studie mit sechs Grundschullehrpersonen (♀=5) durch [FGH16]. In dieser kommen sie zum Ergebnis, dass die interviewten Lehrpersonen zwar über „kein konkretes Bild der Informatik in der                                                         2 Angaben laut Statistischem Landesamt NRW, Landesdatenbank-Codes B-D06.1-I1 und B-D09.1-I1, Schuljahr 2017/18. Angaben exklusive PRIMUS-Schulen, Freie Waldorfschulen und sonstige Privatschulen. 3 Kirchner weist darauf hin, dass die Begriffe „Überzeugung“ sowie „Vorstellung“ in der Bildungsforschung weitestgehend synonym verwendet werden und empfiehlt die Verwendung des letzteren [Ki16]. 60 Alexander Best Bild der Informatik von Grundschullehrpersonen 3 Grundschule“, jedoch über einige förderliche Vor- und Einstellungen verfügen [FGH16]. Die Ergebnisse decken sich mit denen der auf der INFOS 2015 und 2017 vorgestellten Beiträge [BM15], [Be17]. Die Veränderbarkeit, Beständigkeit bzw. Resilienz sowie Differenzierung in bewusste und unbewusste Lehrervorstellungen stellen bislang ein Forschungsdesiderat der Fachdidaktik Informatik für sämtliche Bildungsbereiche dar. 3 Theoretischer Rahmen Kirchner definiert: „Lehrervorstellungen sind subjektive, relativ stabile, wenngleich erfahrungsbasiert veränderbare, zum Teil unbewusste, kontextabhängige Kognitionen von Lehrpersonen. Sie umfassen die theorieähnlichen, wenn auch nicht widerspruchsfreien Gedanken zu verschiedenen fächerübergreifenden und fachspezifischen Gegenstandsbereichen der Profession von Lehrpersonen.“ [Ki16]. Eine Übersicht weiterer Definitionen geben Fives und Buehl [FB12]. Über Anteile von Affektion, Motivation und Volition an Vorstellungen sowie deren Wechselwirkung mit weiteren mentalen Merkmalen, etwa Einstellungen, wird derzeit aktiv geforscht. 3.1 Eigenschaften von Lehrervorstellungen Aus den Katalogen von Pajares, Fives und Buehl sowie Kirchner lassen sich folgende Eigenschaften zusammentragen [Pa92], [FB12], [Ki16]: Lehrervorstellungen können (1) explizit, also bewusst, oder implizit, also unbewusst, sein, (2) fungieren als Filter auf die Wahrnehmung, (3) haben individuelle Bedeutung und Funktion im Vorstellungssystem4, (4) sind entgegen wissenschaftlicher Theorien weder zwingend logisch noch widerspruchsfrei, (5) haben Einfluss auf das Verhalten von Lehrpersonen inner- und außerhalb des Unterrichts, (6) haben Einfluss auf die Lernprozesse von Schülerinnen und Schülern5 sowie deren Vorstellungen, (7) lassen sich nicht distinkt von Wissen trennen und (8) sind kontextuell. Die Mehrheit der Forscher geht davon aus, dass Lehrervorstellungen veränderbar sind, jedoch leicht und schwer veränderbare Vorstellungen existieren. Zwei Kriterien hierfür stellen die Zeitspanne sowie Relevanz oder Zentralität einer Vorstellung im Vorstellungssystem dar. 3.2 Systematisierung von Lehrervorstellungen Taxonomien lassen sich u. a. bei Fives und Buehl, Kunter und Pohlmann sowie Calderhead finden:                                                         4 Bryan definiert: „Belief systems are groups of beliefs that, unlike knowledge systems, do not require general consensus. They are relatively static, and when they change it is not because of sound reasoning but more likely because of a »conversion or gestalt shift«“ [Br03] in Anlehnung an Nespor. 5 „Schülerinnen und Schüler“ bzw. „Schülerinnen und Schülern“ wird im Folgenden mit SuS abgekürzt. Bild der Informatik von Grundschullehrpersonen 61 4 Alexander Best Domänen von Lehrervorstellungen nach...Fives und Buehl [FB12] • Selbst • Kontext oder Umgebung • Inhalt oder Wissen • spezifische Unterrichtskonzepte • Lehransätze • Lernende Kunter und Pohlmann [KP15] • Selbst • bestimmte SuS • Lehren und Lernen Calderhead [Ca96] • Selbst und die Lehrerrolle • Lernende und das Lernen • Lehren • Lernen zu Lehren • Fach  Für die Fachdidaktik Informatik gelangt Bender zu folgender Systematisierung [Be16]: (1) Lehr-lerntheoretische und epistemologische Überzeugungen in Bezug auf Informatik, (2) Überzeugungen in Bezug auf den Umgang mit Daten und (3) Überzeugungen zum Lernen im Kontext von Strategien und Prinzipien. 4 Methodik und Methodologie Die Ergebnisse des auf der INFOS 2015 vorgestellten Beitrags zeigen große Unsicherheiten bei den Lehrpersonen, sich deduktiv vorgegebenen Aussagen über Informatik und Informatikunterricht zuzuordnen [BM15]. Fischler problematisiert: „Fragebogen besitzen nicht die Flexibilität, die notwendig ist, um situationsbezogene Vorstellungen so auszuloten, dass der Zusammenhang von erklärten Handlungszielen und darauf abgestimmten Handlungen sichtbar wird. Außerdem öffnen sie durch die Vorgabe von Begriffen, über deren Bedeutung im Falle verschiedener Interpretationen wegen Fehlens eines Dialogs zwischen Fragendem und Befragtem kein Konsens hergestellt werden kann, ein weites Feld möglicher Missverständnisse.“ [Fi01]. Methodologischer Rahmen für die Neuausrichtung des Vorhabens bildete die Grounded Theory (GT), welche bereits in mehreren Arbeiten der Fachdidaktik Informatik erfolgreich genutzt werden konnte [Kn11], [Mü17]. Die Wahl des Datenerhebungsinstruments fiel auf das leitfadengestützte Einzelinterview. Es zeichnet sich über den Einsatz eines Gesprächsleitfadens und sogenannter Check-Up-Fragen durch ein mittleres Maß an Strukturiertheit aus, was besonders Novizen den Einstieg in die Interviewführung erleichtert. Die Interviews wurden digital-auditiv aufgezeichnet und mittels Regelsets transkribiert sowie pseudonymisiert. Daran schloss sich die Analyse der Transkripte über das dreischrittige Kodier-Schema der GT an: offene, selektive und axiale Kodierung. Die Zusammensetzung der Stichprobe (sample) erfolgte mittels theoretischem Sampling. Hierfür wurden nach Auswertung eines Interviews Lehrpersonen identifiziert, die das Potential kontrastiver (maximale Ausprägung) oder ähnlicher (minimale Ausprägung) Vorstellungen vermuten ließen. Grundlage für diese Auswahl bildeten zumeist quantitative Daten, die zuvor mittels eines 62 Alexander Best Bild der Informatik von Grundschullehrpersonen 5 Interviewakquisebogens erhoben wurden. Neben diesem Zugriff auf die expliziten Vorstellungen der Lehrpersonen sollte auch eine Erhebung der impliziten Vorstellungen erfolgen.6 Als eine Möglichkeit, auf Letztere zuzugreifen, schlagen Fives und Buehl vor, (geplantes) Verhalten und Gespräche der Lehrpersonen zu beobachten und auf zugrundeliegende Vorstellungen zu schließen (infer) [FB12]. Einige der zuvor interviewten Lehrpersonen (n=3) erklärten sich bereit, eine informatische Unterrichtseinheit unter Hospitation des Forschers durchzuführen und anschließend an einem Abschlussinterview teilzunehmen. Während der Hospitation wurde ein Protokoll angefertigt. Die Durchführung und Auswertung der Abschlussinterviews gestaltete sich analog zu den Eingangsinterviews. 5 Vorstellungen von Grundschullehrpersonen zur Informatik Es zeigten sich vier Sichtweisen auf Informatik, die nur geringe Überschneidungen bei den interviewten Lehrpersonen aufwiesen. Eine Sonderrolle kommt der mediengeprägten Sichtweise zu, denn der Medienbegriff wurde von zahlreichen Lehrpersonen zur Kompensation fehlender Fachlichkeit oder Fachsprache situationsbezogen herangezogen, auch wenn sie nicht genuin dieser Sichtweise zugeordnet werden können. Mediengeprägte Sichtweise: Informatik ist für diese Lehrpersonen eng mit Informatiksystemen verknüpft. Diese nehmen jedoch in ihren Vorstellungen unterschiedliche Funktionen ein: Für manche Lehrpersonen führt bereits die Nutzung von Informatiksystemen zur Assoziation mit Informatik, wobei sie sich stark auf den Medienbegriff stützen.7 Andere erwarten eine Gestaltungs- oder Bewertungskomponente. Mathematische Sichtweise: Diese Lehrpersonen zeigen im Interview Parallelen zwischen Informatik und Mathematik auf. Insbesondere der Algorithmenbegriff nimmt für sie eine wichtige Funktion ein. Rechenstrategien oder die Auseinandersetzung mit Sachaufgaben werden mit diesem verknüpft. Eine Lehrerin sieht sich durch die Teilnahme am Informatik-Biber in ihrer diesbezüglichen Vorstellung bestätigt. Technische Sichtweise: Diese Lehrpersonen verbinden mit Informatik eine strukturelle Perspektive auf digitale Artefakte [Sc08], bei der sie sich auf Hardware- (bspw. Datenspeicher) oder Softwarekomponenten (bspw. algorithmische Grundbausteine) beziehen. Insbesondere Datenspeicherung, -sicherheit und -schutz werden von ihnen                                                         6 Fives und Buehl stellen fest: „We contend that teachers hold both implicit and explicit beliefs that influence their teaching practice. Attempts to access teachers’ implicit beliefs may well bring these conceptions into the explicit realm, thereby changing the nature of the beliefs under examination.“ [FB12]. 7 Dies deckt sich mit Borowskis Aussage: „Es gibt zwei entscheidende Gründe, warum sich ein Ansatz der Informatik in der Grundschule mit der Medienbildung und Medienpädagogik auseinandersetzen muss. Der eine besteht darin, dass bei Lehrerinnen und Lehrern häufig informatische Bildung und Medienbildung synonym benutzt wird.“ [Bo14]. Bild der Informatik von Grundschullehrpersonen 63 6 Alexander Best genannt. Besonders der GI-Inhaltsbereich INFORMATION UND DATEN wird von diesen Lehrpersonen mit Informatik assoziiert. Während der Datenbegriff aus dem Mathematikunterricht bekannt ist, wird Information meist mit der sogenannten „Informationsrecherche“ im Netz assoziiert. Gesellschaftliche Sichtweise: Informatik setzt sich für diese Lehrpersonen mit Fragen der Auswirkungen auseinander, die durch die zunehmende gesellschaftliche Durchdringung mit Informatiksystemen entstehen. Die Einstellungen der Lehrpersonen sind durchaus differenziert und reflektiert („keine Rose ohne Dornen“). Sie gehen davon aus, dass sowohl förderliche als auch gefährdende Auswirkungen existieren. Genanntes Beispiel für Erstes bildet der Einsatz von Informatiksystemen in der Medizin, die Vernichtung von Arbeitsplätzen im Niedriglohnsektor durch die Automatisierung von Abläufen für Letztes. Obwohl die interviewten Lehrpersonen ähnliche Biografien aufweisen, hat der Kontakt mit Informatik sie unterschiedlich geprägt und zu unterschiedlichen Vorstellungen geführt, welche wiederum unterschiedliche Funktion im informatischen Vorstellungssystemen einnehmen. Dies gilt insbesondere für Lehrpersonen, die Informatikunterricht in der eigenen Schulzeit belegten. Während eine Lehrperson bereits Überlegungen angestellt hatte, wie sie Themen aus ihrem damaligen Informatikunterricht auf den Unterricht in der Grundschule übertragen könne, führte bei einer anderen Lehrperson der eigene, als negativ empfundene, Informatikunterricht dazu, dass Informatik im Studium, im Referendariat und auch im Berufsalltag gemieden wurde und weiterhin wird. 6 Vorstellungen von Grundschullehrpersonen zum Informatikunterricht Informatische Bildung, im Sinne der Vorstellungen der Lehrpersonen zur Informatik, wird als bedeutsam für die Primarstufe und darüber hinaus auch für die Lebens- und zukünftige Berufswelt der SuS erachtet. Der Ort bzw. die Form informatischer Bildung zeichnet sich hierbei jedoch sehr heterogen ab: (1) eigenständiges Fach, (2) fächerintegriert in mehrere Fächer, (3) fachintegriert in ein Fach oder (4) Arbeitsgemeinschaft/Neigungsgruppe. Die Lehrpersonen gehen davon aus, dass SuS bereits über das Elternhaus und peer-groups informatikaffin oder nicht-informatikaffin sind. Sie sehen eine Verstärkung dieser Differenzierung in Informatik-Insider und Informatik-Outsider [Kn11] mit zunehmendem Alter. Sie gehen davon aus, dass Jungen höheres Interesse an Informatik haben als Mädchen. Eine Lehrperson differenzierte hier jedoch zwischen einer qualitativen und quantitativen Begegnung mit Informatiksystemen, die bei Jungen häufig in den letztgenannten Bereich falle. Die Lehrpersonen sind überzeugt, dass genderspezifischen Sozialisationseffekten zur Informatik in den unteren Klassen der Grundschule oder gar in der Elementarbildung 64 Alexander Best Bild der Informatik von Grundschullehrpersonen 7 entgegengewirkt werden müsse. Informatikunterricht wurde von sämtlichen Lehrpersonen mit kooperativen Sozial- und Aktionsformen assoziiert. 7 Ergebnisse Zu RQ1: Der Bezug zur Informatik sowie zum Informatikunterricht entsteht überwiegend in der eigenen Schulzeit. Dies geschieht entweder durch die Wahl, Abwahl oder Nicht-Wahl des Informatikunterrichts. Die durch den Informatikunterricht gewonnenen Vorstellungen sind häufig durch einen Theorie-Praxis-Konflikt gekennzeichnet. Zudem beschränken sich diese meist auf einzelne Werkzeuge oder Gegenstände („Programmiersprache C“, „Diskettenlaufwerk“ etc.). Die Einstellungen der Lehrpersonen gegenüber dem Informatikunterricht in der Sekundarstufe sind negativ oder indifferent, was jedoch nur bei einer Lehrperson zur Ablehnung informatischer Bildung in der Grundschule führt. Zu RQ2: Insbesondere die GI-Prozessbereiche sehen die Lehrpersonen als bedeutsam für die Primarbildung an. Mehrfach äußern sie jedoch Befürchtungen, dass, etwa im Fall von BEGRÜNDEN UND BEWERTEN, eine Überforderung der SuS eintreten könne. DARSTELLEN UND INTERPRETIEREN sowie STRUKTURIEREN UND VERNETZEN werden häufig auf den Einsatz von Informatiksystemen zur Unterstützung von Lernprozessen beschränkt. Die Lehrpersonen beziehen sich auf die GI-Inhaltsbereiche ALGORITHMEN, INFORMATION UND DATEN sowie INFORMATIK, MENSCH UND GESELLSCHAFT, deren Bedeutung für die Primarbildung je nach Sichtweise unterschiedlich gewichtet wird. Lediglich Lehrpersonen, die der mediengeprägten Sichtweise zugeordnet werden können, haben bei der Erläuterung der GI-Inhaltsbereiche durchgängig Schwierigkeiten, da ihnen hier der Medienbegriff fehlt. Vorstellungen zu INFORMATIKSYSTEME sowie SPRACHEN UND AUTOMATEN existieren nicht – zumindest nicht unter diesen Bezeichnungen. Die Relevanz der GI-Kompetenzbereiche wird anhand des (1) Alltagsbezugs, (2) des Allgemeinbildungsanspruchs und (3) der Berufsvorbereitung festgemacht. Zu RQ3: Der Kontakt von Kindern mit Informatik wird von den interviewten Lehrpersonen überwiegend über Informatiksysteme wahrgenommen. Hierzu zählt sowohl der bewusste Kontakt (Phänomenbereich 1), aber auch der unbewusste Kontakt (Phänomenbereich 2) [HP04]. Insbesondere diejenigen Lehrpersonen, die eine mathematische Sichtweise einnehmen, gehen auch auf Kontakte der SuS zur Informatik ohne Informatiksysteme (Phänomenbereich 3) ein. Mit zunehmendem Alter wird ein häufigerer und bewussterer Kontakt von SuS mit Informatik wahrgenommen. Darüber hinaus sind die Lehrpersonen der Ansicht, dass genderspezifische Sozialisationseffekte in den unteren Klassen der Grundschule weniger stark ausgeprägt seien und eine informatische Bildung deshalb bereits hier einsetzen müsse. Zu RQ4: Die Hospitationen (n=3) zeigen, dass die Lehrpersonen ihre zuvor in den Interviews explizierten Vorstellungen auch auf Handlungen und Gespräche im Bild der Informatik von Grundschullehrpersonen 65 8 Alexander Best Unterricht übertragen. Vorstellungsänderungen treten insbesondere bei denjenigen Lehrpersonen auf, die eine starke Verknüpfung zwischen Informatik und Informatiksystemen in den Interviews explizieren und eine Unplugged-Einheit unterrichten. Eine Lehrperson mit hoher Berufserfahrung zeigt erkennbare Vorstellungsbeständigkeit bzw. –resilienz; obwohl sie die Durchführung einer Unplugged-Unterrichtseinheit zur Kryptologie als motivierend für die SuS erachtet, hält sie an ihrer Vorstellung fest, dass Informatikunterricht zu theoriegeladen sei. 8 Implikationen Anders als bislang vermutet, verfügen die interviewten und beobachteten Grundschullehrpersonen über heterogene informatikbezogene Vorstellungen. Eine Gefahr besteht darin, dass die Lehrpersonen selektiv informatische Inhalte oder Prozesse aufgreifen, die ihre Vorstellungen bestätigen, und solche, die ihren Vorstellungen widersprechen, zurückzuweisen. Lehrpersonen mit einem noch sehr vagen und undifferenzierten Bild der Informatik neigen dazu, spezifische Themen der Informatik als umfassend aufzufassen. Dies könnte dazu führen, dass Informatik bspw. mit Programmierung oder Kryptologie gleichgesetzt wird. Folgende Empfehlungen können aus den gewonnenen Erkenntnissen abgeleitet werden: Initiativen für die tertiären und quartären Bildungsbereiche sollten... (1)sämtliche GI-Prozessbereiche und GI-Inhaltsbereiche abdecken, sodass ein differenziertes Bild der Informatik vermittelt werden kann. (2)förderliche Vorstellungen zur Informatik, etwa den Bezug zu Algorithmen über Ablaufbeschreibungen, Anleitungen und Rätsel, aufgreifen, um die Wahrnehmung für Unplugged-Ansätze zu sensibilisieren. (3)für eine vorgeschaltete, formative, summative und nachbereitende Evaluation informatikbezogener Vorstellungen genutzt werden. (4)Ansätze und Methoden, welche auf die „Diskreditierung“ resilienter Vorstellungen ausgelegt sind, überprüfen. 9 Ausblick Erste Ergebnisse und Erkenntnisse konnten im Grundschullehramtsseminar „Digitale Medien und informatische Bildung (DiMeiB)“ an der WWU Münster integriert werden. In Zukunft sollen vorhandene, sich verändernde und beständige bzw. resiliente Vorstellungen in den Fokus genommen werden. Zudem wird die Forschung auf weitere Regierungsbezirke ausgeweitet und zu einem Mixed-Methods-Ansatz erweitert. 66 Alexander Best Bild der Informatik von Grundschullehrpersonen 9 10 Literaturverzeichnis [Be16] Bender, E.: Modellierung und Dimensionierung der professionellen Überzeugungen und motivationalen Orientierungen als Aspekte professioneller Kompetenz von Informatiklehrkräften. Kumulative Dissertation, Paderborn, 2016. [Be17] Best, A.: Bild der Informatik von Grundschullehrpersonen. Erste Ergebnisse aus qualitativen Einzelfallstudien. In (Diethelm, I. Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt. Köllen Druck+Verlag, Bonn, 2017; S. 83–86. [BM15] Best, A.; Marggraf, S.: Das Bild der Informatik von Sachunterrichtslehrern. Erste Ergebnisse einer Umfrage an Grundschulen im Regierungsbezirk Münster. In (Gallenbacher, J. Hrsg.): Informatik allgemeinbildend begreifen. Köllen Druck+Verlag, Bonn, 2015; S. 53–62. [Bo14] Borowski, C.: Thesen zur Informatik in der Grundschule. https://www.grundschulinformatik.de/thesen-zur-informatik-in-der-grundschule/, 18.05.2019. [Br03] Bryan, L. A.: Nestedness of beliefs: Examining a prospective elementary teacher's belief system about science teaching and learning. In Physical Review Special Topics - Physics Education Research, 2003, 40; S. 835–868. [Ca96] Calderhead, J.: Teachers: Beliefs and Knowledge. In (Berliner, D. C.; Calfee, R. C. Hrsg.): Handbook of educational psychology. Macmillan Library Reference USA, New York, 1996; S. 709–725. [De17] Dengel, A.: Opinions of CS Teachers in Secondary School Education about CS in Primary School Education. In (Barendsen, E.; Hubwieser, P. Hrsg.): Proceedings of the 12th Workshop in Primary and Secondary Computing Education. ACM Press, New York, 2017; S. 97–98. [Er89] Ernest, P.: The Knowledge, Beliefs and Attitudes of the Mathematics Teacher: a model. In Journal of Education for Teaching, 1989, 15; S. 13–33. [FB12] Fives, H.; Buehl, M. M.: Spring cleaning for the “messy” construct of teachers’ beliefs. What are they? Which have been examined? What can they tell us? In (Harris, K. R.; Graham, S.; Urdan, T. Hrsg.): APA Educational Psychology Handbook. Volume 2. Individual Differences and Cultural and Contextual Factors. American Psychological Association, Washington (D.C.), 2012; S. 471–499. Bild der Informatik von Grundschullehrpersonen 67 10 Alexander Best [FGH16] Funke, A.; Geldreich, K.; Hubwieser, P.: Primary School Teachers’ Opinions about Early Computer Science Education. In (Sheard, J.; Suero Montero, C. Hrsg.): 16th Koli Calling International Conference on Computing Education Research. Koli Calling 2016. ACM Press, New York, 2016; S. 135–139. [Fi01] Fischler, H.: Verfahren zur Erfassung von Lehrer-Vorstellungen zum Lehren und Lernen in den Naturwissenschaften. In Zeitschrift für Didaktik der Naturwissenschaften, 2001, 7; S. 105–120. [HP04] Humbert, L.; Puhlmann, H.: Essential Ingredients of Literacy in Informatics. In (Schubert, S.; Magenheim, J. Hrsg.): Informatics and Student Assessment. Concepts of Empirical Research and Standardisation of Measurement in the Area of Didactics of Informatics. Köllen Druck+Verlag, Bonn, 2004; S. 65–76. [Ki16] Kirchner, V.: Wirtschaftsunterricht aus der Sicht von Lehrpersonen. Eine qualitative Studie zu fachdidaktischen teachers’ beliefs in der ökonomischen Bildung. Springer VS, Wiesbaden, 2016. [Kn11] Knobelsdorf, M.: Biographische Lern- und Bildungsprozesse im Handlungskontext der Computernutzung. Dissertation, Berlin, 2011. [KP15] Kunter, M.; Pohlmann, B.: Lehrer. In (Möller, J.; Wild, E. Hrsg.): Pädagogische Psychologie. Springer, Berlin, 2015; S. 261–281. [LJW10] Lewis, C.; Jackson, M. H.; Waite, W. M.: Student and Faculty Attitudes and Beliefs About Computer Science. In Communications of the ACM, 2010, 53; S. 78–85. [Mü17] Müller, D.: Der Berufswahlprozess von Informatiklehrkräften. Überarbeitete Fassung der Dissertation, Universität Wuppertal, 2016. Universitätsverlag Potsdam, Potsdam, 2017. [Pa92] Pajares, M. F.: Teachers’ Beliefs and Educational Research: Cleaning Up a Messy Construct. In Review of Educational Research, 1992, 62; S. 307–332. [Sc08] Schulte, C.: Die duale Natur digitaler Artefakte als Kern Informatischer Bildung. In (Thomas, M.; Weigend, M. Hrsg.): Interesse wecken und Grundkenntnisse vermitteln. 3. Münsteraner Workshop zur Schulinformatik. ZfL-Verlag, Münster, 2008; S. 7–24. [Sh87] Shulman, L. S.: Knowledge and teaching: Foundations of the new reform. In Harvard Educational Review, 1987, 57; S. 1–22. 68 Alexander BestcbaArno Pasternak (Hrsg.): INFOS2019: Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 11Analyse von Curricula auf Abdeckung der Kompetenzen zurBildung in der digitalen WeltIra Diethelm1, Sebastian Glücks2Abstract:Die Kultusministerkonferenz hat Ende 2016 die Strategie zur Bildung in der digitalen Welt[Ku16] verabschiedet hat, mit der sich die Länder verpﬂichten dafür zu sorgen, dass Schüler*innenzum Ende ihrer Pﬂichtschulzeit 61 Kompetenzen besitzen. In dieser Studie wurden daher alle Curriculader Sekundarstufe I, die für niedersächsische Gymnasien im Schuljahr 2017/18 in Kraft waren, aufAbdeckung dieser Kompetenzen untersucht. Dabei wurde sowohl der Frage nachgegangen, welcheKompetenzen bereits jetzt in welchen Fachcurricula enthalten sind als auch, welche Kompetenzen sichvglw. leicht in Bezug auf die Unterrichtsthemen oder die Ausbildung der Lehrkräfte in welche Fächeraufnehmen ließen3. Die Rolle des Faches Informatik wird bei dieser Analyse sehr deutlich. Sie zeigt,dass mindestens ein Drittel der KMK-Kompetenzen keinem anderen Fach zuzuordnen sind und jenach Stundenumfang eine Aufnahme von bis zu zwei Dritteln der Kompetenzen in das Fach Informatiksinnvoll erscheinen. Die Analyse zeigt auch, welche anderen Fächer noch Potenzial aufweisen, welcheaber auch nicht, so dass hieraus gut abzulesen ist, welche Curricula überarbeitet werden sollten. Diehier erstellten Zuordnungen und Veränderungsvorschläge sollen keine bundesweite Empfehlung sein.Sie stellen nicht mehr und nicht weniger als eine erste Untersuchung dar. Sie können aber einenwertvollen Ausgangspunkt für Schulentwicklungsgespräche mit Kollegien und erste Orientierungfür andere Bundesländer und Schulformen sein und so helfen mit einem konstruktiven Prozess dieRelevanz der Informatik im Kollegium zu verdeutlichen.Keywords:Kompetenzen; digitale Welt; Curricula; Inhaltsanalyse; Rolle der Informatik1 Ausgangslage und FragestellungDer Bildungsauftrag der allgemeinbildenden Schulen ist, die Schülerinnen und Schüler zuder aktiven und mündigen Teilhabe an der Gesellschaft zu befähigen. Mit der fortschreitendenEntwicklung der digitalen Technologien steigen auch die Anforderungen an diejenigen,die mit ihnen umgehen müssen. Ein kompetenter Umgang mit diesen setzt somit denfundierten Erwerb entsprechender Kompetenzen voraus. Dazu zählt neben dem Wissenum die Verwendung auch ein Grundverständnis für die informatischen Grundlagen. Füreinen reﬂektierten Umgang mit Informatiksystemen und der Urteilsfähigkeit über siesind diese Aspekte gleichermaßen bedeutend. Da das Zurechtﬁnden in der digitalenWelt inzwischen als Kulturtechnik neben dem Lesen, Schreiben und Rechnen angesehenwird, ist in Bezug auf den allgemeinbildenden Schulunterricht festzuhalten, dass den1Carl von Ossietzky Universität, Didaktik der Informatik, 26111 Oldenburgira.diethelm@uol.de2Studienseminar Leer, Bürgerm.-Ehrlenholtz-Str. 15, 26789 Leer (Ostfriesland)sebastian.gluecks@uol.de3Dieser Artikel fasst die Masterarbeit [Gl18] zusammen, aus der viele Passagen z.T. wortwörtlich übernommensind. Aus Gründen der Lesbarkeit wurde auf die umfangreiche Kenntlichmachung verzichtet.cba doi:10.18420/infos2019-07Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 6912 Ira Diethelm, Sebastian GlücksSchülerinnen und Schülern während ihrer Schullaufbahn die benötigten Kompetenzenvermittelt werden müssen. Welche Kompetenzen dies genau sind, wurde schon vielfachdiskutiert. Die Gesellschaft für Informatik hat dazu bereits im Jahr 2008 Empfehlungen für dieSekundarstufe I ausgesprochen [Ge08]. Auch seien die Empfehlungen der Länderkonferenzder MedienBildung [LK15] und der europäische DIGCOMP [FPB13] exemplarisch fürsolche Kompetenzlisten genannt.Mit der Umsetzung der Strategie sollen laut KMK zwei wesentliche Ziele verfolgt werden:Das erste betri t die Integration der aufgestellten Kompetenzen in den Unterrichtsalltag.Es wird angestrebt, die digitalen Kompetenzen in die Unterrichtsfächer zu integrieren. Alszweites Ziel formuliert die KMK, dass digitale Lernumgebungen vermehrt pädagogischsinnvoll eingesetzt werden sollen. Auch dies erfordert einen abgestimmten Katalog anKenntnissen und Fähigkeiten der Schülerinnen und Schüler, auf den sich die Lehrkräftein den verschiedenen Fächern verlassen können, damit nicht in jedem Fach erneut erklärtwerden muss, wie man beispielsweise an einem gemeinsamen Dokument arbeitet.Den Anstoß für die hier vorliegende Untersuchung bildet die Anfrage eines niedersächsischenGymnasiums, das ein Schulkonzept für die digitale Bildung erarbeiten will. Dabei sollensowohl Pläne für die Infrastruktur und technische Ausstattung als auch für curriculareVorgaben entstehen. Ähnliche Schulentwicklungsprozesse beschäftigen seit Verö entlichungder KMK-Strategie viele Schulen bundesweit. Insofern ist die Anfrage der Schule nachentsprechenden Umsetzungskonzepten exemplarisch. Insbesondere stellen Schulen (undLänder) sich die folgenden zwei Fragen:1. Inwiefern sind die geforderten Kompetenzenjetzt schon in den Curricula enthalten?und2. Welche Fächer können bzw. sollten welcheKompetenzen in ihre Curricula aufnehmen?Die KMK-Strategie [Ku16] schreibt zur Verteilung der Kompetenzen auf die Fächer: „DieEntwicklung und das Erwerben der notwendigen Kompetenzen für ein Leben in einerdigitalen Welt gehen über notwendige informatische Grundkenntnisse weit hinaus undbetre en alle Unterrichtsfächer.“ Hier wird also festgestellt, dass es notwendige informatischeGrundkenntnisse gibt, die zum Leben in der digitalen Welt erforderlich sind. Es wird aberauch gefordert, dass alle Fächer ihren Beitrag leisten müssen. Welche Fächer aber genauwelchen Beitrag leisten müssen, wird im KMK-Dokument nicht speziﬁziert. Informatik istwie in Niedersachsen in vielen anderen Bundesländern kein Pﬂichtfach und erreicht daherdort nur einen Teil der Jahrgänge. Informatik kann daher in diesen Ländern zur Umsetzungdes für alle Schülerinnen und Schüler verpﬂichtenden Kompetenzkatalogs der KMK nureingeschränkt herangezogen werden. Die Frage nach der Verteilung der Kompetenzen istdamit auch eine Frage nach der Stellung des Schulfaches Informatik.Als erste Schritte auf dem Weg zu einer umfassenden Antwort auf diese Fragen wurde dahereine Analyse aller gültigen Kerncurricula Niedersachsen für Gymnasium und die Sekundar-stufe I. Dies entsprach einerseits dem Proﬁl der anfragenden Schule, und andererseits istdies genau der Bereich, in dem nach der ICILS13 [Bo14] die deutschen Schülerinnen undSchüler am besten abgeschnitten hatten. Daher ist anzunehmen, dass hier bei einer Analyse70 Ira Diethelm, Sebastian GlücksAnalyse von Curricula auf Abdeckung der KMK-Kompetenzen 13ggf. die größte Übereinstimmung zu ﬁnden wäre, falls die ICILS-Ergebnisse auf die Lehr-pläne zurückgeführt werden können. Die Analyse soll zum einen eine Bestandsaufnahmedavon sein, welche dieser Kompetenzen bereits vermittelt werden müssen. Dazu werden imFolgenden das Vorgehen und die Ergebnisse beispielhaft am Fach Informatik und einemweiteren Fach dargestellt. Zum anderen werden mögliche Anpassungen vorgeschlagen, diedie Umsetzung der KMK-Strategie befördern würden.2 VorgehenEs wurden alle gymnasialen Kerncurricula der Sekundarstufe I Niedersachsens, die imSchuljahr 2017/18 in Kraft waren, zur Analyse herangezogen. Bei der Wahl der zu analysie-renden Fächer wurde keine weitere Einschränkung vorgenommen. Die Analyse wurde in denFächern auf die o ziellen Dokumente der Kerncurricula begrenzt und keine darüber hinausgehende Literatur zur Interpretation der Curricula (wie z.B. Schulbücher) herangezogen.Für jedes Fach entstand während der Analyse eine Tabelle, in der jeder Kompetenz derKMK-Strategie die passenden fachspeziﬁschen Kompetenzen zugeordnet wurden. Dabeiwurde in zwei Kategorien unterschieden. Zur so deﬁnierten „vollen Abdeckung“ zählt eineFachkompetenz, wenn diese nach Einschätzung der Autoren die Kompetenz zur digitalen Bil-dung vollständig umschließt. Dazu musste die folgende Frage mit „ja“ beantwortet werden:Wenn Schülerinnen und Schüler die betrachtete Fachkompetenz erworben haben, haben siedamit gleichzeitig auch die Kompetenz zur Bildung in der digitalen Welt erworben? Wurdediese Frage jedoch mit „nein“ beantwortet, wurde in abgeschwächter Form danach gefragt,ob wenigstens ein Teilaspekt der Kompetenz zur Bildung in der digitalen Welt erworbenwurde. Fachkompetenzen, für die diese Frage mit „ja“ beantwortet wurde, wurden in die„teilweise Abdeckung“ einsortiert. Zu diesen teilweise abdeckenden Fachkompetenzenwurden darüber hinaus Veränderungsvorschläge erarbeitet, durch deren Umsetzung einevollständige Abdeckung erreicht werden könnte. An dieser Stelle verschwimmt bereits dieErgebnisdarstellung mit der Deutung, da es sich bei den Veränderungsvorschlägen bereitsum Schlussfolgerungen aus der Analyse handelt. Diese Darstellung wurde gewählt, damitdie Information zusammenhängend dargestellt werden kann.Einschränkend ist anzumerken, dass die Autor*innen die Schulfächer Informatik, Musik,Mathematik und Chemie vertreten und die Analyse daher in allen andere Fächern ausfachfremder Sicht durchgeführt wurde. Wie bei jeder qualitativen Inhaltsanalyse ergeben sichaus unterschiedlichen Einschätzungen verschiedener Personen Deutungsunterschiede, diebei einer weiterführenden Diskussion der Ergebnisse zu beachten sind. Dies wird durch dierecht allgemeinen Formulierungen der Kompetenzen in der KMK-Strategie, die häuﬁg nichtexplizit auf die digitale Welt Bezug nehmen, noch verstärkt. So kann man Kompetenzen wie„Referenzierungspraxis beherrschen“ oder „eine Produktion planen“ auch als erfüllt ansehen,wenn in einem Kerncurriculum diese ebenfalls allgemein erwähnt werden und man dieseKompetenzen somit auch mit analogen Mitteln erreichen kann. Insofern soll hier betontwerden, dass die nachfolgenden Ergebnisse und VeränderungsvorschlägeeinemöglicheAnalyse von Curricula auf Abdeckung der Kompetenzen zur Bildung in der dig. Welt 7114 Ira Diethelm, Sebastian GlücksDeutung darstellen und nicht als endgültige Empfehlung, sondern als Ausgangspunkt fürweitere Diskussionen zu verstehen sind. Ebenso sind die berechneten prozentualen Abde-ckungsquoten zu verstehen: Es wurden zur Vereinfachung Spiegelstriche der Kompetenzengezählt, obwohl verschiedene Kompetenzen natürlich durchaus unterschiedlichen Umfangim Unterricht einnehmen.3 ErgebnisseHier werden nun exemplarisch die Ergebnisse der Analyse der fachspeziﬁschen Curriculafür Musik und Informatik dargestellt. Die vollständigen Ergebnisse für alle Fächer sindonline verfügbar [Gl18]. Die Ergebnisse werden tabellarisch dargestellt, vgl. Abb.1: In derersten Zeile steht die betrachtete KMK-Kompetenz, die über eine Übereinstimmung in demUnterrichtsfach verfügt. Fachspeziﬁsche Kompetenzen, die die KMK-Kompetenz vollständigabdecken (VA), sind in der zweiten Zeile aufgeführt. In der dritten Zeile, die gelb markiertist, sind Fachkompetenzen aufgelistet, die die betrachtete KMK-Kompetenz teilweiseabdecken (TA). Dies kann der Fall sein, wenn beispielsweise der direkte Bezug zu digitalenUmgebungen fehlt oder sie als nicht-verpﬂichtende Option genannt ist, ansonsten aber eineähnliche Kompetenz zu Grunde liegt oder sie sich auf konkrete, fachspeziﬁsche Beispielebezieht. Die vierte und damit letzte Zeile ist für Kommentare und Veränderungsvorschläge(VV) vorgesehen.Abb. 1: Vergleich des Curriculums für Musik mit der KMK-Strategie im Bereich 3Wenn eine Kompetenz aus der KMK-Strategie sowohl vollständig als auch teilweise vonunterschiedlichen Fachkompetenzen abgedeckt wird, so ist sie insgesamt als vollständigabgedeckt zu werten. Daraus resultiert, dass keine Veränderungsvorschläge für die teilweiseabdeckenden Kompetenzen formuliert werden. Darüber hinaus ﬁnden sich in dieser ZeileErklärungen zu Interpretationen, sofern diese für das Verständnis notwendig sind. DieKompetenzbereiche, Lernfelder oder ähnlichen Kategorien, zu denen die Fachkompetenzenin den Curricula zusammengefasst wurden, wurden in die tabellarische Darstellung derErgebnisse übernommen, um ein leichteres Au nden der Kompetenzen in den Curriculazu ermöglichen. Diese Inhalte sind kursiv gedruckt, damit sie gut von den eigentlichenFachkompetenzen unterschieden werden können.72 Ira Diethelm, Sebastian GlücksAnalyse von Curricula auf Abdeckung der KMK-Kompetenzen 153.1 MusikDas Curriculum für das Fach Musik [Ni17] deckt in seiner jetzigen Form nach unsererEinschätzung fünf Kompetenzen aus dem Kompetenzrahmen zur Bildung in der digitalenWelt der KMK ab. Dies entspricht einer Abdeckungsquote von 8,2%. Weitere vier dieserKompetenzen lassen sich in der teilweisen Abdeckung durch Fachkompetenzen ﬁnden.In Abb.1ist exemplarisch der KMK-Kompetenzbereich 3Produzieren und Präsentierendargestellt.Der Kompetenzbereich 3.3Rechtliche Vorgaben beachtenlässt sich im Fach Musik bei derThematisierung des Urheberrechts ﬁnden. Neben Bereich 3 sind auch im Kompetenzbereich1 und 2 der KMK Übereinstimmung zu erkennen. Insbesondere ist eine Zuordnungder Kompetenz 2.5.2Medienerfahrungen weitergeben und in kommunikative Prozesseeinbringenzum Unterrichtsfach Musik im Kerncurriculum zu ﬁnden. Der Kompetenzbereich6.1Medien analysieren und reﬂektierenlässt sich im Fach Musik unter anderem imBereich der Analyse der Wirkung von Musik wiederﬁnden. Auch gibt es Möglichkeit dieKompetenzen 6.1.3 Wirkungen von Medien in der digitalen Welt (z.B.mediale Konstrukte,Stars, Idole, Computerspiele, mediale Gewaltdarstellungen) analysieren und konstruktivdamit umgehen anhand von Komponisten- und Musikerportraits zu vermitteln.3.2 InformatikDas Kerncurriculum des Unterrichtsfachs Informatik [Ni14] enthält nach unserer Ein-schätzung passende Fachkompetenzen zu 20 der 61 Kompetenzen der KMK-Strategieund deckt damit momentan 32,8% der zu vermittelnden Kompetenzen zur Bildung in derdigitalen Welt ab. Eine Erhöhung um weitere 26 Kompetenzen auf 75,4% ist mit Blickauf die Ausbildung der dafür nötigen Fachlehrkräfte zur Umsetzung der zuvor genanntenVeränderungsvorschläge möglich. Zu den 15 verbleibenden Kompetenzen ließen sich keinepassenden Fachkompetenzen aus dem KC Informatik ausmachen.Im Kompetenzbereich 1.1Suchen und Filternsteht die Verwendung von digitalen Res-sourcen für Recherchearbeiten im Vordergrund. Die Vermittlung der Kompetenzen desKompetenzbereichs 1.2Auswerten und Bewertenwird durch die Kompetenzen des imKC Informatik sogenannten LernfeldesDaten und ihre Spurenumfassend abgedeckt. DerKompetenzbereich 3.1Speichern und Abrufenwird durch Fachkompetenzen, die in Verbin-dung zu Datenbanken und weiteren Möglichkeiten der Strukturierung von Daten stehen,abgedeckt. In Bezug zu den Kompetenzen aus 2.1Interagierenließen sich die ThemenDatenschutz und Datensicherheit behandeln. Die Kompetenzen zu 2.4Umgangsregelnkennen und einhalten (Netiquette)ließen sich anhand der Thematisierung sozialer Netz-werke vermitteln. Zu diesem Kompetenzbereich lassen sich im Kerncurriculum in deraktuellen Form jedoch keine zugehörigen Kompetenzen identiﬁzieren. Die Kompetenz 2.5.1Ö entliche und private Dienste nutzenhingegen lässt sich in Ansätzen im Kerncurriculumwiederﬁnden.Analyse von Curricula auf Abdeckung der Kompetenzen zur Bildung in der dig. Welt 7316 Ira Diethelm, Sebastian GlücksDie Vermittlung der Kompetenzen aus dem Kompetenzbereich 3Produzieren und Präsentie-renkann ebenfalls durch den Unterricht im Fach Informatik umfassend sichergestellt werden.Für den Kompetenzbereich 4Schützen und sicher Agierenlassen sich im Kerncurriculumpassende Kompetenzen insbesondere aus dem Lernfeld Daten und ihre Spuren ausmachen.Hier erscheint eine Zusammenführung der Fachkompetenzen mit den KMK-Kompetenzensinnvoll. Dies könnte als Ergänzung zum KompetenzbereichI4 Informatik und Gesellschaftdes Kerncurriculums geschehen. Der Kompetenzbereich 5Problemlösen und Handelnlässtsich gänzlich in den Informatikunterricht integrieren. Neben dem Bereich 5.5Algorithmenerkennen und formulieren, der umfangreich durch Fachkompetenzen abgedeckt ist, lassensich auch Kompetenzen ﬁnden, für die weitgehende Anpassungen notwendig werden würden.Zu den Kompetenzen 5.1.1Anforderungen an digitale Umgebungen formulieren, 5.2.2An-forderungen an digitale Werkzeuge formulieren, 5.2.4Digitale Umgebungen und Werkzeugezum persönlichen Gebrauch anpassen, 5.4.1E ektive digitale Lernmöglichkeiten ﬁnden,bewerten und nutzenund 5.4.2Persönliches System von vernetzten digitalen Lernressourcenselbst organisieren könnenlassen sich in der aktuellen Form des Kerncurriculums derzeitkeine passenden Fachkompetenzen ausmachen, obwohl diese Kompetenzen eindeutig demLernfeldComputerkompetenzzuzuordnen sind. Insofern könnte dieses Lernfeld um denUnterpunktUmgang mit digitalen Umgebungen und Werkzeugenerweitert werden, in demdiese fünf Kompetenzen zusammengefasst werden.Die Kompetenzen aus dem Bereich 6Analysieren und Reﬂektierenlassen sich als Teil-aspekte der beiden FachkompetenzenI 4.1 beschreiben die Auswirkungen des Einsatzesvon Informatiksystemen auf die GesellschaftundP 4.4 bewerten die Bedeutung einesInformatiksystems für das Individuum und die Gesellschaftwiederﬁnden. Diese beidenKompetenzen sind sehr umfangreich und allgemein formuliert, sodass die zugeordnetenKompetenzen aus der KMK-Strategie als Konkretisierungen angesehen werden können.4 Zusammenfassung für alle FächerIn der Übersichtsgraﬁk in Abb.2sind die Abdeckungsquoten der einzelnen Fächeraufgelistet. Die oberen, grün eingefärbten Balken stellen die prozentuale Abdeckung derKompetenzen zur Bildung in der digitalen Welt der jeweiligen Fächer dar. Die Wertesind so zu verstehen, dass in dem jeweiligen Unterrichtsfach die KMK-Kompetenzen zudem aufgeführten Prozentsatz bereits unterrichtet werden müssen. Das UnterrichtsfachInformatik hat mit 32,8% in der jetzigen Form des Curriculums nach unserer Einschätzungdie größte fachspeziﬁsche Abdeckung. Die zweitgrößte Abdeckung ist beim UnterrichtsfachDeutsch mit 23,0% zu ﬁnden. Die geringste Abdeckung mit 1,6% erreicht derzeit das FachPolitik-Wirtschaft.Die unteren, gelben Balken weisen die Abdeckungsquoten aus, die erreicht werden können,wenn die Veränderungsvorschläge umgesetzt werden würden. Das Fach Informatik erreichtweiterhin die höchste Quote mit 75,4%. Auch das Fach Deutsch behält den zweiten Platz in74 Ira Diethelm, Sebastian GlücksAnalyse von Curricula auf Abdeckung der KMK-Kompetenzen 17der Rangfolge mit einer Erhöhung auf 31,1%. Der geringste Wert wäre dann beim FachGeschichte mit 9,8% zu ﬁnden.Abb. 2: Abdeckung der KMK-Kompetenzen durch die FächerUm eine Aussage darüber tre en zu können, wie viele Kompetenzen aus der KMK-Strategieinsgesamt durch die vorhandenen Kerncurricula abgedeckt werden, muss eine Auszählungüber mehrere Fächer durchgeführt werden. In der KMK-Strategie ist festgelegt, dass dieVermittlung der Kompetenzen alle SuS erreichen soll. Daher wurde ermittelt, ob dies in denPﬂichtfächern möglich ist und welcher Anteil dort bereits vermittelt wird. Den Abbildungen3bis5kann entnommen werden, welche Kompetenzen in welchen Fächern zu ﬁnden sind.Darüber hinaus ist mit der Größe der farbigen Kästchen angedeutet, in welchem Umfang dieentsprechende Kompetenz in dem jeweiligen Fach abgedeckt wird. Dazu wird zwischen zweiFällen unterschieden. Sofern nur eine einzige passende Fachkompetenz gefunden wurde, istein kleines Kästchen dargestellt. Bei zwei oder mehr übereinstimmenden Fachkompetenzenwurde ein breites Kästchen eingefügt. Darüber hinaus kann an der Art der farblichen Füllungerkannt werden, ob es sich bei dem Unterrichtsfach um ein Pﬂichtfach handelt. Diesesind einfarbig ausgefüllt, während alle anderen Fächer eine gestreifte Struktur aufweisen.Zur Menge der Pﬂichtfächer werden die Unterrichtsfächer Biologie (BI), Chemie (CH),Deutsch (DE), Englisch (EN), Erdkunde (EK), Geschichte (GE), Kunst (KU), Mathematik(MA), Musik (MU), Physik (PH), Politik-Wirtschaft (PW) und Sport (SP) gezählt. DieAbkürzungen für die übrigen Fächer sind: Evangelische Religion (ER), Französisch (FR),Griechisch (GR), Informatik (IF), Islamische Religion (IR), Katholische Religion (KR),Latein (LA), Niederländisch (NI), Spanisch (SN) und Werte und Normen (WN). Außerdemist an der Farbe zu erkennen, ob die KMK-Kompetenz, auf die die Nummer verweist,Analyse von Curricula auf Abdeckung der Kompetenzen zur Bildung in der dig. Welt 7518 Ira Diethelm, Sebastian Glücksvollständig (grün) oder teilweise (gelb) von dem entsprechenden Unterrichtsfach abgedecktwird. Aus Platzgründen wurde auf die ausführliche Nennung der Kompetenzen aus derKMK-Strategie verzichtet und nur die Kompetenznummern Bezug genommen.Abb. 3: Abdeckung der KMK-Bereiche 1 und 2Abb. 4: Abdeckung der KMK-Bereiche 3 und 4Der Kompetenzbereich 1Suchen, Verarbeiten und Aufbewahrenist jetzt schon vergleichswei-se gut in die vorhandenen Curricula integriert. Anders sieht es bei dem Kompetenzbereich2Kommunizieren und Kooperieren,4Schützen und sicher Agierensowie 5Problemlösenund Handelnaus. Insgesamt können 21 der 61 Kompetenzen bereits vollständig von denPﬂichtfächern abgedeckt werden. Wird die teilweise Abdeckung hinzugerechnet, ist eineAbdeckung von 40 Kompetenzen möglich. Es bleiben allerdings weitere 21 Kompetenzenübrig, die auf diesem Weg nicht ohne weiteres in die Pﬂichtfächer integriert werden können.Es handelt sich hierbei um die Kompetenzen 1.3.1, 2.1.1, 2.1.2, 2.2.1, 2.3.2, 2.5.1, 3.3.3,4.1.1, 4.1.2, 4.2.2, 4.2.3, 5.1.1, 5.1.2, 5.2.2, 5.2.3, 5.2.4, 5.3.1, 5.4.2, 5.5.2, 5.5.3 und6.2.3. Gründe hierfür sind in erster Linie, dass diese Kompetenzen keine reinen Anwen-derkompetenzen sind, sondern alle ein tieferes Grundverständnis der zugrundeliegendenFunktionsweisen und Strukturen erfordern.Bei der Betrachtung, welche Fächer diese übrigen Kompetenzen einschließen, fällt insbe-sondere das Fach Informatik auf. In diesem lassen sich alle aufgezählten Kompetenzen in76 Ira Diethelm, Sebastian GlücksAnalyse von Curricula auf Abdeckung der KMK-Kompetenzen 19Abb. 5: Abdeckung der KMK-Bereiche 5 und 6voller oder teilweiser Abdeckung wiederﬁnden oder leicht hinzufügen. Abbildung6zeigtdazu eine graﬁsche Übersicht und damit die Relevanz des Pﬂichtfaches Informatik.Abb. 6: Abdeckung der KMK-Kompetenzen durch Pﬂichtfächer mit und ohne Informatik5 SchlussfolgerungenDie in den vorangegangenen zwei Kapiteln ausführlich beschriebenen Ergebnisse derUntersuchung zeichnen ein erstes, aber deutliches Bild davon, wie die Umsetzung derKMK-Strategie zur Bildung in der digitalen Welt aussehen kann. Die hier dargestellteAnalyse weist auf die Einstufung von Informatik als verpﬂichtendes Unterrichtsfachhin. Dadurch ließe sich sicherstellen, dass alle Schülerinnen und Schüler genau dieinformatischen Grundkenntnisse besitzen, die sie für den Erwerb der weiterführendenKompetenzen benötigen. Diese Maßnahme ist dieser Untersuchung zufolge notwendig,um die verbleibende Lücke bei der Kompetenzvermittlung zu schließen. Gleichwohl lässtAnalyse von Curricula auf Abdeckung der Kompetenzen zur Bildung in der dig. Welt 7720 Ira Diethelm, Sebastian Glückssich auch erkennen, dass Informatik die Last für die Umsetzung der KMK-Strategie nichtallein tragen kann. Es braucht somit beides: Ein eigenes Schulfach für die systematischeBereitstellung der Grundkompetenzen UND eine Aufnahme einiger Kompetenzen, diezu dem jeweiligen Fach passen. Der Informatikunterricht ist demnach der richtige Ort,um das von der KMK als informatische Grundkenntnisse beschriebene Grundverständniszu vermitteln. Die weiteren Unterrichtsfächer können dann darauf zurückgreifen und dieNutzungskompetenzen vertiefen.Die Umsetzung der vorgeschlagenen Veränderungsvorschläge kann allerdings nur gelingen,wenn auch die Lehrkräfte entsprechend diesem Anforderungsproﬁl ausgebildet wordensind. Dazu sind zwei Bedingungen zu erfüllen. Zum einen müssen die Lehrkräfte selbstüber die Kompetenzen verfügen, die sie den Schülerinnen und Schüler vermitteln sollen.Zum zweiten müssen sie in der Vermittlung dieser Kompetenzen ausgebildet sein. Darausergeben sich neue Anforderungen sowohl an die Ausbildung als auch an die Fortbildung vonLehrkräften. Anzusetzen ist dazu bereits an den Hochschulen. Diese müssen ihrerseits durchentsprechende curriculare Vorgaben sicherstellen, dass die Absolventinnen und Absolventender Lehramtsstudiengänge die entsprechenden Kompetenzen zur Bildung in der digitalenWelt, die sie in ihren Unterrichtsfächern vermitteln sollen, selbst erworben haben undwissen, wie sie diese weitergeben. Dies betri t somit sowohl die Fachinhalte als auch dieFachdidaktiken.Literaturverzeichnis[Bo14]Bos, Wilfried; Eickelmann, Birgit; Gerick, Julia; Goldhammer, Frank; Schaumburg, Heike;Schwippert, Knut; Senkbeil, Martin; Schulz-Zander, Renate; Wendt, Heike: ICILS 2013Computer- und informationsbezogene Kompetenzen von Schülerinnen und Schülern in der 8.Jahrgangsstufe im internationalen Vergleich. Waxmann, Münster, Westf, 2014.[FPB13]Ferrari, Anusca; Punie, Yves; Bre ko, Barbara N.: , DIGCOMP: A framework for developingand understanding digital competence in Europe, 2013.[Ge08]Gesellschaft für Informatik e.V.: , Grundsätze und Standards für die Informatik in der Schule,2008.[Gl18]Glücks, Sebastian: , Analyse der niedersächsischen Kerncurricula der gymnasialen Sekundar-stufe I auf Kompetenzen zur Bildung in der digitalen Welt.https://oops.uni-oldenburg.de/id/eprint/3585, 2018.[Ku16]Kultusministerkonferenz: , Bildung in der digitalen Welt – Strategie der Kultusministerkonfe-renz, 2016.[LK15]LKM - Länderkonferenz MedienBildung: , Kompetenzorientiertes Konzept für die schulischeMedienbildung – LKM-Positionspapier Stand 29.01.2015, 2015.[Ni14]Niedersächsisches Kultusministerium: , Kerncurriculum für die Schulformen des Sekundar-bereichs I Schuljahrgänge 5 - 10 Informatik, 2014.[Ni17]Niedersächsisches Kultusministerium: , Kerncurriculum für die Schulformen des Sekundar-bereichs I Schuljahrgänge 5 - 10 Musik, 2017.78 Ira Diethelm, Sebastian GlückscbaHerausgeber et al. (Hrsg.): INFOS 2019,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Beobachtungen zum informatischen Problemlösen imEscape-Adventure-Spiel „Room-X“Alexander Hacke1, Mareen Przybylla2, Andreas Schwill3Abstract:Informatisches Problemlösen ist einer der zentralen Aspekte der Informatik und einForschungsgebiet innerhalb der Informatikdidaktik, das Prozesse, Aufgaben und Einstellungen be-züglich des Problemlösens hinsichtlich informatischer Vorgehensweisen und Inhalte untersucht. Iminformatischen Escape-Adventure-Spiel „Room-X“ bieten sich aus Forschungssicht Möglichkeiten,Lernende beim Problemlösen zu beobachten und deren Strategien zu analysieren. In diesem Artikelzeigen wir auf, wie der Room-X zu einer geeigneten Umgebung wird, die Lernenden ein Schau-fenster für die Informatik bietet und ihnen ermöglicht, informatisches Problemlösen als eine derKernkomponenten der Informatik in einem attraktiven und motivierenden Umfeld auszuüben. MittelsVideoanalyse werden Verhaltensweisen analysiert und Schlussfolgerungen für die gezielte Förderungvon Problemlösekompetenzen in der Informatik sowie zur Weiterentwicklung des Room-X gezogen.Keywords:Informatisches Escape-Game; Informatisches Problemlösen; außerschulischer Lernort1 EinleitungProblemlösen ist einer der zentralen Aspekte der Informatik und bildet mit jeder ihrerTeildisziplinen Verknüpfungspunkte. Um eine gute Grundlage für ein Informatikstudiumbeziehungsweise eine informatische Ausbildung zu erhalten, ist es eine Grundvorausset-zung für Schülerinnen und Schüler, sich mit dem Problemlösen in der Informatik explizitauseinanderzusetzen. Jedoch ist die Thematik vergleichsweise wenig erforscht. Folglich istauch wenig darüber bekannt, wie informatisches Problemlösen in der Schule zielführend un-terrichtet werden kann. Trotzdem ist Problemlösen fester Bestandteil der BildungsstandardsInformatik für die Sekundarstufe II [Ar16] und Bestandteil vieler deutscher Rahmenlehrplänefür das Fach Informatik (u. a. [Mi14; Mi18]). Da informatisches Problemlösen in der Schuleoft in theoretischem Umfeld behandelt wird und mit wenig schülernahen Inhalten besetzt istoder aber nur implizit eine Rolle spielt, ist es für viele Schülerinnen und Schüler nur vongeringem Interesse. Mit einem informatisch geprägten Escape-Room können Schülerinnenund Schüler für das Thema motiviert werden und gleichzeitig an einem außerschulischenLernort die Anwendung von Problemlösestrategien vertiefen. Das informatisch geprägteEscape-Adventure-Spiel „Room-X“ fungiert getreu dem Motto „Informatik für alle“ alsSchaufenster für die Informatik und zeigt, dass informatische Bildung auch im spielerischen1Universität Potsdam, Didaktik der Informatik, August-Bebel-Str. 89, 14482 Potsdam,ahacke@uni-potsdam.de2Universität Potsdam, Didaktik der Informatik, August-Bebel-Str. 89, 14482 Potsdam,przybyll@uni-potsdam.de3Universität Potsdam, Didaktik der Informatik, August-Bebel-Str. 89, 14482 Potsdam,schwill@uni-potsdam.decba doi:10.18420/infos2019-08Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 792 Alexander Hacke, Mareen Przybylla, Andreas SchwillUmfeld hilfreich sein kann. In diesem Beitrag wird zunächst theoretisch fundiert, wasunter informatischem Problemlösen zu verstehen ist. Anschließend wird am Beispiel des„Room-X“ gezeigt, inwieweit Problemlösen sich an außerschulischen Lernorten integrierenlässt. Darauf basierend werden Empfehlungen für Weiterentwicklungen abgeleitet.2 Informatisches ProblemlösenProblemlösen wird innerhalb der Kognitionspsychologie als der Versuch bezeichnet,voneinem Anfangszustand vorbei an einer Barriere zu einem Zielzustand zu gelangen[MR17].Problemlösen verlangt eine Reihe kognitiver Fähigkeiten, welche nach Bloom aufeinanderaufbauend in sechs Kategorien eingeteilt werden können, wobei die oberen drei („Analysing“,„Evaluating“, „Creating“) als „higher-order thinking“ betrachtet werden und die unteren drei(„Remembering“, „Understanding“, „Applying“) voraussetzen [AK01]. Die Bearbeitung voneinfachen Aufgaben lässt sich normalerweise durch die unteren drei Kategorien abbilden. Esist hierfür erforderlich, die Aufgabenstellung zu verstehen (Understanding), dazu passendeInformationen und Prozeduren aus dem Langzeitgedächtnis abzurufen (Remembering) unddiese im gegebenen Kontext anzuwenden (Applying). Das Problemlösen benötigt zusätzlichauch die Fähigkeiten des „higher-order thinking“. Das Problem muss analysiert werden,wobei wichtige von unwichtigen Details unterschieden und nicht vordergründig sichtbareDetails erkannt werden müssen (Analyzing). Aus der Analyse muss per Heuristik einezielführende Strategie generiert werden, die gegebenenfalls bekannte elementare Prozedurenmit neuen Zusammenhängen verknüpft (Creating). Dabei ist diese Strategie ständig aufE ektivität zu überwachen und gegebenenfalls zu überdenken (Evaluate). Zum erfolgreichenProblemlösen ist es zusätzlich erforderlich, Zutrauen in die eigenen Fähigkeiten zu haben.Auch die Einstellungen zum konkreten Problem und Problemlösen an sich sind maßgeblichmit dafür verantwortlich, wie gut ein Problemlöser die ihm zur Verfügung stehendenMittel nutzen will und kann (vgl. [Sc13]). Der Begri  „Problem“ muss in Hinblick aufdas Problemlösen eingegrenzt werden. Eine aus der Psychologie stammende Deﬁnitionbesagt, dass einProblem dann vorliegt, wenn in einer Situation, in der ein bestimmtes Zielerreicht werden soll, ein Hindernis oder eine Barriere dies verhindert[MR17]. Problemelassen sich auf vielfältige Weise kategorisieren. Man kann sie beispielsweise anhanddessen unterscheiden, wie klar der zu erreichende Zielzustand deﬁniert ist, oder danach,ob es sich um sogenannteeinfacheoderkomplexeProbleme handelt. BeikomplexenProblemen ändern sich im Verlauf des Lösungsversuchs die Rahmenbedingungen, waseine fortwährende Neubewertung des Lösungsansatzes erfordert. Zudem spielen sehr vieleVariablen eine Rolle, die sich teilweise gegenseitig bedingen. Zu komplexen Problemenzählen beispielsweise die Steuerung eines Unternehmens oder die Bewältigung einerglobalen Krise.EinfacheProbleme hingegen besitzen stabile Rahmenbedingungen undim Vergleich weniger relevante Variablen, was jedoch nicht bedeutet, dass sie leichtzu lösen wären. Informatische Problemstellungen fallen zumeist in die Kategorie dereinfachenProbleme. Das bedeutet, die Rahmenbedingungen verändern sich während desLösungsversuchs nicht oder nur wenig und die Anzahl der zu beachtenden Variablen bewegt80 Alexander Hacke, Mareen Przybylla, Andreas SchwillBeobachtungen zum informatischen Problemlösen im Escape-Adventure-Spiel „Room-X“ 3sich im überschaubaren Bereich. Natürlich können sie, eingebettet in eine realweltlicheSituation, auch Teil eineskomplexenProblems sein. Im hier gedachten Zusammenhang solljedoch der Fokus aufeinfacheProbleme gesetzt werden, da sonst nicht mehr eindeutig ist,ob das Problem informatischer oder sonstiger Natur ist.Deﬁnition:Ein informatisches Problem liegt vor, wenn in einer Situation mitstabilen Rahmenbedingungen, in der ein bestimmtes Ziel erreicht werden soll,ein Hindernis oder eine Barriere dies verhindert, wobei zur Zielerreichung eininformatisches Verfahren benötigt wird.Nun stellt sich die Frage, ob das vorliegende Problem informatischer Natur ist oder nurder gewählte Problemlöseablauf – oder ob möglicherweise beide Teile der Informatikzuzurechnen sind. Ähnlich der Vorgehensweise durch Humbert und Puhlmann bei derUnterteilung informatischer Phänomene in drei Kategorien [HP04] lassen sich auch Problemenach deren Bezug zur Informatik klassiﬁzieren:1.Das Problem ist nicht informatischer Natur.Probleme rein philosophischen Charakters,bei denen ein informatischer Lösungsansatz nicht sinnvoll bzw. deplatziert ist.2.Das Problem ist indirekt informatischer Natur.Probleme, die realweltlichen Cha-rakter haben, jedoch inhärent informatisch sind und somit durch eine informatischeProblemlösestrategie gelöst werden können.3.Das Problem ist direkt informatischer Natur.Probleme, die eine Problemlösestrategiemit informatischen Prinzipien erfordern.Unterteilt man Probleme auf diese Weise, so wird o ensichtlich, dass sich ein Problem derKategorie drei4durchaus in Kategorie zwei wiederﬁnden kann, nämlich als informatischerTeil eines realweltlichen Problems. Beispielsweise ist ein Problem, bei dem es um dieVerteilung von Aufgaben an Mitarbeiter oder die Umlaufplanung im Nahverkehr geht, oft einganzzahliges Optimierungsproblem, welches mit dem Branch-and-Bound-Verfahren aus derInformatik gelöst werden kann. Der Problemraum eines solchen Problems besteht dann nichtnur aus dem informatischen Problem, sondern auch darin, dass der informatische Charakterzunächst erkannt werden muss. Probleme der Kategorie zwei lassen sich aber eventuell auchauf nicht-informatischem Wege lösen. Beispielsweise lässt sich ein Optimierungsproblemauch per zufälliger Verteilung lösen, da die Frage nach der besten Verteilung bei einemrealweltlichen Problem nicht immer im Vordergrund steht. O ensichtlich wird auch, dassdie Ausgangssituation des Problems über die Wahrscheinlichkeit des Informatikgehalts desProblemlösevorgangs Auskunft gibt.4Hierzu zählen Probleme wie das Finden des dichtesten Punktepaars, das mit dem Divide-and-Conquer-Verfahrengelöst werden kann oder die Programmierung eines Oberon-Programms zur Berechnung von Fakultäten, wobeihier Programmierkonzepte zur Problemlösung erforderlich sind.Beobachtungen zum inform. Problemlösen im Escape-Adventure-Spiel „Room-X“ 814 Alexander Hacke, Mareen Przybylla, Andreas Schwill3 Problemlösen in Escape-Adventure-SpielenEscape-Adventure-Spiele haben ihren Ursprung in den sogenannten Point-and-Click-Adventures, welche sich als Konsolen- oder Computerspiele bereits seit den 1970er Jahrengroßer Beliebtheit erfreuten und in den frühen 2000er Jahren als Browser-Games wie-derbelebt wurden. Escape-Rooms (auch als Live-Escape-Games, Exit-Rooms und unterweiteren, ähnlichen Begri en bekannt) sind eine spezielle Art der Escape-Adventure-Spiele,in denen die Spieler als Team in einen real existierenden Raum eingeschlossen werden undmit Hilfe der im Raum beﬁndlichen Hinweise und Rätsel in begrenzter Zeit versuchen,aus dem Raum zu entkommen. Meist gilt es zusätzlich noch eine Mission zu erfüllen,wie beispielsweise das Entschärfen einer Bombe, das Lösen eines Kriminalfalls oder dasStehlen eines Gegenstandes. Die Themen für solche Spiele sind dabei äußerst vielfältigund siedeln sich gern in spannenden Settings an, z. B. Chemielaboren, Gefängnistraktenoder Agentenbüros. Escape-Adventure-Spiele bieten auch für Bildungskontexte Anreize. Sobeschreibt beispielsweise Nicholson [Ni18] als Vorzüge der Verwendung solcher Spiele imUnterricht u. a. die Abwechslung zur Arbeit am Computer, die erforderliche Kooperation imTeam und motivationale Aspekte als Grundlage für aktives Lernen und sozialen Konstrukti-vismus. Escape-Adventure-Spiele bieten eine gute Gelegenheit, Problemlösefähigkeitenzu trainieren. Das Konzept solcher Spiele beinhaltet die wesentlichen Merkmale eineso. g.einfachenProblems und macht die Spielenden somit zu Problemlösern. Sie müsseninnerhalb einer bestimmten Zeit von einem Ausgangszustand (der Raum und die mitgegebe-nen Hinweise) zu einem Zielzustand (meist: den Raum verlassen) gelangen. Dies ist nichtohne Weiteres möglich, da ihnen ein oder mehrere Hindernisse (Rätsel; der Raum lässtsich nicht ohne Weiteres ö nen, etc.) in den Weg gestellt werden. Sie müssen sich daherheuristischer Verfahren (z.B. Bildung von Teilzielen, Suchraumeingrenzung, Visualisierung)bedienen, kreativ eine Lösungsstrategie planen und diese bei der Durchführung stetig aufSinnhaftigkeit überprüfen. Zudem sind Escape-Adventure-Spiele durch den spielerischenAbenteuer-Charakter gut geeignet, um die Motivation der Teilnehmenden hoch zu halten undeventuell vorhandene negative Einstellungen zum Problemlösen zu überdecken. Eventuellwird das enthaltene Problemlösen sogar gar nicht als solches wahrgenommen.4Room-X: Ein Escape-Adventure-Spiel für den InformatikunterrichtUm Schülerinnen und Schülern in begrenzter Zeit und auf motivierende Weise einen Einblickin verschiedene Themengebiete der Informatik zu geben, sie für das Fach zu begeistern undfür das Institut für Informatik zu werben, wurde an der Universität Potsdam das Escape-Adventure-Spiel „Room-X“ eingerichtet. In diesem Kontext besuchen uns regelmäßigSchülergruppen, die sich bereitwillig beim Problemlösen beobachten lassen. Anders als beianderen Escape-Adventure-Spielen, deren Themen meist die Allgemeinheit ansprechen, istdas Szenario des Room-X auf die Zielgruppe ab der zehnten Klasse zugeschnitten. IhreMission beinhaltet, die Aufgaben der nächsten Informatikarbeit im Klassenraum von HerrnSchröder auszuspionieren, welche sich auf einem passwortgeschützten Tablet beﬁndet. Die82 Alexander Hacke, Mareen Przybylla, Andreas SchwillBeobachtungen zum informatischen Problemlösen im Escape-Adventure-Spiel „Room-X“ 5Klausur muss abfotograﬁert werden, andernfalls ist die Mission nicht vollständig erfüllt undgilt als verloren. Das Passwort lässt sich mithilfe der Gegenstände im Raum in Erfahrungbringen. Zusätzlich hat der Lehrer die Alarmanlage der Tür des Klassenraums aktiviert. Umunbemerkt wieder hinaus zu gelangen, müssen die Teams den Zahlencode des Schlossesherausﬁnden, welches den Zugang zu einer Fernbedienung der Alarmanlage versperrt. DieTeams im Room-X werden während der gesamten Spielzeit durch eine Kamera im Raumbeobachtet, damit ihnen gegebenenfalls durch Tipps geholfen werden kann. Das Spiel dauert60 Minuten, nach Ablauf der Zeit löst die Alarmanlage aus. Auch das vorzeitige Ö nen derTür löst die Alarmanlage aus und führt zu Disqualiﬁkation und zum Abbruch der Mission.Die Nutzung der Tafel und der Blöcke und Stifte im Raum ist ausdrücklich erlaubt.Zunächst erhalten die Teams in einem separaten Raum sämtliche Informationen über dasSzenario, die Abläufe und die Spielregeln des Room-X. Es wird darauf hingewiesen, dassdie Spielleitung die Personen im Raum im Laufe des Spiels kontaktieren kann. Die Artder Kontaktaufnahme bleibt zunächst o en. Anschließend wird das Team in den Room-Xgeführt, der Timer wird gestartet, die Tür geschlossen und die Alarmanlage aktiviert. Umdas Spiel zu gewinnen, muss das Team nun verschiedene Rätsel lösen. Um eine Verbreitungdes Lösungsweges für den Raum zu verhindern, wird an dieser Stelle darauf verzichtet, dieRätsel im Detail zu beschreiben. Man kann sie sich aber in etwa wie folgt vorstellen:•Das Tablet ist mit einem Passwort gesichert, daran klebt ein Zettel mit der Aufschrift„PW: Endlich Ferien! (HexHex)“!Was soll das heißen?•An der Pinnwand beﬁndet sich ein Zettel mit einer kryptischen Botschaft: „FcuHtüjuvüem nkgiv okt jgwvg uejygt ko Ocigp.“!Was hat das zu bedeuten?•Auf dem Lehrertisch liegt eine SD-Karte mit der AufschriftGEHEIM, legt mansie in eine herumliegende Digitalkamera ein, sieht man Fotos von verschiedenenGegenständen (z. B. ein riesiges Gerät mit der AufschriftZ3und eine merkwürdigbunt eingefärbte Landkarte)!Beﬁnden sich in den Bildern entscheidende Hinweise?Durch das Erkennen und Lösen typisch informatischer Problemstellungen und die geschickteKombination gefundener Hinweise ist es schließlich möglich, das Tablet zu entsperren,den Schlüsseltresor zu ö nen und die Alarmanlage zu deaktivieren. Im Anschluss habendie Teammitglieder die Möglichkeit, ihre Erlebnisse untereinander zu diskutieren undHintergründe und Lösungen zu einzelnen Rätseln des Raumes zu erfahren.5 Room-X und informatisches ProblemlösenMit dem Ziel, das Vorgehen der Schülerinnen und Schüler beim Lösen informatischerProbleme im Room-X zu beobachten, deren Strategien zu identiﬁzieren und daraus Schluss-folgerungen für die gezielte Förderung von Problemlösekompetenzen im Room-X (undBeobachtungen zum inform. Problemlösen im Escape-Adventure-Spiel „Room-X“ 836 Alexander Hacke, Mareen Przybylla, Andreas Schwillallgemein) abzuleiten, soll zunächst untersucht werden, in welchem Maße das Spiel informa-tisches Problemlösen (er)fordert. Hierzu wird der Raum mit den dazugehörigen Aufgabenund Rätseln im Folgenden unter Bezugnahme auf die o. g. Deﬁnitionen und „Thinking skills“analysiert. In einer anschließenden Videoanalyse werden die Strategien der Teilnehmeridentiﬁziert und bzgl. der zum Erfolg führenden Eigenschaften analysiert.5.1 Problem und Problemlösen im Room-XDie Startsituation, mit der die Teilnehmenden konfrontiert werden, entspricht einemeinfachenProblem der o. g. Problemdeﬁnition, denn es lassen sich die folgenden Merkmalewiederﬁnden: Das Team beﬁndet sich am Anfang der Spielphase im Ausgangszustand, deraus dem Raum mit seinen versteckten Hinweisen und den vom Übungsleiter genanntenHinweisen besteht. Die Gruppe kann nicht ohne Weiteres zum Zielzustand übergehen, alsodie Klassenarbeit abfotograﬁeren und die Tür ö nen, da der Weg dorthin durch verschiedeneHindernisse (Türcode, Tablet-Passwort) versperrt ist. Die Rahmenbedingungen ändern sichwährend der Suche im Problemraum nicht, wenn man vom sich verstärkenden Zeitdruckabsieht. Auch die Anzahl der Variablen, mit denen im Verlauf hantiert werden muss, istüberschaubar groß und die Wechselwirkungen zwischen ihnen sind gering. Dementsprechendlässt sich eine Kategorisierung alskomplexesProblem ausschließen. Untersucht man dendurch Rätsel vorgegebenen Weg durch den Room-X, so zeigt sich, dass viele Elemente ausdem Bereich der „lower-order Thinking Skills“ enthalten sind. Das heißt, es gibt eine Reihevon Aufgaben, die im Raum zu lösen sind. Es fällt auf, dass es selbst mit sorgfältiger Planungteils nicht möglich ist, den Zusammenhang zwischen den Aufgaben vorab herzustellen,beziehungsweise zu erkennen, wozu die Lösung der Aufgabe dienlich sein könnte. Dashat weniger mit der Komplexität der zu ﬁndenden Strategie zu tun als damit, dass dervorgesehene Lösungsweg an einigen Stellen zu stark konstruiert ist und Zusammenhängekeinem erkennbaren Muster folgen und somit kaum nachvollziehbar sind. Der Weg hin zumZielzustand erfordert oft einfach Brute Force, Teamarbeit und Glück.5.2 Informatik im Room-XDas gestellte Problem an sich ist zunächst kein informatisches. Es wird nach einer Klausurgesucht und nach einem Weg, um ein Schloss zu knacken. Hinter dem Problem verbirgtsich keine direkte informatische Problemlösestrategie, somit fällt es in die Kategorie dernicht-informatischen Probleme. Der Weg durch den Problemraum enthält jedoch eine Reihevon Aufgaben informatischer Natur, beispielsweise in den Themengebieten Verschlüsselung,Logik und Automatentheorie. Allerdings müssen einige der Aufgaben nicht wegen ihresinformatischen Hintergrunds gelöst werden, sondern weil sie beim Lösen einen nicht-informatischen Hinweis preisgeben. Zudem sind die Aufgaben derart konstruiert, dass sievon jedermann gelöst werden können, also keine informatischen Kompetenzen voraussetzen.Auch zusammengenommen ergeben sie keine speziell informatische Problemlösestrategie84 Alexander Hacke, Mareen Przybylla, Andreas SchwillBeobachtungen zum informatischen Problemlösen im Escape-Adventure-Spiel „Room-X“ 7nach o. g. Deﬁnition, sondern stehen für sich. Die Problemlösestrategie besteht dadurch vorallem darin, nach Hinweisen zu suchen, die Aufgaben richtig zu lösen und die gefundenenHinweise und Lösungen derart zusammenzubringen, dass sich daraus das Endergebnisergibt. Zusammenfassend lässt sich feststellen, dass der Room-X zwar informatische Anteileauf Aufgabenlevel enthält, jedoch gesamt gesehen kein informatisches Problemlösen. Ande-rerseits sind die geforderten Teilstrategien beim informatischen Problemlösen unabdingbar.Das korrekte Lösen von Aufgaben und die dazugehörige Evaluation der Ergebnisse sindGrundbausteine auf dem Weg zum erfolgreichen Problemlösen. Lässt man die systematischeSuche im Problemraum aus, so werden leicht entscheidende Hinweise übersehen. Ohnedie Gewissheit, dass es sich um die korrekte Lösung handelt, kann nicht mit derselbenweitergearbeitet werden, ohne Folgefehler zu riskieren. Letztlich ist auch die Kombinationvon Teilergebnissen ein Grundbaustein beim informatischen Problemlösen. Dieser Schrittsetzt eine fortlaufende Dokumentation der Ergebnisse sowie eine zielführende Darstellungvoraus, die Zusammenhänge erkennbar machen kann. Somit lassen die im Room-X benötig-ten Strategien beim Problemlösen Rückschlüsse darauf zu, wie gut die Schülerinnen undSchüler für das informatische Problemlösen gewappnet sind.5.3 Angewandte Problemlösestrategien im Room-XIn einer qualitativen Videoanalyse soll nun zunächst geprüft werden, ob die oben ge-nannten Teilstrategien beobachtet werden können und ob sich ein Einﬂuss auf den Erfolgbeim Problemlösen ableiten lässt. Für die Videoanalyse ergeben sich daraus folgendeFragestellungen:1.Welche typischen Verhaltensweisen können beim Problemlösen im Room-X beob-achtet werden?2.Welchen Einﬂuss haben die beobachteten Verhaltensweisen auf den Erfolg beimProblemlösen im Room-X?Bezüglich der Fragestellungen lassen sich basierend auf den inAbschnitt 2dargestelltenÜberlegungen und Deﬁnitionen sowie den Eigenschaften des Room-X folgende Annahmenableiten: Erwartungsgemäß werden die Teams die Gegenstände im Raum nach Hinweisenaller Art durchsuchen, die Teammitglieder ihren Vorlieben bzw. Vorkenntnissen entsprechendauf die Aufgaben verteilen, versuchen die einzelnen Aufgaben zu lösen, die Tafel bzw. Blöckeals Mittel zur Visualisierung bzw. Repräsentation der Erkenntnisse nutzen, miteinanderkommunizieren und Erkenntnisse im Team evaluieren. Dabei wird davon ausgegangen, dassdie folgenden Verhaltensweisen zum Erfolg führen: systematisches Suchen nach Hinweisen,korrekte Lösung der Einzelaufgaben, Visualisierung und Repräsentation der Hinweiseund Ergebnisse, Einbeziehung aller Teammitglieder und Evaluation und Kombination derHinweise und Ergebnisse miteinander.Beobachtungen zum inform. Problemlösen im Escape-Adventure-Spiel „Room-X“ 858 Alexander Hacke, Mareen Przybylla, Andreas Schwill5.4 DurchführungFür die Videoanalyse liegt Videomaterial von 24 Gruppen à 5-6 Personen vor, was ca.130 Teilnehmenden entspricht. Das Material ist hochauﬂösendes Video mit Ton von einerÜberwachungskamera an der Decke des Raumes. Diese Überwachung dient dem Spielleiternormalerweise zur Steuerung des Spiels. Das Videomaterial wurde hinsichtlich des Erfolgbringenden Verhaltens der Teilnehmenden beim Problemlösen untersucht. Dabei wurdenfolgende Verhaltensweisen vorab isoliert und operationalisiert (deduktives Vorgehen):1.korrekte Lösung der Einzelaufgaben: Ein oder mehrere Teammitglieder lösen eineder Aufgaben und erhalten eine korrekte Lösung.2.Einbeziehung aller Teammitglieder: Alle Teilnehmer sind fokussiert auf das Problem,d. h. suchen nach Hinweisen, geben Ratschläge, helfen anderen, lösen Aufgaben.3.systematisches Suchen nach Hinweisen: Der Raum wird von einem Ende zum anderengründlich auf Hinweise untersucht, idealerweise unabhängig durch mehrere Personen.4.Visualisierung und Repräsentation der Hinweise und Ergebnisse: Die Tafel bzw. einSchreibblock wird genutzt, um Zwischenergebnisse, Hinweise, Erkenntnisse, Fragenzu protokollieren, sobald diese zur Verfügung stehen.5.Evaluation und Kombination der Hinweise und Ergebnisse miteinander: Ergebnissewerden gegenseitig kontrolliert, an Tafel oder mündlich in Bezug gesetzt.5.4.1 Beobachtete VerhaltensweisenNach qualitativer Auswertung von ca. 70% der Videos lassen sich Tendenzen bezüglichder ersten Fragestellung erkennen. Typischerweise beginnt die Gruppe mit Brute-Force-Heuristik: alle Teammitglieder schwärmen aus, verteilen sich im Raum, blättern Bücherdurch, etc. Dies entspricht dem zu erwartenden Durchsuchen der Gegenstände im Raumnach Hinweisen. Im Zuge dieses Prozesses werden verschiedene Aufgaben entdeckt undim Normalfall sofort versucht, sie zu lösen. Dabei werden oft Präferenzen berücksichtigt.Aufgaben, die einer Person zu schwer erscheinen, werden liegengelassen oder jemandanderes zu Rate gezogen, beispielsweise passiert das, wenn eine Umrechnung in ein anderesZahlensystem erfolgen muss. Diese Verhaltensweisen wurden so auch erwartet. Ebensoerfolgt die Nutzung der Tafel, um Einzelergebnisse zu dokumentieren. Jedoch ist dieDokumentation der gefundenen Hinweise oft gering ausgeprägt und eine Visualisierungselten. Hin und wieder gehen Hinweise im Kommunikationsprozess der Teammitgliederzunächst wieder verloren und müssen dann erneut entdeckt werden. Die Annahmen bezüglichder angewandten Problemlösestrategien bestätigen sich also weitgehend. Alle erwartetenVerhaltensweisen lassen sich beobachten. Darüber hinaus werden auch Verhaltensweisensichtbar, die auf Demotivation einzelner Teammitglieder schließen lassen, d. h. mituntergibt es Teilnehmer, die oft aus dem Fenster blicken oder teilnahmslos herumstehen.86 Alexander Hacke, Mareen Przybylla, Andreas SchwillBeobachtungen zum informatischen Problemlösen im Escape-Adventure-Spiel „Room-X“ 95.4.2 Erfolgversprechendes VerhaltenAuch die Annahme hinsichtlich erfolgversprechender Verhaltensweisen lässt sich durch dasVideomaterial weitgehend bestätigen, wobei folgende Aspekte deutlich wurden: Teams, diedie Tafel intensiver für Notizen nutzen, sind meist erfolgreicher. Es zeigte sich beispielsweise,dass oft Striche für die Anzahl der Stellen des Passworts an die Tafel gebracht werden,was einer allgemein verständlichen Repräsentation des Teilziels entspricht. Andererseitsentstanden oft auch Kritzeleien, deren Sinn anderen Teilnehmern verschlossen bleibt.Es zeigte sich ferner, dass auch Teams ohne erkennbar strukturierten Tafelanschriebfrühzeitig fertig sein können, sofern sie trotzdem viel aufschrieben. Wenig bis gar nichtzu ﬁnden sind informatische Darstellungen, was jedoch auch so zu erwarten ist. DieZuhilfenahme von Notizen spielt auch bei der Lösung der Einzelaufgaben eine Rolle.Erfolgreiche Teams nutzen hier oft Zettel und Stift. Die Evaluation der Ergebnisse ergibtsich bei den Aufgaben oft einfach dadurch, dass die Lösung ein „sinnvolles“ Wort istund die Teilnehmer daraus eine Bestätigung der Richtigkeit ableiten. Außerdem zeigtsich, dass es stark unterschiedlich funktionierende Teams gibt. Es gibt Teams, derenMitglieder viel untereinander kommunizieren, aber auch solche, in denen Mitgliederrelativ teilnahmslos erscheinen, teils auch destruktiv arbeiten. Neben diesen nicht imLösungsprozess involvierten Teilnehmern kristallisierten sich vier Teilnehmertypen heraus:Solche, die Aufgaben verteilen wollen, solche, die Aufgaben annehmen wollen, solche,die autark arbeiten wollen, und solche, die mit anderen zusammenarbeiten wollen. EineVorhersage auf Erfolg und Misserfolg bei der Absolvierung des Room-X ließ sich darausjedoch zunächst nicht ableiten.6 Fazit und AusblickDer Room-X ist ein Escape-Adventure-Spiel mit informatischen Anteilen, der allgemeineProblemlösestrategien erfordert. Vorteilhaft am gegenwärtigen Konzept ist, dass keinVorwissen bezüglich einer speziellen Vorgehensweise erwartet wird. Es kann also einebreite Zielgruppe angesprochen werden, da nur Fähigkeiten erwartet werden, die die meistenLernenden ab Klasse 10 mitbringen. Daraus ergibt sich ferner, dass das Problem für höhereJahrgänge oder Studierende nicht einfacher wird und das Konzept somit auch für sie ohneVeränderungen durchführbar bleibt. Nachteilig ist jedoch, dass gerade erfahrenere Teamskeine eventuell bekannten informatischen Strategien anwenden können, um das Problem(schneller) zu lösen. Dies kann mitunter frustrieren und entspricht weniger den Erwartungenan einen informatischen Escape-Room. In Bezug auf die einzelnen Aufgaben ist vorteilhaft,dass auch Teams mit keinen oder nur geringen Vorkenntnissen ein motivierender Einblickin informatische Ideen gegeben werden kann, um ihnen so die Informatik schmackhaft zumachen, auch wenn einige Aufgaben derzeit recht konstruiert wirken und nicht notwendigim Sinne eines informatischen Lösungsschritts sind. Um künftig den Informatikgehalt jenach Besuchergruppe anpassen zu können, sind modulare Weiterentwicklungen geplant,die die Nützlichkeit der informatischen Ideen und den Sinn informatischer VerfahrenBeobachtungen zum inform. Problemlösen im Escape-Adventure-Spiel „Room-X“ 8710 Alexander Hacke, Mareen Przybylla, Andreas Schwillbetonen. Auf diese Weise können einzelne Rätsel ausgetauscht werden, um inhaltlicheSchwerpunkte zu verschieben und den Raum an die Vorkenntnisse der Teilnehmer zuadaptieren. Aus den Ergebnissen der Videoanalyse lassen sich erste Hinweise für dieFörderung von Problemlösekompetenzen ableiten. In Bezug auf die Dokumentation ist diegeringe Tendenz zu strukturierter Darstellung besonders au ällig. Die Ursachen hierfürmüssen daher näher untersucht werden. Idealerweise sollten sich die Problemlösendenper geschickt gewählter Strategie zielgerichtet durch den Problemraum bewegen. Diessetzt jedoch voraus, dass der Lösungsweg so gestaltet ist, dass er durch gute Planung,Evaluation und Anwendung einer Strategie zu Fortschritten führt. Die Videoanalyse zeigtejedoch, dass keinerlei Planungsphase stattﬁndet, sondern stattdessen gleich mit der Suchebegonnen wird, da das derzeitige Konzept eine solche Phase nicht erfordert. Um künftigden Problemlöseaspekt zu verstärken, muss der gegenwärtige Ablauf ersetzt werden. Einemögliche Herangehensweise besteht darin, informatische Konzepte auf ihre Struktur hin zuuntersuchen und diese als (Teil-)Strategie zu integrieren.Literatur[AK01]Anderson, L. W.; Krathwohl, D. R.: A taxonomy for learning, teaching, andassessing: a revision of Blooms taxonomy of educational objectives. Longman,2001.[Ar16]Arbeitskreis Bildungsstandards SII: Bildungsstandards Informatik für die Sekun-darstufe II, Beilage zur LOG IN 183/184, 2016.[HP04]Humbert, L.; Puhlmann, H.: Essential ingredients of literacy in informatics. In(Magenheim, J.; Schubert, S., Hrsg.): Informatics and Student Assessment -Concepts of Empirical Research and Standardisation of Measurement in the Areaof Didactics of Informatics. Bd. 1. LNI Seminars, Gesellschaft für Informatik,Bonn, S. 65–76, 2004.[Mi14]Ministerium für Schule und Weiterbildung des Landes Nordrhein-Westfalen:Kernlehrplan für die Sekundarstufe II Gymnasium/Gesamtschule in Nordrhein-Westfalen, 2014.[Mi18]Ministerium für Bildung, Jugend und Sport des Landes Brandenburg: Rahmen-lehrplan für den Unterricht in der gymnasialen Oberstufe im Land Brandenburg,2018.[MR17]Müsseler, J.; Rieger, M.: Allgemeine Psychologie. Springer-Verlag, Berlin Hei-delberg New York, 2017,    : 978-3-642-53898-8.[Ni18]Nicholson, S.: Creating Engaging Escape Rooms for the Classroom. ChildhoodEducation 94/1, S. 44–49, 2018.[Sc13]Schoenfeld, A. H.: Reﬂections on Problem Solving Theory and Practice. TheMathematics Enthusiast 10/1, S. 9–34, 2013.88 Alexander Hacke, Mareen Przybylla, Andreas SchwillcbaArno Pasternak (Hrsg.): INFOS2019 Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Informatik in der Grundschule – StellschraubeLehrerbildungZur Notwendigkeit nachhaltiger informatischer Bildung für angehendeGrundschullehrkräfteKathrin Haselmeier1Abstract:Die universitäre Lehrerbildung für Grundschullehrkräfte muss Informatik als Gegenstandder allgemeinen Bildung umfassen. Aus entwicklungspsychologischer Sicht begründet der Beitrag,warum Informatik bereits in der Grundschule Bestandteil des Unterrichts sein muss und referenziertdabei aktuelle Studienergebnisse. Im Spannungsfeld Lehren und Lernen wird herausgestellt, dassgut ausgebildete Lehrkräfte zwar zentral für die kompetente Vermittlung informatischer Inhalte undGegenstände in der Grundschule sind, sie jedoch bislang im Rahmen ihrer Ausbildung bzw. derWeiterqualiﬁzierung wenig Möglichkeiten haben, fundierte informatische Kompetenzen auf- undauszubauen. Fortbildungsmöglichkeiten für Bestandslehrkräfte werden aufgezeigt, hinsichtlich ihrerMöglichkeiten und Grenzen diskutiert und schließlich der Einﬂuss auf die universitäre Lehrerbildungals maßgebliche Stellschraube für Informatik in der Grundschule identiﬁziert. Aus der dargestelltenNotwendigkeit heraus wurde eine eigene universitäre Veranstaltung für Studierende konzipiertund (bisher zwei Mal) durchgeführt.2Vorläuﬁge Evaluationsaspekte aus der Veranstaltung werdenvorgestellt und diskutiert.Keywords:Grundschule; Informatische Bildung; Lehrerbildung1 SituationInformatik wird gebraucht. Diese Aussage ist die Essenz eines wirtschaftlichen, politischenund gesellschaftlichen Diskurses, der inzwischen seit einigen Jahren sehr präsent geführtwird. Allen Hindernissen und allen Bedenken zum Trotz bleibt unterm Strich die Erkenntnis:Ohne Informatikkenntnis ist eine mündige Teilhabe kaum mehr zu realisieren. Informatikﬁndet sich in allen Lebensbereichen, sie ist omnipräsent und wird nicht mehr verschwinden– egal, wie man zu ihr steht. Ebenso ist unbestritten, dass es viel zu wenig Menschenmit informatischer Bildung gibt, die als Experten Gestaltungsaufgaben übernehmen undinformatische Umsetzungen sinnstiftend modellieren können. Sobald jedoch der Begri »Bildung« im Zusammenhang mit »Informatik« genannt wird, rückt auch die Schule alsBildungsinstitution in den Fokus. In den Dreiklang aus Informatik-Bildung-Schule mischt1Bergische Universität Wuppertal, Didaktik der Informatik, Gaußstraße 20, 42119 Wuppertal, Deutschlandkhaselmeier@uni-wuppertal.de2Gefördert im Rahmen der Qualitätso ensive Lehrerbildung des BMBW – Teilprojekt KoLBi, »Kohärenz in derLehrerbildung« an der Bergischen Universität.cba doi:10.18420/infos2019-09Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 892 Kathrin Haselmeiersich noch eine weitere Komponente: Informatik gilt als Männerdomäne. Genderfragenkönnen also nicht unberücksichtigt bleiben.1.1Genderaspekte als Indikator für den »richtigen Zeitpunkt« zur Wahrnehmungeiner informatischen BildungsaufgabeAus der Geschlechterforschung ist bekannt, dass Kinder bis zum Eintritt in die Grundschulebereits sehr rigide, traditionelle Geschlechtsrollenstereotype ausbilden. Diese Zuweisungweicht ab Mitte der Grundschulzeit wieder auf, wird bis zum Einsetzen der Pubertätmodiﬁziert und dann sehr beständig getro en [vgl.BK10, S. 181]. Es ergibt sich alsoein recht kurzes Zeitfenster, in welchem informatische Bildung dazu beitragen kann, dieZuweisung an die Disziplin als »Männerdomäne« zu überwinden. Wagner gibt darüber hinauszu bedenken, dass geschlechterstereotype Verhaltensweisen eine deutliche Auswirkung aufBerufswahl und Bildungschancen haben und insbesondere Mädchen daraus resultierendBenachteiligungen erwachsen [vgl.Wa17]. Vor dem Hintergrund, dass Mädchen im Mittelüber signiﬁkant höhere computer- und informationsbezogene Kompetenzen verfügen alsJungen, ist diese Pille besonders bitter [vgl.Fr14].Die Grundschule muss als erste verpﬂichtende Bildungseinrichtung explizit in den Blickgenommen werden und mit ihr auch die überwiegend weiblichen Lehrkräfte.1.2 Informatische Bildung bei den »Bestandslehrkräften«Nun erwächst Bildung nicht schlicht aus dem Besuch einer Institution – vielmehr sind es dieMenschen, welche dort unterrichten, die den Bildungserfolg und die Rollenzuweisungenihrer Schüler*innen maßgeblich beeinﬂussen. Fehlen also im Erwachsenenalter informa-tikkundige Menschen, so ist ein Blick auf das eingesetzte pädagogische Personal, in dieinstitutionellen Bildungsaufgaben und die -abläufe aufschlussreich: An weiterführendenSchulen wird zu wenig Informatik unterrichtet und erreicht zudem dort überwiegendJungen. In der Grundschule fehlt Informatik (fast) vollständig, ist nicht im Fächerkanonenthalten und kommt somit im Studium oder in der zweiten Phase der Lehrerbildungnicht vor. Informatische Bildung bleibt individuellen Interessen und Schwerpunktsetzungenvorbehalten.2 Informatik versus MedienbildungDa in den Kollegien in der Regel keine informatische Bildung vorhanden ist, können sich dieSchulen nur auf ihre Vorstellungswelt zur »Digitalisierung« stützen. So werden überwiegendAngebote genutzt, die den Medieneinsatz im Unterricht zum Thema haben. Dieser Fokusist für Grundschulen zudem attraktiv, denn der Einsatz digitaler Medien hat das Potential,einige der Schwierigkeiten in den Grundschulen zu adressieren:Kompensation von zu wenig voll ausgebildeten Lehrkräften in den Kollegien, Unterstüt-zung bei unterschiedlichen Aufgaben in Inklusion und Integration und Möglichkeiten90 Kathrin HaselmeierInformatik in der Grundschule – Stellschraube Lehrerbildung 3für individuelle Förderungen auf verschiedenen Anforderungsniveaus.3Für nachhaltige,aufschließende informatische Bildung jedoch müssten Lehrkräfte nach Bergner et al. [vgl.Be17a] neben pädagogischer und didaktischer Handlungskompetenz auch über fachliche undfachdidaktische Kompetenzen verfügen, eine positive Einstellung zur Informatik aufweisensowie o en für neue Sichtweisen sein. Die grundlegende Bereitschaft sich entsprechendfortzubilden darf bei Lehrkräften vorausgesetzt werden, sie ist im Dienstrecht verankert.42.1 Fortbildungen als Problemlösung?Fortbildungen werden von Grundschullehrkräften in Nordrhein-Westfalen in der Regelin zwei verschiedenen Modi besucht: Entweder im Rahmen ihrer Tätigkeit für die Fach-konferenzen, um auf dem aktuellen Stand in den Fächern zu bleiben oder vorhandeneFachkenntnisse vertiefen zu können, oder im Kontext einer Fortbildung für das gesamte Kol-legium einer Grundschule. Diese Fortbildungen richten sich an die Arbeitsschwerpunkte, diealle Kollegiumsmitglieder vereinen: Pädagogik in allen Ausprägungen und Schwerpunkten,Schulentwicklung, Unterrichtsmethoden, sowie schul- und klassenorientierte Organisati-onsformen. Neben dem Aspekt der Freiwilligkeit und der interessensgebundenen Auswahl,der oft fehlenden Möglichkeit, überhaupt an Fortbildungen teilzunehmen und dem breitenAufgabenspektrum an Grundschulen, werden Fortbildungen für Grundschullehrkräfte inNordrhein-Westfalen maßgeblich schul- und themenbezogen von Kolleg*innen andererSchulen der gleichen Schulform durchgeführt. Für die Ausbildung und die Fortbildung derLehrkräfte an Grundschulen bedeutet dies, dass das Fortbildungsportfolio zur »Digitalisie-rung« nahezu vollständig vonmediena nen Grundschullehrkräften angeboten wird.Es entsteht eine Art Perpetuum mobile der sich selbst bestärkenden Vorstellungsbilderbezüglich der »Digitalisierung«.Von Seiten der Schulträger wird gleichzeitig viel Geld in die Hand genommen, um eine Aus-stattung mit Informatiksystemen an den Schulen voranzutreiben, um die »Digitalisierung«in die Schulen zu transportieren. Das Informatiksystem wird in der Regelbenutzt, um Inhalteanderer Fächer zu erarbeiten, er dient als reines Werkzeug.5Dies ist nicht grundlegendfalsch, greift aber zu kurz. Informatiksysteme müssen »entzaubert«, Konzepte, Ideen und3Laut ICILS-Studie [vgl.Ei17, S.15] wird der »digitalen« Technik zwar viel Potential zugesprochen, doch wirddieses Potential von den Schulen derzeit nicht ausgeschöpft, eskannohne informatische Bildung nicht ausge-schöpft werden. Derzeit müssen Lehrkräfte an Grundschulen darauf vertrauen, dass Verlage und Unternehmengeeignete Lern- und Diagnoseprogramme entwickeln und diese Werkzeuge zur Verfügung stellen. Da jedoch dieindividuellen Lernwege der Kinder im Zentrum der pädagogischen Überlegungen der Lehrkräfte stehen, könnendiese Werkzeuge nicht umfänglich zielführend eingesetzt und an die Schüler*innen der eigenen Klasse angepasstwerden. Somit scha en sie zwar kurzfristig Entlastung, tragen aber nicht zur Lösung des Problems bei. Mehrnoch: Es steht zu vermuten, dass individuelle Lerrnschwierigkeiten sich verschärfen, wenn sie nicht mehr vonder Lehrkraft adressiert werden, sondern von einem Werkzeug, das unabhängig von der konkreten Lernsituationin der eigenen Lerngruppe »funktionieren« soll.4Nachzulesen in der ADO NRW, §11 und im Schulgesetz §17 LVO §57, Absatz 35Diese Fehlvorstellung mahnt Eickelmann in der Auswertung der ICILS-Studie an und gibt zu bedenken,dass Ausstattungsprogramme ohne fundiertes pädagogisches Konzept nicht oder nur selten zu nachhaltigenVeränderungen des Lernens führen [vgl.Ei17, S.16].Informatik an Grundschulen – Stellschraube Lehrerbildung 914 Kathrin HaselmeierGrundlagen thematisiert und beherrscht werden,bevorsie als Werkzeuge kompetent undmündig eingesetzt werden können.2.2KMK-Strategie konkret am Besipiel des Medienkompetenzrahmens Nordrhein-WestfalenIn der KMK-Strategie »Bildung in der digitalen Welt« werden sechs Kompetenzbereicheformuliert, die in den Bundesländern umzusetzen sind [vgl.KM16]. In Nordrhein-Westfalenwerden diese Kernbereiche im Medienkompetenzrahmen für alle Schulstufen aufgegri enund speziﬁziert. Die ursprünglichen Vorgaben zur Querschnittsaufgabe »Medienkompetenz«wurden überarbeitet und um eine sechste Spalte ergänzt. Dort werden unter der Kompetenz»Problemlösen und Modellieren« die Teilkompetenzen »Prinzipien der digitalen Welt«,»Algorithmen erkennen«, »Modellieren und Programmieren« und »Bedeutung von Algo-rithmen« ausgewiesen und knapp vertieft [vgl.MS18]. Hier ist die Informatik klar alsBezugswissenschaft zu identiﬁzieren.Mit der Überarbeitung des Medienkompetenzrahmens ist die Tür zur informatischen Bildungin der Grundschule aufgestoßen worden. Darüber hinaus soll der Medienkompetenzrahmenauch als Basis für die Anpassung der Kerncurricula in der Lehrer*innenbildung verstandenwerden. Es existieren also bereits verpﬂichtende informatische Bildungsbestandteile fürdie Grundschule. Es geht daher sowohl aus entwicklungspsychologischer als auch ausschulpolitischer Sicht nicht mehr um die Frage,obInformatik in die Grundschule soll,sondern nur noch darumwie.63 Stellschraube LehrerbildungUm vor diesem Hintergrund sicher zu stellen, dass in den Grundschulen Personal zur Verfü-gung steht, um den notwendigen Informatikunterricht zu erteilen, liegt eine verpﬂichtendeVerankerung von Informatik in den universitären Lehrangeboten für Grundschullehrkräftennahe. Blömeke [vgl.BKL10] identiﬁziert in ihren fachübergreifenden Ausführungen zu derStudie TEDS-M7die starke Überschneidung von Lehrer- und Schülerkompetenzen. Dass derWeg Lehrer*innenbildung-Lehrer*innenhandeln-Lernergebnisse der Schüler*innen eineWirkungskette darstellt, wird unter anderem von Terhart [Te06] beschrieben. Die curriculareVerankerung entsprechender Elemente in der Lehrerbildung (für die Grundschule leiderimmer noch überwiegend LehrerINNENbildung) kann dazu beitragen, dass Hürden aufSeiten der Lehrkräfte abgebaut werden und das fachliche Selbstkonzept bezüglich Informatik6Leider wird die Frage nach demwiein Nordrhein-Westfalen jedoch nicht VOR der verpﬂichtenden Einführung desMedienkompetenzrahmens beantwortet. Vielmehr sind alle einzelnen Schulen dazu aufgefordert, standortbezogeneigene Medienkonzepte zu entwickeln. Es ist zu überlegen, die Schulen bei dieser Aufgabe kompetent zuunterstützen, indem beispielsweise ein allgemeines Medien- und Informatikkonzept zur Verfügung gestellt wird,welches alle Aspekte der KMK-Strategie abdeckt und durch die Schulen entsprechend angepasst und modiﬁziertwerden kann.7»Teacher Education and Development Study«, Internationale Vergleichstudie zur E ektivität des deutschenLehrerausbildungssystems [BKL10]92 Kathrin HaselmeierInformatik in der Grundschule – Stellschraube Lehrerbildung 5positiv verändert wird. Lehrkräfte wiederum, die keine Hemmungen gegenüber dem Fachund dem eigenen Können haben UND die in Informatik gebildet sind, könnten dazu beitra-gen, das Spannungsfeld Informatik-Bildung-Schule-Gender positiv zu gestalten und ihreKompetenz für den Bildungserfolg der Kinder, insbesondere der Mädchen, gewinnbringendeinzusetzen.Qualiﬁzierte Lehrkräfte können den Herausforderungen informatischer Bildung kompetentund verantwortungsbewusst begegnen. Damit scha t die universitäre Lehrerbildung dienotwendigen Voraussetzungen und muss als mögliche Stellschraube identiﬁziert werden.4 Lehrveranstaltung »Informatik für die Grundschule«Noch ist Informatik weit davon entfernt, ein verpﬂichtender Bestandteil derGrund-schullehrerbildung zu sein. Weder die Fachdidaktiken noch die angehenden Grundschul-lehrkräfte sind auf diese Aufgabe vorbereitet. Best kann in den Zwischenergebnissen seinerForschung zwar informatische Präkonzepte bei den interviewten Grundschullehrkräftenidentiﬁzieren [vgl.Be17b], Dengel und Heuer berichten jedoch, dass Grundschullehrkräftehäuﬁger falsche Vorstellungsbilder zur Informatik haben als Lehramtstudierende andererSchularten [vgl.DH17]. Sie gehen sogar so weit, von einem »speziellen Wissensdeﬁzit beiangehenden Grundschullehrkräften« zu sprechen [vgl.DH17, S.95]. Darüber hinaus weisenDengel und Heuer darauf hin, dass Menschen mit falschen Vorstellungen bezüglich derInformatik später aufgenommenes, korrektes Wissen nicht in das eigene Vorstellungsbildintegrieren können, da eine Assmiliation bei sich widersprechenden Vorstellungsbildernunmöglich ist und die Fehlvorstellungen somit persistent sind [vgl. ebenda]. Diese Persistenzmuss bei der Konzeption einer Lehrveranstaltung von Informatikdidaktikern berücksichtigtwerden, um nachhaltige informatische Kompetenz zu ermöglichen. Während Lehrkräftean weiterführenden Schulen sich für das Fach Informatik aktiv entscheiden und die uni-versitäre Lehre an ein grundlegendes Interesse anknüpfen kann, ist die Ausgangslage beiGrundschullehrkräften eine völlig andere. Grundschulinformatikdidaktik ist bislang auchkein durchgängiger Bestandteil der Informatikfachdidaktik und wird fast ausschließlichvon Menschen beforscht, die Informatik studiert haben – und kein Grundschullehramt.Sie kennen weder Bedingungsgefüge in Schulen, noch die Zielgruppe(d. h. nicht nurein einzelnes Kind) im Klassenverband. Während Nicht-Informatiker oft ein verzerrtesBild von Informatik haben, haben Nicht-Grundschulpädagogen oft ein verzerrtes Bild vonGrundschulen – und auch von Grundschullehrkräften. Beide Perspektiven zu vereinen kannnur im gegenseitigen Austausch auf Augenhöhe gelingen. Einen ersten Ansatz kann dasvierstündige Seminar »Informatik für die Grundschule« an der Universität Wuppertal bieten,das im Curriculum verankert wurde und 6 Leistungspunkte für den Optionalbereich derBildungswissenschaften abdeckt.Von der Annahme ausgehend, dass Wissen nicht in bestimmten Alterstufen, sondern inbestimmten Kompetenzstufen erworben wird, ist die Veranstaltung für absolute Informatik-novizen konzipiert. Selbstverständlich sind Tempo, Komplexität, Abstraktion, Arbeitsweisenund Theoriegehalt auf Studierende abgestimmt, doch zeigt die vergleichende Erfahrung ausder Arbeit mit den drei Zielgruppen »Kinder«, »Lehrkräfte« und »Studierende«, dass dieInformatik an Grundschulen – Stellschraube Lehrerbildung 936 Kathrin HaselmeierNutzungskompetenz zwar variiert, die informatische Kompetenz jedoch generationsüber-greifend auf einem ähnlichen Niveau zu verorten ist.Es wurde darüber hinaus mit in die Überlegungen einbezogen, dass es den zukünftigenLehrkräften möglichst leicht gemacht wird, die erarbeiteten Inhalte in der Grundschule tat-sächlich einzusetzen. Grundschullehrkräfte erteilen bereits in mehr Fächern Fachunterricht,als sie studiert haben. Sie sind darauf angewiesen, sich auch fachfremde Gegenstände fürden Unterricht eigenständig zu erschließen. In der Regel können sie dabei auf ihre in dereigenen Biograﬁe erworbenen Fachkonzepte zurückgreifen und daher einen Einstieg in neueGegenstände der jeweiligen Disziplin ﬁnden und kreativ eigenes Unterrichtsmaterial zukonzipieren. Für die Informatik ist bei der Zielgruppe jedoch überwiegend entweder kein,oder ein falsches Fachkonzept zu identiﬁzieren. Daher muss es einen engen Rahmen geben,innerhalb dessen Studierende ihr fachliches Selbstkonzept hinterfragen und anpassen können,grundlegende Ideen kennenlernen und den Transfer für den Grundschulunterricht bereitsvorbereitet ﬁnden. Die curricularen Entscheidungen zur Lehrveranstaltung orientieren sichan den Kompetenzempfehlungen der Gesellschaft für Informatik für die Grundschule [GI19].Die in der Veranstaltung berücksichtigten informatischen Gegenstände genügen den Kriteri-en, die durch die Methode der fundamentalen Ideen als durchaus grundlegende Elemente derInformatik identiﬁziert werden können. Die in Tabelle 1 aufgeführten Gegenstände wurdenfür die Veranstaltung für fachlich nicht vorbereitete Studierende aufgearbeitet, didaktischreduziert und bilden den Ausgangspunkt für den Aufschluss jeden Lerngegenstandes, sowohlmitals auchüberdas Material.In der vierstündigen Veranstaltung wechseln sich theoretische und praktische Arbeitsphasenab, d. h. nach dem theoretischen Einstieg z. B. in einen Gegenstand der Kryptologie, werdenpassend Unterrichtmaterialien für die Grundschule vorgestellt, erprobt, diskutiert undzurückbezogen auf den theoretischen Ausgangspunkt. Theorie und Praxis ergänzen sichund adressieren die Grundschule.Die eingesetzten Unterrichtmaterialien aus dem Grundschulkontext werden von allen Se-minarteilnehmern jeweils in einem Klassensatz erstellt und wandern zusammen mit dentheoretischen Ausführungen in eine persönliche »Informatikbox«, angelehnt an das Konzeptder »Klassenkisten« zum Sachunterricht der Westfälischen Wilhelms Universität Münster[vgl.MST08]). Die in der Veranstaltung gelieferten Deﬁnitionen, Erklärungen und Erläute-rungen werden auf Wortspeicherkarten verschriftlicht und für den Einsatz im Klassenraumaufbereitet. Darüber hinaus legen die Studierenden ein Glossar an, das sie fortlaufendergänzen. Passend zum theoretischen Input und zum vorgestellten Material werden von denStudierenden Unterrichtsentwürfe entwickelt, die sich an den Vorgaben der Studienseminareorientieren. Diese Unterrichtsentwürfe werden in den letzten Veranstaltungen im Seminarerprobt und diskutiert. Nach der abschließenden Überarbeitung landen alle Materialien undUnterrichtsentwürfe ebenfalls in der »Informatikbox«. Diese enthält also im Anschluss andas Seminar eine einsatzfähige Materialausstattung für fundierten Grundschulinformatik-unterricht, auf die die Studierenden viel Mühe verwendet haben, welche sie erprobt unddiskutiert haben und zu der sie über das theoretische Wissen verfügen. Die Begleitforschungzu den Sachunterrichtkisten aus Münster zeigt, dass solcherart einsatzbereite Boxen im94 Kathrin HaselmeierInformatik in der Grundschule – Stellschraube Lehrerbildung 7späteren Unterricht auch eingesetzt werden [vgl.MST08]).Fachgebiet 1. Durchlauf SoSe18 2. Durchlauf WiSe18/19Technische InformatikRechneraufbau RechneraufbauHardwarekomponenten HardwarekomponentenFestplatte ö nenNetzwerkeInternet InternetCalliopeTheoretische InformatikKryptologie KryptologieBinärdarstellung BinärdarstellungASCIIKontrollstrukturen KontrollstrukturenRekursionPraktische InformatikDjikstra- AlgorithmusRoutenplanungSuchalgorithmen Binäre SucheSortieralgorithmen Bubble-SortAngewandte InformatikWeg einer E-Mail Weg einer E-MailE-Mail-Sicherheit E-Mail-SicherheitStrukturierung von DatenBetriebssystemeInformatik, MenschModellierung Modellierungund GesellschaftPhänomenbereiche Phänomenbereichesowie DidaktikFundamentale IdeenInformatik im Alltag Informatik im AlltagGesellschaftlicher DiskursInformatik in Grundschulen Informatik in GrundschulenGeschichte der Informatik Geschichte der InformatikTab. 1: Gegenstände im ersten und zweiten Durchlauf5 Darstellung erster ErkenntnisseNach dem ersten Veranstaltungsdurchlauf mit 10 Teilnehmer*innen (8 weiblich, 2 männlich)hatten alle Studierenden des Seminars deutliche Hürden bezüglich der Informatik abgebaut.Die Aussage: »Das ist Informatik? Cool!« könnte sinnbildlich stehen für den A-Ha-E ekt,der sich bei ihnen einstellte. Alle Teilnehmer*innen berichteten im Anschluss von einemveränderten Selbst- und Fachkonzept, von einer überwundenen Hürde und einer verändertenEinstellung zum Thema. Nach dem Erfolg des ersten Durchgangs wurde das Seminarentgegen der ursprünglichen Planung einer jährlichen Durchführung im folgenden Semesterdirekt wieder angeboten. Die Teilnehmerzahl wurde im zweiten Durchgang erhöht und 20Plätze konnten an 17 weibliche und 3 männliche Teilnehmer*innen vergeben werden. Umallen Studierenden die Möglichkeit einzuräumen, in Partnerarbeit einen UnterrichtsentwurfInformatik an Grundschulen – Stellschraube Lehrerbildung 958 Kathrin Haselmeierzu einem ausgewählten Thema zu erstellen und sich intensiv mit einem selbst gewähltenGegenstand der Informatik auseinanderzusetzen, musste der theoretische Input und derUmgang mit dem Material eingeschränkt werden (vgl. Tabelle1). Gekürzt wurden Inhalte,bei denen vermutet wurde, dass sich der Lebensweltbezug für Grundschulkinder erst aufden zweiten Blick oder über Umwege erschließt.Während bei 10 Personen der persönliche Kontakt gewährleistet und das Lerntempo sehrlangsam war (was mitunter auch eine 1 zu 1 – Betreuung ermöglichte), ﬁel diese engeBetreuung bei 20 Teilnehmer*innen deutlich geringer aus. Neben der engen Anbindung undder Möglichkeit, sich der »Informatik« langsam und in einem kleinen, geschützen Rahmenzu nähern, ist mit dieser Einschränkung auch die Möglichkeit erschwert, Fehlkonzepte beiden Studierenden zu identiﬁzieren und zu korrigieren und auf Fragen, Anregungen undÄngste bezüglich der Informatik zugewandt einzugehen.Erste Ergebnisse im Zusammenhang mit den durchgeführten Veranstaltungen können infünf Punkten zusammenfassend dargestellt werden:•Ängste und Unsicherheit, bzw. falsche oder fehlende Vorstellungen sind durchgängigund bislang ohne Ausnahme bei allen Studierenden in beiden Durchläufen zubeobachten. Es kann nur zum Teil davon gesprochen werden, dassneueGegenständevermittelt werden. Vielmehr geht es häuﬁg zunächst darumfalscheVorstellungen zurevidieren,bevormit der Entwicklung informatischer Kompetenz überhaupt begonnenwerdenkann.•Der Lernprozess ist sehr zeitaufwändig und erfordert eine sehr enge Betreuung.•Viele Gegenstände und Inhalte sind für die Studierenden zunächst fremd oder zumTeil negativ konnotiert.•Eine in Teilnehmerzahl, Tempo und Niveau reduzierte Veranstaltung erreicht esbesser, Studierende für die Gegenstände zu gewinnen, als eine gestra te Veranstaltungfür mehr Studierende.•Die Hinwendung zum einzelnen Studierenden erlaubt die nötige Korrektur derfachlichen Selbsteinschätzung bezüglich der Informatik und eine stabile Orientierungzur Überwindung der eigenen Unsicherheiten.•Der Schritt, die Teilnehmerzahlen zu verdoppeln, kann als nicht zielführend angesehenwerden.•Die Reduktion des fachlichen Inputs wirkte sich auf die Veranstaltungstiefe negativaus.6 Weiterführende FragenDurch die dargestellten Rahmenbedingungen und die ersten explorativ gewonnenen Ergeb-nisse werden eine Reihe von Fragen aufgeworfen, die in dem weiteren Forschungsprozess96 Kathrin HaselmeierInformatik in der Grundschule – Stellschraube Lehrerbildung 9adressiert werden müssen. Es gilt zunächst herauszuﬁnden, ob diese Ergebnisse sich stabilabbilden. In einem weiteren Schritt muss abgewogen werden, welche Priorität zu setzenist: Ist die exclusive Veranstaltung für nur 10 Studierende mit besseren Ergebnissen demSeminar für 20 Teilnehmer*innen vorzuziehen? Welche Kompetenzen müssen zukünftigeGrundschulehrkräfte bezüglich der Informatik in der Grundschule erwerben? und wiekann das überprüft werden? Können wir davon ausgehen, dass auf diesem Weg Informa-tik überhaupt zukünftig Eingang in den Unterricht dieser Lehrkräfte ﬁndet? Kann eineLangzeitbeobachtung eventuell Aufschluss geben? Dürfen die technischen Möglichkeitender Informatik als zentrales Element zugunsten der Ideenwelt der Informatik zunächstausgeklammert werden?Es zeichnet sich ab, dass die Studierenden beides benötigen: Einblick in Konzepte undIdeen UND Einblick in die Systeme. Eine einzelne Lehrveranstaltung in oben angegebenerForm kann diesen Spagat nicht leisten. Soll Informatik in der Breite wirken, sollen also alleStudierenden des Grundschullehramtes über fundierte Kenntnisse verfügen, ist über andereuniversitäre Veranstaltungsformate nachzudenken.Werden sich die Ergebnisse aus den bisher untersuchten Kontexten durch weitergehendequantitative und qualitative Studien verstetigen / bestärken, wird auch zu prüfen sein, ob(und wie) Seitene ekte für die Entwicklung der informatischen Bildung der Schülerinnenund Schüler festzustellen sind. In diesem Fall könnte es angezeigt sein, die Umsetzungder Gestaltung der informatischen Bildung z. B. bzgl. der Gruppengröße in den Blick zunehmen. Zudem muss vor dem Hintergrund dieser Ergebnisse überlegt werden, wie und obSchüler*innen einen ähnlichen Kompetenzuwachs in den üblichen großen Lerngruppenüberhaupt erreichen können und welche Bedingungen neben fundierter Lehrerausbildungim Schulkontext zusätzlich erfüllt sein müssen.Literatur[Be17a]Bergner, N.; Köster, H.; Magenheim, J.; Müller, K.; Romeike, R.; Schroeder, U.;Schulte, C.: Zieldimensionen für frühe informatische Bildung im Kindergartenund in der Grundschule. In (Diethelm, I., Hrsg.): Informatik im Unterricht– so geht’s. LectureNotes in Informatics(LNI)-Proceedings, Gesellschaft fürInformatik e.V. (GI), Bonn, S. 53–62, Sep. 2017,    : 978-3-88579-668-8,   :https://metager.to/9188-, Stand: 17. 05. 2019.[Be17b]Best, A.: Bild der Informatik von Grundschullehrpersonen. Erste Ergebnisse ausqualitativen Einzelfallstudien. In (Diethelm, I., Hrsg.): Informatik im Unterricht– so geht’s. LectureNotes in Informatics(LNI)-Proceedings, Gesellschaft fürInformatik e.V. (GI), Bonn, S. 83–86, Sep. 2017,    : 978-3-88579-668-8,   :https://metager.to/9188-, Stand: 17. 05. 2019.[BK10]Becker, R.; Kortendieck, B., Hrsg.: Handbuch Frauen- und Geschlechterfor-schung, VS Verlag für Sozialwissenschaften der Springer Fachmedien, 2010,    : 978-3-531-17170-8.Informatik an Grundschulen – Stellschraube Lehrerbildung 9710 Kathrin Haselmeier[BKL10]Blömeke, S.; Kaiser, G.; Lehmann, R., Hrsg.: TEDS-M 2008 Primarstufe:Ziele, Untersuchungsanlage und zentrale Ergebnisse, Professionelle Kompetenzund Lerngelegenheiten angehender Primarstufenlehrkräfte im internationalenVergleich, Waxmann Verlag, 2010, S. 11–38,    : 978-3-8309-2281-0.[DH17]Dengel, A.; Heuer, U.: Aufbau des Internets: Vorstellungsbilder angehenderLehrkräfte. In (Diethelm, I., Hrsg.): Informatik im Unterricht – so geht’s.LectureNotes in Informatics(LNI)-Proceedings, Gesellschaft für Informatike.V. (GI), Bonn, S. 87–97, Sep. 2017,    : 978-3-88579-668-8,   :https://metager.to/9188-, Stand: 17. 05. 2019.[Di17]Diethelm, I., Hrsg.: Informatische Bildung zum Verstehen und Gestalten derdigitalen Welt, INFOS 2017, 17. GI-Fachtagung Informatik und Schule, 13.–15. September 2017, Oldenburg, Germany, LectureNotes in Informatics(LNI)-Proceedings, Bonn: Gesellschaft für Informatik e.V. (GI), 2017,    : 978-3-88579-668-8,   :https://metager.to/9188-, Stand: 17. 05. 2019.[Ei17]Eickelmann, B.: Konzepte und Entwicklungsperspektiven Kompetenzen in derdigitalen Welt. 2017.[Fr14]Fraillon, J.; Ainley, J.; Schulz, W.; Friedman, T.; Gebhardt, E.: Preparing for Lifein a Digital Age – The IEA International Computer and Information LiteracyStudy (ICILS) International Report. Springer Open, Melbourne, Australia, 2014.[GI19]Gesellschaft für Informatik e. V., Hrsg.: Kompetenzen für informatische Bildungim Primarbereich, Empfehlungen der Gesellschaft für Informatik e. V. Erarbeitetvom Arbeitskreis „Bildungsstandards Primarbereich“ – Beschluss des  -Präsidiums vom 31. Januar 2019 – wird in gedruckter Form der LOG IN 39(2019) Heft 191/192 beigefügt, 7. Feb. 2019,   :http://uni-w.de/1gm,Stand: 09. 05. 2019.[KM16]KMK, Hrsg.: Kompetenzen in der digitalen Welt, Kompetenzbereiche, Dez.2016,   :https://metager.to/r6tqb, Stand: 17. 05. 2019.[MS18]MSB-NW, Hrsg.: Medienkompetenzrahmen NRW – Webseite, Ministerium fürSchule und Bildung des Landes Nordrhein-Westfalen (MSB-NW), 2018,   :https://t1p.de/00on, Stand: 11. 05. 2019.[MST08]Möller, K., Hrsg.: Lernen mit der Klasse(n)kiste, Ergebnisse einer Befragungvon grundschullehrkräften, Westfälische Wilhelms Universität, 2008,    :978-3-00-025409-3.[Te06]Terhart, E.: Universität und Lehrerbildung: Perspektiven einer Partnerschaft. In:Lehrerbildung im Diskurs. S. 20–39, 2006.[Wa17]Wagner, P., Hrsg.: Handbuch Inklusion, Grundlagen vorurteilsbewusster Bildungund Erziehung. Herder Verlag, Freiburg, 2017.98 Kathrin HaselmeiercbaA. Pasternak (Hrsg.): INFOS 2019,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Interesse an Informatik und Informatikselbstkonzept zuBeginn der Sekundarstufe I des GymnasiumsKathrin Haselmeier1, Ludger Humbert2, Klaus Killich3, Dorothee Müller4Abstract:Die Kompetenzentwicklung bei Schülerinnen und Schülern hängt deutlich von demfachlichen Interesse und dem fachlichen Selbstkonzept ab. Im Rahmen eines forschend begleitetenModellvorhabens zur Informatik in der Erprobungsstufe des Gymnasiums wurden zu Beginn desSchuljahres 2018/19 über 2 500 Schülerinnen und Schüler der Jahrgangsstufe 5 befragt. Die leitendeForschungsfrage dieser Untersuchung war: Welche motivationalen Merkmale in der AusprägungInteresse an InformatikundInformatikselbstkonzepthaben Schülerinnen und Schüler zu Beginn desModellvorhabens am Anfang der Jahrgangsstufe 5?Die Ergebnisse zeigen, dass bei den Befragten im Durchschnitt das Interesse an Informatik sehr hoch undihr fachliches Selbstkonzept bezüglich der Informatik positiv ist. Neben diesen, die gesamte Stichprobebetre enden Ergebnissen wird die Befragung auch unter den beiden Aspekten geschlechtsbezogeneDisparität und Wirkung von bereits besuchtem Informatikunterricht di erenziert untersucht. Bei denSchülerinnenist sowohl bezüglich des Interesses an Informatik wie des Informatikselbstkonzepteseine signiﬁkant stärkere Unsicherheit zu erkennen als bei männlichen Schülern. Die Unterschiedezwischen Befragten, die angeben, bereits Informatikunterricht gehabt zu haben, und denjenigen ohneInformatikunterricht sind gering. Dabei weist die Gruppe mit Informatikunterricht ein etwas höheresInteresse am Informatik und ein leicht positiveres Informatikselbstkonzept auf.Keywords:Einstieg Informatik; Informatikselbstkonzept; Fachliches Interesse Informatik1 Forschungsstand und Forschungsziele1.1 Fachliches Interesse und fachliches SelbstkonzeptIn der empirischen Bildungsforschung stehen zunehmend motivationale und a ektiveEinﬂussfaktoren im Fokus der Forschung. Die Untersuchung dieser Faktoren gewinnt umso mehr an Wichtigkeit, je mehr die Forschungsergebnisse einen deutlichen Einﬂuss auf dieKompetenzentwicklung und den Lernerfolg belegen. Vor allem die große Bedeutung dermotivationalen Faktoren fachliches Interesse und fachliches Selbstkonzept für die schulischeLeistungsentwicklung ist unbestritten und für einige Fächer – in erster Linie für mathematisch-naturwissenschaftliche Fächer und Deutsch – durch empirische Untersuchungen belegt [vgl.1Bergische Universität Wuppertal (BUW), Didaktik der Informatik (DdI), Gaußstr. 20, 42 119 Wuppertal (BUW),khaselmeier@uni-wuppertal.de2BUW – DdIhumbert@uni-wuppertal.de3Bezirksregierung Düsseldorf, Am Bonneshof 35, 40 474 Düsseldorf,klaus.killich@brd.nrw.de4BUW – DdI,dmueller@uni-wuppertal.decba doi:10.18420/infos2019-10Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 992 Kathrin Haselmeier, Ludger Humbert, Dorothee Müller, Klaus Killichz. B.He11;KH06;Kö06;Le08]. Fachliches Interesse und fachliches Selbstkonzept stehenin Wechselwirkung zueinander [vglSt17].Dasfachliche Interesse– d. h. im Schulkontext das Interesse an einem Schulfach – manifes-tiert sich in positiven Emotionen gegenüber den Gegenständen des Faches und in seinerallgemeinen Wertschätzung [vgl.Sc09]. Im Grundschulalter ist das fachliche Interesseim Allgemeinen hoch. Es di erenziert und verfestigt sich in der Sekundarstufe I [vgl.Pa13, S. 361]. Das fachliche Interesse ist u. a. entsprechend der geschlechtsstereotypischenFächerzuordnung ausgeprägt [Le08]. So zeigt sich bei Wahlfächern, dass Fächer aus demmännlich konnotiertenMINT-Bereich5von Mädchen seltener gewählt werden [vgl. z. B.MS18a].Alsfachliches Selbstkonzeptwerden die auf ein spezielles Schulfach oder auf einen Kom-petenzbereich bezogenen Einschätzungen der eigenen Kompetenzen und Möglichkeitenverstanden. Seine starke Wirkung auf die Kompetenzentwicklung lässt es als „selbsterfüllen-de Prophezeiung“ [vgl.He11] erscheinen. In der Bildungswissenschaft wird die Förderungeines adäquaten und positiven Selbstkonzeptes daher oft sogar als das zentrale Ziel pädagogi-scher Bemühungen gewertet [MT09, S. 196]. Das individuelle fachliche Selbstkonzept einerSchülerin oder eines Schülers und ihre/seine tatsächlichen fachbezogenen Kompetenzenund Möglichkeiten entsprechen sich nicht. Wie das fachliche Interesse ist auch das fachlicheSelbstkonzept in der Primarstufe eher hoch, di erenziert sich in der Sekundarstufe I ausund fällt dabei im Durchschnitt ab [vgl.Pa13, S. 361]. Männliche Schüler verfügen im All-gemeinen, vor allem in den Fächern mit männlicher Geschlechtszuschreibung, bei gleicherKompetenz bereits in der Grundschule über ein deutlich höheres, oft überhöhtes, fachlichesSelbstkonzept als Schülerinnen, die häuﬁg ein zu niedriges fachliches Selbstkonzept besitzen.In der Sekundarstufe I verstärkt sich die geschlechtsbezogene Diskrepanz des fachlichenSelbstkonzeptes [KH06].1.2 Interesse an Informatik und InformatikselbstkonzeptDie Entwicklung eines hohen Interesses und positiven fachlichen Selbstkonzeptes bezüglichInformatik ist – nicht nur bei Schülerinnen und Schülern – durch weitverbreitete Fehl-vorstellungen [vgl.Kl13] zur Informatik behindert. Zum Interesse an Informatik undzum Informatikselbstkonzept von Schülerinnen und Schülern gibt es kaum empirischeUntersuchungen. Bei Befragungen von Studierenden, die retrospektiv den eigenen Infor-matikunterricht ihrer Schulzeit betrachten [vgl. z. B.Kn11;Ku08;Mü17], ﬁnden sichdeutliche Hinweise auf Hinderung der Entwicklung des Interesses an Informatik bzw. amInformatikunterricht durch tradierte Fehlvorstellungen zu Informatik (z. B. Männerfach,Nerdfach, reine Computerwissenschaft).Die frühe und anhaltende Einordnung des Schulfaches Informatik als „Männerfach“ hatEinﬂuss auf das informatische Selbstkonzept der Schülerinnen. Mädchen entdecken im Ge-gensatz zu Jungen oft erst im Informatikunterricht die Informatik für sich [vgl.Ku08, S. 120].5MINTist ein Akronym aus Mathematik, Informatik, Naturwissenschaften und Technik100 Kathrin Haselmeier et al.Interesse an Informatik und Informatikselbstkonzept zu Beginn der Sek I des Gym. 3Da Informatik in den meisten Bundesländern kein Pﬂichtfach ist, entfällt diese Möglichkeitfür viele Mädchen. Das Kurswahlverhalten belegt eine durch Geschlechtssterotypen geprägteInteressenverteilung, die eine noch stärkere geschlechtsbezogene Diskrepanz aufweist alsbei den anderenMINT-Fächern. So lag z. B. in Nordrhein-Westfalen im Schuljahr 2017/18der Anteil der weiblichen Teilnehmenden an den Grundkursen Informatik bei 25,39 % undin den Leistungskursen bei 15 % [vgl. z. B.MS18a, S. 106]. Die Zahlen der vorangegangenJahre waren ähnlich.Anders als die erwähnten qualitativen, retrospektiven Untersuchungen durch Befragung vonStudierenden, untersucht die 2013 durchgeführte ICILS-Studie Schülerinnen und Schüler derachten Jahrgangsstufe. Sie thematisierte mit dem „computerbezogenen Selbstkonzept“ undden „computerbezogenen Einstellungen“ [vgl.Lo14, S. 263 f] dem Informatikselbstkonzeptund dem Interesse an Informatik nahestehende Themen. Ein Ergebnis der ICILS-Studie2013 ist, dass Mädchen in Deutschland wie auch in den meisten anderen an der Studieteilnehmenden Ländern „über signiﬁkant höhere computer- und informationsbezogeneKompetenzen verfügen als Jungen“, während ihr entsprechendes Selbstkonzept unterdurch-schnittlich ist [vgl.Ei17, S. 14]. In dieser untersuchten Altersgruppe sind Interessen undfachliches Selbstkonzept schon weitgehend ausdi erenziert und oft verfestigt, so dassdie vorangegangen diesbezüglichen Entwicklungen von Interesse sind. Die Entwicklungdes Informatikselbstkonzeptes und des Interesses bezüglich des Faches Informatik in derÜbergangsphase zwischen Primarstufe und der Sekundarstufe I stellt ein Forschungsdesi-derat dar. Da sich fachliches Interesse und Selbstkonzept vor allem in der Sekundarstufe Iausdi erenzieren und festigen, ist genau dieser Zeitpunkt in der Bildungsentwicklung undKompetenzentwicklung für das Schulfach Informatik bedeutsam.2 Forschungsfeld, -fragen und -durchführungIn einem vierjährigen Forschungsprojekt werden 3 Jahrgänge von Schülerinnen und Schü-lern, die von der fünften bis zur sechsten Jahrgangsstufe an Informatikunterricht teilnehmen,forschend begleitet. Im ersten Teilprojekt, über das in diesem Beitrag berichtet wird, werdenInteresse und Selbstkonzept bezüglich der Informatik zu Beginn der fünften Jahrgangsstufeuntersucht.ForschungsumfeldDie Bezirksregierung Düsseldorf setzt ab dem Schuljahr 2018/19 über 4 Jahre ein Modellvor-haben um. Das Unterrichtsfach Informatik wird in diesem Modellvorhaben in den Klassen5 und 6 als Pﬂichtfach für alle Schülerinnen und Schüler implementiert (Tab. 1). Es sindzunächst 72 Gymnasien der Regierungsbezirke Düsseldorf und Köln beteiligt. Die Schulennehmen jeweils mit einer, mehreren oder allen Klassen der Jahrgangsstufe 5 teil. In denbeiden folgenden Schuljahren werden sich darüber hinaus weitere Schulen an dem Vorhabenbeteiligen. Der Unterricht ﬁndet im Umfang von einer Wochenstunde auf der Basis einesverbindlichen didaktischen Konzeptes statt. Die Schulen stellen je eine Ergänzungsstundefür den Informatikunterricht der jeweiligen Klassen in den Jahrgangsstufen 5 bzw. 6 zurInteresse an Informatik und Informatikselbstkonzept 1014 Kathrin Haselmeier, Ludger Humbert, Dorothee Müller, Klaus KillichVerfügung. Das Modellvorhaben wird durch die Informatikdidaktikgruppe der BergischenSchuljahr Klasse(n) derJahrgangsstufe 5Klasse(n) derJahrgangsstufe 62018/19X2019/20XX2020/21XX2021/22XTab. 1: Zeitlicher Ablauf des ModellvorhabensUniversität Wuppertal forschend begleitet. Mit dem Modellvorhaben erö net sich dieMöglichkeit, die informatikbezogenen motivationalen Tendenzen von Schülerinnen undSchülern zum Zeitpunkt des Übergangs von der Grundschule in die Sekundarstufe I zuerfassen, sowie deren Entwicklung unter dem Einﬂuss von Informatikunterricht über zweiJahre forschend zu begleiten.Forschungsfrage(n)Die im Folgenden dokumentierten Ergebnisse der quantitativen, empirischen Untersuchun-gen geben Hinweise zur Beantwortung der Frage:Welche motivationalen Merkmale in der Ausprägung Informatikselbstkonzept undInteresse an Informatik haben Schülerinnen und Schüler zu Beginn der Jahrgangsstufe5 des Gymnasiums?Von besonderem Interesse sind Bezüge zum Geschlecht der Befragten und zum Einﬂussvon bereits besuchtem Informatikunterricht, wodurch sich zu der Forschungsfrage folgendeUnterfragen ergeben:1.Bestehen geschlechtsbezogene Diskrepanzen bezüglich dieser Merkmale?2.Hat zuvor besuchter Informatikunterricht Einﬂuss auf diese Merkmale?Stichprobe und BefragungZu Beginn des Schuljahres wurden die Klassen der Jahrgangsstufe 5, die im Rahmendes Modellvorhabens mit Informatik im Gymnasium beginnen, aufgefordert, an einerOnline-Befragung teilzunehmen. Es haben insgesamt 2 570 Schülerinnen und Schüler denFragebogen vollständig bearbeitet.Die Befragungen sollten in der knappen Informatikunterrichtszeit durchgeführt und vonden Schülerinnen und Schülern möglichst selbstständig bearbeitet werden. Es wurdendie folgenden Rahmenbedingungen im Design der Befragung berücksichtigt: Die reineBearbeitungszeit des Fragebogens sollte deutlich unter 20 Minuten liegen. Und die Fragensollten kindgerecht formuliert und ohne Erklärungen der Lehrkraft verständlich sein.102 Kathrin Haselmeier et al.Interesse an Informatik und Informatikselbstkonzept zu Beginn der Sek I des Gym. 5Die Auswertung der von den Schülerinnen und Schüler bearbeiteten Fragen sollte Aufschlusszum Interesse bezüglich Informatik und zum Informatikselbstkonzept geben. Die Befragungist so konzipiert, dass ebenfalls di erenzierte Aussagen in Bezug auf diese motivationalenMerkmale unter den Aspekten möglicher geschlechtsbezogenen Disparität und der Wirkungvon bereits besuchtem Informatikunterricht gemacht werden können.Um die angestrebte Bearbeitungszeit zu realisieren und die Verständlichkeit für die Kinderzu erhöhen, wurden für die Datenerhebung statt der oft üblichen Likert-Skalen mit fünfoder sieben Antwortoptionen einfache, umgangssprachliche und meistens in der Ich-Formformulierte Aussagen genutzt, denen die Befragten in zwei Antwortoptionen zustimmenoder widersprechen konnten, wozu bei einigen Fragen noch die Option „Ich weiß nicht“hinzugefügt wurde (s. z. B.: Abschnitt3.3– Frage zum Interesse am Informatikunterricht).3 Ergebnisse3.1 Geschlecht der TeilnehmendenDie prozentuale Geschlechterverteilung entspricht mit 44,09 % weiblichen und 50,70 %männlichen Befragten (Tab. 2) nicht den zu erwartenden Werten. Denn in den Jahren von2007 bis 2017 lag in Nordrhein-Westfalen der Mädchenanteil in der fünften Jahrgangsstufedes Gymnasiums bei ca. 52 % [vgl.MS18b, S. 45].Mädchen Jungen keine Angabe1133 1303 13444,09 % 50,70 % 5,21 %Tab. 2: Geschlechterverteilung der 2 570 BefragtenSelbst die Annahme, dass ausschließlich Mädchen keine Angabe zum Geschlecht6gemachthätten, kann diese Abweichung nicht erklären. Eine mögliche Erklärung für diese Abwei-chung besteht darin, dass nach Auskunft/Angabe(n) einiger Schulen nicht alle Klassender Jahrgangsstufe 5 an dem Modellvorhaben teilnahmen. Die Zuordnung ihrer Kinderzu den „Informatikklassen“ wurde nach Aussage der Schulen von Eltern oft ausdrücklichangestrebt. Damit zeigt sich bereits zu diesem frühen Zeitpunkt der Kompetenzentwicklungim Schulfach Informatik eine leichte Tendenz der Geschlechtersegregation.6Bei der Frage nach dem Geschlecht wurde den Befragten die neben den Antwortmöglichkeiten „Ich bin einMädchen“ und „Ich bin ein Junge“ mit „Dazu möchte ich nichts sagen“ als drittes auch die Möglichkeit keinerAngabe gegeben, wovon 5,21 % Gebrauch machten.Interesse an Informatik und Informatikselbstkonzept 1036 Kathrin Haselmeier, Ludger Humbert, Dorothee Müller, Klaus Killich3.2 Informatikunterricht in der GrundschuleDie Aussage „Ich hatte bereits in der Grundschule Informatikunterricht“ bestätigen 10,5 %mit „Ja“ und verneinen 89,5 % mit der Auswahlmöglichkeit „Nein“. Die Frage nach dem„Informatikunterricht in der Grundschule“ hat das Ziel, bereits im schulischen Kontexterfahrene Gegenstände, die von den Schülerinnen und Schülern als zur Informatik gehörendeingeordnet werden, zu erfassen. Diese Zuordnung ist nicht in erster Linie von denerworbenen Kompetenzen, sondern vor allem von ihrer Einordnung durch die Lehrkraftder Grundschule abhängig. Solchermaßen zugeordnete Elemente des Unterrichts und dieindividuellen Lernerfahrungen mit ihnen werden auf ihren Einﬂuss sowohl auf das Interesseder Schülerinnen und Schüler an der Informatik und als auch auf ihr Informatikselbstkonzeptuntersucht.3.3 Interesse an Informatik und InformatikselbstkonzeptDas Interesse an der Informatik wurde mit der einfachen Aussage „Ich freue mich aufden Informatikunterricht“ und den drei Wahloptionen „Ja“, „Nein“ und „Ich weiß nicht“erhoben. Die in der Frage implizierten Vorstellungen der Schülerinnen und Schüler vonInformatikunterricht und Informatik sind wahrscheinlich von großer Divergenz und vonzahlreichen Fehlvorstellungen bestimmt (s. S.2).In der gesamten Stichprobe ist das Interesse sehr hoch: Es antworten 2 316 der 2 570Befragten (90,12 %) mit „Ja“, 9,03 % mit „Ich weiß nicht“ und 0,86 % mit „Nein“ (Abb. 1a).Au allend ist nicht nur der hohe Anteil derjenigen, die zustimmen, sondern auch, dassweniger als ein Prozent der Befragten mit „Nein“ antworten.%25507510090,12 %Ja9,03 %Ich weiß nicht0,86 %Nein(a) Interesse%25507510070,27 %Ja1,67 %Nein28,05 %Ich weiß nicht(b) SelbstkonzeptAbb. 1: Informatik: Interesse und SelbstkonzeptAuch das mit der Antwortau orderung „Ich erwarte, in Informatik gut zu sein“ erhobeneInformatikselbstkonzept ist positiv. 70,27 % der Befragten erwarten nach eigener Aussage„in Informatik gut zu sein“, 28,05 % geben an, sie wüssten es nicht, und 1,67 % antworteten,dass sie dies nicht erwarteten (Abb. 1b).104 Kathrin Haselmeier et al.Interesse an Informatik und Informatikselbstkonzept zu Beginn der Sek I des Gym. 7In diesem speziellen Fall – der deutlich überwiegende Teil der befragten Schülerinnenund Schüler hat zum Zeitpunkt der Befragung noch keine Erfahrungen mit eigenemInformatikunterricht – sind die positiven Erwartungen an das Fach Informatik deutlichhöher als die Erwartungen an die eigenen diesbezüglichen Fähigkeiten. Die sehr positiveWertung, die dem Informatikunterricht entgegengebracht wird, verdeutlicht sich, wenn dieDaten der Befragten zu Interesse und Informatikselbstkonzept in Beziehung gesetzt werden.Selbst von den 43 Schülerinnen oder Schülern, die explizit nicht erwarten, „in Informatikgut zu sein“, freut sich dennoch mit 28 der größte Teil auf den Informatikunterricht, 7wissen es nicht und nur 8 freuen sich nicht.Geschlechtsbezogene Diskrepanzen bei Interesse und Selbstkonzept bzgl. InformatikBetrachtet man das Interesse an Informatik (Abb. 2a) und das Informatikselbstkonzept(Abb. 2b) bei Jungen und Mädchen unter dem Genderaspekt, so ist in beiden Gruppen einsehr hohes Interesse und ein hohes Informatikselbstkonzept zu beobachten. Dennoch tretenUnterschiede auf. Vor allem ist bei den weibliche Befragten eine stärkere Unsicherheit zuerkennen. Von den 1 133 befragten Mädchen freuen sich 88,44 % auf den Informatikunter-richt, 0,53 % freuen sich nicht, aber 11,03 % wissen nicht, ob sie sich freuen sollen, undbringen damit ihre Unsicherheit bezüglich ihres Interesses an Informatik zum Ausdruck.Von den 1 303 befragten Jungen freut sich ein noch größerer Anteil, nämlich 92,86 %, aufden Informatikunterricht, 0,77 % freuen sich nicht und ein deutlich kleinerer Anteil als beiden Mädchen, nämlich 6,37 %, ist sich unsicher.%25507510088,44 %92,86 %Jaweibl.männl.11,03 %6,37 %Ich weiß nichtweibl.männl.0,53 %0,77 %Neinweibl.männl.(a) Interesse65,49 %75,90 %Jaweibl.männl.33,10 %22,79 %Ich weiß nichtweibl.männl.1,41 %1,30 %Neinweibl.männl.(b) SelbstkonzeptAbb. 2: Informatik: Vergleich Schülerinnen und SchülerNoch ausgeprägter sind die geschlechtsbezogenen Diskrepanzen bei dem informatischenSelbstkonzept. Von den Mädchen erwarten 65,49 % „gut in Informatik zu sein“, 1,44 %erwarten dies nicht und 33,10 % wissen es nicht. 75,9 % der befragten Jungen, also deutlichmehr als bei den Mädchen, erwarten in „gut in Informatik zu sein“. 1,3 %, ein etwaskleinerer Anteil als bei den Mädchen, erwarten dies nicht. Die Unsicherheit bezüglich desInformatikselbstkonzeptes, „Ich weiß nicht“, ist mit 22,97 % deutlich geringer.Aus dem Informatik-Biber 2015 wurde eine für die Jahrgangsstufen 5 und 6 als leichteingestufte Aufgabe zur Mustererkennung als ein Item der Befragung übernommen. DieseAufgabe wird insgesamt von 92,8 % der Befragten richtig beantwortet. Bei den befragtenInteresse an Informatik und Informatikselbstkonzept 1058 Kathrin Haselmeier, Ludger Humbert, Dorothee Müller, Klaus KillichMädchen ist ein deutlich niedrigeres Informatikselbstkonzept vorhanden als bei den Jungen.Dennoch ist der Anteil der richtigen Antworten bei den Mädchen mit 93,65 % nicht niedriger,sondern geringfügig größer als bei den Jungen mit 92,63 %. Dies kann als einen – in weiterenUntersuchungen noch zu überprüfenden – Hinweis auf eine Bestätigung der in der ICILS-Studie 2013 hergestellten Zusammenhänge zwischen genderspeziﬁschen informatischenKompetenzen und Informatikselbstkonzept (s.Abschnitt 1.2) gewertet werden.Zur Geschlechtszuordnung in der Informatik wurde die Frage „In Berufen mit Informatikarbeiten“ mit den Ergänzungsoptionen „mehr Frauen“, „mehr Männer“ oder „etwagleich viele Frauen wie Männer“ gestellt. Das Ergebnis zeigt, dass von vielen der befragtenSchülerinnen und Schülern eine männlichen Rollenzuordnung bezüglich der Informatikvorgenommen wird. Fast die Hälfte der Schülerinnen und Schüler, 48,52 %, gibt an, dassmehr Männer in der Informatik arbeiten, während 5,60 % vermutet, dass der Frauenanteilgrößer wäre. 45,88 % geben an, dass die Anteile ausgeglichen seien.Einﬂuss des Informatikunterrichts in der GrundschuleWeniger stark als die Geschlechtszugehörigkeit wirkt sich aus, ob die Schülerinnen undSchüler bereits in der Grundschule Informatikunterricht hatten. 10,5 % der 2 570 Befragtengeben an, Informatikunterricht in der Grundschule gehabt zu haben. Der Informatikun-terricht in der Grundschule beeinﬂusst das Interesse an Informatik (Abb. 3a) und auf dasInformatikselbstkonzept (Abb. 3b) leicht positiv.%25507510092,19 %89,87 %Jamitohne6,69 %9,30 %Ich weiß nichtmitohne1,12 %0,83 %Neinmitohne(a) Interesse77,32 %69,45 %Jamitohne20,28 %28,90 %Ich weiß nichtmitohne1,86 %1,65 %Neinmitohne(b) SelbstkonzeptAbb. 3: Grundschulunterricht Informatik – EinﬂussWährend sich 92,19 % derjenigen, die Informatikunterricht in der Grundschule hatten, aufden Informatikunterricht freuen, sind es bei den anderen 89,87 % (Abb. 3a). Eine leichteSteigerung bewirkt der Informatikunterricht in der Grundschule auch bei dem sehr geringenAnteil der Verneinung der Aussage „Ich freue mich auf den Informatikunterricht“. Von denbefragten Schülerinnen und Schülern mit Informatikunterricht in der Grundschule geben 3(1,12 %) an, sich nicht auf den Informatikunterricht zu freuen, während es bei den Befragtenohne Informatikunterricht in der Grundschule 19 der 2 301 Befragten (0,89 %) sind. Beidiesen geringen Zahlen ist diese Abweichung allerdings nicht signiﬁkant.Deutlicher als bei dem Interesse ist der Unterschied in Bezug auf das Informatikselbstkonzept:77,32 % derjenigen mit Informatikunterricht in der Grundschule erwarten, gut in Informatik106 Kathrin Haselmeier et al.Interesse an Informatik und Informatikselbstkonzept zu Beginn der Sek I des Gym. 9zu sein, während es bei denjenigen ohne Informatikunterricht in der Grundschule 69,45 %sind (Abb. 3b). Die gemachten Erfahrungen mit Informatikunterricht verringern dieUnsicherheit bezüglich der Erwartung an den zukünftigen Informatikunterricht: 9,30 % derSchülerinnen und Schüler ohne Informatikunterricht in der Grundschule antworten mit „Ichweiß nicht“ auf die Frage, ob sie sich auf den Informatikunterricht freuen. Hingegen sind esbei den Schülerinnen und Schülern mit Informatikunterricht in der Grundschule 6,69 %.4 Fazit und AusblickDas Interesse an Informatik ist bei den Befragten überraschend hoch. Diese hohen Erwartun-gen sind bei den Jungen ausgeprägter als bei den Mädchen. Es zeigt sich bei allen Befragtenebenfalls ein im Durchschnitt hohes Informatikselbstkonzept, wobei die geschlechtsbezoge-ne Diskrepanz deutlicher ausgeprägt ist als bei dem Interesse an Informatik. Die Mädchenhaben ein niedrigeres Informatikselbstkonzept als die Jungen, wobei dieses bei beidenGeschlechtern eher hoch ist. Informatikunterricht in der Grundschule desillusioniert nicht,sondern stärkt das Interesse und das Selbstkonzept leicht. Die ausgewerteten Daten sprechenfür eine frühe Einführung des Informatikunterrichts für alle Schülerinnen und Schüler(möglichst bereits in der Grundschule), um das Interesse der Kinder für Lernerfolge zunutzen, zur frühen Förderung der Mädchen und zur Verminderung des Gendergaps in derInformatik.Die forschende Beobachtung der Schülerinnen und Schüler in der Entwicklung ihrer motiva-tionalen Tendenzen bezüglich der Informatik im Verlauf der zwei Jahre Informatikunterrichtist geplant. Entsprechende Daten einer Vergleichsgruppe der gleichen Jahrgangsstufe ohneInformatikunterricht werden ab dem kommenden Schuljahr erhoben und ausgewertet.Literatur[Ei17]Eickelmann, B.: Konzepte und Entwicklungsperspektiven Kompetenzen in derdigitalen Welt. 2017.[He11]Hellmich, F., Hrsg.: Selbstkonzepte im Grundschulalter: Modelle, empirischeErgebnisse, pädagogische Konsequenzen, Stuttgart: W. Kohlhammer, 2011.[KH06]Kessels, U.; Hannover, B.: Zum Einﬂuss des Image von mathematisch-naturwissenschaftlichen Schulfächern auf die schulische Interessenentwicklung.In (Prenzel, M.; Allolio-Näcke, L., Hrsg.): Untersuchungen zur Bildungsqualitätvon Schule. Abschlussbericht des DFG-Schwerpunktprogramms. Waxmann,Münster, S. 350–369, 2006.[Kl13]Kleinn, K.; Götsch, M.; Heine, Y.; Schinzel, B.: Das DFG-Projekt „Weltbilderder Informatik“. Informatik-Spektrum 36/3, S. 251–256, 2013.[Kn11]Knobelsdorf, M.: Biographische Lern- und Bildungsprozesse im Handlungs-kontext der Computernutzung, Dissertation, Department of Computer Science,Free University Berlin, 2011.Interesse an Informatik und Informatikselbstkonzept 10710 Kathrin Haselmeier, Ludger Humbert, Dorothee Müller, Klaus Killich[Kö06]Köller, O.; Trautwein, U.; Lüdtke, O.; Baumert, J.: Zum Zusammenspiel vonschulischer Leistung, Selbstkonzept und Interesse in der gymnasialen Oberstufe.Zeitschrift für pädagogische Psychologie 20/1/2, S. 27–39, 2006.[Ku08]Kuhl, M.: Studienkultur Informatik neu denken: Geschlechterkonstruktionenim Informatikstudium an der Universität Dortmund und der Carnegie MellonUniversity. Shaker Verlag, Aachen, 2008.[Le08]Lechte, M.-A.: Sinnbezüge, Interesse und Physik. Eine empirische Untersuchungzum Erleben von Physik aus Sicht von Schülerinnen und Schülern, Dissertation,Opladen; Farmington Hills, Mich., 2008.[Lo14]Lorenz, R.; Gerick, J.; Schulz-Zander, R.; Eickelmann, B.: Computer- undinformationsbezogene Kompetenzen von Mädchen und Jungen im internatio-nalen Vergleich. In (Bos, W.; Eickelmann, B.; Gerick, J.; Goldhammer, F.;Schaumburg, H.; Schwippert, K.; Senkbeil, M.; Schulz-Zander, R.; Wendt, H.,Hrsg.): Computer- und informationsbezogene Kompetenzen von Schülerinnenund Schülern in der 8. Jahrgangsstufe im internationalen Vergleich. ICILS– International Computer and Information Literacy Study, Waxmann Verlag,Münster, New York, Kap. VIII, S. 231–263, 2014.[MS18a]MSB-NW, Hrsg.: Das Schulwesen in Nordrhein-Westfalen aus quantitativerSicht – 2017/18, Ministerium für Schule und Bildung des Landes Nordrhein-Westfalen (MSB-NW), Düsseldorf, 19. Juni 2018.[MS18b]MSB-NW, Hrsg.: Statistik-TELEGRAMM 2017/18, Schuleckdaten 2017/18.Zeitreihen 2008/09 bis 2017/18. Statistische Übersicht Nr. 397 – 1. Auﬂage, MSB-NW – Ministerium für Schule und Bildung des Landes Nordrhein-Westfalen,15. Feb. 2018.[MT09]Möller, J.; Trautwein, U.: Selbstkonzept. In (Wild, E.; Möller, J., Hrsg.): Pädago-gische Psychologie. Springer-Lehrbuch, Springer Berlin Heidelberg, S. 179–203,2009.[Mü17]Müller, D.: Der Berufswahlprozess von Informatiklehrkräften. ÜberarbeiteteFassung der Dissertation von 2016, Universiätsverlag Potsdam, Potsdam, 2017.[Pa13]Pant, H. A.; Stanat, P.; Schroeders, U.; Roppelt, A.; Siegle, T.; Pöhlmann, C.,Hrsg.: IQB-Ländervergleich 2012 – Mathematische und naturwissenschaftlicheKompetenzen am Ende der Sekundarstufe I, IQB – Institut zur Qualitätsentwick-lung im Bildungswesen, Münster, New York: Waxmann Verlag, 2013.[Sc09]Schiefele, U.: Motivation. In (Wild, E.; Möller, J., Hrsg.): Pädagogische Psycho-logie. Springer-Lehrbuch, Springer Berlin Heidelberg, S. 151–178, 2009.[St17]Stanat, P.; Schipolowski, S.; Rjosk, C.; Weirich, S.; Haag, N.: Zusammenfassungund Einordnung der Befunde. In (Stanat, P.; Schipolowski, S.; Haag, N.; Rjosk, C.;Weirich, S., Hrsg.): IQB-Bildungstrend 2016. Waxmann Verlag, S. 387–411,2017.108 Kathrin Haselmeier et al.cba(Hrsg.): ,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Informatikunterricht – Ein Muss zur politischen MündigkeitNiko Hausner1, Katharina Wendlandt2, Matthias Wendlandt3Abstract:Ein erklärtes Ziel schulischer Bildung ist es, die SuS zu (politischer) Mündigkeit zuerziehen. Mündigkeit beschreibt dabei die Fähigkeit, selbstbestimmt und eigenverantwortlich zuhandeln. Politische Mündigkeit im Besonderen befähigt dazu, sich begründet am aktuellen ö entlich-politischen Diskurs zu beteiligen und bildet somit die Grundlage aktiven demokratischen Handelns. Indieser Arbeit analysieren wir die Wahlprogramme zur Bundestagswahl 2017 derjenigen Parteien, dieim Parlament vertreten sind, im Hinblick auf Themen die Informatik betre end. Wir erörtern, welcheinformatischen Grundkenntnisse für die einzelnen digitalen Schwerpunkte nötig sind und inwieferndas Schulfach Informatik dazu beiträgt, eine Beurteilungskompetenz im politischen Wahlprozess zuentwickeln.1 EinleitungIm Zuge einer Wahlkampfveranstaltung im Vorfeld zur Wahl des 19. Deutschen Bundes-tages stellte einer meiner Studenten, der sich aktiv politisch engagiert, einem führendenLandespolitiker die Frage, was man seiner Meinung nach gegen illegale Seiten im Internetmachen könne. Die Antwort des Politikers ist amüsierend und alarmierend zugleich. DerPolitiker schlug vor, die Einträge und Verweise auf die entsprechenden Seiten bei Googlezu löschen - die Webseiten seien dann schließlich nicht mehr erreichbar.Nachdem der Student diese Anekdote im Rahmen eines Seminars zum Thema „Infor-matik als Pﬂichtfach?!“ vorgetragen hatte, entbrannte eine wilde Diskussion unter denTeilnehmenden. Wie soll man politisch selbstbestimmt handeln in einer Gesellschaft, dieso extrem von informatischen Inhalten durchzogen ist, wenn man so wenig informatischesWissen voraussetzen kann und so viele Fehlvorstellungen vorherrschen? Dies gilt nichtnur für Politikerinnen und Politiker, die durch politische Entscheidungen unser aller Lebenbeeinﬂussen, sondern es geht auch um die Bürgerinnen und Bürger, die sich mit denWahlprogrammen auseinandersetzen und sich eine eigene Meinung über die Zukunft bildenmüssen. Dies ist die Basis der Demokratie.Josef Kraus, Präsident des Deutschen Lehrerverbandes, äußerte sich 2013 zur Einführungeines Pﬂichtfachs Informatik mit den Worten „Die Schüler müssen ja auch nicht wissen,wie eine Schreibmaschine funktioniert. Hauptsache, sie können sie bedienen.“[SP13]Ähnlich äußerte sich die Schulbehörde Hamburg nach der Abscha ung des PﬂichtfachsInformatik im Jahr 2013. Informatik sei als Fach „nicht für alle in gleicher Intensität1Freiherr-vom-Stein-Schule, Dr.-Berthold-Leinweber-Str. 1, 35075 Gladenbach, Deutschland2Mathematisches Institut, Universität Gießen, Arndtstr. 2, 35392 Gießen, Deutschland3Institut für Informatik, Universität Gießen, Arndtstr. 2, 35392 Gießen, Deutschlandcba doi:10.18420/infos2019-11Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 109vonnöten“, so Behördensprecher Peter Albrecht. Weiter heißt es „Etwas salopp formuliert:Alle sollten in einer mobilen Gesellschaft ein Auto fahren können. Aber nicht alle müssenauch wissen, wie es im Detail funktioniert oder gebaut wird.“[WE13]Beide Kommentare zeigen, wie wenig fundiert der Blick auf das Schulfach Informatik ist undwie undi erenziert die Thematik analysiert wird. Eine mögliche Ursache mag mangelndesFachwissen sein. In einem Gastbeitrag von Urs Lautebach in derZeitschreibt er quasikonternd [ZE18]: „Diese Hilﬂosigkeit führt in eine digitale Unmündigkeit, denn wer vonInformatik keine Ahnung hat, kann zwar die Systeme benutzen, die andere entwerfen undbewirtschaften, aber er oder sie kann sie nicht hinterfragen und schon gar nicht an eigeneBedürfnisse anpassen. Zu technisch geprägten Themen kann er sich keine Meinung bildenund die Wahrnehmung bestimmter Rechte bleibt ihm zunehmend verwehrt.“ Er fordertdeshalb ein Pﬂichtfach Informatik, denn „Nur so kann die Schule auch im 21. Jahrhundertihrem Allgemeinbildungsauftrag gerecht werden.“[ZE18]In der folgenden Arbeit möchten wir unterstützende Argumente für die Aussage von UrsLautebach geben, indem wir die Rolle informatischer Bildung im Bereich der Politikim Kontext der Bundestagswahl 2017 analysieren. Die Kernfragen, mit denen sich dieseArbeit beschäftigt, sind: Welchen Stellenwert haben informatische Inhalte im politischenDiskurs? Welche informatischen Themen sind in den einzelnen Wahlprogrammen enthalten?Über welche informatischen Grundlagen sollten Wählerinnen und Wähler verfügen, umdie Themenkomplexe verstehen und bei der Bundestagswahl selbstbestimmt über dieParteiprogramme urteilen zu können?2 Bildung, Mündigkeit und Demokratie„Aufklärung ist der Ausgang des Menschen aus seiner selbst verschuldetenUnmündigkeit. Unmündigkeit ist das Unvermögen, sich seines Verstandes ohneLeitung eines anderen zu bedienen. Selbstverschuldet ist diese Unmündigkeit,wenn die Ursache derselben nicht am Mangel des Verstandes, sondern derEntschließung und des Muthes liegt, sich seiner ohne Leitung eines andernzu bedienen. Sapere aude! Habe Muth dich deines eigenen Verstandes zubedienen! ist also der Wahlspruch der Aufklärung.“ [KA84, S.6]Fritz Reheis [RE14] beschreibt in seinem Einführungswerk zur politischen Bildung diemündigen Bürgerinnen und Bürger als selbstständig in ihrer Lebensführung. Er muss nachReheis in der Lage sein, selbstständig zu erkennen bzw. zu beurteilen, wann Widerspruchnotwendig ist. Dabei stellt er einen Bezug zum Aufklärungspostulat von Immanuel Kanther. Wolfgang Sander [SD08] behandelt den mündigen Bürger als ein mögliches Leitbildder politischen Bildung. Die Mündigkeit der Bürgerinnen und Bürger sei nötig, um dasdemokratische System eines Staates am Leben zu erhalten. Entsprechend müssen nachSander auch Schülerinnen und Schüler auf ihre Zukunft innerhalb einer Demokratie110 Niko Hausner et al.3vorbereitet werden. Für Seidel ist Mündigkeit die Fähigkeit „seine eigenen Angelegenheitenselbst regeln zu können“[SE16, S.286].Eine wichtige Instanz zur politischen Bildung stellt das Bundesamt für politische Bildungdar. Mündigkeit wird dort wie folgt deﬁniert: „Mündigkeit hat noch eine weitergehendeBedeutung. Gemeint ist damit auch Selbstbestimmung und Urteilsfähigkeit. Man sprichtoftmals von mündigen Bürgern und meint damit, dass die Bürger und Bürgerinnen nichtnur für sich selbst Verantwortung übernehmen, sondern auch für ihren Staat und ihreGesellschaft. In einer Demokratie wie in Deutschland ist das besonders wichtig. DieDemokratie braucht mündige Bürger und Bürgerinnen, die sich interessieren und engagieren,die bereit sind, politisch im Staat mitzuwirken.“[BP18]Alle Deﬁnitionen verstehen Mündigkeit als Synonym der Selbstbestimmung auf allenEbenen des Lebens. Sowohl Wolfgang Sander als auch das Bundesamt für politischeBildung heben darüber hinaus noch das aktive Leben in einer Demokratie hervor, was in denBegri  der politischen Mündigkeit gefasst werden kann. Im Folgenden verstehen wir unterpolitischer Mündigkeitdie Fähigkeit, in politischen Entscheidungsprozessen selbstbestimmturteilen und handeln zu können.Wolfgang Klafki formulierte folgende grundlegende Fragestellung als Leitziel zu bildendenInhalten:„Welche Objektivierungen der bisher erschlossenen Menschheitsgeschichtescheinen am besten geeignet, dem sich Bildenden Möglichkeiten und Aufgabeneiner Existenz in Humanität, in Menschlichkeit aufzuschließen, also einer aufwechselseitig anerkannte, damit aber immer auch begrenzte Freiheit, auf Gerech-tigkeit, kritische Toleranz, kulturelle Vielfalt, Abbau von Herrschaft und Ent-wicklung von Friedfertigkeit, mitmenschliche Begegnung, Erfahrung von Glückund Erfüllung hin orientierte, vernunftgeleitete Selbstbestimmung?“[KL86]Bildung und Erziehung haben also nach Klafki die Aufgabe, dem unmündigen Menschenzur Mündigkeit zu verhelfen. Die Begri e der Bildung und der Mündigkeit werden dabeiverknüpft und bilden die zentralen Begri e seiner Bildungstheorie.Wir sehen den Begri  der digitalen Mündigkeit, wie ihn Urs Lautebach im Zitat der Einleitungverwendet, als notwendige Voraussetzung, um informatische Inhalte im politischen Kontextbeurteilen zu können. Die digitale Mündigkeit ist eine spezielle Form der Mündigkeit[BE18]. Der souveräne Einsatz von Informations- und Kommunikationstechniken (IKT)wird in Boberach/Neuburger [BO14] als eine wesentliche Voraussetzung für den mündigen,digital-souveränen Bürger hervorgehoben. So zeichnet sichdigitale Souveränitätdurchausreichend inhaltliches Wissen und technische Kompetenzen aus. Hierzu zählen der Autorund die Autorin den Umgang mit Programmen wie Word und Excel sowie die Nutzungtechnischer Geräte wie Drucker oder Scanner.Informatikunterricht – Ein Muss zur politischen Mündigkeit 111Nach Müller, Stecher, Dietrich, Wolf, et al. [MU16, S.7] benötigt die digitale Gesellschaftdigital selbstbestimmte Bürgerinnen und Bürger, „die eigenverantwortlich mit den Produkten,Geräten und Technologien der heutigen Zeit umgehen können (Kompetenz) und sich proaktivmit den Vorteilen und möglichen Risiken der Nutzung auseinandersetzen (O enheit).“Versteht man digitale Souveränität als einen Prozess, der sich stetig wandelt und immer anneue Entwicklungen gebunden ist, so ist die zweite Deﬁnition, die sich an den allgemeinenKonzepten orientiert, zu bevorzugen. In Bezug auf informatische Bildung in Schulen istdies besonders wichtig. Schule kann nie so umfassend bilden, dass alle informatischenInhalte aller zukünftigen Wahlprogramme detailliert im Unterricht behandelt werden. Dieallgemeinen Konzepte können aber zum einen dazu beitragen, dass die Themen leichterzugänglich sind und zum anderen, dass die Grundlagen gelegt werden, um sich aktuelleThemen schneller aneignen zu können.3 ParteiprogrammeIn diesem Abschnitt arbeiten wir zunächst den Stellenwert des Themenkomplexes Informatikund Digitalisierung in jedem Parteiprogramm heraus. Die Beurteilung erfolgt relativ zumUmfang des jeweiligen Parteiprogramms. Hierbei werden wir uns ausschließlich auf dieParteien beziehen, die im aktuellen Bundestag vertreten sind.CDU/CSUDas Regierungsprogramm [PU17] für 2017-2021 der Union erstreckt sichüber 76 Seiten im regulären DIN A4 Format. Abgesehen von Einleitung und Vorwort sowieWahlaufruf ist das Programm in neun verschiedene und auf den ersten Blick gleichberechtig-te Themenkomplexe unterteilt. Inhalte zum Bereich Informatik und Digitalisierung ﬁndensich im Themenkomplex mit dem Titel „Chancen im digitalen Zeitalter“. Die Union räumtden Themen mit digitalem Schwerpunkt einen eigenen Bereich in ihrem Regierungspro-gramm ein. Damit erlangen diese Themen eine ähnliche Bedeutung wie beispielsweise dieFamilienpolitik oder die Sicherheitspolitik, welche ebenfalls einen eigenen Themenkomplexin diesem Programm bilden.SPDDie SPD unterteilt ihr Regierungsprogramm [PS17] mit dem Titel „Es ist Zeit fürmehr Gerechtigkeit: Zukunft sichern, Europa stärken“ in zwölf Themenkomplexe, exklusiveder Einleitung. Dabei umfasst das Programm 116 DIN A4 Seiten. Im Programm derSozialdemokraten ﬁndet sich zunächst kein eigener Themenkomplex, der der Digitalisierunggewidmet ist. Dennoch ﬁnden sich in mehr als der Hälfte der Themenkomplexe Bezüge zudigitalen Themen. Es lässt sich herausstellen, dass auch in diesem Programm den digitalenThemen ein hohes Gewicht zukommt.112 Niko Hausner et al.5Die LinkeAuf rund 140 Doppelseiten, die in etwa dem DIN A4 Format entsprechen,beschreibt die Partei Die Linke ihr Programm [PL17] für die Bundestagswahl 2017. Siesetzen dabei auf di erenziertere Themenüberschriften. In neun von 18 Themenkomplexenwerden informatische Schwerpunkte thematisiert.FDPDas Wahlprogramm [PF17] der FDP umfasst 150 Seiten. Abzüglich der Einleitungund einem allgemeinen Schluss umfasst es lediglich sechs Themenkomplexe. Erst ein Blickin die Untergliederung dieser sechs Hauptbereiche zeigt digitale Schwerpunkte. Es wirddeutlich, dass alle Hauptbereiche, ausgenommen der Steuerpolitik („Politik, die rechnenkann“), informatische Themen beinhalten. Trotz dieser starken Verﬂechtung digitalerThemen mit dem Gesamtbild des Parteiprogramms ist die absolute Anzahl digitaler Themengeringer als beispielsweise bei SPD und Union, wenngleich die Deckung in diesem Vergleicherstaunlich ist.Bündnis 90/Die GrünenDas umfangreichste Wahlprogramm [PG17] mit fast 250 Seitenim DIN A4 Format (wenn auch etwas größerem Schriftbild) entstammt der Partei Bündnis90/ Die Grünen. Trotz des umfangreichen Programms beschränkt sich diese Partei aufwenige und entsprechend weit gefasste Themenkategorien. Man ﬁndet im Wahlprogrammvon Bündnis 90/Die Grünen lediglich im zweiten Teil einige digitale Schwerpunkte. Dieinformatischen Themen sind in diesem Programm nicht so stark vertreten wie in anderen,jedoch sind auch hier die bedeutendsten von ihnen, gemessen an ihrem Anteil im ö entlichenDiskurs, durchaus zu ﬁnden.AFDDie geringste Menge an informatischen Inhalten bietet das Wahlprogramm [PA17]der Alternative für Deutschland. Dies kann jedoch auch dem kompakten Umfang desProgramms geschuldet sein. So umfasst es zwar 76 Seiten, doch deren Format entsprichtin etwa nur DIN A5 im Querformat. Die Aufteilung der AFD sieht 15 Themenkomplexevor, wobei sieben dieser 15 Komplexe informatische Themen beinhalten. Bezogen auf daskompakte Wahlprogramm ﬁndet durchaus eine bemerkenswerte Menge an informatischenThemen Platz, wenngleich es im direkten Vergleich zu anderen Parteien vom Umfang eherweniger ist.4 ThemenübersichtWir geben nun eine Auswahl der in den Wahlprogrammen der unterschiedlichen Parteiengenannten informatischen Themen an. Dabei beschränken wir uns auf diejenigen Themen,die in mehreren Parteiprogrammen Erwähnung fanden, weshalb kein Anspruch auf Voll-ständigkeit der Liste aller digitalen Themen im Bundeswahlkampf 2017 bestehen kann.Dies sind die ausgewählten Themen in alphabetischer Reihenfolge:Informatikunterricht – Ein Muss zur politischen Mündigkeit 113Algorithmen, Big Data, Cybersicherheit, Datenschutz, Digitalisierung derArbeitswelt, Fake News, Freies WLAN, Identiﬁzierung und Verschlüsselung,Infrastruktur, Internetkriminalität, Künstliche Intelligenz, Netzneutralität, Soft-ware, Tracking Soft- und Hardware, Urheberrecht sowie Wahlfreiheit in dendigitalen Märkten.Im Folgenden werden wir nun einige der bedeutendsten Themen näher analysieren. Wirgeben eine kurze Übersicht, inwieweit Berührungspunkte zu den Programmen der Bun-destagsparteien bestehen, und begründen, weshalb informatische Grundkenntnisse dazubenötigt werden, um den kompletten Rahmen der politischen Diskussion zu durchdringen.Kritiker mögen nun anmerken, dass Bürgerinnen und Bürger nicht in jedem Wahlkampf-thema Experten sein können bzw. müssen. Dieser Ansicht kann man entgegenhalten, dasses zum einen einer Grundbildung bedarf, um Sachverhalte einschätzen zu können, und zumanderen eine grundlegende Bildung vorhanden sein sollte, damit sich Interessierte ohneWeiteres zusätzliches Wissen zu den genannten Themengebieten aneignen können.Algorithmen„Ein sogenannter Algorithmen-TÜV soll dafür sorgen, dass niemand durchsoftwaregestützte Entscheidungen diskriminiert wird oder zu Schaden kommt.“ [PS17] Solautet die konkrete Forderung, die der SPD-Bundesverband in seinem Wahlprogramm fürdie Bundestagswahl 2017 formuliert hat.In derZeit[ZE17] wird Heiko Maas zitiert. Er verlangt „eine behördliche Kontrolle, um dieFunktionsweisen, Grundlagen und Folgen von Algorithmen überprüfen zu können“. DieseAufgabe könne eine Digitalagentur übernehmen, eine Aufsichtsbehörde, der Unternehmenwie Google Einblick in ihre Quellcodes und damit Geschäftsgeheimnisse geben müssten.Auch der Bundesverband der Partei Die Linke bezieht sich auf das theoretische Konzeptdes Algorithmus’. In ihrem Wahlprogramm wird eine transparente O enlegung derjenigenAlgorithmen, welche durch ö entlich-rechtliche Internetangebote genutzt werden, gefordert.Abgesehen von der Tatsache, dass die Verö entlichung eines Algorithmus’ den Ruin deszugehörigen Unternehmens bedeuten könnte, mag dieses Konzept einen interessantenAnsatz darstellen. Informatisch gebildeten Bürgerinnen und Bürgern wird aber sofortklar, was digital unmündigen Bürgerinnen und Bürgern eventuell nicht bewusst ist: DassAlgorithmen beliebig komplex sind, dass sich Programme über hundertausende oder garmillionen Zeilen von Code erstrecken können und dass die Analyse von Programmcodevon Menschenhand in dieser Komplexität praktisch unmöglich ist. Auch der Gedanke aneine automatisierte Analyse von Programmcode verschwindet sofort, da jegliche detaillierteAnalyse sehr schnell auf ein nicht-entscheidbares Problem wie das Leerheitsproblem oderdas Halteproblem für Turing Maschinen zurückgeführt werden kann.Dieses Basiswissen wird zum einen beim Programmieren und zum anderen in der Theoreti-schen Informatik vermittelt. Beide Themengebiete sind in den meisten Curricula, zumindestin den Oberstufenplänen, enthalten.114 Niko Hausner et al.7Big DataBeide sogenannten Volksparteien (CDU/CSU und SPD) nutzen den Begri  BigData oder eines seiner Synonyme innerhalb ihrer Regierungsprogramme. So schreibt dieUnion über „Umgang mit großen Datenmengen“, während die SPD den wirtschaftlichenNutzen von Big Data mit den damit verbundenen Datenschutzfragen in Relation setzt.So heißt es im Wahlprogramm der SPD: „Ziel unserer Datenpolitik ist es, das Recht aufPrivatsphäre zu gewährleisten. Gleichzeitig wollen wir das wirtschaftliche Potenzial vonDaten nutzen, denn Datenschutz und Big Data schließen sich nicht aus. Wir werden klareRegelungen scha en, wie Daten verfügbar gemacht werden können und wer welche Datenwann, zu welchem Zweck und zu welchen Bedingungen verwenden darf.“ Die FDP weißtauf den Umstand des Datenwertes in ihrem Wahlprogramm hin. So sprechen sie den Verkaufdes Messengerdienstes WhatsApp an den Facebook-Konzern an. Der Kaufpreis stehe inkeinem Verhältnis zur Größe der Firma bzw. deren Jahresumsatz. Lediglich der Zugang,welchen WhatsApp zu Daten und Kommunikationskanälen habe, rechtfertige den Kaufpreisim zweistelligen Milliardenbereich.Grundlegende algorithmische Verfahren, bzw. Verfahren aus dem Data Mining, verfeinernhierbei die Sichtweise auf die Grenzen und Möglichkeiten, große Datenmengen zu analy-sieren. Auch wenn der Themenkomplex Data Mining nicht verpﬂichtend in den aktuellenCurricula steht, hilft ein grundlegendes Verständnis für Algorithmisierung an dieser Stelleweiter. Die aktuelle Tendenz zeigt, dass die Analyse von großen Datenmengen einen immergrößeren Stellenwert einnimmt. Es stellt sich die Frage, ob dieser Bereich aufgrund seinera ektiven und auch fachlich interessanten Seite nicht einen größeren Stellenwert in denCurricula einnehmen sollte. Neben den Möglichkeiten des Data Mining spielt der Werthinter Daten eine Rolle für den politischen Diskurs um Big Data. Entsprechend wirddie Fähigkeit, den Wert hinter Daten abschätzen zu können, für ein selbstbestimmtesMeinungsbild benötigt. Hierzu könnte Informatikunterricht beitragen.Freies WLANDie SPD verspricht, dass „ö entliche Einrichtungen o ene und kostenfreieWLAN Hotspots verfügbar machen“[PS17, S.38], die FDP erweitert diese Forderungum den ö entlichen Nahverkehr. Damit stoßen die Parteien auf großen Zuspruch in derBevölkerung. Laut einer repräsentativen Umfrage der YouGov Deutschland AG [EC16]wünschen sich 74% der deutschen Bevölkerung über 18 Jahren ﬂächendeckendes freiesWLAN. Doch sind weiten Teilen der Bevölkerung die Gefahren ö entlich zugänglicherNetzwerke nicht bewusst. Auch wenn die Betreiber der Netze mit Sicherheit werben, sobleibt unerwähnt, dass die jeweiligen Anbieter den Datenverkehr und die Bewegungsproﬁleder Nutzer überwachen und ausspionieren können. Ist einem Bürger nicht bewusst, werder Betreiber desjenigen Netzwerks ist, in das er sich eingewählt hat und welche Datenvon ihm ausgelesen werden können, so besteht die Gefahr eines fahrlässigen Verhaltens inVerbindung mit dem Diebstahl sensibler Daten. Grundlegende Kenntnisse über Netzwerke,wie sie im Themenkomplex Internet unterrichtet werden, ermöglichen einen kritischenBlick auf dieses Wahlversprechen.Informatikunterricht – Ein Muss zur politischen Mündigkeit 115Identiﬁzierung und VerschlüsselungSPD und FDP befassen sich nur oberﬂächlich mitder Thematik, fordern aber sichere Lösungen für elektronische Signaturen und verschlüsselteKommunikation. Die Linke hingegen fordert ein „Recht auf Ende-zu-Ende-Verschlüsselungin persönlicher Kommunikation“. Eine elektronische Identiﬁzierung ﬁndet Anwendung imBereich E-Government. Sofern Anträge oder auch Verträge in einer Art Bürgerportal (so eineForderung der Union) abgewickelt werden sollen, muss sichergestellt werden, dass immerder rechtmäßige Antragsteller oder Vertragspartner Zugri  auf personenbezogene Datenerhält. Eine Vorstellung davon zu haben, wie genau eine elektronische Signatur aussehenkann, welche Voraussetzungen sie erfüllen muss und was jeder einzelne Bürger und jedeeinzelne Bürgerin hierfür benötigt, sind Grundvoraussetzungen, um sich an der politischenDiskussion beteiligen zu können. Darüber hinaus stellt sich die Frage der Sicherheit, welchedie meisten Bürgerinnen und Bürger beschäftigt. Die Wahlprogramme schreiben immerwieder, dass diese Verfahren sicher sind. Urteilen wir nicht fremdbestimmt, wenn wir unsblind darauf verlassen?Ohne eine informatische Grundbildung sind weder das grundlegende Verfahren vonE2EE (End-to-End-Encryption), noch dessen Vor- und Nachteile oder dessen Sicherheitbekannt. Ähnlich sieht es bei der elektronischen Signatur aus. Aktuell ﬁnden sich dieBereiche Verschlüsselung, sichere Kommunikation und elektronische Signaturen meistensnur fakultativ in den Curricula wieder. Jedoch werden diese Themengebiete meistens imThemengebiet Internet angeschnitten. Unter Berücksichtigung der Tatsache, dass dieseThemenkomplexe einen immer höheren Stellenwert im alltäglichen Leben einnehmen, stelltsich die Frage, ob dieser Themenbereich nicht einen höheren Stellenwert in den Curriculaeinnehmen sollte.Künstliche IntelligenzDie Parteiprogramme beschäftigen sich nur mit einem Ausblickauf die möglichen Anforderungen, die Entwicklungen im Bereich Künstliche Intelligenz fürdie Gesellschaft bereithalten könnten. Rechtliche und ethische Fragen stehen dabei für dieSPD im Vordergrund. Bei der Union sind es vor allem Chancen in Forschung und Wirtschaft.Die FDP erachtet es als wichtig in ihrem Programm, dass Einblicke und Funktionsweisen indiesen Bereichen im Kindesalter vermittelt werden.Im Bereich der Künstlichen Intelligenz gibt es viele Fehlvorstellungen, welche durchverschiedene Romane und Blockbuster noch verstärkt werden. Der Bereich der KünstlichenIntelligenz wird damit beworben, dass er ungeahnte Funktionalitäten und Möglichkeitenböte. Um Chancen und Gefahren richtig einordnen zu können, ist es sinnvoll, die Grenzender Informatik, speziell die Grenzen der Künstlichen Intelligenz, zu thematisieren. DerThemenbereich ist fakultativ in vielen Curricula enthalten.116 Niko Hausner et al.95 DiskussionDie Analyse in Kapitel 3 hat gezeigt, dass informatische Inhalte in großem Umfang inden Parteiprogrammen zur Bundestagswahl 2017 enthalten sind, digitale Themen somitvon großer Bedeutung für den ö entlich-politischen Diskurs sind. Gerade die sogenanntenVolksparteien thematisieren sehr vielfältig Themenbereiche, in denen eine informatischeBildung notwendig ist, damit Bürgerinnen und Bürger selbstbestimmt urteilen können. Aberauch die Parteiprogramme der FDP und Die Linke beschäftigen sich an vielen Stellen mitDigitalisierung. Die FDP fordert unter anderem, dass „das Fach Informatik wesentlicherBestandteil der berufsschulischen Ausbildung sein“ muss [PF17].Die einzelnen Themengebiete sind sehr unterschiedlich und auch mit einer sehr starkunterschiedlichen Gewichtung in den Parteiprogrammen enthalten. Ein Hauptthemengebietist der Bereich Internet und verschlüsselte Kommunikation. In verschiedenen Programmenwurde die O enlegung von Algorithmen, bzw. die Analyse von Funktionalitäten vonAlgorithmen gefordert. Grundlagenwissen, wie es in den aktuellen Curricula abgedeckt wird(auch wenn die genaue Interpretation der Themen von der jeweiligen Lehrkraft abhängt),ermöglicht hier eine kritische Auseinandersetzung mit den Inhalten und Forderungen. Esbleibt die Frage, ob diese Themen nicht doch ﬂächendeckend stärker mit Bezug auf dieaktuellen politischen oder gesellschaftlichen Gegebenheiten unterrichtet werden sollten.Peter Euler schreibt in einem Artikel [EU13] über Bildung und Schule: „Stattdessen gibtes ständig neue Reformen, die alle ein Ziel haben: möglichst schnelle Verwertbarkeitfür den Markt. Ist das Bildung? Ursprünglich bedeutete Bildung mehr: Mündigkeit füralle - die Basis für Demokratie.“ Schule erhebt den Anspruch, die SuS auf zukünftigeLebenssituationen vorzubereiten, sie möchte ihnen die Grundlagen zum selbstbestimmtenHandeln und Urteilen in unserer Demokratie mitgeben. Das selbstbestimmte Urteilen überpolitische Entscheidungen und Ideen ist dabei der wesentliche Faktor. Die vorliegendeArbeit zeigt somit auf, dass eine informatische Grundbildung für alle notwendig ist.Literatur[BE18]Roman Beck et al.Eine Analyse der Fähigkeiten der Bürger in Deutschland zumkonstruktiven und souveränen Umgang mit digitalen Räumen.abgerufen (2019) un-ter: negz.org/wp-content/uploads/2018/06/NEGZ-ISPRAT-Studie-Dig-M%C3%BCnd-Abs chlussbericht.pdf [2018].[BO14]Michael Boberach, Rahild Neuburger.Zukunftspfade Digitales Deutschland 2020.Springer. 2014.[BP18]Gerd Schneider, Christiane Toyka-Seid.Mündige Bürgerinnen. Das junge Politik-Lexikon.In: Bundeszentrale für politische Bildung. 2017.[EC16]Verband der Internetwirtschaft e.V.Das Haftungsrisiko fällt weg.abgerufen (2019) unter:https://www.eco.de/wp-content/blogs.dir/freie-hotspots_infograﬁk-2.jpg [2016][EU13]Peter Euler.Bildung heißt Mündigkeit.In: Metallzeitung (Mitgliederzeitung der IGMetall) Heft 4. S. 15-16. 2013.Informatikunterricht – Ein Muss zur politischen Mündigkeit 117[KA84]Immanuel Kant.Beantwortung der Frage: Was ist Aufklärung?In: Berlinische Monats-schrift Band 12. S.481-494. 1784.[KL86]Wolfgang Klafki.Die Bedeutung der klassischen Bildungstheorien für ein zeitgemäßesKonzept allgemeiner Bildung. In: Zeitschrift für Pädagogik. 32. Auﬂ. S. 455-475. 1986.[MU16]Lena-Sophie Müller et al.D21-DIGITAL-INDEX. Jährliches Lagebild zur DigitalenGesellschaft.abgerufen (2019) unter: initiatived21.de/app/uploads/2017/01/studie-d21-digital-index-2016.pdf [2016].[PA17]Alternative für Deutschland.Programm für Deutschland.Wahlprogramm der Alternativefür Deutschland für die Wahl zum Deutschen Bundestag am 24. September 2017. Köln.2017.[PF17]Freie demokratische Partei.Denken wir neu.Das Programm zur Bundestagswahl 2017der Freien Demokraten. Berlin. 2017.[PG17]Bündnis 90/ Die Grünen.Zukunft wird aus Mut gemacht.Bundestagswahlprogramm2017. Berlin. 2017.[PL17]Die Linke.Sozial. Gerecht. Frieden. Für alle. Die Zukunft für die wir kämpfen!DieLinke. Langfassung des Wahlprogramms zur Bundestagswahl 2017. Hannover. 2017.[PS17]Sozialdemokratische Partei Deutschland.Es ist Zeit für mehr Gerechtigkeit: Zukunftsichern, Europa stärken.Das Regierungsprogramm 2017-2021. Berlin. 2017.[PU17]Die Union.Für ein Deutschland, in dem wir gut und gerne leben.Regierungsprogramm2017-2021. Berlin. 2017.[RE14]Fritz Reheis.Politische Bildung. Eine kritische Einführung.Springer. 2014.[SD08]Wolfgang Sander.Politik entdecken - Freiheit leben: Didaktische Grundlagen politischerBildung.Wochenschau Verlag. 2008.[SE16]Christian Seidel.Selbst bestimmen. Eine pholosophische Untersuchung personalerAutonomie.De Gruyter. 2016.[SP13]Hilmar Schmundt.Wir machen eine Rolle rückwärts.abgerufen (2019) unter:www.spiegel.de/lebenundlernen/schule/erziehungswissenschaftler-wollen-informatik -als- pﬂichtfach-einfuehren-a-903096.html [2013].[WE13]Jens Meyer-Wellmann.Hamburg scha t trotz Kritikdas Pﬂichtfach Informatik ab.abgerufen (2019) unter:www.welt.de/print/welt_kompakt/hamburg/article116640160/Hamburg- scha t-trotz-Kritik-das-Pﬂichtfach-Informatik-ab.html [2013].[ZE17]Christopher Lauer.Gesetzesbrecher im Netz.abgerufen (2019) unter:www.zeit.de/2016/02/internet-charta-heiko-maas-grundgesetz [2016].[ZE18]Urs Lautebach.Informatik für alle.abgerufen (2019) unter:www.zeit.de/gesellschaft/schule/2018-02/digitalisierung-informatikunterr icht-schulen-bildung [2018].118 Niko Hausner et al.cbaArno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Informatische Bildung für alle LehramtsstudierendenReformprozess einer allgemeinbildenden Informatikveranstaltung in deruniversitären LehrerbildungDaniel Losch1, Ludger Humbert2Abstract:Alle Lehrpersonen benötigen – unabhängig von ihren konkreten Fächern – angesichts einervon Informatik durchdrungenen Welt einen Zugang zu allgemeinbildenden Elementen der Informatik.An der Bergischen Universität Wuppertal werden seit 2009 regelmäßig Veranstaltungen durchgeführt,die dieser Anforderung Rechnung tragen. Befragungen und Rückmeldungen der Studierenden sowieder Lehrenden aus der mehrjährigen Durchführung der Veranstaltung legten nahe, dass eine für alleLehramtsstudierenden adäquate Optimierung der Veranstaltung möglich ist. Daraus ergibt sich alseine zu untersuchende Hypothese: Das bestehende Lehrangebot muss – hinsichtlich der intendiertenKompetenzen für die Studierenden – als nicht vollständig befriedigend bezeichnet werden. Durchdie Rekonﬁguration der Veranstaltung werden Möglichkeiten zur Qualitätsverbesserung des Lehran-gebots diskutiert. Die Umgesetzung wird prozessbegleitend untersucht, um gegebenenfalls zeitnahzu intervenieren. Durch qualitative Forschungselemente konnten studentische Belange inhaltlicherund organisatorischer Art auf die Hypothese bezogen werden und diese in erster Näherung bestäti-gen. Die Hinzunahme zweier informatikfachwissenschaftlicher und -fachdidaktischer Perspektivengewährleistet die Triangulation des konzeptuellen Reformprozesses. Das entwickelte Konzept ei-ner allgemeinbildenden Informatikveranstaltung für alle Lehramtsstudierenden berücksichtigt eineverstärkte Verzahnung von Theorie und Praxis, inhaltliche Modularität und konkreten Berufs- bzw.Lebensweltbezug.Keywords:Allgemeinbildung; Informatik; Lehrerbildung; Literalität; Reform; Phänomene1 Einleitung1.1 Motivation und ForschungskontextDass informatische Bildung in der Gesellschaft eine nachhaltige Verankerung ﬁnden muss,ist Konsens in der Informatikdidaktik [bspw.Br16]; dass es dazu einen Lernort durch das ver-pﬂichtende Schulfach Informatik in der Schule braucht, ﬁndet ebenfalls breite Zustimmung.Hierzu bedarf es zahlreicher, grundständig in erster und zweiter Phase der Lehrerbildungausgebildeter Informatiklehrkräfte sowie darüber hinausgehender Informatikfortbildungenfür Lehrkräfte. Um aber Aspekten der Medienbildung [etwaHa99] angemessen Rechnung1Bergische Universität Wuppertal, Gaußstraße 20 42119 Wuppertal,d.losch@uni-wuppertal.de2Bergische Universität Wuppertal, Gaußstraße 20 42119 Wuppertal,humbert@uni-wuppertal.decba doi:10.18420/infos2019-12Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1192zu tragen, müssen allgemeinbildende Elemente der Informatik für Lehrkräfte aller Fächeraufbereitet werden. So wie Schülerinnen und Schüler erst durch die Kombination vonInformatik und integrativer Medienbildung zur Mündigkeit befähigt werden, so bedürfenauch Lehramtsstudierende in der ersten Phase ihrer Ausbildung der Synergien von eigenstän-digem Informatikangebot und fachlich konkretisierender Mediendidaktik. An der BergischenUniversität Wuppertal werden seit 2009 regelmäßig Veranstaltungen durchgeführt, diedies zu gewährleisten versuchen. Sie wurden bis 2016 hinsichtlich ihrer inhaltlichen Tiefesukzessive weiter ausgerollt. Zu den seither etablierten Grundfesten der Veranstaltunggehört die Repräsentation der fachlichen Breite der Informatik durch Dozierende, die jeweilsaus ihrem jeweiligen Fachgebiet Aufschluss zur Informatik bieten. Für die Orientierunginformatischer Lehrangebote für Studierende anderer Fachkontexte klassiﬁzieren Seegererund Romeike vier Grundtypen: Denkweisen, Fluency, Wissenschaft und Gesellschaft [SR18,S. 20]. Die Veranstaltung kann vornehmlich der Kategorie »Wissenschaft« zugeordnetwerden:Kurse sollen einen Überblick über das Fachgebiet Informatik geben. DenStudierenden werden zentrale Ideen und Schlüsselkonzepte der WissenschaftInformatik aufgezeigt. Es geht häuﬁg auch darum, ein (breites) Bild der Diszi-plin zu vermitteln und gleichzeitig das Verständnis für dessen grundlegendeKonzepte zu scha en. [SR18, S. 20]Zwölf Lehrende gestalten die Veranstaltung durch Beiträge; mit dieser Vielzahl wirdauch versucht, die Vielheit in der Wissenschaft Informatik abzubilden. Die Veranstaltungwendet sich an zwei Gruppen bezüglich der zu erwerbenden ECTS: zwei respektivesechs ECTS. Durch curriculare Restriktionen der betro enen Studiengänge ist für dieLehramtsstudierenden der Sekundarstufe I der geringere Umfang von 60 Zeitstundenvorgesehen; alle weiteren Lehramtsstudierenden sowie Nicht-Lehramtsstudierende studieren180 Zeitstunden. Die Studierenden wenden zur Erfüllung der Anforderungen vier zusätzlicheECTS im Zusammenhang mit einem begleitenden Projektseminar auf. Wir betrachten indiesem Zusammenhang die Veranstaltung, die zwei ECTS umfasst; diese Veranstaltungverfolgt das Ziel, bei den Studierenden einen universitären »Mindeststandard« informatischerKompetenzen zu entwickeln.Befragungen und Rückmeldungen der Studierenden sowie der Lehrenden aus der mehr-jährigen Durchführung der Veranstaltung legten bereits nahe, dass eine für alle Lehr-amtsstudierenden adäquate Optimierung der Veranstaltung möglich ist. Inbesondere dieInteressenlage der Studierenden, die Freiwilligkeit der Veranstaltung und eine vermeint-liche und »gefürchtete« Abstraktheit der informatischen Fachgegenstände bedürfen einerinformatikdidaktischen Erörterung.120 Daniel Losch, Ludger HumbertInformatische Bildung für alle Lehramtsstudierenden 31.2 FragestellungIn der bundesdeutschen Hochschullandschaft gibt es ein ausgewiesenermaßen umfänglichesAngebot an Medienbildung, was anhand der Zahl hochschulischer Medienzentren bereitsdeutlich wird. Universitäre Angebote, die eine Entwicklung informatischer Selbstkompetenzim Zusammenhang mit geeigneten Veranstaltungen ermöglichen, sind im Vergleich kaumau ndbar; Seegerer und Romeike haben neun Hochschulkurse für Studierende andererFachkontexte in Deutschland in ihre Datenbasis aufgenommen [SR18, S. 18]. Die Frage nachder konkreten Gestaltung eines universitären Informatikangebots für alle Lehramtstudieren-den wurde nach unserer Kenntnis bisher nicht wissenschaftlich untersucht. Im Folgendenstellen wir ein informatikdidaktisches Forschungselement aus dem Reformprozess einesbestehenden Konzeptes vor. Dabei wird folgende Hypothese formuliert: Das bestehendeLehrangebot muss – hinsichtlich der intendierten Kompetenzen für die Studierenden – alsnicht vollständig befriedigend bezeichnet werden. Wenn das Lehrangebot sich als nichtvollumfänglich zielführend erweist, ist insbesondere die Beantwortung folgender Fragenbedeutsam: Was muss inhaltlich angeboten werden? Welche Formen der Umsetzung sindzielführend?2 VorgehensweiseUm eine multiperspektivische Auseinandersetzung des konzeptuellen Reformprozesses zugewährleisten, wird ein triangulatives Forschungsdesign gewählt:1.DiestudentischePerspektive auf die Veranstaltung wird mittels einer qualitativen,schriftlichen Befragung erhoben; die Befragung wird dabei als Reﬂexionselementnach etwa zwei Dritteln der Veranstaltung implementiert. Im Anschluss fand eine Dis-kussion zur Gesamtveranstaltung in dialogischer Hörsaalsituation statt; dazu wurdenzwei Leitfragen formuliert – zum einen nach dem Verhältnis von inhaltlicher Tiefeund thematischer Breite zum anderen nach Aufwand, Ablauf sowie Organisation derVeranstaltung. Abschließend konnten die Forschungselemente hinsichtlich aktuellerUmgestaltungen und Gesamtkonzept unter Zuhilfenahme qualitativer Inhaltsanalyse[Ma99] ausgewertet werden; konkret wurden Zusammenfassungen der einzelnenErhebungen vorgenommen und induktive Kategorien gebildet, welche schließlicheiner Häuﬁgkeitsanalyse unterzogen wurden [Ma99, S. 67  .].2.Der empirische Befund (s. Abschnitt4) wird aus der Perspektive zweierfachwis-senschaftlichorientierter Aufschlüsse der Informatik betrachtet ([Cl91;De08]–s. Abschnitt5.1), die strukturgebende Impulse für die Veranstaltungskonzeptionsetzen.3.Die Ergebnisse werden über zweifachdidaktischeAufschlüsse diskutiert (s. Ab-schnitt5.2): Das Konzept informatischer Literalität bietet die Phänomenorientierung,Informatische Bildung für alle Lehramtsstudierenden 1214bei der einerseits Phänomene als Erscheinungen und Konsequenzen des alltäglichenLebens aufgefasst werden [HP04]; andererseits werden informatische Handlungs-dimensionen in Anwendung, Gestaltung und Entscheidung deutlich. In diesemZusammenhang soll die von Engbring erweiterte Form des sogenannten »DagstuhlDreiecks« einen Aufschluss aus der gemeinsamen Perspektive eines Diskurses vonMedienpädagogik, Informatik und Medienwissenschaft zu. Um den organisatori-schen Rahmen der Veranstaltung angemessen zu erfassen, sollen zur Unterstützungzugeschnittene Elemente einer empirischen Studie herangezogen werden; dieserStudie liegt eine Ein-/Ausgangsbefragung in der Veranstaltung mit quantitativemSchwerpunkt zugrunde.3 DurchführungVorlesungsthema Kürzel SWS Dozent*inWas ist Informatik? was 4 AGeschichte der Informatik hist 4 AZahlensysteme und Codierung code 4 BEingebettete Echtzeitsysteme ees 4 CRechnerarchitektur arch 2 DModellierung und Implementierungimp 6 EMensch-Maschine-Schnittstellen mms 4 FTechnische Informatik tech 2 DBetriebssysteme os 2 GGrundlagen Internet net 4 HKryptographie crypt 2 ISicherheit im Internet sec 2 HRecht und Internet law 2 JHörsaalreﬂexion reﬂ 2 –Datenbanken dbs 4 BMaschinelles Lernen ml 2 LGrenzen der Informatik theo 4 KInformatikallgemeinbildung did 4 ATab. 1: Gegenstände der VorlesungDie Umgestaltung der Veranstaltung im Semester der Durchführung umfasste folgendeAspekte:•Restrukturierung nach fachdidaktischer Maßgabe der thematischen Reihung•Ergänzung um eine Vorlesung zum maschinellen Lernen•Erweiterung der Teilveranstaltung {imp}3um Programmierpraxis3Die in {. . . } gesetzten Veranstaltungskürzel sind stets in der Tabelle1aufgelöst.122 Daniel Losch, Ludger HumbertInformatische Bildung für alle Lehramtsstudierenden 5•Erweiterung der Teilveranstaltungen {was, code, tech, net, crypt, sec, theo} umenaktive Elemente4Im Durchschnitt waren 62 Studierende in der Veranstaltung anwesend. An der Evaluations-sitzung, die auch die qualitative Befragung einschließt, nahmen 54 Studierende teil, wobei49 Bögen ausgefüllt wurden. Die von den teilnehmenden Studierenden belegten Fächersind in Tabelle2dargestellt. Die Teilveranstaltung {reﬂ} wurde als reﬂexives Elementeingebettet, um die genannte Hypothese einer Überprüfung zuführen zu können:1.Die Studierenden konnten – über die Implementierung der »Think-Pair-Share«-Methode – ihre Reﬂexion zur Begegnung mit demFachInformatik und mit derVeranstaltungals solcher schriftlich dokumentieren, anhand von Leitfragen mitKommiliton*innen diskutieren und schließlich vor dem Plenum zu Gehör und zuProtokoll geben.2.Den Studierenden wurden Hintergründe zur Veranstaltung dargestellt und erhielteneinen Ausblick auf Reformüberlegungen der Veranstaltenden.3.Die Studierenden waren aufgerufen, angesichts des neu gewonnenen Hintergrundwis-sens zur Veranstaltung weitere Argumente vorzubringen.Fach TeilnehmendeMathematik 53,45 %Englisch 18,97 %Biologie 17,24 %Musik 17,24 %Politik 17,24 %Chemie 12,07 %Deutsch 12,07 %Pädagogik 6,90 %Fach TeilnehmendeGeschichte 6,90 %Physik 6,90 %Psychologie 6,90 %Evangelische Religion 5,17 %Französisch 3,45 %Spanisch 3,45 %Katholische Religion 1,72 %Tab. 2: Teilnehmende der Veranstaltung nach studierten Fächern54 Ergebnisse und Diskussion der empirischen Forschungselemente4.1 Struktur und erste Ergebnisse der Befragung der StudierendenDieInteressenlageder Studierenden an der Informatik kann als ausgeglichen mit leichtpositivem Überhang bezeichnet werden; Informatik ist also für einige (27 %, s. Abb.1)4Bei diesen Elementen handelt es sich um Rollenspiele oder Gruppenarbeiten im Hörsaal mit haptischer Aktivität.5Lehramtsstudierende qualiﬁzieren sich in zwei respektive drei Fächern, daher sind die Summen größer als 100 %.6Das qualitative Format sah eineo eneBeantwortung der Fragen vor. Daher ist die Summe größer als 100 %Informatische Bildung für alle Lehramtsstudierenden 123627 %interessant16 %uninteressant10 %Programmierpraxis als positiv aufgefasst14 %Programmierpraxis schwierig in der Umsetzung41 %vielseitig53 %komplex31 %wenig berufs- oder lebensweltbezogen22 %Anspruch sehr hochAbb. 1: Häuﬁgkeiten der induktiven Kategorien6ein Thema, in das ein Einblick lohnenswert scheint; 16 % bekundeten explizites Des-interesse, sodass etwas über die Hälfte von sich aus keine Stellung dazu bezieht. ZehnStudierende hobenexplizitdie Teilveranstaltungen {was, hist, law, crypt, net, sec} alssehr positiv hervor; dies kann bei ersteren dreien auf ein hohes Interesse an der Reﬂexiongesellschaftlich-kultureller Wechselwirkungen [En18, S. 7] zurückgeführt werden, was auchan anderer Stelle bereits belegt werden konnte [SR18, S. 26]. Für {crypt, net, sec} sehendie Studierenden die positive Markierung in der Integration enaktiver Phasen begründet:»Beispiel Programmieren erst Theorie und anschließend Praxis (aber dann auch mehr) MehrInteraktion mit der Hörerschaft wie bei den Entschlüsselungen und dem »Paket-Verschicken«hält (mich persönlich) näher am Geschehen und macht Konzepte greifbarer«. Hier wirdsogar eine Steigerung der Anteile an Programmierpraxis gefordert. 41 % der Befragtenbekundeten unmittelbar dieVielseitigkeitder Informatik in dieser Veranstaltung (davonhoben acht Personen die Vielfalt explizit als positiv hervor); dies bestätigt die geplante Dar-stellung der fachlichen Breite; die Ringvorlesung ist dafür vermutlich weiterhin geeignetesGestaltungsformat, wenngleich sich eine Person explizit gegen das Format aussprach. EineBeobachtung einer befragten Person lautet: »Zur Einordnung der entsprechenden Themensollten meiner Meinung nach mehr verbindende Elemente betont werden, sodass man denzu Beginn der Veranstaltung vorgestellten ›roten Faden‹ häuﬁger wiedererkennt.« Dies zeigt,dass die Absicht, die Veranstaltung unter ein Leitmotiv zu stellen, erkennbar war, jedoch inder Umsetzung eine eher geringe Kohärenz7der Teilveranstaltungen aufwies. Die häuﬁgsteZuschreibung an die Informatik ist ihreKomplexität8; damit kann vermutetet werden, dassStudierende sich informatische Kompetenzen also nicht »nebenbei« aneignen können;demnach würden integrative Informatikangebote allein nicht ausreichen. Dies ist auch einwichtiges Element für den Reformprozess: Primär sollten in dieser fachwissenschaftlichorientierten Informatikveranstaltung für Nicht-Informatikstudierende Prozess- und Gegen-standsbereiche der Informatik thematisiert werden. Der Bezug zu Lehramt, Studienfächernund Lebenswelt der Teilnehmenden sollte möglichst berücksichtigt werden sein. Die bisherdurchgeführte Veranstaltung und ihre Struktur führen o ensichtlich bei 31 % der Befragtender Veranstaltung dazu, dass derartige Bezüge nur eingeschränkt hergestellt werden können;dazu gesellt sich, dass 22 % der Befragten den Anspruch als sehr hoch einstufen.7In diesem Beitrag wird Kohärenz als Bezeichnung für die einheitliche Orientierung an einer fachdidaktischenGestaltungslinie verstanden.8Die Erwartungen bezüglich der Komplexität und Vielseitigkeit wurden oftmals als überraschend aufgefasst.124 Daniel Losch, Ludger HumbertInformatische Bildung für alle Lehramtsstudierenden 74.2 Interaktives ReﬂexionselementDie dialogische Hörsaalsituation bestätigt die Ergebnisse der schriftlichen Befragung: Sohabe es mit Blick auf inhaltliche Tiefe und thematische Breite eine gelungene Übersichtgegeben, die jedoch nicht überschneidungsfrei geblieben sei. Die Kohärenz der Teilveranstal-tungen sollte in diesem Sinne stärker herausgestellt werden. Wenngleich praktische Elementein die Teilveranstaltungen {was, code, imp, tech, net, crypt, theo} eingewoben wurden, seider Vorlesungsanteil zu umfangreich gewesen; statt des Programmierens seien andere bzw.weitere Praxisbeispiele informatischen Handelns zu gestalten (ein genanntes, studentischesAnliegen: rudimentäre Netzwerkkonﬁguration). Die stärkere,praktischorientierte Einbin-dung der Studierenden in die jeweiligen informatischen Themen ist eine bedeutsame Auﬂagefür den Reformprozess. Insgesamt wurde durch die Diskussionsbeiträge das Spannungsfeldzwischen den Dimensionen Breite, Tiefe und Anwendbarkeit der informatischen Themendeutlich.5 Triangulation5.1 Fachwissenschaftliche PerspektiveIm Rahmen wissenschaftstheoretischer Überlegungen zur Informatik wirft Denning folgende,grundlegende Fragen auf: »What is computation? What is information? What can we knowthrough computing? What can we not know through computing? How can we build complexsystems simply?« [De08, S. 2]. Für eine geeignete Darstellung der Wissenschaft Informatik indidaktischen Zusammenhängen empﬁehlt Claus folgende Zielbereiche: (a) wissenschaftsbe-zogener Bereich, (b) Zukunftsaspekte, (c) Einsatz–Anwendungen–Auswirkungen bis heute,(d) Nutzen (und Schaden), (e) Grundtechniken und Unterstützungscharakter [Cl91, S. 149].Mit den Teilveranstaltungen {was, hist} wird dem wissenschaftsbezogenen Bereich bereitsbegegnet; dieses Element ist auch laut empirischem Befund fundamental für den Aufschlussder Informatik und wurde explizit positiv konnotiert. Die Teilveranstaltungen {ees, os, net,crypt, sec, dbs, ml} sind den Zielbereichen »Zukunftsaspekte«, »Einsatz–Anwendungen–Auswirkungen bis heute«, »Nutzen (und Schaden)« dienlich. Der Beantwortung der vonDenning aufgestellten Fragen kann insbesondere über diekerninformatischenFachgebieteabgedeckt werden, die in »reiner Form« bislang zu wenig Berücksichtigung in der Veran-staltung gefunden haben. Der bisherige Ansatz ist stark an den Fachgegenständen einzelner(den Studierenden nicht transparenten) Disziplinen orientiert gewesen; damit ist auch der zuTage getretene Mangel an Kohärenz erklärbar.5.2 Fachdidaktische PerspektiveWird nun – als zweiter Zugang – die fachdidaktische Perspektive der Phänomenorientierunghinzugenommen, so ist zu konstatieren, dass Beispiele aus allen drei »Phänomenbereichen«Informatische Bildung für alle Lehramtsstudierenden 1258[HP04, S. 4] in die Veranstaltung eingebettet werden sollten und exemplarisch in je einerTeilveranstaltung informatisch erörtert werden. Dadurch könnte sichergestellt werden, dassdie erhobene informatische Komplexität und der zu hohe Anspruch lebensweltbezogenaufgelöst wird. Die Teilveranstaltungen {ees, os, net, crypt, sec, dbs, ml} eignen sich dazuin besonderer Weise. Das in [Pu03, S. 138] vorgestellte Konzept informatischer Literalitätermöglicht folgende, erhellende Aufstellung:Handlungs-dimensionVeranstaltung(s. Tab.1)fachwissenschaftlicheund fachdidaktische ReferenzAnwendung{ees, os, net, crypt, sec, dbs, ml}(c),(e) (s. Abschnitt5.1)Gestaltung {tech, mms, imp, code}[De08]; Strukturen und Funktionen [En18]Entscheidung{hist, theo, law, did}(b),(d) (s. Abschnitt5.1); gesellschaftlich-kulturelle Wechselwirkungen [En18]Tab. 3: Zuordnung von Elementen informatischer Literatität zu Teilen der VeranstaltungEine Betonung der Handlungsdimension »Anwenden« begegnet den nachgewiesenenProblemzonen beim Berufs- und Lebensweltbezug und adressiert Claus’ Zielbereiche»Einsatz–Anwendungen–Auswirkungen bis heute« (c) und »Grundtechniken und Unter-stützungscharakter« (s. Abschnitt5.1). Die Handlungsdimension »Gestalten« hingegensollte in einem kerninformatischen Modul einen Schwerpunkt bilden. Damit kann demProblem hoher Komplexität Rechnung getragen werden. Der Programmierpraxis und dertechnischen Informatik wird in praktischer Ausführung mehr Zeit eingeräumt. Das großeInteresse an der Reﬂexion gesellschaftlich-kultureller Wechselwirkungen spiegelt sich inder Handlungsdimension »Entscheiden« wieder. Die Teilveranstaltung {was} muss beimÜberblick über die Informatik einen »roten Faden« aufzeigen, der die einzelnen Veranstal-tungselemente kohärent in den Modellierungsprozess einbindet. Somit wird einerseits diejeweilige Schwerpunktsetzung (Anwendung–Gestaltung–Entscheidung) einer Teilveranstal-tung für die Studierenden transparent; andererseits wird der prozessuale Zusammenhangder Handlungsdimensionen verdeutlicht, der in den Teilveranstaltungen stets mitgedachtwerden sollte.6 KonsequenzenDie Veranstaltung ist bisher durch eine starke informatikfachwissenschaftliche Orientie-rung geprägt. Damit erfahren die Studierenden an einigen Stellen die große fachlicheKomplexität und nur geringe Lebensweltbezüge. Die ersten Ergebnisse scheinen damitvorerst die oben dargestellte Vermutung zu bestätigen. Um diesem Eindruck zu begegnen,versuchen wir, die Veranstaltung durch den vorgestellten Lösungsansatz (s. Abb.2) soanzureichern und umzugestalten, dass die Studierenden informatische Kompetenzen inallen in [SR18, S. 20] aufgestellten Kategorien entwickeln können. Dabei sollen Theorieund Praxis stärker verzahnt werden, indem in jeder Woche einer Vorlesung eine praktischeHörsaalübung zugeordnet wird. Die Veranstaltung als Ganzes wird modularisiert (s. Abb.2):126 Daniel Losch, Ludger HumbertInformatische Bildung für alle Lehramtsstudierenden 91 Orientierung1Was ist Informatik?2Geschichte der Informatik2 Projektorientierter Rundgang durchdie Kerninformatik3Technische Informatik4Informatische Modellierung5Von der Modellierung zur Imple-mentierung6Grenzen der Informatik3 Informatischer Aufschluss ausge-wählter Phänomene7Allgegenwärtige Informatiksysteme8Betriebssysteme9.1Internet9.2Recht und Internet10.1Kryptographie10.2Sicherheit im Internet11.1Datenbanken11.2Maschinelles LernenAbb. 2: Vorläuﬁges Konzept zur Planung einer allgemeinbildenden InformatikveranstaltungAuf die eingängliche Orientierungsphase, folgt ein projektorientierter Rundgang durchdie Kerninformatik. Diese Exposition möge als Grundlage für die Gestaltungs- und Ent-scheidungskompetenz der Studierenden am Beispiel des Mikrocontrollers Calliope [Ge18]gelten. Der informatische Aufschluss ausgewählter Phänomene bietet die Möglichkeit – aufBasis der kerninformatischen Kompetenzen –, Aspekte der Anwendung mit konkretemBerufs- bzw. Lebensweltbezug zu erarbeiten. Nächste Schritte sind die interne Revisionder Veranstaltung auf Grundlage der hier ausgeführten Forschungselemente im kollegialenKreise und die Untersuchung des projektorientierten Begleitformates (für Studierendemit vier zusätzlichen Leistungspunkten). Dieses birgt ein Potential zur Scha ung vonnoch stärkerem, studentischen Berufs- und Lebensweltbezug zu informatischen Denk-und Handlungsweisen – auch und gerade bezüglich individueller Studienfachrichtungen.Letztlich ergeben sich Herausforderungen im Hinblick auf die Zieldimension des gesam-ten Reformprozesses: Es wird angestrebt, durch Vereinheitlichung und Dokumentationdie Portabilität des Studienmoduls auf andere Hochschulstandorte voranzutreiben. Wirdeine allgemeinbildende Informatikveranstaltung angeboten, so ist nach den bisherigenÜberlegungen in der Fachdidaktik eines jeden Faches eine fruchtbare Diskussion überfachlich-informatische Wechselwirkungen anzuregen.Literatur[Br16]Brinda, T.: Stellungnahme zum KMK-Strategiepapier »Bildung in der digitalenWelt«, 2016,   :https://pygy.co/zW, Stand: 17. 02. 2019.[Cl91]Claus, V.: Die Rolle der Sprache – Anforderungen an den Informatikunterricht.In (Burkert, J.; Peschke, R., Hrsg.): Weiterentwicklung des Informatikunterrichts– Folgerungen aus der Sicht von Lehrerbildung und Wissenschaft. Materialienzur Schulentwicklung 16, Hessisches Institut für Bildungsplanung und Schulent-wicklung (HIBS), Wiesbaden, S. 148–158, 1991,    : 3-88327-241-8.Informatische Bildung für alle Lehramtsstudierenden 12710[De08]Denning, P. J.: Great Principles of Computing, 2008,   :https://pygy.co/NE,Stand: 17. 02. 2019.[En18]Engbring, D.: Überlegungen zu einem Beitrag zur Lehrerbildung in der digitalvernetzten Welt, Ein auf Erfahrungen gestützter Bericht und Diskussionsbeitrag.In (Thomas, M.; Weigend, M., Hrsg.): Informatik und Medien – 8. MünsteranerWorkshop zur Schulinformatik. Books on Demand GmbH, Norderstedt, S. 95–106, Mai 2018,    : 9783752849424,   :https://t1p.de/3k9u, Stand:17. 02. 2019.[Ge18]Gesche Joost and Franka Futterlieb and Stephan Noller and Jørn Alraun andKlaus Buß and Maxim Loick: Calliope mini Dokumentation v1.0 auf github.io,31. Jan. 2018,   :https://pygy.co/NF, Stand: 17. 02. 2019.[Ha99]Hauf-Tulodziecki, A.; Bartsch, P. D.; Becker, K.-H.; Herzig, B.; Lehmann, G.;Magenheim, J.; Schelhowe, H.; Siegel, C.; Wagner, W.-R.: Informatische Bildungund Medienerziehung. Empfehlung der Gesellschaft für Informatik e. V. erarbeitetvon einem Arbeitskreis des Fachausschusses »Informatische Bildung in Schulen«(7.3), Informatik Spektrum, Band 23, Heft 2, 2000 und LOG IN Nr. 6 1999, Okt.1999,   :https://pygy.co/NG, Stand: 17. 02. 2019.[HP04]Humbert, L.; Puhlmann, H.: Essential Ingredients of Literacy in Informatics.In (Magenheim, J.; Schubert, S., Hrsg.): Informatics and Student Assessment.Concepts of Empirical Research and Standardisation of Measurement in the Areaof Didactics of Informatics. Bd. 1. GI-Edition – Lecture Notes in Informatics(LNI) – Seminars S-1, Dagstuhl-Seminar of the German Informatics Society (GI)19.–24. September 2004, Köllen Druck+Verlag GmbH, Bonn, S. 65–76, 2004,    : 3-88579-435-7,   :https://pygy.co/NI, Stand: 17. 02. 2019.[Ma99]Mayring, P.: Einführung in die qualitative Sozialforschung. Psychologie VerlagsUnion, München, 1999.[Pu03]Puhlmann, H.: Informatische Literalität nach dem PISA-Muster. In (Hubwieser, P.,Hrsg.): Informatik und Schule – Informatische Fachkonzepte im UnterrichtINFOS 2003 – 10. GI-Fachtagung 17.–19. September 2003, München. GI-Edition– Lecture Notes in Informatics – Proceedings P 32, Gesellschaft für Informatik,Köllen Druck + Verlag GmbH, Bonn, S. 135–144, 2003,    : 3-88579-361-X,   :https://pygy.co/NJ, Stand: 17. 02. 2019.[SR18]Seegerer, S.; Romeike, R.: Was jeder über Informatik lernen sollte – Eine Analysevon Hochschulkursen für Studierende anderer Fachrichtungen. In (Bergner, N.;Röpke, R.; Schroeder, U.; Krömker, D., Hrsg.): Hochschuldidaktik der InformatikHDI 2018 – 8. Fachtagung des GI-Fachbereichs Informatik und Ausbildung/-Didaktik der Informatik. Bd. 8. Commentarii informaticae didacticae (CID),Universitäts-Verlag Potsdam, Potsdam, S. 15–28, 2018,    : 978-3-86956-435-7,   :https://t1p.de/k8cu, Stand: 17. 02. 2019.128 Daniel Losch, Ludger HumbertcbaHerausgeber et al. (Hrsg.): Name-der-Konferenz,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Debuggen im Unterricht – Ein systematisches Vorgehenmacht den UnterschiedTilman Michaeli1, Ralf Romeike2Abstract:Selbstständig Fehler in Programmcode zu ﬁnden und zu beheben stellt sowohl eine wichtige Fähig-keit als auch eine große Herausforderung beim Programmierenlernen dar. Debuggen unterscheidetsich von allgemeinen Programmierfertigkeiten und muss explizit gelehrt werden. Dennoch gibt esüberraschend wenige Studien, Materialien und Konzepte, die sich mit der expliziten Vermittlungvon Debuggingfähigkeiten beschäftigen. Eine relevante Debuggingfähigkeit ist ein systematischesVorgehen bei der Fehlersuche. Dieser Beitrag analysiert die Wirksamkeit einer expliziten Vermittlungeines solchen systematischen Vorgehens im Unterricht, insbesondere hinsichtlich der Selbstwirk-samkeitserwartungen und der resultierenden Debuggingleistung der Schülerinnen und Schüler. Zudiesem Zweck haben wir eine Intervention entwickelt, pilotiert und anschließend in einem Pre-Post-Kontrollgruppen-Test-Design untersucht. Die Ergebnisse zeigen sowohl einen signiﬁkanten Anstiegder Selbstwirksamkeitserwartungen als auch der Debuggingleistung in der Versuchsgruppe.Keywords:Debugging; Interventionsstudie; Systematisches Vorgehen1 EinleitungProgrammieren erfordert eine Vielzahl an Kompetenzen, entsprechend stellt deren Ver-mittlung eine zentrale Herausforderung des Informatikunterrichts dar. Dabei müssenSchülerinnen und Schüler nicht nur Programmierkonzepte erlernen, sondern auch dazubefähigt werden, Lösungen zu ﬁnden, wenn sie mit Fehlern konfrontiert werden. Programmesystematisch auf Fehler zu untersuchen, sie zu ﬁnden und zu beheben, stellt eine zentraleKompetenz professioneller Entwicklerinnen und Entwickler dar, die zwischen 20 und 40Prozent ihrer Arbeitszeit dafür aufwenden [Pe17]. Allerdings haben gerade Programmier-anfängerinnen und -anfänger große Probleme im Umgang mit Fehlern. Dies stellt einerhebliches Hindernis beim Programmierenlernen dar.Darüber hinaus wird Debuggen im Kontext von Computational Thinking diskutiert [Ya11],und ﬁndet sich prominent in neueren Curricula wie dem britischen „Computing Curriculum“.1Friedrich-Alexander-Universität Erlangen-Nürnberg, Didaktik der Informatik, Martensstraße 3, 91058 Erlangentilman.michaeli@fau.de2Freie Universität Berlin, Didaktik der Informatik, Königin-Luise-Str. 24-26, 14195 Berlinralf.romeike@fu-berlin.decba doi:10.18420/infos2019-13Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1292 Tilman Michaeli, Ralf RomeikeIn deutschen Lehrplänen kommt der Begri  „debuggen“ nur selten vor, allerdings fordernfast alle die Fähigkeit, „mit Fehlern umzugehen“. Dennoch gibt es überraschend wenigeStudien, die sich mit der expliziten Vermittlung von Debuggingfähigkeiten beschäftigen.Gleichzeitig mangelt es Lehrerinnen und Lehrern an Konzepten und Materialien für denUnterricht [MR19]. Eine relevante Debuggingfähigkeit ist ein systematisches Vorgehen beider Suche und beim Beheben von Fehlern.Das Ziel dieser Interventionsstudie ist es, den Einﬂuss einer expliziten Vermittlung einessystematischen Vorgehens zum Debuggen zu untersuchen. Im Fokus stehen dabei derEinﬂuss auf(RQ1) Selbstwirksamkeitserwartungenund(RQ2) Debuggingleistung. Dazuhaben wir eine Intervention entwickelt, pilotiert und anschließend in einem Pre-Post-Kontrollgruppen-Test-Design untersucht.2 HintergrundDebuggen beschreibt den Prozess der Suche und des Behebens von Fehlern. Debuggingfä-higkeiten unterscheiden sich von allgemeinen Programmierfertigkeiten, wie [AEH05] oder[Mu08b] zeigen. Während ausgeprägte Debuggingfähigkeiten in der Regel auf entsprechen-de Programmierfähigkeiten schließen lassen, gilt die Umkehrung nicht unbedingt: GuteProgrammierer sind nicht notwendigerweise auch gute Debugger. Dies wirft die Frage auf:Was macht einen „guten“ Debugger aus?Als eine relevante Debuggingfähigkeit wird die Anwendung einessystematischen Vorge-hens, also die systematische Verfolgung eines zielgerichteten Plans zur Fehlersuche und-behebung, gesehen. Dazu werden wiederholt Hypothesen formuliert, in Experimentenüberprüft und gegebenenfalls verfeinert, bis die Ursache des Fehlers gefunden ist (vgl.z.B. [Gi91]). Oftmals kann dieser Prozess abgekürzt werden: Durch Erfahrung und damitdieAnwendung von Heuristiken und Pattern, sind typische Fehler und deren möglicheUrsachen bekannt. Um dieses „Lernen aus früheren Fehlern“ zu unterstützen, führen vieleprofessionelle Entwickler ein Debugging-„Tagebuch“ mit dem sie ihre Debugging-Erfahrungdokumentieren [Pe17]. Darüber hinaus spielt die Anwendung vonDebuggingstrategieneine große Rolle im Debuggingprozess: Durch Strategien, wie beispielsweise dem Tracendes Kontrollﬂusses durchprint-f-Debugging, dem Auskommentieren von Code oder Slicing,können Informationen gewonnen werden, die bei der Formulierung von Hypothesen unddamit der Lokalisierung des Fehlers helfen [Sp18]. Ähnliches wird durch die VerwendungvonWerkzeugenwie dem Debugger ermöglicht.Murphy et al. [Mu08a] genauso wie Kessler and Anderson [KA86] argumentieren, dassDebuggingfähigkeiten explizit unterrichtet werden sollten. Nichtsdestotrotz gibt es über-raschend wenige Studien sowohl in Bezug auf die universitäre Lehre als auch auf denUnterricht, die sich mit der expliziten Vermittlung von Debugginginhalten beschäftigen.130 Tilman Michaeli, Ralf RomeikeDebuggen im Unterricht – Ein systematisches Vorgehen macht den Unterschied 32.1 Debuggen in der HochschullehreChmiel und Loui [CL04] verwendeten freiwillige Debuggingaufgaben, um die Debugging-fähigkeiten der Studierenden zu fördern. Es stellte sich heraus, dass Studierende, die diefreiwilligen Debuggingaufgaben bearbeitet hatten, deutlich weniger Zeit für das Debuggenihrer eigenen Programme benötigten. Dieser Zusammenhang spiegelte sich jedoch nicht inden Klausurergebnissen wider, die entgegen der Erwartungen nur leicht besser waren.Katz und Anderson [KJ87] untersuchten den E ekt der Vermittlung verschiedener Vorge-hensweisen (forward-reasoning, backward-reasoning) beim Debuggen. UnterschiedlichenStudierendengruppen wurde zunächst jeweils eine der Vorgehensweisen vermittelt, ehe sieihr Vorgehen frei wählen konnten. Dabei zeigte sich, dass Studierende weiterhin das ihnenvermittelte Vorgehen anwendeten.Allwood und Björhag [AB91] untersuchten, inwieweit schriftliche Debugging-Hinweiseden Prozess unterstützen können. Während sich die Anzahl der Fehler zwischen Versuchs-und Kontrollgruppe nicht unterschied, war die Anzahl der beseitigten Fehler (insbesonderesemantischer und logischer Art) bei Verfügbarkeit schriftlicher Hinweise signiﬁkant höher.Da gleichzeitig keine Unterschiede in den verwendeten Strategien zwischen den Gruppenerkennbar waren, folgerten die Autoren, dass die Unterschiede auf einer höheren Ebeneliegen müssen und vor allem ein systematisches Vorgehen beim Debuggen entscheidend sei.Böttcher et al. [Bo16] vermittelten ein systematisches Debuggingvorgehen sowie dieVerwendung des Debuggers in einer expliziten Einheit. Dabei wurde das Debuggingver-fahren in einer Live-Demonstration verdeutlicht und eine Übung mit Debuggingaufgabendurchgeführt. Die Auswertung zeigte, dass nur wenige Studierenden den vermittelten syste-matischen Ansatz anwendeten, sondern schnell zu einem unsystematischen „Herumstöbern“zurückkehrten.2.2 Debuggen im UnterrichtCarver und Risinger [CR87] vermittelten einen Debuggingprozess mit LOGO mit viel-versprechenden Ergebnissen: Sie gaben den Schülerinnen und Schülern eine StundeDebugging-Training als Teil eines größeren LOGO-Curriculums. Sie nutzten ein Flow-Chart,das den Debuggingprozess charakterisiert, „Bug Mappings“ und Debugging-Tagebücher,die während der gesamten Zeit im Klassenzimmer vorhanden waren. Die Ergebnisse (ohneKontrollgruppe) zeigten einen Wechsel von Brute-Force hin zu einem systematischenVorgehen bei der Suche nach Fehlern. Darüber hinaus wurde für die Fehlersuche deutlichweniger Zeit benötigt. Die Schülerinnen und Schüler formulierten vor dem Ausprobierendes Codes mehr Hypothesen, achteten stärker auf den Kontrollﬂuss, nahmen wenigerCode-Änderungen vor (insbesondere an fehlerfreien Stellen) und machten weniger neueFehler.Debuggen im Unterricht - Ein systematisches Vorgehen macht den Unterschied 1314 Tilman Michaeli, Ralf RomeikeIn einer qualitativen Interviewstudie unter Informatiklehrkräften untersuchten [MR19] dieaktuelle Rolle, die Debuggen im Unterricht spielt. Dabei ist festzustellen, dass Lehrkräfte beiProgrammierproblemen viel und oft individuelle Hilfestellung leisten müssen. In der Folgeeilen sie häuﬁg von Schüler-Rechner zu Schüler-Rechner und versuchen zu helfen (gemeinhinals „Turnschuhdidaktik“ bekannt). Weiterhin mangelt es Lehrkräften an Konzepten undMaterialien für die Vermittlung von Debugging. Insbesondere ist die Vermittlung einessystematischen Vorgehens – obgleich dessen Bedeutung – in der Schule unterrepräsentiert.Zusammenfassend zeigt sich, dass nur wenige Untersuchungen zur expliziten Vermittlungvon Debuggingfähigkeiten existieren und ein Großteil der Studien älter als 25 Jahreist. Nichtsdestotrotz demonstrieren die vorhandenen Ergebnisse, dass sich Debuggenexplizit vermitteln lässt. Sie deuten zudem darauf hin, dass ein systematisches Vorgeheneine entscheidende Rolle in einem erfolgreichen Debuggingprozess spielen kann. Eineempirische Untersuchung, inwieweit Programmieranfängerinnen und -anfänger innerhalbeines Unterrichtssettings von der Vermittlung eines solchen systematischen Vorgehensproﬁtieren, fehlt bislang.3 VorgehenZiel dieser Untersuchung ist es, den Einﬂuss einer expliziten Vermittlung eines systema-tischen Vorgehens zum Debuggen im Unterricht zu untersuchen. Wir adressieren damitfolgende Forschungsfragen:•(RQ1) Hat die Vermittlung eines systematischen Vorgehens einen positiven E ektauf die Selbstwirksamkeitserwartungen der Schülerinnen und Schüler?•(RQ2) Hat die Vermittlung eines systematischen Vorgehens einen positiven E ektauf die Debuggingleistung der Schülerinnen und Schüler?3.1 UntersuchsungsdesignUm diese Forschungsfragen zu beantworten, haben wir ein Pre-Post-Kontrollgruppen-Test-Design gewählt. Zunächst wurde die Intervention in einer 10. Klasse für besondersleistungsstarke Schülerinnen und Schüler (n=14, Greenfoot und Stride) pilotiert, umausgehend von den gewonnenen Erkenntnissen der Durchführung Anpassungen vorzuneh-men. Ergebnisse aus einer solchen Untersuchung ohne Kontrollgruppe helfen uns bei derBeantwortung der Forschungsfragen allerdings nur eingeschränkt, da mögliche Zuwächse inSelbstwirksamkeitserwartungen und Leistung der Schülerinnen und Schüler auch lediglichauf die zusätzliche Übung im Debuggen zurückzuführen seien könnten. Um den Einﬂuss derIntervention im Gegensatz zum reinen Üben von Debuggen, z.B. durch Debuggingaufgaben,zu untersuchen, haben wir zwei 10. Klassen als Versuchs- (n=13) und Kontrollgruppe132 Tilman Michaeli, Ralf RomeikeDebuggen im Unterricht – Ein systematisches Vorgehen macht den Unterschied 5(n=15) herangezogen. Dabei wurden explizit zwei Klassen ausgewählt, die von derselbenLehrkraft mit dem identischen Unterrichtskonzept (unter Verwendung von BlueJ undJava) unterrichtet wurden und die im Curriculum zum Untersuchungszeitpunkt gleich weitfortgeschritten waren.  Debugging-aufgabenDebugging-aufgabenFragebogenVersuchs- undPilotgruppe:InterventionDebugging-aufgabenFragebogenDebugging-aufgabenDebugging-aufgabenFragebogenKontrollgruppe:Debugging-aufgabenFragebogenPretestPosttestPretest     PosttestAbb. 1: UntersuchungsdesignDer Ablauf der jeweils 90-minütigen Unterrichtseinheiten bestand aus einem Pretest,der Intervention (außer in der Kontrollgruppe) und einem Posttest. Wie in Abbildung1dargestellt, unterteilten sich Pre- und Posttest jeweils in einen Fragebogen zur Erhebungder Selbstwirksamkeitserwartungen (vier Items mit fünfstuﬁger Likert-Skala) und derLösbarkeit der Aufgaben (nur im Posttest) sowie in Debuggingaufgaben zur Erhebung derLeistung der Schülerinnen und Schüler. Für Letzteres wurde die Anzahl der behobenenFehler (analog zu [Mu08b]) herangezogen, wofür sowohl die Arbeitsblätter, auf denenFehler und deren Behebung von allen Gruppen notiert werden sollten, als auch der Codeausgewertet wurde.3.2 InterventionDie Intervention vermittelt ein systematisches Vorgehen für die Suche und das Behebenvon Fehlern. Das Vorgehen lehnt sich an die sogenanntewissenschaftliche Methode[Ze05]an, die von professionellen Entwicklerinnen und Entwicklern typischerweise implizitangewendet wird [Pe17]: Es werden wiederholte Hypothesen formuliert, in Experimentenveriﬁziert und gegebenenfalls verfeinert, bis die Ursache gefunden ist. Wir verwendendabei eine didaktisch angepasste Variante dieses Vorgehens und unterscheiden explizitzwischen unterschiedlichen Fehlertypen: Compilezeit-, Laufzeit- und logischen Fehlern (vgl.Abbildung2). Es wird dasRückgängigmachenvon Änderungen betont, falls Maßnahmenzur Fehlerbehebung nicht erfolgreich sind – gerade da dieses Vorgehen für Schülerinnenund Schüler unnatürlich ist [Si08]. Hierdurch soll vermieden werden, dass die SchülerinnenDebuggen im Unterricht - Ein systematisches Vorgehen macht den Unterschied 1336 Tilman Michaeli, Ralf Romeikeund Schüler im Zuge einer fehlgeschlagenen Fehlerbehebung zusätzliche Fehler einbauen –ein typisches Phänomen für Programmieranfängerinnen und -anfänger [GO86].ggf.Änderungenrückgängigmachenggf.ÄnderungenrückgängigmachenKompilierzeitfehlerLaufzeitfehlerLogischer FehlerLiesundverstehedieFehlermeldung!LiesundverstehedieobersteFehlermeldung!PassedeinProgramman.PassedeinProgramman.FindedenFehlerundlokalisieredenrelevantenCode.FindedenFehlerundlokalisieredenrelevantenCode."WorinliegtdieUrsache?"VerfeineredeineVermutungoderstelleeineneueauf!"Warumistdasso?"VerfeineredeineVermutungoderstelleeineneueauf!PassedeinProgramman.SO FINDE ICH FEHLER IN MEINEM PROGRAMMCODEDebuggen leichtgemachtAusführenLäuftdasProgrammohneFehlerab?2VergleichenStimmenerwartetesundtatsächlichesVerhaltenüberein?3KompilierenÜbersetztdasProgramm?1Fertig!/|tilman.michaeli@fau.deddi.cs.fau.deggf.ÄnderungenrückgängigmachenAbb. 2: Vermitteltes VorgehenZum Üben des Debuggens werden typischerweise Debuggingaufgaben verwendet. Aller-dings konfrontieren diese die Schülerinnen und Schüler mit einer großen Menge an fremdemProgrammcode. Das Verständnis und die Einarbeitung in fremden Code stellt jedoch einegroße Herausforderung dar [AB90]. Um sich dem eigentlichen Lern- und Untersuchungs-ziel – dem DebuggeneigenerProgramme – anzunähern, verwenden wir daher mehrereaufeinander aufbauende Prototypen eines Programms. Auf diese Art und Weise sehen sichdie Schülerinnen und Schüler in jedem neuen Prototypen nur mit vergleichsweise wenig„fremdem“ Code konfrontiert und kennen sich im „alten“ Code bereits aus. Beispielsweise istim ersten Prototypen des in der Pilotgruppe verwendeten Pongspiels lediglich die Bewegungdes Balles umgesetzt, und im nächsten werden zusätzlich die Schläger und deren Steuerungeingefügt. Da die Debugging- und nicht die Testfähigkeiten der Schülerinnen und Schüleruntersucht werden sollten, war die Anzahl der vorhandenen Fehler je Prototyp gegeben. Ausdem gleichen Grund wurde darauf geachtet, dass das Fehlverhalten des Programms schnellersichtlich war, sodass direkt mit der Fehlerlokalisation begonnen werden konnte.4 Ergebnisse4.1(RQ1) Hat die Vermittlung eines systematischen Vorgehens einen positiven E ektauf die Selbstwirksamkeitserwartungen der Schülerinnen und Schüler?Zunächst untersuchen wir den Zuwachs der Selbstwirksamkeitserwartungen für Pilot-,Versuchs- und Kontrollgruppe pre und post, der sich als Mittelwert der vier Items ergibt.Die Antworten der fünfstuﬁgen Likert-Skala wurden auf die Skala 0 (stimme nicht zu) bis 4(stimme zu) abgebildet. Die Mittelwerte bewegen sich folglich zwischen 0 und 4.134 Tilman Michaeli, Ralf RomeikeDebuggen im Unterricht – Ein systematisches Vorgehen macht den Unterschied 7Wir ermitteln, ob ein signiﬁkanter Anstieg der Selbstwirksamkeitserwartungen zwischen Pre-und Post-Test innerhalb der einzelnen Gruppen feststellbar ist. Aufgrund der Stichprobengrö-ßen verwenden wir dazu stets nicht-parametrisierte Verfahren zur Prüfung auf Signiﬁkanz[Ra10]. Mithilfe des Wilcoxon-Vorzeichen-Rang-Tests – einem nicht-parametrischen Testfür abhängige Stichproben – analysieren wir die Rangfolgen im Pre- und Posttest. In Tabelle1sind die jeweiligen Mediane und der p-Wert des Wilcoxon-Vorzeichen-Rang-Tests (H0:Kein oder negativer Versuchse ekt) dargestellt3.Median pre Median post Wilcoxon-TestPilotgruppe2,75 3,25p=0,044⇤Kontrollgruppe2,25 2,50p=0,083Versuchsgruppe2,25 2,75p=0,001⇤Tab. 1: Einﬂuss auf SelbstwirksamkeitserwartungenWir sehen also in allen drei Gruppen einen Anstieg der Selbstwirksamkeiterwartungen.Dieser ist allerdings nur für die Pilot- und die Versuchsgruppe signiﬁkant auf einemSigniﬁkanzniveau von↵=0,05. Die E ektstärken nach Cohen liegen beid=0,56(Pilot)bzw.d=0,54(Versuch), dies entspricht einem mittleren E ekt [Co88].Obgleich das aktive Üben von Debugging die Selbstwirksamkeitserwartungen verbessert,scheint ein systematisches Vorgehen die Selbstwirksamkeitserwartungen stärker positiv zubeeinﬂussen.4.2(RQ2) Hat die Vermittlung eines systematischen Vorgehens einen positiven E ektauf die Debuggingleistung der Schülerinnen und Schüler?Für Unterschiede in der Debuggingleistung vergleichen wir Versuchs- und Kontrollgruppein Pre- und Posttest. Die Debuggingleistung wird anhand der Anzahl der behobenen Fehlergemessen. Ein pre-post-Vergleich der Debuggingleistung innerhalb der einzelnen Gruppenanalog zur Untersuchung der Selbstwirksamkeitserwartungen ist nicht zielführend, da inPre- und Posttest unterschiedliche Fehler zu beheben waren.Um festzustellen, ob sich die Leistung der Schülerinnen und Schüler der Versuchsgruppesigniﬁkant von der Leistung der Schülerinnen und Schüler der Kontrollgruppe unterscheidet,prüfen wir, ob die beiden Stichproben derselben Grundgesamtheit entstammen. Nur wenndies nicht der Fall ist, können wir von einem signiﬁkanten Unterschied ausgehen. Auchhier greifen wir ob der Stichprobengröße wieder zu einem nicht-parametrisierten Test,dem Mann-Whitney-U-Test. Im Gegensatz zum Wilcoxon-Vorzeichen-Rang-Tests ist dieserTest für unabhängige Stichproben ausgelegt. Die p-Werte des Mann-Whitney-U-Tests (H0:Stichproben kommen aus derselben Grundgesamtheit) sind in Tabelle2dargestellt.3Signiﬁkante Testergebnisse zu einem Signiﬁkanzniveau von↵=0,05sind durch ein⇤gekennzeichnet.Debuggen im Unterricht - Ein systematisches Vorgehen macht den Unterschied 1358 Tilman Michaeli, Ralf RomeikeMann-Whitney-U-TestVersuch- vs. Kontrollgruppe Prep=0,191Versuch- vs. Kontrollgruppe Postp=0,049⇤Tab. 2: Einﬂuss auf DebuggingleistungDementsprechend können wir die Nullhypothese für den Vergleich der Pre-Tests auf einemSigniﬁkanzniveau von↵=0,05nicht ablehnen: Die Debuggingleistung der Schülerinnenund Schüler unterscheidet sich vor Durchführung der Intervention nicht signiﬁkant. ImGegensatz dazu zeigt sich ein signiﬁkanter Unterschied im Posttest: Die Schülerinnenund Schüler der Versuchsgruppe weisen eine höhere Debuggingleistung (Median = 4, beiinsgesamt 9 zu behebenden Fehlern) auf als die Schülerinnen und Schüler der Kontrollgruppe(Median = 2). Im Posttest wurden für das Ermitteln der Debuggingleistung Aufgaben mithöherem Schwierigkeitsgrad herangezogen, da in beiden Gruppen ein Lerne ekt zwischenPre- und Posttest anzunehmen ist. Die E ektstärke nach Cohen liegt beid=0,69undentspricht einem mittleren E ekt [Co88].Die höhere Debuggingleistung spiegelt sich auch in der wahrgenommenen Schwierigkeit derAufgaben durch die Schülerinnen und Schüler wider. Diese wurde ex post im Fragebogenmit Hilfe einer fünfstüﬁgen Likert-Skala erhoben. Wiederum auf die Skala 0 (stimme nichtzu) bis 4 (stimme zu) abgebildet, ergeben sich folgende Mittelwerte:Aufgaben Pre Aufgaben PostKontrollgruppe3,07 1,47Versuchsgruppe3,23 2,92Tab. 3: Mittelwerte fürAufgaben gut lösbarDie Ergebnisse lassen darauf schließen, dass ein systematisches Vorgehen den Unterschiedmachen kann: Wird Schülerinnen und Schülern ein solches systematisches Vorgehen an dieHand gegeben, so können diese ihren Erfolg beim Lokalisieren und Beheben von Fehlernsigniﬁkant verbessern.5 Diskussion und FazitWelche Bedeutung haben diese Ergebnisse für den Informatikunterricht? Nach [MR19]fehlt es Informatiklehrkräften an geeigneten Konzepten für den ThemenkomplexDebuggen:Zwar sind verschiedene Debuggingstrategien sowie der Umgang mit Werkzeugen wie demDebugger teils Unterrichtsgegenstand, allerdings spielt die Vermittlung eines systemati-schen Vorgehens im Unterricht bisher kaum eine Rolle. Diese Studie unterstreicht dabei,wie wichtig es ist, ein systematisches Vorgehen zu vermitteln und liefert Ansatzpunktefür eine Umsetzung. Dabei ist die Unabhängigkeit von Werkzeugen und (textbasierten)136 Tilman Michaeli, Ralf RomeikeDebuggen im Unterricht – Ein systematisches Vorgehen macht den Unterschied 9Programmiersprachen – die in der Schulpraxis eine große Heterogenität aufweisen – zubetonen, so wurde dieselbe Intervention sowohl mit Java und BlueJ, als auch mit Strideund Greenfoot erfolgreich durchgeführt. Weiterhin legt dieser Ansatz einen Fokus auf dieSelbstständigkeitder Schülerinnen und Schüler in der Fehlersuche und -behebung, um dasProblem der „Turnschudidaktik“ zu adressieren.Die vorgestellte Intervention stellt einen ersten Baustein für die Förderung von Debug-gingfähigkeiten dar. Dieser sollte um die Vermittlung von konkreten Debuggingstrategien,Werkzeugen und Heuristiken erweitert werden.Eine mögliche Einschränkung der Validität dieser Studie stellt die geringe Stichprobengrößeund die nicht vorhandene Randomisierung der Schülerinnen und Schüler dar. Sie wurdenvon derselben Lehrkraft nach demselben Konzept unterrichtet und stammen von derselbenSchule. Dies könnte die Aussagekraft bezüglich der Verallgemeinerung der Ergebnisseauf die Grundgesamtheit einschränken. Wir planen daher, diese Studie auf eine größereStichprobe auszuweiten.Zusammenfassend zeigt unsere Untersuchung, dass eine solche Intervention einen vielver-sprechenden Ansatz für die Vermittlung von Debuggingfähigkeiten darstellt. Die Vermittlungeines systematischen Vorgehens zum Finden und Beheben von Programmierfehlern hat einenpositiven Einﬂuss auf die Debugging-Selbstwirksamkeitserwartungen. Schülerinnen undSchüler, die ein systematischen Vorgehen vermittelt bekommen haben, zeigen zudem höhereLeistungen im Debuggen als Schülerinnen und Schüler, die Debuggen ausschließlich geübthaben: Ein systematisches Vorgehen der Schülerinnen und Schüler macht den Unterschied.Literaturverzeichnis[AB90]Allwood, Carl Martin; Björhag, Carl-Gustav: Novices’ debugging when programming inPascal. International Journal of Man-Machine Studies, 33(6):707–724, 1990.[AB91]Allwood, Carl Martin; Björhag, Carl-Gustav: Training of Pascal novices’ error handlingability. Acta Psychologica, 78(1-3):137–150, 1991.[AEH05]Ahmadzadeh, Marzieh; Elliman, Dave; Higgins, Colin: An analysis of patterns of debuggingamong novice Computer Science students. Proceedings of the 10th annual SIGCSEconference on Innovation and Technology in Computer Science Education (ITiCSE ’05),37(3):84–88, 2005.[Bo16]Bottcher, Axel; Thurner, Veronika; Schlierkamp, Kathrin; Zehetmeier, Daniela: Debuggingstudents’ debugging process. Proceedings - Frontiers in Education Conference, FIE,2016-Novem, 2016.[CL04]Chmiel, Ryan; Loui, Michael C: Debugging: from Novice to Expert. Proceedings ofthe 35th SIGCSE technical symposium on Computer science education - SIGCSE ’04,36(1):17, 2004.[Co88]Cohen, Jacob: Statistical power analysis for the behavioural sciences. Hillsdale, NJ: erlbaum,1988.Debuggen im Unterricht - Ein systematisches Vorgehen macht den Unterschied 13710 Tilman Michaeli, Ralf Romeike[CR87]Carver, McCoy Sharon; Risinger, Sally Clarke: Improving children’s debugging skills. In:Empirical studies of programmers: Second workshop. Ablex Publishing Corp., S. 147–171,1987.[Gi91]Gilmore, David J: Models of debugging. Acta psychologica, 78(1-3):151–172, 1991.[GO86]Gugerty, Leo; Olson, G.: Debugging by skilled and novice programmers. ACM SIGCHIBulletin, 17(4):171–174, 1986.[KA86]Kessler, Claudius M; Anderson, John R: A model of novice debugging in LISP. In:Proceedings of the First Workshop on Empirical Studies of Programmers. S. 198–212,1986.[KJ87]Katz, Irvin R.; John R. Anderson: Debugging: An Analysis of Bug-Location Strategies.Human-Computer Interaction, 3(4):351–399, 1987.[MR19]Michaeli, Tilman; Romeike, Ralf: Current Status and Perspectives of Debugging in theK12 Classroom: A Qualitative Study. In (IEEE, Hrsg.): Global Engineering EducationConference (EDUCON). 2019.[Mu08a]Murphy, Laurie; Lewandowski, Gary; McCauley, Renée; Simon, Beth; Thomas, Lynda;Zander, Carol: Debugging: the good, the bad, and the quirky – a qualitative analysis ofnovices’ strategies. Proceedings of the 39th SIGCSE technical symposium on ComputerScience Education (SIGCSE ’08), 40:163, 2008.[Mu08b]Murphy, Laurie; Simon, Beth; Fitzgerald, Sue; Lewandowski, Gary; Thomas, Lynda;Zander, Carol: Debugging: ﬁnding, ﬁxing and ﬂailing, a multi-institutional study of novicedebuggers . Computer Science Education, 18(2):93–116, 2008.[Pe17]Perscheid, Michael; Siegmund, Benjamin; Taeumel, Marcel; Hirschfeld, Robert: Studyingthe advancement in debugging practice of professional software developers. SoftwareQuality Journal, 25(1):83–110, 2017.[Ra10]Rasch, Björn; Friese, Malte; Hofmann, Wilhelm; Naumann, Ewald: , Quantitative Methoden2: Einführung in die Statistik für Psychologen und Sozialwissenschaftler (3., erweiterteAuﬂage), 2010.[Si08]Simon, Beth; Bouvier, Dennis; Chen, Tzu-yi; Lewandowski, Gary; Mccartney, Robert;Sanders, Kate: Common sense computing (episode 4): debugging. Computer ScienceEducation, 18(2):117–133, 2008.[Sp18]Spinellis, Diomidis: Modern debugging: the art of ﬁnding a needle in a haystack. Commu-nications of the ACM, 61(11):124–134, 2018.[Ya11]Yadav, Aman; Zhou, Ninger; Mayﬁeld, Chris; Hambrusch, Susanne; Korb, John T: Introdu-cing Computational Thinking in Education Courses. In: Proceedings of the 42Nd ACMTechnical Symposium on Computer Science Education. SIGCSE ’11, ACM, New York,NY, USA, S. 465–470, 2011.[Ze05]Zeller, Andreas: Why Programs Fail: A Guide to Systematic Debugging. Elsevier, 2005.138 Tilman Michaeli, Ralf RomeikecbaArno Pasternak [et. al.] (Hrsg.): INFOS 2019 - Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Zur Relevanz eines Prozessbereiches Interaktion undExploration im Kontext informatischer Bildung imPrimarbereichKathrin Müller1, Carsten Schulte2, Johannes Magenheim3Abstract:Im Zusammenhang mit der aktuellen Diskussion über eine informatische Bildung für alleab der Primarstufe wurden im vergangenen Jahr zwei Empfehlungen für Kompetenzen im Bereichder frühen informatischen Bildung verö entlicht. Ein wesentliches Unterscheidungsmerkmal beiderDokumente ist die Einführung eines neuen Prozessbereiches P0 ”Interagieren und Explorieren” inder Expertise der Stiftung Haus der kleinen Forscher. Im Rahmen der GI-Empfehlungen wird dieserProzessbereich nur indirekt aufgenommen. Darüber hinaus gibt es zahlreiche Diskussionen über dieSinnhaftigkeit dieses neuen Prozessbereichs. Übergreifendes Ziel dieses Artikels ist es, die Bedeutungund Anwendung des Prozessbereichs P0 zu erläutern: Was verbirgt sich hinter diesem Prozessbereichund wie kann er mit anderen Inhaltsbereichen zu relevanten Kompetenzfeldern kombiniert undmethodisch adäquat umgesetzt werden? Es wird u.a. gezeigt, dass mit dem Prozessbereich P0 ein dernaturwissenschaftlichen Methodik ähnlicher experimenteller empirischer Zugang zum Verständnisvon Informatiksystemen und Algorithmen ermöglicht wird.Keywords:Interaktion und Exploration; Kompetenzen; Explorieren1 EinleitungIm Zuge der Diskussion um eine informatische Bildung für alle hat auch die Frage nachinformatischer Bildung ab der Primarstufe stark zugenommen - und damit nach passendenCurricula. Im Zuge dieser Diskussion wurden zuletzt mit der Expertise der Stiftung Haus derkleinen Forscher (HdkF)[St17] und den GI-Standards [Ge19] für die Primarstufe zwei Emp-fehlungen für Kompetenzen im Bereich früher informatischer Bildung verö entlicht. BeideDokumente basieren auf den bisherigen Inhalts- und Prozessbereichen der GI-Standards.Damit liegt ihnen gemeinsam auch ein Kompetenzbegri  in Orientierung an Weinert[We01] zugrunde, nach dem sich die Performanz von Kompetenzen als konkrete Tätigkei-ten (Prozessdimenion) von Lernenden in einem speziﬁschen Kontext (Inhaltsdimension)1Universität Paderborn, Didaktik der Informatik, Fürstenallee 11, 33102 Paderborn, Deutschlandkathrin.mueller@uni-paderborn.de2Universität Paderborn, Didaktik der Informatik, Fürstenallee 11, 33102 Paderborn, Deutschlandcarsten.schulte@uni-paderborn.de3Universität Paderborn, Didaktik der Informatik, Fürstenallee 11, 33102 Paderborn, Deutschlandjohannes.magenheim@uni-paderborn.decba doi:10.18420/infos2019-14Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1392 Kathrin Müller, Carsten Schulte, Johannes Magenheimbeobachten und ggf. messen lassen. Die Empfehlungen des HdkFs enthalten einen neuenProzessbereich P0 “Interagieren und Explorieren” (I&E) der in den GI Empfehlungen nurindirekt aufgenommen ([Ge19] S. VI,3,7) wird. In diesem Zusammenhang stellen sich eineReihe von Fragen, zu deren kritischer Diskussion und Beantwortung der Artikel beitragenmöchte:•Kann I&E als eigenständiger Prozessbereich einer informatischen Kompetenz ange-sehen werden oder handelt es sich lediglich um eine Vermittlungsmethodik?•Bis zu welchem Grad kann vom I&E eines Informatiksystems auf dessen innere,informatische Struktur und seine handlungsstrukturierende Wirkung auf dessenNutzerInnen geschlossen werden?•Welche pädagogischen Interventionen seitens der Lehrkräfte sind für das zielgerichteteund erkenntnisfördernde I&E von Informatiksystemen durch Schülerinnen und Schülererforderlich?•Kann systematisches I&E im Informatikunterricht auf methodische Erfahrungen desnaturwissenschaftlichen Unterrichts bezüglich der Beobachtung von Naturphänome-nen und der Gestaltung von Experimenten zurückgreifen?•Welchen Bildungswert beinhaltet systematisches I&E von Informatiksystemen imInformatikunterricht und welchen Beitrag zur informatischen Bildung kann damitgeleistet werden?Übergreifendes Ziel dieses Artikels soll es sein, zu erläutern was I&E im Rahmen informa-tischer Bildung für die Primarstufe bedeutet, welche Möglichkeiten dieser Prozessbereichbietet und welche Grenzen mit ihm verbunden sind. Dazu wird zunächst dargestellt, wassich hinter I&E als Kompetenzdimension verbirgt und wie der Prozessbereich mit denInhaltsbereichen kombiniert werden kann. Im weiteren Verlauf wird insbesondere dieMethodik des Explorierens im Bereich der informatischen Bildung theoretisch und anhandvon Beispielen erläutert.2 I&E als Prozessdimension eines KompetenzmodellsUm den Stellenwert der Prozessdimension I&E im Rahmen des Kompetenzmodells derGI-Empfehlungen einzuordnen, ist zunächst festzuhalten, dass sich die GI-Empfehlungennicht auf ein empirisch validiertes Kompetenzstrukturmodell beziehen, das mit Methodender Kompetenzforschung entwickelt wurde. Es handelt sich vielmehr um ein im Diskursmit ExpertenInnen entwickeltes normatives Modell, das einen hohen Grad an Praxisbezugzur Fachwissenschaft und Fachdidaktik Informatik aufweist, einen wesentlichen Beitragzur Allgemeinbildung der SchülerInnen postuliert und mittlerweile im Hinblick auf dieGestaltung einschlägiger Curricula von großer bildungspolitischer Bedeutung ist. In denfolgenden Abschnitten dieses Beitrags wird, analog zur Begründung der Prozess- und140 Kathrin Müller et al.Exploration und Interaktion 3Inhaltsdimensionen des GI-Kompetenzmodells, dargelegt, weshalb I&E als eigenständigeProzessdimension das GI-Modell sinnvoll erweitern kann.2.1 Bezüge zu Fachwissenschaft und Fachdidaktik InformatikIn der Fachwissenschaft Informatik ist das I&E von Informatiksystemen von großer Be-deutung. Zahlreiche Vorgehensmodelle zur Softwareentwicklung weisen entsprechendeArbeitsphasen im Kontext der Anforderungsanalyse und dem Re-engineering von Informa-tiksystemen aus. Sie sind der Phase des Modellierens und Implementierens vorgeschaltet.Die Exploration bereits bestehender und die (Neu-)gestaltung von Informatiksystemen sinddabei wesentliche Phasen eines iterativen, zyklischen Entwicklungsprozesses von Informa-tiksystemen [Sc17]. Die in dieser Phase erforderliche Analyse von Anwendungsfällen (UseCases) basiert zunächst auf dem systematischen Testen und Beobachten von Funktionendes Informatiksystems und der Interaktionen der involvierten Nutzer mit dem System bzw.deren Interaktionen untereinander. Interagieren und Explorieren eines Informatiksystemsbeschränkt sich daher nicht auf seine technischen Funktionen, sondern berücksichtigt auchdessen sozio-technischen Aspekte und trägt damit seinem Charakter als hybrides Inter-aktionssystem Rechnung [SB18]. Für Experten wäre ein weiterer Schritt einer derartigenDekonstruktion des Informatiksystems die Analyse des vorhandenen Sourcecodes sowieder zugehörigen Dokumentation inkl. der evtl. vorhandenen (graﬁschen) Architektur- undModellbeschreibungen.In der Fachdidaktik gehören derartige Explorationsphasen ebenfalls zum fachlichen undmethodischen Repertoire einiger fachdidaktischer Ansätze.Beispiele bzw. Vorläufer des I&E mit Bezug zu den zuvor genannten fachwissenschaftli-chen Aspekten existieren im Bezug auf die Betrachtung komplexer Systeme (Benutzung,Wartung und Erweiterung von Softwaresystemen) [Mo], die Analyse und Modellierungvon Standardsoftware [Mo] und Benutzen-Analysieren-Gestalten [HH15]. EntsprechendeAnsätze aus dem internationalen Raum sind beispielsweise ”Consume before Produce” [In]und PRIMM (Predict-Run-Inverstigate-Modify-Make)[SW17].Je nach Kenntnisstand der Lerngruppe können durch geeignete Aufgabenstellungen undInterventionen der Lehrkräfte von den Lernenden wichtige Kenntnisse und Kompetenzengewonnen werden, die zum Verständnis und der Gestaltung von Informatiksystemen bei-tragen. Dieser Anspruch an den Informatikunterricht schlägt sich auch in entsprechendenempirisch fundierten Kompetenzstruktur- und -entwicklungsmodellen nieder [MSS].Dabei dient das I&E mit Informatiksystemen aus dem Erfahrungsbereich der SchülerInnennicht nur als Anknüpfungspunkt und motivierender Einstieg in einen informatischen Themen-bereich im Unterricht. Es geht beim Erwerb dieser Kompetenzdimension vielmehr darum,Informatiksysteme aus dem Alltag der SchülerInnen als solche zu identiﬁzieren, über ihreFunktion deren inhärente informatische Prinzipien zu erschließen und ihre Wirkungsweiseals hybrides Interaktionssystem mit seinen Auswirkungen auf das soziale Handlungsumfeldder NutzerInnen zu verstehen. Wenn I&E in diesem Sinne im Informatikunterricht realisiertRelevanz eines Prozessbereiches Interaktion und Exploration 1414 Kathrin Müller, Carsten Schulte, Johannes Magenheimwird, leistet er auch einen wichtigen Beitrag zur Allgemeinbildung der SchülerInnen, da siemit dieser Kompetenz befähigt werden, auch zukünftige Informatiksysteme als solche zuidentiﬁzieren und sich wesentliche Fragen zu deren Funktion, ihren in Praxis umgesetzteninformatischen Prinzipien und deren gesellschaftlichen Auswirkungen zu beantworten.2.2 I&E im Kontext der Prozessdimensionen der GI-EmpfehlungenNachdem die fachliche und fachdidaktische Bedeutung der Prozessdimension I&E (P0)diskutiert wurde, soll nun ihr Stellenwert im Zusammenhang mit den anderen Prozessdi-mensionen des GI-Modells erörtert werden. Diese Prozessdimensionen sind: Modellierenund Implementieren (P1), Begründen und Bewerten, (P2) Strukturieren und Vernetzen (P3),Kommunizieren und Kooperieren (P4) sowie Darstellen und Interpretieren (P5). Beim Blickauf diese Aufzählung wird deutlich, dass nur P1 einen genuin informatischen Bezug aufweist,während die anderen Prozessdimensionen eher generisch sind und auch in anderen Fächernals wichtige Kompetenzdimensionen angesehen werden könnten. Hauptsächlich durch ihreKontextualisierung in den verschiedenen informatischen Inhaltsbereichen erhalten sie ihreBedeutung für die Informatik. Daraus ergibt sich zweierlei: Einerseits zeigt sich, dassI&E eine wichtige Ergänzung bei den Prozessdimensionen des GI-Modells mit expliziteminformatischem Bezug darstellt. Andererseits gilt es zu überprüfen, ob die ProzessdimensionP0 auch in den verschiedenen Inhaltsbereichen I1 – I5 zu sinnvollen kontextualisiertenKompetenzanforderungen führt, wie es bei P1-P5 der Fall ist. Dies soll jetzt für die fünfInhaltsbereiche Information und Daten (I1), Algorithmen (I2), Sprachen und Automaten(I3), Informatiksysteme (I4) sowie Informatik, Mensch und Gesellschaft (I5) in knapperForm geschehen.Information und Daten (I1):Thematischer Schwerpunkt dieses Inhaltsbereiches bildetnach den GI-Empfehlungen für die primäre informatische Bildung u.a. die Codierung undDecodierung von Information sowie das Ver- und Entschlüsseln. Im folgenden Beispielkonzentrieren wir uns auf den Aspekt ”Kommunikation und Sicherheit”.Kindern ist das Verschicken von Nachrichten z.B. in Form von Briefen bekannt. Einigehaben sicherlich bereits erste Erfahrungen mit Geheimschriften oder Sprachen im Sinneeiner vertraulichen Kommunikation unter Freunden gemacht. An diesem Punkt kann imUnterricht zunächst angeknüpft werden: Kinder verschicken unterschiedliche Nachrich-ten und überlegen, wie sie sicherstellen können, dass jemand Fremdes diese Nachrichtnicht versteht. Dabei entwickeln sie z.B. selbst altersentsprechende Geheimschriften oderSprachen und analysieren diese oder gegebene auf Sicherheitsmerkmale. Fragestellungist hier beispielsweise: Was ist notwendig, damit sowohl Sender als auch Empfänger dieNachricht verstehen, aber kein Fremder? Im Anschluss kann ein Übergang zu bekanntenVerschlüsselungsverfahren wie z.B. Skytale und Caeser stattﬁnden.Ein weiterer, primär explorativer Aspekt, kann anschließend die Untersuchung von unter-schiedlichen Passwörtern z.B. mit dem Verschlüsselungsverfahren Caesar sein. Fragestellun-142 Kathrin Müller et al.Exploration und Interaktion 5gen während der Exploration sind beispielsweise: Welche Passwörter lassen sich schnellerknacken als andere? Wie unterscheiden sich die unterschiedlichen Passwörter (z.B. in Längeoder Anzahl unterschiedlicher Zeichen etc.)? Somit können, wie bereits zuvor erwähnt, ausder Exploration heraus Aussagen über die Sicherheit von Passwörtern und Anforderungenan geeignete Passwörter gewonnen werden.Folglich unterstützt die Prozessdimension P0 hier unter Anderem die Entwicklung der inden GI-Standards deﬁnierten Kompetenzen: ”nutzen und entwickeln Vereinbarungen, umDaten zu verschlüsseln und zu entschlüsseln”, ”nutzen und entwickeln Vereinbarungen zurÜbermittlung von Nachrichten” sowie ”geben an, dass Vereinbarungen notwendig sind, umDaten zu codieren und zu decodieren” [Ge19].Algorithmen (I2):Dieses Kompetenzfeld weist eine hohe A nität zu dem im Hinblick aufAlgorithmen beschriebenen Kompetenzbereich 5.5 der ”KMK-Kompetenzen in der digitalenWelt” auf [Ku17]. Insbesondere der Kompetenzbereich 5.5.2 ”Algorithmische Strukturenin genutzten digitalen Tools erkennen und formulieren” erö net im Zusammenhang mitI&E einen empirisch-analytischen Zugang zum Verständnis von Algorithmen in alltäglichverwendeten digitalen Werkzeugen und Medien. Dies betri t eine große Bandbreite vonTools und Anwendungssituationen, wie etwa die Berechnung von Ergebnissen in derTabellenkalkulation, die Suchfunktion in Texten, die Preisgestaltung bei der Produkt- undServicesuche im Internet in Abhängigkeit von Tageszeit, verwendetem Gerät und Browser,etc. (zur Methodik vgl. Abschnitt 2.3).Aus dem I&E von Informatiksystemen können über systematische Beobachtungen, z.B. mitentsprechenden Beobachtungsprotokollen, ”Wenn-Dann-Beziehungen” gefolgert werden,welche die Systemreaktionen als Folge von User-Interaktionen mit dem System beinhalten.Gleiches gilt für das beobachtbare ”Verhalten” eines Informatiksystems beim Input vonunterschiedlichen Messwerten über Sensoren (z. B. bei Robotern). Auf diese Weise kannauf interne Verarbeitungsmechanismen des Systems und den ihnen zugrundeliegendenAlgorithmen geschlossen werden. An diesem Punkt existiert eine enge Verzahnung mitdem Inhaltsbereich Informatiksysteme, die sich aus der Tatsache ergibt, dass Algorithmenimmer in einem Informatiksystem implementiert sind. Ferner kann z.B. die empirischeBeobachtung des Laufzeitverhaltens unterschiedlicher Algorithmen in Abhängigkeit vonder Dateneingabe einen Zugang zu Komplexitätsbetrachtungen von Algorithmen erö nen.Die Prozessdimension I&E trägt hier unter anderem zum Aufbau der in den GI-Standardsdeﬁnierten Kompetenezen ”beschreiben Algorithmen alltagssprachlich” und ”vergleichenAlgorithmen unter Verwendung der Fachsprache” [Ge19] bei.Sprachen und Automaten (3):Hier können den SchülerInnen aus ihrem Alltag bekann-te Automaten (z.B. Getränkeautomat, Verkehrsampel) als Explorationsgegenstand einesInformatiksystems dienen. Systematisches Beobachten und eine Variation der Eingabe-möglichkeiten erschließen dann den Zugang zu wesentlichen Aspekten der informatischenKonzepte von Automat und Sprache, wie Ein- und Ausgabealphabet, Systemzustände,Relevanz eines Prozessbereiches Interaktion und Exploration 1436 Kathrin Müller, Carsten Schulte, Johannes Magenheimakzeptierte Eingaben etc.. Durch die Untersuchung der Lebenswelt im Bezug auf Automatenträgt die Exploration somit zur in den GI-Standards deﬁnierten Kompetenz: ”beschreibenAutomaten in ihrer Lebenswelt als selbsttätig arbeitende Maschinen” [Ge19] bei.Informatiksysteme (I4):Das I&E mit/von Informatiksystemen ist, wie zuvor bereitsbeschrieben, ein zentraler Inhaltsbereich dieser Prozessdimension und kann auch in derGrundschule mit unterschiedlichen altersadäquaten Systemen, z.B. Robotern, durchgeführtwerden. Wir zeigen hier am Beispiel des Lernroboters Ozobot4wie das InformatiksystemRoboter exploriert werden kann.Ozobots (Ozobot bit) besitzen lediglich einen Farbsensor, sowie als Aktoren eine Farb-LEDund zwei Motoren zum Antrieb der Räder. Sie folgen schwarzen Linien und reagieren aufvordeﬁnierte Farbcodes. Darüber hinaus sind sie mit einer Blocksprache programmierbar.Aufbau und Funktionsweise können z.B. wie folgt exploriert werden:Ein Unterricht mit Ozobots kann z.B. mit der Exploration der Linienverfolgung starten:Wie verhält sich der Ozobot an Kreuzungen? Nimmt er immer die gleiche Richtung?Ändert sich die Richtung? Gibt es ein Muster? Welche Hypothesen gibt es zur Ursachedieses Verhaltens? Im weiteren Verlauf kann dann exploriert werden, welche Eigenschaftendie Linien haben müssen, auf denen der Roboter fährt. Hier können unterschiedlicheFarben, unterschiedlich breite Linien, unterschiedliche Kurven etc. getestet werden. DieErgebnisse können auf entsprechenden Arbeitsblättern protokolliert werden. Aus diesenProtokollen können die Kinder anschließend Schlussfolgerungen ziehen, wie z.B. welcheFarben der Ozobot ”erkennt” und wie er auf die Farben reagiert. Darauf basierend könnendann Hypothesen über die Architektur des Ozobots aufgestellt werden. Wie kann es dazukommen, dass die LED in der Farbe der Linie leuchtet? Welche Bauteile sind dazu notwendigund welche Prozesse innerhalb des Ozobots? Farbcodes können exploriert werden, indemdas Verhalten des Ozobots bei unterschiedlichen Farbcodes protokolliert wird, oder indemdie Reaktion des Roboters vorgegebenen Reaktionsmöglichkeiten zugeordnet werden. Aufdiese Weise können sich die Kinder zunächst die Funktionsweise erschließen. Anschließendkönnen, z.B. auf Basis der bereits aufgestellten Hypothesen, Überlegungen zur Architekturaufgestellt werden, wie beispielsweise: Der Roboter braucht etwas, mit dem er die Farbenund Linien erkennen kann, er besitzt einen Motor und Räder, eine LED, etc. Über dieseÜberlegungen kann dann ggf. mit Unterstützung der Lehrperson auf die einzelnen Bauteiledes Roboters und das EVA-Prinzip geschlossen werden.Ein Anwendungsbeispiel über die Ozobots hinaus ist die Möglichkeit, im Alltag mittelsprotokollierter Beobachtung nach Informatiksystemen zu suchen. Wo ist mir in meinemAlltag ein Informatiksystem begegnet? Warum ist dies ein Informatiksystem?Die Prozessdimension I&E trägt hier ebenfalls zum Aufbau von in den GI-Standardsdeﬁnierten Kompetenzen bei. Dies sind unter anderem: ”interagieren zielgerichtet mitInformatiksystemen” und ”geben grundlegende, allgemeingültige Beschreibungen derFunktion und Arbeitsweise von Informatiksystemen an (EVA-Prinzip)” [Ge19].4https://ozobot.com/products144 Kathrin Müller et al.Exploration und Interaktion 7Informatik, Mensch und Gesellschaft (I5):Die Prozessdimension I&E betrachtet Infor-matiksysteme nicht nur als technische Artefakte, sondern als sozio-technische Systememit einer hybriden Interaktionsstruktur. Insofern werden die mit dem Informatiksystemverbundenen Interaktionen stets auch im sozialen Kontext seiner Nutzung gesehen. So kannmit der Prozessdimension I&E beispielsweise das Nutzungsverhalten unterschiedlicherUser bei einer gegebenen Benutzungsoberﬂäche beobachtet und diese Beobachtungen imHinblick auf softwareergonomische Fragestellungen bewertet werden. Daraus lassen sichdann wiederum Anforderung an die Re-konstruktion der Benutzungsoberﬂäche im Rahmeneiner Systemgestaltung ableiten.2.3 Methodik der Prozessdimension I&ENachdem die Kontextualisierung der Prozessdimension I&E in den verschiedenen Inhaltsbe-reichen aufgezeigt wurde und sich daraus relevante informatische Kompetenzanforderungenergeben, muss nun geklärt werden, wie zugehörige Lernprozesse zu einem für SchülerInnenmotivierenden und erfolgreichen Kompetenzerwerb organisiert werden können.Im Vordergrund steht das eigenständige explorative Handeln der SchülerInnen im Sinneder Prozessdimension I&E, das für sie zu informatischem Kenntnisgewinn führen kann(vgl.[Be16]).Dabei sollte im konstruktivistischen Sinn einerseits die natürliche Freude der Kinder amforschenden, selbst-entdeckenden Lernen gefördert und andererseits Hilfestellung durchdie Lehrkraft bei der systematischen Gestaltung und Auswertung der Beobachtungen beimUmgang mit Informatiksystems gegeben werden. Dies stellt die Lehrkraft vor anspruchsvolleModerationsaufgaben bei der kognitiven Aktivierung der SchülerInnen. In der Grundschuleund im Primarbereich können dabei ko-konstruktive Methoden, wie z.B. das ”sustainedshared thinking” [Ho12] zum Einsatz kommen, bei denen die SchülerInnen durch o eneFragen und Lernimpulse der Lehrkraft weitgehend autonom Aussagen und Vermutungenzu ihren Explorationserfahrungen äußern können. In einem weiteren Schritt können dieBeobachtungen dann systematisch und formalisiert erfasst, analysiert und auf der Basisdieses Datenmaterials Hypothesen zum Zusammenhang von beobachtetem Systemverhaltenund der inneren Struktur bzw. den inneren Zuständen des Informatiksystems formuliertwerden. Daran könnte sich eine Phase zur (graﬁschen) Beschreibung von Systemzuständen,Datenstrukturen bzw. Ein- und Ausgabewörtern sowie ggf. von Algorithmen des erkundetenInformatiksystems anschließen. Je nach Intention und Zielsetzung kann dann ein Übergangzur (Neu-)gestaltung des Informatiksystems mit Modellierungs- und Implementierungsphaseerfolgen.Falls Lernprozesse zum Kompetenzerwerb in Bezug auf I&E in den verschiedenen Inhalts-bereichen nach diesen Prinzipien organisiert werden wird deutlich, dass die Methodik:•über ein anfängliches unverbindliches Herumspielen und Ausprobieren nach dem ”trialand error”- Prinzip hinausgeht und sinnerschließende Fragen und eine auswertbareBeobachtungsmethodik beinhalten sollte,Relevanz eines Prozessbereiches Interaktion und Exploration 1458 Kathrin Müller, Carsten Schulte, Johannes Magenheim•gezielte, erkenntnisfördernde Interventionen der Lehrkraft, abhängig vom Kenntnis-stand der Lernenden, den Lernprozess unterstützen können, ohne das entdeckendeLernen der SchülerInnen zu behindern,•systematische empirische Beobachtungen von auszuwählenden relevanten Parameternbeinhaltet, die im Hinblick auf Fragestellungen zum Informatiksystem ausgewertetwerden können und zu einem Erkenntnisgewinn über dieses System beitragen.•die Beobachtungen und Erkenntnisse so angelegt werden, dass von der von au-ßen sichtbaren Funktionsebene (Nutzerperspektive) ausgehend anhand geeigneterMerkmale/Ereignisse/Beobachtungen auf die innere Bauweise (Architektur- undKonstruktionsperspektive) geschlossen werden kann, bzw. zumindest begründeteVermutungen über diese Bauweise angestellt werden können.Besonders der vorletzte methodische Aspekt verdeutlicht, dass hier im Informatikunterrichtauch Methoden eingesetzt werden können, die man aus dem naturwissenschaftlichenUnterricht beim Durchführen und Auswerten von Experimenten kennt. Das für das I&Eausgewählte Informatiksystem dient dabei nicht lediglich als Einstiegsbeispiel, sondern istzentraler Unterrichtsgegenstand zum Kompetenzerwerb.Eine di erenzierte Darstellung, wie im Kontext der Prozessdimension P0 das Explorierenund Gestalten von Informatiksystemen als iterativer, wechselseitig verwobener Prozesserfolgen kann, ist in [Sc17] zum Explorations- und Gestaltungskreis in der informatischenBildung sowie zum Informatikkreis als naturwissenschaftlich-technischer Lernmethodebeschrieben [Fr19]. Beiden Konzepten liegt die Au assung zugrunde, dass das Exploriereneines existierenden Informatiksystems, ganz im Sinne des informatischen Re-engineerings,nicht nur zum Systemverständnis beiträgt, sondern auch zu dessen Weiterentwicklungoder zur Neugestaltung eines Informatiksystems führen kann, das auf ähnlichen Prinzipienaufgebaut ist, wie das zuvor explorierte.3 FazitDie Prozessdimension I&E verknüpft das Nutzen eines digitalen Artefakts (Interaktion) mitder fachlich orientierten Analyse und Erkundung der Architektur (dazu können zählen dieinnere Bauweise, Wirkprinzipien, Funktionsweisen, verwendete informatische Konzeptewie Datenstrukturen und Algorithmen, usw.). Die genaue Bezeichnung von Exploration,sowie Ziele und methodische Hinweise sind zusammengefasst in Abb.1dargestellt. Durchdie im Papier beschriebenen fachwissenschaftlichen und fachdidaktischen Bezüge wirddie Rolle von I&E in informatischen Kontexten verdeutlicht. Diese Rolle wurde anhandvon Beispielen und Kompetenzen, auch im Kontext der GI-Standards, insbesondere derPrimarstufe, weiter konkretisiert.Zusammenfassend zeigt sich, dass I&E als Prozessbereich nicht nur auf die Methodikbeschränkt ist. In gewisser Weise stellt er das ergänzende Gegenstück zum Prozessbereich146 Kathrin Müller et al.Exploration und Interaktion 9Modellieren und Implementieren dar. Dieser lässt sich ebenfalls nicht auf die Methodikbeschränken. Für das Programmieren braucht man wie für das I&E nicht nur Prozess-wissen, sondern auch Inhaltswissen; ebenso sind beide auf speziﬁsche unterrichtlicheVorgehensweisen bezogen, die methodisch unterschiedlich ausgestaltet werden könnenund müssen. Der Prozessbereich I&E kann als vorgeschaltete Erkundungsphase für das’Re-enginnering’ eines bestehenden Informatiksystems angesehen werden oder lediglichdem Wissenserwerb der Lernenden dienen, um ggf. in einem späteren Transferprozess dasWissen zur (Neu-)gestaltung eines Informatiksystems anzuwenden. In dieser Sichtweiseist der Prozessbereich Modellieren und Implementieren alleine nicht ausreichend für eineinsgesamt gelingende informatische Bildung. Denn die konstruierende Perspektive desModellierens und Implementierens kann und sollte durch die analytische und reﬂektierendeSichtweise der Exploration ergänzt werden. In diesem Sinne gehören auch der Explorations-und Gestaltungskreis zusammen[Sc17].Exploration bezeichnet:1. ein Verfahren, um Erkenntnisse zu erlangen (methodische bzw. Prozesskomponente)  2. einen generellen Zugang zu Technologie im Alltag (Bildungspolitik- bzw.  Kompetenzkomponente: Explorationsfähigkeit als Kompetenz, sich aus einer Nutzungsperspektive die innere Bauweise zu erarbeiten und aus diesen Erkenntnisse Rückschlüsse und Bewertungen der Technologie im Kontext ableiten können)  3. einen unterrichtlichen Zugang zu Technologie (Lernen aus Beispielen, nicht nur konstruierend, auch analysierend und reﬂektierend vorgehen)Zielaspekte:1. Erkennen, dass es unterschiedliche Betrachtungsweisen gibt: Benutzersicht, Konstruktionssicht…  2. Zwischen den Betrachtungsweisen wechseln können  3. Notwendigkeit des Zusammenhangs der beiden Sichtweisen erkennen können (Duale Natur)  4. Duale Natur als fachliche Basis für Diskussion der Relevanz nutzen können- gesellschaftliche und technische Perspektive verknüpfen können.Methodische Hinweise:1. Explorieren von außen nach innen.  2. Analytischer, empirischer, reﬂektierender, interpretierender Zugang (im Gegensatz zum konstruktiven Zugang).  3. Sollte wissens- und kompetenzbasiert sein.  4. Sollte  hypothesengeleitet sein.Abb. 1: Was ist Exploration?Literaturverzeichnis[Be16]Benton, Laura; Hoyles, Celia; Kalas, Ivan; Nos, Richard: Building mathematical know-ledge with programming: insights from the ScratchMaths project. In: Proceedings of theConstructionism 2016. S. 25–32, 2016.[Fr19]Franke-Wiekhorst, Antonia; Günther, Christine; Brünger, Karen; Magenheim, Johannes;Romeike, Ralf: „Der Informatikkreis“: Kinder von drei bis zehn Jahren beim Forschen inInformatik begleiten – ein methodisch-didaktisches Material. GdSU-Journal, (9):10–21,2019.[Ge19]Gesellschaft für Informatik (Hrsg.): Kompetenzen für informatische Bildung im Primar-bereich.Empfehlungen der Gesellschaft für Informatik e.V. erarbeitet vom Arbeitskreis”Bildungsstandards Informatik im Primarbereich” unter Koordinierung von Ludger Humbert.Beilage zu LOG IN, 39. Jahrgang (2019), Heft, 2019.Relevanz eines Prozessbereiches Interaktion und Exploration 14710 Kathrin Müller, Carsten Schulte, Johannes Magenheim[HH15]Hellmig, Lutz; Hempel, Tino: Benutzen – Analysieren – Gestalten – Verankern als di-daktische Schrittfolge im Informatikunterricht. In (Gallenbacher, Jens, Hrsg.): Informatikallgemeinbildend begreifen. Gesellschaft für Informatik e.V., Bonn, S. 145–154, 2015.[Ho12]Hopf, Michaela: Sustained Shared Thinking im frühen naturwissenschaftlich-technischenLernen. Waxmann, 2012.[In]: Instructional Design of a Programming Course: A Learning Theoretic Approach.[Ku17]Kultusministerkonferenz, Hrsg. Strategie der Kultusministerkonferenz„Bildung in derdigitalen Welt“ - Beschluss der Kultusministerkonferenz vom 08.12.2016 in der Fassung vom07.12.2017. KMK, 2017.[Mo]Modellierung von Standardsoftware aus didaktischer Sicht.[MSS]Magenheim, Johannes; Schubert, Sigrid; Schaper, Niclas: Entwicklung von qualitativen undquantitativen Messverfahren zu Lehr-Lern-Prozessen für Modellierung und Systemverständnisin der Informatik (MoKoM). In (Bayrhuber, Horst; Harms, Ute; Muszynski, Bernhard; Ralle,Bernd; Rothgangel, Martin; Schön, Lutz-Helmut; Vollmer, Helmut J.; Weigand, Hans-Georg,Hrsg.): Formate fachdidaktischer Forschung, S. 109–128. Waxmann.[SB18]Schulte, Carsten; Budde, Lea: A Framework for Computing Education: Hybrid InteractionSystem: The Need for a Bigger Picture in Computing Education. In: Proceedings of the 18thKoli Calling International Conference on Computing Education Research. Koli Calling ’18,2018.[Sc17]Schulte, C.; Magenheim, J.; Müller, K.; Budde, L.: The design and exploration cycle asresearch and development framework in computing education. In: 2017 IEEE GlobalEngineering Education Conference (EDUCON). S. 867–876, 2017.[St17]Stiftung Haus der kleinen Forscher; Bergner, N.; Budrich, Barbara; Köster, H.; Magenheim,J.; Müller, K.; Romeike, R.; Schroeder, U.; Schulte, C.; Hubwieser, P.: Frühe informatischeBildung - Ziele und Gelingensbedingungen für den Elementar- und Primarbereich. Wis-senschaftliche Untersuchungen zur Arbeit der Stiftung "Haus der kleinen Forscher". VerlagBarbara Budrich, 2017.[SW17]Sentance, Sue; Waite, Jane: PRIMM: Exploring pedagogical approaches for teaching text-based programming in school. In: Proceedings of the 12th Workshop on Primary andSecondary Computing Education. ACM, S. 113–114, 2017.[We01]Weinert, Franz: Concept of Competence: A conceptual clariﬁcation. In (Rychen, D. S.;Salganik, L., Hrsg.): Deﬁning and Selecting Key Competencies, S. 45–65. Huber, 2001.148 Kathrin Müller et al.<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr>   Entwicklung ökologischen Denkens im Informatikunterricht  Ilona Petrenko1, Marco Thomas2 Abstract: Die hohe Relevanz von Ökologie und Informatiksystemen (IS) für unsere heutige Welt ist vermutlich unstrittig. In ökologischer Hinsicht beeinflusst der Zustand der Welt die Möglichkeiten der Menschheit, auf der Erde zu überleben. IS gehören zunehmend zum Werkzeug der Menschheit und haben sich in allen Bereichen des Lebens verbreitet. Weniger offensichtlich sind die Zusammenhänge zwischen Ökologie und IS, sowohl im positiven als auch im negativen Sinne. Um den rationalen Umgang mit beiden zu realisieren, kann man ökologisches Denken im Zusammenhang mit IS entwickeln. Die Grundidee des Projektes ÖKI ist es, ökologisches Denken der Schülerinnen und Schüler im Rahmen des Faches Informatik zu vertiefen. Dieser Beitrag dient zur Vorstellung von ersten Studien und Modulen zur unterrichtlichen Vermittlung ökologischer Aspekte im Kontext von Informatiksystemen.  Keywords: Informatik, Unterricht, Schule, Ökologie, Bildung, Informatiksystem, Umwelt 1 Einleitung Die Idee des Projektes „Ökologie als Kontext im Informatikunterricht“ (ÖKI) entstand im Rahmen eines Praktikums unter Förderung der Deutschen Bundesstiftung Umwelt3 im Jahr 2017. Der Projekttitel mag ungewöhnlich klingen, aber sowohl Informatik mit den sich ergebenden digitalen Artefakten als auch Ökologie sind zwei zentrale Schlüsselthemen in unserer Welt geworden. Obwohl es nicht immer sichtbar wird, sind die Informatik und ihre Systeme in viele ökologische Zusammenhänge eingebunden und von großer Bedeutung – so beschränkt sich der Begriff »Ökologie« in seiner ursprünglichen Bedeutung nicht nur auf den schonenden Umgang mit natürlichen Ressourcen, sondern befasst sich allgemein mit den Wechselwirkungen von Organismen und ihrer unbelebten Umwelt. Das Denken in diesen Zusammenhängen kann als »ökologisches Denken« bezeichnet werden. Als eine negative Folge der Einwirkung von Informatiksystemen (IS) auf die Umwelt kann man den hohen Energieverbrauch nennen oder auch die nicht einfache Wiederverwertung von wertvollen Materialien in der Elektronik. Es gibt aber auch positive Auswirkungen, wie eine mögliche Reduzierung des Papierverbrauchs in der Zukunft mit Hilfe des                                                         1 Westfälische Wilhelms-Universität Münster, Didaktik der Informatik, Corrensstraße 80, 48149 Münster, ilona.petrenko@uni-muenster.de 2 Anschrift s.o., Marco.Thomas@uni-muenster.de 3 https://www.dbu.decba doi:10.18420/infos2019-15Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 149 Ilona Petrenko und Marco Thomas  elektronischen Dokumentenverkehrs4, Videotelefonate zur Reduzierung von Reisen oder eine ökologisch nachhaltigere Landwirtschaft. Aus diesen wenigen Überlegungen kann eine mögliche allgemeinbildende Relevanz hinsichtlich einer Auseinandersetzung mit Informatiksystemen in ökologischen Kontexten abgeleitet werden, um ökologisches Denken zu fördern. Ökologisches Denken basiert auf dem vernetzten Denken und erfordert eine kontinuierliche Auseinandersetzung mit den Auswirkungen auf die Umwelt, die eine bestimmte Tätigkeit oder Entscheidung auslösen kann (vgl. [Wi19]). Die Entwicklung ökologischen, vernetzten Denkens ist ein wichtiges, fächerverbindendes Ziel, um mit unserer Umwelt in Einklang zu gelangen.  Ist es möglich und sinnvoll, ökologisches Denken gerade im Informatikunterricht zu entwickeln? Diese Frage führt zu ersten Forschungsfragen: 1. Welche Projekte und Literatur existieren zum Spannungsfeld Ökologie-Medien-Informatik, die Impulse für einen ökologischen Informatikunterricht geben? 2. Welche ökologischen Probleme bzw. Fragen können in den Informatikunterricht integriert werden? 3. Wie muss ein ökologischer Informatikunterricht konzipiert sein bzw. welche fachdidaktischen Ansätze sind geeignet? 4. Welche Informatiksysteme gibt es, die untersucht werden könnten? 5. Was umfasst ökologisches Denken und warum sollte es in den Informatikunterricht integriert werden? Die Methodik ist in dem Projekt ÖKI noch nicht endgültig festgelegt, aber neben einer Literaturrecherche und dem Erfassen von Expertenmeinungen (s. u.) haben wir mit der Entwicklung von Modulen begonnen, die mittels Design-based-research [DRC03] evaluiert und optimiert werden sollen. Auch eine Anbindung an das Projekt „Informatik im Kontext“5 (IniK) erscheint uns geeignet und wurde mit Studierenden in einem Seminar diskutiert und bearbeitet. 2 Konzeptentwicklung 2.1 Zusammenhang Ökologie und Informatik Die Auseinandersetzung mit und die Simulation von dynamischen Systemen – insbesondere in ökologischen und ökonomischen Zusammenhängen – wurde bereits vor 25 Jahren für den Informatikunterricht diskutiert ([Th93] u. a.) und ist auch heute noch in                                                         4 Allerdings steigt derzeit der Papierverbrauch eher, insbesondere aufgrund des zunehmenden Paketversands. Immerhin haben ca. 30% der Unternehmen ihre Kommunikation weitestgehend digitalisiert. S. https://www.verbraucherservice-bayern.de/themen/umwelt/papierverbrauch-steigt-trotz-digitalisierung (15.02.2019). 5 Informatik im Kontext. http://www.informatik-im-kontext.de (15.02.2019) 150 Ilona Petrenko, Marco Thomas Entwicklung ökologischen Denkens im Informatikunterricht  einigen Curricula verankert6. Die Idee, eine »Dimension Ökologie« in den Informatikunterricht zu integrieren, wurde von J. Koubek im Zusammenhang mit der Integration von Informatik und Gesellschaft für das Projekt „Informatik im Kontext“ (IniK) eingebracht. Koubek hat auch Kriterien für die Auswahl von geeigneten Kontexten beschrieben [In19]: • Mehrdimensionalität: rechtliche, ökonomische, ökologische, ethische, informatische Fragestellungen sind u.a. möglich.  • Breite: Der Kontext ist gesellschaftlich relevant. • Tiefe: Der Kontext ist informatisch relevant.  • Lebenswelt: Bezug zur Lebenswelt der Schülerinnen und Schüler.  • Stabilität: Der Kontext ist über einen längeren Zeitraum relevant.  Auf den Folien zum Vorlesungs-Podcast „Dimensionen der Informatik - Ökologie“ nennt Koubek auch ethische Aspekte, wo er unter anderem das Prinzip der Nachhaltigkeit definiert: „Nachhaltigkeit bedeutet, dass die gegenwärtige Generation ihre Bedürfnisse befriedigt, ohne die Fähigkeit der zukünftigen Generation zu gefährden, ihre eigenen Bedürfnisse befriedigen zu können“ [KK08]. Ein nachhaltiges Handeln ist sicherlich eine Grundlage ökologischen Denkens und gehört zur Allgemeinbildung. 2.2 Existierende Projekte In einem ersten Schritt auf der Suche nach passenden Themen haben wir verschiedene Quellen analysiert, um existierende Erfahrungen in dem Zusammenhang Schule-Informatik-Ökologie zu analysieren und aufzuarbeiten (vgl. 1. Forschungsfrage). Es ergab sich ein Modell, in das Projekte oder Themen in die Bereiche Informatik, Mediennutzung und Ökologie und ihre Schnittmengen eingeordnet werden können (Abb.1). Die senseBox ist beispielsweise ein erfolgreiches Projekt der Geoinformatiker in Münster zum Messen von Umweltphänomenen und wird mittlerweile kommerziell vertrieben [Se19]. Allerdings liegen bisher kaum Erfahrungen zum Einsatz im Informatikunterricht7 vor, eher zum Einsatz im Fach Geographie. Das länderübergreifende MINT-Bildungsprogramm Experimento [Ex19] scheint vor allem für Kinder im Grundschulalter geeignet zu sein. Unsere Suche und Auswertung hierzu ist nicht abgeschlossen und offen für Neues.                                                         6 Unterrichtsbeispiel zu dynamischen Systemen für den Hamburger Schulinformatik Lehrplan in der Oberstufe: https://haukemorisse.de/blog/?p=2300 und https://bildungsserver.hamburg.de/simulation/ (17.02.2019) 7 Ein Vorteil der senseBox liegt in dem abgestimmten und vorbereiteten Informatiksystem. Denkbar sind sicherlich auch der Einsatz von alternativen Informatiksystemen, die selbst zusammengebaut werden.  Entwicklung ökologischen Denkens im Informatikunterricht 151 Ilona Petrenko und Marco Thomas   Abb. 1: Modell zur Gruppierung der Themen im Projekt ÖKI 2.3 Überlegungen für ein Konzept Für die Konzeptentwicklung ist es erforderlich, praktische Aufgaben für den Schulunterricht zu entwickeln, die an einer Schule evaluiert bzw. für den Schulunterricht diskutiert werden können. Es ist zu überlegen, welche ökologischen Probleme in den Informatikunterricht integriert werden können (Forschungsfrage 2) und welche fachdidaktischen Ansätze geeignet sind (Forschungsfrage 3). Zunächst wurde ein Modul skizziert, das die grundlegenden Ideen für den Informatikunterricht mit ökologischen Aspekten gesammelt hat [Pe18]. Das Modul „Umweltfreundlicher Umgang mit IT im Alltagsleben“ basiert auf der Idee eines rationalen Umgangs mit IT aus Sicht der Ökologie. Als Beispiele werden Probleme in Bezug auf das Recycling von IT, ihr Energieverbrauch sowie ihr allgemeiner Einfluss auf die Umwelt angeboten. Dabei wurde geplant, den Unterricht mit realen Beispielen aus dem Alltag zu unterstützen. Als Ziel sollten die Lernenden am Ende des Moduls einen umweltbewussteren Umgang mit IT-Mitteln verinnerlichen und die angeeigneten Kenntnisse im Alltag anwenden können. Konkrete Aufgabenbeispiele dienen der 152 Ilona Petrenko, Marco Thomas Entwicklung ökologischen Denkens im Informatikunterricht  Berechnung des Energieverbrauchs einer IT-Workstation pro Tag. Zudem sollte eine App Thema „Mülltrennung“ (Abb. 2) entworfen werden. Teilnehmer eines Workshops im Jahr 2018 hielten dieses für die Schüler der Sekundarstufe I für wenig motivierend.    Abb. 2: Prototyp einer Mülltrennungs-App 3 Befragung von Lehrenden Im Schuljahr 2017/18 wurde im Rahmen einer Umfrage unter Lehrenden ein Meinungsbild eingeholt. An der Umfrage haben 65 Lehrende aus NRW teilgenommen.   3.1 Methodik und Durchführung Der Fragebogen wurde in EvaSys8 generiert und bestand aus 4 quantitativen und 3 qualitativen Fragen (Abb.3). Das Ziel der Umfrage für die weitere Konzept- und Modulentwicklung war, die Expertenmeinungen für die Beantwortung der zweiten Forschungsfrage einzuholen: welche ökologischen Probleme in den Informatikunterricht integriert werden können. Einladungen für die Teilnahme an der Umfrage wurden per Fax an Schulen der Sekundarstufe in NRW geschickt.                                                           8 Eine in Münster verfügbare Evaluationssoftware für automatisierte Befragungen Entwicklung ökologischen Denkens im Informatikunterricht 153 Ilona Petrenko und Marco Thomas   Abb. 3: Aufbau der Fragen zum Projekt ÖKI in dem Fragebogen  3.2 Auswertung und Interpretation Quantitativ auszuwertende Daten wurden in EvaSys gesammelt und von uns mittels der Statistiksoftware SPSS ausgewertet. Qualitative Daten wurden von uns ohne Software ausgewertet, weil nicht viele Teilnehmer solche Fragen beantwortet haben.  Viele Teilnehmer haben die Idee des Projektes eher skeptisch gesehen: rund ein Drittel von den Befragten fand es nicht sehr sinnvoll, ökologische Aspekte in den Informatikunterricht zu integrieren, ein Drittel fand die Idee gut und ein Drittel hatte eine neutrale Haltung. Die Lehrenden wurden auch gefragt, welche ökologischen Themen im Rahmen des Informatikunterrichtes behandelt werden sollten und wie ökologische Aspekte methodisch in den Informatikunterricht integriert werden könnten. Aus den angegebenen Themen wurden die folgenden häufiger ausgewählt (Mehrfachauswahl): 154 Ilona Petrenko, Marco Thomas Entwicklung ökologischen Denkens im Informatikunterricht  • Optimierte Ressourcennutzung bei der Konstruktion und Verschrottung von digitalen Endgeräten wie Computer, Handy etc. (59%) • Reduzierung des Energieverbrauchs bei der Verwendung von Computern, Handys etc. (52%) • Regelung und Steuerung von Heizungssystemen (43%) In einem Freitextfeld haben die Lehrpersonen die angegebene Liste um die folgenden Themen ergänzt (jeweils eine Nennung): • Papierflut durch Ausdrucken. • Rechnerarchitektur in Bezug auf Energieverbrauch. • Softwareoptimierung, um Endgeräte länger nutzen zu können (2 Nennungen). • Fahrzeugsteuerung zur Verbrauchsreduktion • Simulationen zur Folgenabschätzung menschlichen Handels • Ressourcenhunger von Bitcoingenerierung und -transferierung • Keine konkreten Themenfelder oder Inhalte vorgeben, sondern stattdessen jeweils Saison oder tagesaktuelle Themen ad hoc integrieren. Alle drei Vorschläge zur Unterrichtsmethodik (s. Abb. 3) wurden von den Befragten angewählt: • Modellierung und Simulation von Umweltprozessen z.B. für Prognosen (55%) • Programmierung von sensorgestützten Systemen zur Erfassung von Umweltdaten. (55%) • Ausstellung zu in digitalen Endgeräten verwendeten Materialien und deren Gewinnung. (37%) Die Auswahl „Andere“ wurden nur von knapp 8% der Befragten angekreuzt, was dahingehend interpretiert werden könnte, dass nur wenige Lehrende eine Vorstellung zu dem Thema entwickelt haben. Diese Annahme wird gestützt durch die Aussage, dass 97% kein ähnliches Projekt kennen und nur 11% sich auch andere ökologische Themen als die vier von uns vorgeschlagenen für eine Behandlung im Informatikunterricht vorstellen können (vgl. [Pe18]). 4 Modulentwicklung Aktuell arbeiten wir im Projekt ÖKI an drei Modulen. Die ersten Rückmeldungen von Experten wurden Ende März 2019 im Rahmen des Informatiktages NRW9 gesammelt. Dort wurden die Module zum ersten Mal präsentiert und beim Workshop durchgearbeitet.                                                         9 https://informatiktag-nrw.de/informatiktag/informatiktag2019 (15.02.2019) Entwicklung ökologischen Denkens im Informatikunterricht 155 Ilona Petrenko und Marco Thomas  Im folgenden Abschnitt skizzieren wir den Stand der Überlegungen zu den Modulen, wie sie im Workshop präsentiert wurden. Jedes Modul enthält eine Problembeschreibung zu dem Kontext „Informatik und Ökologie“ und Vorschläge für praktische Aufgaben. Die Empfehlungen zu Bildungsstandards für das Fach Informatik ([GI08], [GI16]) und die IniK-Kriterien werden berücksichtigt.  4.1 Modul: Nachhaltige Nutzung von Smartphones Die Lernenden bekommen in immer früherem Alter ein Smartphone. Die Eltern bringen ihnen die Nutzung allerdings höchstens oberflächlich bei. Hintergrundwissen zu umweltrelevanten Informationen wird dabei i. d. R. nicht vermittelt. Dies kann im Informatikunterricht als Themengebiet für den Aufbau ökologischer und informatischer Kompetenzen behandelt werden.  In diesem Modul müssen sich die Lernenden zuerst mit theoretischen Aspekten der nachhaltigen Nutzung von Smartphones auseinandersetzen und danach ein Quiz entwickeln, das Fragen zum Thema enthält. Die notwendigen theoretischen Kenntnisse für das Quiz werden im ersten, theoretischen Teil erworben. Denkbar ist auch eine App-Entwicklung o. ä., wenn die Lernenden zuvor entsprechende Fertigkeiten erworben haben (z. B. mit dem „MIT App Inventor“10), so dass Softwareentwicklung und Ökologie im Informatikunterricht miteinander verbunden werden. Die App könnte dann entsprechende Kenntnisse zur Nachhaltigkeit bei Handynutzung als Auskunft und das Quiz als Spiel (oder Umfrage) enthalten. Im Rahmen der Unterrichtseinheit werden u. a. die folgenden Fragen gestellt: Welche Gefahrstoffe sind in einem Handy versteckt? Wie viel Strom verbraucht ein Handy? Wie kann ich Energie bei der Handynutzung sparen? Was ist ein Fairphone? 4.2 Modul: Smart Farming Die modernen Informations- und Kommunikationstechnologien werden immer häufiger in der Landwirtschaft zum Steuern, Regeln und Messen von Abläufen [Ba18] eingesetzt, auch verbunden mit ökologischen Zielen. Hierfür steht der Begriff Smart Farming oder Landwirtschaft 4.0. Die Lernenden können die (ökologischen) Auswirkungen der Automatisierung an diesem Beispiel in der Arbeitswelt kennenlernen und bewerten.  In einem Seminar zur Didaktik der Informatik haben wir im Wintersemester 2018/19 einen ersten Entwurf für das Modul erstellt und eine Integration in das Projekt IniK angedacht. Als Einstieg bekommen die Lernenden einen Überblick zum Thema und überlegen sich, was in der Landwirtschaft digitalisiert werden könnte. Es folgen drei weitestgehend                                                         10 www.appinventor.mit.edu/explore  156 Ilona Petrenko, Marco Thomas Entwicklung ökologischen Denkens im Informatikunterricht  unabhängig einsetzbare Bausteine: Stall, Feld, Kommunikation. Ökologische Aspekte können sich beispielsweise auf die optimale Versorgung des Viehs unter Nutzung einer Vieh-Datenbank und eine ökologisch-ökonomische Düngung von Feldern beziehen. Im Rahmen der Unterrichtseinheit werden unter anderem folgende Fragen thematisiert: Wie kann man die Landwirtschaft sinnvoll digitalisieren bzw. was ist bereits digitalisierbar? Welche positiven und negativen Auswirkungen sind bei dem Einsatz von Informatiksystemen in der Landwirtschaft zu bedenken? 4.3 Modul: Reduktion des Energieverbrauchs mit Informatiksystemen Vielen Menschen fehlt das Bewusstsein, dass die tägliche Nutzung von Elektrogeräten einen hohen und ökologisch schädlichen Energieverbrauch verursacht. Im Informatikunterricht kann darauf aufmerksam gemacht werden, wie man allgemein Elektrogeräte stromsparend nutzt (ggf. fächerverbindend mit dem Physikunterricht). Im Rahmen dieses Moduls wird eine Simulation entwickelt, in der ein Smart-Homesystem die Heizung ausschalten bzw. niedriger stellen kann, wenn die Temperatur im Raum hoch genug ist bzw. wenn niemand daheim ist. Zudem soll das System die Beleuchtung ausschalten können. Das Hauptziel des Unterrichts ist, dass die Lernenden ein solches System modellieren und programmieren – auch im Sinne eines physical computings, indem man beispielsweise verschiedene Sensoren programmiert, die auf das Licht bzw. auf die Bewegung reagieren. Messen oder Simulieren des Strom- bzw. Gasverbrauchs können eine ökologische Dimension integrieren uvm. Im Rahmen der Unterrichtseinheit werden unter anderem die folgenden Fragen gestellt: Welche Informatiksysteme können für das Energiesparen verwendet werden? Welche „grüneren“11 Methoden zur Stromerzeugung kann es geben und wie können solche Methoden z. B. in den Smarthome-Systemen eingesetzt werden? 5 Fazit und Ausblick Obwohl bei der ersten Umfrage ein Drittel der befragten Lehrer die Idee einer Integration von ökologischen Aspekten eher ablehnend bewertet haben, sehen wir ein Potenzial zur Bereicherung des Informatikunterrichts. Auch hat ein Workshop im Rahmen des NRW Informatiktags 2019 gezeigt, dass die Lehrpersonen unser Projekt interessant und sinnvoll finden: alle 14 Teilnehmer haben positive Rückmeldungen gegeben und 3 davon sind bereit, die fertigen Module in ihrem Unterricht auszuprobieren und sie danach zu evaluieren.   Ein weiterer Schritt ist nun, die Module weiter zu entwickeln und besonders die dritte und die vierte Forschungsfrage anzugehen, indem wir uns unter Berücksichtigung der GI-                                                        11 Mit „grüneren“ Methoden werden alternative, umweltfreundlichere Methoden zur Energieerzeugung bezeichnet (z.B. Solarenergie): http://www.ess.co.at/URBANECOLOGY/Banzer_Froehlich.pdf (17.02.2019) Entwicklung ökologischen Denkens im Informatikunterricht 157 Ilona Petrenko und Marco Thomas  Empfehlungen zu Bildungsstandards überlegen werden, welche fachdidaktischen Ansätze für die Entwicklung eines Informatikunterrichtes mit diesen Modulen am besten geeignet sind. Parallel muss nach Informatiksystemen recherchiert werden, die als Gegenstände und Inhalte geeignet sind (4. Forschungsfrage). Die letzte Forschungsfrage – was umfasst ökologisches Denken und warum sollte es in den Informatikunterricht integriert werden – wird das Projekt dauerhaft begleiten und führt immer wieder zu neuen Überlegungen, indem wir neue Literaturquellen durcharbeiten, die Module überarbeiten und auf Fachtagungen und Konferenzen diskutieren.  Literaturverzeichnis [Ba18]  Bayer, M.: Was Sie über Landwirtschaft 4.0 wissen müssen. Computerwoche.de, veröffentlicht am 07.08.2018, https://www.computerwoche.de/a/was-sie-ueber-landwirtschaft-4-0-wissen-muessen,3544215, Stand: 11.02.2019 [DRC03] The Design-Based Research Collective: Design-Based Research: An Emerging Paradigm for Educational Inquiry, Educational Researcher Vol.32 No.1, S.5-8, 2003 [Ex19]  Experimento - Naturwissenschaft und Technik lebensnah vermitteln, https://www.siemens-stiftung.org/de/projekte/experimento, Stand: 11.02.2019 [GI08]  Grundsätze und Standards für die Informatik in der Schule - Bildungsstandards Informatik für die Sekundarstufe I: GI, Gesellschaft für Informatik e.V., Beilage zu LOG IN, 28. Jg. (2008), Heft Nr. 150/151 [GI16]  Grundsätze und Standards für die Informatik in der Schule - Bildungsstandards Informatik für die Sekundarstufe II: GI, Gesellschaft für Informatik e.V., Beilage zu LOG IN, 36. Jg. (2008), Heft Nr. 183/184. [In19] Informatik im Kontext - Kriterien für die Auswahl von Kontexten, https://medienwissenschaft.uni-bayreuth.de/inik/konzepte/kriterienkontexte/, Stand: 14.02.2019 [KK08] Koubek, J.; Klumpp S.: Dimensionen der Informatik. 25-Ökologie. Folien zur Vorlesung Informatik & Informationsgesellschaft II., 2008.  [Pe18] Petrenko, I.: Bildung ökologischen Denkens im Informatikunterricht. In (Thomas, M.; Weigend, M. Hrsg.): Informatik und Medien. 8. Münsteraner Workshop zur Schulinformatik 18. Mai 2018.  BoD- Books on Demand, Norderstedt, S. 81-88, 2018. [Se19] senseBox, www.sensebox.de, Stand: 14.02.2019 [Th93] Thomas, M.: Computersimulation als Hilfsmittel zur Erkenntnisgewinnung über das Verhalten dynamischer Wirkungsgefüge, Schriftliche Hausarbeit im Rahmen der 1. Staatsprüfung an der Universität Paderborn 1993 [Wi19] Willi, Josef: Ökologisch denken heißt Gesamtzusammenhänge erfassen, http://www.landwirtschaftundleben.at/downloads/lehrbrief2.2.2.pdf, Stand: 16.02.2019 158 Ilona Petrenko, Marco ThomasPraxisberichtecbeHerausgeber et al. (Hrsg.): INFOS,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Erfahrungsbericht zur Qualiﬁzierungsmaßnahme Informatikals Erweiterungsfach (Lehramt Realschule) in BayernMarc Berges1, Matthias Ehmann2, Rainer Gall3, André Greubel3, Nicole Günzel-Weinkamm2, Verena Haller4, Martin Hennecke3, Ute Heuer4, Julia Kronawitter4,Annabel Lindner1, Nicolai Pöhner3Abstract:Teil des Programms BAYERN DIGITAL II ist die berufsbegleitende Nachqualiﬁzierungvon rund 180 Lehrerinnen und Lehrern der Realschule. Über die Ermäßigung des Stundendeputatswird den Teilnehmenden ermöglicht, sich innerhalb von zwei Jahren für das Fach Informatik anbayerischen Realschulen nachzuqualiﬁzieren. Ausbildungsziel ist das einem regulären Studiumentsprechende Staatsexamen. An mehreren universitären Standorten wurden daher entsprechendeMaßnahmen aufgelegt. Durch die besonderen Rahmenbedingungen kommen vor allem Lehr- undLernformen des „blended learning“ Konzepts zum Tragen. Zweiwöchentliche Präsenztage sorgendabei für eine kontinuierliche Flankierung, wobei versucht wird, im Sinne des „ﬂipped classroom“Prinzips die Präsenzzeit möglichst lernerzentriert und interaktiv zu gestalten. Untersuchungen zurZufriedenheit und Motivation nach dem ersten Halbjahr zeigen den Erfolg der Maßnahme, aber auchweiteres Verbesserungspotential.Keywords:Nachqualiﬁzierung; Realschule; Blended Learning1 EinleitungSeit der Einführung des Pﬂichtfachs Informatik an bayerischen Gymnasien im Schuljahr2003/04 setzt das Land neben der Einstellung von Absolventinnen und Absolventen derinformatischen Lehramtsstudiengänge auch auf die Nachqualiﬁzierung von im Dienst be-ﬁndlichen Lehrkräften mit anderen Fächerkombinationen. Durch verschiedene Maßnahmenwie den Programmen NELLI bzw. SIGNAL (2001-06) und FLIEG (seit 2006) wurde so eingroßer Teil der heutigen Lehrkräfte nachträglich für das Fach Informatik qualiﬁziert.An der bayerischen Realschule wird Informatik gemeinsam mit Textverarbeitung undTechnischem Zeichnen / Computer Aided Design im Rahmen des Pﬂichtfachs „Informati-onstechologie“ angeboten. Textverarbeitung und Technisches Zeichnen / Computer Aided1Universität Erlangen-Nürnberg, Didaktik der Informatik, Martensstraße 3, 91058 Erlangen,marc.berges@fau.de2Universität Bayreuth, Didaktik der Informatik, Universitätsstraße 30, 95447 Bayreuth,matthias.ehmann@uni-bayreuth.de3Universität Würzburg, Didaktik der Informatik, Emil-Fischer-Str. 30, 97074 Würzburg,martin.hennecke@uni-wuerzburg.de4Universität Passau, Didaktik der Informatik, Innstr. 33. 94032 Passau,ute.heuer@uni-passau.decba doi:10.18420/infos2019-16Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1612 Berges et al.Design werden dabei oft von Fachlehrkräften unterrichtet. Entsprechend ist der Anteil dergrundständig ausgebildeten Informatiklehrkräfte an der Realschule eher gering. Zwar gabes auch für die Realschule in der Vergangenheit diverse Fortbildungsangebote, Nachqualiﬁ-zierungen, die wie SIGNAL oder FLIEG einen universitären Abschluss erreichen sollten,wurden jedoch bisher keine angeboten.Das Programm BAYERN DIGITAL II ermöglicht seit 2018 nun auch die Nachqualiﬁzie-rung von knapp 180 Lehrkräften bayerischer Realschulen. Diese erhalten für zwei Jahreeine Freistellung von einem Tag pro Woche. Ferner stehen Mittel für Reisekosten fürPräsenzveranstaltungen an den durchführenden Universitäten zur Verfügung. Am Ende derMaßnahme sollen die Teilnehmerinnen und Teilnehmer die Erweiterungsprüfung für dasFach Informatik ablegen. In Bayern bedeutet dies die Teilnahme am Staatsexamen. Das Landverspricht sich von der Maßnahme neben der Verbesserung der Qualität des informatischenUnterrichts auch die Scha ung einer Grundlage für den weiteren Ausbau des Schulfachsan der Realschule. Im Rahmen des Beitrags soll der Aufbau und die Durchführung derMaßnahme kurz vorgestellt werden. Ferner wird über Erfahrungen aus dem ersten Halbjahrder Nachqualiﬁzierung berichtet.2 Maßnahme2.1 Informatik an der bayerischen RealschuleDie Schulordnung für die bayerische Realschule von 2002 sah je nach gewählter Ausbil-dungsrichtung Informatik als Pﬂicht- bzw. Wahlpﬂichtfach vor. Seit 2007 wurde es in allenAusbildungsrichtungen durch das Pﬂichtfach Informationstechnologie ersetzt. Inhaltlichumfasst das Fach die zuvor eigenständigen Bereiche Informatik, Textverarbeitung undTechnisches Zeichen / Computer Aided Design. Dem Fach liegt ein modularisierter Lehr-plan5mit ﬂexibilisierter Stundentafel zugrunde. Dieser legt für die Jahrgangsstufen 5 bis 7(Anfangsunterricht) acht Module zu je 14 Unterrichtsstunden aus den Bereichen Tastschrei-ben / Textverarbeitung, Informationstechnische Grundlagen und Informatik fest. Ab derachten Jahrgangsstufe (Aufbauunterricht) sind Umfang und Inhalte je nach Ausbildungs-richtung unterschiedlich. Der Modulkanon umfasst derzeit die Bereiche Textverarbeitung,Tabellenkalkulation, Datenbanksysteme, Computergestützte Konstruktion, Datennetze,Programmierung - Algorithmen und Objekte, Logik und Robotik sowie Multimedia. DieModulblöcke bestehen dabei aus zwei bis sechs Modulen à 14 Unterrichtsstunden.Die Lehrerschaft ist im Fach Informationstechnologie sehr heterogen zusammengesetzt.Neben Lehrerinnen und Lehrern, die das Fach Informatik als Lehramtsfach an der Universitätstudiert haben, gibt es im Rahmen des Vorbereitungsdienstes nachqualiﬁzierte Lehrkräfte.Hinzu kommen viele an Staatsinstituten ausgebildete Fachlehrerinnen und Fachlehrer. Da5https://www.lehrplanplus.bayern.de/fachlehrplan/realschule/10/it162 Marc Berges et al.Erfahrungsbericht Qualiﬁzierungsmaßnahme Informatik als Erweiterungsfach Realschule Bayern 3die drei Qualiﬁzierungssysteme inhaltlich und organisatorisch sehr unterschiedlich sind,ergeben sich unterschiedliche Schwerpunkte der Lehrkräfte in den drei fachlichen Bereichen.Die Regelstudienzeit für Lehramt Informatik an Realschulen beträgt in Bayern siebenSemester. Rund ein Drittel des Studiums entfällt dabei auf Veranstaltungen aus dem FachInformatik bzw. deren Didaktik. Am Ende des Studiums steht in Bayern nach wie vor dasStaatsexamen als zentrale schriftliche Prüfung. Zwar haben die bayerischen Universitäten ihrStudium modularisiert und bieten meist neben dem Staatsexamen auch Bachelorabschlüssean, für die Aufnahme in das Referendariat qualiﬁziert jedoch nur die staatliche Prüfung.Das Studium stellt somit vor allem eine Vorleistung für das Staatsexamen dar, gehtaber auch in die Berechnung der Gesamtnote mit ein. Für das Staatsexamen Informatikschreibt die Lehramtsprüfungsordnung I (LPO I)6drei schriftliche Prüfungen vor . Geprüftwerden die TeilgebieteTheoretische Informatik und Algorithmen und Datenstrukturen,Softwaretechnologie und DatenbanksystemesowieFachdidaktik Informatik.2.2 HerausforderungenDie Durchführung der Maßnahme ist mit einer Reihe von Herausforderungen verbunden.Der enge Zeitplan von zwei Jahren, in dem die Maßnahme durchgeführt wird, stellt an dieStudierenden hohe Anforderungen. Trotz der Reduktion der Unterrichtsverpﬂichtung wirdvon den Teilnehmerinnen und Teilnehmern gefordert, sich in relativ kurzer Zeit eine sehrgroße Menge komplexer informatischer Fachinhalte anzueignen. Dies ist nur mit Disziplinund durch kontinuierliches Arbeiten mit den Studieninhalten möglich. Die Lehrkräfte müsseneine Balance zwischen Schule, begleitendem Studium und Privatleben ﬁnden, die über einenZeitraum von zwei Jahren tragbar ist und gleichzeitig ein möglichst rasches Vorankommen imStudium ermöglicht. Um dies zu unterstützen, wird den Teilnehmerinnen und Teilnehmern imSinne von „blended learning“ [OT05] ein umfangreiches Studienmaterial zum Selbststudiumzur Verfügung gestellt sowie an den Präsenztagen versucht, komplexe Sachverhalte möglichstzugänglich darzustellen.Auf Seiten der Universitäten ist sowohl der stra e Zeitplan als auch die Heterogenität inBezug auf die fachlichen Vorkenntnisse bei den Teilnehmerinnen und Teilnehmern einegroße Herausforderung. So ﬁnden sich in der Gruppe verschiedenste Studienfächer imErststudium, unterschiedliche Erfahrungen in Bezug auf IT / Informatik-Unterricht, sowieunterschiedlicher Umgang der Lehrkräfte mit der Doppelbelastung, z. B. in Bezug aufFrustrationstoleranz. Um den Studierenden hier möglichst gut zur Seite zu stehen, fungierenstudentische Hilfskräfte an den Universitäten als unterstützende Tutorinnen und Tutoren.6http://www.gesetze-bayern.de/Content/Document/BayLPO_I-49Qualiﬁzierungsmaßnahme Informatik als Erweiterungsfach 1634 Berges et al.2.3 Aufbau der MaßnahmeUm innerhalb des engen Zeitrahmens von nur zwei Jahren eine fundierte Ausbildung derTeilnehmerinnen und Teilnehmer sowohl in fachlicher Hinsicht als auch in Hinblick aufdie Unterrichtspraxis zu realisieren, folgt die Maßnahme einerseits einem relativ engenCurriculum und greift andererseits auf Blended Learning [OT05] und Flipped Classroom[BS12] Konzepte zurück. Dies ist notwendig und sinnvoll, da aufgrund des berufsbeglei-tenden Studiums nur begrenzt die Möglichkeit besteht, an Präsenzveranstaltungen an derUniversität teilzunehmen. Da vorangehende Weiterbildungsprogramme jedoch gezeigthaben, dass die Teilnehmerinnen und Teilnehmer Präsenzzeiten für sehr wichtig haltenund diese Auswirkungen auf den Erfolg der Maßnahme haben (vgl. [Sp09]), ﬁnden imZweiwochenrhythmus Präsenztage an den beteiligten Universitäten statt, an denen dieInhalte aufgearbeitet und vertieft werden. Ziel ist hierbei kein Vorlesungsformat, vielmehrsoll die Präsenzzeit möglichst interaktiv gestaltet werden und intensiv auf Fragen undProbleme der Studierenden eingegangen werden.Der inhaltliche Aufbau der Maßnahme orientiert sich am Kerncurriculum für das bayerischeStaatsexamen in Informatik7, das zentrale Fachkenntnisse aus den Bereichen Datenbanksyste-me, Algorithmen und Datenstrukturen, Softwaretechnik und Theoretische Informatik sowieder Fachdidaktik Informatik als examensrelevant ausweist. Da die Fakultas in Informatikausgewiesenes Ziel der Maßnahme ist, ist die Abdeckung dieser zentralen Themengebieteaus fachwissenschaftlicher Sicht erforderlich, zudem soll jedoch auch ein Wissensfundamentaufgebaut werden, das die Lehrkräfte in der täglichen Unterrichtspraxis unterstützt. Vordiesem Hintergrund wurde ein Modell mit acht Modulen entwickelt (vgl. Tab.1), bei demzentrale Ideen wie die Algorithmik semesterübergreifend aufgegri en werden und dieProgrammierung als wachsender Baustein vom ersten Semester bis zum Examen umfas-send vermittelt und geübt wird. Zudem werden ein Softwarepraktikum, welches für dieStudierenden im Erweiterungsfach die einzige Zulassungsvoraussetzung zum Staatsexamendarstellt, und ein Examens-Repetitorium in den Modulplan integriert. Für den BereichFachdidaktik ist kein eigenes Modul vorgesehen, vielmehr werden fachdidaktische Elementeund Werkzeuge in die fachpraktischen Module integriert. Am Ende der Module steht jeweilseine Klausur zur Überprüfung des Lernfortschrittes und als individuelle Rückmeldung fürdie Teilnehmerinnen und Teilnehmer. Diese Klausuren haben jedoch keinen Einﬂuss auf dieExamenszulassung. Um einen Eindruck von der Gestaltung der Module zu geben, werdenim Folgenden die Module des ersten Semesters detaillierter vorgestellt.2.3.1 Modul DatenbanksystemeGrundständige Studierende erwerben im Bereich Datenbanksysteme und Softwaretechnolo-gie mindestens 15 ECTS (vgl. LPO I8). Dies wird im Rahmen der Maßnahme durch die7https://www.verkuendung-bayern.de/amtsblatt/dokument/kwmbl-2009-2-34/8http://www.gesetze-bayern.de/Content/Document/BayLPO_I-49164 Marc Berges et al.Erfahrungsbericht Qualiﬁzierungsmaßnahme Informatik als Erweiterungsfach Realschule Bayern 51. Semester 2. Semester 3. Semester 4. SemesterDatenbanksystemeAlgorithmen undDatenstrukturenSoftwaretechnologieTheoretischeInformatikFachdidaktikEinführung in dieProgrammierungProgrammierung Softwarepraktikum RepetitoriumTab. 1: Modulplan der MaßnahmeBehandlung der im Kerncurriculum geforderten Inhalte abgebildet: „Datenmodellierung undDatenbankentwurf; relationales Modell (Grundlagen); Konvertierung eines ER-Entwurfsin einen relationalen Entwurf; Anfragesprachen in DBMS (SQL); Integrität (Strukturelleund Domänenspeziﬁsche Integritätsbedingungen); relationale Entwurfstheorie (FunktionaleAbhängigkeiten, Normalformen); Transaktionsmanagement“. Diese Auﬂistung bildet deninhaltlichen Rahmen für das erste Modul, da die zeitlichen Restriktionen keine weitereVertiefung zulassen.Der grundsätzliche Aufbau des Moduls entspricht dem didaktischen Konzept des „FlippedClassroom“. Dabei werden den Lernenden entsprechende Lerninhalte in einer Selbst-studiumsphase zur Verfügung gestellt. Als Literatur zum Eigenstudium wird in diesemModul das Buch „Datenbanksysteme - Eine Einführung“ von Alfons Kemper und AndréEickler [KE15] empfohlen. Zusätzlich wird auf zum Buch passende Begleitmaterialien, wiePräsentationen und Videoaufzeichnungen9verwiesen. Zu den jeweiligen Kapiteln lösen dieTeilnehmerinnen und Teilnehmer begleitende Aufgabenblätter auf Staatsexamensniveau.In der anschließenden Präsenzveranstaltungen werden Übungsblätter und im Selbststudi-um aufgekommene Fragen besprochen, um dann anhand weiterer Übungsaufgaben undPräsentationen zu den theoretischen Inhalten das aktuelle Thema zu vertiefen und imgemeinsamen Austausch weitergehende Fragen und Probleme zu klären. Abschließend wirdein kurzer Ausblick auf die Inhalte des nächsten Themenbereichs gegeben sowie möglicheSchwierigkeiten des Themas vorweggenommen. In der folgenden Selbststudiumsphasewird den Teilnehmenden noch einmal die Möglichkeit gegeben anhand von aufbauendenÜbungsaufgaben die Inhalte zu vertiefen. Gleichzeitig beginnt der nächste Zyklus mit demEinarbeiten in die theoretischen Inhalte und dem Lösen der ersten Übungsaufgaben.Ergänzend zu den fachlichen Inhalten werden folgende beispielhafte fachdidaktischeInhalte im ersten Modul thematisiert: Allgemeinbildungsanspruch, Fundamentale Ideen,Lehrplan der Realschule Bayern: Module Datenbanksysteme I & II, Werkzeuge zurModellierung und zum Erstellen von SQL-Abfragen und Aufgaben aus Schulbüchern undAufgabensammlungen.9https://db.in.tum.de/teaching/bookDBMSeinf/aufzeichnungen/Qualiﬁzierungsmaßnahme Informatik als Erweiterungsfach 1656 Berges et al.2.3.2 Modul Einführung in die ProgrammierungWährend das erste Modul an allen Standorten weitestgehend gleich abgelaufen ist, wurdedas Modul „Einführung in die Programmierung“ an den verschiedenen Standorten nach denlokalen Gegebenheiten unterschiedlich gehandhabt. Hier wird das Vorgehen der UniversitätPassau dargestellt.Die Notwendigkeit, das Testen von Programmen systematisch in die Programmierveranstal-tung des ersten Informatiksemesters zu integrieren, wird seit vielen Jahren gesehen (vgl.[BM16]). Im Bereich der Fort- und Weiterbildung von Lehrkräften wurden Überlegungenzum Unterrichten des Testens im Sinne einiger Ideen des „test-driven learnings“ jedochbisher wenig beschrieben.Weiter gibt es nur vereinzelt Berichte, die entsprechend auf das systematische Testenim Rahmen einer Einführung in die Programmierung in der Schule fokussieren (vgl.[SS13]), obwohl dies folgende positive E ekte haben kann: (1) Schülerinnen und Schülererfahren, welche wichtige Rolle das Testen schon während und nicht erst am Ende derEntwicklung einer robusten und zuverlässigen Lösung spielt. (2) Sie erkennen, welcheVorteile eine Automatisierung in diesem Zusammenhang bietet. (3) Sie erhalten durch dasAusführen der Tests eine vergleichsweise schnelle und an ihr persönliches Arbeitstempoangepasste Rückmeldung über Aspekte ihres Arbeitsfortschritts. (4) Die lernbegleitendePrüfung einer Schülerlösung durch automatische Tests im Sinne eines inkrementellen „einbisschen schreiben, testen, ein bisschen mehr schreiben, wieder testen usw.“ - Zugangskann Lehrkräfte entlasten. So haben Lehrende mehr Zeit für die individuelle Betreuung undUnterstützung ihrer Schüler.Entsprechend dieser Überlegungen wird ein Vorgehen gewählt, das einerseits konsequentund von Anfang an mit Aufgaben und zugehörigen vordeﬁnierten Tests arbeitet, andererseitseinige ausgewählte einfache vordeﬁnierte Tests reﬂektiert. Dabei werden den Lehrkräftendie vordeﬁnierten Tests auch als „worked examples“ zur Verfügung gestellt.So setzen sich die Lehrkräfte bereits in einer sehr frühen Phase ihres Lernprozesses mit demregelmäßigen Testen ihres Codes auseinander. Dadurch entwickeln sie ein Bewusstsein fürdie Notwendigkeit der systematischen Programmentwicklung. Sie beschäftigen sich nicht nurmit ihren eigenen möglicherweise verschieden di usen Erwartungen an den Code, sondernauch mit der durch die Tests sichergestellten Funktionalität. Die Studierenden arbeitenmit Java und entsprechenden JUnit-Tests, die in Gradle-Projekte10integriert sind. Gradlewird als Projektmodell verwendet, um die Ausführung der Tests und den Projektimport indie Entwicklungsumgebungen möglichst einfach zu gestalten. Als Entwicklungsumgebungdient IntelliJ, wobei geplant ist BlueJ mit einzubeziehen.Thematisch fokussiert das Modul die folgenden Konzepte:Klasse, Objekt, Kontrollstrukturen,einfache Datenstrukturen, Datenkapselung, Exceptions, PolymorphieundProgrammierkon-10https://gradle.org/166 Marc Berges et al.Erfahrungsbericht Qualiﬁzierungsmaßnahme Informatik als Erweiterungsfach Realschule Bayern 7ventionen. Der methodische Aufbau des Moduls deckt sich mit dem des ThemenbereichsDatenbanken.2.4 Teilnehmerinnen und Teilnehmer der MaßnahmeDie Gewinnung von Interessenten erfolgte seitens des Kultusministeriums über entspre-chende Schreiben an die Schulleitungen. Die vom Ministerium ausgewählten ca. 80Teilnehmerinnen und Teilnehmer der ersten Kohorte wurden im Anschluss gleichmäßigauf die Universitäten Bayreuth, Erlangen-Nürnberg, Passau und Würzburg verteilt undsind dort als reguläre Studierende in Erweiterungsstudiengängen für das Lehramt an Real-schulen eingeschrieben. Die gleichmäßige Verteilung auf die Standorte führt bei einzelnenTeilnehmenden zu sehr langen Anfahrtswegen zu den Präsenzveranstaltungen.Tabelle2zeigt relevante (berufs-)biographische Daten der Teilnehmerinnen und Teilnehmer.Die Hälfte von ihnen hat bereits erste Unterrichtserfahrung im Fach Informatik / Informa-tionstechnologie gesammelt. Die unterrichtliche Tätigkeit erfolgte meist im Rahmen vonfachfremdem Unterricht bzw. aufgrund einer Lehrerlaubnis.Merkmal Anzahl Merkmal AnzahlGeschlecht (n=80) Unterrichtsfahrung (n=76)weiblich 38 1-5 Jahre 15männlich 42 6-10 Jahre 32mehr als 10 Jahre 29Unterrichtsfächer (n=80) Unterrichtserfahrung Informatik/IT (n=76)Mathematik oder Physik 42 keine 26Biologie oder Chemie 8 1-5 Jahre 17andere 30 6-10 Jahre 12mehr als 10 Jahre 11Tab. 2: (Berufs-)biographische Merkmale der Teilnehmerinnen und Teilnehmer3 Erste EvaluierungsergebnisseKurz vor Ende des ersten Halbjahres wurden die Teilnehmerinnen und Teilnehmer miteiner Online-Erhebung um ein erstes Feedback zu ihren bisherigen Erfahrungen mit derMaßnahme gebeten. Zudem wurden Selbstwirksamkeitsaspekte und Motivation untersucht.Um die allgemeine Zufriedenheit besser einordnen zu können, haben wir zunächst nachdem empfundenen Kursniveau gefragt (Wie haben Sie die Gesamtschwierigkeit des erstenKurshalbjahres empfunden?). Auf einer 5-stuﬁgen Likert-Skala geben drei Teilnehmende an,das Kursniveau sei viel zu hoch, 29 empﬁnden es als zu hoch und 29 als angemessen. Dierestlichen Teilnehmerinnen und Teilnehmern der Maßnahme haben kein Feedback gegeben.Qualiﬁzierungsmaßnahme Informatik als Erweiterungsfach 1678 Berges et al.Abb.1zeigt ein erstes Bild der Zufriedenheit der Teilnehmerinnen und Teilnehmer mitden einzelnen Komponenten des Kursdesigns, wie Lesesto  in Form des eingesetztenFachbuchs, die Durchführung der Präsenzveranstaltungen, die für den Kurs erstelltenAufgabenblätter, die Auswahl der Themenbereiche und alle sonstigen Materialien wie z.B.Vorlesungsmitschnitte (Wie zufrieden waren Sie mit den folgenden Aspekten des Kurses?).Antworten konnten auf einer 4-stuﬁgen Likert-Skala von gar nicht zufrieden (1) über nichtzufrieden (2) und zufrieden (3) bis zu sehr zufrieden (4) gegeben werden.Abb. 1: Einschätzung der Zufriedenheit mit den einzelnen Komponenten des KursdesignsNeben der Zufriedenheit mit den einzelnen Komponenten des Kursdesigns haben wir auchnach der Zufriedenheit mit dem Lernfortschritt gefragt. Basierend auf dem Instrument vonMichalis Giannakos [GHC13] haben wir folgende Aussagen auf einer 4-stuﬁgen Likert-Skalabezüglich des Grades der Zustimmung bewerten lassen:•Ich kann einen Überblick über die Konzepte des ersten Halbjahres geben.•Ich habe die Konzepte des ersten Halbjahres verstanden.•Ich habe im ersten Halbjahr viel gelernt.•Ich nehme aus dem ersten Halbjahr ein erweitertes bzw. vertieftes Verständnis derKonzepte mit.Die Mehrheit der Teilnehmerinnen und Teilnehmer ist mit dem Lernfortschritt zufrieden.Nur sechs der Teilnehmenden zeigen sich mit Ihrem Lernfortschritt unzufrieden.Zur Erfassung der Motivation wurde auf die kurze Version des „Intrinsic MotivationInventory“11von Deci & Ryan zurückgegri en. Dieses Messinstrument basiert auf derSelf-Regulation Theory [DR12]. Abb.2gibt einen Überblick über die Motivation bezüglichder vier Faktoren „Interesse/Vergnügen“, „wahrgenommene Kompetenz“, „wahrgenommene11https://selfdeterminationtheory.org/168 Marc Berges et al.Erfahrungsbericht Qualiﬁzierungsmaßnahme Informatik als Erweiterungsfach Realschule Bayern 9Wahlfreiheit“ und „Druck/Anspannung“ die mittels Faktorenanalyse auch in unseren Datenbestätigt werden konnten. Dabei spiegelt „Interesse/Vergnügen“ direkt die intrinsischeMotivation wieder, die „wahrgenommene Kompetenz“ reﬂektiert das Kompetenzbedürfnisund die „wahrgenommene Wahlfreiheit“ das Autonomiebedürfnis. Sind die letzten beidennicht erfüllt, stellt sich ein Gefühl von Druck und Anspannung ein, welches als negativerPrädiktor für die intrinsische Motivation gilt.Abb. 2: Verteilung der Teilnehmenden bezüglich der Wahrnehmung (tri t überhaupt nicht zu (0), tri teher nicht zu (1), teils teils (2), tri t eher zu (3), tri t voll und ganz zu (4)) der Motivationsfaktoren4 Zusammenfassung und AusblickInsgesamt können wir für die Maßnahme nach dem ersten Halbjahr ein positives Fazitziehen, haben aber im Rahmen der Evaluation einige Elemente gefunden, die in den nächstenHalbjahren noch verbessert werden müssen. So ist die Zufriedenheit mit dem Kursdesigninsgesamt relativ hoch. Allerdings bezieht sich das vor allem auf die mit Präsenz assoziiertenElemente (Präsenzveranstaltung, Themenauswahl und Aufgabenblätter). Die Elemente des„ﬂipped-classroom“ wie Lesesto  und sonstiges zum Selbststudium bereitgestelltes Materialschneiden eher schlechter ab. Für die kommenden Kursmodule bedeutet das, dass weitereAnstrengungen in die Aufbereitung von Lehrmaterialien gelegt werden müssen. Die Präsenzlässt sich aufgrund der ohnehin als hoch bis sehr hoch empfundenen Arbeitsbelastung undder mitunter weiten Anfahrtswege nicht steigern. Trotz der hohen Arbeitsbelastung gibt esbisher von 80 Teilnehmenden nur vier AbbrecherInnen zu verzeichnen, was verglichen mitüblichen Abbruchraten nach dem ersten Semester eine ordentliche Quote darstellt.Die Motivationsverteilung zeigt einige interessante Aspekte, die in die Planung undDurchführung der folgenden Module eingehen wird. So liegt das Interesse und damit dieintrinsische Motivation weiterhin im „positiven“ Bereich. Allerdings ist die empfundeneKompetenz eher als „neutral“ zu betrachten mit einer leichten Tendenz zum „negativen“Qualiﬁzierungsmaßnahme Informatik als Erweiterungsfach 16910 Berges et al.Empﬁnden. Dies kann aber auch am Zeitpunkt der Erhebung vor der ersten Klausur liegen.Die fehlende Autonomie, die ein wenig in der Natur der Maßnahme liegt, ist ein Aspekt demin den kommenden Semestern unbedingt begegnet werden muss, um ein weiteres Absinkender Motivation zu verhindern. Ebenso muss der empfundene Druck, der sicherlich mit demFortschreiten der Maßnahme eher zunehmen wird, im Auge behalten werden.Neben den weiteren Semestern haben die gewonnenen Erkenntnisse auch unmittelbareAuswirkungen auf die zweite Kohorte der Realschullehrkräfte, die die Maßnahme imSchuljahr 2019/2020 beginnen werden. Außerdem soll der sich aus der Einführung vonverpﬂichtendem Informatikunterricht in der 11. Jahrgangsstufe für alle Ausbildungsrichtun-gen der bayerischen Gymnasien ergebende massive Bedarf an neuen Informatiklehrkräftenebenfalls durch eine Nachqualiﬁzierung gedeckt werden. Ziel ist es dabei, dass an jedemder rund 400 bayerischen Gymnasien eine zusätzliche Informatiklehrkraft zur Verfügungsteht. Die Maßnahme wird zum Schuljahr 2019/2020 anlaufen und auf den Erkenntnissender hier beschriebenen Maßnahme aufbauen.Literaturverzeichnis[BM16]Braught, Grant; Midki , James: Tool Design and Student Testing Behavior in an Introduc-tory Java Course. In: Proceedings of the 47th ACM Technical Symposium on ComputingScience Education. SIGCSE ’16, ACM, New York, NY, USA, S. 449–454, 2016.[BS12]Bergmann, Jonathan; Sams, Aaron: Flip your classroom: Reach every student in everyclass every day. ISTE and ASCD, Eugene, Or. and Alexandria, Va., 1. ed.. Auﬂage, 2012.[DR12]Deci, Edward L.; Ryan, Richard M.: Motivation, Personality, and Development WithinEmbedded Social Contexts: An Overiew of Self-Determination Theory. In: The Oxfordhandbook of human motivation, S. 85–107. Oxford University Press, New York, 2012.[GHC13]Giannakos, Michail; Hubwieser, Peter; Chrisochoides, Nikos: How students estimate thee ects of ICT and programming courses. In: Proceedings of the 44th ACM technicalsymposium on Computer science education. ACM Press, New York, S. 717, 2013.[KE15]Kemper, Alfons; Eickler, André: Datenbanksysteme: Eine Einführung. De GruyterOldenbourg, Berlin and Boston, 10. auﬂage. Auﬂage, 2015.[OT05]Oliver, Martin; Trigwell, Keith: Can ‘Blended Learning’ Be Redeemed? E-Learning andDigital Media, 2(1):17–26, 2005.[Sp09]Spohrer, Matthias: Konzeption und Analyse neuer Maßnahmen in der Fort- und Weiterbil-dung von Informatiklehrkräften. 2009.[SS13]Stejskal, R.; Siy, H.: Test-driven learning in high school computer science. In: 2013 26thInternational Conference on Software Engineering Education and Training (CSEE T). S.289–293, May 2013.170 Marc Berges et al.Arno Pasternak (Hrsg.): INFOS 2019 – Informatik für alle,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019    1  „Bildung in der digital vernetzten Welt“ Ohne Informatik nicht denkbar!? Folgerungen aus mehr als 50 Jahren 'Digitalisierung' der Bildung Dieter Engbring1 Abstract: In diesem Aufsatz wird diskutiert, ob bzw. in welchem Umfang „Bildung in der digital vernetzten Welt“ informatische Bildung beinhalten sollte. Dazu wird aufgezeigt, dass die Diskus-sion um eine solche Bildung nicht nur seit vielen Jahrzehnten geführt wird, sondern dass seit etwa 30 Jahren auch die entsprechenden Herausforderungen benannt sind, ohne dass diese gelöst wer-den konnten. Zur empirischen Erforschung dieser Herausforderungen wird ein Alternativvorschlag unterbreitet, der die verschiedenen Perspektiven miteinander verbindet.   Keywords: Digitalisierung, Allgemeinbildung, Medienbildung, Technikgenese 1 Einleitung Der Prozess der 'Digitalisierung' wird nicht nur durch neue Hardware schulische Bildung verändern, auch Ziele und Inhalte werden sich wandeln müssen. Die Strategie der Kul-tusministerkonferenz für eine „Bildung in der digitalen Welt [KMK17] und der darauf Bezug nehmende Medienkompetenzrahmen NRW2 sind Zeugen dafür. „Bildung in der digitalen vernetzten Welt (kurz: Digitale Bildung)“ ist die Bezeichnung für diesen Trans-formationsprozess, die in der »Dagstuhl-Erklärung« [GI16b] genutzt wird. In der Erklä-rung wird beschrieben, dass die Informatik daran Anteil haben sollte, ohne dass erneut die Forderung nach einem Pflichtfach Informatik erhoben wird.3 Mithin stellt sich die Frage, wie Informatik einen Beitrag zur Bildung in der digitalen vernetzten Welt“ leistet. Dieses zu untersuchen bietet die bildungspolitisch ausgerichtete Erklärung insofern ei-nen Ansatzpunkt, da hierin (nicht zum ersten Mal) der Vorschlag unterbreitet wird, dass es drei Perspektiven auf eine solche Bildung gibt und dass diese aufeinander zu beziehen sind. Dieses ist jedoch nie wirklich gelungen. Möglichen Gründen dafür wird in diesem Aufsatz in Abschnitt 3 nachgegangen und zur weiteren Erforschung dieser Gründe in Abschnitt 4 ein Alternativvorschlag unterbreitet. Dieser Einleitung folgt zunächst ein Abschnitt, in dem die Ähnlichkeit zu früheren Diskussionen aufgezeigt wird. Mit einem 'Fazit mit Ausblick' werden die nun anstehenden Forschungsfragen benannt.                                                            1 Universität Bonn, Institut für Informatik, Endenicher Allee 19a, 53115 Bonn, dieter.engbring@uni-bonn.de 2 https://medienkompetenzrahmen.nrw.de/ 3 Dies ist mindestens ungewöhnlich, da diese Forderung nach einem Pflichtfach, ansonsten Bestandteil vieler solcher »Dagstuhl-Erklärungen« gewesen ist, zuletzt im Jahr 2015. https://gi.de/meldung/informatikunterricht -gehoert-in-die-schule/. Dort als 3. »Dagstuhl-Erklärung« ausgewiesen.  cba doi:10.18420/infos2019-17Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 171 2    Dieter Engbring   2 Über 50 Jahre Digitalisierung des Bildungswesens B. Koerber und J. Müller haben im Editorial der LOG IN 187/188 daran erinnert, dass schon sehr viele Jahre – wenn auch unter anderen Überschriften – von Digitalisierung der Bildung die Rede ist [KM18]. In den Debatten enthalten waren immer zwei Aspekte, die bildungspolitisch bis heute nicht immer getrennt werden. Einerseits geht/ging es um den Einsatz computergestützter Systeme zur Verbesserung (?) des Unterrichts. Anderer-seits sollen computergestützter Technologien im Unterricht thematisiert werden. Dieser Aufsatz kapriziert sich auf den zweiten Aspekt und zählt hierzu auch die Diskussionen um die Notwendigkeit informatischer Bildung.  Bereits vor etwa 50 Jahren gab es auch in Deutschland erste Pilotprojekte zu einem In-formatikunterricht [KM15]. Bald nach ihrer Etablierung als Disziplin an den Universitä-ten, wurde Informatik 1972 zum Schulfach, da es in den Katalog der Wahlpflichtfächer der gymnasialen Oberstufe aufgenommen wurde. Seither stockt die Entwicklung jedoch. Zwar ist Informatik auch zu einem Wahlpflichtfach in der Sekundarstufe I geworden; Pflichtfach ist es jedoch nur punktuell.4 Anstelle der Einrichtung eines Pflichtfaches wurde seit Beginn der 1980er Jahre immer wieder versucht, Computer als Teil sog. fachübergreifenden Lernbereichen zu thematisieren. So wurde 1984 zunächst ein Rah-men- und dann 1987 ein Gesamtkonzept zur „informations- und kommunikationstechni-schen Grundbildung“ (je nach Bundesland ITG oder IKG abgekürzt) vorgestellt. Dieses Gesamtkonzept enthält als bildungspolitischer Kompromiss neun Aufgaben [BLK87], die sich allerdings wenig kohärent auf Anwendungsschulung, kritische Reflexion der technologischen Entwicklung, ein wenig Hardwarekunde und Algorithmik beziehen. Die mit diesen Aufgaben verknüpften Inhalte und Ziele lassen sich – das ist letztlich das Ergebnis der nordrhein-westfälischen Interpretation – auch in einem Dreieck anordnen [ITG91]. Die Gegenüberstellung des »Dagstuhl-Dreieck« (links) mit dem Dreieck aus dem NRW-ITG-Lehrplan in der nachstehenden Abbildung zeigt die Ähnlichkeit.   Abb. 1: Gegenüberstellung »Dagstuhl-Dreieck« und aus Auszug aus dem NRW-Lehrplan  zur Umsetzung der Informationstechnischen Grundbildung                                                            4 In einer Online Petition für ein Pflichtfach Informatik in Nordrhein-Westfalen (NRW) werden fünf Bundes-länder aufgezählt, in denen es etabliert ist oder kurzfristig erfolgen soll. www.informatiknrw.de  172 Dieter Engbring Informatik und »Digitalisierung«   3  Für jede der drei Perspektiven wird in dem älteren Dreieck eine Vielzahl von Beispielen genannt, an der sich die notwendige didaktische Analyse mit nachfolgender Aufberei-tung Nahrung fand. Es sind damals eine Vielzahl zeitgemäßer Thematisierungen vorge-legt worden. Diese standen jedoch für sich allein, waren nicht exemplarisch, ohne echte Zusammenhänge, da mal dieses und mal jenes Fach zuständig war und nur auf den aktu-ellen Stand der Technik ausgerichtet. Ein auf die absehbare Zukunft gerichtetes Lernen war kaum möglich, da eine übergreifende (= informatische?) Perspektive fehlte.  Solche fachübergreifenden Lernbereiche erscheinen vielen bildungspolitischen Verant-wortlichen auch heute noch ausreichend zu sein, den Themen 'Computer nutzen und einschätzen' gerecht zu werden. Dabei spielt einerseits das Wissen darum, dass es kaum ausgebildete Informatik-Lehrer gibt, sicher ebenso eine Rolle wie eine gewisse Ignoranz (in der ganzen Bandbreite von Unwissenheit bis Missachtung) in Bezug auf die Informa-tik, die vermeintlich nur ein Fach für Freaks und Nerds ist. Andererseits liegt die immer wieder aufkommende Forderung nach einem Pflichtfach zwar in der Logik eines Bil-dungssystems, das die Inhalte dessen, was als allgemeinbildend angesehen wird, wei-testgehend über Pflichtfächer definiert. Dabei werden jedoch zugleich die Performanz-probleme übersehen, die Pflichtfächer haben. Vor allem Mathematik und Naturwissen-schaften, an denen sich die Informatik immer wieder orientiert hat, haben solche Prob-leme, die so ähnlich auch auf die Informatik zutreffen werden (vgl. hierzu [En14]).  Eine Ursache könnte darin liegen, dass lebenspraktische und wissenschaftspropädeuti-sche Zielsetzungen nicht ohne weiteres im selben Bildungsangebot erreicht werden kön-nen. Heymann hat vor über 20 Jahren für die Mathematik auf der Grundlage seiner Auf-gaben allgemeiner Bildung einen Vorschlag unterbreitet, der ein drei Stufen umfassen-des Kurssystem vorsieht. Auf der ersten Stufe sollen nur die lebensnotwendigen Inhalte vermittelt werden. Auf der zweiten Stufe, die dann nicht mehr verpflichtend ist, die darüber hinausgehenden und auf der dritten die speziell studienvorbereitenden. Für die Mathematik konkretisiert er: Wäre Lebensvorbereitung die einzige Aufgabe von Allge-meinbildung, würden die ersten sieben Jahre Mathematik ausreichen, in denen die Schü-ler das bürgerliche Rechnen inklusive der Prozent- und der Zinsrechnung und die ele-mentare Geometrie erlernen. [He96; 151ff] Für die Schulinformatik hat man bisher nicht wirklich explizieren können, was solche basale Qualifikationen sein könnten. Auch die Kompetenzerwartungen der Sekundarstufe I [GI08] und für die Primarstufe [GI19] ste-hen in der Tradition des algorithmenorientierten Ansatzes, der– wie im folgenden Ab-schnitt gezeigt wird – vor allem fachwissenschaftliche Perspektiven fokussiert.  3 Ältere bis heute gültige Bestandaufnahmen Ziel dieses Abschnitts ist es zu zeigen, dass nicht nur die fachübergreifenden, sondern auch die fachbezogenen Ansätze blinde Flecken in Bezug auf die drei verschiedenen zu berücksichtigenden Perspektiven aufweisen. Dazu wird zunächst auf Peschkes 1989 ver-öffentlichte Bestandsaufnahme eingegangen, mit der er auf der eine „Krise des Informa-Bildung in der digital vernetzten Welt 173 4    Dieter Engbring   tikunterrichts“ für die 1990er Jahre prognostizierte [Pe89]. Insbesondere reflektiert er darin die Beziehung von Informatikunterricht und ITG/IKG (3.1). Aus der kurz darauf veröffentlichten Bestandsaufnahme von Forneck [Fo92] zu den bis dahin vorliegenden fachdidaktischen Konzepten der Informatik geht zudem hervor, welche Herausforderun-gen die angestrebte Verbindung der drei Perspektiven mit sich bringen (3.2), die  – das wird abschließend gezeigt – bis heute allenfalls im Ansatz gelöst sind. Hier geht es auch um die Frage, ob und wie lebenspraktische und darüber hinaus reichende (wissenschaft-liche) Ziele überhaupt miteinander verzahnt werden können (3.3).  3.1 Zur „Krise des Informatikunterrichts“ Der Aufsatz zur prognostizierten Krise des Informatikunterrichts ist eigentlich eine Be-standsaufnahme zum Informatikunterricht nach Einführung der ITG/IKG. Peschke prä-sentiert fünf Schlussfolgerungen, die auf Erfahrungen basieren, aber nicht im strengen Sinne empirisch sind. Diese Schlussfolgerungen sind letztlich Hypothesen zum damali-gen Stand der Informatik in der Schule: 1. Der Stellenwert und Qualität des Informatik-unterrichts geben keinen Anlass zur Zufriedenheit; die Inhalte sind durch die partielle Einführung von Leistungskursen weiter diversifiziert worden. 2. Der 'Bildungskern' ist undeutlich geworden. Die Programmiersprache ist nicht mehr von zentraler Bedeutung. Dennoch konnten Algorithmen- und anwendungsorientierte Zugänge nicht auf einander bezogen werden. 3. Fachübergreifende inhaltliche Anforderungen wie die Diskussion um gesellschaftliche Aspekte lösen Unsicherheiten aus. Es fehlt diesbezüglich an ent-sprechenden Leitbegriffen und Grundkategorien. 4. Aufgrund der medialen Bindung an Hard- und Software kann man sich in der Informatik kaum auf Konstantes, Fundamenta-les und Exemplarisches besinnen. Im Informatikunterricht wird die Trennung zwischen Inhalt und Medium vielfach aufgehoben. 5. Die Grundbildung kann den Bedarf an in-formatischer Bildung nicht befriedigen. Der Bedarf wird wachsen, um ein Verständnis zu den neuen Technologien und deren Auswirkungen wirklich fördern zu können. [Pe89; 91ff] Erst durch die letzte Schlussfolgerung wird aus den Befunden in 1. bis 4. eine Kri-se. Wäre informatische Bildung prinzipiell verzichtbar, könnte Informatik als Wahl-pflichtfach oder gar im AG-Bereich verbleiben. Die Diskussion um ihren Beitrag zur Bildung würde sich erübrigen. Rückblickend hat sich diese fünfte Hypothese bestätigt. Nicht nur die »Dagstuhl-Erklärung« [GI16b] weist darauf hin. Allerdings stellt sich auch die Frage, ob der Informatikunterricht – zumindest mit seinen derzeitigen Curricula und Umsetzungen – dazu geeignet ist. Die Zweifel ergeben sich u. a. aus der Reflexion der Schlussfolgerungen Peschkes.  Die Diversifizierung der Inhalte konnte trotz der Anstrengungen der Fachdidaktik Infor-matik nicht eingedämmt werden. Zwar haben die „fundamentalen Ideen der Informatik“ [Sc93] und danach auch die Bildungsstandards für die Sekundarstufen [GI08, GI16a] ei-nen Beitrag zur Kanonisierung bzw. Konsolidierung geleistet. Diese kommen aber kaum zum Tragen, da sich insbesondere die mediale Bindung den Informatikunterricht immer wieder verändert hat: Dies betrifft auch die immer wieder neue Entwicklungsumgebun-gen (z. B. BlueJ) sowie Mini-Welten (z. B. Greenfoot, Scratch) und zudem immer neue 174 Dieter Engbring Informatik und »Digitalisierung«   5  'Tangibles‘ (LEGO-Mindstorms, Raspberry Pi, Arduino, Calliope etc.).5 Zudem hat auch in Bezug auf die fachübergreifenden Anforderungen keine Ablösung von der technologi-schen Entwicklung stattgefunden. Dies betrifft vor allem die Thematisierung gesell-schaftlicher oder kultureller Aus- bzw. Wechselwirkungen, die sich auch immer an gera-de aktuellen oder neuartig erscheinen Anwendungen der Informatik orientieren. Deren Thematisierung ist außerdem nur schwach mit den anderen Zielen verbunden, wie u. a. die Bestandaufnahme von Forneck im folgenden Unterabschnitt zeigt.  3.2 Revision der Ansätze informatischer Bildung 1992 legte Forneck eine Revision der bis dahin vorliegenden fachdidaktischen Ansätze vor, die empirisch fundiert ist.6 Er hat Unterrichtseinheiten gemäß dieser Ansätze gestal-ten, durchführen und analysieren lassen. Dabei wird deutlich, dass keiner der untersuch-ten Ansätze alle sich selbst gesetzten Ziele erreicht [Fo92]. In einem ersten Schritt wird auf Fornecks Erkenntnisse zum algorithmenorientierten Ansatz eingegangen, der sich in seinem Begründungszusammenhang auch auf die drei Perspektiven bezieht, [GI76] und im zweiten Schritt dann auf den anwendungs- und den benutzungsorientierten Ansatz, die dies auch tun. Forneck beschreibt, dass der algorithmenorientierte Ansatz zwar die Ziele erreicht, die die Wissenschaftspropädeutik betreffen, die anderen Perspektiven jedoch weitestgehend unberücksichtigt lässt. Er schreibt: „[N]ormative und subjektive Fragen [fallen] aus dem Horizont der Problemstellung einer algorithmenorientierten Wirklichkeitskonstruktion … Die additive Hinzufügung von Fragen der Bewertung gesellschaftlicher Auswirkun-gen der Informatik verdankt sich der transzendentalen Trias von Objektivität, Informati-on und Subjektivität. Die ersten beiden Regionen der algorithmischen Weltkonstitution sind, da rationalisierbar, eigentlicher Gegenstand des Unterrichts. Die letzte Wirklich-keitsregion ’Subjektivität’ bleibt dem algorithmischen Denken unfassbar. Deshalb kön-nen in algorithmenorientierten Konzeption im 'eigentlichen' Unterricht Fragen normati-ven Richtigkeit und der subjektiven Wahrhaftigkeit nicht integriert werden, weshalb sie additiv hinzugefügt werden müssen.“ [Fo92; 177]  Die anderen eher auf die Lebenspraxis ausgerichteten Ansätze (namentlich der benut-zungsorientierte Ansatz, der maßgeblich von der ITG/IKG bestimmt ist sowie der an-wendungsorientierte, der als expliziter Gegenentwurf zum algorithmenorientierten ge-staltet wurde) erreichen die selbstgesteckten Ziele ebenso wenig. So schreibt Forneck ab-schließend zum anwendungsorientierten Ansatz: „[Es] wurde aufgewiesen, dass es in den untersuchten Unterrichtsreihen nicht gelingt, nach einer Algorithmisierung und Programmierung diese Tätigkeiten auf gesellschaftliche Fragestellungen zurückzubezie-hen. Dies liegt auch an der Komplexität und Voraussetzungshaftigkeit der Algorithmi-sierung und Programmierung.“ Zudem führt Forneck aus, dass es diesen Ansätzen nicht                                                            5 Tatsächlich ist dies nur eine Arbeitshypothese, die hier nicht ausführlich erörtert werden kann.  6 Auch der Autor dieses Aufsatzes hat Fragen zu Fornecks Methodik. Die Ergebnisse zu den Herausforderun-gen der Verbindung der drei in Frage stehenden Perspektiven scheinen hiervon jedoch unabhängig.  Bildung in der digital vernetzten Welt 175 6    Dieter Engbring   gelungen ist, den Begriff 'Anwendung' zu klären: Ist Anwendung im Sinne von 'Applica-tion' oder im Sinne der Anwendung informatischer Denkweisen gemeint? [ebd.; 229f] Insgesamt resümiert er, dass man in allen ihm vorliegenden Ansätzen „den eigentümli-chen Charakter technischer Objektivität.“ [ebd.; 272] unberücksichtigt lässt. „Dem kon-struktiven Charakter der Technik muss ein konstruktiver Charakter (Informations)tech-nischer Bildung entsprechen. Dieser nicht analytische, sondern konstruktive Charakter ist die eigentliche fachdidaktische Herausforderung, die mit der unterrichtlichen Behand-lung von Technik verbunden ist.“ [ebd.; 273] Diese Herausforderung beschreibt er wie folgt: So „vermag ein Informatikunterricht die Leistung traditioneller Fächer insofern nicht erreichen, weil die Technisierung der Lebenswelt einen Entwicklungsstand ange-nommen hat, der es nicht mehr möglich erscheinen lässt, dass Individuen verstehende Rekonstruktionen der Wirklichkeit allein, sozusagen als Ausfluss eines wie auch immer gearteten Fächerkanons, zu leisten vermöchte.“ [ebd.] Allerdings leisten auch fächer-übergreifende Ansätze dieses wohl nicht, weil sie die Informatik nicht miteinbeziehen. Diese Herausforderung wiederum ist allerdings aus der Didaktik der Informatik heraus allein nicht zu lösen, wohingegen die Integration der Sichten anderer Fächer in die In-formatik von der Didaktik der Informatik geleistet werden kann. Die damit verbundenen Herausforderungen sind bis heute weiterhin ungelöst.  3.3 Zu den bis heute ungelösten Herausforderungen In der Didaktik der Informatik hat man sich kaum mit Fornecks Aufforderungen befasst, die didaktische Analyse aus Sicht der Begriffe 'Anwendung' und 'Technik' zu intensivie-ren. Es wäre darum gegangen zu klären, auf was sich Anwendung bezieht (Denkweisen oder Informatiksysteme) und den (besonderen) technischen Charakter der Informatik zu berücksichtigen. Stattdessen hat man sich vornehmlich an der Mathematik – wie oben schon dargestellt – und deren Bildungsziele orientiert, insbesondere auch, was die über das Fach hinausreichenden Ziele betrifft. Diese werden in der Informatik vor allem unter der Überschrift »Computational Thinking« (CT) propagiert. 'Informatisches Denken' (als nicht direkte aber nahliegende Übersetzung) wird als durch die Informatik und auch in vielen anderen Bereichen anwendbares Ziel ausgegeben. CT setzt damit auf 'Anwendung der Denkweisen' statt auf 'Anwendungen der Informatik'.  Ursprünglich steht, wie Denning, Tedre und Youngpradit beschreiben, CT im direkten Zusammenhang mit der Entwicklung programmierbezogener Fähigkeiten. Diese werden dann als auf die Lebenswirklichkeit der Lernenden übertragbar dargestellt. Hierzu stellen Denning u. a. jedoch dar, dass viele Lernende den hier notwendigen Transfer offenbar nicht leisten. Sie sehen gar in diesen über die Informatik hinausreichenden Deutungen informatischer Denkweisen sogar einen „computational chauvinism“ [DTY17; 33].  Bezüglich des CT wird in den letzten Jahren ausdrücklich auf J. Wing Bezug genom-men, die 2006 die Diskussion darum wiederbelebt hat. Weniger Beachtung findet, dass sie dabei Widersprüchliches fordert. Unter der Überschrift „What it is, what it isn’t“ benennt sie u. a. zwei Ausschlüsse: „Ideas, not artifacts“ sowie „Conceptualizing, not 176 Dieter Engbring Informatik und »Digitalisierung«   7  programming” während sie andererseits schreibt „Complements and combines mathema-tical and engineering thinking” [Wi06; 35]. Die Komplementarität nimmt auf den beson-deren technischen Charakter der Informatik Bezug. Aber wie soll die Komplementarität verstanden werden, wenn man wirklich die Artefakte (Informatiksysteme) und das Pro-grammieren außen vor lässt? Man würde tatsächlich den technischen Charakter der In-formatik negieren. Außerdem wird nicht der Versuch unternommen, die anwendungsbe-zogene Perspektive für die Informatik zu klären. Dazu müsste es eigentlich 'Conceptuali-zing within programming’ sowie 'Ideas by artifacts' heißen. Aus Letzterem würde sich ein rekonstruktives bzw. sogar experimentelles Vorgehen ergeben.  So bezieht CT in der Deutung von J. Wing zwar den (besonderen) technischen Charakter der Informatik mit ein, schlägt sich allerdings in der Deutung des Begriffes Anwendung einseitig auf die Seite der Anwendung der Denkweisen, da sie die Informatiksysteme ausblendet.  Die durchaus vorhandenen Zusammenhänge von Anwendung der Denkwei-sen und Artefakten können so kaum verstanden werden. Diese besser zu verstehen, hat Peschke einen Ansatz vorgelegt [Pe90]. Dieser Vorschlag konnte jedoch in der Didaktik der Informatik nicht überzeugen. Zu nah positioniert er die Schulinformatik in der Nähe des Lernbereichs Arbeitslehre/Technik. Unter anderem definiert Peschke in diesem Auf-satz Rollen im Umgang mit – wie man heute sagen würde – Informatiksystemen, auch um Unterschiede zur ITG/IKG darzustellen. Beide Bildungsangebote adressieren diese vier Rollen, wenn auch in unterschiedlicher Ausprägung. Diese Rollen definiert er mit „Betroffener, Bediener, Benutzer und Gestalter“.7 Eine im Unterschied zu dieser norma-tiven Setzung empirisch fundierte Kategorisierung des Umgangs mit Informatiksystemen hat viele Jahre später M. Knobelsdorf mit ihrer Analyse von Computernutzungsbiogra-fien vorgelegt. Sie nennt auch vier Umgangsweisen: „ausprobieren“, „anwenden“, „ver-ändern“ und „erzeugen“. Als zusätzliches Ergebnis kann sie zeigen, dass „Erzeugen“ nur von informatik-affinen Personen ausgefüllt wird [Kn08]. Damit stellt sich insbesondere die Frage, ob es klug ist, den Informatikunterricht beim 'erzeugen' (gestalten) zu starten. Im folgenden Abschnitt darzustellenden Zugang wird entsprechen beim „Ausprobieren“ bzw. „Anwenden“ angesetzt, um darüber zum „Verändern“ und ggf. zum „Erzeugen“ zu gelangen.  4 Didaktische Aufbereitung via „Dagstuhl in Progress“ Das »Dagstuhl-Dreieck« ist wie die dazugehörige Erklärung zunächst nur ein Kommu-nikationsmittel für bildungspolitische Auseinandersetzung. Es folgt letztlich der Marke-ting-Maxime 'keep it small and simple' und ist deswegen für die bildungspolitische Aus-einandersetzung besonders gut geeignet. Aber auch für den wissenschaftlichen und fach-didaktischen Diskurs bieten die darin benannten Strukturmomente und Prinzipien die Möglichkeit den Prozess der Digitalisierung zu analysieren. Im Zuge einer Tagung mit                                                            7 Er unterscheidet 'Bediener' und 'Benutzer' insofern, da bedienen mit der Unterordnung unter bzw. Anpassung an die Systemrationalität zusammenhängt, während benutzen deutlich selbstständiger und selbstbewusster ist [Pe90; 32] Bildung in der digital vernetzten Welt 177 8    Dieter Engbring   dem programmatischen Titel „Dagstuhl in Progress“ haben neben Informatikern und Medienpädagogen auch Medienwissenschaftler das Dreieck weiterentwickelt und be-grifflich präzisiert. Nach eineinhalb Tagen Diskussionen war man trotz anderer Überle-gungen bei drei Perspektiven geblieben,8 hatte diese jedoch umbenannt. An die Stelle der letztlich zu kurz greifenden Fragen waren nun Inhalte getreten (vgl. hierzu die Darstel-lung in [En18] und Abb. 2 links). Dieses auf der Arbeitstagung weiterentwickelte Drei-eck ist letztlich nur ein weiteres Zwischenresultat der notwendigen begrifflichen Diskus-sionen, die zu führen eine Daueraufgabe ist und nicht durch weitere bildungspolitische Verlautbarungen abgeschlossen werden kann. Es bildet im Folgenden den Ausgangs-punkt einer didaktischen Aufbereitung, die die Ergebnisse der Bestandaufnahmen mit-einbezieht. Es wird ein Zugang skizziert, der beim individuellen Umgang und der gesell-schaftlichen Einbettung ansetzt und zugleich die Rolle von Technik und Techniken für den Menschen diskutiert, womit auch die Beziehung von Anwendungen der Informatik und Anwendung ihrer Denkweisen miteinbezieht ('ideas by artifacts'). Dieser Zugang stellt die Anwendungen der Informatik in einen technikgenetischen Zusammenhang, in dem die Bedeutung von digitalen Artefakten für Kultur, Arbeit und Freizeit herausgear-beitet wird.   Abb. 2: Gegenüberstellung modifiziertes „Dagstuhl-Dreieck“ als (Zwischen-)Ergebnis der  Arbeitstagung „Dagstuhl in Progress“ und Schaubild zur Verortung der vier Bausteine Der weitere Aufbau ergibt sich aus dem Versuch einmal im Uhrzeigersinn um das Drei-eck herum zu gehen (siehe Abbildung 2 rechts). Dabei wird in den ersten drei Baustei-nen auf je zwei Perspektiven Bezug genommen. 2. und 3. beziehen sich dann auf die Strukturen und Funktionen solcher 'Medien' unterhalb der sichtbaren Oberfläche. In 2. geht es um die Vernetzung und Medienintegration am Beispiel von Dateiformaten, HTML und http. Diese werden auch in ihrer geschichtlichen Entwicklung ausgehend von der Diskussion um 'Multimedia' aus den 1990er Jahre miteinbezogen. In 3. wird auf das Besondere des technischen Artefakts 'Software' Bezug genommen. Dieses geschieht weniger konstruktiv denn rekonstruktiv. Hier ist Zeit und Raum das Zusammenspiel von                                                            8 So hatte der Tulodziecki in einem auf der Tagung vorliegenden, jedoch unveröffentlichten Handout als Diskussionsbeitrag zur „Dagstuhl-Erklärung“ [GI16b] angeregt, weitere Perspektiven zu berücksichtigen. 178 Dieter Engbring Informatik und »Digitalisierung«   9  modellieren und implementieren ('conceptualizing within programming') zu thematisie-ren. 4. Zum Abschluss wird auf wichtige Normen und Gesetze Bezug genommen, die sich auch aus den Besonderheiten von Software ergeben.  5 Fazit und Ausblick Dieser Rückblick auf frühere didaktische Diskussionen macht deutlich, dass eine Bil-dung in der digital vernetzten Welt wohl drei Perspektiven miteinander verbinden muss. Diese Perspektiven sind Teil der Begründungszusammenhänge für das Fach Informatik, ohne dass in der Praxis eine echte Verbindung dieser Perspektiven hergestellt wird. Al-lerdings leisten auch fachübergreifende Lernbereiche dies nicht. Bildung in der digital vernetzten Welt ist damit zwar ohne Informatik denk-, aber wohl nicht umsetzbar. Der Vorschlag aus Abschnitt 4 beinhaltet den Versuch durch eine technikgenetische Sicht auf die Anwendungen und die Denkweisen der Informatik, Lebensvorbereitung und Wissenschaftspropädeutik zu verbinden. Vielleicht ist diese Verbindung auch nicht mög-lich. Insofern ist Heymanns drei Stufen beinhaltendes Kurssystem eine andere mögliche Lösung, für die hier kein Vorschlag gemacht wird.9 Dieser Aufsatz ist damit die Auffor-derung (auch des Autors an sich selbst) diesen Zugang und die Strukturierung in der Praxis zu evaluieren, der möglicherweise erst in der Sekundarstufe II umsetzbar ist. Auch dort könnte noch ein Beitrag zu einer Bildung in der digitalen vernetzten Welt geleistet werden und die Defizite in der allgemeinen Bildung aufgearbeitet werden.  Literaturverzeichnis [BLK87] Bund-Länder-Kommission für Bildungsplanung und Forschungsförderung (Hrsg.): Gesamtkonzept für informationstechnische Bildung. Materialien zur Bildungsplanung. Heft 16, Bonn, 1987 [DTY17] Denning, P.J.; Tedre, M.; Youngpradit, P.: The Profession of IT. Misconception about Computer Science. Communications of the ACM. March 2017/Vol. 60, No. 3, S. 31 – 33. doi:10.1145/3041047 [En14] Engbring, D.: Zum Verhältnis von Informatik und Naturwissenschaften. Ein Vorschlag zur MINT-Förderung. In: Thomas, M., Weigend, M. (Hrsg.): Informatik und Natur. 6. Münsteraner Workshop zur Schulinformatik - 9. Mai 2014. Books on Demand GmbH, Norderstedt. S. 9 – 18 [En18] Engbring, D.: Überlegungen zu einem Beitrag zur Lehrerbildung in der digital vernetz-ten Welt. Ein auf Erfahrungen gestützter Bericht und Diskussionsbeitrag. In: Thomas, M., Weigend, M. (Hrsg.): Informatik und Medien. 8. Münsteraner Workshop zur Schu-linformatik - 18. Mai 2018. Books on Demand GmbH, Norderstedt. S. 95 – 106                                                            9 Hierzu können die laufenden Projekte im Primar- und unteren Sekundarbereich auch in dieser Hinsicht aus-gewertet werden. Bildung in der digital vernetzten Welt 179 10    Dieter Engbring   [Fo92] Forneck, H. J.: Bildung im informationstechnischen Zeitalter. Untersuchung der fach-didaktischen Entwicklung der informationstechnischen Bildung. Sauerländer, Aarau Frankfurt a. M. Salzburg, 1992 [GI76] Brauer, W. u. a.: Zielsetzungen des Informatikunterrichts. In: Zentralblatt für Didaktik der Mathematik 8 (1976) S. 35-43 [GI08] Gesellschaft für Informatik. Grundsätze und Standards für die Informatik in der Schule Bildungsstandards für die Sekundarstufe I. https://www.informatikstandards.de/ docs/bildungsstandards_2008.pdf (16.2.2019) [GI16a] Gesellschaft für Informatik. Grundsätze und Standards für die Informatik in der Schule Bildungsstandards für die Sekundarstufe II. https://www.informatikstandards.de/ docs/Bildungsstandards_SII.pdf  (16.2.2019) [GI16b] Gesellschaft für Informatik. Bildung in der digital vernetzten Welt. https://gi.de/the-men/detail/dagstuhl-erklaerung-bildung-in-der-digital-vernetzten-welt-1/  (16.2.2019) [GI19] Gesellschaft für Informatik. Kompetenzen für informatische Bildung im Primarbereich https://www.informatikstandards.de/docs/v142_empfehlungen_kompetenzen-primarbereich_2019-01-31.pdf  (16.2.2019) [He96] Heymann, H. W.: Allgemeinbildung und Mathematik. Beltz, Weinheim Basel, 1996 [ITG90] Der Kultusminister des Landes Nordrhein-Westfalen (Hrsg.): Vorläufige Richtlinien zur informations- und kommunikationstechnologischen Grundbildung in der Sekun-darstufe I. Ritterbach. Frechen. 1990 [Kn11] Knobelsdorf, M.: Biographische Lern- und Bildungsprozesse im Handlungskontext der Computernutzung. Dissertation FU Berlin. http://ddi.cs.uni-potsdam.de/ Examensar-beiten/Knobelsdorf2011.pdf (16.2.2019) [KM15] Knobelsdorf, M.; Magenheim, J. u. a.: Computer Science Education in North-Rhine-Westphalia, Germany. A Case Study. ACM Transactions on Computing Education (TOCE) - Special Issue II on Computer Science Education in K-12 Schools Volume 15 Issue 2, May 2015 Article No. 9 ACM New York, NY, USA  doi>10.1145/271631  [KM18] Koerber, B.; Müller, J.: Analoge Erfahrungen. Editorial der Log IN 187/188. S. 3 [KMK17] Kultusministerkonferenz. Strategie der Kultusministerkonferenz. „Bildung in der digitalen Welt“. Beschluss der Kultusministerkonferenz vom 08.12.2016 in der Fas-sung vom 07.12.2017 [Pe89] Peschke, R.: Die Krise des Informatikunterrichts in den neunziger Jahren. In: Brauer, W.; Stetter, F. (Hrsg.): Informatik und Schule 1989: Zukunftsperspektiven der Infor-matik für Schule und Ausbildung, Springer. S. 89-98 [Pe90] Peschke, R.: Grundideen des Informatikunterrichts. Erfahrungen und Perspektiven aus den „alten“ Ländern der Bundesrepublik Deutschland. In: LOG IN 10 Heft 6, S. 25-33   [Sc93] Schwill, A.: Fundamentale Ideen der Informatik. In: Zentralblatt für Didaktik der Mathematik 25 Heft 1 (1993) S. 20-31. [Wi06] Wing, J.: Computational Thinking. Communications of the ACM. March 2006/ Vol. 49, No. 3, 33-35 180 Dieter EngbringArno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Aufgabe ist nicht gleich Aufgabe –Vielfältige Aufgabentypen bewusst in Scratch einsetzenKatharina Geldreich1, Mike Talbot1und Peter Hubwieser1Abstract:Aufgaben sind ein fester Bestandteil jeden Unterrichts und können je nach Einsatz ver-schiedene didaktische Funktionen übernehmen. Auch beim Programmierenlernen spielen Aufgabeneine zentrale Rolle und können bei entsprechender Auswahl und Anwendung den Lernprozess derSchülerinnen und Schüler entscheidend beeinﬂussen. In der internationalen Fachliteratur lassensich verschiedene Frameworks und didaktische Ansätze ﬁnden, die sich damit auseinandersetzen,welche Entwicklung die Lernenden beim Programmierenlernen durchlaufen. Diese Ansätze undeinhergehende mögliche Aufgabenstellungen wurden im Rahmen einer Fortbildungsmaßnahme fürGrundschullehrkräfte zum Thema Algorithmik und Programmierung thematisiert. Damit die Teil-nehmerinnen und Teilnehmern gleichzeitig eine große Vielfalt an Aufgabenstellungen kennenlernen,wurden bei dem Design der Aufgaben bereits bestehende Aufgabenklassiﬁkationen für Programmier-aufgaben herangezogen. Der Praxisbeitrag beschreibt die erwähnten theoretischen Ansätze und zeigt,wie sie bei der Aufgabengestaltung umgesetzt werden können. Unser Fokus liegt darauf, wann welcherAufgabentyp im Lernprozess sinnvoll eingesetzt werden kann. Sämtliche Aufgaben beziehen sichdabei auf die blockbasierte Programmiersprache Scratch.Keywords:Programmieren; Aufgabentypen; Scratch1 EinleitungAufgaben können auf verschiedene Ziele ausgerichtet sein und dementsprechend unter-schiedliche didaktische Funktionen übernehmen. Dabei unterscheidet man grundlegendzwischen Aufgaben, die Lernende beim Aufbau und der Festigung von Wissen und Fä-higkeiten unterstützen, sowie prüfenden Aufgaben zur Ermittlung des Leistungsstands[Ri05]. Erstere stellen für Lehrkräfte ein zentrales Gestaltungselement für den Unterrichtdar und können ihnen helfen, Lernprozesse gezielt zu steuern. Auch beim Erlernen einerProgrammiersprache sind geeignete Aufgaben wichtig, um den Lernprozess der Schülerin-nen und Schüler bei entsprechender Auswahl und Anwendung entscheidend zu beeinﬂussen.Wie der Prozess des Programmierenlernens gestaltet werden sollte, ist nicht abschließendgeklärt und stellt Lehrende wie Lernende vor Herausforderungen [MR02]. VerschiedeneAutoren beschreiben didaktische Ansätze, in denen die Lernenden zunächst mit bereitsbestehenden Programmen arbeiten und diese immer weiter modiﬁzieren, bis sie schließlichselbstständig programmieren. Diese Ansätze und damit zusammenhängende Aufgabenwaren Gegenstand einer Fortbildung für Grundschullehrkräfte zum ThemaAlgorithmen und1Technische Universität München, School of Education, Professur für Didaktik der Informatik, Arcisstr. 21,80333 München,{katharina.geldreich,mike.talbot,peter.hubwieser}@tum.decba doi:10.18420/infos2019-18Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1812 Katharina Geldreich, Mike Talbot, Peter HubwieserProgrammierung. Um die Lehrkräfte gleichzeitig mit unterschiedlichen Aufgabentypen inScratch vertraut zu machen, wurde bei der Aufgabengestaltung eine bestehende Taxonomiefür Programmieraufgaben herangezogen. Dieser Beitrag gibt zunächst einen Einblick in diezuvor erwähnten didaktischen Ansätze und Aufgabentaxonomien und beschreibt, wie imKontext der Fortbildung damit gearbeitet wurde. Um einen möglichst praxisnahen Einblickzu geben, werden verschiedene konkrete Beispielaufgaben beschrieben, die sich auf dievisuelle Programmiersprache Scratch beziehen. Diese können sowohl im Fortbildungs- alsauch im Unterrichtskontext eingesetzt werden.2 Theoretischer Hintergrund2.1 Sca olding im UnterrichtDer Begri Sca olding(zu dt.Gerüst) bezieht sich im pädagogisch-psychologischenKontext auf die Unterstützung eines Lernprozesses durch verschiedene Maßnahmen wieAnleitungen, Denkanstöße oder andere Hilfestellungen [Sc06]. Diese Maßnahmen sollen dieSchülerinnen und Schüler auf dem Weg zum selbstständigen Handeln begleiten und werdenmit zunehmendem Können zurückgenommen. Sca olding kann auf verschiedenen Ebenenstattﬁnden und sich auf die Planung von Lernaufgaben und Unterrichtssequenzen (Makro-Ebene), die Strukturierung von Lernaufgaben in einzelne Arbeitsschritte (Meso-Ebene)oder die Interaktion zwischen Lehrkraft und Lernenden (Mikro-Ebene) beziehen [Va96].Im Kontext der Informatikdidaktik untersuchen sowohl Lee et al. [Le11] als auch Sentanceund Waite [SW17], welche Entwicklung die Schülerinnen und Schüler auf dem Weg zumselbstständigen Programmieren durchlaufen sollten und wie man sie im Sinne des Sca oldingdabei unterstützen kann. Lee et al. entwickelten dasUse-Modify-Create-Lehrkonzept, indem die Lernenden zunächst mit bereits bestehenden Programmen arbeiten und dieseschrittweise modiﬁzieren bis sie schließlich eigene Programme erstellen. Daraufhin folgt einiterativer Prozess des Testens, Analysierens und der Weiterentwicklung. Sentance und Waitestellen den Lehransatz PRIMM vor, der unter anderem auf der Arbeit von Lee et al. basiert.PRIMM ist die Abkürzung fürpredict,run,investigate,modifyundmake(zu dt.vorhersagen,ausführen,untersuchen,anpassen,machen). In beiden Ansätzen arbeiten die Lernendenzunächst mit bestehenden Programmen, nehmen kleinere und größere Veränderungen daranvor und erstellen schließlich komplette Programme eigenständig (Abb.1).Abb. 1: Sca olding beim Programmierenlernen182 Katharina Geldreich et al.Aufgabe ist nicht gleich Aufgabe – Vielfältige Aufgabentypen bewusst in Scratch einsetzen 32.2 AufgabentypenAufgaben sind ein zentraler Bestandteil des Informatikunterrichts und spielen sowohl für dasErarbeiten neuer Inhalte als auch für die Ermittlung des Leistungsstands eine wichtige Rolle.Besonders beim Programmierenlernen wird betont, dass sich Expertise nur durch praktischeAufgaben und intensives Üben einstellen kann [HM06]. Für die Entwicklung von Aufgabenlassen sich verschiedene Qualitätskriterien ﬁnden, an denen sich Lehrende orientierenkönnen [BHP14]. Neben der Berücksichtigung von Faktoren wie Kompetenz- und Kontext-orientierung wird empfohlen, die Aufgabentypen zu variieren. Welche Aufgabentypen imKontext des Programmierens verbreitet sind, wurde mehrfach untersucht. Dabei entstandenverschiedene Aufgabentaxonomien, die z.B. deduktiv durch die Analyse verschiedenerCurricula [Bo08] sowie induktiv aus der Analyse von Programmieraufgaben abgeleitetwurden [RBH13]. Ruf et al. [RBH15] unterscheiden zwölf verschiedene Aufgabentypen,die sich durch die zur Lösung erforderlichen Schülerhandlungen (z.B. Code testen, Codeschreiben) und die Art der Darstellung der gegebenen Informationen (z.B. Text, Code,Bilder) unterscheiden.3 KontextUm zu beurteilen, ob sich Aufgaben für die jeweilige Zielgruppe und deren Kenntnisstandeignen, ist es wichtig, dass Lehrkräfte entsprechende Kriterien kennenlernen [HB14]. Nebenallgemeindidaktischen Kriterien wie z.B. O enheit der Aufgabe, Lebensweltbezug [Ma10],sollten Aufgaben immer auch im Kontext der jeweiligen Fachdidaktik gesehen werden. DerBereichAufgabenist daher auch in Modellen des fachdidaktischen Wissens (pedagogicalcontent knowledge) für die Informatik zu ﬁnden [Hu13].Zur Ausbildung von unterrichtsmethodischem Know-How wurden Grundschullehrkräfte imRahmen einer mehrtägigen Fortbildungsmaßnahme mit verschiedensten Programmieraufga-ben konfrontiert. Um die Programmierkenntnisse der Teilnehmenden weiter zu festigen,wurden sämtliche Programmieraufgaben zunächst eigenständig bearbeitet. Im Anschlusswurde derUse-Modify-Create-Ansatz, PRIMM sowie die Aufgabentaxonomie von Rufet al. eingeführt (vgl. Punkt 2). Um die Theorie mit der Praxis zu verknüpfen, ordnetendie Lehrkräfte die Aufgaben im Anschluss in die Sca olding-Kategorienuse,modifyundcreateein. Hier arbeiteten die Lehrkräfte zu zweit mit einem Satz Kärtchen, auf denendie Programmieraufgaben in Miniatur abgebildet waren und die entsprechend gruppiertwerden mussten. Dieses Vorgehen förderte die Auseinandersetzung mit den verschiedenenAufgabentypen in Bezug auf die Einordnung in die Sca olding-Kategorien.Die Fortbildung ist Teil des ProjektsAlgoKids – Algorithmen für Kinder, das vom Bayeri-schen Staatsministerium für Unterricht und Kultus gefördert und über einen Zeitraum vonzwei Jahren durchgeführt wird [GTH18]. Im Rahmen des Projekts werden insgesamt 40Grundschullehrkräfte in den BereichenAlgorithmikundProgrammierungfachwissenschaft-lich und fachdidaktisch fortgebildet und bei eigenen Unterrichtsversuchen begleitet.Aufgabe ist nicht gleich Aufgabe 1834 Katharina Geldreich, Mike Talbot, Peter Hubwieser4 AufgabenDie nachfolgende Auswahl zeigt exemplarisch, welche Aufgabentypen im Laufe der Fortbil-dung bearbeitet wurden. Die teilnehmenden Lehrkräfte haben in einer ersten Fortbildungbereits intensiv mit Scratch gearbeitet, der Fokus lag hierbei jedoch vermehrt auf fachwis-senschaftlichen Inhalten, insbesondere den algorithmischen Grundstrukturen.4.1 Programme werden gelesen, ausgeführt, untersucht (use)Programme nachbauen (Code!Code)Ein komplett vorgegebenes Programm wird in Scratch nachprogrammiert und ausgeführt.Im Anschluss daran sollen Stellen markiert werden, bei denen man besonders sorgfältigsein musste (z.B. die Auswahl der richtigen Kostüme, Einfügen derfühlen-Blöcke in einebedingte Anweisung). Der Fokus dieser Aufgabe liegt vorrangig auf der Bedienung vonScratch und der Handhabung der Programmierblöcke.Blöcke erkunden (Code!Text)Die Lernenden ö nen ein bereits bestehendes Scratch-Projekt und führen dieses aus. Aufeinem Aufgabenblatt wird notiert, welche Funktionen die einzelnen Blöcke haben (Abb.2).Aufgaben dieser Form eignen sich besonders für die Einführung von noch unbekanntenBlöcken oder komplett neuen Scratch-Erweiterungen (z.B. die Übersetzungsblöcke inScratch 3).Abb. 2: Blöcke erkunden – Welche Funktion haben die einzelnen Blöcke?Programme lesen (Code!Text)Ein vorgegebenes Programm wird zunächst auf einem Aufgabenblatt gelesen (Abb.3).184 Katharina Geldreich et al.Aufgabe ist nicht gleich Aufgabe – Vielfältige Aufgabentypen bewusst in Scratch einsetzen 5Danach soll beschrieben werden, was passiert, wenn der Mauszeiger unterschiedlichePositionen auf der Bühne einnimmt (z.B. Mauszeiger steht auf Position 2!Schmetterlingbewegt sich in Richtung des Igels). Die Lösungen werden im Anschluss durch Ausführendes Programms überprüft.Abb. 3: Programme lesen – Was passiert nach dem Drücken der Leertaste, wenn der Mauszeiger aufden verschiedenen Positionen steht?Programme lesen und Fehler ﬁnden (Code!Code)Ein vorgegebenes Programm soll auf Fehler überprüft werden. Der Weg eines Marienkäfersdurch ein Raster wird zunächst verfolgt (Abb.4). Im Anschluss sollen Fehler im Programmgekennzeichnet werden, die dazu führen, dass der Käfer nicht bei seinem Ziel, der Blume,ankommt.Programme testen (Code!Text)Es soll getestet werden, ob ein bestehendes Programm das tut, was es soll. Hierzu wurdeein Programm erstellt, in dem eine Zahlenfee zwei durch den Nutzer eingegebene Variablenaddiert und das Ergebnis ausgibt. Die Lernenden füllen eine Tabelle aus, in der sowohl diebeiden Eingaben als auch deren Summe erfasst werden. Zusätzlich soll getestet werden waspassiert, wenn Dezimalzahlen, besonders lange Zi ern oder Wörter eingegeben werden.Aufgabe ist nicht gleich Aufgabe 1856 Katharina Geldreich, Mike Talbot, Peter HubwieserAbb. 4: Programme lesen und Fehler ﬁnden – Wie muss man das Programm verändern, dass derMarienkäfer bei der Blume ankommt?4.2 Programme werden verändert, angepasst, erweitert (modify)Programme debuggen (Code!Text+Code)Ein Programm erfüllt nicht die gewünschte Funktion (Abb.5). Es wird analysiert, wo sichder Fehler beﬁndet und das Programm wird angepasst, um ihn zu beheben. Der Fokus liegthier auf dem genauen Nachvollziehen des Programmablaufs.Abb. 5: Programme debuggen – Warum wechselt der Fisch beim Anklicken der grünen Flagge nichtdie Farbe?186 Katharina Geldreich et al.Aufgabe ist nicht gleich Aufgabe – Vielfältige Aufgabentypen bewusst in Scratch einsetzen 7Programme erweitern (Code+Text!Code)Ein Programm ist in Teilen vorgegeben und soll um weitere Funktionen erweitert werden.Die Bewegung einer Figur lässt sich bereits mit den Pfeiltasten steuern. Das Programm sollso erweitert werden, dass die Figur einen Dialog startet, wenn sie eine andere berührt.Programme optimieren (Code!Code)Ein fertiges Programm, welches die gewünschte Funktion scheinbar erfüllt, wird mittelsverschiedener Fallunterscheidungen untersucht. Der Programmcode soll so optimiert werden,dass die gewünschte Funktion in jeder Situation erfüllt wird. In einem vorgegebenemProgramm läuft eine Maus nacheinander zu verschiedenen Futterquellen. Da die Mausjedoch nur einzelne Koordinaten abläuft, kann sie das Futter nicht mehr ﬁnden, sobald manes auf der Bühne verschiebt. Die Lernenden sollen das Programm so modiﬁzieren, dass dieMaus immer zu ihrem Futter ﬁndet (Abb.6).Abb. 6: Programme optimieren – Mit dem rechten Programm läuft die Maus auch zu ihrem Futter,wenn man die Figuren auf der Bühne verschiebtSzenario in Scratch anpassen (Code+Text!Code)Für ein vorgegebenes Programm soll das Bühnenbild so angepasst werden, dass diegewünschte Funktionalität erfüllt wird. Ein Geist möchte zu seinem Schlüssel (Abb.7).Er kann bereits mit den Pfeiltasten gesteuert werden, ist aber nicht in der Lage, durch dieWand zu seinem Schlüssel zu ﬂiegen. Das Bühnenbild soll so angepasst werden, dass derGeist zu seinem Schlüssel ﬂiegen kann (z.B. durch Verändern der Randfarbe, Vergrößerndes Rechtecks).Abb. 7: Szenario in Scratch anpassen – Wie kann man das Bühnenbild verändern, dass der Geist zuseinem Schlüssel kommt?Aufgabe ist nicht gleich Aufgabe 1878 Katharina Geldreich, Mike Talbot, Peter Hubwieser4.3 Programme werden eigenständig erstellt (create)Programmieren nach bildlichen Vorgaben (Bild!Code)Eine vorgegebene Bildergeschichte soll in Scratch nachprogrammiert werden (Abb.8).Dabei kann variiert werden, ob die Lernenden zusätzlich zu der Programmierung der Figurz.B. auch die Bühnenbilder selbst gestalten sollen.In der Klassiﬁkation von Ruf et al. [RBH15] gibt es den AufgabentypDiagramm!Code,in dem ein Programm zu einem Diagramm (z. B. Klassen-, Zustands-, Sequenzdiagramm)geschrieben wird. Da Diagramme dieser Form in der Grundschule nicht eingeführt werden,wurde stattdessenbildliche Vorgabengewählt.Abb. 8: Programmieren nach bildlichen Vorgaben – Die Bildergeschichte soll in Scratch implementiertwerdenProgrammieren nach textlichen Vorgaben (Text!Code)Das Schreiben von Code nach textlichen Vorgaben gehört zu den häuﬁgsten Aufgabentypenfür Programmieranfänger [RBH15]. Es kann dabei variiert werden, wie detailliert manvorgibt, was programmiert werden soll.Es soll eine Abwandlung des SpielsBreakoutprogrammiert werden. Dazu bekommen dieLernenden eine kurze Beschreibung des Spiels:188 Katharina Geldreich et al.Aufgabe ist nicht gleich Aufgabe – Vielfältige Aufgabentypen bewusst in Scratch einsetzen 9Ein Erdball prallt vom Rand der Bühne und von einem Paddel ab. Er darf den Boden unterdem Paddel nicht berühren – sonst stoppt das Spiel. Mit dem Paddel, das man als Spielervon rechts nach links steuern kann, versucht man den Erdball vom Boden fernzuhalten.Programmieren eigener Ideen nach textlichen Vorgaben (Text!Code)Auch wenn man vorgibt, was programmiert werden soll, kann man die Aufgaben sogestalten, dass die Lernenden dennoch ihre eigenen Ideen umsetzen können. An einemWeihnachtsbaum hängen verschiedene Kugeln. Diese sollen so programmiert werden, dassjede Kugel beim Anklicken etwas anderes macht (z.B. Ton abspielen, Farbe ändern, sichbewegen).5 FazitIm Beitrag wurde gezeigt, wie man durch variierende Aufgaben den Lernprozess desProgrammierens gezielt steuern kann. Dabei handelt es sich keinesfalls um eine strengeHandlungsempfehlung, die Aufgaben sollen vielmehr dazu anregen, den eigenen Blick fürdas Potenzial unterschiedlicher Aufgabentypen zu schärfen.Das Feedback der Grundschullehrkräfte, die an der beschriebenen Fortbildungsmaßnahmeteilgenommen haben, war durchweg sehr positiv. Es wurde berichtet, dass in vielen Büchern,die sich mit dem ThemaProgrammieren für Kinderauseinandersetzen, nur Aufgaben bzw.Anleitungen zu ﬁnden sind, in denen Programme schrittweise nachgebaut werden müssen.Sich damit auseinanderzusetzen, wann dieses Kopieren von Code sinnvoll sein kann undwie man die Schülerinnen und Schüler darüber hinaus auf dem Weg zum selbstständigenProgrammieren unterstützen kann, wurde von den Lehrkräften als sehr hilfreich eingeschätzt.Das Programmieren im Kontext der Grundschule ist für die Lehrkräfte eine sehr neueThematik und sie können noch nicht auf einen vergleichbaren Aufgabenpool wie in anderenFächern zurückgreifen. Wir halten es deshalb für umso wichtiger, sie von Beginn an mit denunterschiedlichsten Aufgabenstellungen vertraut zu machen und sie zu befähigen, Aufgabengezielt und bewusst einzusetzen.Literatur[BHP14]Brichzin, P.; Humbert, L.; Puhlmann, H.: Aufgabenkultur im Schulfach Infor-matik. LOG IN 34/1, S. 27–32, 2014.[Bo08]Bower, M.: A Taxonomy of Task Types in Computing. In: Proceedings of the45th annual Design Automation Conference. ACM Press, New York, S. 281–285,2008.[GTH18]Geldreich, K.; Talbot, M.; Hubwieser, P.: O  to new shores: Preparing PrimarySchool Teachers for Teaching Algorithmics and Programming. In (Mühling, A.;Cutts, Q., Hrsg.): Proceedings of the 13th Workshop in Primary and SecondaryComputing Education. ACM Press, New York, USA, S. 1–6, 2018.Aufgabe ist nicht gleich Aufgabe 18910 Katharina Geldreich, Mike Talbot, Peter Hubwieser[HB14]Humbert, L.; Brichzin, P.: Unterrichtskultur und Aufgaben im Informatikunter-richt. LOG IN 34/1, S. 45–53, 2014.[HM06]Hassinen, M.; Mäyrä, H.: Learning Programming by Programming: a CaseStudy. In (Berglund, A.; Wigbberg, M., Hrsg.): Proceedings KolliCalling 2006.S. 117–119, 2006.[Hu13]Hubwieser, P.; Berges, M.; Magenheim, J.; Schaper, N.; Bröker, K.; Margari-tis, M.; Schubert, S.; Ohrndorf, L.: Pedagogical content knowledge for computerscience in German teacher education curricula. In (Caspersen, M. E.; Knobels-dorf, M.; Romeike, R., Hrsg.): Proceedings of the 8th Workshop on Primaryand Secondary Computing Education. ACM Press, New York, USA, S. 95–103,2013.[Le11]Lee, I.; Martin, F.; Denner, J.; Coulter, B.; Allan, W.; Erickson, J.; Malyn-Smith, J.; Werner, L.: Computational thinking for youth in practice. ACMInroads 2/1, S. 32, 2011.[Ma10]Maier, U.; Kleinknecht, M.; Metz, K.; Bohl, T.: Ein allgemeindidaktischesKategoriensystem zur Analyse des kognitiven Potenzials von Aufgaben. Beiträgezur Lehrerinnen- und Lehrerbildung 28/1, S. 84–96, 2010.[MR02]Milne, I.; Rowe, G.: Di culties in Learning and Teaching Programming —Views of Students and Tutors. Education and Information Technologies 7/1,S. 55–66, 2002.[RBH13]Ruf, A.; Berges, M.; Hubwieser, P.: Types of assignments for novice programm-ers. In (Caspersen, M. E.; Knobelsdorf, M.; Romeike, R., Hrsg.): Proceedingsof the 8th Workshop on Primary and Secondary Computing Education. ACMPress, New York, USA, S. 43–44, 2013.[RBH15]Ruf, A.; Berges, M.; Hubwieser, P.: Classiﬁcation of Programming TasksAccording to Required Skills and Knowledge Representation. In (Brodnik, A.;Vahrenhold, J., Hrsg.): Informatics in Schools. Springer, Heidelberg, S. 57–68,2015.[Ri05]Rieck, K.: Gute Aufgaben. IPN, Kiel, 2005.[Sc06]Schnotz, W.: Pädagogische Psychologie: Workbook. Beltz, PVU, Weinheim,Basel, 2006.[SW17]Sentance, S.; Waite, J.: PRIMM: Exploring pedagogical approaches for teachingtext-based programming in school. In (Barendsen, E.; Hubwieser, P., Hrsg.):Proceedings of the 12th Workshop on Primary and Secondary ComputingEducation. ACM Press, New York, USA, 2017.[Va96]Van Lier, L.: Interaction in the Language Curriculum - Awareness, Autonomyand Authenticity. Longman, Harlow, 1996.190 Katharina Geldreich et al.cbaHerausgeber et al. (Hrsg.): 18. GI-Fachtagung Informatik und Schule,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 11Informatik spannend präsentieren – Ein Einstieg in denStudiengang Lehramt InformatikLisa Göbel1, Lutz Hellmig2Abstract:Studiengänge für das Lehramt Informatik verzeichnen seit Jahren eine zu hohe Schwund-quote. Als eine der Ursachen wird der mangelnde Praxisbezug besonders am Anfang des Studiumsangesehen. Da Studienanfänger die erforderlichen Kompetenzen für die Erteilung von Unterrichtüberwiegend in späteren Semestern erwerben, müssen andere Formen didaktischer Praxis für dieStudieneingangsphase gefunden werden. Im Artikel wird über die Entwicklung, Durchführung undEvaluation eines Pilotprojektes berichtet, in dem sich vor allem Studierende des ersten Semestersinformatische Sachverhalte selbst erschließen und sie für die Präsentation in einem populärwissen-schaftlichen Format didaktisch aufbereiten.Keywords:Praxisbezug; Studieneinstieg; Lehramt Studium; Informatik; Studienabbruch1 Motivation und ZielsetzungAn der Universität Rostock wurden Untersuchungen zum „Studienerfolg und-misserfolg imLehramtsstudium“ durchgeführt. Die Ergebnisse der Studie zeigen, dass im Lehramtsstu-dium Informatik nur 5% aller Studierenden das Studium erfolgreich in Regelstudienzeitabsolvieren. 10% der Studierenden studieren nach der Regelstudienzeit weiterhin LehramtInformatik. 85% der Studierenden brechen das Studium ohne Abschluss ab. Die Schwund-quote ist nach dem zweiten Fachsemester besonders hoch [Ra18].Eine mögliche Ursache für die zu hohe Schwundquote könnte der geringe Praxisbezugin den ersten Studiensemestern sein. Die Studierenden belegen erst im vierten Semesterdie Grundvorlesung der Didaktik des Informatikunterrichts. Die Schulpraktische Übungﬁndet im fünften oder sechsten Semester statt. Bis zum vierten Semester besteht dasStudium ausschließlich aus Modulen der Fachwissenschaft. Diese Module entstammen fastausnahmslos dem Bachelor-Studiengang Informatik.Ramm et al. erkennen einen Zusammenhang zwischen dem Praxisbezug im Lehramtsstudi-um und dem erfolgreichen Abschluss. Insbesondere kann ein verbesserter Praxisbezug diezu hohe Schwundquote mindern. [Ra98]1Universität Rostock, Institut für Informatik, Albert-Einstein Straße 22, 18051 Rostock, Deutschlandlisa.goebel@uni-rostock.de2Universität Rostock, Institut für Informatik, Albert-Einstein Straße 22, 18051 Rostock, Deutschlandlutz.hellmig@uni-rostock.decba doi:10.18420/infos2019-19Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 19112 Lisa Göbel, Lutz HellmigDie Scha ung eines frühen authentischen Praxisbezugs stellt aus mehreren Gründen ei-ne gewisse Herausforderung dar. Die Studierenden haben zu Beginn des Studiums nurwenig fachliche sowie noch keine didaktischen Kompetenzen erworben. Damit kommtdas Unterrichten in einer Klasse im ersten Semester nicht als Mittel des Praxisbezugsin Frage. Abgesehen von dem Recht der Schülerinnen und Schüler auf guten Unterricht,das eine solche Maßnahme per se ausschließt, spricht noch ein weiterer wichtiger Grunddagegen: Studierende des ersten Fachsemesters wären mit der komplexen Aufgabe derPlanung und Durchführung von Fachunterricht überfordert. Die sich daraus ergebendennegativen Erfahrungen der Studierenden mit der Schulpraxis wirken sich nachhaltig auf dieMotivation der Studierenden aus.Mit der Entwicklung eines Pilotprojektes sollten ein früher Praxisbezug und ein sozialesMiteinander unter Umgehung der Risiken hergestellt werden. In Zusammenarbeit mit demZentrum für Lehrerbildung und Bildungsforschung sowie mit Unterstützung des Prorektorsfür Studium und Lehre wurde das Projekt „Informatik spannend präsentieren“ entwickelt.2 Entwicklung des PilotprojektesDas Durchlaufen der wichtigsten Schritte des Planungsprozesses für ein Bildungsangebot istein naheliegendes Szenario für die Herstellung eines Praxisbezugs. Die Studierenden arbeitenim Bereich des fachlichen und fachdidaktischen Professionswissens und damit in zentralenHandlungsfeldern von Lehrpersonen [BK11]. Zum pädagogischen Planungsprozess gehörendie Bestimmung der zu entwickelnden Kompetenzen, die Analyse der Rahmenbedingungen,eine Sachanalyse, didaktische sowie methodische Überlegungen und die Bestimmung derFeinziele.Eine Schauvorlesung mit populärwissenschaftlichem Charakter trägt diesen AnforderungenRechnung. Sie ist weniger komplex als die Gestaltung von Unterricht, da eine Reihe vonAnforderungen wie die Einbettung einer Stunde in die Sto einheit oder die Berücksichtigungspezieller Attribute der Lerngruppe keine Rolle spielt. Lernziele im engeren Sinne müssenebenfalls nicht formuliert werden.Die Vorgabe eines organisatorischen und inhaltlichen Rahmens dient der weiteren Reduktionder von den Studierenden zu klärenden Fragen.Jede Gruppe bekommt den Auftrag, eine 15- bis 20-minütige Präsentation zu entwickelnund diese am Ende des Semsters im Rahmen einer ö entlichen Abschlussveranstaltungmit Wettbewerbscharakter zu präsentieren. Auf Grundlage der besten drei von fünf imSeminar entwickelten Ideen wird daraufhin eine insgesamt 30-minütige Schauvorlesungentwickelt und auf der Langen Nacht der Wissenschaften präsentiert. Das Publikum bestehtaus Kindern im Alter ab 10 Jahren (und ihren Begleitern) mit wissenschaftlichen Interesse,aber ohne tiefere Vorkenntnisse.Die thematische Schwerpunktsetzung wird durch die Betreuer im Vorfeld mit dem Anspruchvorgenommen, ein möglichst allgemeines informatisches Konzept in verschiedenen, demPublikum vertrauten Anwendungsbereichen zu vermitteln. Als geeignetes Prüfkriteriumerweisen sich in diesem Zusammenhang die Merkmale der fundamentalen Ideen [Br60,Sc93,192 Lisa Göbel, Lutz HellmigInformatik spannend präsentieren 13HNR06]. Die Strategie derMinimalisierungerfüllt mit der Anwendbarkeit auf Datenmengeund Speicherbedarf, den Zeitbedarf für Prozesse oder die Mächtigkeit/Reduktion vonSystemen und die mit allen Aspekten verbundenen Kosten das Horizontalkriterium. Aspekteder Minimalisierung sind anschaulich (Repräsentationskriterium) auch Kindern vermittelbar(Vertikalkriterium). Seit jeher werden bei der Konstruktion von Informatiksystemen und derEntwicklung von Modellen – aus Kosten-, Platz- und Zeitgründen – Aspekte der Minimierungbeachtet (Zeitkriterium). Die Erfüllung des Sinnkriteriums wird durch eine Reihe praktischerBezüge augenfällig, wie sie im folgenden Abschnitt bei der Projektrealisierung beschriebenwerden.Für die sich der Grundidee unterordnenden Teilthemen werden Themenvorschläge undLiteraturhinweise vorgegeben, eigene Vorschläge der Studierenden waren ebenfalls möglich.In der Regel besitzen die Studierenden nur eine vage inhaltliche Vorstellung über dieThemen, so dass die selbstständige Aneignung der fachlichen Grundlagen ein maßgeblicherBestandteil des Arbeitsprozesses ist.Um einen motivationalen Anreiz für die Teilnahme am Projekt zu bieten, wird dieses alsWahlpﬂichtmodul mit 3 Leistungspunkten angeboten.3 Realisierung des PilotprojektesDas Lehramtsstudium an der Universität Rostock beginnt jeweils in der ersten Oktoberwoche.Hier ﬁnden sämtliche Einführungsveranstaltungen statt. Anlässlich dieser Veranstaltungwurde das neue Seminar „Informatik spannend präsentieren“ beworben. Das Seminar standunter dem Motto „Minimalisierung – Weniger ist mehr“. Anhand des Beispiels Entropie alsMaß für den Informationsgehalt von Jens Gallenbacher [Ga17] wurde den Studierenden einEinblick in die Thematik gegeben.OktoberEinführungs-veranstaltungPräsenzver-anstaltungenNovemberDezemberJanuarAprilGruppenkon-sultationenMedien-technikGeneral-probeAbschluss-präsentationEnde des SeminarsVorbereitungSchauvor-lesungLange Nacht derWissenschaftenGruppenkon-sultationenAbb. 1: Grobe Zeiteinteilung des PilotprojektesEs haben sich 14 Studierende – davon zwei Studierende des fünften Semesters und ein Stu-dent aus dem neunten Semester – für dieses Seminar entschieden. Von den elf Teilnehmernaus dem ersten Semester waren fünf Studierende aus dem gymnasialen und sechs aus demregionalen Lehramt.Im Rahmen des Seminars fanden sechs Präsenzveranstaltungen für alle Teilnehmer sowievier Konsultationen für die einzelnen Gruppen statt (siehe Abb.1).In den Präsenzveranstaltungen wurden organisatorische Absprachen getro en, ein inhaltli-cher Zugang zum Thema hergestellt, gemeinsam getragene Bewertungkriterien erarbeitetsowie didaktisch-methodische und technische Anregungen zur Aufbereitung und Darstellungdes Themas gegeben. In der letzten Präsenzveranstaltung fand eine Abschlussreﬂexion derInformatik spannend präsentieren 19314 Lisa Göbel, Lutz HellmigPräsentationen statt.Einen ersten inhaltlichen Zugang zu der Idee der Minimalisierung haben die Studierendenüber ein Placemat gefunden (siehe Abb.2).Abb. 2: Mindmap zum Thema Minimalisierung – Ergebnis des Placemats im SeminarZur Bearbeitung in Gruppen wurden sechs Themenbereiche vorgestellt. Auf der Vorschlags-liste standen die Minimalisierung von Automaten, verschiedene Sortier- und Suchverfahren,die Optimierung von Netzwerken, die Datenkomprimierung sowie die Minimalisierungvon Datenbanken. Zu den Themen haben die Studierenden jeweils Literaturempfehlungen[BWF15,Ga17] erhalten. Das Thema „Optimierung von Netzwerken“ wurde nicht gewählt.Eigene Themenvorstellungen wurden nicht eingebracht. Bis auf eine Zweiergruppe wurdendie Themen von Dreiergruppen bearbeitet. Dank der kleinen Gruppen war es den Studie-renden trotz unterschiedlicher Zweitfächer möglich, Termine für Tre en außerhalb desSeminars zu vereinbaren. Bei zu großen Gruppen wäre es zu Terminﬁndungsproblemengekommen.Weiterhin haben die Teilnehmer Bewertungskriterien erarbeitet (siehe Abb.3), die bei derErstellung der Präsentationen beachtet werden mussten. Die Bewertung der Präsentationenauf der Abschlussveranstaltung wurde durch die Jury anhand dieser Kriterien vorgenommen.Im Weiteren haben die Gruppen eine konkrete Sachanalyse zu den von ihnen gewähltenThemen vorgenommen.Auf Basis einer erstellten Sachanalyse in den Gruppen wurden die im Vorfeld entworfendenIdeen in Gruppenkonsultationen mit den Betreuern diskutiert, fokussiert und Möglichkeiteneiner geeigneten Strukturierung und ansprechenden Darstellung besprochen. Mit demNachdenken über mögliche Darstellungsformen ergaben sich kontinuierliche Anlässe füreine wiederholte und vertiefte Sachanalyse. Die Aufgabe, Drehbücher zu erstellen, zwangdie Studierenden ihre Präsentationen gründlich zu planen und detailliert auszuarbeiten.Um die Präsentationen auf die örtlichen Gegebenheiten anzupassen, wurde die Medientech-nik im Hörsaal sowie ihre Funktionsweise durch die Teilnehmer erkundet.194 Lisa Göbel, Lutz HellmigInformatik spannend präsentieren 15Abb. 3: Mindmap zu den Bewertungskriterien – erstellt im SeminarEine Generalprobe vor allen Kursteilnehmern gab den Studierenden die Möglichkeit ihrePräsentation zu üben. Wichtig war das Üben eines zügigen Auf- und Abbaus, sodass bei derAbschlusspräsentation ein schneller Gruppenwechsel gewährleistet wurde. Die Gruppenhaben sich gegenseitig Tipps für die Vorstellung gegeben.Auf der Abschlussveranstaltung vor interessierten Studierenden und Mitarbeitern hat einezehnköpﬁge Jury aus Studierenden und Mitarbeitern die einzelnen Gruppen bewertet. DiePräsentationen der Gruppen wurden durch eine Moderation zu einer zusammenhängendenVorstellung verbunden.Der erste Beitrag wurde von der Gruppe mit dem Thema Datenbanken vorgestellt. DieGruppe hat im Vorfeld eine Tabelle zu bekannten Youtubern erstellt (siehe Abb.4). DieTabelle beinhaltete die Kategorien Kanalname, Genre, Videoanzahl, Abonnenten, Aufrufe,Sprache, Beitrittsjahr, Vor- und Nachname. Es wurden verschiedene Kanäle vom simpleclubaufgelistet. Bei der Erstellung der Tabelle hat die Gruppe absichtlich den Namen dersimpleclub-Youtuber falsch aufgelistet. Ein Kandidat aus dem Publikum sollte diesen Fehlerbeheben. Da das Au nden, Löschen und Ersetzen sehr aufwendig ist, wurde diese Tabellezu einer normalisierten Datenbank umgewandelt. Mit diesem Modell werden Redundanzenbeseitigt, Inkonsistenzen vermieden und das Modiﬁzieren von Daten vereinfacht.Abb. 4: Ausschnitt der Tabelle zu bekannten YoutubernDer folgende Beitrag wurde unter dem Motto „Maschinen sind einfach“ präsentiert. DieGruppe hat eine Geschichte verfasst, in der ein Automat entwickelt wurde (Idee aus[BWF15]). Der Tolper-Troll Willi lebte in Fairytail Junction (siehe Abb.5) und ist aufder Suche nach dem Zimtberg. Es gibt keinen direkten Weg, um von Willis StandpunktInformatik spannend präsentieren 19516 Lisa Göbel, Lutz Hellmigzum Zimtberg zu kommen. Daher muss er von Ort zu Ort wandern. Von jedem Ort ausgehen zwei Wege ab. Während die Geschichte vorgetragen wurde, entschied das Publikum,welchen Weg Willi als nächstes wählt. Die entstandene Landkarte wurde während derGeschichte mit Hilfe der Dokumentenkamera gezeigt. Nachdem die Geschichte beendetwar, hat die Gruppe einen komplizierten Automaten gezeigt, welcher zu einem einfachen,aber gleichmächtigen Automaten reduziert wurde.Abb. 5: Fairytail Junction„Das Genie beherrscht das Chaos.“ Unter diesem Motto stand der dritte Beitrag. Zunächstsollten zwei Personen des Publikums ein unsortiertes Kartenspiel nach einer vorgegebenenReihenfolge der Karten sortieren. Dabei wurde die schnellere Person nach ihrer Vorge-hensweise befragt. Anschließend wurde ein Wettstreit zwischen zwei Gruppenmitgliedernpräsentiert. Es wurde behauptet, dass Bubblesort ein schnelleres Sortierverfahren alsQuicksort sei. Um diese Behauptung zu beweisen oder zu wiederlegen, wurden jeweilssieben Personen des Publikums aufgefordert, die Algorithmen durchzuspielen. Es wurdenverschiedene Getränke nach ihrem Alkoholgehalt aufsteigend sortiert. Die Anzahl dereinzelnen Schritte wurden jeweils gezählt. Dadurch hat sich herausgestellt, dass Quicksortdas schnellere Sortierverfahren ist.Der folgende Beitrag knüpfte an das Sortieren an, denn in vorsortierten Listen kann schnel-ler gesucht werden. Zunächst wurden zahlreiche Beispiele aus dem Alltag zum ThemaSuchen präsentiert. Anschließend wurden die lineare sowie die binäre Suche anhand derSuche nach einem Filmtitel durchgeführt. Im Internet werden sehr viele Suchanfragenin kürzester Zeit ausgewertet. Doch wie funktioniert das? Dazu hatte die Gruppe einCrawler-Spiel vorbereitet. Es wurde nach einem bestimmten Kuchenrezept gesucht. Dieeinzelnen Rezeptseiten waren als „Webseite auf Papier“ im Raum verteilt. Die Stichwörter196 Lisa Göbel, Lutz HellmigInformatik spannend präsentieren 17waren bereits farbig markiert. Am Ende der Seite gab es Abreißzettel mit der URL derSeite. Für jedes Stichwort stand ein Korb auf der Bühne zur Verfügung. In diesem Korbwurden die jeweiligen URL eingeworfen. Nach der Sortierung kann je nach Suchanfrage derentsprechende Korb ausgeschüttet werden. Dieses Crawler-Spiel wurde von sieben Personendes Publikums durchgeführt. Währenddessen wurde Musik eingespielt, in deren Text dasThema Suchen eine Rolle spielte.Der Abschluss der Vorstellung wurde durch die Datenkomprimierung gebildet. Die Gruppehatte ein Faxgerät als Anschauungsmaterial. Damit sollte eine Geburtstagseinladung ver-sendet werden. Doch wie funktioniert dieses Gerät? Mit Hilfe der Lauﬂängenkodierungwurde am Beispiel eines Buchstabens (siehe Abb.6) die Übertragung enaktiv präsentiert.Zwei Personen des Publikums haben die Übertragung durchgespielt. Eine Person musstedie Zeichen kodieren und die andere Person war für die Übertragung zuständig. Zunächstdurften nur die Worte schwarz und weiß übertragen werden. Diese Übertragung hat sehrlange gedauert. Aufgrund dessen wurde eine andere Übertragung festgelegt. Nun durftenZahlen übertragen werden. Es wurde vereinbart, dass jede neue Zeile zuerst die Anzahl derschwarzen Pixel überträgt (Idee von [BWF15]). Abschließend wurde besprochen, durchwelche Möglichkeit die Buchstaben c und e schnell hintereinander übertragen werdenkönnen. Dabei wurde herauskristallisiert, dass lediglich die Veränderung übertragen wird.Abb. 6: Mit Lauﬂängenkodierung zu übertragender BuchstabeAus den besten drei Beiträgen – Automaten, Sortier- und Suchverfahren – wurde zu Beginndes neuen Semesters eine gemeinsame Präsentation als Schauvorlesung für die Lange Nachtder Wissenschaften erstellt. In fünf Konsultationen wurden die Beiträge auf insgesamt 30Minuten reduziert. Bei der Modiﬁkation der Präsentationen ist aufgefallen, dass einigeGruppen die Themen und die Idee der Minimalisierung nach wie vor nicht vollständigdurchdrungen haben. Daher wurden die fachlichen Grundlagen nochmals grundlegendbesprochen.Die Schauvorlesung auf der Langen Nacht der Wissenschaften wurde vom Publikum sehrgut angenommen. Das Publikum bestand vorwiegend aus Kindern mit ihren Eltern sowieinteressierte Schülerinnen und Schüler.4 EvaluationDas Projekt wurde mit Hilfe von zwei Fragebögen evaluiert. Der erste Fragebogen wurdeim ersten Seminar von 13 Studierenden ausgefüllt und beinhaltete ausschließlich o eneFragen. Die Ergebnisse geben Aufschluss über die Motivation und die Ziele der Teilnehmer.Die Resultate zeigen, dass 7 von 13 Studierenden aufgrund der Werbeveranstaltung in derInformatik spannend präsentieren 19718 Lisa Göbel, Lutz HellmigEinführungswoche teilgenommen haben. Obwohl dieses Seminar zuvor noch nicht angebotenwurde, wurde den Erstsemstern die Teilnahme an so einer Veranstaltung von älterenSemestern empfohlen. Das Seminar wurde besucht, da der Fokus auf die Lehramtstätigkeitausgerichtet ist. Das Knüpfen von sozialen Kontakten ist ein wichtiger Punkt für dieTeilnehmer. Als weiteren Grund führen einige Teilnehmer den Erhalt von Leistungspunkten,das Sprechen vor Publikum und den Versuch, Informatik ansprechend zu vermitteln, an.Die zweite Frage des Fragebogens zielte auf die Erwartungen und die Bedenken ab. Diemeisten Befragten gaben an, keine Bedenken zu haben. Einige äußerten die Befürchtungmöglicher Ideenlosigkeit, kreativer Überforderung oder zu hoher fachlicher Anforderungen.Die Studierenden erwarteten einen kreativen Austausch von Fachwissen, didaktischen undmethodischen Aspekten. Die Teilnehmer erho ten ein lockeres Umfeld und eine positiveZusammenarbeit mit den Dozenten. Von den Dozenten wurde erwartet, dass sie selbst dasSeminar spannend präsentieren.Der zweite Fragebogen untersuchte sechs Kategorien. Die erste Frage war o en gestelltund lieferte Auskunft über die Erfüllung der Erwartungen. Die zweite und dritte Frage warsiebenstuﬁge Single-Choice-Fragen. Hier wurden die Komponenten der Lehrveranstaltungsowie die Seitene ekte evaluiert. Die vierte Frage war o en formuliert und gibt Aufschlussüber eine Weiterempfehlung des Seminars. Die folgende o ene Frage erhebte Anregungenund einen Verbesserungshinweise für eine weitere Durchführung des Seminars. Im letztenBereich hatten die Studierenden die Möglichkeit aufzuschreiben, was sie unbedingt nochsagen möchten.Dieser Fragebogen gibt Aufschluss über die Entwicklung von professioneller Kompetenz[BK11]. Es werden die Aspekte motivationale Orientierung, Selbstregulation, Ziele sowieProfessionswissen, vor allem Fachwissen und fachdidaktisches Wissen der Teilnehmeruntersucht.Dieser Fragebogen wurde von 11 Teilnehmern ausgefüllt. Die Studierenden waren währenddes Projektes sehr motiviert. Die Einstellung zur Berufsmotivation hat sich positiv entwickelt.Das selbstständige Arbeiten wurde von zehn Studierenden positiv bewertet, obwohl dieseseinen zusätzlichen Zeitaufwand darstellte. Die Inhalte der Präsenzveranstaltung sowie derKonsultationen waren für zehn von elf Studierenden hilfreich. Sie haben dadurch fachlicheKompetenzen erworben. Der methodische Wechsel zwischen den Präsenzveranstaltungenund den Konsultationen wurde von allen Teilnehmern positiv bewertet. Die Studierendenhaben durch das Seminar soziale Bindungen zu ihren Kommilitonen aufgebaut. AchtTeilnehmer lobten die lockere und freundliche Atmosphäre.Zwei Studierende wünschten mehr Austauschmöglichkeiten mit allen Teilnehmern undvier Studierende eine zeitliche Vorverlegung der Präsenzveranstaltung. Ein Student sahVerbesserungsbedarf im Zeitplan vor Weihnachten. Zwei Studierende wollten mehr Probenim Hörsaal, wo die Abschlussveranstaltung stattﬁndet. Ein Teilnehmer würde sich überein größeres Publikum freuen. Des Weiteren würden einige Teilnehmer dieses Seminarfür Studierende jeden Semesters empfehlen. Ein Teilnehmer hätte sich Tipps für das freieSprechen sowie einen engeren thematischen Rahmen gewünscht.198 Lisa Göbel, Lutz HellmigInformatik spannend präsentieren 195 Schlussfolgerungen und AusblickDie Evaluationsergebnisse lassen erkennen, dass die Studierenden diese Form der didakti-schen Praxis positiv beurteilen. Angesichts der überschaubaren Zahl der Teilnehmer desModuls lassen sich aus den gewonnenen Daten selbstverständlich noch keine gesichertenErkenntnisse ableiten. Die Erhebung liefert allenfalls Anhaltspunkte für die Formulierungvon Hypothesen, die in weiteren Untersuchungen speziﬁsch untersucht werden sollten.Die Studierenden waren im Seminar stets interessiert und engagiert. Aufgrund der hohenZufriedenheit der Studierenden wird das Seminar im nächsten Wintersemester zum zweitenMal angeboten. Weiterhin bleibt zu untersuchen, ob die teilnehmenden Studierende dasInformatik Studium fortsetzen und erfolgreich beenden.Beim nächsten Durchlauf des Projektes werden Modiﬁkationen vorgenommen. Es wird einePräsenzveranstaltung eingefügt, die Tipps zum freien Sprechen liefert. Die Präsenzveranstal-tung wird in den ersten Wochen wöchentlich stattﬁnden. Dadurch können die Studierendenzeitiger konkret an ihren Themen arbeiten. Proben zur Präsentation werden früher geplant.Die Studierenden werden dadurch sicherer im Präsentieren und gewinnen Selbstbewusstheitim eigenen Handeln. Weiterhin wird das Seminar auch für Studierende höherer Semestergeö net, wenngleich der Fokus auch weiterhin auf Studierende des ersten Semesters gelegtwerden soll. Somit können erfahrene Studierende mit Studienanfängern zusammenarbeiten.Die Studierenden können auf diese Weise viel voneinander lernen und sich gegenseitigmotivieren, gute Informatiklehrerinnen und -lehrer zu werden.Dieses Pilotprojekt hat den Studierenden einen ersten Praxisbezug gegeben. Dabei hattendie Studierenden die Möglichkeit, ihre Kommilitonen kennenzulernen. Diese Methodedes Praxisbezugs hat sich gut für die Informatik geeignet. Dank der Anwendung derfundamentalen Ideen der Informatik haben die Studierenden bemerkt, dass die Informatikein großes Anwendungsfeld hat und trotz des ständigen Wandels in der Informatik dieGrundideen beibehalten bleiben.Diese Möglichkeit des Studieneinstieges bietet sich vor allem für Fächer mit einem sehrhohen Anteil an Fachwissenschaften in der Anfangsphase des Studiums an. Sofern diefundamentalen Ideen des jeweiligen Faches thematisiert werden, erhalten die Studierendeneinen umfassenden Einblick in das Fach. Somit wäre eine Übertragung des Projektes aufandere Fächer möglich.Literaturverzeichnis[BK11]Baumert, Jürgen; Kunter, Mareike, Hrsg. Das Kompetenzmodell von COACTIV. Profes-sionelle Kompetenz von Lehrkräften: Ergebnisse des Forschungsprogramms COACTIV.2011.[Br60]Bruner, J. S., Hrsg. The process of education. Havard University Press, Cambridge, 1960.[BWF15]Bell, Tim; Witten, Ian H.; Fellows, Mike, Hrsg. CS unplugged. An enrichment andextension programme for primary-aged students. 2015.Informatik spannend präsentieren 19920 Lisa Göbel, Lutz Hellmig[Ga17]Gallenbacher, Jens, Hrsg. Abenteuer Informatik. IT zum Anfassen für alle von 9 bis 99 –vom Navi bis Social Media. Springer, Heidelberg, 4. Auﬂage, 2017.[HNR06]Hartmann, Werner; Näf, Michael; Reichert, Raimond, Hrsg. Informatikunterricht planenund durchführen. eXamen.press, Springer-Verlag Berlin Heidelberg, 2006.[Ra98]Ramm, M.; Kolbert-Ramm, C.; Bargel, T.; Lind, G., Hrsg. Praxisbezug im Lehramtsstudium.Erfahrungen und Beurteilungen der Lehramtsstudierenden. Konstanz: Universität Konstanz,Arbeitsgruppe Hochschulforschung, 1998.[Ra18]Radisch, Falk; Driesner, Ivonne; Arndt, Mona; Güldener, Torben; Czapowski, Janek; Petry,Martin; Seeber, Anne-Marie, Hrsg. Abschlussbericht Studienerfolg und -misserfolg imLehramtsstudium. Rostock: Universität Rostock, 2018.[Sc93]Schwill, A, Hrsg. Fundamentale Ideen der Informatik. Zentralblatt für Didaktik derMathematik, 25(1), 1993.200 Lisa Göbel, Lutz HellmigcbaArno Pasternak (Hrsg.): INFOS 2019,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Fit für den Lehrplan 21 – Wie Klassenlehrpersonen auf denInformatikunterricht vorbereitet werden (können)Im Dialog lernen mit kompetenzorientierten AufgabensetsAndrea Gumpert1, Pascal Zaugg2Abstract:Informatik ist in der Schweizer Primarschule angekommen! Studierende werden an Pädago-gischen Hochschulen darauf vorbereitet, Informatik zu unterrichten und in die Fächer zu integrieren.Keine leichte Aufgabe, denn häuﬁg haben sie selbst keinen Informatikunterricht erlebt, was bedeutet,dass die Vorerfahrungen in dem Bereich sehr heterogen sind. Eine etablierte Fachdidaktik für das neueModul Medien und Informatik gibt es darüber hinaus noch nicht. Um diese Herausforderungen zumeistern, werden Räume für individuelles Lernen und Vertiefen gescha en. Anhand von kompetenzori-entierten Aufgabensets lernen die Studierenden selbstgesteuert, aber begleitet und dialogisch, das, wassie an fachlichem und fachdidaktischem Handwerkszeug für den Medien-und-Informatik-Unterrichtbrauchen. Durch die individualisierbaren Aufgabensets, welche sich auf das Konzept des DialogischenLernens (vgl. u.a. [RG14a]) abstützen, wird das selbstbestimmte, freie Lernen im Präsenzunterrichtan der Hochschule unterstützt. Kooperatives und selbstreﬂexives Lernen an schulpraxisorientiertenAufgaben ermöglicht es den Studierenden zum einen, fachwissenschaftliche Konzepte aufzubauenund zum anderen, fachdidaktische Erfahrungen für das Lehren im Fach Medien und Informatik zunutzen (didaktischer Doppeldecker).Keywords:Medien und Informatik; Lehrpersonenbildung; E-Portfolio; Dialogisches Lernen; Kom-petenzorientierung1 Einleitung und RahmenbedingungenSeit 2014 ist der Lehrplan 213, welcher für alle 21 Deutschschweizer Kantone Gültigkeit hat,verabschiedet. Eine Neuerung ist das im Kanton Bern seit 2018 ﬂächendeckend unterrichteteModul „Medien und Informatik“ (im Folgenden MI). Medienbildung und informatischeBildung werden sowohl integriert in die Fächer (bereits ab der Kindergartenstufe) als auchin eigenen Lektionengefäßen vermittelt.Im Studium an der Pädagogischen Hochschule Bern werden fachwissenschaftliche, fachdi-daktische, erziehungswissenschaftliche und berufsbezogene Kompetenzen aufgebaut. MI1Pädagogische Hochschule Bern, Institut Vorschulstufe und Primarstufe, Fabrikstrasse 8, 3012 Bern, Schweizandrea.gumpert@phbern.ch2Pädagogische Hochschule Bern, Institut Vorschulstufe und Primarstufe, Fabrikstrasse 8, 3012 Bern, Schweizpascal.zaugg@phbern.ch3https://be.lehrplan.ch/index.phpcba doi:10.18420/infos2019-20Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 2012 Fit für den Lehrplan21ist für alle Studierenden der Vorschul- und Primarstufe obligatorisch und wird in den zweiModulen „MI1“ und „MI2“ (gemeinsam 5 ECTS) unterrichtet. Die Studierenden erarbeitenin diesen Gefäßen Kompetenzen aus den Bereichen der Medienpädagogik, Mediendidaktikund Informatik sowie der Informatikdidaktik. Während im MI1 die Medienbildung imVordergrund steht, fokussiert MI2 auf die Informatik.Aufgrund des heterogenen Vorwissens der Studierenden sind neben fachdidaktischenFragestellungen besonders auch Fachinhalte Gegenstand der Lehrveranstaltungen. Diesist aufgrund des verhältnismäßig geringen Workloads eine große Herausforderung. Dieim Folgenden beschriebenen kompetenzorientierten Aufgabensets wurden entwickelt, umZeit und Raum für individuelles, exemplarisches Lernen und Vertiefen zu scha en undﬂexibel auf das eingehen zu können, was die Studierenden an didaktischem und fachlichemHandwerkszeug brauchen. Insbesondere der Aufarbeitung, Überarbeitung und Reﬂexionvon Präkonzepten und des eigenen Lernfortschritts wird ein großer Stellenwert eingeräumt.Ziel ist, dass die Studierenden Gestaltungsaspekte für ihr eigenes Lernen identiﬁzierenund diese Erfahrungen für das Lehren nutzen (didaktischer Doppeldecker). Durch dieEinbettung der Aufgabensets in o ene Unterrichtssettings wird der Heterogenität derStudierenden, dem großen und dynamischen Sto umfang und der Kürze der zur Verfügungstehenden Seminarzeit Rechnung getragen. Das zugrundeliegende didaktische Konzeptdes Dialogischen Lernens (vgl. [RG14a], [RG14b], [RKW08], [RG95] ) bietet sich fürﬂexibilisierte Arbeit an und bildet einen Rahmen für die bereits institutionalisierte E-Portfolioarbeit.2Theoretische Grundlagen zur Konzeption der kompetenzorientiertenAufgabenIn den konzipierten Aufgaben werden drei didaktische Wirkungslinien verknüpft: Lernen ino enen Kontexten (dialogisch), Kompetenzorientierung und Selbstreﬂexion im eigenenE-Portfolio. Ziel ist es, diesen drei Ansprüchen nicht nur gerecht zu werden, sondern sieauch so umzusetzen, dass sie sich gegenseitig positiv beeinﬂussen und ergänzen.2.1 Dialogisches LernenDas Dialogische Lernen stellt ein praxisorientiertes Konzept zur Gestaltung einer neuenLernkultur dar, welches den gesellschaftlichen Herausforderungen der Individualisierungund Flexibilisierung Rechnung tragen kann. Charakteristisch für diese sogenannte neueLernkultur [Wi16] ist die Betonung des Lernens vor dem Lehren, die Fokussierung aufden Lernenden statt auf die Inhalte, die Eigenverantwortung sowie die Partizipation desLernenden im Unterricht und die Verschiebung von der Produktorientierung hin zu einerOrientierung und lernfördernden Beurteilung des Lernprozesses.202 Andrea Gumpert, Pascal Zaugg3Im dialogischen Unterricht steht die o ene Auseinandersetzung mit den eigenen Prä-konzepten und den Angeboten des Unterrichts im Vordergrund. Studierende bauen aufVorerfahrungen, Kognitionen und Gefühlen auf und bekommen so einen individuellen,singulären Zugang zur Sache. Lernen wird als Prozess aus drei Elementen beschrieben:Das Bewusstmachen des eigenen Vorwissens („Ich mache das so.“), der Austausch mit denPeers („Wie machst Du es?“) und das Erfahren und die Erarbeitung des „Regulären“ imDialog mit der Lehrperson und dem Material („Das machen wir ab.“) [RG95].Zentrales Instrument des Dialogischen Lernens ist die Kernidee, welche das Thema bzw. dieInhalte beschreibt und das repräsentiert, was den „Witz der Sache“ ausmacht. Die Kernideeist persönlich und individuell und transportiert die Vorstellungen der Lehrperson, die esermöglichen sollen, den Lernenden Zugang zu einem Inhalt zu verscha en. Die Kernideewird von den Studierenden als Ergebnis der Auseinandersetzung mit Inhalten und Methodenformuliert und für den zukünftigen Unterricht an der Schule genutzt. Als solches soll dieKernidee als Brücke zwischen Lehrpersonenbildung und Schule fungieren.Den Einstieg in eine Thematik bildet ein o ener Auftrag, im Rahmen dessen Präkonzepte miteinem Thema schriftlich im E-Portfolio bzw. Lernjournal festhalten werden. Die Lehrpersonwählt besonders gelungene, spannende oder interessante und diskutierenswerte Konzepteaus, kommentiert, gibt eine Rückmeldung und spielt diese sogenannten Autographen[RKW08] in den Unterricht zurück. Sie dienen gewissermaßen als Unterrichtsmaterial.Die Rückmeldungen, welche die Lehrpersonen in regelmäßigen Abständen in den E-Portfolios hinterlässt, würdigen die Arbeiten der Lernenden und heben das Gelungenehervor. Fehlkonzepte werden identiﬁziert und für das Weiterlernen genutzt. Mit Hilfe derKommentare oder in Gesprächen erarbeiten die Lernenden die fachlich regulären Konzepte(„Das machen wir ab“). Damit schließt sich der Kreislauf wieder zur Kernidee.2.2 KompetenzorientierungDie Zieldimensionen von Unterricht – ob Schule oder Hochschule – werden als Kompetenzenformuliert. Nach Weinert sind Kompetenzen wie folgt deﬁniert: „Kompetenzen sind die beiIndividuen verfügbaren oder durch sie erlernbaren kognitiven Fähigkeiten und Fertigkeiten,um bestimmte Probleme zu lösen, sowie die damit verbundenen motivationalen, volitionalen(Anm: d.h. absichts- und willensbezogenen) und sozialen Bereitschaften und Fähigkeiten,um die Problemlösungen in variablen Situationen erfolgreich und verantwortungsvoll zunutzen.“ [We01]. Doch wie lassen sich Kompetenzen fördern? Wie muss eine Aufgabegestaltet werden, die nicht nur Wissen und Können fördert, sondern auch eine Lernumgebungscha t in der die Lernenden die Bereitschaft, ein Problem zu lösen, entwickeln können?Kalcsics und Wilhelm [KW17] konkretisieren die weinertsche Deﬁnition und bauen daraufihr Prozessmodell für Kompetenzorientierte Aufgaben (Abb. 1) auf. Sie beschreiben einekompetente Person als fähig, „in bestimmten Situationen einen Auftrag zu bearbeiten, eineHerausforderung zu meistern, eine Aufgabe zu lösen“ [KW17] und die Bereitschaft zuFit für den Lehrplan 21 2034 Fit für den Lehrplan21haben, dies auch zu tun. Aufgaben sollen Motivationen und Handlungsbereitschaften – alsodie Persönlichkeit [Wi18] und die Lebenswelt eines Menschen – produktiv einbeziehen. Dieswird durch Lernumgebungen ermöglicht, „welche die Lernenden in eine intensive, aktive,selbst gesteuerte kooperative Auseinandersetzung mit dem Lerngegenstand bringen“ [Le11],das Vorwissen berücksichtigen, authentisch und individualisierbar sind. In einer produktiven,kooperativen und diskursiven Art und Weise werden Lernprodukte selbstständig erarbeitet[Le11] und das eigene Lernen reﬂektiert. Hierbei werden die zu entwickelnden Kompetenzendirekt genutzt, sind somit relevant und in einen Anwendungskontext eingebunden.Abb. 1: Prozessmodell kompetenzfördernder Aufgabensets (in Anlehnung an [WLS16])Iterativ werden Teilkompetenzen bzw. Kompetenzaspekte zu komplexeren Kompetenzenweiterentwickelt. Dabei sollen die Lernaufgaben die notwendigen Impulse geben, ohne denLernprozess zu stark vorzustrukturieren [KW17].2.3 E-Portfolioarbeit und reﬂexives LernenBeim Schreiben wird das Denken verlangsamt und Lernen wird bewusst wahrgenommen. Diepositive Beeinﬂussung der Kompetenzentwicklung durch (selbst-) reﬂexives Lernen [Je08]wird sowohl im dialogischen Lernen als auch im Prozessmodell für kompetenzorientierteAufgaben gezielt betont. O ermanns deﬁniert Selbstreﬂexion als „das Auseinandersetzenmit den für einen selbst wichtigen eigenen subjektiven Deutungen (z. B. Gedanken oderMotive), den damit verbundenen Gefühlen sowie den daraus resultierenden Handlungen undderen Konsequenzen unter Berücksichtigung des Verhaltens und der subjektiven Deutungenanderer Personen sowie der bestehenden Strukturen (Regeln, Aufgaben, Umweltbedin-gungen), die einen umgeben.“ [Of04]. Will man die Potenziale der Selbstreﬂexion inseiner Komplexität lernfördernd ausnutzen, so muss das Anfertigen eines Lernjournalsim E-Portfolio so begleitet und gerahmt werden, dass Schreiben nicht zur Alibiübungwird, welche die Studierenden nur zum Selbstzweck machen. Sowohl die Formulierung204 Andrea Gumpert, Pascal Zaugg5der Aufträge als auch die didaktische Konzeption des dialogischen Unterrichts motivierenLernende, sich mit ihren subjektiven Deutungen, den Gedanken und Gefühlen hinsichtlichihrer eigenen Konzepte auseinanderzusetzen.3Konzeption der kompetenzorientierten Aufgaben und vorliegendeErfahrungen3.1 Aufgabenkonzeption und StrukturZu sechs relevanten Themen der Informatik werden Aufgabensets konzipiert, welche ausfünf o enen Einzelaufträgen bestehen. Nach dem Prozessmodell für kompetenzförderndeAufgabensets gliedern sich die Aufgabenabschnitte in Aufträge zum Explorieren (Prä-konzepterhebung, Überfachliches), Erarbeiten (Wissensaneignung), Üben und Vertiefen(methodische Vertiefung), Anwenden (produktives Arbeiten) und zum Reﬂektieren. Ab-schließend erfolgt ein Peer-to-Peer-Feedback auf das Lerntagebuch des Partners oder derPartnerin.Alle Aufträge sind gleich strukturiert, wie Abb. 2 zeigt. Klare Zielformulierungen („Wasist Ziel des Auftrages?“) und konkrete Kriterien („Worauf kommt es an?“) helfen denStudierenden, sich zu orientieren. Mit dem fachdidaktischen Hinweis wird erreicht, dass dieStudierenden sich nicht nur als Lernende der Fachinhalte sehen, sondern auch die Schuleund die Anwendung ihres Wissens im Unterricht vor Augen haben.Abb. 2: Screenshot der Ansicht eines Auftrages (zur besseren Lesbarkeit leicht manipuliert)Im SWITCHportfolio werden die Aufgabenkomplexe als Sammlung umgesetzt, wobei sichdie Einzelaufträge auf Ansichten beﬁnden. Diese Anordnung ermöglicht aber auch, dieReihenfolge der Bearbeitung zu ändern oder Arbeitsschritte zu überspringen, etwa wennzu Themen oder Methoden bereits Kompetenzen in anderen Modulen erarbeitet wurden.Im Präsenzunterricht wird dies durch den Dialog mit der Lehrperson begleitet. Da dieAufgaben das benötigte Material enthalten und unabhängig vom Präsenzunterricht sind,Fit für den Lehrplan 21 2056 Fit für den Lehrplan21können sie auch im Selbststudium erarbeitet werden. Es ist allerdings im Sinne des Lernensals sozialen Prozess empfehlenswert und sinnvoll, kooperativ zu arbeiten.3.2 ThemenübersichtAuf Basis des Lehrplans 21 wurden sechs inhaltliche Schwerpunkte deﬁniert. Der Bereichder Algorithmen erhält dabei ein leichtes Übergewicht. Computational Thinking wirdals fachdidaktisches Konzept häuﬁg aufgegri en und der allgemeinbildende Stellenwertder Informatik betont. Weiterhin wurde darauf Wert gelegt, dass die drei Schwerpunkte„Datenstrukturen“, „Algorithmen“ und „Informatiksysteme“, wie sie im Lehrplan 21formuliert sind, nicht isoliert voneinander behandelt werden, sondern die Verbindungenzwischen den Kompetenzbereichen lebensweltnah aufgezeigt werden.Es wurden folgende Aufgaben entwickelt:Digitalisieren - Vom Analogen zum Digitalen und zurück4:Zuerst zeichnen undbeschreiben die Studierenden wie sie sich das Digitalisieren von Ton vorstellen unddiskutieren dies mit einer Partnerin bzw. einem Partner. Nachdem sie einen Lernﬁlm zumThema rezipiert haben, überarbeiten sie ihre Zeichnung. Nun stellen sie ihren Namen imASCII Code dar und beschäftigen sich mit der Umwandlung eines Bildes in Binärcode beimScannen. Reﬂexion und Kernidee bildet den Abschluss der Aufgabe.Suchen, Finden, Sortieren, Ordnen - So macht’s der Computer5:Um an ihre eigenen Er-fahrungen anzuknüpfen, sollen die Studierenden beschreiben, wann, wo und wie sie sortieren.Mittels Scratch wird der Bubble-Sort-Algorithmus visualisiert und die Studierenden sollendies in ein Flussdiagramm übersetzen. Anschließend entwickeln sie eine Unterrichtseinheitzum Sortieren und reﬂektieren das Thema und ihren Lernprozess wiederum anhand vonAlltagsphänomenen (Suchmaschinen / Onlinehandel).Mensch und Maschine - Arbeitsteilung durch Automatisierung6:Einführend setzensich die Studierenden mit den gesellschaftlichen Folgen der Automatisierung auseinander.Nach einigen anwendungskompetenzaufbauenden Übungen mit Scratch programmierensie einen Rasenmäherroboter, optional nutzen sie dafür das LEIS7. Abschließend erfolgtwiederum ein Transfer in Form eines Gedankenexperiments.Internet - Wo sind meine Daten?8:Zu Beginn wird das Vorwissen zum Internet erhobenund Materialien zur Recherche bereitgestellt. Es wird wieder auf das Präkonzept Bezug4https://tinyurl.com/MI-KoA-digitalisierung5https://tinyurl.com/MI-KoA-sortieren6https://tinyurl.com/MI-KoA-menschmaschine7Lego Education Innovation Center an der PH Bern8https://tinyurl.com/MI-KoA-internet206 Andrea Gumpert, Pascal Zaugg7genommen und das Wissen im Bereich der Netzwerktopologien vertieft. Als Anwen-dungsaufgabe sollen die Studierenden eine Unterrichtseinheit zum Internet beurteilen undanschließend fachinhaltlich und fachdidaktisch reﬂektieren.Mein Computer funktioniert nicht mehr! - Woran liegt’s, was kann ich tun9:Zunächstnotieren die Studierenden ihre Vorstellungen vom Weg des Buchstabens A auf den Bild-schirm. Mit Material und einem aufgeschraubten PC vertiefen sie ihr Wissen rund umInformatiksysteme und entwerfen eine eigene Kurzgeschichte für Kinder. Mit der SoftwareCalligraphr10entwerfen sie ihre eigene Schriftart, vertauschen bewusst das A und das Bund überdenken so die Funktionsweise und das Zusammenspiel von Betriebssystem undAnwendungssoftware bei der Übermittlung eines Buchstabens auf den Bildschirm. Weiterhinbeschäftigen sie sich mit der Prozessorauslastung ihres eigenen PC und überlegen, wannund ob sich die Anscha ung eines neuen Gerätes lohnen würde und warum. Reﬂektierendfassen sie die Inhalte zusammen und stellen einen Schulbezug her.xLOGO unterrichten11:Ausgehend von der eigenen Vorstellung von gutem Unterrichterarbeiten die Studierenden didaktische Prinzipien zum Einsatz der ProgrammierspracheLogo im Programmierunterricht. Dazu bauen sie zunächst Erfahrungen mit der Spracheauf und setzen sich dann vertieft mit dem Konzept des Computational Thinking und denfachdidaktischen Wirkungslinien für alle Bereiche der Informatik auseinander.3.3 Erfahrungen am Beispiel des Aufgabensets zum Thema DigitalisierungDas Aufgabenset zum Thema „Digitalisieren - Vom Analogen zum Digitalen und zurück“konnte bereits erprobt werden. Die Studierenden arbeiteten weitestgehend selbstgesteuert,während die Lehrperson die Zeit für individuelle Portfoliogespräche oder andere fachlicheAbklärungen nutzen konnte.Eine kurze Hinführung zum Thema, als Kernidee der Lehrenden zu verstehen, ist wie folgtformuliert:In meiner Umwelt ﬁnde ich analoge und digitale Daten, die ich ineinander umwan-deln kann. Der Computer hilft mir dabei. Als Mensch kann ich Lichtwellen undSchallwellen, also zeitlich kontinuierliche Signale, wahrnehmen.Digitale Daten bestehen aus einer Abfolge von 0en und 1sen, sind also nichtkontinuierlich, sondern zeitlich diskret. Sie können durch einen Computer kopiert,verarbeitet und gespeichert werden. Dies kann Folgen für mich und meine Mitwelthaben.9https://tinyurl.com/MI-KoA-informatiksysteme10https://www.calligraphr.com/11https://tinyurl.com/MI-KoA-logoFit für den Lehrplan 21 2078 Fit für den Lehrplan21Die Studierenden zeichnen und beschreiben „den Weg“ des Tones in den Computer hineinund wieder heraus. Diese Zeichnung wird mit einem Partner diskutiert und mit Hilfeeines Lernﬁlms über Schallwellen, Abtastrate, Binärumwandlung, binäres Rechnen undProzessorverarbeitung ergänzt (Abb. 3). Diese Übung, hier als didaktischer Selbstversuchdurchgeführt, kann auch in der Schule so umgesetzt werden.Abb. 3: Screenshot der Ansicht eines Auftrages (zur besseren Lesbarkeit leicht manipuliert)Das Beispiel und die dazugehörige, hier nicht dargestellte Beschreibung der Zeichnungzeigt, dass Wellen und die Umwandlung in 0 und 1 durchaus bekannte Konzepte sind.Die Aufgabe der Dozentin bzw. des Materials ist es nun im Plenum und in Form einerRückmeldung zu klären, was genau bei der Umwandlung von der Welle in ein elektrischesSignal passiert und Hinweise zu geben, wie sich Kinder der 5. oder 6. Klasse solch komplexeVorgänge vorstellen können.Es folgen Übungen zum ASCII-Code und zur Digitalisierung von Bildern, welche aber in denReﬂexionen kaum erwähnt werden. Es ist daher davon auszugehen, dass die Digitalisierungdes Tones ein anschauliches Phänomen darstellt.Abschließend formulieren die Studierenden Kernideen zum Thema. Eine Studentin um-schreibt sowohl ihre Entwicklung als auch ihre Vorhaben für den eigenen MI-Unterrichtwie folgt: „Digitalisierung ist keine Zauberei, sondern wenn man weiß, wie es funktioniert,ist es erklärbar.“Im Präsenzseminar wurde anschließend die Audiobearbeitung mit Audacity geübt und dieStudierenden konnten so die erarbeiteten informatischen Konzepte sofort aktiv anwenden.208 Andrea Gumpert, Pascal Zaugg93.4 Fazit und AusblickEs konnte gezeigt werden, dass Dialogisches Lernen an der Hochschule dann besonderszielgerichtet umgesetzt werden kann, wenn o ene, individuell bearbeitbare Aufträge Raumund Zeit scha en, in einen Dialog mit den Studierenden zu treten. In Gesprächen undmit Hilfe von Kommentaren konnten die Facetten der Informatik, Verbindungen zurMedienbildung und fächerverbindende Potenziale diskutiert werden und die Arbeiten derStudierenden erhielten so einen Platz in der Lehrveranstaltung.Die Aufgaben werden zunehmend in der Ausbildung von Primarlehrpersonen eingesetztund werden zukünftig eine wachsende Bedeutung im Sinne einer Individualisierung undFlexibilisierung des Studiums erlangen.Eine Entwicklungsaufgabe ist derzeit, die Aufgaben o en zur Verfügung zu stellen, sodasssie Lehrpersonen und Studierenden im gesamten deutschsprachigen (insb. Deutschschwei-zer) Raum zur Bearbeitung bereitstehen. Hier sind vorgängig Lizenzabklärungen notwendig,welche in Kürze abschlossen sein werden. Ebenso sind Kooperationen mit anderen, hoch-schulübergreifenden Projekten geplant und beﬁnden sich derzeit in Abklärung.Wünschenswert wäre eine Weiterentwicklung und Ergänzung der bestehenden Aufgabensetsdurch Studierende im Rahmen von Bachelorarbeiten. Entwicklungsarbeiten erfreuen sichimmer größerer Beliebtheit und mit Hilfe der Studierenden lassen sich weitere spannendeThemengebiete erschließen. Perspektivisch sind auch in der Schullandschaft solche o e-nen Aufgaben von Bedeutung, natürlich in Ergänzung bzw. unter Einbezug bestehenderLehrmittel.Literatur[Je08]Jenert, T.: Ganzheitliche Reﬂexion auf dem Weg zu Selbstorganisiertem Lernen.In (Häcker, T.; Hilzensauer, W.; Reinmann, G., Hrsg.): Schwerpunkt "ReﬂexivesLernen". Bd. 2, 5, Bildungsforschung, S. 1–18, 2008.[KW17]Kalcsics, K.; Wilhelm, M.: Lernaufgaben gestalten. In (Kalcsics, K.; Wil-helm, M., Hrsg.): LERNWELTEN Natur - Mensch - Gesellschaft AUSBIL-DUNG. Schulverlag plus, Bern, Kap. 8, S. 81–89, 2017.[Le11]Leisen, J.: Kompetenzorientiert unterrichten. Unterricht Physik 123/124/100,S. 100–110, 2011.[Of04]O ermans, M.: Braucht Coaching einen Coach. Eine evaluative Pilotstudie.ibidem-Verlag, Stuttgart, 2004.[RG14a]Ruf, U.; Gallin, P.: Dialogisches Lernen in Sprache und Mathematik. Bd. 1:Austausch unter Ungleichen. Grundzüge einer interaktiven und fächerübergrei-fenden Didaktik. Klett, Seelze, 2014.Fit für den Lehrplan 21 20910 Fit für den Lehrplan21[RG14b]Ruf, U.; Gallin, P.: Dialogisches Lernen in Sprache und Mathematik. Bd. 2:Spuren legen - Spuren lesen. Unterricht mit Kernideen und Reisetagebüchern.Klett, Seelze, 2014.[RG95]Ruf, U.; Gallin, P.: Ich mache das so! Wie machst du es? Das machen wir ab.Sprache und Mathematik, 1.-3. Schuljahr. Interkantonale Lehrmittelzentrale,Zürich, 1995.[RKW08]Ruf, U.; Keller, S.; Winter, F.: Besser lernen im Dialog. Dialogisches Lernenin der Unterrichtspraxis. Klett, Seelze-Velber, 2008.[We01]Weinert, F. E.: Vergleichende Leistungsmessung in Schulen- Eine umstritteneSelbstverständlichkeit. Leistungsmessungen in Schulen/, S. 17–31, 2001.[Wi16]Winter, F.: Leistungsbewertung. Schneider Verlag Hohengehren GmbH, Balt-mannsweiler, 2016.[Wi18]Winter, F.: Lerndialog statt Noten. Neue Formen der Leistungsbeurteilung.Beltz, Weinheim und Basel, 2018.[WLS16]Wilhelm, M.; Luthiger, H.; Schweizer, G.: Prozessmodell kompetenzfördernderAufgabensets. Ein Beispiel für den NMG-Unterricht aus biologischer Perspek-tive. In (Keller, S.; Reintjes, C., Hrsg.): Aufgaben als Schlüssel zur Kompetenz.Waxmann, Münster, S. 345–356, 2016.210 Andrea Gumpert, Pascal ZauggMichael Hielscher, Christian Wagenknecht: < book title>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <year>    15 FLACI – Eine Lernumgebung für theoretische Informatik  Michael Hielscher1, Christian Wagenknecht2 Abstract: FLACI (www.flaci.com) steht für Formal Languages and Compilers and Interpreters und ist eine modular aufgebaute, webbasierte Lernumgebung für grundlegende Inhalte der theoretischen Informatik. Die Theorie formaler Sprachen und Automaten befasst sich mit potentiell unendlichen Mengen. Die damit verbundene Begrifflichkeit in FLACI adäquat abzubilden, ist die besondere Her-ausforderung. Die Lernumgebung bringt deklaratives, konzeptionelles und prozedurales Wissen mit, um Definitionen, Simulationen, Transformationen und Konvertierungen für formale Grammatiken, reguläre Ausdrücke und abstrakte Automaten vornehmen zu können. Die Webapplikation FLACI stellt eine konsequente Weiterentwicklung der Lernumgebung AtoCC aus dem Jahr 2006 dar. Eine lokale Installation entfällt, wodurch diverse softwaretechnische und betriebssystemspezifische Prob-leme vermieden werden können. Dadurch ist der Einsatz von FLACI, neben dem akademischen Bereich, auch für den Informatikunterricht in der Schule (vorwiegend Sekundarstufe II) attraktiv. Die Applikation ist sowohl im Unterricht als auch außerhalb zeitlich und örtlich unabhängig verfüg-bar, speichert alle erarbeiteten Inhalte auf Wunsch automatisch und regelmäßig in der FLACI-Cloud und bietet damit Potential zur kollaborativen Arbeit. Als offene Lernumgebung bietet FLACI einen Konstruktionsraum für einfache Compiler und Interpreter als praxisrelevante Motivation für die An-wendung von Theoriekenntnissen. Hierfür bietet die Umgebung spezielle kontextfreie Sprachklas-sen und Transformationen an, die die Herstellung von Compilern konzeptionell unterstützen. Die Verzahnung von Theorie und praktischer Anwendung wird seit vielen Jahren im Informatikstudium umgesetzt. Im Beitrag wird FLACI im Überblick vorgestellt und zu den GI-Bildungsstandards “In-formatik für die Sekundarstufe II” in Beziehung gebracht. Keywords: Theoretische Informatik, Formale Sprachen, Abstrakte Automaten, Lernumgebung 1 Einleitung Die theoretische Informatik (TI) ist an Universitäten und Hochschulen ein fester Bestand-teil des Informatikstudiums. Zunehmend werden ausgewählte Konzepte dieses Gebietes in den Schulunterricht integriert. Die GI-Bildungsstandards für Informatik in der Sekun-darstufe II [RBD16] weisen Sprachen und Automaten als einen zentralen Inhaltsbereich aus und definieren konkrete Themen, an denen sich die Lehrpläne orientieren können. Im gymnasialen Informatikunterricht ist die TI je nach Bundesland und Lehrplan bereits ein obligatorischer oder wenigstens ein möglicher Wahlbereich, s. z. B. [FPA07]. Auf die be-sonderen Anforderungen einer stufengerechten fach- und mediendidaktischen Konzeption für diesen Inhaltsbereich wurde hingewiesen, s. z. B. [MHL16].                                                          1 Medien und Schule, Pädagogische Hochschule Schwyz, Forschung, Zaystrasse 42, Goldau, CH-6410,  michael.hielscher@phsz.ch   2 Fakultät Elektrotechnik und Informatik, Hochschule Zittau/Görlitz, FB Informatik, Brückenstr. 1, Görlitz, 02826, c.wagenknecht@hszg.de cba doi:10.18420/infos2019-21Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 211 16    Michael Hielscher, Christian Wagenknecht  In den vergangenen Jahrzehnten entstanden zahlreiche Lernumgebungen für TI: JFLAP [RF06], Kara [BHN03], Exorciser [Ts04], AtoCC [HW06], [HW07] und [WH14]. Im Fol-genden beschränken wir unseren Betrachtungsrahmen auf die TI-Teilgebiete “Theorie der formalen Sprachen” und die “Automatentheorie”. Diese Lernumgebungen decken jeweils einen Teil der geforderten Kompetenzen (in unterschiedlicher Ausprägung) ab und sind mehrheitlich für das universitäre Studium konzipiert. Mit AtoCC wurde ein Weg gefun-den, die begriffliche Arbeit durch Definition von Instanzen und Anwendung algorithmi-scher Zusammenhänge zu betonen [WH14]. Dabei wird die Aktivität des Lernenden nicht nur auf das seit über 50 Jahren ausgearbeitete Gebiet der Automatensimulationen, s. [CSK11], reduziert.  Die mit AtoCC gewonnenen fachdidaktischen Erfahrungen (Studium und Sekundarstufe II) sind in die Entwicklung von FLACI eingeflossen, s. Kap. 2. Darüber hinaus wurden moderne mediendidaktische Aspekte beachtet: Der überwiegende Teil der im Einsatz be-findlichen Lernumgebungen, einschl. AtoCC, basiert auf Technologien, die von mobilen Geräten (z. B. Tablets) nicht mehr unterstützt werden. Als Reaktion auf die zunehmende Verbreitung solcher Geräte in der Hand von Lernenden und Lehrpersonen wurde AtoCC grundlegend überarbeitet und FLACI als moderne Webapplikation entwickelt. Ein ähnli-ches Ziel wird auch in [PT18] verfolgt. Unter Berücksichtigung der Bildungsstandards ist ein didaktisches Werkzeug entstanden, das sowohl im Informatikstudium als auch im In-formatikunterricht (vorwiegend Sekundarstufe II) eingesetzt werden kann. Darüber hinaus eignet sich FLACI als praxistaugliche Entwicklungsumgebung für Compiler und Interpre-ter, wie sie in modernen Webapplikationen Verwendung finden. 2 Struktur der Lernumgebung FLACI Der Einsatz von FLACI ist darauf gerichtet, den Informatikunterricht durch Experimen-tiergelegenheiten zu ergänzen. Automatisiertes Feedback unterstützt die Lernenden etwa bei der Konstruktion von Automatenmodellen und formalen Grammatiken und weist auf allfällige Fehler oder Unvollständigkeiten hin. Die Simulation von Ableitungen, von Ar-beitsschritten abstrakter Automaten und von Compilationsprozessen ist dynamischer Na-tur und wird in FLACI mediendidaktisch passender repräsentiert als durch die Darstellung einzelner Visualisierungsschritte in gedruckten Unterrichtsmaterialien. FLACI stellt eine umfangreiche Palette an Transformations- und Konvertierungsverfahren bereit, die im Un-terricht erarbeitet und von den Lernenden aufgabengeleitet und ergebnisorientiert ange-wandt werden. Außerdem bietet die Lernumgebung unmittelbare Hilfe zur Selbsteinschät-zung vorgelegter Lösungen.  FLACI besteht aus fünf eigenständigen, aufeinander aufbauenden Modulen, die in der vorgegebenen Folge aber auch einzeln, verflochten oder unabhängig voneinander verwen-det werden können. Im Folgenden werden die einzelnen Module kurz beschrieben. 212 Michael Hielscher, Christian Wagenknecht FLACI – Eine Lernumgebung für theoretische Informatik  17 2.1 Formale Sprachen Das Theoriemodul bietet eine einfache, interaktive Umgebung, um zentrale Begriffe for-maler Sprachen, wie Alphabet, Zeichen, Wort, Wortmenge und Sprache, zu explorieren. Es stehen vordefinierte Alphabete zur Auswahl. Zeichen, die aus mehreren Tastaturzei-chen bestehen, bergen die große Gefahr einer typischen Fehlvorstellung vom Zeichenbe-griff. Sie werden als atomare Blättchen dargestellt und verwendet. Die Lernenden können zudem eigene Alphabete definieren, s. Abbildung 1.   Abbildung 1: Alphabet- und Zeichenbegriff (links) und Wortbegriff (rechts) Die mögliche Eigenschaft von Wortmengen und Sprachen abzählbar unendliche Mengen zu sein, wird durch eine „aufklappbare“ Punktnotion, für beliebig viele weitere Elemente der betrachteten Mengen, erfahrbar. Die in FLACI eingebauten Definitionen der o. g. Be-griffe dienen als verbindliche Implementierung der durch die Lehrperson eingeführten Be-grifflichkeit, s. Abbildung 1.   2.2 Reguläre Ausdrücke Sprachen durch manuelle Auswahl einzelner Wörter aus der jeweils zugrunde liegenden Wortmenge zu definieren erschöpft sich schnell und führt zur Notwendigkeit geeigneter Beschreibungsmittel für potenziell unendliche Mengen. Reguläre Ausdrücke sind eine kompakte und mächtige Definitionsform regulärer Sprachen. Die Syntax regulärer Aus-drücke wird in FLACI an konkreten Beispielen im Dialog illustriert. Zu jedem angegebe-nen regulären Ausdruck wird ein entsprechendes Syntaxdiagramm generiert. Die Betrach-FLACI – Eine Lernumgebung für theoretische Informatik 213 18    Michael Hielscher, Christian Wagenknecht  tung von Kfz-Kennzeichen und E-Mail-Adressen werden zur abschließenden selbststän-digen Übung angeboten. In einem Experimentierbereich lassen sich beliebige reguläre Ausdrücke und Suchtexte eingeben, Zufallswörter aus der beschriebenen Sprache erzeu-gen, äquivalente Grammatiken und endliche Automaten generieren, s. Abbildung 2.      Abbildung 2: Reguläre Ausdrücke mit interaktiven Erklärungen (links) und  Beispielaufgaben (rechts) Ergänzend kann die praktische Bedeutung regulärer Ausdrücke etwa bei Such- und Erset-zungsaufgaben in gängigen Texteditoren oder Werkzeuge wie grep auf der Kommando-zeile thematisiert werden. Deshalb wurde in FLACI eine praxisrelevante Notation regulä-rer Ausdrücke gewählt und auf die formale Betrachtung regulärer Mengen und deren Überführung in zugehörige Sprachen verzichtet, was im Unterricht jedoch thematisiert werden muss, s. [WH14]. 2.3 Kontextfreie Grammatiken Schnell stößt man an die Grenzen regulärer Sprachen. Praktische Einsatzzwecke motivie-ren die Betrachtung formaler Sprachen, die nicht mit regulären Ausdrücken definiert wer-den können. Folglich stellt sich die Frage nach der Definition und passenden Beschrei-bungsmitteln für Sprachklassen, die über reguläre Sprachen hinausgehen.  Abstrakte Automaten und formale Grammatiken leisten das Gewünschte. Das Grammatik-Modul in FLACI erlaubt sowohl eine textuelle (BNF: Backus-Naur-Form) als auch visu-elle Eingabe (Syntax-Diagramm) von Grammatiken, s. Abbildungen 3.  Für beliebige Eingabewörter, die zur Sprache gehören, können Ableitungen als Ablei-tungsbäume und tabellarische Satzformlisten dargestellt werden. Der Ableitungsprozess lässt sich schrittweise animieren und zwischen Links- und Rechtsableitung umschalten. Bei Mehrdeutigkeiten werden für ein betrachtetes Wort mehrere Ableitungsbäume zur 214 Michael Hielscher, Christian Wagenknecht FLACI – Eine Lernumgebung für theoretische Informatik  19 Auswahl angeboten. Das Modul stellt Algorithmen bereit, die Grammatiken z. B. zum Zwecke der Vereinfachung umformen oder beispielsweise überprüfen, ob die grammati-kalischen Regeln syntaktisch denen einer regulären Grammatik entsprechen oder ob es sich um eine LL(1)-Sprache handelt. Außerdem lassen sich reguläre Grammatiken in re-guläre Ausdrücke oder endliche Automaten konvertieren. Kontextfreie Grammatiken (kfG) können in Kellerautomaten (s. Abschnitt 2.4) konvertiert werden.   Abbildung 3: Formale Grammatiken in BNF (links) und Ableitungsbaum (rechts) 2.4 Abstrakte Automaten Als äquivalente Beschreibungsmittel formaler Grammatiken können abstrakte Automaten mit Hilfe des entsprechenden Moduls in FLACI eingeführt werden. Das Modul umfasst deterministische und nichtdeterministische endliche Automaten (DEA, NEA), Kellerau-tomaten (DKA, NKA) und deterministische Turingmaschinen (DTM), s. Abbildung 4. Die Konstruktion erfolgt primär grafisch mittels Übergangsgraph des Automaten und einer vorherigen Definition der verwendeten Alphabete. Endliche Automaten lassen sich zu-sätzlich über eine editierbare Übergangstabelle erstellen und bearbeiten. Die Arbeitsweise der Automaten lässt sich für beliebige Eingabewörter simulieren und bietet die Möglich-keit einzelne Schritte animiert nachvollziehen. Nichtdeterminismus wird in Form geklon-ter Maschinen, deren Arbeitsweise einzeln beobachtet werden kann, erkennbar. Es stehen Verfahren bereit, mit denen endliche Automaten in äquivalente reguläre Ausdrücke oder reguläre Grammatiken, Kellerautomaten in kontextfreie Grammatiken konvertiert werden können. Zu jedem endlichen Automaten kann der äquivalente Minimal-Automat erzeugt werden. Auch dieses Modul bietet einen fließenden Übergang zu den Themen eines Infor-matikstudiums. Vielfältige Assistenzsysteme unterstützen bei der Konstruktion von Auto-maten (z. B. automatische Vervollständigung bei endlichen Automaten und farbliche Her-vorhebungen bei fehlenden Übergängen).  FLACI – Eine Lernumgebung für theoretische Informatik 215 20    Michael Hielscher, Christian Wagenknecht   Abbildung 4: Simulation einer deterministischen Turingmaschine in FLACI 2.5 Compiler und Interpreter Als Motivation für die Behandlung formaler Sprachen, abstrakter Automaten und zuge-höriger Konzepte haben sich praktische Anwendungen im Compilerbau als tragfähig er-wiesen. FLACI bietet in diesem Modul einen Editor zur Modellierung von Übersetzungs-prozessen mit Hilfe von T-Diagrammen, s. Abbildung 5, sowie einen Editor zur Entwick-lung von Compilern und Interpretern mit Hilfe einer formalen Beschreibungssprache (TDL: Translator Description Language). Compiler werden dabei nicht per Hand codiert, sondern mit Compilergeneratoren (Compiler Compiler) aus der formalen Definition auto-matisiert generiert. Als Ausgangspunkt kann modulübergreifend eine bereits erstellte for-male Grammatik direkt verwendet werden, wobei automatisch passende Tokenklassen für den Scanner und Regeln für den Parser generiert werden. Für die Lernenden bleibt die Aufgabe, synthetische Attribute (S-Attribute) für jede Regel des Parsers als JavaScript-Code zu definieren, s. Abbildung 6. Der Scanner arbeitet mit regulären Ausdrücken, die zuvor erarbeitet werden müssen. Der Parser verwendet die gleiche Darstellung editierbarer Syntaxdiagramme wie das Grammatik-Modul von FLACI. Sowohl Scanner als auch Par-ser können simuliert und Zustandstabellen des generierten Compilers angezeigt werden. Enthält die Grammatik Mehrdeutigkeiten wird durch entsprechende Meldungen darauf hingewiesen. Alle erstellten Compiler und Interpreter lassen sich über eine URL als ei-genständiges JavaScript-Programm in beliebige Web-Applikationen einbinden. 216 Michael Hielscher, Christian Wagenknecht FLACI – Eine Lernumgebung für theoretische Informatik  21  Abbildung 5: T-Diagramm für einen Übersetzungsprozess über mehrere Teilschritte und  Ausführung (rechts)   Abbildung 6: Compilerdefinition mit Scanner und Parser inklusive S-Attribute (unten) 2.6 Zusammenwirken der Module Die erarbeiteten Grammatiken, Automaten und Compiler werden wahlweise mit Hilfe des lokalen Webbrowsers oder über den FLACI-Server (bei vorheriger Anmeldung) gespei-chert. Die erstellten Produkte können auch als JSON-Dateien heruntergeladen, über Web-links auf dem FLACI-Server mit anderen Lernenden ausgetauscht oder von Lehrpersonen FLACI – Eine Lernumgebung für theoretische Informatik 217 22    Michael Hielscher, Christian Wagenknecht  für Lernende bereitgestellt werden. Auf diese Weise können auch Übungsmaterialien vor-gegeben werden. Für viele Darstellungen innerhalb der Module (Automatengraphen, Ab-leitungsbäume usw.) lassen sich Grafiken für gedruckte Materialien in verschiedenen For-maten exportieren. Zwischen den einzelnen Modulen bestehen vielfältige Wechselwirkun-gen, die es ermöglichen, das Produkt des einen Moduls in einem anderen weiterzuverar-beiten. Abbildung 8 illustriert Konvertierungsmöglichkeiten zwischen den Modulen im Überblick. Abbildung 8: Die fünf Module von FLACI und Konvertierungsmöglichkeiten 3 Berücksichtigung der GI-Bildungsstandards  Die Lernumgebung FLACI deckt den Kompetenzbereich „Formale Sprachen und Auto-maten“ aus den GI-Bildungsstandards für die Sekundarstufe II, s. Tabelle 1, weitgehend ab und bietet darüber hinaus praktische Anwendungsgebiete im Compilerbau. Die in den Standards vorgeschlagene Niveaudifferenzierung lässt sich fließend mit FLACI abbilden: Anfangs werden nur reguläre Sprachen und endliche Automaten thematisiert und erst in einem zweiten Schritt kommen weitere Sprachklassen bedarfsgemäß hinzu. Bereits die FLACI-Module zu regulären Sprachen und Ausdrücken können die wichtigsten Teile der Grundanforderungen zur Unterscheidung formaler und natürlicher Sprachen sowie die Verwendung von Sprachdefinitionen zur Analyse, Beschreibung und Entwicklung forma-ler Sprachen abdecken. Die Ergebnisse der FLACI-Konvertierungen in Grammatiken bzw. Automaten in Verbindung mit Äquivalenzbetrachtungen werden auch für Konstruk-tions-, Kontroll- und Vergleichszwecke herangezogen. Der Übergang von regulären zu kontextfreien Sprachen und Themen des Informatikstudi-ums ist ohne deren zwingende Thematisierung fließend möglich. Der modulare Aufbau der Lernumgebung ermöglicht einen selektiven Einsatz für einzelne Themenbereiche und unterstützt deren Struktur und Abfolge, wie sie in den Bildungsstandards angegeben sind. 218 Michael Hielscher, Christian Wagenknecht FLACI – Eine Lernumgebung für theoretische Informatik  23 Tabelle 1: Auszug aus Bildungsstandards für die Sek. II und passende Module aus FLACI  Grundlegendes und erhöhtes Anforderungsniveau Die Schülerinnen und Schüler ● vergleichen formale mit natürlichen Spra-chen, ● untersuchen den Zusammenhang zwischen einer Grammatik und ihrer Sprache, leiten Wörter einer Sprache ab und stellen Ablei-tungsbäume dar, ● verwenden Sprachdefinitionen (z. B. Gram-matiken, Syntaxdiagramme) zur Analyse, Beschreibung und Entwicklung formaler Sprachen, ● überführen Grammatiken in endliche Auto-maten und umgekehrt. Modul in FLACI  “Formale Sprachen”  “Formale Grammatiken”    “Reguläre Ausdrücke” “Formale Grammatiken”   “Formale Grammatiken” “Abstrakte Automaten” Erhöhtes Anforderungsniveau Die Schülerinnen und Schüler ● erläutern den Zusammenhang zwischen Grammatiken, Sprachen und Automaten, ● analysieren und implementieren Programme zu Problemstellungen auf Kellerautomaten, Turingmaschinen oder Registermaschinen, ● erläutern prinzipielle und praktische Gren-zen der Berechenbarkeit.   “Formale Grammatiken” “Abstrakte Automaten” “Abstrakte Automaten” “Compiler und Interpreter”  4 Fazit Beim Einsatz der Lernumgebung AtoCC wurden in mehr als 10 Jahren im Informatikstu-dium und -unterricht (Sekundarstufe II) positive didaktische Erfahrungen gemacht. Mehr als 25’000 Downloads der AtoCC-Software von Lehrenden und Lernenden an Schulen und Hochschulen lassen ein beachtliches Interesse erkennen. Die Weiterentwicklung zu FLACI als Webapplikation stellt einen wichtigen Schritt zur Fortführung des Ansatzes dar: FLACI berücksichtigt zukunftsfähige mobile Geräte und reduziert den Installations-aufwand in Schulen sowie auf privaten Geräten der Lernenden und der Lehrpersonen. Nach den überaus positiven Erfahrungen mit FLACI im Informatikstudium ermöglicht die Passfähigkeit mit den Rahmenvorgaben für den Informatikunterricht den Einsatz dieser FLACI – Eine Lernumgebung für theoretische Informatik 219 24    Michael Hielscher, Christian Wagenknecht  Lernumgebung auch im Schulkontext. Zu einer wissenschaftlichen Evaluation wird auf-gerufen. FLACI steht unter www.flaci.com zur kostenlosen Nutzung zur Verfügung. Der gesamte Quellcode des Projekts wurde unter einer MIT-Lizenz auf github veröffentlicht. 5 Literatur [BHN03] Brändle, M.; Hartmann, W.; Nievergelt, J.; Reichert, R.; Schlatter, T.: Kara: Ein theoriebasierter Ansatz für Lernumgebungen zu fundamentalen Kon-zepten der Informatik. In INFOS 2003 (S. 201-210). [CSK11] Chakraborty, P.; Saxena, P. C.; Katti, C. P.: Fifty Years of Automata Simu-lation: A Review. In: acm inroads, 2011, Vol. 2, No. 4. [FPA07] Friedrich, S., Puhlmann, H., Altdorf, L. G.: Bildungsstandards Informatik - von Wünschen zu Maßstäben für eine informatische Bildung. In: INFOS 2007, S. 21-32. [HW06] Hielscher, M., Wagenknecht, C.: AtoCC: learning environment for teaching theory of automata and formal languages. In ITiCSE 2006, Vol. 6, pp. 26-28. [HW07]  Hielscher, M., Wagenknecht, C.: AtoCC-didaktischer Ort und erste Erfah-rungen. In INFOS 2007, S. 159-170. [MHL16] Mane, D. T.; Howal, S. S.; Lokare, V. T.: Problem-based Learning using Simulation Tools for Automata Theory. In: Journal of Engineering Educa-tion Transformations, Special Issue, 2016. [PT18] Pereira, C. H., Terra, R.: A Mobile App For Teaching Formal Languages and Automata. In Wiley Online Library, Special Issue Article, 2018. [RBD16] Röhner, G.; Brinda, T.; Denke, V. u.a.: Bildungsstandards Informatik für die Sekundarstufe II. Beilage zu LOG IN, 36. Jg. 2016, Heft Nr. 183/184. [RF06] Rodger, S. H., Finley, T. W.: JFLAP: An Interactive Formal Languages and Automata Package. Jones & Bartlett Learning, 2006. [Ts04] Exorciser: Automatic Generation and Interactive Grading of Structured Ex-cercises in the Theory of Computation. Doctoral dissertation, ETH Zurich, 2004. [WH14] Wagenknecht, C., Hielscher, M.: Formale Sprachen, abstrakte Automaten und Compiler. 2. Aufl., 2014, Springer Fachmedien Wiesbaden. 220 Michael Hielscher, Christian Wagenknecht<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 1  Innovative Gestaltung und Einsatz von Erklärvideos im Informatikunterricht Tamara Hochthurn, Jens Gallenbacher Abstract: Erklärvideos bieten eine Möglichkeit, zeit- und ortsungebunden individuell im eigenen Tempo Inhalte zu erlernen. Ein Nachteil ist die oft passive Konsumentenhaltung von Schülerinnen und Schülern, die das Erklärvideo nur oberflächlich betrachten. Dieser Beitrag stellt einen Unterrichtsverlauf mit selbstentwickelten Erklärvideos zum Thema Binärsystem sowie Nutzung verschiedener Bastelkärtchen als Artefakte vor. Die Idee ist, dass die Lernenden durch den haptischen Einsatz der Bastelkärtchen während des Erklärvideos in eine aktive Rolle schlüpfen. In einer Vorstudie mit wenigen Schulklassen wurde der Unterschied der Kompetenzentwicklung mit und ohne Artefakte untersucht. Dazu wurde die Methode „Flipped Classroom“ in zweierlei Form angewandt. Zum einen als klassische Inverted Classroom Variante, bei der die Schülerinnen und Schüler als vorbereitende Hausaufgabe das Erklärvideo bearbeiteten. Zum anderen als In-Class-Flip, bei dem das Erklärvideo im Unterricht betrachtetet wird. Die Artefakte hatten in den vorliegenden Ergebnissen einen kurzfristigen leicht positiven Effekt. Die Methode des klassischen Flipped Classrooms hatte einen leicht positiven Einfluss auf Nachhaltigkeit. Keywords: Erklärvideo, Artefakte, Flipped Classroom, Inverted Classroom, In-Class-Flip 1 Einleitung „Informatik für alle“ ist das Motto der diesjährigen INFOS. In der Schulpraxis ist dieses „für alle“ jedoch gar nicht so leicht umzusetzen. Ständig finden Sport-, Musikevents oder Exkursionen statt, weshalb einige Schülerinnen und Schüler im Informatikunterricht nicht anwesend sind. Einige sind zudem schlichtweg krank, sodass sie den Unterricht versäumen. Jene Lernende verpassen somit die neuen Inhalte und Informatikunterricht ist an diesem Punkt nicht „für alle“. Um zu gewährleisten, dass abwesende Schülerinnen und Schüler neuen Unterrichtsstoff begreifen und zu einer ihnen beliebigen Zeit selbstständig nacharbeiten können, bieten sich Erklärvideos an.  Neben diesem mehr strukturellen Problem haben wir es im Informatikunterricht mit meistens sehr heterogenen Lerngruppen zu tun. Auch hier bietet sich an, einerseits durch selbstgesteuertes Lernen „im eigenen Tempo“, andererseits durch individuelle Förderung mit zusätzlichen Einheiten per Video eine zusätzliche Form der Differenzierung durchführen zu können. In einer empirischen Untersuchung an einem Gymnasium wurden Erklärvideos zum Thema Binärsystem für den Informatikunterricht einer zehnten Klasse entwickelt. Als Nachteil von Erklärvideos ist die passive Rolle der Schülerinnen und Schüler zu nennen, welche in einer Art Konsumentenhaltung nicht unbedingt aufmerksam das Erklärvideo schauen und mitdenken. Deshalb wurde die innovative Idee umgesetzt, mit Artefakten zu cba doi:10.18420/infos2019-22Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 221 Innovative Erklärvideos 2  arbeiten. Diese Artefakte waren die Punktekärtchen aus der Abenteuer Informatik Ausstellung sowie an die binäre Uhr der Ausstellung angelehnte Lämpchenkarten [Ga17]. Eine wichtige Frage ist, ob dieser aktive Einsatz von Artefakten während des Schauens des Erklärvideos einen Effekt auf die Kompetenzentwicklung der Schülerinnen und Schüler hat. Des Weiteren wurde untersucht, ob jene erfolgreicher sind, wenn sie die Erklärvideos als klassischen Flipped Classroom zu Hause anschauen, oder wenn sie an einem In-Class-Flip teilnehmen.  Aufgrund der geringen Teilnehmerzahl handelt es sich nur um eine Vorstudie und es lassen sich aus der Untersuchung noch keine allgemeingültigen Aussagen schließen.  2 Theoretischer Hintergrund 2.1 Erklärvideos  Erklärvideos sind im Sinne von [Wo15] „eigenproduzierte Filme, in denen erläutert wird, wie man etwas macht oder wie etwas funktioniert bzw. in denen abstrakte Konzepte erklärt werden.“ Diese Definition ist sehr offen, sodass es nicht verwunderlich ist, dass eine Fülle und Vielzahl von unterschiedlichen Erklärvideos beispielsweise auf YouTube zu finden sind. Diese lassen sich in unterschiedliche Typen einteilen. Es gibt zum Beispiel Screencasts, in denen ein Bildschirm aufgenommen wird, oder Erklärvideos, in denen eine Sprecherin oder ein Sprecher einen Vortrag hält [Br17; Sc16; Sc13b]. Für diesen Unterrichtsentwurf wurden Videos nach Art der Legetechnik [Fi18; Sc16; Sc13b; Sc13a] produziert. Die Charakteristik eines Legevideos ist, dass auf einem neutralen Hintergrund Bilder und Textbausteine bewegt und real gefilmt werden. Alternativ beziehungsweise ergänzend kann auch mit einem Stift etwas geschrieben werden. Ein Merkmal sind die sichtbaren Hände, die die Elemente bewegen, während eine Stimme aus dem Off passend dazu den Inhalt erklärt. Sogenanntes Storytelling bettet die Erklärungen in eine fiktive Rahmenhandlung ein [Sc16; Sc13b]. Ein entscheidender Vorteil von Erklärvideos ist die Selbststeuerung des Lernprozesses durch die Schülerinnen und Schüler. Diese haben die Möglichkeit das Erklärvideo anzuschauen wo und wann sie möchten. Außerdem kann dabei jeder in seinem eigenen Tempo vorgehen und gegebenenfalls vor- oder zurückspulen, wodurch eine gewisse Differenzierung unterstützt wird [Ab18; Br17; Ha17; St10].  Aus Sicht der Lehrkraft ist ein Nachteil hingegen der erhöhte Arbeitsaufwand für die Produktion von Erklärvideos [Fr16; St10]. Dieser relativiert sich allerdings dadurch, dass mit der Zeit auf einen Fundus auf öffentlichen Plattformen zugegriffen werden kann. Des Weiteren besteht die Gefahr, dass Schülerinnen und Schüler Erklärvideos als Freizeitfilme ansehen und in eine passive Haltung verfallen [Bü18; Fi18; We12]. 222 Tamara Hochthurn, Jens Gallenbacher Innovative Erklärvideos 3  2.2 Flipped Classroom Um Erklärvideos im Unterricht einzusetzen, bietet sich die Methode des Flipped Classrooms, oder auch Inverted Classrooms, an. Dabei werden die gewöhnlichen Phasen der Stoffvermittlung durch die Lehrkraft im Unterricht und die anschließende Übungsphase, welche in der Regel als Hausaufgabe zu Hause von den Schülerinnen und Schülern bearbeitet wird, „vertauscht“ [Be12; Bü18; Fä16; Ha12b; Sc12]. Konkret eignen sich die Lernenden in der ersten Phase - der sogenannten Inputphase beziehungsweise Selbststudienphase - selbstständig neues Wissen an. Dies geschieht zum Beispiel mit Hilfe eines Erklärvideos. Anschließend findet in der Präsenzphase im Unterricht ein Üben und Vertiefen der neuen Inhalte statt [Be12; Bü18; Fä16; Fi17; Ha18; Ha12a; Ha12b; Sa12]. Ein zentraler Punkt im Flipped Classroom ist die Schülerzentrierung. In der Inputphase sind die Schülerinnen und Schüler selbst verantwortlich, sich den neuen Stoff anzueignen. Die Schülerzentrierung in der Präsenzphase variiert jedoch in ihrer Ausprägung in der Praxis stark. So sprechen einige Autorinnen und Autoren lediglich von einer eigenständigen Auswahl aus mehreren Aufgaben. Andere wiederum deuten die Schülerzentrierung im strengeren Sinne, sodass die Schülerinnen und Schüler den Unterricht in der Präsenzphase auch inhaltlich selbstständig gestalten, nachdem sie das Erklärvideo in der Inputphase betrachtet haben [Ab18; Be12; Fä16; Fi17; Go14; Sa12; Sc12]. Ein weiterer Vorteil der Flipped Classroom Methode ist ein effektiver Zeitgewinn im Unterricht, der sinnvolles Vertiefen, Üben, Anwenden oder individuelles Differenzieren ermöglicht [Bü18; Fä16; Fi17; Ha18; Ha12a; Sa12; Sc12; We12]. Problematisch ist, wenn Schülerinnen und Schüler in der Inputphase das Erklärvideo nicht angeschaut haben und somit in der Präsenzphase ohne nötiges Vorwissen auftauchen. [Fi17; Go14; Ha12b; Sa12]. 2.3 In-Class-Flip Um diesen entscheidenden Nachteil zu umgehen, gibt es die Variante des In-Class-Flips. Bei diesem findet die erste Phase des Inverted Classrooms nicht zu Hause bei den Lernenden statt, sondern im Unterricht. Die Erarbeitung bleibt dennoch individuell in eigenem Tempo und nicht als von der Lehrkraft vorgegebener Inputvortrag [Bü18; Go14]. Ein Vorteil dieser Variante ist, dass die Schülerinnen und Schüler bei schwerwiegenden Problemen die Lehrkraft direkt fragen können. Zudem hat die Lehrkraft die Sicherheit, dass die Schülerinnen und Schüler das Erklärvideo wirklich anschauen und bearbeiten [Go14]. Andererseits verliert man den Vorteil des Zeitgewinns des klassischen Inverted Classrooms [Go14]. Innovative Gestaltung und Einsatz von Erklärvideos im Informatikunterricht 223 Innovative Erklärvideos 4  3 Unterrichtsablauf und Material 3.1 Kompetenzen Die durch die Unterrichtseinheit zu erwerbenden Kompetenzen wurden aus dem Lehrplan abgeleitet, in dem die grundlegende Kompetenz „Binäre Darstellung von Daten erläutern“ gefordert wird [Rh19]. Zur Überprüfung und Messung dieser Kompetenz wurden die folgenden spezifischen Kompetenzen gewählt: Die Schülerinnen und Schüler können …   • … eine mindestens sechsstellige Binärzahl in eine Dezimalzahl umwandeln.  • … eine Dezimalzahl (mindestens bis 100) in eine Binärzahl umwandeln. • … ohne Hilfsmittel erklären, was eine Binärzahl ist und wie diese aufgebaut ist. 3.2 Erklärvideoproduktion Um diese Kompetenzen zu erreichen, wurden zunächst zwei Erklärvideos produziert. Dazu galt es zuerst die Artefakte auszuwählen. Die Wahl fiel auf die Punktekarten der Abenteuer Informatik Ausstellung sowie auf Lämpchenkarten, welche an die binäre Uhr der Ausstellung angelehnt sind [Ga17]. Zudem wurden Stift und Papier als Artefakte angesehen. Aufgrund des gewünschten Einsatzes der Artefakte bot sich die Erklärvideo Art der Legetechnik an, da so die Artefakte wirklich eingesetzt und verwendet werden konnten. Zuerst wurde dazu ein Storyboard geschrieben, welches für jede Szene den Sprechtext und die dazugehörigen Bilder und Aktionen beschreibt. Für das charakteristische Merkmal des Storytellings von Erklärvideos wurde eine fiktive Rahmengeschichte erfunden. Diese handelt von zwei Freunden, Anna und Ben, welche mit den Artefakten die binäre Uhr der Abenteuer Informatik Ausstellung erforschen.  Der Grundablauf ist bei beiden Erklärvideos identisch. Dadurch liegt der Unterschied lediglich im Einsatz der Artefakte. Dies bedeutet, dass in dem Erklärvideo mit Einsatz von Artefakten an einigen Stellen konkrete Handlungsanweisungen für die Schülerinnen und Schüler gegeben werden. Diese sind beispielsweise die benötigten Karten auszuschneiden, mit diesen Aufgaben zu lösen, sowie mit Stift und Papier die Stellenwerttabelle zu erstellen und sich zu überlegen, wie diese gebildet wird. Im Erklärvideo ohne Artefakte fallen diese Szenen weg, sodass die Schülerinnen und Schüler nicht aktiv am Erklärvideo teilnehmen. Damit jedoch die Lernenden ohne Artefakte nicht per se weniger Übungsaufgaben bekommen, rechnen sie im Anschluss an das Erklärvideo die gleichen Aufgaben als „Check-Up Aufgaben“.  Die beiden Erklärvideos findet man unter http://www.abenteuer-informatik.de/video/binaer_mit.mp4 und http://www.abenteuer-informatik.de/video/binaer_ohne.mp4. 224 Tamara Hochthurn, Jens Gallenbacher Innovative Erklärvideos 5  3.3 Unterrichtsablauf Im Unterricht werden die Videos mit Flipped Classroom eingesetzt. In der Selbststudienphase betrachten dabei die Schülerinnen und Schüler das jeweilige Erklärvideo entweder mit oder ohne Artefakte. In der anschließenden Präsenzphase findet dann eine identische Stationenarbeit statt. Es sei angemerkt, dass dabei inhaltlich wenig Schülerzentrierung vorhanden ist, da die Stationen vorgegeben sind. Es gibt sieben Stationen, bei denen zwei Pflicht sind, um die grundlegenden Umrechenarten zu üben. Danach haben die Lernenden die Möglichkeit frei aus den Stationen auszuwählen. Es wird darauf geachtet, dass die Stationen möglichst unterschiedliche Lerntypen ansprechen. So ist die dritte Station spielerisch angelegt, da es sich um zwei verschieden schwere Memorys aus Binärzahl-Dezimalzahl Paaren handelt. Die Schülerinnen und Schüler können also ihrem geschätzten Leistungsstand entsprechend auswählen, welche Variante sie zum Üben verwenden. Für die vierte Station wurde ein weiteres kurzes Erklärvideo zum „Finger Binärsystem“ produziert, welches auf http://www.abenteuer-informatik.de/video/finger_binaer.mp4 zu finden ist. Jeder Finger stellt bei diesem eine andere Zweierpotenz dar, was in dem Erklärvideo veranschaulicht wurde. Die zwei Zustände Eins und Null werden durch einen ausgestreckten oder nicht ausgestreckten Finger dargestellt. Hierbei werden haptisch lernende Schülerinnen und Schüler angesprochen, da sie mit den eigenen Fingern binär zählen lernen. Dieses Zählen wird in Station fünf noch näher beleuchtet. Dazu wurde eine Stellenwerttabelle als Arbeitsblatt erstellt, in die die Schülerinnen und Schüler die Binärzahlen zu den Dezimalzahlen eins bis 20 schreiben und Regelmäßigkeiten erforschen sollen. Wieder eher spielerisch ist die sechste Station. Dabei geht es um einen Zaubertrick, der sich das Binärsystem zu Nutze macht. Die Lernenden erhalten dazu ebenfalls aus der Abenteuer Informatik Ausstellung die passenden Zauberkarten und erfahren das, was eine Freiwillige oder ein Freiwilliger beim Zaubertrick auch gesagt bekommt [Ga17]. Anschließend sollen sie knobeln und gemeinsam ausprobieren, wie der Trick funktioniert. In der letzten Station schließlich geht es um die Addition von Binärzahlen, die die Schülerinnen und Schüler herleiten sollen.  Während der Stationenarbeit liegen die Lösungen am Pult, sodass die Schülerinnen und Schüler selbstverantwortlich ihre eigenen Ergebnisse kontrollieren. Ebenso gibt es bei einigen Stationen gestaffelte Tippkarten, die schrittweise helfen. Diese Elemente dienen der Selbstverantwortlichkeit und Eigenständigkeit der Schülerinnen und Schüler.  Gegen Ende der Präsenzphase sind zehn Minuten zur Besprechung im Plenum eingeplant. An zwei Beispielen werden die grundlegenden Umrechenarten gemeinsam zusammengefasst, sowie allgemein beschrieben, was eine Binärzahl ist. Dazu wird parallel ein Tafelbild mit den beiden Musterlösungen erstellt.  Neben der klassischen Inverted Classroom Methode wird ebenfalls ein In-Class-Flip verwendet. Dazu bekommen alle Lernenden einen Computer und Kopfhörer, damit ein individuelles Lernen möglich ist. Die Präsenzphase findet direkt im Anschluss an die Selbststudienphase statt. Die beiden Durchführungen unterscheiden sich lediglich in der Inputphase, die anschließende Stationenarbeit in der Präsenzphase ist identisch. Es wurde Innovative Gestaltung und Einsatz von Erklärvideos im Informatikunterricht 225 Innovative Erklärvideos 6  darauf geachtet, dass beide Gruppen in der Präsenzphase eine identische Zeitspanne für die Stationen zur Verfügung hatten, um sonst entstehende Vorteile einer längeren Übungszeit auszuschließen.  Alle Materialien der Stationenarbeit und die genauen Unterrichtsabläufe sind unter http://www.abenteuer-informatik.de/download/flippedclassroom_binaersystem.zip zur Nutzung im eigenen Unterricht zu finden. 3.4 Empirische Untersuchung Untersucht wurde, ob sich der Einsatz von Artefakten im Vergleich ohne Artefakte positiv auf die Kompetenzentwicklung der Lernenden auswirkt. Außerdem war die Frage, ob das Schauen des Erklärvideos als Hausaufgabe beim klassischen Flipped Classroom erfolgsversprechender ist oder das Schauen im Unterricht beim In-Class-Flip.  Dazu wurden vier Parallelkursen eines städtischen Gymnasiums die unterschiedlichen Varianten zugewiesen. Es gab also jeweils einen Kurs mit dem klassischen Inverted Classroom mit Einsatz von Artefakten und ohne Artefakte, sowie jeweils einen In-Class-Flip Kurs mit und ohne Artefakte.  Um zu überprüfen, ob die Schülerinnen und Schüler bereits das Binärsystem kennen wurde ein Vortest durchgeführt. Neun Wochen später fand dann die eigentliche Doppelstunde mit der Stationenarbeit statt und in der Stunde darauf ein angekündigter erster Nachtest. Dieser war von den Aufgabentypen identisch mit denen des Vortests. Die erste Aufgabe bestand aus jeweils zwei Umrechenaufgaben einer Binärzahl in eine Dezimalzahl, während die zweite Aufgabe die Umrechnung zweier Dezimalzahlen in Binärzahlen war. Die dritte Aufgabe fragte nach einer möglichst genauen Beschreibung was eine Binärzahl ist und wie diese aufgebaut ist. Zwei Wochen nach dem ersten Nachtest fand die Kursarbeit der Schülerinnen und Schüler statt. Dabei wurde jeweils eine Umrechenart gestellt sowie die Transferaufgabe ein neues Stellenwertsystem zu einer anderen Basis zu beschreiben und eine Dezimalzahl darin darzustellen. Fünf Wochen nach dieser Kursarbeit, also insgesamt sieben Wochen nach dem ersten Nachtest, wurde ein zweiter unangekündigter Nachtest durchgeführt.  4 Ergebnisse Trotz der geringen Teilnehmerzahl von 53 Schülerinnen und Schülern mit dementsprechend kleiner statistischer Relevanz, lassen sich folgende Tendenzen ablesen: Das Fazit des Vortests war, dass keine Schülerin und kein Schüler die Aufgaben absolut richtig lösen konnte. Es gab insgesamt fünf Schülerinnen und Schüler in allen Kursen, die jedoch ein gewisses Vorwissen zeigten. Dadurch ergab sich für den Kurs mit dem 226 Tamara Hochthurn, Jens Gallenbacher Innovative Erklärvideos 7  klassischen Flipped Classroom ohne Artefakte1 von zwölf möglichen Punkten eine durchschnittliche Gesamtpunktzahl von 0,83. Beim In-Class-Flip ohne Artefakte2 wurden im Durchschnitt 0,85 Punkte erzielt, beim In-Class-Flip mit Artefakten3 0,53 sowie beim klassischen Flipped Classroom mit Artefakten4 0 Punkte.  Im folgenden Diagramm ist die anschließende Entwicklung der Schülerinnen und Schüler zwischen dem ersten und dem zweiten Nachtest dargestellt.  Abb. 1: Entwicklung der durchschnittlichen Punktzahl zwischen dem ersten und zweiten Nachtest Bereits beim ersten Nachtest erzielten die Lernenden mit dem klassischen Flipped Classroom ein leicht besseres Ergebnis als jene mit dem In-Class-Flip. Außerdem gab es die Tendenz, dass innerhalb einer Flipped Classroom Variante der Kurs mit Artefakten eine leicht höhere Punktzahl erreichte. Jedoch gilt nicht pauschal die Aussage, dass Lernende mit Artefakten ein besseres Ergebnis erzielten als Lernende ohne Artefakte. Im Vergleich dazu schnitten alle Kurse im zweiten Nachtest im Durchschnitt etwas schlechter ab als im Ersten. Die Ergebnisse befinden sich aber auf etwa einem Niveau zwischen 9,6 und 10,2. Dennoch waren die Kurse mit dem klassischen Inverted Classroom auch beim zweiten Nachtest noch leicht besser als die In-Class-Flip Kurse. Allerdings gilt nicht mehr pauschal die Tendenz, dass innerhalb der einzelnen Flips die Kurse mit Artefakten besser waren.                                                             1 Dieser Kurs wird im Folgenden Kurs FO benannt. 2 Dieser Kurs wird im Folgenden Kurs ICO benannt. 3 Dieser Kurs wird im Folgenden Kurs ICA benannt. 4 Dieser Kurs wird im Folgenden Kurs FA benannt. Nachtest 1Nachtest 2Kurs FO10,9210,25Kurs ICO9,859,69Kurs ICA10,59,88Kurs FA11,0910,098,599,51010,51111,5DurchschnittspunktzahlKurs FOKurs ICOKurs ICAKurs FAInnovative Gestaltung und Einsatz von Erklärvideos im Informatikunterricht 227 Innovative Erklärvideos 8  Die Ergebnisse der Kursarbeit unterstützen das Ergebnis des ersten Nachtests und weisen darauf hin, dass die beim ersten Nachtest erzielten Ergebnisse kein Zufall waren. So sind auch dort die identischen Tendenzen erkennbar wie beim ersten Nachtest. Der Vorsprung der Kurse mit Artefakten im Vergleich zu der direkten Flip Variante ohne Artefakte ist jedoch nicht bei allen Teilaufgaben so deutlich wie beim ersten Nachtest. Bei der Transferaufgabe ist diese Tendenz am meisten ausgeprägt. Besonders hervorzuheben ist, dass die Transferaufgabe von dem Kurs FA mit 2,18 von 4 Punkten am besten gelöst wurde, während danach der Kurs FO mit 1,79 auf gleicher Höhe mit dem Kurs ICA mit 1,71 Punkten folgt. Der Kurs ICO schließlich erzielte lediglich 1 von 4 Punkten.  5 Interpretation der Ergebnisse Zuerst lässt sich festhalten, dass alle Schülerinnen und Schüler im Vergleich zum Vortest eine deutliche Kompetenzentwicklung gezeigt haben. Sowohl beim ersten Nachtest als auch beim Zweiten wurde im Durchschnitt eine erfreulich hohe Punktzahl erreicht. Dennoch gab es wohl den Effekt des Vergessens, da der zweite Nachtest in allen Kursen etwas schlechter war als der erste Nachtest. Interessant ist die Abstufung der Ergebnisse im ersten Nachtest. Diese sind ein Indiz dafür, dass sich die Schülerinnen und Schüler mit dem klassischen Flipped Classroom zu Hause intensiver mit den Erklärvideos befasst haben als jene im In-Class-Flip, wodurch sie ein besseres Ergebnis erzielten. Diese Tendenz ist in allen drei Überprüfungen vorhanden.  Die Hypothese, dass die Nutzung von Artefakten eine bessere Kompetenzentwicklung begünstigen, lässt sich so jedoch in den vorliegenden Ergebnissen nicht bestätigen. Allerdings war beim ersten Nachtest die Tendenz vorhanden, dass immerhin im direkten Vergleich der Kurs ICA besser war als ICO und der Kurs FA besser war als der Kurs FO.  Dass der Kurs FA bei der Kursarbeit das beste Ergebnis erzielte, deutet zudem darauf hin, dass es möglich ist, dass die Verbindung von klassischem Flipped Classroom und Einsatz von Artefakten ein tieferes Verständnis bei den Schülerinnen und Schülern fördert. 6 Fazit Auch wenn in den vorliegenden Ergebnissen der empirischen Untersuchung keine bahnbrechenden Effekte beim Einsatz mit Artefakten feststellbar waren, hat das vorgestellte Konzept dennoch seine Berechtigung. Die Methode des Flipped Classrooms bzw. In-Class-Flips in Verbindung mit den Erklärvideos und Artefakten ist eine gelungene Methode, die auf überwiegend große Begeisterung der Lernenden gestoßen ist.  Konkret die Nutzung der Artefakte spricht besonders die haptisch, enaktiv lernenden Schülerinnen und Schüler an, welche oft im alltäglichen Unterricht eher zu kurz kommen. Denkbar ist es, dass man den Lernenden beide Erklärvideos als Optionen zur Verfügung 228 Tamara Hochthurn, Jens Gallenbacher Innovative Erklärvideos 9  stellt, sodass noch mehr der Forderung nach Eigenständigkeit nachgegangen wird. Dann haben die Schülerinnen und Schüler die Möglichkeit sich bewusst auszusuchen, ob sie lieber aktiv oder lieber passiv ein Erklärvideo betrachten.  Zusammenfassend lässt sich sagen, dass es für ein signifikant relevantes Ergebnis wünschenswert wäre, wenn an mehreren Schulen die Unterrichtssequenzen in der beschriebenen Form eingesetzt werden, um eine größere Stichprobe zu erhalten. Zudem wäre es sehr spannend zu sehen, welche Kompetenzen die Lernenden nach einem wesentlich längeren Zeitraum noch vorzeigen können und ob dann die Artefakte oder die Flip-Varianten vielleicht deutlichere Effekte erzielen. Es besteht also noch Forschungsbedarf. Die Pilotstudie hat aber dennoch ergeben, dass es sich um eine innovative, schüleraktivierende Methode handelt, die sinnvoll im Unterricht eingesetzt werden kann.  Literaturverzeichnis [Ab18] Abila, C.; Schallert, S.: SchülerInnenaktivierende Methoden in der Präsenzphase. In (Buchner, J. et al. Hrsg.): Inverted Classroom. Vielfältiges Lernen  Begleitband zur 7. Konferenz Inverted Classroom and Beyond 2018  FH St. Pölten, 20. & 21. Februar 2018, 2018; 15-19. [Be12] Bergmann, J.; Sams, A.: Flip your classroom. Reach every student in every class every day. International Society for Technology in Education, Eugene, Or, Alexandria, Va, 2012. [Br17] Brehmer, J.; Becker, S.: "Erklärvideos". … als eine andere und/oder unterstützende Form der Lehre. Georg-August-Universität Göttingen, 2017. [Bü18] Bülles, O.; Freisleben-Teutscher, C.; Buchner, J.: Potentiale interaktiver Videos für das Inverted Classroom Model. In (Buchner, J. et al. Hrsg.): Inverted Classroom. Vielfältiges Lernen  Begleitband zur 7. Konferenz Inverted Classroom and Beyond 2018  FH St. Pölten, 20. & 21. Februar 2018, 2018. [Fä16] Fähnrich; Thein: Differenzieren mit Erklärvideos. Mehr Zeit im Unterricht, 2016. [Fi18] Finger, A.; Wiegelmann, J.: Biodiversität vor der Haustür: Einsatz von Simpleshows im Biologieunterricht. In (Meßinger-Koppelt, J.; Maxton-Küchenmeister, J. Hrsg.): Naturwissenschaften digital. Toolbox für den Unterricht. Joachim Herz Stiftung Verlag, Hamburg, 2018; S. 60–63. [Fi17] Finkenberg, F.; Trefzger, T.: Flipped Classroom im Physikunterricht in der Oberstufe, Dresden, 2017. [Fr16] Frank, C.: Handlungsorientierung im besten Sinne. Erklärvideos im Unterricht. In Pädagogik, 2016; S. 23–25. [Ga17] Gallenbacher, J.: Abenteuer Informatik. IT zum Anfassen für alle von 9 bis 99 - vom Navi bis Social Media. Springer, Berlin, 2017. Innovative Gestaltung und Einsatz von Erklärvideos im Informatikunterricht 229 Innovative Erklärvideos 10  [Go14] Gonzalez, J.: Modifying the Flipped Classroom: The "In-Class" Version. https://www.edutopia.org/blog/flipped-classroom-in-class-version-jennifer-gonzalez, 2014. 13.10.2018. [Ha12a]  Handke, J.: ICM-Effekte in der Hochschullehre. In (Handke, J.; Sperl, A. Hrsg.): Das Inverted Classroom Model. Begleitband zur ersten deutschen ICM-Konferenz. De Gruyter, Berlin/Boston, 2012; S. 139–148. [Ha12b] Handke, J.: Voraussetzungen für das ICM. In (Handke, J.; Sperl, A. Hrsg.): Das Inverted Classroom Model. Begleitband zur ersten deutschen ICM-Konferenz. De Gruyter, Berlin/Boston, 2012; 39-52. [Ha17] Handke, J.: Handbuch Hochschullehre Digital. Leitfaden für eine moderne und mediengerechte Lehre. Tectum Verlag, Baden-Baden, 2017. [Ha18]  Hahn, H.; Puschner, N.: Von der Präsenzvorlesung zu "Mini-Lectures" - Umsetzung eines Inverted-Classroom-Szenarios. In (Kortenkamp, U.; Kuzle, A. Hrsg.): Beiträge zum Mathematikunterricht 2017. Vorträge auf der 51. Tagung für Didaktik der Mathematik vom 27.02.2017 bis 02.03.2017 in Potsdam, 2018; S. 369–372. [Rh19]   Rheinland-Pfalz Ministerium für Bildung, Wissenschaft, Jugend und Kultur. Lehrplan Informatik Grund- und Leistungsfach, ohne Jahresangabe. Zugriff über: http://lehrplaene.bildung-rp.de/gehezu/startseite.html?keyword=informatik, Stand 10.05.2019. [Sa12] Sams, A.: Der "Flipped" Classroom. In (Handke, J.; Sperl, A. Hrsg.): Das Inverted Classroom Model. Begleitband zur ersten deutschen ICM-Konferenz. De Gruyter, Berlin/Boston, 2012; S. 13–23 [Sc12] Schäfer, A. M.: Das Inverted Classroom Model. In (Handke, J.; Sperl, A. Hrsg.): Das Inverted Classroom Model. Begleitband zur ersten deutschen ICM-Konferenz. De Gruyter, Berlin/Boston, 2012; S. 3–11. [Sc13a] Schön, S.; Ebner, M.: Gute Lernvideos. … so gelingen Web-Videos zum Lernen! Books on Demand, Norderstedt, 2013. [Sc13b] Schön, S.: Klappe zu! Film ab! - Gute Lernvideos kinderleicht erstellen. In (Pauschenwein, J. Hrsg.): Lernen mit Videos und Spielen. Tagungsband zum 12. E-Learning-Tag der FH Joanneum am 18.9.2013. Graz, 2013; S. 3–9. [Sc16] Schlegel, F. Schlegel, F.: Erklärvideos im Unterricht. Einstieg in die Filmbildung mit YouTube-Formaten. - Workshop für Lehrkräfte und MedienberaterInnen -. Film + Schule NRW, Münster, 2016. [St10] Stelmes, C.; Linckels, S.; Meinel, C.: Digitale Videos im Unterricht. Die "YouTube-Generation" lernt Judo mit E-Videos. In LOG IN, 2010; S. 22–28. [We12] Weidmann, D.: Das ICM als Chance für die individuelle Förderung von Schülern? In (Handke, J.; Sperl, A. Hrsg.): Das Inverted Classroom Model. Begleitband zur ersten deutschen ICM-Konferenz. De Gruyter, Berlin/Boston, 2012; 53-70. [Wo15] Wolf, K. D.: Video-Tutorials und Erklärvideos als Gegenstand, Methode und Ziel der Medien- und Filmbildung. In (Hartung, A. et al. Hrsg.): Filmbildung im Wandel. new academic press, Wien, 2015; S. 121–131. 230 Tamara Hochthurn, Jens Gallenbacher<First name last name [et. al.]>(ed.): < book title>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <year>    15 Zur Entwicklung des Masterstudiengangs «Medien und Informatik» Beat Döbeli Honegger1, Martin Hermida2, Regina Schmid3 Abstract: Seit 2017 wird nach und nach in allen 21 deutschsprachigen Kantonen der Schweiz der Lehrplan 21 eingeführt. Mit dem darin enthaltenen Modul «Medien und Informatik» betritt die Schweiz im deutschsprachigen Raum Neuland. Doch fehlen derzeit nicht nur Lehrpersonen mit den notwendigen Kompetenzen, sondern auch entsprechend ausgebildete Expertinnen und Experten zur Aus- und Weiterbildung dieser Lehrpersonen sowie zum Aufbau einer Fachdidaktik «Medien und Informatik». Mit dem «Joint Degree Masterstudiengang in Fachdidaktik Medien und Informatik» versuchen die Pädagogische Hochschule Schwyz, die Universität Zürich, die Fach-hochschule Luzern und die Pädagogische Hochschule Luzern diesem Mangel zu begegnen und die Grundlagen einer entsprechenden Fachdidaktik aufzubauen. Der vorliegende Beitrag beschreibt die Konzeption des Masterstudiengangs und die Herausforderungen anlässlich der ersten Durch-führung Keywords: Medien und Informatik, Fachdidaktik, Lehrplan 21, LehrerInnen-Bildung 1 Der Themenbereich «Medien und Informatik» im Lehrplan 21 Am 31.10.2014 hat die Deutschschweizer Erziehungsdirektorenkonferenz (D-EDK) den Lehrplan 21, der vom Kindergarten bis zum Ende der obligatorischen Schulzeit alle Fächer umfasst, zuhanden der Kantone verabschiedet [DEDK15a]. Unter anderem enthält der Lehrplan 21 auch das Modul «Medien und Informatik» [DEDK15b], das sich aus verschiedenen Perspektiven mit digitalen Phänomenen beschäftigt. Ähnlich wie die Dagstuhl-Erklärung [Br16], die eine technologische, eine gesellschaftlich-kulturelle und eine Anwendungsperspektive vorsieht, sind es im Lehrplan 21 die drei Bereiche Medien, Informatik und Anwendung. Der Lehrplan sieht dabei vor, dass die Bereiche Medien und Informatik in einem eigenen Gefäss vermittelt werden, Anwendungskompetenzen hingegen vorwiegend in anderen Fächern. Obwohl der Lehrplan 21 ausschliesslich eine Empfehlung an die Kantone ist, haben alle 21 mindestens teilweise deutschsprachigen Kantone beschlossen, den Lehrplan 21 einzuführen. Gewisse Kantone sehen dabei für «Medien und Informatik» bereits ab der 5. Klasse ein eigenes Zeitgefäss (meist im Um-fang einer Wochenlektion) vor. Andere Kantone integrieren die Themen in der 5. und 6. Klasse in bestehende Fächer und beginnen erst ab der 7. Klasse mit einem Zeitgefäss für Medien und Informatik (meist 2 Jahreslektionen verteilt auf die Klassenstufen 7-9).                                                            1 Pädagogische Hochschule Schwyz, IMS, Zaystrasse 42, CH-6410 Goldau, beat.doebeli@phsz.ch  2 Pädagogische Hochschule Schwyz, IMS, Zaystrasse 42, CH-6410 Goldau, martin.hermida@phsz.ch 3 Pädagogische Hochschule Schwyz, IMS, Zaystrasse 42, CH-6410 Goldau, regina.schmid@phsz.ch c b e   doi:18.18420/provided-by-editor-02 cba doi:10.18420/infos2019-23Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 231 16    Beat Döbeli Honegger, Martin Hermida, Regina Schmid  2 Aus- und Weiterbildungsbedarf an Pädagogischen Hochschulen Unabhängig davon, ob die Kompetenzen von «Medien und Informatik» in einem eigenen Zeitgefäss oder integriert in bisherigen Fächern vermittelt werden sollen, benötigen Lehrerinnen und Lehrer in allen drei Bereichen Kompetenzen, über die sie jedoch häufig noch nicht verfügen. Im Gegensatz zu den letzten Einführungen von neuen Fächern in der Schweizer Volksschule (Frühfranzösisch und Frühenglisch) fehlen den Lehrpersonen meist nicht nur die entsprechenden didaktischen Kompetenzen, sondern auch die zugrunde liegenden fachlichen Kompetenzen. Ferner fehlen ihnen Unterrichts-erfahrungen aus der eigenen Schulzeit [Dö15]. Abbildung 1 zeigt die erforderlichen Kompetenzbereiche, wobei die ebenfalls notwendigen mediendidaktischen Kompe-tenzen in allen Fächern und nicht nur bei «Medien und Informatik» eine Rolle spielen.  Fig. 1: Notwendige digitale Kompetenzen von Lehrpersonen [Dö15] Die meisten Kantone haben unterdessen entschieden, wie und ab wann der Lehrplan 21 und damit auch «Medien und Informatik» eingeführt werden soll [Hä18]. Die Pädagogi-schen Hochschulen der deutschsprachigen Schweiz wiederum haben mit der Ausbildung künftiger und der Weiterbildung bestehender Lehrpersonen begonnen (erste Berichte siehe [DH17] und [LR18]). 232 Beat Döbeli Honegger et al. Zur Entwicklung des Masterstudiengangs «Medien und Informatik»    17 Pädagogische Hochschulen in der Deutschschweiz sind derzeit stark gefordert und können insbesondere die Weiterbildungsnachfrage nicht immer vollständig befriedigen. Zudem zeigt sich, dass auch viele im Bereich «Medien und Informatik» tätige Mitarbeitende Kompetenzdefizite aufweisen. Darüber hinaus handelt es sich bei Medien und Informatik um bisher eher getrennt agierende Bereiche, deren Zusammenlegung zwar einerseits Synergien, andererseits aber auch Reibungsflächen bietet. Eine gemein-same Fachdidaktik mit einem geteilten Fachverständnis fehlt bisher weitgehend [DM15]. 3 Der «Master of Arts in Fachdidaktik Medien und Informatik» Ausgehend vom geschilderten Bedarf nach einer Qualifizierung von Mitarbeitenden pädagogischer Hochschulen im Bereich «Medien und Informatik» hat die Pädagogische Hochschule Schwyz als Leading House zusammen mit der Universität Zürich, der Fachhochschule Luzern und der Pädagogischen Hochschule Luzern im Rahmen des Bundesprogramms zum «Aufbau der wissenschaftlichen Kompetenzen in den Fach-didaktiken 2017-2020» [Sw17] einen entsprechenden Masterstudiengang konzipiert. 3.1 Studienumfang und Berufsmöglichkeiten Der «Master of Arts in Fachdidaktik Medien und Informatik» umfasst mindestens 90 ECTS-Punkte und dauert in der Regel drei Jahre. Studierende mit einer Vorbildung in Medien- und Kommunikationswissenschaft, Informatik, Erziehungswissenschaften oder einem Lehrdiplom auf Primar- und Sekundarschulstufe I können sich für den Master-studiengang bewerben. Weisen Sie nicht alle erforderlichen Qualifikationen zur Aufnahme eines Masterstudiengangs auf, so müssen sie zusätzliche vorbereitende oder ergänzende Leistungen erbringen. Der Masterstudiengang qualifiziert zur Dozierenden-tätigkeit in Aus- und Weiterbildung an Pädagogischen Hochschulen, zur Beratung von Schulleitungen und Lehrpersonen, zur Entwicklung von Lehrmitteln und zur For-schungstätigkeit. Der Studiengang ist jedoch kein Lehramtsstudium, d.h. er ist weder auf die Tätigkeit als Lehrperson ausgerichtet, noch ist mit ihm eine formale Unterrichts-berechtigung auf der Zielstufe verbunden. 3.2 Studienstruktur Das Studium setzt sich aus den drei Bereichen «Fachwissenschaftliche Studien», «Fach-didaktische Studien» und «Erziehungswissenschaftliche Studien» zusammen und widerspiegelt damit den oben beschriebenen Bedarf nach sowohl fachlichen als auch fachdidaktischen Kompetenzen. Abbildung 2 zeigt eine vereinfachte Darstellung der Studienstruktur.  Zur Entwicklung des Masterstudiengangs "Medien und Informatik" 233 18    Beat Döbeli Honegger, Martin Hermida, Regina Schmid    Fig. 2: Studienstruktur des Fachdidaktikmasters «Medien und Informatik» 3.3 Erstmalige Durchführung Nach einer sehr kurzen Aufbauphase konnte der Masterstudiengang im September 2018 mit rund 30 Studierenden in einer ersten Durchführung starten. Für die im September 2019 startende zweite Durchführung liegen 20 Anmeldungen vor. Nach Abschluss des ersten Studienjahres lassen sich Herausforderungen in drei Bereichen beschreiben. Inhaltlich sind insbesondere die Anbieterinnen und Anbieter dieses Masterstudiengangs gefordert, inhaltliche Kohärenz in diesem neuen Fachgebiet herzustellen. Für die Studierenden zeigt sich die Multidisziplinarität als eine der Herausforderungen in ihrem Studium. Weiter gilt es, im Zusammenspiel von Hochschulen und Studierenden, unterschiedliche organisatorische Strukturen in Einklang zu bringen. 3.3.1 Inhaltliche Herausforderungen Obwohl die Themen Medien und Informatik künftig fester Bestandteil der obligatorischen Volksschule sein werden, ist die Fachdidaktik Medien und Informatik erst im Aufbau [DM15]. Dieser Aufbauprozess muss auf drei Ebenen stattfinden. Auf einer ersten inhaltlichen Ebene muss festgelegt werden, welche Themen aus den Fachwissenschaften im Unterricht behandelt werden sollen und inwiefern diese Themen aus den beiden Fachwissenschaften Berührungspunkte aufweisen. Darauf aufbauend müssen auf einer zweiten Ebene anerkannte Bildungsstandards definiert werden, damit Unterricht auf diese ausgerichtet und evaluiert werden kann. Auf der dritten Ebene muss schliesslich das eigentliche fachdidaktische Handwerk erarbeitet werden, um die definierten Bildungsstandards im Unterricht zu erreichen. Die Herausforderung besteht nun darin, dass zwar mit dem Lehrplan «Medien und Informatik» eine erste, mindestens teilweise bildungspolitisch beeinflusste Setzung auf der ersten Ebene erfolgt ist, die anderen beiden Ebenen sich aber erst entwickeln 234 Beat Döbeli Honegger et al. Zur Entwicklung des Masterstudiengangs «Medien und Informatik»    19 müssen. Der Fachdidaktikmaster steht somit vor der Aufgabe, Elemente zu vermitteln, die teilweise erst erarbeitet werden. Im besten Fall ist der Fachdidaktikmaster eine hilfreiche Plattform zur Entwicklung und Etablierung dieser Ebenen. 3.3.2 Herausforderungen aus Studierendenperspektive Bevor sich die Studierenden mit der eigentlichen Fachdidaktik auseinandersetzen kön-nen, müssen sie sich die Grundlagen in den beiden Fachwissenschaften aneignen. Sie steigen damit in ein fachdidaktisches Studium ein, befassen sich aber vorerst mit rein fachwissenschaftlichen Inhalten ohne konkreten Bezug zur didaktischen Umsetzung und zur Zielstufe. Diese Vertiefung in die Fachwissenschaften ist für die professionelle Reife zentral, erfordert aber auch Ausdauer seitens der Studierenden. Zudem arbeiten einige Studierende bereits im Berufsfeld, jedoch ohne passende formale Qualifikation. Sie müs-sen nun ihre Tätigkeit notgedrungen auch aus anderer Perspektive betrachten, da die zunehmende Standardisierung und stärkere Anbindung an die Fachwissenschaften neue Massstäbe und Schwerpunkte setzen. Noch mehr Studierende des ersten Jahrganges sind mit dem Anspruch der modernen Hochschullehre konfrontiert, dass Forschung und Ent-wicklung in engem Bezug zueinander stehen sollen. Diese Studierenden müssen sich nun zusätzlich Kompetenzen in den sozialwissenschaftlichen Forschungsmethoden aneignen. 3.3.3 Organisatorische Herausforderungen Der Fachdidaktikmaster «Medien und Informatik» wird von vier Hochschulen getragen und hat in der ersten Durchführung Studierende mit sehr unterschiedlicher fachlicher Herkunft und Vorwissen angezogen. Dadurch war ein überdurchschnittlicher Koordina-tionsaufwand zum Abgleich aller Studienanforderungen und Reglemente der vier betei-ligten Hochschulen notwendig. Die grosse Heterogenität der Studierenden erforderte oft individuelle Abklärungen sur dossier mit entsprechendem Aufwand. Als weitere organi-satorische Herausforderung zeigt sich die terminliche Koordination der Lehrveranstal-tungen zwischen vier Hochschulen. Es musste sichergestellt werden, dass die Module innerhalb zweieinhalb Präsenztage pro Woche stattfinden, damit das Studium auch als Teilzeitstudium berufs- und/oder familienbegleitend absolviert werden kann. 4 Erstes Zwischenfazit Trotz den beschriebenen Herausforderungen ist ein erfolgreicher Start des Fachdidaktik-masters «Medien und Informatik» gelungen. Somit zeigt sich an einem kleinen Beispiel, dass neue Fächer nicht zwingend an fehlenden Kompetenzen in den Institutionen der Lehrerinnen- und Lehrerbildung scheitern müssen, sondern ein rascher Aufbau ent-sprechender Qualifikationsmassnahmen möglich ist. Es ist zu hoffen, dass dieser Fach-didaktikmaster mithelfen kann, eine inhaltlich und methodisch kohärente Fachdidaktik «Medien und Informatik» aufzubauen. Zur Entwicklung des Masterstudiengangs "Medien und Informatik" 235 20    Beat Döbeli Honegger, Martin Hermida, Regina Schmid  Literaturverzeichnis [Br16] Brinda, T. et al: Bildung in der digitalen vernetzten Welt – Dagstuhl-Erklärung. Deutsche Gesellschaft für Informatik, 2016. http://tinyurl.com/dagstuhl3eck https://doebe.li/t18567  [DEDK15a] Deutschschweizer Erziehungsdirektorenkonferenz (D-EDK): Lehrplan 21. Bereinigte Fassung, 2015. https://www.lehrplan.ch  https://doebe.li/b5500  [DEDK15b] Deutschschweizer Erziehungsdirektorenkonferenz (D-EDK): Medien und Informatik. In: D-EDK: Lehrplan 21. Bereinigte Fassung, 2015. https://projekt.lehrplan.ch/lehrplan/V5/ablage/FS1E_Modul_MI.pdf https://doebe.li/t17600  [DM15] Döbeli Honegger, B. & Merz, T.: Fachdidaktik Medien und Informatik - Ein Beitrag zur Standortbestimmung. In: Beiträge zur Lehrerinnen- und Lehrerbildung 33 (2015) 2, S. 256-263 https://doebe.li/t18200  [Dö15] Döbeli Honegger, B.: Digitale Kompetenzen von Lehrpersonen für den Lehrplan 21, 2015. https://doebe.li/t17550  [Dö16] Döbeli Honegger, B.: Mehr als 0 und 1. bern: hep Verlag, 2016. https://doebe.li/b6000  [DH17] Döbeli Honegger, B. & Hielscher, M.: Vom Lehrplan zur Lehrerinnenbildung. Erste Erfahrungen mit obligatorischer Informatikdidaktik für angehende Schweizer PrimarlehrerInnen. In: INFOS 2017, Lecture Notes in Infomatics (LN) - Proceedings Series der Gesellschaft für Informatik (GI) Volume P-274, S. 97-107 https://doebe.li/t16600  [HLF18] Hänggli, R.; Lenz, F. & Frey, T.: Umsetzung mediale und digitale Bildung in den Kantonen. Universität Freiburg, 2018. https://doebe.li/t20968  [LR18] Lamprou, A. & Repenning, A.: Teaching How to Teach Computational Thinking. In: ITiCSE 2018 Proceedings of the 23rd Annual ACM Conference on Innovation and Technology in Computer Science Education Pages 69-74 https://doebe.li/t20894  [Sw17] swissuniversities: P-9: Aufbau der wissenschaftlichen Kompetenzen in den Fachdidaktiken 2017-2020. https://www.swissuniversities.ch/de/organisation/projekte-und-programme/p-9/   236 Beat Döbeli Honegger et al.cbaArno Pasternak (Hrsg.): INFOS 2019,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Empfehlungen der GI – Kompetenzen für informatischeBildung im PrimarbereichAusgestaltung der Empfehlungen der Gesellschaft für InformatikLudger Humbert1, Henry Herper, Alexander Best, Christian Borowski, RitaFreudenberg, Martin Fricke, Kathrin Haselmeier, Volkmar Hinz, Dorothee Müller,Andreas Schwill, Marco ThomasAbstract:Vorstellung der Ergebnisse des Arbeitskreises »Bildungsstandards Informatik für denPrimarbereich«. Darstellung und Diskussion der Motivation und der Restriktionen, die die »Standards«enthalten. Vorstellung und Besprechung von Unterrichtsbeispielen zur Umsetzung von Aspekten, diedie Kompetenzentwicklung der Schülerinnen und Schüler befördern.2Keywords:Primarbereich; Primarstufe; Grundschule; Informatikkompetenzen; informatische Allge-meinbildung; Phänomene, informatisch betrachtet; Informatikglossar; Unterrichtsbeispiele; digitaleBildung1 MotivationInformatische Bildung muss Eingang in die allgemeine Bildung ﬁnden, um dem gesell-schaftlichen Bedarf nach einer fundierten, fachbezogenen Grundlage für die zunehmend vonInformatik durchdrungene Welt einzulösen. Dass es dazu verpﬂichtende Informatikelementein jeder Schule braucht, ﬁndet zunehmend breitere Zustimmung und führt(e) in einigenLändern zur Einrichtung eines eigenen, neuen Schulfachs in der Grundschule [Be18; Ga13].Im Jahr 2000 wurde die vom Fachausschuss »Informatische Bildung an Schulen (IBS)«erarbeitete »Empfehlung für ein Gesamtkonzept zur informatischen Bildung an allgemeinbildenden Schulen« [GI00] vorgelegt. Folgend wurden für alle weiterbildenden SchulendieGrundsätze und Standards für die Informatik in der Schule – BildungsstandardsInformatik für die Sekundarstufe I[GI08] ausgearbeitet und 2008 als Empfehlungen der GIverabschiedet. Die Empfehlungen fürGrundsätze und Standards für die Informatik in derSchule – Bildungsstandards Informatik für die Sekundarstufe II[GI16] führten die durchdas Gesamtkonzept implizierte Linie fort und gestalteten sie so weiter aus.1Didaktik der Informatik, Wuppertalhumbert@uni-wuppertal.de2Dieser Beitrag enthält Elemente aus dem Projekt »Informatik an Grundschulen (IaG)«, die durch Unterstützungdes Ministeriums für Schule und Bildung des Landes Nordrhein-Westfalen (MSB) realisiert werden konnten[MS17].cba doi:10.18420/infos2019-24Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 2372 Ludger Humbert, Henry Herper, Alexander BestMit denKompetenzen für informatische Bildung im Primarbereich[GI19b] liegen numehrverabschiedete Empfehlungen auch für Anforderungen an die informatische Bildung fürden Primarbereich bis zum Ende der Grundschule (4. Klasse) vor.2 EinordnungInformatik trägt wesentlich zur Allgemeinbildung bei. Es ist Aufgabe der Grundschule,die Fähigkeiten, Interessen und Neigungen von Kindern aufzugreifen und sie mit denAnforderungen fachlichen und fachübergreifenden Lernens zu verbinden. Eine bewussteTeilnahme am Leben in unserer Gesellschaft, aber auch die konstruktive Mitgestaltungder Lebenswelt setzen zunehmend informatische Kompetenzen voraus. Um Informatik fürKinder als kreativen Gestaltungsbereich fürs Problemlösen zugänglich zu machen, bedarf eseiner altersgerechten Einbettung in den Primarbereich. Dies muss durch didaktisch gestalteteFachkonzepte zur Erläuterung »informatischer Phänomene« erfolgen.Die Empfehlungen für dieKompetenzen für informatische Bildung im Primarbereichstelleneinen weiteren Baustein zur informatischen Bildung bereit. Alle drei Empfehlungen derGI detaillieren Kompetenzen für die fünf Prozess- und Inhaltsbereiche, die in Abbildung1dargestellt werden.InhaltsbereicheProzessbereicheInformation und DatenAlgorithmenSprachen und AutomatenInformatiksystemeInformatik, Mensch und GesellschaftModellieren und ImplementierenBegründen und BewertenStrukturieren und VernetzenKommunizieren und KooperierenDarstellen und InterpretierenAbb. 1: Kompetenzstrukturmodell: Prozess- und InhaltsbereicheDamit liegt ein vollständiges Konzept für eine zeitgemäße und fachlich fundierte informa-tische Bildung für die formale Bildung vom Primarbereich bis zum allgemeinbildendenAbitur vor [vgl. GI19a].238 Ludger Humbert et al.Primarbereich – Bildungsstandards 33 GestaltungsherausforderungenDie für den Primarbereich vorliegenden Empfehlungen gilt es in der Grundschule umzusetzen.Dazu wurden während der Erarbeitungsphase Vorschläge diskutiert, allerdings muss –im Unterschied zur weiterführenden Schule und zur gymnasialen Oberstufe – davonausgegangen werden, dass absehbar in Deutschland kein eigenes Schulfach Informatikin der Grundschule eingerichtet wird. Damit fehlen für den Informatikunterricht in derGrundschule – voraussichtlich auch in der Zukunft – primär qualiﬁzierte Lehrkräfte.Ebenfalls fehlen Unterrichtserfahrungen, die – in der Breite vorhanden – Grundlage fürEntwicklung und Gestaltung des Informatikunterrichts in der Grundschule darstellen undso einen wesentlichen Beitrag für die Unterrichtspraxis liefern würden. Umso wichtiger istes, dass Elemente gestaltet, erprobt und evaluiert werden, die auf einer fachdidaktischenBasis zum Gelingen informatischer Bildung in der Grundschule beitragen.Es ist unabdingbar, dass für die Gestaltung von Unterrichtselementen die Expertise vonGrundschullehrkräften berücksichtigt wird und die Umsetzung in verschiedenen Kontextenerprobt wird, damit vermieden werden kann, dass unterrichtliche Ideen zwar fachlichenAnforderungen genügen, nicht aber in den Grundschulen umgesetzt werden (können). Daherstellen wir Elemente vor, die Zugänge zur Informatik bereitstellen, die in verschiedenenunterrichtlichen Kontexten erprobt wurden und es erlauben, informatische Kompetenzenbei den Kindern in der Grundschule zu entwickeln.Beispiele3Um die Erreichung der Kompetenzen zu befördern, bedarf es konkreter, erprobter Beispiele.Mit der Verö entlichung der Entwurfsfassung der Kompetenzen in der LOG IN wurdenexemplarisch Elemente und Ideen für die Umsetzung vorgestellt [HK18]. In dem Projekt»Informatik an Grundschulen (IaG)« des nordrhein-westfälischen Schulministeriums wurdendarüber hinaus drei Module zur Umsetzung der Kompetenzen entwickelt, an Grundschulenerprobt und evaluiert [Ma18]. Dabei wurde insbesondere die Randbedingung, dass in diesemProjekt keine Informatiksysteme eingesetzt werden, berücksichtigt.Damit diese Rahmenbedingung konstruktiv eingelöst werden kann, wurde mit [Hu18]eine pointierte Sicht auf die Kompetenzentwicklung ohne Informatiksysteme sowohl inden historischen Kontext eingeordnet als auch beispielhaft dargestellt. Zu dem ProjektIaG [MS17] wurden vom Schulministerium des Landes Nordrhein-Westfalen Lehrerhand-reichungen, Hinweise zur Konzeption von Fortbildungsmaßnahmen sowie Materialienfür die Schülerinnen und Schüler ö entlich bereitgestellt [Hu19b]. Darüber hinaus wur-den von Teilnehmenden an der Erarbeitung der Kompetenzen parallel Forschungs- undEntwicklungsprozesse angestoßen, die zu weiteren Unterrichtsbeispielen führten [Ar16].3Teile dieses Abschnitts wurden ebenfalls in »Informatik – Kompetenzentwicklung bei Kindern« [Hu19a]verö entlicht.Empfehlungen der GI – Kompetenzen für informatische Bildung im Primarbereich 2394 Ludger Humbert, Henry Herper, Alexander BestNachfolgend werden Beispiele für den Primarbereich zu Automatenmodellen (Inhaltsbereich»Sprachen und Automaten«) und zur Kryptologie (Inhaltsbereich »Information und Daten«)skizziert. Während Automatenmodelle bislang nicht in der Grundschule thematisiert werdenund Grundschullehrpersonen unbekannt sind, werden Themen zur Kryptologie bereitsrudimentär im Sach-, Deutsch- und/oder Mathematikunterricht behandelt. Die Beispielewurden mit (angehenden) Grundschullehrpersonen entwickelt und teilweise im Unterrichterprobt sowie evaluiert.AutomatenmodelleDie Automatentheorie zeichnet sich durch einen starken Abstraktionsgrad aus, was wiederumhohe Anforderungen an die didaktische Aufbereitung entsprechender Themen für dieGrundschule stellt. Schülerinnen und Schüler begegnen Automaten regelmäßig in ihremAlltag, etwa über Getränkeautomaten [GI19b, S. 10]. Dass sich deren Abläufe formalisieren,über Automatenmodelle modellieren und mittels Zustandsübergangsdiagrammen oder-tabellen darstellen lassen, ist ihnen hingegen nicht bewusst. Alltagsautomaten stellen fürdie Schülerinnen und Schüler somit eineBlack-Boxdar, mit der sie interagieren, derenFunktionsweise sie jedoch nicht nachvollziehen können.Ein schülerorientierter Kontext istPasswortsicherheit. Der Sicherheitsgrad eines Passwortskann anhand der Anzahl umgesetzter Kriterien deﬁniert werden. Der Sicherheitsgradsei über die Zuständerot,gelbundgründeﬁniert. Die Anzahl erfüllter Kriterien stelltdie Zustandsübergänge dar. Kriterien könntenZi ernoderKlein-undGroßbuchstabensein. Neben der Bewertung des Sicherheitsgrads stellen die Schülerinnen und Schülerden Bewertungsvorgang auch in einem Zustandübergangsdiagramm dar, um erstens dieAutomatisierbarkeit der Bewertung zu verstehen, zweitens den Bewertungsvorgang zuverinnerlichen und drittens das Zustandsmodell als kommunikationsstützende Notation zuerfahren.Die Schülerinnen und Schüler werden in die Lage versetzt, das Zustandsübergangsdiagrammin ein mentales Modell und ihr mentales Modell in ein entsprechendes Zustandsübergangs-diagramm zu überführen. Zunächst wird das vorgestellte Automatenmodell als Akzeptoraufgefasst, mit dem die Schülerinnen und Schüler exemplarisch Passwörter auf ihrenSicherheitsgrad, also die Anzahl erfüllter Kriterien, prüfen. Anschließend erweitern sie dasAutomatenmodell um selbstgewählte Kriterien sowie Zustände und modellieren diese imbestehenden Zustandsübergangsdiagramm. Dies könnte etwa über den Zustandorangeunddas KriteriumWortlänge > 7 Zeichenerfolgen.240 Ludger Humbert et al.Primarbereich – Bildungsstandards 5sehrunsicherunsichersichersehrsicherKriteriumerfülltKeinKriteriumerfülltWeiteresKriteriumerfülltKeinweiteresKriteriumerfülltWeiteresKriteriumerfülltKeinweiteresKriteriumerfülltAbb. 2: Zustandsübergangsdiagramm für die Bewertung eines Passworts über drei SicherheitskriterienKryptologieKinder im Grundschulalter nutzen bereits einfache kryptologische Verfahren, um geheimeBotschaften untereinander auszutauschen. Dazu zählen sowohl Transpositions- als auchSubstitutionsverfahren. Anknüpfend an diese Vorerfahrungen können zunächst zwei einfachesymmetrische Verfahren eingeführt werden: Caesar-Chi re und Skytalen. Inbesondere derhandlungsbasierte (enaktive) Zugang [Br64, S. 2] bietet sich für die Grundschule an, um andas entwicklungspsychologische Stadium der Schülerinnen und Schüler anzuknüpfen (sieheJean PiagetsModell der kognitiven Entwicklung[Pi74]). Über die Gegenstände Kästchen,Schlüssel (privater Schlüssel) und Schloss (ö entlicher Schlüssel) kann ein kontrastierendesasynchrones Verfahren eingeführt werden.Verschiedene kryptologische Verfahren, neben den genannten u. a. Vigenère-Chi re,wurden bereits erfolgreich an Grundschulen umgesetzt [Ar16; MS17]. Die Notwendigkeitverschlüsselter Kommunikation ergibt sich für die Schülerinnen und Schüler intuitiv aus ihrerLebenswelt. Sowohl das Verständnis für einfache Verfahren als auch deren Anwendung, dieEinführung fachsprachlicher Elemente wieVerschlüsseln,ÜbermittelnoderEntschlüsselnsowie die Reﬂexion eingesetzter Verfahren ist in den Klassen 3-4 möglich und führt zuhoher Motivation der Schülerinnen und Schüler. Erfahrungen zur Thematisierung vonAutomatenmodellen in der Grundschule liegen bislang nur sporadisch vor. Es existierenverschiedene Kontexte, die speziﬁsch für den Primarbereich entwickelt wurden. Dazuzählen die Kontexte »Farbmischung« [Se17] oder »Schatzinsel« [BFW06]. Erfahrungen zurVermittlung von Themen der Automatentheorie aus der ersten (Hochschule) und dritten(Fortbildungen) Lehrerbildungsphase liegen vor und deuten darauf hin, dass (angehende)Empfehlungen der GI – Kompetenzen für informatische Bildung im Primarbereich 2416 Ludger Humbert, Henry Herper, Alexander BestLehrpersonen sich in entsprechend aufbereitete Kontexte einﬁnden können. Ansätze vonStudierenden liegen in Form schriftlicher Unterrichtsentwürfe vor [Ar16].4 PerspektivenDie Arbeit muss fortgeführt werden, wollen wir nicht auf der Beispielebene verharren.Es gilt, Modelle zur Umsetzung der Empfehlungen in der Grundschule zu entwickeln,die nachhaltig informatische Bildung befördern. Dabei stellt sich die Frage nach derVerankerung der informatischen Bildung in der Grundschule in anderer Form als in denweiterführenden Schulen, da der Widerstand gegen die Einführung eines eigenständigenSchulfachs Informatik zur Zeit noch breit aufgestellt ist.Es ist daher dringend auch zu diskutieren, ob Informatik als weitere Perspektive inden existierendenPerspektivrahmen Sachunterrichtder GDSU für den Sachunterrichtaufgenommen wird, ob die von den Schülerinnen und Schülern zu erreichenden Kompetenzenim Zusammenhang in die Schulfächer Deutsch und/oder Mathematik eingegliedert werdenkönnen oder weitere/andere Möglichkeiten zu entwickeln oder zu erproben sind, uminformatische Bildung in der Grundschule für alle Schülerinnen und Schüler zu ermöglichen.Für jede der zu diskutierenden Varianten ist allerdings unabdingbar, dass die Lehrkräfte,die die Umsetzung realisieren, fachlich und fachdidaktisch auf diese Herausforderungbestens vorbereitet werden. Dazu müssen sie in der ersten Phase ihrer Lehrerbildung diefachlichen und fachdidaktischen Dimensionen der Informatik erfahren. Andere Variantenwerden scheitern, wie am Beispiel der informationstechnischen Grundbildung abgelesenwerden kann, die zwar seit 30 Jahren in den Bildungsplänen der weiterführenden Schulenvorgesehen ist, aber nicht stattﬁndet, wie z. B. in [Be19] ausgeführt wird.Erste Informatikveranstaltungen für zukünftige Grundschullehrkräfte zeigen, dass der Auf-wand und die Gestaltungsanforderungen durchaus eine Herausforderung für die Universitätendarstellen, wenn erreicht werden soll, dass nicht nur grundlegende Konzepte entwickeltwerden sollen, sondern auch mögliche Optionen für die eigene Unterrichtsgestaltung alsZiel ausgewiesen wird, wie in »Informatik an Grundschulen – Stellschraube Lehrerbildung«[Ha19] deutlich wird. Die in einem anderen, parallelen Veranstaltungskontext entwickelten –universitären Ansprüchen genügenden – Kompetenzen verdeutlichen die mit der Informatikverbundenen Herausforderungen für die Lehrerbildung »Informatische Bildung für alleLehramtsstudierenden – Reformprozess einer allgemeinbildenden Informatikveranstaltungin der universitären Lehrerbildung« [LH19]. Ho nung ergibt sich, wenn wir betrachten,dass die Schülerinnen und Schüler, nachdem sie Informatikunterricht in der Grundschuleerfahren haben, in der weiterführenden Schule eine höhere Selbstkompetenz in Informatikzum Ausdruck bringen, wie in »Interesse an Informatik und Informatikselbstkonzept beiSchülerinnen und Schülern zu Beginn der fünften Jahrgangsstufe des Gymnasiums – Eineempirische Untersuchung« [Mü19] deutlich wird.242 Ludger Humbert et al.Primarbereich – Bildungsstandards 7Literatur[Ar16]Arbeitsbereich Didaktik der Informatik der WWU Münster, Hrsg.: ProjektInformatik in der Grundschule, Mai 2016,   :https://t1p.de/qhab, Stand:10. 05. 2019.[Be18]Berry, M.: »Computing« als neues Schulfach. Umsetzung des landesweitenCurriculums für das Fach Computing in England. LOG IN, Thema 38/189/190,hrsg. von Humbert, L.; Koerber, B., S. 20–26, 2018,    : 0720-8642.[Be19]Bernewasser, J.: Informatik für alle, Digitalisierung an Schulen. Zeit online/,9. Mai 2019,   :https://t1p.de/spl5, Stand: 10. 05. 2019.[BFW06]Bell, T.; Fellows, M.; Witten, I. H.: Computer Science Unplugged, 2006,   :https://classic.csunplugged.org/, Stand: 24. 03. 2019.[Br64]Bruner, J. S.: The course of cognitive growth. American Psychologist 19/1,S. 1–15, 1964.[Ga13]Gander, W.; Petit, A.; Berry, G.; Demo, B.; Vahrenhold, J.; McGettrick, A.;Boyle, R.; Drechsler, M.; Mendelson, A.; Stephenson, C.; Ghezzi, C.; Meyer, B.:Informatics education: Europe cannot a ord to miss the boat, Apr. 2013,   :https://t1p.de/6jvf, Stand: 23. 04. 2019.[GD13]GDSU, Hrsg.: Perspektivrahmen Sachunterricht. GDSU – Gesellschaft fürDidaktik des Sachunterrichts, Julius Klinkhardt, Bad Heilbrunn, 2013,    :9783781519923.[GI00]Gesellschaft für Informatik e. V.: Empfehlung für ein Gesamtkonzept zurinformatischen Bildung an allgemein bildenden Schulen. Informatik Spektrum23/6, Beilage LOG IN 20 (2000) Heft 2, S. I-VII, S. 378–382, Dez. 2000,    :0170-6012,   :https://t1p.de/ntpf, Stand: 19. 03. 2019.[GI08]Gesellschaft für Informatik e. V.: Grundsätze und Standards für die Informatikin der Schule – Bildungsstandards Informatik für die Sekundarstufe I, Erarbeitetvom Arbeitskreis »Bildungsstandards« – Beschluss des  -Präsidiums vom24. Januar 2008 – verö entlicht als Beilage zur LOG IN 28 (2008) Heft 150/151,Apr. 2008,   :https://t1p.de/xb2w, Stand: 30. 04. 2019.[GI16]Gesellschaft für Informatik e. V.: Grundsätze und Standards für die Informatik inder Schule – Bildungsstandards Informatik für die Sekundarstufe II, Erarbeitetvom Arbeitskreis »Bildungsstandards SII« – Beschluss des  -Präsidiums vom29. Januar 2016 – verö entlicht als Beilage zur LOG IN 36 (2016) Heft 183/184,Apr. 2016,   :https://t1p.de/vxhy, Stand: 30. 04. 2019.[GI19a]Gesellschaft für Informatik e. V.: GI-Radar 233: Informatik im Primarbereich,2019,   :https://t1p.de/p129, Stand: 22. 04. 2019.Empfehlungen der GI – Kompetenzen für informatische Bildung im Primarbereich 2438 Ludger Humbert, Henry Herper, Alexander Best[GI19b]Gesellschaft für Informatik e. V., Hrsg.: Kompetenzen für informatische Bildungim Primarbereich, Empfehlungen der Gesellschaft für Informatik e. V. Erarbeitetvom Arbeitskreis »Bildungsstandards Primarbereich« – Beschluss des  -Präsidiums vom 31. Januar 2019 – wird in gedruckter Form der LOG IN 39(2019) Heft 191/192 beigefügt, 7. Feb. 2019,   :http://uni-w.de/1gm,Stand: 09. 03. 2019.[Ha19]Haselmeier, K.: Informatik an Grundschulen – Stellschraube Lehrerbildung. In(Pasternak, A., Hrsg.): Informatik für alle, INFOS 2019, 18. GI-Fachtagung In-formatik und Schule, 16.–18. September 2019, Dortmund, Germany. Bd. P288.LectureNotes in Informatics (LNI)-Proceedings, n. n. e., Gesellschaft für Infor-matik e. V. (GI), Bonn, xx–yy, 2019,    : 978-3-88579-682-4.[HK18]Humbert, L.; Koerber, B., Hrsg.: Informatische Bildung im Primarbereich.Themenheft der Zeitschrift LOG IN, Bd. 38, 189/190, Aug. 2018.[Hu18]Humbert, L.; Müller, D.; Fricke, M.; Haselmeier, K.; Siebrecht, D.: »Be-cause the music is not inside the piano«, Ist informatische Bildung ohneInformatiksysteme wünschenswert? LOG IN, Praxis & Methodik 38/189/190,hrsg. von Humbert, L.; Koerber, B., S. 67–72, 2018,    : 0720-8642,   :http://uni-w.de/1aq, Stand: 08. 02. 2019.[Hu19a]Humbert, L.; Best, A.; Micheuz, P.; Hellmig, L.: Informatik – Kompetenzent-wicklung bei Kindern. Informatik Spektrum 42/, n. n. e. – Preprint, rs–tu, 2019,    : 0170-6012,   :https://t1p.de/qhn7, Stand: 10. 05. 2019.[Hu19b]Humbert, L.; Magenheim, J.; Schroeder, U.; Fricke, M.; Bergner, N.: Handrei-chung für Lehrkräfte, Handreichungen und Unterrichtsmaterial. Hinweise zurSchulung/Fortbildung, hrsg. von Informatik an Grundschulen (IaG), 21. März2019,   :https://t1p.de/iu9z, Stand: 19. 04. 2019.[LH19]Losch, D.; Humbert, L.: Informatische Bildung für alle Lehramtsstudierenden –Reformprozess einer allgemeinbildenden Informatikveranstaltung in der univer-sitären Lehrerbildung. In (Pasternak, A., Hrsg.): Informatik für alle, INFOS2019, 18. GI-Fachtagung Informatik und Schule, 16.–18. September 2019, Dort-mund, Germany. Bd. P288. LectureNotes in Informatics (LNI)-Proceedings,n. n. e.; Preprint-Version, die die eingereichte und angenommene Fassung dar-stellt und bis zur Verö entlichung noch überarbeitet wird, Gesellschaft fürInformatik e. V. (GI), Bonn, 1. Feb. 2019,    : 978-3-88579-682-4,   :https://uni-w.de/1lj, Stand: 04. 05. 2019.[Ma18]Magenheim, J.; Müller, K.; Schulte, C.; Bergner, N.; Haselmeier, K.; Hum-bert, L.; Müller, D.; Schroeder, U.: Evaluation of Learning Informatics inPrimary Education. In (Pozdniakov, S. N.; Dagien˙e, V., Hrsg.): Informatics inSchools, Fundamentals of Computer Science and Software Engineering. 11thInternational Conference on Informatics in Schools: Situation, Evolution, andPerspectives, ISSEP 2018, Springer Verlag, St. Petersburg, Russia, S. 339–354,Okt. 2018,    : 978-3-030-02749-0.244 Ludger Humbert et al.Primarbereich – Bildungsstandards 9[MS17]MSB NRW, Hrsg.: Informatik an Grundschulen – Ziele, Pilotprojekt zurErprobung von Konzepten zur informatischen Bildung im Rahmen des Sachun-terrichts an Grundschulen, MSB NRW – Ministerium für Schule und Bildungdes Landes Nordrhein-Westfalen, Juli 2017,   :https://t1p.de/pods, Stand:25. 01. 2019.[Mü19]Müller, D.; Haselmeier, K.; Humbert, L.; Killich, K.: Interesse an Informatikund Informatikselbstkonzept bei Schülerinnen und Schülern zu Beginn derfünften Jahrgangsstufe des Gymnasiums – Eine empirische Untersuchung. In(Pasternak, A., Hrsg.): Informatik für alle, INFOS 2019, 18. GI-Fachtagung In-formatik und Schule, 16.–18. September 2019, Dortmund, Germany. Bd. P288.LectureNotes in Informatics (LNI)-Proceedings, n. n. e.; Preprint-Version, diedie eingereichte und angenommene Fassung darstellt und bis zur Verö ent-lichung noch überarbeitet wird, Gesellschaft für Informatik e. V. (GI), Bonn,xx–yy, 2019,    : 978-3-88579-682-4,   :http://uni-w.de/1lt, Stand:04. 05. 2019.[Pa]Pasternak, A., Hrsg.: Informatik für alle, INFOS 2019, 18. GI-FachtagungInformatik und Schule, 16.–18. September 2019, Dortmund, Germany, Bd. P288,LectureNotes in Informatics (LNI)-Proceedings, n. n. e., Bonn: Gesellschaft fürInformatik e. V. (GI),    : 978-3-88579-682-4.[Pi74]Piaget, J.: Der Aufbau der Wirklichkeit beim Kinde. Klett, Stuttgart, 1974.[Se17]Sellin, L.: Ausgewählte Elemente der theoretischen Informatik als Elementder informatischen Bildung im Primarbereich, PDF:https://uni-w.de/161,Bachelorthesis, Wuppertal: Fachgebiet Didaktik der Informatik – BergischeUniversität, 29. März 2017,   :https://uni-w.de/130, Stand: 10. 05. 2019.Empfehlungen der GI – Kompetenzen für informatische Bildung im Primarbereich 245cbaArno Pasternak [et. al.] (Hrsg.): INFOS 2019 - Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Einsatz von Jupyter Notebooks am Beispiel eines ﬁktivenKriminalfallsFlorian Kapp1, Carsten Schulte2Abstract:In diesem Praxisbeitrag wird anhand eines Unterrichtsvorhabens zum Thema geographischeDaten der Einsatz von Jupyter Notebooks beschrieben und reﬂektiert. Schülerinnen und Schülerlösen einen ﬁktiven Kriminalfall, indem sie geographische Daten auf einer Karte visualisieren, dieseanschließend analysieren und abschließend Aspekte des Datenschutzes in Bezug auf geographischeDaten diskutieren. Das Unterrichtsvorhaben verfolgt das Ziel, die Schülerinnen und Schüler für dasThema „Umgang mit geographischen Daten“ zu sensibilisieren. Anhand des Unterrichtsvorhabensmöchten wir Besonderheiten und didaktische Möglichkeiten der Jupyter Notebooks erläutern unddarlegen, dass Jupyter Notebooks eine geeignete Programmierumgebung für den Informatikunterrichtin der Schule darstellen.Keywords:Interaktion und Exploration; Kompetenzen; Explorieren1 EinleitungIn der heutigen Zeit existieren neben zahlreichen unterschiedlichen Programmiersprachenauch diverse Programmierumgebungen. Doch welche sind für den Unterricht geeignet? DieGesellschaft für Informatik (GI) formuliert dazu folgendes: „Die Wahl der Programmierum-gebung bzw. der Programmiersprache orientiert sich dann an Kriterien wie Anschaulichkeit,einfachem Einstieg und vielfältigen Einsatzmöglichkeiten.“ [Pea08, S. 33]Neben Anschaulichkeit und einem einfachen Einstieg sind also vielfältige Einsatzmöglich-keiten die Kriterien, die eine Programmierumgebung erfüllen sollte [Pea08]. In diesemPraxisbeitrag möchten wir anhand eines Beispiels darlegen, dass Jupyter Notebooks ebendiese Kriterien erfüllen und somit eine geeignete Programmierumgebung für die Schuledarstellen.Im ersten Schritt werden wir erläutern, wie Jupyter Notebooks aufgebaut sind und wie sieals Entwicklungsumgebung installiert werden können. Anschließend beschreiben wir einUnterrichtsvorhaben zum Thema geographische Daten, gehen auf unsere Erfahrungen beider Erprobung des Unterrichtsvorhabens ein und beschreiben die Einsatzmöglichkeiten1Universität Paderborn, Didaktik der Informatik, Fürstenallee 11, 33102 Paderborn, DeutschlandFlorianKapp@uni-paderborn.de2Universität Paderborn, Didaktik der Informatik, Fürstenallee 11, 33102 Paderborn, Deutschlandcarsten.schulte@uni-paderborn.decba doi:10.18420/infos2019-25Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 2472 Florian Kapp, Carsten Schulteder Jupyter Notebooks. Abschließend ziehen wir ein Resümee und reﬂektieren, inwiefernJupyter Notebooks die oben erwähnten Kriterien für eine geeignete Programmierumgebungerfüllen.2 Die Entwicklungsumgebung Jupyter NotebookJupyter Notebooks wurden ursprünglich entwickelt, um den Arbeitsablauf des wissenschaft-lichen Rechnens und der Analyse von Daten zu unterstützen [Kl16]. Das Projekt Jupyterentstand aus dem IPython-Projekt [Kl16] und versucht, Jupyter Notebooks einem größerenAnwenderkreis zugänglich zu machen [Kl16]. Jupyter verfolgt das Ziel, Open-Source-Tools für interaktives wissenschaftliches Rechnen und Datenwissenschaft in Forschung,Bildung und Industrie zu entwickeln, wobei der Schwerpunkt auf Benutzerfreundlichkeit,Kollaboration und Reproduzierbarkeit liegt [PG15].Aufbau eines Jupyter NotebooksEin Jupyter Notebook besteht aus Zellen, die individuell modiﬁziert und ausgeführt werdenkönnen [Kl16]. Dabei wird zwischen Markdown-Zellen und Code-Zellen unterschieden.Abbildung 1zeigt den Aufbau eines Jupyter Notebooks.Abb. 1: Aufbau eines Jupyter NotebooksMarkdown-Zellen können unter anderem Text-Elemente, Graﬁken und Videos enthaltenund eignen sich besonders gut für erklärende Texte und Aufgabenstellungen. Code-Zellenhingegen beinhalten den Programmcode, wobei die Ausgabe jeder Code-Zelle direktdarunter erscheint und als Teil des Dokuments gespeichert wird [Kl16]. Die Ausgabekann dabei neben Text auch umfangreiche Elemente wie Diagramme, mathematischeGleichungen oder interaktive Elemente und Graﬁken enthalten [Kl16].248 Florian Kapp, Carsten SchulteJupyter Notebooks Kriminalfall 3Installation von Jupyter NotebooksDer Zugri  auf Jupyter Notebooks funktioniert über einen Webbrowser. [Kl16] Sie könnenlokal über eine Desktop Anwendung (z.B. Anaconda, weitere Hinweise zur Installation undVerwendung in [Ro18]) oder auf einem Remote Server ausgeführt werden [Kl16].Abb. 2: Graﬁsche Darstellung der ServerarchitekturInAbbildung 2ist die Serverarchitektur graﬁsch dargestellt, welche wir bei der Erprobungdes Unterrichtsvorhabens genutzt haben. Den Schülerinnen und Schülern musste nur nochZugri  auf unsere GitLab Instanz gewährt werden, welche die Autorisierung verwaltet.Anschließend konnten sie die Jupyter Notebooks in einem Webbrowser bearbeiten.3 Unterrichtsvorhaben - Dem Täter auf den FersenDas Unterrichtsvorhaben beschreibt eine Möglichkeit, Jupyter Notebooks gewinnbringendim Informatikunterricht einzusetzen. Die Schülerinnen und Schüler lösen einen ﬁktivenKriminalfall, indem sie programmieren, analysieren und mit den Jupyter Notebooksinteragieren. Anhand von diesem Anwendungsfall diskutieren sie anschließend Aspekte desDatenschutzes in Zusammenhang mit geographischen Daten.ZielsetzungDas Ziel des Unterrichtsvorhabens ist es, Schülerinnen und Schüler für das Thema „Umgangmit geographischen Daten“ zu sensibilisieren. Sie sollen verstehen, dass es wichtig ist,auf seine eigenen Daten zu achten und ziehen eventuelle Rückschlüsse für ihren eigenenUmgang mit Daten. Zur Erreichung des Ziels nutzen die Schülerinnen und Schüler JupyterNotebooks zur Auswertung und Analyse von geographischen Daten und lernen an einemBeispiel, dass ein verantwortungsbewusster Umgang mit Daten notwendig ist.Einsatz von Jupyter Notebooks am Beispiel eines ﬁktiven Kriminalfalls 2494 Florian Kapp, Carsten SchulteVoraussetzungen und ZielgruppeDie Schülerinnen und Schüler arbeiten in dem Unterrichtsvorhaben mit der Programmier-sprache Python. Diese bietet viele Möglichkeiten zur Datenauswertung und ist deshalbgut geeignet. Die Schülerinnen und Schüler sollten bereits Kenntnisse im Bereich des Pro-grammierens in einer textuellen Programmiersprache besitzen und vor allem die KonzepteSchleifen, Objekte und Klassen kennen.Anknüpfend an die Voraussetzungen richtet sich das Unterrichtsvorhaben vorrangig anSchülerinnen und Schüler der Sekundarstufe II. Falls Schülerinnen und Schüler der Se-kundarstufe I die erforderlichen Vorkenntnisse besitzen, so kann das Unterrichtsvorhabenebenfalls mit ihnen durchgeführt werden. Alternativ kann das Unterrichtsvorhaben mitSchülerinnen und Schülern der Sekundarstufe I ohne die Programmierphase durchgeführtwerden, wenn ihnen das Ergebnis der Programmierphase - eine interaktive Karte (vergleicheAbbildung 3) - zusätzlich zur Verfügung gestellt wird.Einordnung des UnterrichtsvorhabensZur Einordnung des Unterrichtsvorhabens orientieren wir uns an den Bildungsstandardsder GI (vergleiche [Rea16]). In den Bildungsstandards sind verschiedene Inhalts- undProzessbereiche formuliert. Das Unterrichtsvorhaben ist hauptsächlich in den Inhaltsbereich„Informatik, Mensch und Gesellschaft“ einzuordnen. Darüber hinaus kann das Unterrichts-vorhaben aufgrund der Programmierphase anteilig den Inhaltsbereich „Algorithmen“undden Prozessbereich „Modellieren und Implementieren“ abdecken. Durch die didaktischeAusgestaltung des Unterrichtsvorhabens lässt sich das Unterrichtsvorhaben zudem in dieProzessbereiche „Kommunizieren und Kooperieren“, „Darstellen und Interpretieren“ und„Begründen und Bewerten“ einordnen.Kurzbeschreibung des UnterrichtsvorhabensDas Unterrichtsvorhaben besteht aus vier Unterrichtssequenzen, deren Durchführungsdauerin der Praxis variieren kann. Dies ist von den Vorkenntnissen der Schülerinnen und Schülerabhängig.Die erste Unterrichtssequenz dient als thematischer Einstieg. Die Schülerinnen und Schülersammeln zum Thema geographische Daten Stichpunkte auf Karteikarten, erläutern dieseund gruppieren sie an der Tafel. Anschließend werden Oberbegri e für die Gruppen vonKategorien erarbeitet. Daraufhin erklärt der Lehrende den Aufbau von geographischenDaten und zeigt den Schülerinnen und Schülern ein Video, welches eine Einführung inden Kriminalfall darstellt. Abschließend wird den Schülerinnen und Schülern das weitereVorgehen erläutert.Amanda Weber war Filialleiterin eines Lidls und wurde am Hauptbahnhof ermordet. DiePolizei hat die geographischen Daten des Tattages der Verdächtigen gesammelt und möchte250 Florian Kapp, Carsten SchulteJupyter Notebooks Kriminalfall 5diese nun untersuchen, um den Täter oder die Täterin zu überführen. Leider haben sie bei derÜbermittlung der Daten einen Fehler gemacht und die Daten sind nicht mehr zuzuordnen.In der zweiten Unterrichtssequenz geht es um die Auswertung der geographischen Da-ten. Die Schülerinnen und Schüler bearbeiten ein Jupyter Notebook mit verschiedenenProgrammier- und Analyseaufgaben. Das Ziel der Aufgaben ist es, die geographischenDaten den Verdächtigen zuzuordnen. Zunächst nutzen die Schülerinnen und Schüler von unszuvor programmierte Klassen, um damit eigene Karten zu programmieren. Diese werdenzur Visualisierung der geographischen Daten verwendet. Im nächsten Schritt werden dieseKarten analysiert, um anhand von Steckbriefen die geographischen Daten den Verdächtigenzuzuordnen.Die dritte Unterrichtssequenz beschäftigt sich mit der Tätersuche. In der ersten Phasebearbeiten die Schülerinnen und Schüler ein Jupyter Notebook mit dem Ziel den Täter oderdie Täterin zu überführen. Dazu erhalten sie Hinweise in Form von Informationstexten(vergleicheAbbildung 5) und müssen diese mit Hilfe einer Karte (vergleicheAbbildung 3)bearbeiten.Abb. 3: Interaktive Karte zur Analyse der geographischen DatenIn der zweiten Phase sollen die Schülerinnen und Schüler in Gruppenarbeit auf einem Plakatbegründet darstellen, wer der Täter oder die Täterin ist. Dabei ist zu beachten, dass auf Basisder geographischen Daten zwei mögliche Täter in Frage kommen, damit die Schülerinnenund Schüler erkennen, dass Daten nicht eindeutig sind.In der letzten Unterrichtssequenz diskutieren die Schülerinnen und Schüler auf Basisder bisherigen Ergebnisse Aspekte des Datenschutzes in Bezug auf geographische Daten.Dabei werden, ausgehend von der Frage, wo geographische Daten gesammelt werden,Einsatz von Jupyter Notebooks am Beispiel eines ﬁktiven Kriminalfalls 2516 Florian Kapp, Carsten Schultefolgende Aspekte angesprochen: a) Chancen, Risiken und Missbrauchsmöglichkeiten, b)gesellschaftliche Folgen, c) Rückschlüsse für das eigene Verhalten.ErfahrungsberichtIm Rahmen eines Seminars wurde das Unterrichtsvorhaben mit Kursen verschiedenerJahrgangsstufen der Sekundarstufe II erprobt und reﬂektiert. Dabei konnten wir einigeErfahrungen sammeln, die wir im Folgenden darstellen möchten.Die meisten Schülerinnen und Schüler haben während der gesamten Durchführung sehrkonzentriert und ruhig gearbeitet. Gerade bei der Bearbeitung der Jupyter Notebooks warensie sehr motiviert. Trotz begrenzter Zeit waren alle Lernenden an der Weiterarbeit amJupyter Notebook interessiert.Die Phase der Programmierung hat häuﬁg sehr lange gedauert und den Schülerinnen undSchülern bei der Durchführung die meisten Probleme bereitet. Dies lag zum einen daran,dass die Schülerinnen und Schüler weniger Vorkenntnisse hatten als erwartet und zumanderen an der geforderten selbstständigen Arbeit.Die Phase der Tätersuche hat allen Schülerinnen und Schülern viel Spaß gemacht. Währendder Bearbeitung des Jupyter Notebooks konnte man ausgiebige Diskussionen beobachten,die bei der Präsentation der Ergebnisse neu entfacht sind. Allerdings muss man als Lehrenderebenfalls den Fall bedenken, dass alle Gruppen den gleichen Täter vermuten, sodass manselbst die entgegengesetzte Meinung einnehmen muss, damit eine Diskussion entsteht.Die abschließende Diskussion verlief in den meisten Fällen sehr schleppend. Dies lagdaran, dass die Schülerinnen und Schüler zwar eingesehen haben, dass der Umgang mit deneigenen Daten wichtig ist. Sie waren allerdings auch häuﬁg der Meinung, dass sie nichts zuverstecken haben und Unternehmen ihre Daten sowieso bekommen würden, wenn sie dieDaten haben wollen.Den Rückmeldungen der Schülerinnen und Schüler konnten wir entnehmen, dass ihnen dieArbeit mit den Jupyter Notebooks Spaß gemacht hat und sie gerne häuﬁger damit arbeitenwürden. Nach einer kurzen Eingewöhnungsphase haben sich die Schülerinnen und Schülergut mit den Jupyter Notebooks zurecht gefunden. Gerade die interaktiven Elemente, welchesie nutzen konnten, waren sehr beliebt und wurden häuﬁg genutzt. Bei der Arbeit mit demServer sind allerdings zunächst Probleme aufgetreten. Es ist daher darauf zu achten, wieviele Ressourcen die Arbeit in den Jupyter Notebooks benötigt, um den Server nicht zuüberlasten.Die Programmiersprache Python war für die Schülerinnen und Schüler zunächst sehrungewohnt. Jedoch nach einigen Tipps und Hinweisen zum Einstieg wurden die anfänglichenProbelme schnell überwunden, sodass sich die Schülerinnen und Schüler anschließend rechtgut damit zurechtfanden und hinterher zurückmeldeten, dass Python „besser“ als Java sei,da die Syntax weniger komplex ist.252 Florian Kapp, Carsten SchulteJupyter Notebooks Kriminalfall 74 Einsatzmöglichkeiten von Jupyter NotebooksJupyter Notebooks besitzen eine Vielzahl von Einsatzmöglichkeiten im Informatikunterricht.Im Folgenden möchten wir vorstellen, welche der Möglichkeiten wir in dem beschriebenenUnterrichtsvorhaben genutzt haben und wie diese umgesetzt sind.EntwicklungsumgebungWie bereits beschrieben sind Jupyter Notebooks so aufgebaut, dass die Schülerinnenund Schüler ihren Programmcode in Code-Zellen schreiben, diesen ausführen und direktdarunter Rückmeldung erhalten. Der entscheidende Vorteil von Jupyter Notebooks ist, dassein komplexes Programm durch den zellenweisen Aufbau leicht in kleinere Teilproblemeaufgeteilt werden kann. Für die Schülerinnen und Schüler ist es dann möglich dieseTeilprobleme schrittweise zu lösen, um ein in sich geschlossenes Programm zu erhalten.Diese Herangehensweise fördert die Interaktion der Schülerinnen und Schüler mit derEntwicklungsumgebung.ArbeitsblattJupyter Notebooks können ebenfalls als Arbeitsblatt genutzt werden. Dazu werden Ar-beitsanweisungen und erklärende Texte einfach in eine Markdown-Zelle geschrieben undausgeführt. InAbbildung 4ist eine Aufgabe aus dem Jupyter Notebook zur Datenauswertungdargestellt.Abb. 4: Beispielaufgabe aus dem Jupyter Notebook zur DatenauswertungWie auf einem herkömmlichen Arbeitsblatt gibt es zunächst einen erklärenden Text,gefolgt von einer konkreten Arbeitsanweisung. Jupyter Notebooks bieten die Möglichkeit,im Anschluss an eine Arbeitsanweisung eine Code-Zelle oder eine Markdown-Zelle zuerstellen, um die Ergebnisse direkt unter der Aufgabe festzuhalten. Jupyter Notebooks bietenEinsatz von Jupyter Notebooks am Beispiel eines ﬁktiven Kriminalfalls 2538 Florian Kapp, Carsten Schulteso die Möglichkeit, den Programmcode auszuführen und die Aufgaben experimentell inkleineren Aufgaben zu bearbeiten.KontrollmethodeAls Lehrender kennt man die Situation, wenn ein Schüler oder eine Schülerin in einerArbeitsphase nur aufzeigt, um zu fragen, ob die Lösung richtig ist. Gerade in Programmier-phasen ist dies schwierig zu beantworten und mit einem erhöhten Aufwand verbunden, daes nicht die eine richtige Lösung gibt. Jupyter Notebooks können hier Abhilfe scha en undbieten die Möglichkeit, dass Schülerinnen und Schüler selbst kontrollieren können, ob ihreLösung richtig ist. Im Gegensatz zu einem Compiler kann ebenfalls die Korrektheit derLösung überprüft werden.Abb. 5: Ausschnitt aus dem Jupyter Notebook zur TätersucheInAbbildung 5ist ein Ausschnitt aus dem Jupyter Notebook zur Tätersuche dargestellt.Am unteren Rand kann man einen Button „Hinweis 3 anzeigen“ und ein Textfeld erkennen.Die Schülerinnen und Schüler müssen in das Textfeld den Namen des Verdächtigeneintragen, der ausgeschlossen werden kann, damit sie den nächsten Hinweis erhalten. Dieserwird anschließend in der gleichen Form wie Hinweis 2 (vergleicheAbbildung 5oben)eingeblendet.Button und Textfeld sind von uns programmiert worden und der dazugehörige Programmcodewurde mit einer Erweiterung3für das Jupyter Notebook versteckt, damit die Schülerinnenund Schüler den Namen nicht dem Programmcode entnehmen können. Beim Klick auf denButton wird zunächst abgefragt, ob der vorherige Hinweis bearbeitet wurde und ob der3vergleichehttps://github.com/kirbs-/hide_code254 Florian Kapp, Carsten SchulteJupyter Notebooks Kriminalfall 9eingetragene Name richtig ist. Ist dies der Fall, wird eine Textdatei ausgegeben, welcheden nächsten Hinweis enthält. Ansonsten wird eine Fehlermeldung ausgegeben. DiesesVorgehen ermöglicht es, dass die Schülerinnen und Schüler die Hinweise erst bekommen,wenn es an der Zeit ist. Ansonsten könnten sie direkt den letzten Hinweis durchlesen undwären fertig.Hilfe zur SelbsthilfeIn der heutigen Gesellschaft spielt Selbstständigkeit eine große Rolle. Schülerinnen undSchüler müssen demnach auch in der Lage sein, sich selbst zu helfen und selbstständig zuarbeiten. Die Nutzung der Jupyter Notebooks erlaubt es dem Lehrenden, seine Schülerinnenund Schüler dabei zu unterstützen, selbstständiger zu werden.Die eben angesprochene Methode zur Selbstkontrolle ist ein Beispiel, allerdings bietenJupyter Notebooks noch mehr Möglichkeiten. InAbbildung 4kann man neben den bereitsangesprochenen erklärenden Texten, den Arbeitsanweisungen und dem Programmcode nochdrei Buttons erkennen. Diese Buttons ermöglichen es, dass sich die Schülerinnen und Schülerdrei gestufte Hilfestellungen ein- und ausblenden können. Sie können die Hilfestellungenselbstständig durchlesen und bearbeiten und werden so immer selbstständiger. Der Vorteil,den die Jupyter Notebooks hierbei bieten, ist, dass Aufgaben und Hilfestellungen in einerUmgebung sind und so keine Medienbrüche entstehen.Die Umsetzung der Buttons funktioniert im Grunde wie die Umsetzung der Kontrollmethode.Beim Klick auf einen der Buttons wird eine entsprechende Textdatei als Ausgabe eingeblen-det. Buttons und Button Events sind von uns programmiert und der Programmcode wurdemit einer Erweiterung versteckt. Dies wurde ergänzt durch Abfragen, die überprüfen, obeine Hilfestellung angezeigt wird, damit nicht zwei Hilfestellungen gleichzeitig eingeblendetwerden.5 Fazit & AusblickAm Anfang des Praxisbeitrags haben wir uns die Frage gestellt, ob Jupyter Notebooks einegeeignete Programmierumgebung für den Einsatz in der Schule sind. Laut GI müssen Pro-grammierumgebungen Kriterien wie Anschaulichkeit, einfachem Einstieg und vielfältigenEinsatzmöglichkeiten erfüllen [Pea08].Nach einer kurzen Eingewöhnungsphase sind die Schülerinnen und Schüler sehr gut mitden Jupyter Notebooks zurecht gekommen. Außerdem ist es sehr hilfreich, dass für dieNutzung der Jupyter Notebooks lediglich ein Webbrowser nötig ist, falls die entsprechendeServerfunktionalität gegeben ist. Die Schülerinnen und Schüler müssen sich demnach auchzuhause keine zusätzliche Software installieren.Einsatz von Jupyter Notebooks am Beispiel eines ﬁktiven Kriminalfalls 25510 Florian Kapp, Carsten SchulteDurch die Möglichkeit Bilder, Videos oder interaktive Elemente in ein Jupyter Notebook zuintegrieren ist ebenfalls das Kriterium der Anschaulichkeit erfüllt. Mit diesen Möglichkeitenkönnten Schülerinnen und Schüler auch ihre eigene Benutzeroberﬂäche erstellen.Weiter haben wir am Beispiel des beschriebenen Unterrichtsvorhabens viele verschiedeneEinsatzmöglichkeiten von Jupyter Notebooks aufgezeigt. Gerade die sequenzielle Aus-führung der Code-Zellen, die Minimierung der Medienbrüche, der Zugri  über einenWebbrowser und die interaktive Auseinandersetzung mit der Entwicklungsumgebung sindwesentliche Vorteile der Jupyter Notebooks.Mit den in diesem Praxisbeitrag beschriebenen Einsatzmöglichkeiten sind diese noch nichterschöpft. Jupyter Notebooks könnten ebenfalls zur Di erenzierung genutzt werden, indemButtons Aufgaben mit unterschiedlichem Schwierigkeitsgrad einblenden. Außerdem gibt eseinige Erweiterungen für Jupyter Notebooks, die z.B. die Einbindung von LaTeX oder eineNutzung zur Präsentation ermöglichen.Bei allen Vorteilen und Einsatzmöglichkeiten besitzen Jupyter Notebooks auch einenwesentlichen Nachteil. Die Einrichtung des Servers ist eine große Herausforderung undhat uns viele Probleme bereitet. Mit der oben dargestellten Struktur kann dieses Problemallerdings gelöst werden.Zusammenfassend kann man also sagen, dass Jupyter Notebooks die geforderten Kriterienin vollem Maße erfüllen und für den Einsatz in der Schule geeignet sind. Sobald dieEinrichtung des Servers abgeschlossen ist, erhalten Lehrerinnen und Lehrer ein Werkzeug,welches das Lernen der Schülerinnen und Schüler sehr gut unterstützen kann.Literaturverzeichnis[Kl16]Kluyver, Thomas; Ragan-Kelley, Benjamin; Pérez, Fernando; Granger, Brian E.; Bussonnier,Matthias; Frederic, Jonathan; Kelley, Kyle; Hamrick, Jessica B.; Grout, Jason; Corlay, Sylvain;Ivanov, Paul; Avila, Damián; Abdalla, Saﬁa; Willing, Carol; et al.: Jupyter Notebooks - apublishing format for reproducible computational workﬂows. In: Positioning and Powerin Academic Publishing: Players, Agents and Agendas, 20th International Conference onElectronic Publishing, Göttingen, Germany, June 7-9, 2016. S. 87–90, 2016.[Pea08]Puhlmann, Hermann; et al.: , Grundsätze und Standards für die Informatik in der Schule.Bildungsstandards Informatik für die Sekundarstufe I, 2008.[PG15]Pérez, Fernando; Granger, Brian E.: Project Jupyter: Computational narratives as the engineof collaborative data science. Retrieved September, 11, 2015.[Rea16]Röhner, Gerhard; et al.: , Bildungsstandards Informatik für die Sekundarstufe II, 2016.[Ro18]Rossant, C.: IPython Interactive Computing and Visualization Cookbook: Over 100 hands-onrecipes to sharpen your skills in high-performance numerical computing and data science inthe Jupyter Notebook, 2nd Edition. Packt Publishing, 2018.256 Florian Kapp, Carsten SchulteArno Pasternak [et. al.] (Hrsg.): INFOS 2019 – Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 15 Informatikunterricht in Baden-Württemberg Entwicklung an allgemein-bildendenden Gymnasien Andreas Koch1, Alexander Mittag2 Abstract: In den beiden vergangenen Jahren wurde der Informatikunterricht in der Sekundarstufe I an allgemein-bildenden Gymnasien in Baden-Württemberg durch Einführung des Pflichtfachs „Aufbaukurs Informatik“ und des Profilfachs „IMP“ verstärkt. Auch die Kursstufe wird in den kommenden Jahren weiterentwickelt werden. Keywords: Aufbaukurs Informatik, Baden-Württemberg, Entwicklung, IMP, Informatik, Kursstufe 1 Einführung Der Informatikunterricht ist in den beiden vergangenen Jahren in der Sekundarstufe I an allgemein-bildenden Gymnasien in Baden-Württemberg deutlich ausgebaut worden. Die Erweiterungen sind in Tab. 1 grau hinterlegt dargestellt. Klassenstufe 7 8 9 10 KS1 KS2 Aufbaukurs Informatik 1      Profilfach IMP  2 1 1   AG    2   Wahlfach 2-stündig     2 2 Wahlfach 4-stündig     4 4 Tab. 1: Wochenstundenverteilung im Fach Informatik seit dem Schuljahr 2018/19                                                         1 Seminar für Ausbildung und Fortbildung der Lehrkräfte Tübingen (Gymnasium), Mathildenstr. 32, 72072 Tübingen, Deutschland, andreas.koch@seminar-tuebingen.de 2 Zentrum für Schulqualität und Lehrerbildung, Fasanenweg 11, 70771 Leinfelden-Echterdingen, Deutschland, alexander.mittag@zsl.kv.bwl.de cba doi:10.18420/infos2019-26Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 257 16 Andreas Koch und Alexander Mittag 2 Informatikunterricht in Sekundarstufe I 2.1 Aufbaukurs Informatik Seit dem Schuljahr 2017/18 findet erstmals verpflichtender, versetzungsrelevanter Informatikunterricht für alle Schülerinnen und Schüler an allgemein-bildenden Gymnasien in Baden-Württemberg statt. Das fächerintegrative Fach „Informationstech-nische Grundbildung (ITG)“ gibt es nicht mehr. Die Kontingentstundentafel weist nun eine Stunde für den „Aufbaukurs Informatik“ aus. Der Namensteil „Aufbaukurs“ suggeriert, dass die Schülerinnen und Schüler in den Klassenstufen 5 und 6 bereits Kompetenzen im Bereich der Informatik erworben haben. Allerdings findet in diesen beiden Klassenstufen kein Informatikunterricht statt. Der insgesamt 35 Schulstunden umfassende „Basiskurs Medienbildung“ in Klassenstufe 5 definiert im zugrundeliegenden Bildungsplan [Mi16-2] keine Kompetenzen, die dem Fach Informatik explizit zuzuordnen sind. Der Bildungsplan des Aufbaukurses Informatik [Mi16-1] besitzt auch für Haupt-/Werk-realschulen, Realschulen und Gemeinschaftsschulen Gültigkeit. Die inhaltsbezogenen Kompetenzen gliedern sich in vier Bereiche, die in Tab. 2 dargestellt werden. Bereich Auswahl der Inhalte3 1 Daten und Codierung Alltägliche Codierungen (z.B. Morse-Code) Codierungen von Bild und Text Umrechnung von Binär- und Dezimalzahlen 2 Algorithmen Programmierung mithilfe von Anweisungen,  Bedingungen, Sequenzen, Schleifen, Variablen und Verzweigungen Visuelle Entwicklungsumgebung wie „Scratch“ wird empfohlen [Le16] 3 Rechner und Netze Grundlegende Struktur lokaler Netze und des Internets Grundlegender Ablauf der Internetkommunikation Möglichkeiten der Datenspeicherung 4 Informations-gesellschaft und Datensicherheit Einfache Verschlüsselungsverfahren (z.B. Cäsar-Verfahren) Angriffe auf einfache Verschlüsselungsverfahren Umgang mit (digitalen) Daten an gegebenen Fallbeispielen Tab. 2: Inhaltsbezogene Kompetenzbereiche des Bildungsplans des Profilfachs IMP in Informatik Einige der Inhalte aus den Bereichen (1) und (4) wie „Codierungen von Bild und Text“ bzw. (2) und (3) wie „Programmierung“ und „Verschlüsselungsverfahren“ sind im vormals gültigen Bildungsplan für ITG [Mi04, S. 309-313] bzw. im aktuell noch gültigen Bildungsplan für die Kursstufe [Mi04, S. 437-443] enthalten und sind im Rahmen eines                                                         3 Aus Gründen der besseren Lesbarkeit werden die Kompetenzformulierungen in Tabellen stets als Inhaltsstichpunkte wiedergegeben. 258 Andreas Koch, Alexander Mittag Informatikunterricht in Baden-Württemberg 17 spiralcurricularen Unterrichts vorgezogen worden. Diese Bildungspläne befinden sich momentan auch deshalb in der Überarbeitung. 2.2 Profilfach IMP Seit dem Schuljahr 2018/19 können zugelassene allgemein-bildende Gymnasien das Profilfach „Informatik Mathematik Physik (IMP)“ für die Klassenstufen 8 bis 10 anbieten. Aktuell bieten 56 Gymnasien IMP an [Mi18-4]. Der Unterricht findet in Informatik, Mathematik und Physik separat und gemäß der Stundenverteilung in Tab. 3 statt. Am Schuljahresende wird eine einzelne Note für IMP ausgewiesen [Mi18-3]. Klassenstufe 8 9 10 Informatik 2 1 1 Mathematik 1 1 2 Physik 1 2 1 Tab. 3: Wochenstundenverteilung im Profilfach IMP Der Bildungsplan für IMP [Mi18-2] definiert für jedes der drei Fächer separate inhaltsbezogene Kompetenzen, wobei Verschränkungen bestehen, z.B. zwischen der Graphentheorie in Mathematik und Algorithmen in Informatik. Die inhaltsbezogenen Kompetenzen knüpfen an denen des Aufbaukurses Informatik bzw. denen des Vorjahresunterrichts in IMP an (vgl. Tab. 4), vertiefen und erweitern diese. Bereich Auswahl der Inhalte Klassenstufe 8 Klassenstufe 9 Klassenstufe 10 1 Daten und Codierung Fehlerkorrektur Graphen Datenkompression Dijkstra-Algorithmus   2 Algorithmen Datenstrukturen Softwareprojekt Algorithmen-Entwurf Unterprogramme GUI-Erstellung Mehrdim. Arrays 3 Rechner und Netze Adressierung Namensauflösung  Routing Schaltnetze 4 Informations-gesellschaft und Datensicherheit Vigenère-Verfahren Umgang mit personen-bezogenen Daten Backupstrategien Datensicherheit Asymmetrische Verschlüsselung Zertifizierung Tab. 4: Inhaltsbezogene Kompetenzbereiche des Bildungsplans des Aufbaukurses Informatik In Bereich (2) ist ab Klassenstufe 9 die Verwendung einer textuellen Programmiersprache vorschrieben [Mi18-2, 3.2.1.2]. Informatikunterricht in Baden-Württemberg 259 18 Andreas Koch und Alexander Mittag 3 Informatikunterricht in der Kursstufe In der Kursstufe werden derzeit ein zweistündiger Wahlkurs, der von allen Schülerinnen und Schülern gewählt werden kann, und ein vierstündiger Wahlkurs, dessen Wahlvoraussetzung die Teilnahme an der zweistündigen AG in Klassenstufe 10 ist, angeboten. Der vierstündige Wahlkurs findet im Rahmen eines Schulversuchs statt und ermöglicht seit dem Schuljahr 2016/17 eine schriftliche Abiturprüfung. Die Schulverwal-tung macht hierzu folgende statistische Angaben: Aktuell nehmen 33 Gymnasien am Schulversuch teil. Im Jahr 2018 haben 77 Schülerinnen und Schüler die Prüfung abgelegt, 15 mehr als im Vorjahr. Zum Schuljahr 2019/20 tritt eine Reform der Kursstufe in Kraft [Mi18-1], in deren Rahmen auch die Informatikangebote der gymnasialen Kursstufe überarbeitet werden. Mit Beginn des Schuljahres 2021/22 wird sich so in Kombination mit den bereits implementierten Informatikangeboten der Sekundarstufe I voraussichtlich die in Abb.1 dargestellte Gesamtstruktur des Informatikunterrichts in Baden-Württemberg ergeben. Allgemein-bildende Gymnasien können weiterhin ein zweistündiges Wahlfach anbieten, das allen Schülerinnen und Schülern offen steht. Zugelassene Gymnasien können darüber hinaus ein dreistündiges Basisfach und ein fünfstündiges Leistungsfach anbieten, deren Wahlvoraussetzung die Belegung von IMP oder die Teilnahme an der AG ist. Die zweistündige AG kann zukünftig auch jeweils einstündig in den Klassenstufen 9 und 10 angeboten werden. Schülerinnen und Schüler, die das Wahlfach belegen, können sich nur dann für eine mündliche Abiturprüfung entscheiden, wenn sie vorab die AG oder IMP besucht haben. 260 Andreas Koch, Alexander Mittag Informatikunterricht in Baden-Württemberg 19  Abb. 1: Struktur des Informatikunterrichts in Baden-Württemberg mit der geplanten neuen Kursstufe ab dem Schuljahr 2021/22 Die Bildungspläne für die zukünftige AG und die drei neuen Fächer der Kursstufe befinden sich aktuell in der Entwicklung. Der momentan gültige Bildungsplan für die zweistündige Kursstufe [Mi04] enthält die Kompetenzbereiche „Information und Daten“, „Algorithmen und Daten“, „Problemlösen und Modellieren“, „Wirkprinzipien von Informatik-Systemen“ und „Informatik und Gesellschaft“. Der Bildungsplan für die vierstündige Kursstufe [Mi14] ist um den Bereich „Sprachen und Automaten“ ergänzt worden. Die Kompetenzen berücksichtigen die Bildungsstandards der Gesellschaft für Informatik [GI16] und umfassen u.a. die Themen „Datenbanksysteme“ und „Objektorientierte Modellierung und Programmierung“. Informatikunterricht in Baden-Württemberg 261 20 Andreas Koch und Alexander Mittag 4 Ausblick Die kommenden Jahre werden zeigen, ob sich IMP an den Schulen etablieren wird. Langfristig ist ein Übergang dieses Profilfachs in ein Pflichtfach wünschenswert, damit alle Schülerinnen und Schüler durchgängigen Informatikunterricht ab Klassenstufe 7 erhalten. Das Vorziehen von inhaltsbezogenen Kompetenzen aus den aktuellen Bildungsplänen der Kursstufe in die der Sekundarstufe I bietet die Gelegenheit, bei der Überarbeitung der Kursstufenpläne Erweiterungen und Vertiefungen, z.B. in den Bereichen „Automaten und Sprachen“ und „Algorithmen“, vorzunehmen. Eine Ergänzung um einen neuen Teilkom-petenzbereich „Projektmanagement“ wäre sinnvoll, um verschiedene inhalts- und prozess-bezogene Kompetenzen der Schülerinnen und Schüler zusammenzuführen, zu erweitern und zu vertiefen. Durch den erfolgten und geplanten Ausbau des Informatikunterrichts werden zusätzliche Fachlehrkräfte benötigt. Das Land Baden-Württemberg trägt diesem Ausbau mit Fort-bildungsmaßnahmen wie dem „Kontaktstudium IMP“ und dem zweijährigen „Jahreskurs Informatik SII“ Rechnung und wird auf diese Weise auch in den kommenden Jahren weitere Lehrkräfte für den Informatikunterricht qualifizieren [Re19]. Abzuwarten bleibt, welche Rolle das neu gegründete Zentrum für Schulqualität und Lehrerbildung [Mi19] bei der Implementierung zukünftiger Fortbildungsmaßnahmen im Bereich der Informatik spielen wird. Quellenverzeichnis [GI16] Gesellschaft für Informatik (GI) e.V.: Bildungsstandards Informatik für die Sekundar-stufe II, 2016. https://www.informatikstandards.de/docs/Bildungsstandards_SII.pdf. Abruf am 11.10.2018. [Le16] Lehrerinnenfortbildung Baden-Württemberg: Programmieren mit Scratch. https://lehrerfortbildung-bw.de/u_matnatech/informatik/gym/bp2016/fb1/ 2_algorithmen/1_hintergrund/2_hintergrund/2_scratch/. Abruf am 11.10.2018. [Mi04] Ministerium für Kultus, Jugend und Sport Baden-Württemberg: Bildungsplan 2004. Allgemein-bildendes Gymnasium, 2004. http://www.bildungsplaene-bw.de/site/ bildungsplan/get/documents/lsbw/Bildungsplaene/Bildungsplaene-2004/Bildungs standards/Gymnasium_Bildungsplan_Gesamt.pdf, Abruf am 11.10.2018. [Mi14] Ministerium für Kultus, Jugend und Sport Baden-Württemberg: Bildungsplan Informatik Baden-Württemberg (vierstündige Kursstufe), 2014. http://www.bildungs plaene-bw.de/site/bildungsplan/get/documents/lsbw/Bildungsplaene/Bildungsplaene-2004/Bildungsstandards/Schulversuch%20INF-4-std/Gym_Inf_wb_Schulversuch_bs. pdf. Abruf am 11.10.2018. [Mi16-1] Ministerium für Kultus, Jugend und Sport Baden-Württemberg: Bildungsplan 2016, Gemeinsamer Bildungsplan für die Sekundarstufe I, Aufbaukurs Informatik, 2016. http://www.bildungsplaene-bw.de/,Lde/LS/BP2016BW/ALLG/SEK1/INF7. Abruf am 11.10.2018. 262 Andreas Koch, Alexander Mittag Informatikunterricht in Baden-Württemberg 21 [Mi16-2] Ministerium für Kultus, Jugend und Sport Baden-Württemberg: Bildungsplan 2016, Gemeinsamer Bildungsplan für die Sekundarstufe I, Basiskurs Medienbildung, 2016. http://www.bildungsplaene-bw.de/,Lde/LS/BP2016BW/ALLG/SEK1/BMB. Abruf am 11.10.2018. [Mi18-1] Ministerium für Kultus, Jugend und Sport Baden-Württemberg: Anpassung des Schulversuchserlasses „Informatik 4-stündig“ in den Jahrgangstufen an die neue AGVO ab dem Schuljahr 2019/2020, 01.10.2018. AZ 37-6521.-15-INF/100/1. [Mi18-2] Ministerium für Kultus, Jugend und Sport Baden-Württemberg: Bildungsplan 2016 Gymnasium, Endfassung, Profilfach Informatik Mathematik Physik (IMP), 2018. http://www.bildungsplaene-bw.de/,Lde/LS/BP2016BW/ALLG/GYM/IMP. Abruf am 11.10.2018. [Mi18-3] Ministerium für Kultus, Jugend und Sport Baden-Württemberg: Bildungsplanreform,  Häufig gestellte Fragen hierauf, Einführung des Profilfachs Informatik, Mathematik, Physik (IMP). http://www.km-bw.de/,Lde/Startseite/Schule/Haeufig+gestellte+Fragen, Abruf am 11.10.2018. [Mi18-4] Ministerium für Kultus, Jugend und Sport Baden-Württemberg: Pressemitteilung, Neues Profilfach IMP, 14.08.2018. https://www.km-bw.de/,Len/Startseite/Service/2018+08+ 14+Neues+Profilfach+IMP, Abruf am 11.10.2018. [Mi19] Ministerium für Kultus, Jugend und Sport Baden-Württemberg: Neue Wege für mehr Bildungschancen: Landtag beschließt Qualitätskonzept. https://km-bw.de/,Lde_DE/Startseite/Service/2019+02+13+Landtag+beschliesst+Qualitaetskonzept+fuer+Schulen. Abruf am 01.06.2019. [Re19] Regierungspräsidium Stuttgart: Informatik – Fortbildungen. https://rp.baden-wuerttemberg.de/rps/Abt7/Ref75/Fachberater/Seiten/Informatik.aspx. Abruf am 01.06.2019. Informatikunterricht in Baden-Württemberg 263<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 TPA-Modell Vom Denken zum Handeln in der informatischen Bildung  Urs Leo Meier1 Abstract: Durch die Einführung des neuen Fachs Medien und Informatik im Rahmen des Lehrplans 21 an Deutschschweizer Volksschulen halten u.a. informatische und medienpädagogische Inhalte Einzug in den Unterricht ab Kindergartenstufe. Lehrpersonen aller Schulstufen sind daher gefordert, ihre eigenen Kompetenzen weiterzuentwickeln, um ihre Schüler*innen im Lernprozess zu unterstützen. Insbesondere der Programmierunterricht benötigt viele Fertigkeiten auf verschiedenen Ebenen. Um die Abläufe eines Problemprozesses beim Programmieren für Lehrpersonen verständlich aufzuzeigen, hat der Autor ein Modell entwickelt. Das sogenannte TPA-Modell (Thinking, Processing, Acting) zeigt die grundlegenden Arbeitsschritte beim Lösen eines Problems aus dem Alltag bis hin zur Verwirklichung in einem physikalischen Modell wie z.B. einem Roboter oder Microboard. Nach der Entwicklung des TPA-Modells wurde es in der Praxis eingesetzt, um problembasierte Aufgaben zu reduzieren und die grundlegenden Programmierkonzepte zu vermitteln.  Keywords: Computational Thinking, CS unplugged, Algorithmen, Programmieren, Physical Computing, Problembasierte Aufgaben 1 Einleitung Aktuell wird an Deutschschweizer Volksschulen mit Inkraftsetzung des Lehrplans 21 das Fach Medien und Informatik ab Kindergartenstufe eingeführt. Inhaltlich wird dabei zwischen medienpädagogischen und informatischen Inhalten sowie Anwendungen unterschieden. Im Bereich Informatik sind Begriffe wie Computer Science Unplugged (folgend als „unplugged“ bezeichnet), Algorithmen, Programmieren etc. neu. In Weiterbildungen bei Lehrpersonen hat der Autor festgestellt, dass die genannten Begrifflichkeiten oft nicht verstanden sowie falsch angewendet werden. Aus diesem Grund hat der Autor ein Modell entwickelt, welches die Begriffe richtig verortet und einen Überblick vermittelt. Das Modell zeigt erstens das Denken (Thinking oder Computational Thinking) auf, welches anschliessend zu einem Programm (Processing) führt und in einem dritten Schritt im Physikalischen (Acting) umgesetzt wird. Das TPA-Modell zeigt im Überblick die grundlegenden Arbeitsschritte beim Lösen eines Problems aus dem Alltag bis hin zum Verwirklichen in einem physikalischen Modell wie einem Roboter oder Microboard.                                                               1 Pädagogische Hochschule Luzern, Dozent Medien und Informatik, Sentimatt 1, 6003 Luzern, urs.meier@phlu.ch cba doi:10.18420/infos2019-27Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 265 16  Urs L. Meier 2 TPA-Modell 2.1 Thinking Das Denken steht im Modell an erster Stelle. Ein Problem aus der analogen Welt soll so modelliert werden, damit es von einem Computer gelöst werden kann. Im Paper New frameworks for studying and assessing the development of computational thinking haben Brennan und Resnik (2012) folgendes Zitat für Computational Thinking verwendet: “the thought processes involved in formulating problems and their solutions so that the solutions are represented in a form that can be effectively carried out by an information-processing agent”. [BR12, p. 2] Das Zitat setzt den Schwerpunkt auf einen Denkprozess, der vorrangig ein Problem analysiert und aufbereitet, damit das Problem von einem Computer verarbeitet werden kann. Das vorliegende TPA-Modell stützt sich bildlich wie inhaltlich auf das Computational-Thinking-Modell aus England, das nach der Bildungsinitiative im Jahre 2014 von BBC [BBC14] veröffentlicht wurde. Das Computational-Thinking-Modell der BBC ist heute weit verbreitet und wird unter anderem auch bei Google im Education-Programm [CT15] eingesetzt und basiert auf folgenden vier Begriffen.   • Decomposition:  Grosse Problemstellungen auf kleinere lösbare reduzieren. • Pattern Recognition: Erkennen von Mustern und Regelmässigkeiten in Daten. • Abstraction: Unnötige Informationen finden, sie eliminieren und somit Informationen auf Wichtiges reduzieren. • Algorithm: Entwickeln von Anweisungen, die das Problem oder ähnliche Probleme Schritt für Schritt lösen.  266 Urs Meier TPA-Modell 17  Abbildung 1 TPA-Modell: Thinking Im ersten Teil Thinking wird ein Problem so analysiert und aufbereitet, damit als Ziel eine Abfolge von Anweisungen (Algorithmen) ausgearbeitet wird, die einem Computer übergeben werden können. Als symbolische Darstellung für den Algorithmus eignet sich ein Flussdiagramm oder Pseudocode.    TPA-Modell 267 18  Urs L. Meier 2.2 Processing Die Erkenntnisse aus dem Denkprozess können nun an einen Computer übergeben werden, der sie ausführen kann. Die Kommunikation vom Menschen mit dem Computer wird Programmieren genannt. Hromkovič (2009) [Hr09, p. 34] bezeichnet das Programmieren als eine Sprache zur Kommunikation mit dem Rechner.   Abbildung 2 TPA-Modell – Processing Das TPA-Modell zeigt einen Überblick der Tätigkeiten ohne Computer (unplugged) und mit dem Computer (plugged) auf. Des Weiteren wird die Unterscheidung von Algorithmen und Programmen deutlich und verständlich. Je nach Aufgabe und Unterrichtsziel eignet sich eine textbasierte beziehungsweise eine visuelle Programmiersprache besser für die Anweisungen an den Computer.   268 Urs Meier TPA-Modell 19 Um die Arbeitsweise von Computern zu verdeutlichen, wird im TPA-Modell in Abbildung 3 eine zusätzliche kommunikative und technische Ebene eingeführt. Sie zeigt das Zusammenspiel von Software und Hardware. Die Anweisung der menschlichen Sprache führt über die Programmiersprache zu den Anweisungen in Maschinensprache, die das Ausführen eines Programmes mit der Recheneinheit ermöglicht. Auf die Unterscheidung von Interpreter und Compiler sowie JiT (Just in Time) -Compiler wird bewusst nicht eingegangen, sondern der Vorgang wird einfachheitshalber als Kompilieren dargestellt. Wichtig ist hier die Information, dass der Programmcode nochmals in einen Maschinencode übersetzt wird, der anschliessend von der Recheneinheit ausgeführt werden kann. Die Recheneinheit wird zusätzlich mit einem Transitor als kleinste Schalteinheit abgebildet.  Abbildung 3 TPA-Modell - Processing and Compiling   TPA-Modell 269 20  Urs L. Meier 2.3 Acting Das Acting zeigt das Programm in Aktion bzw. Handlung und dient als Rückmeldung, ob das eingangs gestellte Problem gelöst wird. Das EVA-Prinzip [RE17] wird hier vertikal dargestellt und zeigt die physikalische Eingabe mit Tastatur oder Sensor, deren Verarbeitung in einem Prozessor sowie die Ausgabe auf einem Bildschirm bzw. einem Aktor.   Abbildung 4 TPA-Modell – Acting Das TPA-Modell zeigt im Überblick auf, wie vom Denkprozess bis hin zur Anzeige auf dem Bildschirm viele kleine Schritte nötig sind. Daraus resultierend kann aufgezeigt werden, wie und wo Fehler bei der Entwicklung von Software entstehen können. Besonders wertvoll ist die Sichtweise für Lehrpersonen, die zukünftig Algorithmen und Programmieren unterrichten. Der Überblick zeigt auf, wo bei Projekten von Schüler*innen nach möglichen Fehlern gesucht werden kann. Fehlt beispielsweise eine physikalische Verbindung beim Input, habe ich mich vertippt (plus/minus) im Programmcode oder ist meine Überlegung im Flussdiagramm falsch? Für die Fachdidaktik bietet das TPA-Modell die Möglichkeit, einzelne Aspekte aufzunehmen und auf diese im Unterricht einzugehen.    270 Urs Meier TPA-Modell 21 3 Umsetzung Das TPA-Modell wird in der Aus- und Weiterbildung im Rahmen von Semestermodulen oder CAS Medien und Informatik für Lehrpersonen eingesetzt. Es hilft den Teilnehmenden, Begriffe richtig zu verorten und einen Überblick zu gewinnen. Als Schwerpunkt wird das TPA-Modell bei problembasierten Aufgaben eingesetzt. Es wird bewusst bei kleinen und einfachen Problemen angewendet. Die grundlegenden Programmierkonzepte können dadurch vermittelt werden.  Im konkreten Einsatz bei problembasierten Aufgaben werden folgende Ziele verfolgt: • Algorithmisches Denken fördern • Ein Problem in kleine lösbare Probleme reduzieren  • Lösungen für Probleme in Worten und mit Diagrammen darstellen • Umsetzung von Algorithmen in Programmen • Testen der angedachten Lösungsstrategien in Programmen 3.1 Aus- und Weiterbildung Das TPA-Modell eignet sich sehr gut, damit die Begriffe der Informatik korrekt eingesetzt und verwendet werden. Das TPA-Modell zeigt den Lehrpersonen einerseits die Komplexität des Informatik- bzw. Programmierunterrichts, hilft aber andererseits mit dem Überblick, auch Ängste und Unsicherheiten abzubauen sowie Vertrauen zu schaffen. Weiter soll das TPA-Modell aufzeigen, wie fachdidaktische Begriffe erklärt und richtig verortet werden können. Es wird unter anderem dargelegt, wie man Programmieren in Schritten vermitteln kann. Ein Schwerpunkt ist die Förderung des algorithmischen Denkens und das Lösen von Problemen. Konkret wird das TPA-Modell in Aus- und Weiterbildungen herangezogen, um aus einer Problemstellung kleine Teilprobleme herauszuschälen und zu vermitteln.   TPA-Modell 271 22  Urs L. Meier Sollen Schülerinnen und Schüler beispielsweise ein Rennspiel programmieren, könnten sie folgende Teilproblemstellungen ermitteln: • Steuerung eines Autos mit Tasten  • Das Auto so steuern, damit es immer auf der Bahn bleibt • Runden zählen • Tempo messen • Akkustand bei Elektro-Formel 1 anzeigen • Hindernisse einbauen • … Für eine konkrete Umsetzung wird hier das Teilproblem eines Akkustands dargelegt. Das Teilproblem wird reduziert auf das Zählen mit einer Variablen. Damit das Problem analysiert werden kann, müssen in einem ersten Schritt Fragen gestellt werden. • Welche Informationen benötige ich? • Wie zähle ich zurück? • Wo starte ich? • Welche Schritte nehme ich? • Wie benenne ich die Variable? • … In den nächsten Schritten wird das Teilproblem in Worten (Pseudo-Code), als Flussdiagramm und als blockbasiertes Programm dargestellt.  Abbildung 5 Problembasierte Aufgaben - Teilschritte 272 Urs Meier TPA-Modell 23 Das so analysierte Teilproblem zeigt die verschiedenen Darstellungsformen mit entsprechender Abstraktionsebene gut auf und hilft, die erwähnten Ziele zu verfolgen. 3.2 Beispiel-Umsetzung Das vorgestellte TPA-Modell wurde für problembasierte Aufgabenstellungen in der Ausbildung angehender Lehrer*innen für die Sekundarstufe 1 während eines Semestermoduls eingesetzt. Exemplarisch wird folgend eine gelungene Semesterarbeit von Berger [Be18] aufgezeigt. Der vorliegende Ausschnitt zeigt auf, wie bei einem Spiel das Teil-Problem «zufälliges Auftauchen eines Käfers» analysiert und schrittweise in einem Programm umgesetzt wird.  Abbildung 6: Modul problembasierte Aufgaben – Ausschnitt Semesterarbeit Berger  3.3 Unterricht SEK I (7-9 Schuljahr) Das TPA-Modell mit dem Schwerpunkt der problembasierten Aufgaben wird im Frühjahr 2019 an zwei Klassen des 9. Schuljahres an einem Gymnasium umgesetzt. Relevante Erkenntnisse können an der GI-Fachtagung Informatik und Schule "Informatik für alle" im Rahmen des Workshops präsentiert werden. TPA-Modell 273 24  Urs L. Meier 4 Fazit und Ausblick Als erstes Fazit lässt sich auf Grund der Semesterarbeiten der Studierenden feststellen, dass die Fokussierung auf das Problemlösen in kleinen Teilschritten für den Lernprozess unterstützend war und die Programmierkonzepte so besser vermittelt werden konnten. Bei der Weiterbildung von Lehrpersonen konnte mit dem TPA-Modell der Bereich Informatik des Dag-Stuhl-Dreiecks [GI16] klarer vermittelt und vor allem die Begriffe Algorithmen und Programmieren deutlicher verortet werden. Weiter wird mit der Unterscheidung von unplugged und plugged die Denkweise vermittelt, dass Informatikunterricht auch ohne Computer stattfinden kann. Die praktische Umsetzung auf der Zielstufe wird zeigen, wie nachhaltig die Art und Weise des Programmierunterrichts gestaltet werden kann. 5 Literaturverzeichnis  [BR12]  K. Brennan und M. Resnick, „harvard.edu,“ 2012. [Online]. Available: http://scratched.gse.harvard.edu/ct/files/AERA2012.pdf. [Zugriff am 26 01 2019]. [BBC14]  BBC, „https://www.bbc.com/bitesize/guides/zp92mp3/revision/1,“ 2014. [Online]. Available: https://www.bbc.com/bitesize/guides/zp92mp3/revision/1. [Zugriff am 26 01 2019]. [CT15]  computationalthinkingcourse, „computationalthinkingcourse.withgoogle.com,“ google.com, 2015. [Online]. Available: https://computationalthinkingcourse.withgoogle.com/unit?lesson=8&unit=1. [Zugriff am 26 01 2019]. [Hr09]  J. Hromkovič, Sieben Wunder der Informatik, Wiesbaden: Vieweg+Teubner, 2009.  [RE17]  P. D. M. Rieger, P. Eisoldt, D. Schlichtenberger und T. Scheible, Applied Computer Systems, Hochschule Albstadt-Sigmaringen: Institut für wissenschaftliche Weiterbildung, 2017.  [Be18]  J. Berger, „Leistungsnachweis Modul pbA 3. Semester Medien und Informatik,“ PHLU, Luzern, 2018. [GI16]  I. (GI), „gi.de Website,“ 2016. [Online]. Available: https://gi.de/themen/beitrag/dagstuhl-erklaerung-bildung-in-der-digital-vernetzten-welt-1/. [Zugriff am 02 02 2019].  274 Urs Meier<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 Mischen possible. Didaktische und unterrichtspraktische Überlegungen zum Mischen im Informatikunterricht. Peter Micheuz1  Abstract: In diesem Praxisbericht geht es exemplarisch um Zugänge, Werkzeuge und Methoden zum Thema Mischen. Verglichen mit der Vielfalt an Sortieralgorithmen, wird dieses Thema im Be-reich digitaler Datenverarbeitung kaum explizit gemacht. Aber warum eigentlich? Dieser Beitrag befasst sich mit der Didaktik des „Anordnens“ von digitalen Objekten als Teil eines zeitgemäßen Informatikunterrichts, in dem unterrichtspraktische Überlegungen und Konzepte mit unterschiedli-chen Softwarewerkzeugen und Entwicklungsumgebungen demonstriert und implementiert werden. Keywords: Algorithmen, Computational Thinking, Programmierung, Sortieren und Mischen,  1 Einleitung Es begab sich kürzlich im Informatikunterricht einer 5. Klasse (9. Jahrgangsstufe), in dem das „Schweizer Messer“ unter den Softwarewerkzeugen, nämlich Excel, als Vehikel für informatische Aktivitäten behandelt wurde: Der Autor fragt die Schüler, wie eine nach den Punkten des Biberbewerbs an der Schule absteigend sortierte Liste mit Schülernamen und Klasse wieder schnell „durchmischt“ werden kann, um die Sortierung nach Klasse und Punkten als Übungsaufgabe erneut stellen zu können.    Abbildung 1: Von der Ordnung zur Unordnung                                                          1 Alpen-Adria Gymnasium Völkermarkt, Pestalozzistraße 1, A-9100 Völkermarkt, peter.micheuz@aon.at   cba doi:10.18420/infos2019-28Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 275 16 Vorname1 Nachname1 und Vorname2 Nachname2 Ich habe nicht schlecht gestaunt, als mir gleich mehrere Schüler, ohne lange überlegt zu haben, folgende Lösung vorschlugen: „Eine leere angrenzende Spalte mit Zufallszahlen befüllen,  die Daten nach diesen Zufallszahlen sortieren und anschließend die Spalte mit den Zufallszahlen wieder löschen“. Auf meine Frage, wie sie so schnell draufgekommen sind, gab es eine überraschende Antwort: „Sie haben es uns vor einiger Zeit einmal so nebenbei gezeigt …“. Auf meine weitere Frage, warum die Ent-wickler von Microsoft nicht an einen „Mischbutton“ neben den Sortieroptionen in den komplexen Menübändern gedacht ha-ben, gab es noch keine schlüssigen Antwor-ten. Diese gab es (auch noch) nicht auf die Fragen, wie im Computer Pseudozufallszah-len erzeugt werden, und wie die Inhalte der Zellen so angeordnet bzw. zielgerichtet vertauscht werden, dass die Werte in den Zellen auf- oder absteigend sortiert sind. Im Fokus der weiteren Überlegungen liegt in diesem Beitrag, bis auf die Erwähnung des  Mergesort, nicht das zielgerichtete Sortieren, sondern die zufallsgesteuerte Produktion von Unordnung.   2 Lottozahlen Wenn von Zufall und unsortierten Zahlen die Rede ist, kommen einem fast unweigerlich Lottozahlen in den Sinn. Die offene Aufgabe, wie einem Computer beizubringen ist, Lot-tozahlen zu erzeugen, wurde im Informatikunterricht mit Sicherheit schon tausende Male gestellt und mit verschiedenen Werkzeugen, Entwicklungsumgebungen, Bibliotheken, un-terschiedlichen Algorithmen und Datenstrukturen, und mehreren Programmierparadig-men sowie auf diversen Abstraktionsebenen behandelt und realisiert. Eine auch nur annä-hernd erschöpfende Behandlung all dieser Zugänge ist an dieser Stelle nicht möglich, aber ein Anknüpfungspunkt und eine Analogie zum Verfahren in der Einleitung soll näher be-schrieben werden. Warum nicht die Lottozahlen nach der „Katalysatormethode“ (tempo-rär angelegtes Feld mit Zufallszahlen, siehe Einleitung) als Mischung von sechs unter-schiedlichen Zahlen in einem bestimmten Zahlenbereich (in Deutschland 1-49, in Öster-reich 1-45) erzeugen?   Abb. 2 zeigt die spaltenmäßige Anordnung (Spalte A: Lottozahlen, Spalte B: Zufallszah-len) des „einfachen“ Lottozahlengenerators, der mittels der Neuberechnungstaste F9, dem Selektieren der beiden Spalten und der richtigen Anwendung des Sortierassistenten die Lottozahlen in den Zellen B2:B7 anzeigt. Auf die Möglichkeit der Automatisierung dieser wenigen linearen Handlungsschritte in Form eines „Excel-Makros“ soll an dieser Stelle nicht eingegangen werden, obschon „Makroprogrammierung“ eine empfehlenswerte 276 Peter Micheuz Der Kurztitel des Beitrags 17 Möglichkeit darstellt, einen Grundpfeiler der Informatik, nämlich die Automatisierung, schrittweise erfahrbar zu machen.   Abbildung 2: Varianten von Lottozahlengeneratoren in MS-Excel Einen vertieften und lohnenden Ausblick auf den „Zauber“ [FL15] funktionaler Modellie-rung und deklarativer Programmierung, die allein mit der zielgerichteten und kompetenten Anwendung der Bibliotheksfunktionen von MS-Excel (oder ähnlicher Tabellenkalkulati-onssoftware) möglich sind, bieten die beiden anderen Varianten der Lottozahlenerzeugung (siehe Abb. 2 rechts) mittels der verketteten Funktionen VERGLEICH, KKLEINSTE, ZEILE sowie der Verwendung der algorithmisch interessantent Funktion RANG.   3 Mischen in der Praxis – „Real World“-Anwendungen  Bevor wir uns mit den für das Mischen notwendigen Elementaralgorithmen und Da-ten(strukturen) beschäftigen, sei hier eine weitere - möglicherweise unter Informatikleh-renden wenig bekannte und daher möglicherweise exotische – (My)SQL-Anweisung zur Produktion von sechs Lottozahlen angeführt:  select zahlen limit 6   from lottozahlen order by rand() Die Beschreibung dieses Mischbefehls in einem MySQL-Tutorial im Web [MY19] in Abb. 3 führt uns wieder zum Konzept und die Methode der Sortierung nach Zufallswer-ten zurück und demystifiziert diesen scheinbar widersprüchlichen Befehl „order by rand()“. Diese Widersprüchlichkeit gibt es vordergründig auch beim Mergesort („Sortie-ren durch Verschmelzen/Mischen“). Mischen possible 277 18 Vorname1 Nachname1 und Vorname2 Nachname2  Abbildung 3: Beschreibung der ORDER BY RAND()- Anweisung im Web An dieser Stelle darf nicht verschwiegen werden, dass dieser SQL-Befehl ein bestimmtes Maß an wohlvorbereitem „Umfeldwissen“ in Form von konkreten Werkzeugkenntnissen voraussetzt, wenn er sinnvoll z.B. in einem zeitgemäßen Web-User-Interface eingesetzt werden soll. Das V (Verarbeitung) im EVA-Prinzip ist mit dem obigen SQL-Befehl der leichtere Teil der Übung, weil er als Blackbox verwendet wird und die Realisierung des zugrundeliegenden Misch-Algorithmus bisher noch kein Thema war. Sowohl die Eingabe der Daten als auch die Ausgabe der Daten setzen viel Unterrichtsarbeit voraus, wenn von den Schülern aktive Entwickerleistungen in Form von Modellierung, Programmierung und dem Gestalten von bereits einfachen Benutzerschnittstellen eingefordert werden.     Anhand von drei verschiedenen Zufallsfragen, die aus einem größeren Fragepool auf ei-nem Webportal nach jedem Seitenaufruf neu generiert werden, soll dies illustriert werden.  Für diese Ausgabe ist das folgende „Codeschnipsel“ auf einem Webserver als „Mischung“ von HTML, PHP und (My)SQL verantwortlich:   mysql_select_db("unterstufe");  $abfrage=mysql_query("select frage                        from basisfragen                        order by rand()");  for ($i=0;$i<3;$i++) {      $row = mysql_fetch_row($abfrage);      echo("<center><b><img src='pfeil.gif'>".$row[0]."     </b></center>");   } Auf der gleichen Portalseite [SI19] werden nicht nur Texte durchmischt, sondern nach jedem Seitenaufruf drei verschiedene Hardwarebausteine angezeigt (siehe Abb. 4). Diese Anzeige wird aus didaktischen Gründen unter Ausnutzung einer der vielen Bibliotheks-funktionen und der Datenstruktur ARRAY der serverseitigen und weitverbreiteten Pro-grammiersprache PHP realisiert.  278 Peter Micheuz Der Kurztitel des Beitrags 19  Abbildung 4: Zufällige Anordnung von Bildern       Im folgenden kurzen, aber gehaltvollen und leistungsfähigen serverseitigen HTML-PHP-Skript ist der SHUFFLE-Befehl als PHP-Bibliotheksfunktion nicht zu übersehen: echo("<p><h2>... viele Hardwarebasteine</h2>");            $zz = range(0,18);    shuffle($zz);    $bild1="bilder/".$zz[0].".gif";  $bild2="bilder/".$zz[1].".gif";  $bild3="bilder/".$zz[2].".gif";  echo("<p><center><img src='$bild1'>                  <img src='$bild2'>                   <img src='$bild3'>       </center></p>"); Puristen und Dogmatiker unter den Informatikern werden einwenden, dass Skriptsprachen wie PHP, mit ihrer schlampigen Art mit Datentypen umzugehen, zu einem schlechten Pro-grammierstil verleiten. Ich lasse das unkommentiert stehen. Der geneigte Leser möge sich dazu selbst ein Urteil bilden, sich an Expertenforen wie z.B. quora.com beteiligen und daraus die Konsequenzen für den (eigenen) Informatikunterricht ableiten.   Die Anweisung $zz = range(0,18) legt ein Array $zz[0]=0, $zz[1]=1, … $zz[18]=18 an, der Befehl shuffle($zz) durchmischt zufällig die Inhalte der Felder, so einfach ist das! Die hier nicht offensichtlichen Tücken des Skripts liegen weniger darin, die Wirkung des Shuffle-Befehls zu verstehen. Probleme bereiten da schon eher die kunstvolle Anwendung („Maskierung“) der Anführungszeichen und das Konzept von externen, auf dem Server im Ordner „bilder“ gespeicherten Hardware-Bildern im GIF-Format (0.gif, 1.gif, …18.gif) sowie das Konzept ihrer internen Anbindung an das Array $zz.  Nach diesem kurzen Ausflug in die Webprogrammierung inklusive werkzeugabhängiger Zugänge zum Mischen von Zahlen, Text und Bildern mit der „Katalysatormethode“ (siehe oben), der (My)SQL-Anweisung „order by rand()“ und dem Shuffle-Befehl aus der PHP-Funktionsbibliothek, verlassen wir die Komfortzone der beschreibenden Methode und be-treten die prozedurale Welt elementarer Algorithmen. Mischen possible 279 20 Vorname1 Nachname1 und Vorname2 Nachname2 4 Mischen als zufälliges Tauschen von Variableninhalten  Dieser Beitrag darf auch als späte und logische Fortsetzung eines INFOS-Beitrages „Ein kleiner Schritt für LehrerInnen, ein großer Schritt für SchülerInnen“ aus dem Jahr 2005 gesehen werden [MI05], in dem es im 6. Kapitel „Ringtausch und Umfüllaufgabe“ hieß: „In diesem Kapitel ist nur angedeutet worden, welch reichhaltiges, didaktisch wertvolles Potential bereits in (einfachen) Aufgabenstellungen - wie etwa dem Tausch der Inhalte zweier Variablen - steckt. Die Legitimation, den "Platztausch" im Informatikunterricht zu thematisieren, ist aber auch durch unzählige lebensweltliche Anwendungen und die Tat-sache gegeben, dass er das Fundament vieler Algorithmen darstellt, in denen es um Misch- sowie Sortierverfahren geht.“  Beginnen wir mit einer konkreten Programmieraufgabe, diesmal in Javascript, einer Spra-che, die derzeit einen wahrhaftigen Boom erlebt und an der man nicht vorbeikommt, wenn es um die Entwicklung von Frontend-Anwendungen im Web geht. Unsere Aufgabenstel-lung lautet so: „Eine bestimmte Anzahl an Schülerbildern sind auf einer Schulwebsite in tabellarischer Form nach jedem Seitenaufruf durch-mischt anzuordnen.“ Anmerkung: Die vier Menschen links existieren in Wirklichkeit nicht. Sie sind der auf Artificial Intelli-gence und Deep Learning-Algorithmen beruhenden Website „thispersondoesnotexist.com“ entnommen.  Im Unterschied zur serverbasierten Skriptsprache PHP verfügt die Programmiersprache Javascript zwar über eine Methode „sort“ der Objektklasse „array“, aber lei-der (oder aus didaktischer Sicht Gottseidank) keine Me-thode „shuffle“, die es mit einer Anweisung gestatten würde, die Bildnummern zu durchmischen. Es wird an dieser Stelle auch von der Methode des „Katalysatorfelds“ (Sortierung eines temporären Zufallsfeldes) Abstand genommen. Der Leser ist eingeladen auszuprobieren, ob dieser Workaround einfach zu realisieren ist. Stattdessen bewegen wir uns (notgedrungen) auf die Ebene des „Dreiecks- bzw. Ringtau-sches“ und realisieren den Mischvorgang durch wiederholtes Tauschen der Array-Inhalte. Wenn es in einer Entwicklungsumgebung keine (Bibliotheks)Funktion oder keine entspre-chende Methode gibt, steht es jedem frei, sich im algorithmischen Denken und in der Im-plementierung derselben zu versuchen. Das Kernstück des folgenden HTML-Files, das vollständig in Javascript codiert und lauffähig ist, wenn die Fotos im gleichen Ordner wie das HTML-Skript zur Verfügung stehen, ist die Funktion „shuffle“ mit dem Array „fotos“. Dieses dient sowohl als Eingabeparameter als auch als Ausgabefeld.     <script> function shuffle(fotos) {     var laenge = fotos.length, temp, index; 280 Peter Micheuz Der Kurztitel des Beitrags 21     while (laenge > 0) {         index = Math.floor(Math.random() * laenge);         laenge = laenge - 1;         temp = fotos[laenge];         fotos[laenge] = fotos[index];         fotos[index] = temp;     }     return fotos; }  var bilder = new Array()  bilder[0] = 'name_a.jpg' bilder[1] = 'name_b.jpg' bilder[2] = 'name_c.jpg' bilder[3] = 'name_d.jpg' shuffle(bilder); var p = bilder.length; for (var i = 0; i <= 3; i++)   { var bildnummer = i;             document.write('<img src="'+bilder[bildnummer]);+'">');     if (i % 2 == 1) {         document.write('<br>');      }               } </script>  Der in der Funktion „SHUFFLE“ implementierte Algorithmus ist optimal mit einer Kom-plexität von O(n) und wird auch als Fisher-Yates-Shuffle bezeichnet.   Abbildung 5: Pseudocode, Quelle: https://de.wikipedia.org/wiki/Zufällige_Permutation Ronald Aylmer Fisher (1890-1962) und Frank Yates (1902-1994) waren bedeutende Sta-tistiker des 20. Jahrhunderts. Dass das optimale Mischen nach ihnen benannt ist, ist kein Zufall. Zufallsanordnungen, mathematisch ausgedrückt zufällige Permutationen, werden unter anderem bei der Analyse von Sortierverfahren, in der Kryptographie, bei  randomi-sierten Algorithmen und vor allem bei Simulationen benötigt.     Mischen possible 281 22 Vorname1 Nachname1 und Vorname2 Nachname2 Übrigens eignet sich der Fisher-Yates-Algorithmus auch vorzüglich für die (optimale) Er-zeugung von Lottozahlen, wenn diese mit der Datenstruktur Array realisiert wird. Dies passiert weltweit in tausenden Lottoannahmestellen beim Kauf von computergenerierten Zufallstipps. 5 Simulationen und weitere Unterrichtsbeispiele  Interessante Anmerkungen zum Bildungswert der Informatik finden sich bei Rechenberg [RE94], der im Kapitel „Informatik und Kultur“ vier wesentliche Bereiche der Informatik herausstreicht. Erstens das algorithmische Denken, das beim Verstehen von Konzepten jeder Art hilft [vgl. KN74], aber „keinem auf Anhieb gelingt, und mühsam mit großer Geduld erworben werden muß“, zweitens das Studium und die Meisterung komplexer Zu-sammenhänge, und drittens, dass der Computer „ein so vielseitiges Instrument zur Si-mulation und zum Ausführen von Gedankenexperimenten ist“. Der vierte Bildungs-wert der Informatik besteht für Rechenberg darin, zu zeigen, was man mit Computern vor allem nicht automatisieren kann. Damit hat er nicht zuletzt die aktuelle Diskussion um die (Auswirkungen der) Artificial Intelligence bereits vor 25 Jahren vorausgesehen.        Im Folgenden werden Aufgaben und Anregungen zum Thema Mischen im Zusammen-hang mit einfachen Simulationen und unterrichtspraktischen Anregungen gestellt. Sitzanordnungen und BOGO-Sort Die Antwort auf die Frage, wie viele Sitzanordnungen es in einer Klasse mit z.B. 25 Stüh-len gibt, verblüfft nicht nur die SchülerInnen, die sich - das erste Mal mit dieser Frage konfrontiert - erfahrungsgemäß extrem verschätzen.    Abbildung 6: Permutation von 25 Buchstaben  Die Zahl 25! = 15.511.210.043.330.985.984.000.000 sprengt das menschliche Vorstel-lungsvermögen und sollte einen ambitionierten Klassenlehrer davor bewahren, in einem Schuljahr alle Mischvarianten physisch ausprobieren zu wollen, und wohl auch den Infor-matiklehrer, alle Permutationen digital anzeigen, geschweige denn ausdrucken zu wollen. Sehr wohl können die Computer im Informatikraum damit beschäftigt werden, alle(!) Buchstaben-Mischungen zu produzieren und darauf zu warten, bis der Buchstabensalat wieder sortiert ist. Dieses Sortierverfahren - solange zufällig mischen, bis alle Objekte sortiert sind – führt laut Wikipedia (https://de.wikipedia.org/wiki/Bogosort) die Bezeich-nungen Bogosort, Alexsort, Monkeysort oder Stupidsort. Im krassen Unterschied dazu sei 282 Peter Micheuz Der Kurztitel des Beitrags 23 hier das hocheffiziente Mergesort (Sortieren nach dem Prinzip Teile und Herrsche mit anschließendem Verschmelzen/Mischen) angeführt, zu dem es mit Stand 10.2.2019 über eine Million Google-Treffer mit unzähligen guten Beschreibungen und Erklärvideos gibt.    Magisches Quadrat und eine Biber-Aufgabe Fachdidaktisch und methodisch interessant im Zusammenhang mit dem Mischen ist auch die Suche nach dem „Magischen Quadrat“ in allen Varianten (siehe Abb. 7).   Abbildung 7: Magisches Quadrat und Biber Aufgabe Die Abbildung links zeigt eine von unzähligen Implementationen des Magischen Quadrats (hier in Excel). Die Benutzerschnittstelle mit vier Buttons und einigen berechneten Fel-dern weist auf eine interessanten didaktischen Zugang zur Lösung dieser Aufgabe hin. Es handelt sich hier um eine Mischform der von Excel bereitgestellten Funktionen (verdeckte Algorithmen:  Summen, Minimum und Maximum) und in VBA (Visual Basic for Appli-cations) codierten Tausch- und Mischalgorithmen, die im Hintergrund arbeiten.   Biber-Aufgaben bieten vielfältige Anknüpfungspunkte für informatisches Denken und Handeln, so auch exemplarisch die in Abb. 6 dargestellte originelle „Sortieraufgabe“. In der Grundschule sollten die Balken/Stäbe haptisch (aus)sortiert werden, in der Sekundar-stufe I bietet sich funktionale Modellierung an, und in der Sekundarstufe II ist eine Simu-lation inklusive Programmierung und Codierung empfehlenswert. Was hat das mit dem Mischen zu tun? Sehr viel. Warum nicht computergestützte Experi-mente automatisiert durchführen, die den Zusammenhang zwischen der Anzahl von Dach-hölzern und allen(!) 11! = 39.916.800 möglichen Anordungen herstellen?          6 Schlussanmerkungen Dem aufmerksamen Leser wird sicher aufgefallen sein, dass bisher ein weitverbreiteter lebensweltlicher Aspekt des Mischens ausgespart wurde. Es geht um die Kultur der Kar-tenspiele, bei denen der Zufall und das Karten mischen eine erhebliche Rolle spielen. Bei dieser haptischen Erfahrung ist die wohl weitverbreitetste Methode jene des „Packelns“ Mischen possible 283 24 Vorname1 Nachname1 und Vorname2 Nachname2 (enspricht dem mehrmaligen Abheben), bei dem mit beiden Händen öfters jeweils zwei nach Gefühl unterschiedliche Stapel vertauscht werden. Dabei soll es schon vorgekom-men, dass nicht ordentlich gemischt und getrickst wird. In diesem Zusammenhang sei auf eine ausführliche Quelle für Kartentricks mit informatischem Background „Die Magie der Informatik: Kartentricks“ [CS19] verwiesen, in der u.a. auch der Trick „Perfektes Mi-schen“ vorgestellt wird.      Kartenspielen und haptisches Kartenmischen sollten im Unterricht der Primarstufe einen Fixplatz haben. Später in der Sekundarstufe I kann die Haptik z.B. in einer Tabellenkal-kulation als Teil einer Bedienerschulung (Verschieben, Kopieren, siehe Abb. 8) simuliert  Abbildung 8: Simulation des Abhebens und dabei versucht werden, mit möglichst wenig Mischungsvorgängen eine gute Durch-mischung zu erreichen. Die programmiertechnische Realisierung und die Diskussion, was „gut durchmischt“ heißt, kann in der Sekundarstufe II weitergeführt werden.  Literaturverzeichnis [CS19] Die Magie der Informatik: Kartentricks im Rahmen des CS4FN-Projekts (Computer Sci-ence for Fun), online unter: http://www.cs4fn.org/magie,  Stand 10.2.2019 [FL15] Fleckenstein J. u.a.: Excel – Das Zauberbuch. Markt&Technik, 2015. [KN74] Knuth D.E: Computer Science and its Relation to Mathematics. American Mathematical Monthly 1974. [MI05] Micheuz P.: Ein kleiner Schritt für LehrerInnen, ein großer Schritt für Schüler. In. Stef-fen F.: Unterrichtskonzepte für informatische Bildung, INFOS-Tagungsband, 11. GI-Fachtagung Informatik und Schule, 28.-30. September 2005. [MY19] MySQL-Tutorial: http://www.mysqltutorial.org/select-random-records-database-table.aspx, Stand: 10.2.2019 [RE94] Rechenberg P.: Was ist Informatik? Hanser-Verlag, 2. Auflage, 1994. [SI19] Portal Schulinformatik: https://www.gym1.at/schulinformatik/unterstufe,  Stand 10.2.2019  284 Peter MicheuzcbaArno Pasternak et al. (Hrsg.): INFOS 2019 - Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Entwicklung und Reﬂexion einer Unterrichtssequenz zumMaschinellen Lernen als Aspekt von Data Science in derSekundarstufe IISimone Opel, Michael Schlichtig, Carsten Schulte1, Rolf Biehler, Daniel Frischemeier,Susanne Podworny, Thomas Wassong2Abstract:Die Bereiche „Data Science“ und „Big Data“ sowie ihre technischen, ethischen undgesellschaftlichen Auswirkungen werden zunehmend nicht nur in der Wissenschaft, sondern auchin diversen Medien diskutiert und somit verstärkt auch zu einem wichtigen Thema für alle. Umden Schülerinnen und Schülern der Sekundarstufe II einen theoretisch und fachwissenschaftlichfundierten Einstieg in diesen Themenbereich zu ermöglichen, wurde ein erster Entwurf einesinterdisziplinären Curriculums entwickelt, das neben fachlichen Aspekten von Data Science einenFokus auf sich hieraus ergebende gesellschaftliche Fragestellungen legt. Es werden neben derKonzeption des Kurses die bisherigen Erfahrungen aus der Durchführung – insbesondere in Hinsichtder darin enthaltenen Unterrichtseinheit zum Maschinellen Lernen - berichtet, sowie die sich hierausergebenden Implikationen für die Weiterentwicklung dargestellt und diskutiert.Keywords:Data Science; Maschinelles Lernen; KI; Künstliche Neuronale Netze; Entscheidungsbäu-me; Big Data; Curriculum1 EinleitungData Sciencesowie Fragen zu Maschinellem Lernen (ML) und Künstlicher Intelligenz (KI)sind inzwischen in großem Maß in verschiedene Systeme implementiert und werden in allenBereichen intensiv diskutiert. Auch die gesellschaftliche Diskussion über Funktion, Nutzenund Gefahren dieser Systeme nimmt inzwischen viel Raum ein. Es erscheint uns wichtig,dass diese Fragestellungen in den Unterricht integriert werden. Daher entwickelten wir aufBasis curricularer Ideen aus der Informatik und Mathematik einen ersten Entwurf einesCurriculums für die Sekundarstufe II und führten dies in ein konkretes Unterrichtskonzeptüber, das im Rahmen des durch die Deutsche Telekom Stiftung ermöglichten Projekts„ProDaBi3“mit einem Oberstufenkurs erprobt wird. Im Rahmen dieses Artikels stellen wirneben diesem Kurs auch erste Erfahrungen der Umsetzung – insbesondere der Einheitenaus KI und ML – sowie die hinter dem Entwicklungsprozess liegenden Ideen vor.1Universität Paderborn, Didaktik der Informatik, Fürstenallee 11, 33102 Paderborn, vorname.nachname@uni-paderborn.de2Universität Paderborn, Didaktik der Mathematik, Warburger Str. 100, 33098 Paderborn, nachname@math.uni-paderborn.de3ProDaBi – Projekt Data Science und Big Data in der Schule, Projektwebseite: https://www.prodabi.decba doi:10.18420/infos2019-29Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 2852 Simone Opel, Michael Schlichtig, Carsten Schulte2 Data Science und Maschinelles Lernen – Aspekte für die BildungData Science, ML und der Umgang mit Big Data geht weit über technische und wissenschaft-liche Aspekte unterschiedlicher Disziplinen hinaus und trägt auch ethische, gesellschaftlicheund soziale Auswirkungen in sich – daher werden hier nicht umsonst sehr verschiedeneKontexte diskutiert. Um möglichst viele Aspekte zu verstehen und ein gemeinsames Ver-ständnis vonData Sciencezu entwickeln, wurden im Rahmen eines interdisziplinären,internationalen Symposiums4[Pa18] diese Aspekte diskutiert und zwei für uns curricularrelevante Bereiche wurden auf Basis der dort geführten Diskussionen identiﬁziert: Für dieInformatikdidaktiksind das neben der Entwicklung von Computational Thinking [TD16]insbesondere die Auswirkungen verschiedener Bereiche der Mensch-Maschine-Interaktionauf die Gesellschaft – und damit auch unser Umgang mit Big Data sowie den Methoden undAuswirkungen von Data Science [SBS18]. Im Bereich derStatistikdidaktiksollten die fun-damentalen Ideen der Statistik um verschiedene Aspekte derstatistischen Kompetenz[Ri16]erweitert werden. Daher stehen diese Ideen und Aspekte im Zentrum der Entwicklungen.2.1 Daten und Datenprozesse als strukturgebende KomponentenIm Gegensatz zur praktischen Informatik stehen im Bereich derData Sciencenicht dieEntwicklung von algorithmischen Strukturen sowie deren (algorithmische) Modellierungund Implementierung im Vordergrund, sondern der Umgang mitDaten. Das heißt, dieKomplexität der Fragestellungen wird nicht nur durch die eingesetzten Algorithmenbestimmt, sondern wird in hohem Maße durch die Daten und die in ihnen implizit undexplizit enthaltenen Informationen beschrieben. Nach der Deﬁnition der EmpfehlungenGI zu den Bildungsstandards in der Sekundarstufe sind „Daten eine Darstellung vonInformation in formalisierter Art [...]. Daten werden wieder zu Information, wenn siein einem Bedeutungskontext interpretiert werden“ ([Rö16], S. 9). Ein Informatiksystemverarbeitet somit nur Daten, die darin enthaltene Information wird durch Interpretationdurch den Menschen gewonnen. Daten sind also „nicht nur Zahlen, sie sind Zahlenmit einem Kontext“ [CM97]. Es stellt sich die Frage, wie Schülerinnen und SchülerDatenkompetenzerwerben können, die Voraussetzung für einen kompetenten Umgang mitfehlerbehafteten oder unterschiedlich strukturierten Daten innerhalb eines Kontextes ist.Ridsdale et al. deﬁnierenDatenkompetenzals die prozessorientierte „Fähigkeit, Datenkritisch zu sammeln, zu analysieren, zu bewerten und anzuwenden“ ([Ri15], S. 3). Damitliegt der Schwerpunkt der Handlungen der Lernenden im Umgang mit verschiedenenDaten, so dass „Prozessmodelle zur Datenanalyse“ einen sinnvollen Ausgangspunkt zurPlanung von unterrichtlichem Handeln bieten. Der Deﬁnition von Ridsdale et al. ähneltdas CRISP-DM-Modell5[Ch00], das ein vollständiges Verfahren zum Umgang mit Daten4„Perspectives for data science education at school level – Educational contributions from statistics, computerscience and sociocultural studies“;http://go.upb.de/SymposiumProDaBi5CRISP-DM =Cross-Industry StandardProcess forData Mining, Phasen: Verstehen der Fragestellung –Verstehen der Daten – Aufbereitung der Daten – Modellbildung – Bewertung des Modells – Einsatz286 Simone Opel et al.Entwicklung einer Unterrichtssequenz zum Maschinellen Lernen 3Abb. 1: Das CRISP-DM-Modell als Standardprozessmodell für Data Miningbeschreibt (vgl. Abb.1). Dieses Prozessmodell erscheint uns einen sinnvollen Rahmen zurErarbeitung eines Curriculums und entsprechenden Unterrichtsmaterials zu bieten, so dassentschieden wurde, das CRISP-DM-Modell als Basis weiterer Entwicklungen zu verwenden,da dieses Modell den Datenprozess umfassender darstellt als zum Beispiel der ebenfallshäuﬁg verwendete PPDAC-Zyklus6.2.2 Relevanz sozialer und gesellschaftlicher AspekteGesellschaftliche und soziale Implikationen besitzen eine große Relevanz im Bereich derData Science(vgl. Kapitel1). Diskussionen über gesellschaftliche Aspekte im Informatik-unterricht werden – wenn überhaupt – meist nur entkoppelt von technologischen Fragender Unterrichtsinhalte geführt und sind nicht fest in die Arbeit in Softwareprojekten undLernaufgaben integriert. Auch eines der wenigen Data Science-Curricula und Kompe-tenzmodell für das schulische Umfeld [GR] stellt die verschiedenen Aspekte von DataScience zwar umfassend, aber im Wesentlichen aus fachwissenschaftlicher Sicht dar. Daherstellt die Frage, wie diese Aspekte integraler Bestandteil des Unterrichtsmaterials und desCurriculums werden können, eine wichtige, schrittweise zu lösende Herausforderung dar.2.3 Auf dem Weg zum Data Science-Kurs – Didaktische AnsätzeEine wichtige Erkenntnis der Vorarbeiten war, dass – mehr als in der praktischen Informatik– eine gemeinsame Sicht auf Daten sowie die Entwicklung eines gemeinsamen Grundver-ständnisses aller Begri e und Verfahrennotwendig ist (vgl. [Tv09]) – ein auch während derersten Durchführung des Projektkurses nicht abgeschlossener Schritt. Weiterhin wurdenschon existierende Materialien und Curricula auf ihre Einsatzmöglichkeit hin evaluiert.Allerdings sind sämtliche, meist hochschulische Curricula gut strukturiert, aber nur auftechnologische Aspekte fokussiert. Daher ergibt sich die Notwendigkeit, diese Materialienselbst zu entwickeln und die relevanten Inhalte aus den Beiträgen des in Kap.1erwähntenSymposiums zu generieren. Das Au nden relevanter Information aus Data Mining undStatistik auf der einen Seite, sowie die notwendigen Kompetenzen aus dem Bereich des ML6PPDAC =Problem –Plan –Daten –Analyse – K(C)onclusionEine Unterrichtssequenz zum Maschinellen Lernen als Aspekt von Data Science 2874 Simone Opel, Michael Schlichtig, Carsten Schultesowie dem Design Künstlicher Neuronaler Netzwerke (KNN) auf der anderen Seite, ist dankder breiten Basis aller analysierten Unterlagen relativ einfach. Schwieriger gestaltet sichdas Einbinden der gesellschaftlichen, sozialen und interdisziplinären Fragestellungen (vgl.Abschnitt2.2). Daher entschieden wir uns, in diesem Projekt den Ansatz des „Design-BasedResearch“ (DBR) [Co03] zu verfolgen: Ausgehend von einem ersten Entwurf eines DataScience-Curriculums wird ein hierauf basierender Kurs entwickelt, durchgeführt und evalu-iert. Aus den Erkenntnissen der Durchführung wird der Kurs und damit auch das anfangsnoch sehr skizzenhafte Curriculum in mehreren Zyklen weiterentwickelt. Die im folgendenbeschriebene Version des Data Science-Kurses wurde unter Verwendung dieses Ansatzesentwickelt und wird als sog. „Projektkurs“ in Kooperation mit einem Gymnasium vor Ortwährend des SJ 2018/19 erprobt und evaluiert.3 Der Data Science-KursDer so entstandene Kurs ist modular angelegt, wobei die beiden Bereiche „Data Miningund Statistik“ sowie „Künstliche Intelligenz und Maschinelles Lernen“ klar abgegrenzt sindund dem CRISP-DM-Modell (vgl. Abschnitt2.1) folgend aufeinander aufbauend gestaltetwerden. Zum Erwerben von Kompetenz, zumindest einfache Data Science Projekte selbstdurchzuführen, wird als drittes Modul ein Projektmodul entwickelt und durchgeführt, sodass der Kurs in seiner ersten Version aus drei Modulen besteht:1.Von Daten zu Informationen:Dieses Modul ist eine Einführung in Data Science undden Umgang mit Big Data und zielt darauf ab, das statistische Denken zu verbessern undDatenkompetenz zu entwickeln. Es werden dabei statistische Methoden auf Daten zurInformationsgewinnung angewendet, die Erkenntnisse reﬂektiert und ihre Aussagekraftkriterial diskutiert.2.Künstliche Intelligenz und Maschinelles Lernen:Im Rahmen dieses Moduls lernen dieSchülerinnen und Schüler zwei unterschiedliche Methoden kennen, Erkenntnisse aus Datenzu gewinnen, indem sie exemplarisch Entscheidungsbäume als Vertreter einer SymbolischenKI und KNN (hier Back-Probagation-Netze) als typischen Vertreter überwachten Lernenskennenlernen, analysieren und auf eigene Beispiele anwenden. Ziel ist, nicht nur dieinformatischen Aspekte von KI kennenzulernen, sondern auch ihre Erkenntnisse aufvorhandene Systeme anzuwenden und deren Grenzen, Chancen und Risiken zu diskutieren.3.Datenprojekte:Im Rahmen der Durchführung von Datenprojekten können die Schüle-rinnen und Schüler ihre Kompetenzen einsetzen, um reale Fragestellungen zu bearbeiten.Dabei werden sie motiviert, ihr Vorgehen im Sinne des CRISP-DM-Modells zu planen,um so zu für sie optimalen Ergebnissen kommen zu können und diese auch am Ende zupräsentieren und deren gesellschaftlichen Implikationen diskutieren zu können.Es wurde bei der Entwicklung und Umsetzung immer auf eine enge Verﬂechtung derfachlichen Inhalte mit gesellschaftlichen und sozialen Aspekten geachtet, um eine mehrdi-mensionale und interdisziplinäre Sicht auf alle Aspekte der Themen zu erhalten.288 Simone Opel et al.Entwicklung einer Unterrichtssequenz zum Maschinellen Lernen 53.1 Modul 1: Von Daten zu Informationen – DatendetektiveFolgend dem in Abschnitt2.1beschriebenen CRISP-DM-Modell ist für ein Vorhaben ausdem Bereich Data Science zunächst wichtig, die Fragestellung zu verstehen („BusinessUnderstanding“), entweder sinnvolle Daten zu erheben oder schon gesammelte Daten zuverstehen („Data Understanding“), und diese anschließend zu analysieren und aufzubereiten(„Data Preparation“). Inspiriert von diesem Zyklus wird in diesem Modul (insg. 7 Wo.) imersten Baustein zunächst die Verwendung von großen und o en verfügbaren Datenmengendiskutiert und anschließend an Hand von „Lärmdaten“ (vgl. Abb.2) erprobt, derartigeDaten selbst zu analysieren, unter Verwendung von Jupyter Notebooks7aufzubereiten undzu visualisieren. Im zweiten Baustein führen die Schülerinnen und Schüler explorativeDatenanalysen unter Verwendung des multivariaten JIM-Datensatzes mit Hilfe des Online-Tools CODAP8durch und präsentieren und diskutieren ihre Erkenntnisse.Abb. 2: Von den Schülerinnen und Schülern unter Verwendung von Python aufgearbeitete undverschiedenen Orten zugeordnete Lärmproﬁle3.2 Modul 2: Künstliche Intelligenz und Maschinelles LernenBetrachtet man den CRISP-DM-Zyklus weiter, so folgt als nächster Schritt das Entwickelneines Modells („Modeling“). Hier erkennen die Lernenden die Unterschiede zwischenklassischen algorithmischen Problemlösungsverfahren und datengetriebenen Prozessab-läufen am Beispiel des ML (vgl. Abb.3) und können die damit verbundene Rolle desMenschen innerhalb dieser Mensch-Maschine-Interaktion diskutieren und reﬂektieren(insg. 7 Wo.). Aus der Menge von Verfahren wurden im Vorfeld wichtige exemplarischausgewählt und in zwei Bausteinen mit den Schülerinnen und Schülern bearbeitet. Imersten Baustein erwerben die Schülerinnen und Schüler unter Verwendung des „SweetLearning Computers“ [Cu16b], einer Unplugged-Aktivität, ein grundsätzliches Verständ-nis von ML und diskutieren auf Basis dieses so erarbeiteten Wissens über aktuelle undzukünftige Chancen und Risiken dieser Technologien sowie ihren vielfältigen Einsatz. Dieswird vertieft durch die Einführung vonEntscheidungsbäumen, die in relativ kurzer Zeitverstehbar sind und bei denen die wesentlichen Verfahren und Parameter zumindest imGrundsatz für die Lernenden transparent und erkennbar sind. Als Werkzeug wird hierwieder CODAP mit einem zusätzlichen Plug-In zum Darstellen von Entscheidungsbäumen7Jupyter Notebook = interaktive, browserbasierte Umgebung zur Programmierung;https://jupyter.org/8CODAP = Didaktisches Onlinetool zur Datenanalyse;https://codap.concord.orgEine Unterrichtssequenz zum Maschinellen Lernen als Aspekt von Data Science 2896 Simone Opel, Michael Schlichtig, Carsten SchulteAbb. 3: Im Projektkurs erarbeitete Graﬁk zum Vorgehen zur Erstellung von KI-Modellen mittels MLverwendet, das keine explizite Programmierung erfordert, sondern einen WYSIWYG-Editorbereitstellt. Allerdings stößt dieses Tool sehr bald an seine Grenzen. Insbesondere durchdas manuelle Aufbauen des Entscheidungsbaumes kann kein tieferes Verständnis darübererworben werden, wie Entscheidungsbäume algorithmisch erzeugt und zum automatischenKlassiﬁzieren eingesetzt werden können. Daher werden im Anschluss mit Jupyter Notebookeigene Bäume zum schon bekannten JIM-Datensatz berechnet, wobei die Möglichkeitbesteht, die Passung des entwickelten Baumes durch die Hinzunahme von Validierungs-daten („Evaluation“) zu überprüfen und anschließend zu optimieren. Während beim reinalgorithmischen Problemlösen die Entwicklung eines stabilen und e zienten Algorithmusim Mittelpunkt stünde, ist hier die passende Wahl von Daten, Parametern und Optimie-rungsverfahren die größte Herausforderung für die Schülerinnen und Schüler, während diealgorithmische Umsetzung der Bäume an sich durch die passende Wahl von Bibliothekenkeine größere Herausforderung darstellt. Im folgenden zweiten Baustein werden zunächst(in Analogie zur Funktionsweise des Gehirns) durch die Unplugged-Aktivität „Brain in aBag“ [Cu16a] die Grundbegri e vonKNNzusammen mit den Schülerinnen und Schülernerarbeitet. Anhand dieses durch weitere Erläuterungen und theoretische Inhalte ergänzteSpiel erkennen die Lernenden die grundlegenden Eigenschaften und Parameter von KNNohne die Hürde eigener Programmierung. Um diese Erkenntnisse praktisch zu erprobenund ein Gefühl für den Einﬂuss der verschiedenen Parameter zu erhalten, trainieren sieunter Verwendung des Online-Tools „Playground Tensorﬂow“9unterschiedliche Netze undbeobachten und erfassen dabei direkt die Auswirkungen ihrer Änderungen. Für ein tieferesVerständnis modellieren, trainieren und validieren sie selbst unter Verwendung von JupyterNotebook eigene KNN. Hier kommt der freie Datensatz mit handschriftlichen Zi ern aus derMNIST-Datenbank [LCB98] zum Einsatz. Da die Zi ern der amerikanischen Schreibweiseentsprechen, führt eine Validierung durch handgeschriebene Zahlen der Schülerinnen undSchüler zu schlechten Ergebnissen, so dass hier ein Anlass gescha en wird, die Grenzenund Möglichkeiten von verschiedenen Ansätzen von ML zu diskutieren. Auch kommen hiertagesaktuelle Artikel und Berichte zum Einsatz, die auch problematische oder kontroversdiskutierte Einsatzgebiete von KI und KNN zum Thema haben, so dass hier verstärktgesellschaftliche Fragestellungen bearbeitet werden.9Playground Tensorﬂow: Frei explorierbare Onlinevisualisierung von KNN;https://playground.tensorflow.org290 Simone Opel et al.Entwicklung einer Unterrichtssequenz zum Maschinellen Lernen 73.3 Modul 3: DatenprojekteWährend in den ersten beiden Modulen die Erarbeitung neuen Wissens im Mittelpunktstand, wird im dritten Modul ein gemeinsames Datenprojekt mit „realen“ Daten undProjektpartnern durchgeführt (insg. 10 Sitzungen). Dabei werden die in den vorherigenModulen erworbenen Kompetenzen vertieft. Die Schülerinnen und Schüler erhalten denProjektauftrag, aus den Daten des örtlichen Parkleitsystems sowie aus den Bezahlsystemeneines Parkplatzes (Parkscheinautomat) und eines Parkhauses Vorhersagemodelle für diejeweilige Auslastung zu einem zukünftigen Zeitpunkt zu entwickeln und sich hierbei amProjektablauf des CRISP-DM zu orientieren. Zur Organisation und zur Unterstützung derarbeitsteiligen Arbeit an den Daten steht den Schülerinnen und Schülern ein Gitlab zurVerfügung, das sowohl zur Daten- als auch zur Aufgabenorganisation genutzt werden kann.Die betreuenden Personen fungieren im Rahmen dieses Projekts als Lernbegleiter undkümmern sich um den Kontakt mit den Projektpartnern sowie die interne Kommunikationund Organisation.4 Erfahrungen der ersten KursdurchführungDer Projektkurs ﬁndet dreistündig mit 2 Schülerinnen und 17 Schülern der Jgst. 12, die alleInformatik belegt haben und daher über grundlegende Kenntnisse von Java verfügen, ineiner Laborumgebung statt (insg. 24 Wo.). Die verwendete Programmiersprache Pythonsowie Jupyter Notebook waren für sie neu – der Einstieg war aber mit etwas Unterstützunggut zu bewältigen. Durch die Größe der Gruppe können die im Folgenden präsentiertenErkenntnisse nicht generalisiert werden, zeigen jedoch erste Hinweise, ob der Kurs an sichauch für andere Gruppen umsetzbar ist.4.1 Erkenntnisse aus Modul 1: Daten und Informationen – DatendetektiveDas erste Modul dient zur Vermittlung von Kompetenzen zu statistischen Exploration, Verar-beitung und Darstellung von Daten (vgl. Abschnitt3.1). Die Modulabschlusspräsentationender Schülerinnen und Schüler zur statistischen Untersuchung von eigenen Fragestellungenanhand des JIM-Datensatzes zeigen ebenso wie verschiedene Diskussionsrunden, dass esihnen gelungen ist, ein kritisches Verständnis zu Daten, Information und ihrer Visualisierungzu entwickeln. So wurde beispielsweise in den Präsentationen häuﬁg die Größe des verwen-deten JIM-Datensatzes kritisch gewürdigt und die damit verbundene geringe Aussagekraftder sich ergebenden kleinen Teilmengen eingeordnet. Im Rahmen der Feedbackrunde amEnde des Moduls wurde berichtetet, dass einerseits die Auswertung der Lärmdaten mitPython spannender als das Arbeiten mit dem JIM-Datensatz angesehen wurde, aber beideBausteine wurden von den Lernenden nicht als besonders persönlich relevant befunden.Daher ist zu überlegen, wie im nächsten Durchlauf die subjektiv empfundene Relevanz unddamit Motivation noch erhöht werden können.Eine Unterrichtssequenz zum Maschinellen Lernen als Aspekt von Data Science 2918 Simone Opel, Michael Schlichtig, Carsten Schulte4.2 Erkenntnisse aus Modul 2: Künstliche Intelligenz und Maschinelles LernenIn Modul 2 liegt der Schwerpunkt auf der Vermittlung der Grundideen von ML und KI sowiedem Erwerb der Kompetenz zum eigenständigen Programmierung von KI-Modellen (vgl.Abschnitt3.2). Die beiden Unplugged-Einheiten haben sich als guter thematischer Einstiegin den jeweiligen Baustein erwiesen und waren für die Lernenden hilfreich zur Bildungeines ersten Verständnisses des Themenbereichs. Das Feedback zeigt, dass das angemesseneschrittweise Anheben des Schwierigkeitsniveaus bei dem komplexen Themenfeld von MLund KI eine Herausforderung darstellt: Während der „Sweet Learning Computer“durchwegpositiv bewertet wurde, wurden die darauf folgenden Beispiele zum manuellen Erstellen vonEntscheidungsbäumen mittels CODAP teils als monoton und wenig motivierend empfunden.Für die Erarbeitung der algorithmischen Darstellung von Entscheidungsbäumen wirdder Begri  der Entropie nach Shannon benötigt. Die hierfür gestaltete Selbstlerneinhaltmit den zugehörigen Aspekten der Informationstheorie in Jupyter Notebook hat sichals zu schwierig selbst für diese sehr leistungsstarke Lerngruppe erwiesen, so dass diesstattdessen gemeinsam im Plenum erarbeitet wurde. Beim Feedback zu diesem Bausteinbemängelten die Schülerinnen und Schüler, dass – ebenso wie in Modul 1 – in diesemBaustein aus didaktischen Gründen nur kleine Datensätze mit nur begrenzter Aussagekraftzum Einsatz kamen. Die den zweiten Baustein erö nende Unplugged-Einheit „Brain in aBag“ sowie die im ersten Baustein erarbeitete Darstellung (vgl. Abb.3) zum datengetriebenenProblemlösen ermöglichte den Lernenden bereits eine sachlich fundierte Diskussion zurgesellschaftlichen Bedeutung der Verwendung von KI-Systemen, in der Probleme wieVorurteile in Trainingsdaten („Diskriminierende Algorithmen“) divers betrachtet unddiskutiert wurden. Im weiteren Verlauf des Moduls erarbeiteten sich die Schülerinnen undSchüler das eigene Erstellen, Trainieren und Validieren von KNN unter Verwendung vonPython und Jupyter Notebook mit dem MNIST-Datensatz zur Zi ernerkennung. Dass esden Schülerinnen und Schülern damit gelang, ein grundlegendes Verständnis zu ML und KIsowie der Programmierung eines passendes Netzes zu entwickeln, zeigte sich auch in derModulabschlusspräsentation, in der sie für den schon bekannten JIM-Datensatz Modellezur Vorhersage des Geschlechts der Studienteilnehmer implementierten und optimierten.Sie haben damit wichtige Kompetenzen entwickelt, die im anschließenden Projektmodul(vgl. Abschnitt3.3) gefestigt und weiterentwickelt wurden.4.3 Erkenntnisse aus Modul 3: DatenprojektIm Rahmen einer Kooperation mit zwei lokalen Unternehmen (RTB, Bad Lippspringesowie ASP, Paderborn10) erhielten die Schülerinnen und Schüler den Auftrag, aus Datendes örtlichen Parkleitsystems sowie aus den Bezahlsystemen eines Parkplatzes (Parkschein-automat) und eines Parkhauses Vorhersagemodelle für die jeweilige Auslastung zu einemzukünftigen Zeitpunkt zu entwickeln. Da sich die Daten von Parkhäusern und Parkplätzen10https://www.rtb-bl.deundhttps://www.paderborn.de/microsite/asp/292 Simone Opel et al.Entwicklung einer Unterrichtssequenz zum Maschinellen Lernen 9grundlegend unterscheiden, wurde die Aufgabe in zwei parallel bearbeitete Projekte aufge-teilt. Alle Daten lagen entweder als unbearbeitete Text-Dateien vor oder wurden direkt auseiner Datenschnittstelle entnommen. Die Schülerinnen und Schüler benötigten die erstenWochen, um – folgend dem CRISP-DM-Prozess – die großen Datenmengen zu sichten, zuverstehen und aufzuarbeiten. Dazu wurden von den Gruppen Jupyter Notebooks entwickelt,die sie anschließend um die gewünschten Lerner zu erweiterten, wobei es den Gruppenfreigestellt war, ob sie zur Modellierung Entscheidungsbäume oder KNN verwenden. Diegrößte Herausforderung stellte hier nicht die Implementierung der ML-Algorithmen dar,sondern die strategisch günstige Vorbereitung der Daten und die optimale Auswahl derKonﬁguration des Lerners. Bei der Abschlusspräsentation konnten beide Gruppen abernicht nur funktionierende Vorhersagemodelle einschließlich einer sinnvollen Web-GUI fürihre jeweiligen Parkmöglichkeiten an die Projektpartner übergeben, sondern überzeugtenauch in der abschließenden Diskussion mit ihrem grundlegendes Verständnis nicht nur überfachliche Problemstellungen, sondern auch durch ihre Fähigkeit, die hierzu gehörendengesellschaftlichen Fragen fundiert erörtern können.5 Ausblick und FazitIm Rahmens dieses Artikels beschreiben wir die Entwicklung eines Data Science-Kurses,der in der Sek II als Projektkurs unterrichtet werden kann. Nicht jede Lehrkraft, diegerne dieses Thema in den Unterricht einbinden möchte, hat diese Zeitressource. Daherplanen wir, die Module auf Basis unserer bisherigen Erfahrungen weiterzuentwickeln,so dass es möglich wird, nur ausgewählte Teile durchzuführen. Im Moment werden dieErkenntnisse der aktuellen Durchführung sowie der Erprobungen einzelner Komponentenin die Kursmaterialien eingearbeitet. Im Anschluss daran werden die Materialien interes-sierten Lehrkräften unterschiedlicher Schularten zur Erprobung und Weiterentwicklungzur Verfügung gestellt. Zur Weiterentwicklung des Gesamtkurses im Sinne des DBRwird dieser im nächsten Schuljahr mit der bisherigen Partnerschule in modiﬁzierter Formdurchgeführt. Da die Schülerinnen und Schüler einerseits das durch die Modulstrukturbedingte „Vorratslernen“ bemängelten und andererseits an einigen Stellen Schwierigkeitenhatten, die erlernten Inhalte zielgerichtet auf die Projektfragestellungen anzuwenden, istgeplant, die Theoriephasen so mit der Arbeit an einem Datenprojekt zu verzahnen, dass dietheoretischen Inhalte gezielt während des Projektablaufs eingebaut werden. Zudem werdendie in den verschiedenen Modulen enthaltenen gesellschaftlichen, sozialen und ethischenFragestellungen nochmals gebündelt in einem zusätzlichen Modul diskutiert und bearbeitet,um die Schülerinnen und Schüler noch tiefer mit den darin enthaltenen Fragestellungenvertraut zu machen. Dies alles erfordert noch einiges an konzeptioneller Arbeit, die sichjedoch durch einen höheren Kompetenzgewinn seitens der Lernenden bemerkbar machenwird. Zusammengefasst sind wir trotz aller noch zu leistenden Entwicklungsarbeit überzeugt,durch den vorgestelltenData Science-Kurseinen großen Schritt hin zu einem umfassendenCurriculum für diesen sehr komplexen Bereich getan zu haben, so dass wir gespannt auf dienächsten Durchführungen des Kurses und seiner Module sind.Eine Unterrichtssequenz zum Maschinellen Lernen als Aspekt von Data Science 29310 Simone Opel, Michael Schlichtig, Carsten SchulteLiteraturverzeichnis[Ch00]Chapman, P.; Clinton, J.; Kerber, R.; Khabaza, T.; Reinartz, T.; Shearer, C.; Wirth, R.:Cross Industry Standard Process for Data Mining 1.0, Step-by-step Data Mining Guide.2000.[CM97]Cobb, George W.; Moore, David S.: Mathematics, statistics, and teaching. The AmericanMathematical Monthly, 104(9):801–823, 1997.[Co03]Cobb, Paul; Confrey, Jere; diSessa, Andrea; Lehrer, Richard; Schauble, Leona: DesignExperiments in Educational Research. Educational Researcher, 32(1):9–13, 2003.[Cu16a]Curzon, Paul: , Brain in a Bag, A CS4FN Computing Activity.https://www.youtube.com/watch?v=lux_ybamClU, 2016. Accessed: 2018-06-15.[Cu16b]Curzon, Paul: , The Sweet Learning Computer, A CS4FN Computing Activity.www.cs4fn.org/machinelearning, 2016. Accessed: 2019-02-10.[GR]Grillenberger, Andreas; Romeike, Ralf: In: Proceedings of the 17th Koli Calling Conferenceon Computing Education Research. New York.[LCB98]LeCun, Yann; Cortes, Corinna; Burges, Christopher J.C.: , MNIST handwritten digitdatabase.http://yann.lecun.com/exdb/mnist/, 1998. Accessed: 2018-06-15.[Pa18]Paderborn Symposium on Data Science Education at School Level 2017: The CollectedExtended Abstracts, 2018.[Ri15]Ridsdale, Chantel; Rothwell, James; Smit, Michael; Ali-Hassan, Hossam; Bliemel, Michael;Irvine, Dean; Kelley, Daniel; Matwin, Stan; Wuetherick, Bradley: Strategies and bestpractices for data literacy education: knowledge synthesis report. 2015.[Ri16]Ridgway, Jim: Implications of the Data Revolution for Statistics Education. InternationalStatistical Review, 84(3):528–549, 2016.[Rö16]Röhner, Gerhard; Brinda, Torsten; Denke, Volker; Hellmig, Lutz; Heußer, Theo; Pas-ternak, Arno; Schwill, Andreas; Sei ert, Monika: Bildungsstandards Informatik für dieSekundarstufe II. Beilage zu LOG IN, Heft, (183/184), 2016.[SBS18]Sentance, Sue; Barendsen, Erik; Schulte, Carsten: Computer Science Educ.: Perspectiveson Teaching + Learning in School. Bloomsbury Academic, London, 3 2018.[TD16]Tedre, Matti; Denning, Peter J.: The Long Quest for Computational Thinking. In: Procee-dings of the 16th Koli Calling International Conference on Computing Education Research.Koli Calling ’16, ACM, New York, NY, USA, S. 120–129, 2016.[Tv09]Thijs, Annette; van den Akker, Jan: Curriculum in development. SLO - NetherlandsInstitute for curriculum development, 2009.294 Simone Opel et al.cbaA. Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Blöcke, Blumen, Mikrocontroller und das Internet of ThingsEin Konzept zum kontextorientierten Einsatz von Parametric Design und PhysicalComputing in Mädchen-FörderworkshopsNils Pancratz1, Anatolij Fandrich1, Christos Chytas1, Mareike Daeglau1, Ira Diethelm1Abstract:Die Art und Weise, mit der Informatik über die letzten Jahrzehnte von der Industrie, denMedien und teils sogar (ö entlichen) Bildungseinrichtungen vermarktet wurde, führte in westlichenKulturen zu einer deutlichen Geschlechterkluft in informatischen Berufen wie auch Studiengängen.Studien zu diesem aus diversen Gründen anzugehenden Missstand lieferten in den letzten Jahren gehäuftBelege dafür, dass sich Mädchen und junge Frauen eher für Informatik begeistern lassen, wenn ihnendiese faszinierende Wissenschaft in Kreativität, Kollaboration und Kommunikation fordernden undfördernden Kontexten präsentiert wird. So führten diese Erkenntnisse zuletzt vermehrt zu Bemühungen,Mädchen über spezielle außerschulische Workshopformate anzusprechen. Um in solchen FormatenProgrammieranfängerinnen und -anfängern zugleich grundlegende Programmierkenntnisse (bspw.über Schleifen, Variablen, Verzweigungen und Methodenaufrufe) zu vermitteln und trotzdem schnellmotivierende Ergebnisse zu erzielen, wird zuletzt vermehrt auf das Konzept desComputationalDesignzurückgegri en. Dies ermöglicht über die Idee derDigital Fabricationebenso wie das inaußerschulischen Workshops bereits etabliertePhysical Computing, Informatik im wahrsten Sinne desWortes begreifbar zu machen. Dieser Praxisbeitrag stellt ein Workshopkonzept vor, in dem über denKontext desInternet of Thingsdie Ideen hinterParametric DesignundPhysical Computingmiteinanderkombiniert werden – und dabei beide Geschlechter gleichermaßen ansprechen kann und soll! DasZiel ist, am Ende des Workshops, der bereits mehrmals erfolgreich sowohl in außerschulischen wieauch schulischen Formaten durchgeführt wurde, eine selbstgestaltete Lampe – bspw. in Blumenform– fabriziert zu haben, die in Abhängigkeit der über das Internet bezogenen Wetterdaten in eigenskreierten Lichte ekten strahlt.Keywords:Gendersensitive Informatikdidaktik; Parametric Design; Physical Computing; Internet ofThings; Informatik im Kontext1 Einleitung„Informatik für alle“ – bei einem Blick auf aktuelle Statistiken zu Studierendenzahlen wirktder Titel dieses Tagungsbandes nahezu utopisch und unerreichbar: Schließlich war derohnehin schon beklagenswert niedrige Frauen-Anteil unter denjenigen, die sich deutsch-landweit für eine Neueinschreibung in einen Informatikstudiengang entschieden haben,zuletzt wieder rückläuﬁg und lag zu Beginn des Wintersemesters 2018/2019 bei nur1Carl von Ossietzky Universität Oldenburg, Didaktik der Informatik, Uhlhornsweg 84, 26129 Oldenburg,vorname.nachname@uni-oldenburg.decba doi:10.18420/infos2019-30Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 2952 Nils Pancratz et al.22,5%2. Die wenigen Frauen, die sich für ein Informatikstudium entscheiden, wählendabei häuﬁg „Bindestrich-Studiengänge“ wie bspw. Bioinformatik, Medizinische Informatikoder auch Medieninformatik [Kl16], was als Indiz dafür gelten könnte, dass ein stärkererKontextbezug (vgl. Abs.2.2) besonders förderlich für das Interesse und die Begeiste-rung von Mädchen und jungen Frauen an der Informatik ist. Auch bei den geschlossenenAusbildungsverträgen liegt der Frauenanteil je nach Ausbildungsberuf aktuell nur zwi-schen knapp 5% (Fachinformatiker/-in Systemintegration) und 15% (Informatikkauﬂeute)3.Abb. 1: Die Teilnehmerin einesdieser Workshops beim Zusam-menstecken der Komponentenihrer eigenständig gestalteten in-ternetfähigen Lampe.Der Nährboden für diese Geschlechterkluft ist zweifelsfreibereits in der Schulinformatik zu suchen: In den zahlreichenBundesländern, in denen Informatik ein Schattendasein alsWahlpﬂichtfach fristet, entscheiden sich erfahrungsgemäßnur wenige Mädchen, es zu belegen; in den Ländern mit ver-pﬂichtendem Informatikunterricht (IU) hingegen sind es imVergleich zu ihren Geschlechtergenossen überproportionalviele junge Frauen, die sich im Laufe ihrer Schulzeit gegeneine weitere Belegung entscheiden. So ruft diese o ensicht-liche Geschlechterkluft seit Jahren zahlreiche Studien zumöglichen Ursachen (vgl. Abs.2.1) auf die Programme(inter-)nationaler Informatikdidaktik-Tagungen. Der vorherr-schende Fachkräfte-Mangel im IT-Sektor ist hierzu sicherlichgenauso als Ansporn zu begreifen wie der Anspruch,allenSchülerinnen und Schülern (SuS) die Vielfalt informatischerBildung zu bieten. Da nicht nur im schulischen Informatikun-terricht, sondern auch in entsprechenden außerschulischenLernangeboten vorwiegend Jungen und junge Männer anzu-tre en sind, wird zuletzt vermehrt auf außerschulische Formate gesetzt, die gezielt Mädchenansprechen und ihnen so die klischeebehaftete Informatik aus einer anderen Perspektiveaufzeigen sollen, um langfristig mehr Schülerinnen an die faszinierende Wissenschaft der In-formatik heranzuführen. In diese Angebote reiht sich auch dieser Workshop ein, wenngleichdie von den Autorinnen und Autoren dieses Beitrags umgesetzten Ideen ihrer Ansicht nachausdrücklich für beide Geschlechter gleichermaßen förderlich sind. So berücksichtigt das indiesem Praxisbeitrag vorgestellte Workshopkonzept gezielt grundlegende Ansprüche aneine gendersensitive Informatikdidaktik (Abs.2.1) und bedient sich innerhalb des KontextesdesInternet of Things(Abs.2.2) den Ideen hinterDigital Fabrication(Abs.2.3) undPhysical Computing(Abs.2.4). Am Ende des (in Abs.3beschriebenen) Workshopablaufssteht dabei eine internetfähige, selbstgestaltete und mithilfe von 3D-Druckern konstruierteLampe (Abb.1), die in Abhängigkeit der jeweiligen Wetterlage, die von dem verwendetenMikrocontroller über einen Webservice abgerufen wird (Abs.3), in unterschiedlichenLichte ekten leuchtet.2Quelle:Statistisches Bundesamt: „Bildung und Kultur (2018): Schnellmeldungsergebnisse der Hochschulstatistikzu Studierenden und Studienanfänger/-innen (vorläuﬁge Ergebnisse) - Wintersemester 2018/2019“3Quelle:Deutscher Industrie- und Handelskammertag (2017): „Statistik Ausbildung 2017“296 Nils Pancratz et al.Blöcke, Blumen, Mikrocontroller und das Internet of Things 32 Didaktische Relevanz des WorkshopkonzeptsIm Folgenden sollen die didaktischen Überlegungen, die bei der Konzeption dieses Work-shops (WS) zum Tragen kamen, von den grundlegenden Aspekten gendersensitiver Informa-tikdidaktik (Abs.2.14) und Kontextorientierung (Abs.2.2) über die gewählten ParadigmendesParametric Design(Abs.2.3) undPhysical Computing(Abs.2.4) dargelegt werden.2.1 Aspekte gendersensitiver InformatikdidaktikAuf der Suche nach Ursachen für die unverkennbare Geschlechterkluft in der Informatik (vgl.Abs.1) begnügen sich nur wenige Studien mit der platten Erkenntnis, dass Mädchen und jungeFrauen schlichtweg weniger Interesse an entsprechenden Themen hätten [An08,SM11].Tiefgreifendere Untersuchungen hingegen kommen zu dem Ergebnis, dass sie die Informatikals attraktiveres Umfeld betrachten, sobald•die behandelten Technologien insoziale Kontexteeingebettet sind, in denen sie selbstinvolviert sind bzw. sich selbst wiedersehen können [FMM97],•Informationstechnologien verwendet werden, umMenschenin ihrenalltäglichenSituationenzu unterstützen [ZS08],•sie zu einemübergeordneten Zieleingesetzt wird [FM02] und•Informatik alskreativer[DKW14] undkollaborativer[ZS08,Eg16,MNS08] Prozessaufgezeigt wird, in dem den Mädchen die Möglichkeit gegeben wird,sich miteinanderauszutauschenundzusammenzuarbeiten[ZS08].Sowohlschulischeals auchaußerschulischeLernumgebungen bieten ausreichend Spielraum,diesen „besonderen“ Anforderungen an eine gendersensitive Informatikdidaktik gerecht zuwerden und so situatives Interesse zu wecken, das sich bestenfalls zu langfristig anhaltenderMotivation entwickeln kann [Ma17]. Vor allem letztere bieten die Möglichkeit, den zahlrei-chen vorherrschenden Klischees und Stereotypen, die noch immer über den Berufsalltag vonInformatikern5existieren, entgegenzuwirken. Doch dazu sollten sich diese Angebote explixitund ausschließlich an Mädchen und junge Frauen richten, denn außerschulische Angeboterund um die Informatik werden ansonsten leider immer noch grundsätzlich von Jungenwahrgenommen [SM11,Wi16]. So richtet sich auch das BMBF-geförderte Projektsmile(https://www.smile-smart-it.de), im Rahmen dessen dieses WS-Konzept entwickeltund durchgeführt wurde und wird, über ein Angebot an (außerschulischen) WS explixitan Mädchen und junge Frauen, um das übergeordnete Ziel zu verfolgen, langfristig undnachhaltig den Anteil an Frauen in informatischen Studiengängen und Berufen zu erhöhen.4Ausschnitte aus diesem Abs.2.1wurden bereits in [PD18] verö entlicht.5Hier wird bewusst nur die männliche Form verwendet. Schließlich ist das Bild eines typischen Informatikersmännlich, unattraktiv und sozial wenig kompetent [Ch13].Blöcke, Blumen, Mikrocontroller und das Internet of Things 2974 Nils Pancratz et al.2.2 Informatik im Kontext und das „Internet of Things“ImInternet of Things (IoT)unterstützen immer kleiner werdende Computer, die in immermehr alltägliche Gegenstände wie Lampen, Kühlschränke, Rasierapparate, Staubsaugeroder Autos eingebettet werden, den Menschen in unterschiedlichsten Situationen. Um genaudiese „Bewältigung lebensweltlicher Herausforderungen in Verbindung mit Informatiksys-temen“ [DKW11, 97] geht es in dem KonzeptInformatik im Kontext (IniK)zur Planung,Durchführung und Auswertung von IU, in dem über eine Ausrichtung an der Lebensweltder SuS eine zusätzliche Motivation verfolgt wird. Das IoT erfüllt zweifelsohne die von[DKW11] gestellten Anforderungen an einen guten Kontext im Sinne einer IniK-Reihe. Sobewegen sich die Schülerinnen in dem in diesem Beitrag vorgestellten WS im Rahmendieses Kontextes – wenn auch nicht stringent in den einzelnen Phasen, für die [DKW11]plädieren. Sie begreifen die Technologien, an die sie herangeführt werden, so im Sinneeiner Gendersensitivität (vgl. Abs.2.1) in soziale, lebensweltliche Kontexte eingebettet.2.3 Parametric DesignComputational Design (CD)ist ein Prozess, der Merkmale der Programmierung zur Er-zeugung und Modiﬁkation von 2D- und 3D-Visualisierungen beinhaltet. Ein typischesKonstruktionsparadigma im Sinne von CD istParametric Design(PD), das oft mit derArchitektur und der Verwendung von Parametern zur Steuerung der Eigenschaften von 2D-oder 3D-Modellen zusammenhängt. Obwohl es einen anhaltenden Trend zum Einsatz vonDigital Fabrication (DF)und insbesondere 3D-Druck in Bildungskontexten gibt, ist ihrPotenzial für den Anfangsprogrammierunterricht für viele Lehrerinnen und Lehrer immernoch etwas Neues. Schließlich lassen sich sowohl schulische als auch außerschulischeprogrammierlastige Lernaktivitäten über CD und DF auﬂockern und so Lernprozesse überdas Herstellen von eigens kreierten Artefakten unterstützen [CDT18]. Zusätzlich schärft dieVerbindung der Gestaltung von 2D- und 3D-Formen mit grundlegenden Programmierkon-zepten wie Schleifen, (konditionalen) Verzweigungen und Methodenaufrufen FähigkeitendesComputational Thinkingwie Zerlegung und Mustererkennung [CTD19] . ParametrischeEntwurfswerkzeuge gehen also deutlich über die Möglichkeiten von nicht programmierbarenCAD-Werkzeugen hinaus und ermöglichen die Erstellung komplexer Formen und Geometri-en wie Fraktale oder Bäume mit Zweigen, die rekursive oder repetitive Elemente beinhaltenkönnen [CDT18]. CD ﬁndet vereinzelt bereits Einsatz in Lernaktivitäten: So konzentrierensich bspw. [DKW14] und [JB13] auf die Verwendung der ProgrammierspracheProcessingzur Erzeugung von 2D-Formen, die mit Lasercuttern hergestellt werden können, und ihreAuswirkungen; in dem Ansatz von [KKR17] werdenTurtle Graphicserzeugt und mithilfevon 3D-Druckern als motivierende Unterstützung genutzt. Der Einsatz von PD-Tools wieBlocksCAD(vgl. Abs.3) ist bislang jedoch noch deutlich seltener. So darf und soll dieserPraxisbeitrag auch als Plädoyer für einen verstärkten Einsatz von PD verstanden werden.298 Nils Pancratz et al.Blöcke, Blumen, Mikrocontroller und das Internet of Things 52.4 Physical ComputingEingebettete Systeme bieten durch das Zusammenspiel von Hardware- und Softwaresystemenund den damit verbundenen Möglichkeiten zur Interaktion zwischen Mensch und Maschineeine Vielzahl von Chancen, Informatik in einem praktischen Kontext zu vermitteln.PhysicalComputing (PC)beschreibt dabei den Prozess, ein solches System zu erscha en. Nebenden bekannten, positiven E ekten der Kontextualisierung und dem Einsatz von Fallstudienin Ingenieurwissenschaften [YAM19], wirkt sich auch die Entwicklung solcher physischerSysteme positiv auf Lerngruppen aus. Sentence et al. fassen diese E ekte folgendermaßenzusammen: Die Motivation steigt, da die Lernergebnisse nicht virtuell existieren, sondernin Form eines praktischen Produktes sichtbar werden. Zudem hilft die Greifbarkeit dieserSysteme den Lerngruppen beim Debuggen und Optimieren, Programmierkonzepte besserzu verstehen. Die Arbeit lässt sich außerdem sinnvoll auf mehrere Personen aufteilen, z. B.kümmert sich eine Person um Schnittstellen und Algorithmen, während eine andere einGehäuse zum 3D-Druck modelliert. So wird das Arbeiten im Team geschult. Zudem bietetdas PC die Möglichkeit, sich kreativ zu entfalten [Se17]. Speziell Mädchen proﬁtieren vondem Einsatz solcher Systeme im schulischen Kontext. So gaben Mädchen, die sich mit PCbeschäftigt haben, an, dass sie Spaß am Programmieren gefunden haben und sich außerdemselbstbewusster fühlen [Se17].3 Workshoptools und -ablaufUm eine günstige IoT-Anwendung zu entwickeln, wurde das EntwicklungsboardD1 minivom HerstellerWEMOS Electronicsgewählt. Dieses basiert auf den 32-Bit MikrocontrollerESP8266EXvonEspressifund zeichnet sich unter anderem durch die native Unterstützungder 801.11 b/g/n Funknetzwerkstandards und der Netzwerkprotokolle TCP, UDP und HTTPaus. Darüber hinaus bietet der Hersteller zahlreiche pin-kompatible Erweiterungen fürdie Boards der D1-Reihe an, welche unkompliziert auf das Entwicklungsboard gestecktwerden können. Dadurch entfallen potentielle Fehlerquellen beim Anschließen neuerSensoren bzw. Aktoren durch Wackelkontakte oder fehlerhafte Verkabelungen. Um dieüber das Internet gewonnene (s. u.) Außentemperatur auch optisch anzuzeigen, wurdeein 0.66 Zoll großes OLED-Display mit einer Auﬂösung von 64x48 Pixel, ebenfallsvom Hersteller WEMOS, verwendet. Nachdem man zwei Reihen von Stiftleisten an dieOLED-Display Erweiterung gelötet hat, kann man dieses auf das Entwicklungsboardstecken. Zusätzlich wurde zur visuellen Darstellung des aktuellen Wetters eine WS2812BRGB-LED verwendet. Der Vorteil gegenüber konventionellen RGB-LEDs, welche dreiKathoden bzw. Anoden zur Darstellung der verschiedenen Farben benötigen, ist dieﬂexible Programmierbarkeit. Während zur Darstellung der Farben an drei Pins verschiedeneSpannungspegel mittels PWM gesetzt werden müssten, kann die WS2812B LED die Farbenmit Hilfe der Arduino kompatiblen FastLED Bibliothek über eine einzige Datenleitungund in verschiedenen Farbräumen darstellen. Dies erleichtert auch die Erstellung voneigenen Animationen deutlich. Um die LED mit dem Entwicklungsboard zu verbinden,Blöcke, Blumen, Mikrocontroller und das Internet of Things 2996 Nils Pancratz et al.wurde ein Steckbrett verwendet. Die aktuellen Wetterdaten werden über die kostenfreieOpenweathermap(https://openweathermap.org/) API aus dem Internet bezogen. MitHilfe der HTTP-Methode GET wird das Wetter für den entsprechenden Standort angefragtund die Antwort des Servers vom Mikrocontroller empfangen, geparst und anschließendmit einer vorher festgelegten Farbe oder Animation dargestellt. Ein Plexiglasstab, welchermittels einer Halterung aus einem 3D-Drucker unmittelbar über der LED befestigt ist,leitet das Licht in eine von den Teilnehmerinnen selbst modellierten Blume (siehe Abb.1),welche ebenfalls mit einem 3D-Drucker gefertigt wurde. In beiden Fällen wurde PLAals Druckmaterial verwendet. Die Firmware für den Mikrocontroller wurde innerhalb derArduinoIDE(https://www.arduino.cc/en/main/software) geschrieben. Zusätzlich habendie Workshopteilnehmerinnen ihre Animationen mit dem blockbasierten WerkzeugmBlock3(http://www.mblock.cc/mblock-software/) erstellt. Die darin verwendeten Blöcke wurdeneigens für den Workshop entwickelt und zur Verfügung gestellt. Die Modellierung derBlumen erfolgte parametrisch mit dem ToolBlocksCAD(https://www.blockscad3d.com/),welches spielerisch Programmierkonzepte durch die Visualisierung von Formen vermittelt.Erfahrung der SchülerInnen /Grad der AnleitungTeil 3: Basteln und PräsentierenTeil 2: Physical ComputingTeil 1:Parametrisches DesigngeringhochWorkshop-dauerkurz6 h6 h9 h15 hlang6 h6 hAbb. 2: Überblick über das zeitliche Verhältnisder einzelnen WS-AbschnitteDerAblaufdes in diesem Praxisbeitrag vor-gestellten WS6,7gliedert sich in drei Teile:An den Programmiereinstieg über PD (Teil 1)schließt sich die Phase zum PC (Teil 2) an, be-vor die einzelnen Komponenten abschließendzur fertigen Blume zusammengesteckt werdenund eine Präsentation ihres Entstehungsprozessvorbereitet wird (Teil 3). In Abhängigkeit derVorerfahrung der SuS bzw. des gewünschtenGrads an Anleitung lässt sich die Gestaltungder Teile 1 und 2 bzgl. der einzuplanenden Zeitanpassen (vgl. Abb.2), sodass sich der WSinsgesamt auf 18 bis 30 (Zeit-)Stunden beläuft und so sowohl für den außerschulischen(bspw. für die Durchführung in einwöchigen WS oder Projektwochen) als auch schulischen(bspw. als Unterrichtsreihe zum Programmier-Anfangsunterricht) Einsatz eignet.Imersten Teildes WS lernen die Teilnehmenden nach einer Einführung in die Oberﬂächedes verwendeten ToolsBlocksCAD(vgl. Abs.3), wie man grundlegende geometrischeFormen (Würfel, Kugeln und Zylinder) überParameteroder ein Anwenden vonOperationenwie bspw. Skalierungen anpassen kann. Im Anschluss daran begreifen sie, dass sich dieseGrundkörper durchMengenoperationenwie bspw. Vereinigungen oder Di erenzen zunahezu jeder vorstellbaren Gestalt formen lassen. Über eine Verkettung mehrerer solcherOperationen wird dann mit einem Arbeitsblatt dazu angeleitet, die Grundform eines6(Stunden-)Verlaufspläne, Arbeitsblätter, verwendete Libraries und Code-Beispiele ﬁnden sich im Git-Repositorydes Projekts (https://github.com/projekt-smile/bloecke-blumen-mikrocontroller-und-das-internet-of-things) oder über den Download-Bereich der Projekt-Webseite (https://www.smile-smart-it.de).7Dieser WS wurde als Anschluss an den in [PD18] beschriebenen Einstieg in Sensorik und Aktorik mithilfe vonlittleBitskonzipiert und auch mehrmals im Anschluss daran durchgeführt.300 Nils Pancratz et al.Blöcke, Blumen, Mikrocontroller und das Internet of Things 7Blattes zu modellieren sowie den entstehendenCodeüber die Deklaration einerMethodeauszulagern und so an mehreren Stellen desProgrammsaufrufbar zu machen (vgl. Abb.3,links). Anschließend lernen die SuS das Prinzip hinterSchleifenkennen und können sobspw. Blüten statt über repetitive Methodenaufrufe durch Verwendung eines einzigenzusätzlichen Blocks aus den zuvor modellierten Blättern kreieren (vgl. Abb.3,rechts). Überdie zusätzliche Ergänzung einerVerzweigung(falls i ist gerade)lässt sich optionalan dieser Stelle ein weiteres Programmierkonzept einführen und so bspw. jedes zweiteBlatt in der Reihe länglicher gestalten. Um die Blume 3D-druckbar zu gestalten, musssie nach einer individuellen Anpassung (optional nach einer Online-Recherche) durch dieS(uS) mit Hilfe der Di erenz-Funktion von unten abgeﬂacht werden. Außerdem sollte eineKnospe, die von einem Zylinder ausgepart ist und in die sich so später ein Acrylglasstabstecken lässt (vgl. Abb.1), ergänzt werden. Nach dieser (verhältnismäßig) angeleitetenEinstiegsphase lässt sich optionalerweise der Arbeitsauftrag geben, weitere parametrischeDesigns zu recherchieren und mitBlocksCADzu modellieren, um sie anschließend fürdie personalisierten Lampen zu verwenden. Für den gesamten Prozess des Gestaltens derBlume bzw. einer anderen beliebigen Form empfehlen die Autorinnen und Autoren diesesBeitrags dabei einen zeitlichen Rahmen von 6 bis 9 Zeitstunden (s. o.). Selbstverständlichlässt sich dieser Teil des WS dabei auch isoliert von dem restlichen WS durchführen und soein kreativer Einstieg in die Vermittlung von Programmiergrundlagen ﬁnden.Abb. 3: Methode (links unten) zur Modellierung eines Blattes (links oben) und Methode (rechts oben)zur Modellierung einer Blüte (rechts unten) über die Verwendung einer Schleife inBlocksCADDerzweite Teildes WS behandelt die Programmierung des Mikrocontrollers. Dazuerschließen sich die Teilnehmenden nach einem Einstieg in die verwendete blockbasierteProgrammierumgebungmBlock(vgl. Abs.3) zunächst aus den ihnen ausBlocksCADbekannten Schleifen die Bedeutung derloop-Funktion in Programmen, indem sie dieonboard LED des verwendeten Mikrocontrollers (vgl. Abs.3) über diedelay-Funktion ineinem beliebigen Intervall zum Blinken bringen. Der Bogen zum textuellen Programmierenwird kontinuierlich dadurch gezogen, dassmBlockden blockbasiert einzugebenden CodeBlöcke, Blumen, Mikrocontroller und das Internet of Things 3018 Nils Pancratz et al.on the ﬂy als textuelle Beschreibung in Arduino-Code bereitstellt. Das Anschließen undAnsteuern des OLED-Displays8(vgl. Abs.3) stellt den nächsten Abschnitt im WS dar:So sollen die S(uS) zunächst ihren Namen auf dem Display anzeigen lassen, bevor sie(optional) kleine Bitmap Graﬁken erstellen können, die in Hinblick auf das übergeordneteZiel, eine smarte Wetterlampe zu kreieren, verschiedene Wetterlagen (Sonne, Wolken,Schnee...) symbolisieren. Dieses übergeordnete Ziel ﬁndet sich auch im nächsten Abschnittzur Gestaltung von Lichte ekten (bspw. in Farbübergängen von Gelb- zu Rottönen fürsonnigoder Farbverläufe in Blautönen mit kurzen gelbenBlitzenbeiGewitter) wieder, in denen dieanzuschließende externe RGB-LED leuchten soll9. Dazu bietet es sich an, die Gruppe inZweier- oder Dreierteams aufzuteilen und jeder Gruppe einen E ekt zuzuordnen. So entstehtgleichzeitig der Nebene ekt, dass die S(uS) (Software-)Entwicklung als kollaborativenProzess (vgl. Abs.2.1und4) begreifen, indem alle etwas zum Endprodukt beitragen.Auch dieser zweite Teil des WS lässt sich zeitlich variieren: Die Autorinnen und Autorenveranschlagen je nach Vorerfahrung der Teilnehmenden, Grad der Anleitung und je nachdem,ob das OLED-Display behandelt wird oder nicht, für diesen Teil 6 bis 15 Zeitstunden.Während die vorangegangenen WS-Abschnitte hinsichtlich ihrer Länge relativ variabel sind,hat die Erfahrung gezeigt (vgl. Abs.4), dass derdritte Teil, in dem die Schülerinnen ihreErgebnisse präsentieren sollen, vergleichsweise konstant 6 Zeitstunden beansprucht. DiePräsentation sollte dabei den Anspruch erfüllen, multimedial (ob in Form eines VLOGs,eines kurzen „Werbe“-Videos o. Ä.) und ansprechend gestaltet zu sein. Projektseitig (vgl.Abs.2.1) wird über diesen Teil das Ziel verfolgt, die Artefakte der WS-Teilnehmerinnen aufVeranstaltungen und Social-Media-Kanälen adressatengerecht zu präsentieren, um so übereinen Multiplikatore ekt weitere WS-Teilnehmerinnen zu akquirieren.4Darstellung der Erfahrungen, Reﬂexion und mögliche AbweichungenWie bereits erwähnt, steht im Fokus dieses Workshops, die Zielgruppe junger Mädchen undFrauen für informatische Inhalte nicht nur temporär zu begeistern, sondern auch nachhaltigesInteresse zu festigen. Während der zweite Aspekt zu diesem Zeitpunkt noch nicht hinrei-chend beantwortet werden kann, soll abschließend eine erste Evaluation hinsichtlich dermotivierend gestalteten Inhalte und insbesondere deren ansprechender Vermittlung gegebenwerden. Ein Kernanliegen dieses Konzepts ist es, die Artefakte möglichst preisgünstig zurealisieren, damit die Teilnehmerinnen diese nach Ende des Workshops ohne Zuzahlung mitnach Hause nehmen können. Hintergrund dafür ist die Annahme, dass die Schülerinnen sichstärker mit ihren Projekten identiﬁzieren und somit das persönliche Engagement adressiertwird. Die Wetterblume soll hierbei einen kreativ gestalteten Alltagsgegenstand darstellen,der zudem noch den praktischen Anwendungsfall der Wettervorhersage miteinbezieht. Einweiterer E ekt der Artefaktbildung ist die Möglichkeit, informatische Inhalte eng an kreative8Um die Kosten der einzelnen Lampen zu reduzieren, lässt sich alternativ auch auf das Display verzichten.9mBlock-Libraries, die die Ansteuerung der in Abs.3beschriebenen Hardwarekomponenten ermöglichen und u. a.die E ektgestaltung stark vereinfachen, ﬁnden sich in dem Git-Repository des Projekts (s. Fußnote6).302 Nils Pancratz et al.Blöcke, Blumen, Mikrocontroller und das Internet of Things 9Prozesse zu binden und somit den Einstieg in diese zu erleichtern. Das blockbasierte DesignvonBlocksCADführt die Schülerinnen bereits an die spätere Programmierung heran unddie Funktionsweise der Blöcke wird direkt sichtbar im Editor. In einer früheren Version desWorkshopangebots wurde die Programmierung der Lichte ekte textuell mit derArduino IDErealisiert. Insbesondere bei jüngeren Schülerinnen stieß diese auf Ablehnung oder war nurschwer umsetzbar. Inspiriert von den deutlich kostenintensiveren, aber attraktiven SystemenwieCalliopeundmicrobitwurde folglich auf eine blockbasierte Form der ProgrammierungmitmBlockumgestiegen. Diese Art der Programmierung löste mehr Begeisterung ausund führte dazu, dass die Schülerinnen deutlich mehr von sich aus ausprobierten. Dieparallele Übersetzung der gesetzten Blöcke in textuelle Prorammiersprache und die Mög-lichkeit, diese direkt auf den Mikrocontroller hochzuladen, ermöglicht gleichzeitig eineBinnendi erenzierung in einer Gruppe mit heterogenen Informatikkenntnissen. Das späteregemeinsame Zusammenführen der individuell gestalteten Lichte ekte für die gewähltenWetterphänomene kennzeichnet einen zentralen Punkt für das Gemeinschaftsgefühl derGruppe; jede einzelne Schülerin trägt einen Teil zum späteren E ektrepertoire bei und istdoch unabhängig in ihren Entscheidungen. Zusammenfassend lässt sich schlussfolgern, dassdie beschriebenen Kriterien an ein gendersensitives Workshopkonzept von diesem Ansatzerfüllt werden. Ob diese Einordnung den gewünschten Motivationse ekt herbeiführenwird, bedarf weiterer Evaluation und Erprobung. In diesem Zusammenhang sei daraufverwiesen, dass der hier beschriebene Ansatz Spielraum für zahlreiche Variationen – sowohlfür eine Verwendung in außerschulischen als auch schulischen Kontexten – lässt: denkbarwäre die Anbindung anderer APIs wieInstagramanstatt deropenweathermapund andereparametrische Formen, wie bspw. Regenschirme, gestalten zu lassen.Abschließende Anmerkung:Dieser Workshop wurde im Rahmen des Projektssmile,das vom Bundesministerium für Bildung und Forschung unter den Förderkennzeichen01FP1611 bis 01FP1615 gefördert wird, konzipiert und mehrmals durchgeführt.Literaturverzeichnis[An08]Anderson, N.; Lankshear, C.; Timms, C.; Courtney, L.: ”Because it’s boring, irrelevantand I don’t like computers”: Why high school girls avoid professionally-oriented ICTsubjects. Computers & Education, 50(4):1304 – 1318, 2008.[CDT18]Chytas, C.; Diethelm, I.; Tsilingiris, A.: Learning programming through design: Ananalysis of parametric design projects in digital fabrication labs and an online makerspace.In: IEEE Global Engineering Education Conference (EDUCON). S. 1978–1987, 2018.[Ch13]Cheryan, S.; Plaut, V. C.; Handron, C.; Hudson, L.: The Stereotypical Computer Scientist:Gendered Media Representations as a Barrier to Inclusion for Women. Sex Roles,69(1):58–71, 2013.[CTD19]Chytas, C.; Tsilingiris, A.; Diethelm, I.: Exploring Computational Thinking Skills in 3DPrinting: A Data Analysis of an Online Makerspace. In: 2019 IEEE Global EngineeringEducation Conference (EDUCON). IEEE, S. 1173–1179, 2019.Blöcke, Blumen, Mikrocontroller und das Internet of Things 30310 Nils Pancratz et al.[DKW11]Diethelm, I.; Koubek, J.; Witten, H.: IniK — Informatik im Kontext. LOG IN, 31(1):97–104, 2011.[DKW14]Dittert, N.; Katterfeldt, E.; Wilske, S.: Programming Jewelry: Revealing Models behindDigital Fabrication. In: FabLearn Europe. June 2014.[Eg16]Eguchi, A.: RoboCupJunior for Promoting STEM Education, 21st Century Skills, and Tech-nological Advancement Through Robotics Competition. Robot. Auton. Syst., 75(PB):692–699, 2016.[FM02]Fisher, A.; Margolis, J.: Unlocking the Clubhouse: The Carnegie Mellon Experience.SIGCSE Bull., 34(2):79–83, 2002.[FMM97]Fisher, A.; Margolis, J.; Miller, F.: Undergraduate Women in Computer Science: Experience,Motivation and Culture. In: Proc. of the Twenty-eighth SIGCSE Technical Symposium onComputer Science Education. SIGCSE ’97, ACM, New York, S. 106–110, 1997.[JB13]Jacobs, J.; Buechley, L.: Codeable objects: computational design and digital fabricationfor novice programmers. In: Proceedings of the SIGCHI Conference on Human Factors inComputing Systems. ACM, S. 1589–1598, 2013.[KKR17]Krisch, O.; Kastl, P.; Romeike, R.: 3D-Druck als Motivation für die Einführung in dieProgrammierung in der Realschule. Informatische Bildung zum Verstehen und Gestaltender digitalen Welt, 2017.[Kl16]Klan, F.: Informatik – reine Männersache? LOG IN, 36(1):35–38, 2016.[Ma17]Master, A.; Cheryan, S.; Moscatelli, A.; Meltzo , A. N.: Programming experiencepromotes higher STEM motivation among ﬁrst-grade girls. Journal of Experimental ChildPsychology, 160:92 – 106, 2017.[MNS08]Mitnik, R.; Nussbaum, M.; Soto, A.: An autonomous educational mobile robot mediator.Autonomous Robots, 25(4):367–382, Nov 2008.[PD18]Pancratz, N.; Diethelm, I.: Including Part-Whole-Thinking in a Girls’ Engineering Coursethrough the Use of littleBits: A Practical Report on Including Part-Whole-Thinking intothe Content of Computer Science Education. In: IEEE Global Engineering EducationConference (EDUCON). S. 1134–1138, 2018.[Se17]Sentance, S.; Waite, J.; Hodges, S.; MacLeod, E.; Yeomans, L. E.: “Creating Cool Stu ”- Pupils’ experience of the BBC micro:bit. In: Proceedings of the 48th ACM TechnicalSymposium on Computer Science Education. 2017.[SM11]Stoilescu, D.; McDougall, D.: Gender digital divide and challenges in undergraduatecomputer science programs. Canadian Journal of Education, 34(1):308–333, 2011.[Wi16]Witherspoon, E. B.; Schunn, C. D.; Higashi, R. M.; Baehr, E. C.: Gender, interest, andprior experience shape opportunities to learn programming in robotics competitions.International Journal of STEM Education, 3(1):18, 2016.[YAM19]Yadav, A.; Alexander, V.; Mehta, S.: Case-based Instruction in Undergraduate Enginee-ring: Does Student Conﬁdence Predict Learning? International Journal of EngineeringEducation, 35(1):25–34, 2019.[ZS08]Zimmermann, L.; Sprung, G.: Technology is Female: How Girls Can Be Motivated toLearn Programming and Take up Technical Studies through Adaptations of the Curriculum,Changes in Didactics, and Optimized Interface Design. In: Proc. of ICEE 08, Pécs. 2008.304 Nils Pancratz et al.<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15  Einsatz von Skill Cards und Story Cards für einen kreativitätsfördernden Informatikunterricht auf der Sekundarstufe I Thomas Schmalfeldt1 Abstract: Um die Mittel der Informatik nicht nur gemäß vorgegebenen Routinen und Standardprozessen, sondern auch kreativ nutzen zu können, benötigen Schülerinnen und Schüler gewisse Grundlagen des Programmierens, die ihnen in einer Weise vermittelt werden sollten, die neben den informatischen Basiskompetenzen auch die Kreativität gezielt fördert. Im vorliegenden Beitrag wird im Kontext des Physical Computings mit dem Calliope mini der Kompetenzaufbau im Bereich „Informatik“ mithilfe des Einsatzes sogenannter „Skill Cards“ und „Story Cards“ aufgezeigt, die an der Pädagogischen Hochschule Zürich neu entwickelt wurden. Anhand der Skill Cards werden grundlegende Konzepte des Programmierens erarbeitet, welche die Schülerinnen und Schüler zur Umsetzung eigener Projektideen nutzen können. Der kreative Gestaltungsprozess wird parallel dazu durch eine reduzierte Form der Skill Cards – die Story Cards – unterstützt. Die im Beitrag vorgestellten Materialien sind Teil eines laufenden Forschungsprojekts, in dessen Rahmen das Ziel verfolgt wird, zukunftsweisende Lernmaterialien für den Informatikunterricht zu entwickeln und zu erproben. Keywords: Kreativität, Physical Computing, Calliope mini, Einführung Programmieren, Sekundarstufe I, Skill Cards, Story Cards, Differenzieren im Informatikunterricht 1 Einleitung Angesichts der fortschreitenden Digitalisierung und der damit einhergehenden zunehmenden Bedeutung informatischer Bildung sind innovative Lernumgebungen erforderlich, die es Kindern und Jugendlichen ermöglichen, sich entsprechende Kompetenzen bereits im Schulunterricht anzueignen. Vor diesen Hintergrund wurden die im vorliegenden Beitrag vorzustellenden Skill Cards und Story Cards entwickelt, mit deren Einsatz zwei Hauptziele verfolgt werden: Die Schülerinnen und Schüler sollen bei der Beschäftigung mit dem Calliope mini Programmierkompetenzen aufbauen und dabei gleichzeitig in ihrer Kreativität gefördert werden. Des Weiteren wurde bei der Konzeption der Karten darauf geachtet, dass sie einen differenzierenden Unterricht erlauben und sich fächerübergreifend einsetzen lassen. Die Arbeit mit einem Mikrocontroller wie dem Calliope mini ist in diesem Zusammenhang insofern zweckmäßig, als Mikrocontroller Bestandteil sehr vieler Alltagsgegenstände sind und deshalb auch im täglichen Leben von Relevanz sind. Zudem konnte nachgewiesen werden, dass Physical Computing einen positiven Einfluss auf die Motivation von Schülerinnen und Schülern haben kann [PR18].                                                         1 Pädagogische Hochschule Zürich, Mathematik und Informatik Sekundarstufe I, Lagerstrasse 2, CH-8090 Zürich, thomas.schmalfeldt@phzh.ch cba doi:10.18420/infos2019-31Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 305 16 Thomas Schmalfeldt  Die angestrebte Förderung der Kreativität wiederum lässt sich mit einer These hinsichtlich der „21st-century skills“ begründen, der zufolge sich zukünftige Probleme im Alltag und im Berufsleben nicht mehr nur durch eingeübte Standardverfahren lösen lassen. Vielmehr werden zu deren Lösung zunehmend auch unkonventionelle Ansätze gefordert sein [TF09]. Dies bedeutet beispielsweise, dass Jugendlichen lernen müssen, größere Projekte gemeinsam anzugehen und dabei ihre jeweiligen Stärken in die Gruppe einzubringen. Ob die Arbeit mit Skill Cards und Story Cards, zum Beispiel in einem Design-Thinking-Prozess, einen Beitrag zur Umsetzung dieses Ziels leisten kann, soll im Rahmen eines laufenden Forschungsprojekts geklärt werden. 2 Materialset für den kreativitätsfördernden Informatikunterricht Die Skill Cards und die Story Cards haben einen klaren Bezug zur Arbeit mit dem Calliope mini und bilden die Basis für einen kreativitätsfördernden Informatikunterricht. Das vollständige Materialset besteht aus den folgenden vier Bestandteilen: • Skill Cards: Aufbau von Fertigkeiten und Kompetenzen für die Arbeit mit dem Calliope mini. Grundlage für das Erlangen der entsprechenden Story Card. • Story Cards: Grundlage für die Ideenfindung zum Verfassen einer eigenen Geschichte und für die Konzeptionierungsphase der Umsetzung dieser Idee mit dem Calliope mini; gewissermaßen eine reduzierte Variante der Skill Cards. • Zubehör-Boxen: Enthalten zusätzliche Komponenten wie zum Beispiel Sensoren und Aktoren, die am Calliope mini angeschlossen werden können und dessen Funktion erweitern. • Challenge Cards: Offene Problemstellungen und Ausgangspunkte für das Erfinden von Geschichten, die sich auch mit anderen Mikrocontrollern umsetzen lassen. Auf den Story Cards und den Zubehör-Boxen ist jeweils ein Icon2 angebracht, das sich auch auf den Skill Cards wiederfindet. Dieses optische Element unterstützt die Orientierung und erlaubt eine einfache Handhabung der einzelnen Bestandteile des Materialsets. Diese werden nachfolgend kurz beschrieben. 2.1 Skill Cards Die Skill Cards bilden die Grundlage des Kompetenzaufbauprozesses. Auf diesen Karten wird aufgezeigt, wie gewisse Hardware-Komponenten an den Calliope mini angeschlossen werden und wie deren Steuerung programmiert wird. Sie sind immer gleich aufgebaut und beginnen mit einer „Ich möchte …“-Formulierung, wie zum Beispiel „Ich möchte einen Motor anschließen und diesen mit dem Calliope steuern“. Auf der                                                         2 Quelle: https://thenounproject.com 306 Thomas Schmalfeldt Einsatz von Skill Cards und Story Cards für einen kreativitätsfördernden Informatikunterricht 17  Vorderseite wird gegebenenfalls benötigtes Zubehör aufgeführt. Außerdem wird beschrieben, was auf der Rückseite erklärt wird, und es finden sich allgemeine Hinweise zur verwendeten Hardware. Auf der Rückseite wird bildlich und sprachlich dargestellt, wie das erforderliche Zubehör angeschlossen werden muss. Des Weiteren werden die dazugehörigen Codeblöcke vorgestellt und erklärt (vgl. Abb. 1). Für die Skill Cards, und somit auch für den Unterricht, wurde die blockbasierte Umgebung MakeCode3 verwendet. Diejenige Version der Skill Cards, die im vorliegenden Beitrag beschrieben wird, zeigt vor allem den Umgang mit Sensoren und Aktoren auf. Die Erläuterungen beziehen sich zum einen auf die bereits auf dem Calliope mini befindlichen Bauteile, zum anderen aber auch auf zusätzliche Komponenten wie Grove-Module, Taster, Regler, LEDs und andere Bauteile. In der ersten Erprobungsphase wurden bereits Skill Cards zu Programmierkonzepten wie Bedingungen und Schleifen erstellt, die in der zweiten Erprobungsphase von Beginn an verwendet werden sollen.  Abb. 1: Rückseite der Skill Card für die Steuerung eines Motors 2.2 Story Cards Die Story Cards stellen in gewisser Weise die Kurzform der Skill Cards dar und bilden den Ausgangspunkt für den Kreativprozess. Wenn eine Schülerin oder ein Schüler die auf einer Skill Card beschriebenen Fertigkeiten aufgebaut hat, erhält sie bzw. er die entsprechende Story Card. Auf der Vorderseite befinden sich das jeweilige Icon (welches sich auch auf der dazugehörigen Skill Card befindet) sowie ein Schlagwort. Auf der                                                         3 https://makecode.calliope.cc Einsatz von Skill Cards und Story Cards 307 18 Thomas Schmalfeldt  Rückseite sind ein bis zwei QR-Codes aufgeführt, mit denen Erklärvideos abgerufen werden können. Diese Erklärvideos sind als Ergänzung zu den Skill Cards gedacht und ermöglichen es zum einen, die Story Cards kompakt zu halten, während zum anderen zugleich die Option besteht, bei Bedarf eine Repetition der entsprechenden Fertigkeiten anzubieten. Die Verwendung der QR-Codes ist vor allem dann sinnvoll, wenn die Schülerinnen und Schüler die Videos während des Unterrichts mit einem Smartphone oder einem Tablet direkt abrufen dürfen. Sollte dies nicht möglich oder erlaubt sein, können die Story Cards auch ohne QR-Codes ausgedruckt werden. In diesem Fall können die Jugendlichen auf die betreffenden Skill Cards zurückgreifen, wenn sie die erforderlichen Fertigkeiten nicht mehr präsent haben.  Abb. 2: Anhand von Story Cards erzählte Geschichte, inklusive erster technischer Kommentare (reproduziert nach einer Schülerinnenlösung) Mithilfe der Story Cards sollen sich die Schülerinnen und Schüler ihren Fähigkeiten und Fertigkeiten entsprechende Geschichten ausdenken. Die Karten können ausgelegt, mit Pfeilen verbunden und kommentiert werden (vgl. Abb. 2). Das dadurch entstandene Netz dient in einem weiteren Schritt als Unterstützung bei der technischen Umsetzung mit dem Calliope mini. Zu diesem Zweck kann das Netz durch programmierspezifische und technische Bemerkungen ergänzt werden. Je mehr Story Cards die Schülerinnen und Schüler sammeln, desto mehr Möglichkeiten stehen ihnen für das Erfinden ihrer Geschichten und den Bau der darin vorkommenden Charaktere offen. Dieses Konzept 308 Thomas Schmalfeldt Einsatz von Skill Cards und Story Cards für einen kreativitätsfördernden Informatikunterricht 19  kann die Jugendlichen dazu motivieren, möglichst viele Kompetenzen aufzubauen, damit sie die persönliche Sammlung von Story Cards vergrößern können.  Obwohl die Story Cards einen direkten Bezug zu den Skill Cards aufweisen, lassen sie sich auch unabhängig davon verwenden. Dadurch können die den Story Cards zugrunde liegenden Fertigkeiten auch mithilfe anderer Methoden und Unterrichtsformen aufgebaut werden oder es kann direkt mit den Videos gearbeitet werden, die wie bereits ausgeführt mittels der QR-Codes abrufbar sind. Darüber hinaus eignen sich die Story Cards auch sehr gut für einen interdisziplinären Einsatz. So können die selbst erfundenen Geschichten zum Beispiel im Sprachunterricht in einem Aufsatz ausformuliert werden, während im Werkunterricht eine gestalterische Umsetzung der Charaktere der Geschichte stattfinden kann. Auf diese Weise wird aus einem Radroboter wie in Abb. 2 illustriert ein im Wald umherstreunender Tiger, der geschmeidig den einzelnen Bäumen ausweicht und so seinen Weg findet. Wenn der Tiger auf Menschen trifft und diese panisch schreien, bleibt er stehen, faucht und wartet, bis es wieder ruhig geworden ist. Da Tiger wie alle Katzenartigen viel schlafen, bleibt er regelmäßig (und zufällig) stehen und macht eine Schlafpause, um anschließend wieder herumzustreunen. 2.3 Zubehör-Boxen Sind auf den entsprechenden Skill Cards zusätzliche Komponenten aufgeführt, so finden die Schülerinnen und Schüler diese in Zubehör-Boxen mit den entsprechenden Icons. Sofern dies möglich war, wurden Blanko-Streichholzschachteln verwendet (vgl. Abb. 3). Bei den Grove-Modulen wurden die jeweiligen Kabel beigefügt, an gewisse Bauteile wurden Kabel angelötet. In anderen Fällen muss gegebenenfalls auf zusätzliche Kabel mit Krokodil- und Pinanschlüssen zurückgegriffen werden.  Abb. 3: Zubehör-Boxen mit Materialien für die Eingabe (grün: Taster und Ultraschalldistanzmesser) und Ausgabe (gelb: DC-Motor und Hubmagnet) Einsatz von Skill Cards und Story Cards 309 20 Thomas Schmalfeldt  2.4 Challenge Cards Den Challenge Cards kommt eine andere Funktion zu als den zuvor beschriebenen Materialien. Sie lassen sich unabhängig von den Skill Cards und den Story Cards nutzen und können auch bei der Arbeit mit anderen Mikrocontrollern eingesetzt werden. Aus diesem Grund wird dieser Bestandteil des Materialsets im vorliegenden Beitrag nur am Rande erwähnt. Ganz allgemein lässt sich jedoch festhalten, dass es sich dabei um eine Sammlung von möglichen Problemstellungen handelt, welche die Schülerinnen und Schüler mithilfe ihrer bis zum gegebenen Zeitpunkt aufgebauten Kompetenzen bearbeiten können (vgl. Abb. 4). Sie bilden den Ausgangspunkt für die zu erfindenden Geschichten.   Abb. 4: Eine Auswahl an Challenge Cards Der Einsatz der Challenge Cards lässt sich verschiedenartig gestalten. So kann eine bestimmte Karte die Problemstellung für die ganze Klasse bzw. eine Gruppe vorgeben oder die einzelnen Schülerinnen und Schüler ziehen individuell eine Karte. Des Weiteren kann die Arbeit in Projektteams, in Partner- oder in Einzelarbeit stattfinden. Die Sammlung der Challenge Cards lässt sich durch die Lehrpersonen, aber auch durch die Schülerinnen und Schüler selbst jederzeit erweitern. 3 Konzeption der Kartensets Die hinter der Entwicklung der Skill Cards und der Story Cards stehende Idee grenzt sich von Konzepten, die in Büchern wie „Das Calliope-Buch“ [Be17] oder „Calliope mini: coden, basteln, entdecken“ [Ki18] vorgeschlagen werden, insofern ab, als diese stark auf Projekten basieren, bei denen die Schülerinnen und Schüler die vorgegebene Lösung schrittweise nachprogrammieren können. Die grundlegenden Konzepte des Programmierens werden bei diesem Ansatz im Zusammenhang mit den jeweiligen Projekten erläutert. Die „Scratch Coding Cards“ [Ru16] wiederum greifen solche Basiskonzepte, die sich die Schülerinnen und Schüler in kurzen Programmsequenzen aneignen sollen, auf einzelnen Karten auf. Diese Sequenzen werden aber ebenfalls an konkreten Beispielen festgemacht. So wird beispielsweise das Konzept der zufälligen 310 Thomas Schmalfeldt Einsatz von Skill Cards und Story Cards für einen kreativitätsfördernden Informatikunterricht 21  Zahlen anhand eines zufällig generierten Songs aufgezeigt. Da am Ende jeweils ein funktionsfähiges Produkt vorliegt, führen solche projektbasierten Ansätze zwar fortlaufend zu Erfolgserlebnissen; es besteht jedoch die Gefahr, dass die Schülerinnen und Schüler die einzelnen Projekte der Reihe nach abarbeiten, ohne danach in der Lage zu sein, ihre Fertigkeiten später auf einen anderen Kontext zu übertragen. Im Gegensatz dazu verfolgen die Skill Cards zunächst einen technischen Ansatz. So wird beispielsweise das Erzeugen von zufälligen Zahlen ohne die Vorgabe einer konkreten Umsetzung vorgestellt. Daher ist darauf zu achten, dass die Schülerinnen und Schüler immer wieder die Gelegenheit erhalten, ihre neu erworbenen Fertigkeiten und Kompetenzen in von der Lehrperson gezielt gewählten Projekten anzuwenden. In den ersten Unterrichtssequenzen können diese Projekte, wie dies in den beiden oben erwähnten Büchern vorgeschlagen wird, eher eng geführt sein, sodass es mit Sicherheit zu Erfolgserlebnissen kommt. Dennoch ist von entscheidender Bedeutung, dass auch die Story Cards bereits in der Anfangsphase eingesetzt werden, weil die kreative Arbeit damit ebenfalls erlernt werden muss. Im weiteren Verlauf des Schuljahres können die Schülerinnen und Schüler mit zunehmender Selbstständigkeit individuelle Projekte verfolgen. Die Entwicklung der Story Cards wurde durch die „Tiles IoT Cards“ [MGD17] inspiriert, wobei Letztere primär den Ideenfindungsprozess fokussieren, während die konkrete Umsetzung dieser Ideen nicht im Zentrum steht. In dieser Hinsicht unterscheiden sich die „Tiles IoT Cards“ denn auch von den neu entwickelten Kartensets, welche durch die Kombination von Skill Cards und Story Cards die praktische Umsetzung der eigenen Projekte nicht nur ermöglichen, sondern dies auch explizit zum Ziel haben. Der Einsatz der beiden Kartensets erfolgt in verschiedenen Phasen des Lernprozesses: Mittels der Skill Cards werden wie erläutert die technischen Grundlagen aufgebaut, während die Story Cards die Funktion haben, die Schülerinnen und Schüler zum Erzählen einer Geschichte anzuregen. Es geht beispielsweise nicht darum, dass die Jugendlichen mit einem Distanzmesser eine LED zum Blinken und eine Melodie zum Erklingen bringen, sondern vielmehr darum, dass sie die Geschichte von einem Wichtel erzählen, der mit seinen Augen funkelt und zu pfeifen beginnt, wenn man in seine Nähe kommt. Oder die Jugendlichen erfinden eine digitale Schatztruhe, in der sie ein Geheimnis aufbewahren können, das nur an spezielle Freundinnen und Freunde weitergegeben wird. Während mit den Skill Cards auf der mittleren Taxonomiestufe nach Anderson und Krathwohl [AK01], das heißt auf der Stufe des Anwendens, gearbeitet werden kann, eignen sich die Story Cards aufgrund des Anspruchs einer kreativen Umsetzung für die Arbeit auf der höchsten Taxonomiestufe, derjenigen des Erschaffens oder Kreierens [Ro08]. Wie die Karten in einer Testklasse probeweise konkret eingesetzt wurden, wird nachfolgend im Sinne eines Praxisberichts kurz dargelegt. Einsatz von Skill Cards und Story Cards 311 22 Thomas Schmalfeldt  4 Einsatz im Unterricht In der Deutschschweiz wird Informatik im neu erarbeiteten gemeinsamen Lehrplan 21 in Kombination mit Medienbildung im 5. bis 7. sowie im 9. Schuljahr mit je einer Wochenlektion aufgeführt. Die Einführung des Lehrplans 21 findet in den verschiedenen Kantonen gestaffelt statt. Im Kanton der Testklasse wird das Schulfach „Medien und Informatik“ auf der Sekundarstufe I (7. bis 9. Klasse) mit Beginn des Schuljahres 2019/2020 eingeführt. Die nachstehenden Ausführungen beziehen sich auf die erste praktische Erprobung der Unterrichtsmaterialien in einer Klasse des 8. Schuljahrs. Im Anschluss daran werden Beobachtungen aus dem Unterricht und erste Rückmeldungen der Schülerinnen und Schüler berichtet. 4.1 Durchführung der Unterrichtssequenzen Der Informatikunterricht in der Testklasse hatte im Sommer 2018 begonnen und erstreckte sich über das ganze Schuljahr. Die 12 Schülerinnen und Schüler (je zur Hälfte Mädchen und Jungen) besaßen zu jenem Zeitpunkt noch keine Informatikvorkenntnisse. Die im Folgenden berichteten Beobachtungen stammen aus dem ersten Schulhalbjahr, in welchem insgesamt 20 Informatik-Unterrichtssequenzen stattfanden. Der Autor des vorliegenden Beitrags fungierte zugleich als unterrichtende Fachlehrperson.  Den Schülerinnen und Schülern standen während des ganzen Schuljahrs sowohl ein persönlicher Laptop als auch je ein Calliope mini zur Verfügung. Obwohl der Calliope mini ursprünglich für die frühen Schuljahre konzipiert wurde, fiel die Wahl auf diesen Mikrocontroller, da er einen auf Physical Computing basierenden Unterricht ermöglicht und verschiedene Programmierumgebungen verfügbar sind. Die elementaren Programmierkonzepte wie Schleifen, bedingte Anweisungen oder Variablen wurden vornehmlich im Klassenunterricht, ergänzt durch Erklärvideos, aufgebaut. Zusätzlich wurden in der ersten Unterrichtssequenz zwei Skill Cards eingeführt: Die erste Skill Card beschrieb das Darstellen von Zahlen, Buchstaben und Symbolen auf der LED-Matrix des Calliope mini, mit der zweiten Karte konnte die Verwendung der beiden auf der Platine verbauten Taster erlernt werden. Dabei zeigte sich bereits eine erste Herausforderung bei der Arbeit mit den Skill Cards: Blockbasierte Programmierumgebungen wie MakeCode bieten jeweils alle verwendbaren Blöcke an, während auf den Skill Cards wegen ihrer beschränkten Größe und zur Erhöhung der Verständlichkeit nur der Umgang mit einer Auswahl der verfügbaren Blöcke vorgezeigt wird. Dies bereitete den Schülerinnen und Schülern jedoch wenig Mühe. Die meisten konzentrierten sich zwar sich hauptsächlich auf die konkret beschriebenen Blöcke, aber es gab auch solche, die andere Blöcke ausprobierten.  Neben der Arbeit mit neuen Skill Cards wurde im Klassenverband auch viel Zeit dafür aufgewendet, Wege aufzuzeigen, wie kreative Geschichten erzählt werden können, ohne dass man sich technisch überfordert. Mithilfe verschiedener Methoden, unter anderem aus dem Design Thinking [ID03], wurde mit den Schülerinnen und Schülern die 312 Thomas Schmalfeldt Einsatz von Skill Cards und Story Cards für einen kreativitätsfördernden Informatikunterricht 23  Herangehensweise im Kreativprozess thematisiert und vielseitig umgesetzt. Sie lernten dabei, ein Projekt zu planen, in Gruppen zusammenzuarbeiten, Prototypen herzustellen, zu testen und zu erweitern, den Prozess zu dokumentieren und ein finales Produkt herzustellen, das anschließend in der Klasse präsentiert wurde. 4.2 Beobachtungen und erste Rückmeldungen zum Unterrichtskonzept Wie in Abschnitt 4.1. bereits erwähnt wurde, hatten die Schülerinnen und Schüler zuvor noch keine Programmiererfahrungen gesammelt. In einer informellen Befragung am Anfang des Schuljahres, in der nach den Einstellungen zur Informatik gefragt wurde, reichten die Antworten über das ganze Spektrum hinweg: Ein Schüler hielt fest, dass er beabsichtige, später eine Lehre als Informatiker zu beginnen, während ein anderer Schüler bereits in der ersten Lektion klarstellte, dass er Informatik „doof“ finde. Obwohl die Einstellungen zur Informatik zu Beginn der Unterrichtsreihe somit sehr unterschiedlich ausgefallen waren, arbeiteten die Schülerinnen und Schüler im Unterricht engagiert mit. Sie waren schnell in der Lage, selbst erste Programme zu erstellen und diese auf dem Calliope mini laufen zu lassen. Entsprechend erhielten die Jugendlichen schon in der zweiten Veranstaltung den Auftrag, eine eigene Projektidee zu entwickeln.  Abb. 5: Prototyp eines mithilfe des Calliope mini gesteuerten Radroboters Da die Schülerinnen und Schüler im Laufe des ersten Schulhalbjahres unterschiedlich viele Story Cards erworben hatten, differenzierten sich die Niveaus im Unterricht fortlaufend aus. Dies ermöglichte es der Lehrperson, kleine Projektteams zusammenzustellen, in denen sich die einzelnen Schülerinnen und Schüler gut ergänzten. Die Jugendlichen organisierten sich aber auch selbst. So berichtete ein Schüler, dass er sehr gern mit einem anderen Schüler zusammenarbeite, weil dieser ein Experte im Umgang mit Hardware sei, während seine eigene Stärke im Programmieren liege (womit er das Entwickeln von geeigneten Algorithmen meinte). Ein anderer Schüler hatte beobachtet, dass eine Mitschülerin für ihr Projekt einen Entfernungsmesser nutzte (vgl. Abb. 5). Er bat sie um Hilfe, konnte sein eigenes Projekt entsprechend erweitern und erhielt nach einem kurzen Gespräch mit der Lehrperson selbst die Story Card mit dem Entfernungsmesser. Einsatz von Skill Cards und Story Cards 313 24 Thomas Schmalfeldt  5 Fazit und Ausblick  Die im vorliegenden Beitrag vorgestellten Skill Cards und Story Cards wurden probehalber bereits über ein halbes Schuljahr hinweg in einer Klasse des 8. Schuljahrs eingesetzt und dabei fortlaufend weiterentwickelt. Die verschiedenen Materialien haben sich bewährt. Während sich die Skill Cards erwartungsgemäß unkompliziert einsetzen ließen, musste für die Arbeit mit den Story Cards zu Beginn viel Zeit aufgewendet werden. Wie formative Leistungsdiagnosen während des Unterrichts ergaben, scheinen der angestrebte Kompetenzaufbau im Programmieren wie auch die Ziele der Kreativitätsförderung mehrheitlich erreicht worden zu sein. Darüber hinaus konnte eine Verbesserung der Zusammenarbeit in Teams beobachtet werden. Empirisch aussagekräftige Resultate werden jedoch erst am Ende des Forschungsprojekts vorliegen. Für das Schuljahr 2019/2020 ist eine erweiterte Erprobung in etwa drei bis fünf Klassen vorgesehen. Im Schuljahr 2020/2021 werden die Skill Cards und die Story Cards mit einem Mixed-Method-Ansatz umfassend evaluiert. Für die größer angelegte Evaluierungsphase ab 2020 wird das zurzeit noch zweckmäßig gehaltene Erscheinungsbild der Karten vereinheitlicht und ansprechender gestaltet. Sämtliche Materialien werden ab diesem Zeitpunkt öffentlich verfügbar sein. Literaturverzeichnis  [AK01] Anderson, L.; Krathwol, D.: A Taxonomy of Learning, Teaching, and Assessing, Longman, New York, 2001. [Be17] Bergner, N. et al.: Das Calliope-Buch: Spannende Bastelprojekte mit dem Calliope-Mini-Board, dpunkt.verlag, Heidelberg, 2017. [ID03] IDEO: IDEO Method Cards: 51 Ways to Inspire Design. William Stout Architectural Books, San Francisco, 2003. [Ki18] Kiefer, Ph.: Calliope mini: coden, basteln, entdecken, Vierfarben, Bonn, 2018. [MGD17] Mora, S.; Gianni, F.; Divitini, M.: Tiles: A Card-based Ideation Toolkit for the Internet of Things. In: Proceedings of the 2017 Conference on designing interactive systems. ACM, New York, S. 587-598, 2017. [PR18] Przybylla, M.; Romeike, R.: Impact of Physical Computing on Learner Motivation. In: Proceedings of the 18th Koli Calling International Conference on Computing Education Research (Koli Calling ’18). ACM, New York, Article No. 9, 2018. [Ro08] Romeike, R.: Kreativität im Informatikunterricht, Dissertation. Universität Potsdam, Potsdam, 2008. [Ru16] Rusk, N.: Scratch Coding Cards, No Starch Press, 2016. [TF09] Trilling, B., Fadel, C.:  21st century skills: learning for life in our times, Jossey-Bass, San Francisco, 2009. 314 Thomas SchmalfeldtcbaHerausgeber et al. (Hrsg.): Name-der-Konferenz,10 Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019Das RetiBNE CaféEin Konzept für Repair Cafés in der informatischen BildungAnn-Katrin Schmidt1, Carsten Schulte1Abstract:„Reparieren statt wegwerfen“ – eine Einstellung, die sich wachsender Beliebtheit erfreut. Invielen Städten weltweit lassen sich Repair Cafés ﬁnden, die der Ö entlichkeit einen Anlaufpunkt für dieReparatur technischer Geräte, wie z. B. Fahrräder, elektronische Haushaltsgeräte etc., bieten. In diesemArtikel beschreiben wir einen Transfer der Idee in die informatische Bildung. Dabei ergänzen wir dasursprüngliche Konzept um zwei Innovationen: einerseits wird der Reparaturprozess durch integrierteReﬂexionen begleitet und andererseits liegt bei uns der Schwerpunkt auf Software-Reparatur (stattHardware-Reparatur). Das Konzept ist im Zusammenhang mit der Reparatur von Smartphones vonStudierenden entwickelt und mit Schulklassen erprobt worden. Daher werden erste Erfahrungen zurWirkung und Durchführung des Konzepts vorgestellt und ergänzend Möglichkeiten beschrieben, wiedas Konzept in schulischen und außerschulischen Bildungskontexten als Teil einer informatischenBildung integriert werden kann.Keywords:Repair Café; Reparieren; Bildung für nachhaltige Entwicklung (BNE); Software-Reparatur;Software-Upcycling1 EinleitungAm 25. September 2015 hat die Generalversammlung der Vereinten Nationen eine Re-solution mit dem Titel „Transformation unserer Welt: die Agenda 2030 für nachhaltigeEntwicklung“ verabschiedet. Dort werden 17 übergeordnete Ziele für eine nachhaltigeEntwicklung formuliert, für dessen Erreichung sich die Gemeinschaft global einsetzt. Ziel 4stellt dabei den Bereich „Bildung“ in den Mittelpunkt [UN15].„Bildung für nachhaltige Entwicklung (BNE) ermöglicht es dem Individuum, aktiv ander Analyse und Bewertung von nicht nachhaltigen Entwicklungsprozessen teilzunehmen,sich an Kriterien der Nachhaltigkeit im eigenen Leben zu orientieren und nachhaltigeEntwicklungsprozesse gemeinsam mit anderen lokal wie global in Gang zu setzen“ [DH08].Um dies zu erreichen dient BNE der Entwicklung der sogenannten Gestaltungskompetenz.Sie umfasst unterschiedliche Teilkompetenzen, die für die Beurteilung von Entwicklungspro-zessen als wichtig erachtet und bei [Pr08] und [DH08] näher erläutert werden. Dazu gehörenu. a. die Fähigkeiten, interdisziplinär neues Wissen aufzubauen, Risiken und Gefahren zuerkennen und sich selbst aktiv in Entscheidungsprozesse einzubringen.1Universität Paderborn, Didaktik der Informatik, Fürstenallee 11, 33102 Paderborn, Deutschland,vorname.nachname@uni-paderborn.decba doi:10.18420/infos2019-32Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 315Das RetiBNE Café 11Für einen Großteil der Fächer in Schulen bietet der „Orientierungsrahmen für den Lern-bereich Globale Entwicklung“ Themen und Vorschläge, die die Integrierung von BNEerleichtern und unterstützen sollen [KB16]. Das Fach Informatik ﬁndet in diesem Rahmenjedoch keine Berücksichtigung.Die schnelle technische Entwicklung und Verbreitung digitaler Artefakte im Alltag, machtes nach unserer Ansicht wichtig, sich auch in der informatischen Bildung mit nachhalti-gen Entwicklungsprozessen auseinanderzusetzen. Das RetiBNE Projekt der UniversitätOldenburg versucht, diese Lücke zu schließen, indem es das Ziel verfolgt, „Reparaturwissenund -können als Element einer technischen und informatischen Bildung für nachhaltigeEntwicklung“ (kurz RetiBNE) zu vermitteln [Ar19]. Als Kooperationspartner bei diesemProjekt haben wir ein Konzept entwickelt, welches die Grundidee sogenannter Repair Cafésaufgreift und in die informatische Bildung integrieren will.2 Konzeptentwicklung und KontextUnser Konzept stellt einen neuartigen Ansatz dar, der – soweit wir wissen – bisher nichtim Rahmen von Allgemeinbildung in den entwickelten Ländern getestet worden ist. Esgibt ähnliche Ideen, z.B. im Kontext der Entwicklungsländer [JPK11,AJR15] oder derInformatik im Allgemeinen [ARE15,Ho16]. Unser Ansatz sieht vor, Interessierte aktivin die Reparatur defekter digitaler Artefakte einzubeziehen und die Geräte auf dieseWeise besser zu verstehen. Dafür sind drei verschiedene Quellen zu einem stimmigenKonzept zusammengesetzt worden: Dualitätsrekonstruktion [Sc08], Ideen aus der Bildungfür nachhaltige Entwicklung [DH08] und das Grundkonzept der Repair Cafés.Umfragen zeigen, dass Nachhaltigkeit für 64% der deutschen Teenager ein wichtiges Themaist, jedoch meist in deutlichem Zusammenhang mit Klimawandel, Armut und Welthungerbetrachtet wird. Der Einsatz technischer Geräte in der eigenen Alltagsrealität spielt hingegennur eine Nebenrolle [Bo09]. Die fehlende technischen Perspektive in der BNE greift dasProjekt RetiBNE der Universität Oldenburg auf. In dessen Rahmen sind gemeinsam mitKooperationspartnern eine Vielzahl von Unterrichtseinheiten entwickelt worden, die denAufbau von Reparaturwissen und -können unterstützen.2Im Mittelpunkt unseres Konzepts steht die Idee der Repair Cafés: Die meisten Initiativen inDeutschland sind Teil des „Netzwerk Reparatur-Initiativen“, das niederländische Netzwerk„Stichting Repair Café“ ist auch international tätig.3In der Regel werden die RepairCafés von Freiwilligen konzipiert, vorbereitet und betreut und stellen neben technischenund ressourcenschützenden Aspekten auch soziale Tre punkte für Menschen aus denunterschiedlichsten Kontexten dar.Im Wintersemester 2017/2018 haben sich Lehramtsstudierende der Universität Paderbornintensiv mit dem RetiBNE Projekt beschäftigt. Im Seminar in der Didaktik der Informatik2Zugri  auf Materialien und weitere Informationen zum Projekt ﬁnden sich unterhttp://www.retibne.de/3Für weitere Informationen siehe https://repaircafe.org/de/316 Ann-Katrin Schmidt, Carsten Schulte12 Ann-Katrin Schmidt, Carsten Schultewerden zu ausgewählten Themen Konzepte für Schulklassen erarbeitet, die einen Zyklusaus praktischer Erprobung, Reﬂexion und Überarbeitung durchlaufen. Zusätzlich werdenForschungsfragen im Zusammenhang mit dem Projekt bearbeitet. Damit folgt das Seminarden in [HS11] entwickelten Ideen zur Verbesserung der Lehrerbildung.Für das Konzept ist die Unterrichtsreihe „Smartphone – Herstellung, Nutzung und Ent-sorgung“ aus dem RetiBNE Projekt genutzt und von den Studierenden für ihre Zieleangepasst und ergänzt worden. Die entstandene 3-stündige Lehr-Lerneinheit behandeltThemen wie den persönlichen Handykonsum, Aufbau und enthaltene Rohsto e sowieHerstellung und Produktion von Smartphones, die im Hinblick auf Nachhaltigkeit, (spar-samen) Ressourcenverbrauch und den ökologischen Fußabdruck diskutiert werden. Derinhaltliche Rahmen wird durch einen Praxisteil ergänzt, der die Reparatur von defektenoder alten Handys und Zubehör thematisiert. Neben der üblichen Hardware-Reparaturin Repair Cafés, verfolgt unser RetiBNE Café zusätzlich die Reparatur von veralteterSoftware und dessen Anpassung an die eigenen Bedürfnisse. Teilnehmende sollen nicht nurReparaturwissen erlangen und praktisch anwenden, sondern auch die duale Natur digitalerArtefakte kennenlernen. Wir vermuten, dass tiefergehende Kenntnisse über die duale Naturund Zusammenhänge im digitalen Artefakt zu einem besseren Verständnis beitragen undauf zukünftige Reparaturprobleme vorbereiten können.3 Konzept des RetiBNE Cafés im DetailNachfolgend wird das Konzept und die Inhalte der einzelnen Phasen vorgestellt.•15 min Einführung: persönliche Handynutzung und -konsum, Aufbau eines Handys•15 min Gruppenarbeit: Rohsto e im Handy, Herstellung des Handys•15 min Präsentation und Reﬂexion: Goldwert in Handys•90 min o ene Reparaturphase an Stationen•10 min Reﬂexion der Reparaturphase•25 min Selbsttest und Gruppendiskussion: ökologischer Fußabdruck und Nachhaltig-keit im Alltag•10 min abschließende Reﬂexion inkl. BlitzlichtEinführungsphaseDie Einführungsphase beginnt mit der Frage nach der Anzahl der Handys im Besitz derTeilnehmenden (aktuelle und nicht mehr genutzte Geräte). Die Ergebnisse werden o en ander Tafel gesammelt, sodass sich jeder ein eigenes Urteil über den individuellen Handykon-sum bilden kann. Zusätzlich wird der durchschnittliche Besitz an Handys für die Gruppeberechnet.Als nächstes sollen sich die Teilnehmenden über Materialien in ihren Smartphones informie-ren. Dazu erfolgt eine Gruppenarbeit, in der zu einigen Metallen und Erzen sowie SeltenenErden gezielt Informationen gesammelt werden. Recherchiert wird dabei zum Wert desRohsto s, dem Herkunftsland, den Abbauverfahren, möglichen Folgen für die Region sowiezur Wiederverwendbarkeit und zum Recycling der Materialien. Anschließend werden dieDas RetiBNE Café - Ein Konzept für Repair Cafés in der informatischen Bildung 317Das RetiBNE Café 13Ergebnisse im Plenum vorgestellt.Darüber hinaus erfolgt eine Berechnung des Goldwerts: Unter Annahme des durchschnittli-chen Handybesitzes der Gruppe wird eine Hochrechnung auf die Schule und die entspre-chende Region vorgenommen. Das Ergebnis dient als Motivation, um über das Potenzial derEinsparung von Ressourcen durch Recycling zu diskutieren. Diese Aktion stellt sicher, dassder eigene Handykonsum als Teil der wirtschaftlichen Ressourcennutzung berücksichtigtund realisiert wird.ReparaturphaseDie Reparaturphase erfolgt selbstbestimmt durch die Teilnehmer, sodass sie entsprechendihrer Interessen frei wählen können, ob sie in Einzelarbeit oder Kleingruppen reparierenund an welchen der drei Stationen sie arbeiten möchten. Aktuell stehen dafür die Stationen„Kabelbruch“, „Displaybruch“ und „Basteln“ zur Auswahl. Während der gesamten Phasewerden die Teilnehmenden von der Hauptfrage „Warum funktioniert diese Funktion oderdas digitale Artefakt nicht?“ geleitet.Für die einzelnen Stationen stehen Ansprechpartner zur Verfügung, die als Mentorennach dem Prinzip der minimalen Hilfe [Ae83] agieren. Damit wird das Ziel verfolgt, dieTeilnehmenden möglichst autonom handeln und lernen zu lassen und ihnen bei Bedarf durchentsprechenden Input Ideen für die Weiterarbeit mitzugeben. Die Hilfestellungen erfolgen da-bei mit Blick auf die Dualitätsrekonstruktion [Sc08], die eine di erenziertere Formulierungder Hauptfrage „Warum funktioniert es nicht“ anregen soll. Durch dieses Vorgehen könnendie Teilnehmenden die beiden Seiten des digitalen Artefakts, das Architekturverständnisund das Bedeutungsverständnis, selbstständig entdecken4.Darüber hinaus haben wir festgestellt, dass der konkretere und di erenziertere Ansatzzum Verständnis des Problems (und damit des Artefakts) der Zerlegung des Warumsdurch Tinbergen [Ti63] in der Verhaltensbiologie ähnelt. Tinbergen hat vermutet, dass einintegratives Verständnis von Verhalten eine di erenzierte Art der komplexen „Warum“-Frage benötigt. Daher haben wir vier Aspekte des Warum angepasst, um digitale Artefakte(oder deren Dysfunktion) in ihrer Gesamtheit zu erfassen. Um die Bedeutung des Artefaktszu verstehen, können wir fragen „Was ist der Zweck des digitalen Artefakts?“ und „Welchesoziokulturellen Einﬂüsse führen zu diesem Artefakt?“. Mit Blick auf die Architekturkönnen wir fragen: „Durch welche Bestandteile wird das Artefakt ermöglicht?“ und „Wiearbeiten diese Bestandteile zusammen?“. Diese di erenzierten Aspekte ermöglichen dieKategorisierung und Analyse jedes einzelnen Schritts eines freien und selbstbestimmtenReparaturprozesses, der in der Regel zu komplex ist, um ihn zu erfassen.Die Stationen „Displaybruch“ und „Kabelbruch“ laden die Teilnehmenden ein, Handysoder Teile davon in langsamen Schritten zu entdecken. Eine besondere Rolle in unseremKonzept spielt die Station „Basteln“, die keinen klaren Reparaturauftrag besitzt. Einerseitskönnen die Teilnehmenden unterschiedliche alte Mobiltelefone vergleichen und mit Hilfeder adaptierten Formen des „Warum“ den architektonischen Entwicklungspfad als Teil4Wir haben uns dafür entschieden die Begri e Architektur (statt Struktur) und Bedeutung (statt Funktion) zuverwenden, da diese den dualen Charakter nach unserer Erfahrung leichter zu verstehen und zu verwenden macht.318 Ann-Katrin Schmidt, Carsten Schulte14 Ann-Katrin Schmidt, Carsten Schulteder Dualitätsrekonstruktion entdecken. Andererseits bietet sich die Möglichkeit, überdie Begri e „defekt“ und „reparieren“ in Bezug auf Software und damit über Software-Upcycling oder die alternative Nutzung technischer Artefakte nachzudenken. Da diesebeiden Konzepte neu und wichtig für unser Konzept sind, stellen wir sie an dieser Stelle vor:UnterSoftware-Reparaturverstehen wir die Aktualisierung älterer Smartphones, die nichtmehr vom Hersteller unterstützt werden, auf aktuellere Betriebssysteme. Aus praktischenGründen liegt hierbei der Schwerpunkt auf Android-Smartphones. Geplante Obsoleszenzbasiert oft auf Softwareproblemen, genauer gesagt auf dem Betriebssystem, und nicht aufHardware-Gründen. Dies ist auf eine schlechte Update-Politik der Hersteller von Android-Smartphones zurückzuführen. So liefert beispielsweise einer der größten Hersteller Updatesfür sein Flaggschi modell im besten Fall für 2 Jahre, bei Midrange-Smartphones nochkürzer oder gar nicht. Einerseits ist der Sicherheitsaspekt ein Problem, andererseits bedeutetveraltete Software, dass neue Apps irgendwann nicht mehr funktionieren und damit dasSmartphone obsolet machen.UnterSoftware-Upcyclingverstehen wir den Einsatz alter Hardware in anderen Anwen-dungsbereichen, z.B. die Verwendung eines alten Smartphones als Fahrradcomputer oderÜberwachungskamera. In Gesprächen mit Lehrkräften ist die Rolle von Smartphones alsStatussymbol als noch wichtiger identiﬁziert worden, als die Verwendung modernsterSoftware. Deshalb bieten wir die Möglichkeit eigene ROMs zu verwenden, die ständig neueVersionen liefern und eine enorme Vielfalt an Individualität bieten. Nicht nur ältere Gerätekönnen auf diese Weise eine Art zweites Leben erfahren, die durch die Nutzung in neuenKontexten ermöglicht wird.ReﬂexionsphaseIn der abschließenden Reﬂexionsphase werden im Plenum die individuellen Erfahrungenaus der Reparaturphase gesammelt. Die Teilnehmenden sollen dabei auch diskutieren, wieviele ihrer eigenen Handys repariert oder anderweitig wiederverwendet werden könnten.An dieser Stelle soll auch die Software-Reparatur und das Software-Upcycling nochmalin den Blick genommen werden. Durch die Frage, was eine selbstständige Anpassungeines digitalen Artefakts bedeuten könnte, soll über die beiden Konzepte nachgedacht unddiskutiert werden.Diese Phase dient darüber hinaus auch dazu, den Handykonsum und das Reparierenmit dem Themenkomplex der Nachhaltigkeit zu verknüpfen. Die Teilnehmenden lernenden ökologischen Fußabdruck kennen und ermitteln mit Hilfe eines Online-Fragebogensihren persönlichen Fußabdruck. Eine Eigenreﬂexion soll hier durch die Bekanntgabedes nachhaltigen Fußabdrucks und des deutschen Durchschnitts angeregt werden. Damitverfolgen wir das Ziel, dass Fragen der Nachhaltigkeit im Alltag bewusster wahrgenommenwerden und beispielsweise die Einsparung von Ressourcen durch längere Nutzung vondigitalen Artefakten und Maßnahmen wie Reparaturen und Upcycling erreicht werden kann.Das RetiBNE Café - Ein Konzept für Repair Cafés in der informatischen Bildung 319Das RetiBNE Café 154 Erste Ergebnisse und Reﬂexionen zum KonzeptDas im vorherigen Abschnitt vorgestellte Konzept zu unserem RetiBNE Café ist bei Schul-klassenbesuchen erprobt und reﬂektiert worden. Dazu sind mehrere Beobachter anwesendgewesen, sodass allgemeine Eindrücke und Feedback aus freien Beobachtungen gesammeltwerden konnten. Ergänzend haben die verantwortlichen Studierenden zu ausgewähltenAspekten Bewertungsinstrumente vorbereitet und ausgewertet. Die hier vorgestellten Er-gebnisse basieren auf Besuchen von drei Klassen von drei verschiedenen Schulen undSchultypen. Insgesamt haben 67 Schüler teilgenommen (26, 23, 18).Zu Beginn präsentieren wir allgemeine Ergebnisse, die auf den Beobachtungen der Studie-renden, der begleitenden Lehrkräfte, des Universitätspersonals und Ergebnissen aus denDurchführungen basieren. Der Gesamteindruck war dabei wie folgt: Alle Kurse sind vonallen Teilnehmenden gut angenommen worden (keine Polarisierung). Wir haben „typischpositive“ Phänomene von Exkursionen/Schülerlabortagen erlebt: die ansonsten ruhigen odergar negativ au allenden Schüler haben nicht nur im Hinblick auf ihr gewohntes Verhalten,sondern auch im Verhältnis zum Rest des Kurses einen guten bis sehr guten Beitrag geleistet.Alle Teilnehmer sind sehr konzentriert oder zumindest ruhig gewesen, sodass es zu keinenStörungen kam. Häuﬁge Aussagen von Schülern während der jeweiligen Repair Caféswaren: „[Tag] war cool“, „Interessant, das Handy von innen zu sehen“, „cool, dass man auchseine eigenen Sachen mitbringen kann [defekte oder alte Geräte]“, „man konnte sich gutversuchen, da man keine Angst hatte, etwas zu beschädigen, weil alles schon kaputt war“.Beobachtungen von Studierenden und Lehrkräften: Die Mini-Statistik über den eigenenHandykonsum faszinierte Schüler und Lehrer gleichermaßen und könnte ein guter Aus-gangspunkt für weitere interessante Unterrichtsstunden sein.Die Suche nach grundlegenden Informationen über die Reparatur von Handys ist mittelsYouTube sehr einfach gewesen, als altersgerecht angesehen und daher gut angenommenworden. Die o ene Reparaturphase ist als „didaktisch aufgeschlossen und methodenfrei“angesehen worden, was die Schüler sehr geschätzt und mit großer Motivation genutzt haben.Diese o ene Phase ist mit den „Warum“-Fragen sinnvoll angereichert worden und hat zumweiteren Nachdenken angeregt.Neben der allgemeinen Beobachtung sind systematische Daten zu drei verschiedenenFragen gesammelt worden. Uns hat u.a. interessiert, welche der Stationen „Kabelbruch“,„Displaybruch“ und „Basteln“ die Schüler am meisten fasziniert hat. Es hat sich herausgestellt,dass alle Stationen als ähnlich faszinierend angesehen worden sind. Wenn die Schülermehrere besucht haben, scheint es keine Tendenz zu geben, welche sie bevorzugen.Ein weiterer Aspekt unserer Beobachtungen ist der Einﬂuss von Gruppenkonstellationenauf den Reparierprozess. Aufgrund des relativ hohen Aufwandes einer Beobachtungsstudiehaben wir uns auf eine exemplarische Beobachtung von Gruppen konzentriert. Für dieBewertung der Gruppenkonstellationen ist ein Beobachtungsbogen erstellt und verwendetworden. Dieser beinhaltet insgesamt neun Verhaltensmuster, die sich in fünf kooperative320 Ann-Katrin Schmidt, Carsten Schulte16 Ann-Katrin Schmidt, Carsten Schulteund vier nicht kooperative Verhaltensweisen unterteilen. In zwei der drei Klassenbesuchekonnten wir vier klar wahrnehmbare Gruppen an insgesamt drei Stationen beobachten.Was das kooperative Verhalten betri t, so lässt unsere Datenerhebung vermuten, dass zweibis drei Personen eine vorteilhafte Gruppengröße darstellen. In einer Gruppe mit vierPersonen hat mindestens eine Person ein „unbeteiligtes Zuhören“ gezeigt und insgesamt isteine geringere aktive Teilnahme an der Aufgabe wahrgenommen worden. Zusätzlich gehenwir davon aus, dass eine ausgewogene Zusammensetzung aus „Experten“ und „Neulingen“dazu beiträgt, alle Beteiligten persönlich einzubeziehen.Bei den nicht kooperativen Aktivitäten haben wir festgestellt, dass 2 von 4 Gruppen zwi-schenzeitlich „nicht aufgabenbezogenes Arbeiten“ gezeigt haben. Weitere nicht kooperativeVerhaltensweisen sind von uns nicht beobachtet worden.Schließlich hat uns interessiert, inwieweit sich die Teilnehmer nach dem Besuch im RetiBNECafé noch mit dem Thema Reparatur beschäftigt haben. Dazu haben die Teilnehmendenzwei Wochen nach dem Besuch unseres Repair Cafés einen Fragebogen mit Aussagenerhalten, die sie bewerten sollten. 49 von 56 ausgefüllten Fragebögen waren gültig und indie Auswertung einbezogen.Wir haben die Elemente des Fragebogens in drei „Aktionsphasen“ zusammengefasst: Expe-rimentieren, Reﬂexion sowie erfolgreicher Abschluss. Wir erachten für einen erfolgreichenAbschluss ein vorheriges Experimentieren und Recherchieren zur Reparatur für notwendig,sodass die Befragten mehreren Aussagen zustimmen konnten. Daher ist es uns möglichgewesen, den Einﬂuss des RetiBNE Cafés zu bewerten:51,0% der Teilnehmer haben das Thema nicht weiter betrachtet (n=25). Insgesamt 37 malstimmen die Befragten Aussagen zu, die sich auf experimentelle Gedanken und Einﬂüssebeziehen. Des weiteren stehen 25 Antworten mit Reﬂexionsaktivitäten in Zusammenhang.Zusätzlich geben 10 von 49 Personen eine erfolgreiche Reparatur eines Handys/Kabels an.Insgesamt haben damit mindestens 15% aller 67 Teilnehmenden erfolgreich ein defektesKabel oder Handy nach dem Besuch im RetiBNE Café repariert.5 Diskussion des Konzepts im Kontext informatischer BildungNach Präsentation des Konzepts und den gewonnenen Ergebnissen werden wir das Konzeptim Kontext der informatischen Bildung diskutieren. Wir glauben, dass das Konzeptbekannte und etablierte Ziele der Informatik, wie z. B. Problemlösen, Verständnis derFunktionsweisen digitaler Artefakte und das Bewusstsein für gesellschaftliche Implikationen,anspricht. Darüber hinaus trägt es dazu bei, ein besseres Verständnis und eine detaillierteretheoretische Untermauerung dieser allgemeinen Ziele in der informatischen Bildung zuentwickeln.Die informatische Bildung und Informatik-Lehrpläne behaupten im Allgemeinen, einenwichtigen Aspekt für die Entwicklung von Fähigkeiten für das Leben in einer technologie-betriebenen Welt, für die Digitalisierung und zukünftige Entwicklungen beizutragen. Bellund Duncan erwähnen zum Beispiel die folgenden Ziele [BD18]:Das RetiBNE Café - Ein Konzept für Repair Cafés in der informatischen Bildung 321Das RetiBNE Café 171.„Verständnis dafür wie alles funktioniert“2.„sie befähigen, Schöpfer [nicht nur] Verbraucher zu sein “3.(verstehen, dass) „die gleiche Hardware für die Arbeit mit einer Vielzahl vonInformationen verwendet werden kann“4.„Themen in den Kontext stellen“5.„werden sich bewusst, dass, wenn die Schüler etwas über Programmierung lernen,sie immer den Menschen im Auge behalten müssen“6.„lernen, sich darauf zu konzentrieren, die Bedürfnisse des Endverbrauchers über diedes Programmierer zu stellen“Im Hinblick auf das RetiBNE Café ist es interessant, dass die Studierenden und Teil-nehmenden oft zum ersten Mal in ihrem Leben ein Smartphone geö net und darübernachgedacht haben, wie es funktioniert (1). Die Reparatur und das Upcycling unterscheidensich vom täglichen Gebrauch als Nutzer und haben es ihnen ermöglicht, Schöpfer zu sein(2). Gleichzeitig trägt dies zur Idee bei, dass Geräte für etwas anderes verwendet werdenkönnen (3), z. B. kann ein altes Telefon als Fahrrad-Tacho wiederverwendet werden,Interessant ist auch, dass sich der Blick auf die Technologie (Smartphone) und die Nut-zungsmuster der Involvierten geändert haben: Sie haben begonnen, ihre Gewohnheiten zureﬂektieren und den Kauf eines neuen Telefons in einem breiteren ökologischen Kontext zusehen (4) und ein Bewusstsein dafür entwickelt, dass es nicht nur eine Sache der Nutzung ist,sondern auch Menschen außerhalb des eigenen Umfelds betri t (5,6). In diesem Sinne ist eseine Intention gewesen, durch die Anpassung, Reparatur oder das Upcycling eines Gerätes„Verantwortung zu übernehmen“. Anfangs wird das Reparieren eines alten Smartphones alsnicht wertvoll betrachtet, da diese eine Art Statussymbol sind – je neuer, desto besser. Aberdurch das Upcycling wird das Handy einzigartig, angepasst an die eigenen Handlungen undIdeen – und dann ist es wieder ein wertvolles Statussymbol, auf das die Lernenden stolzsind.Es wäre interessant, in weiteren Studien herauszuﬁnden, ob insbesondere die Station„Basteln“ für Hobby-Bastler von großem Wert sein könnte, wenn es um kollaborativeAspekte der gemeinsamen Reparatur nach den von Houston et al. [Ho16] aufgezeigtenAspekten geht.49% der deutschen Jugendlichen geben deutlich an, dass nicht nur Regierungen, Unternehmenund große Organisationen ihr Verhalten ändern müssen, sondern auch die Bevölkerung[Bo09]. Obwohl der Kontext der Frage in unserem Repair Café für nachhaltiges Verhaltenganz anders ist, haben auch hier 49% der Befragten angegeben, sich nach dem Besuch mitdem Thema beschäftigt zu haben. Darüber hinaus ist das Upcycling in den Kontext der„Wegwerfgesellschaft“ gestellt worden: die Schüler aus unseren Klassenbesuchen habenim Durchschnitt mindestens drei Handys und bis zu 8 Geräte besessen. Hier sind diezwei Wochen später gemessenen E ekte interessant. Nach unseren Erfahrungen und aufGrundlage von Gesprächen mit Anbietern außerschulischer Aktivitäten sind längerfristigeE ekte von einmaligen Angeboten schwer zu erreichen. Die Ergebnisse deuten also aufeine hohe Wirkung des RetiBNE Café hin.322 Ann-Katrin Schmidt, Carsten Schulte18 Ann-Katrin Schmidt, Carsten Schulte6 Mögliche Integration in BildungskontexteNach unseren gewonnen Erkenntnissen sehen wir das RetiBNE Café als gute Möglichkeitan, die informatische Bildung nicht nur in schulischen Bildungskontexten, sondern auchin außerschulischen Bereichen zu stärken. Daher möchten wir unser RetiBNE Café fürSchulklassen, Gruppen und interessierte Einzelpersonen ö nen und ihnen so die Möglichkeitgeben, Reparaturwissen und -können zu erwerben und im Kontext der Nachhaltigkeit zusehen. Wir sehen das RetiBNE Café daher auch als Beitrag zur Verbraucherbildung undwollen eine reﬂektierte Urteils- und Handlungsfähigkeit fördern.Unser Konzept soll daher auf zwei Arten weiter umgesetzt werden: Einerseits gibt es dieMöglichkeit an o enen Repair Café Sitzungen teilzunehmen und eigene defekte Kleingerätewie Handys, Tablets, Laptops o. ä. mitzubringen und mit Unterstützung von erfahrenenAnsprechpartnern zu reparieren. Auch hier soll das Konzept der Reparaturphase mit demGrundgedanken der Dualität als Leitlinie dienen und den Teilnehmenden ermöglichen, ihrtechnisches Gerät nicht nur zu reparieren, sondern auch insgesamt besser zu verstehen.Andererseits wird die Möglichkeit bestehen, den 3-stündigen Kurs in der hier vorgestelltenForm mit Gruppen zu besuchen.Bei der im August 2017 in Kraft getretenen Rahmenvorgabe Verbraucherbildung in Schulenin Nordrhein-Westfalen handelt es sich um eine fächerübergreifende Vorgabe, zu deren Um-setzung Schulen in ihren internen Lehrplänen verpﬂichtet sind. Ziel von Verbraucherbildungist die Entwicklung eines verantwortungsbewussten Verhaltens als Konsument, welchesreﬂektierte und informierte Entscheidungen beinhaltet. In der Rahmenvorgabe wird auchauf die Agenda 2030 der UN verwiesen. Sie sieht eine Entwicklung von konsumbezogenenKompetenzen vor, u. a. Sachkompetenz und Handlungskompetenz, in denen wir Parallelenzu Teilen der Gestaltungskompetenz erkennen.In unseren Augen kann das RetiBNE Café wichtige Beiträge zur Entwicklung dieser Kom-petenzen beitragen und diese um Kenntnisse und Fähigkeiten zur Reparatur von technischenGeräten erweitern. Denkbar wäre etwa, Teile des Konzepts in den Schulunterricht zuverlagern und sich bereits vorher mit Nachhaltigkeit, Rohsto gewinnung und Produktiontechnischer Kleingeräte auseinanderzusetzen. Im Besuch des RetiBNE Cafés kann danneine Vertiefung und Erweiterung um den Reparaturgedanken stattﬁnden und gleichzeitigpraktisch von Schülern erprobt werden. Im Anschluss an den Besuch bieten die neuenErkenntnisse Möglichkeiten zur Weiterarbeit im Unterricht, etwa über eine Diskussion dertechnischen und gesellschaftlichen Wechselwirkungen und Interessen.7 DanksagungUnser Dank geht an die Studierenden Dominik Brett, Jonas Laukötter, Ann-Katrin Schmidtund Dimitri Schneider. Sie haben die Schüler während der drei Repair Café Sitzungenhochmotiviert betreut und die hier vorgestellten Auswertungen durchgeführt. Gleichzeitigbedanken wir uns herzlich bei Jessica Krüger und Andreas Gödecke, die den Studierendenbei der Entwicklung des Konzepts mit Rat und Tat zur Seite standen.Das RetiBNE Café - Ein Konzept für Repair Cafés in der informatischen Bildung 323Das RetiBNE Café 19Literaturverzeichnis[Ae83]Aebli, Hans: Zwölf Grundformen des Lehrens. Klett Cotta, Stuttgart, 1983.[AJR15]Ahmed, Syed Ishtiaque; Jackson, Steven J.; Rifat, Md. Rashidujjaman: Learning to Fix:Knowledge, Collaboration and Mobile Phone Repair in Dhaka, Bangladesh. In: Proceedingsof the Seventh International Conference on Information and Communication Technologiesand Development. ICTD ’15, ACM, NY, USA, S. 4:1–4:10, 2015.[Ar19]Arbeitsgruppe Technische Bildung/Carl von Ossietzky Universität Oldenburg: , RETIBNE,2019. Abrufbar überhttp://retibne.de/ueber.[ARE15]Ames, Morgan G.; Rosner, Daniela K.; Erickson, Ingrid: Worship, Faith, and Evangelism:Religion As an Ideological Lens for Engineering Worlds. In: Proceedings of the 18th ACMConference on Computer Supported Cooperative Work &#38; Social Computing. CSCW’15, ACM, New York, NY, USA, S. 69–81, 2015.[BD18]Bell, Tim; Duncan, Caitlin: Teaching Computing in Primary Schools. In (Sentance, Sue;Barendsen, Erik; Schulte, Carsten, Hrsg.): Computer Science Education Perspectives onTeaching and Learning in School. Bloomsbury Academic, S. 132 – 150, 2018.[Bo09]Boecker, Malte Christopher: Ergebnisse einer repräsentativen Umfrage in Deutschland undÖsterreich „Jugend und Nachhaltigkeit“. Aug 2009.[DH08]De Haan, Gerhard: Gestaltungskompetenz als Kompetenzkonzept der Bildung für nachhal-tige Entwicklung. In: Kompetenzen der Bildung für nachhaltige Entwicklung. Springer, S.23–43, 2008.[Ho16]Houston, Lara; Jackson, Steven J.; Rosner, Daniela K.; Ahmed, Syed Ishtiaque; Young,Meg; Kang, Laewoo: Values in Repair. In: Proceedings of the 2016 CHI Conference onHuman Factors in Computing Systems. CHI ’16, ACM, NY, USA, S. 1403–1414, 2016.[HS11]Hornung, Malte; Schulte, Carsten: ProspectiveTeachers@Research: CS Teacher EducationRevised. In: Proceedings of the 11th Koli Calling International Conference on ComputingEducation Research. Koli Calling ’11, ACM, New York, NY, USA, S. 138–143, 2011.[JPK11]Jackson, Steven J.; Pompe, Alex; Krieshok, Gabriel: Things Fall Apart: Maintenance,Repair, and Technology for Education Initiatives in Rural Namibia. In: Proceedings of the2011 iConference. iConference ’11, ACM, New York, NY, USA, S. 83–90, 2011.[KB16]Kultusministerkonferenz; Bundesministerium für wirtschaftliche Zusammenarbeit: Orien-tierungsrahmen für den Lernbereich Globale Entwicklung. Cornelsen, Bonn, 2016.[Pr08]Programm Transfer-21: , Lernen für die Zukunft - Deﬁnition von Gestaltungskompetenz undihrer Teilkompetenzen, Jul 2008. Abrufbar überhttp://www.transfer-21.de/indexb4c1.html?p=222.[Sc08]Schulte, Carsten: Duality Reconstruction - Teaching Digital Artifacts from a Socio-technicalPerspective. In: Proceedings of the 3rd international conference on Informatics in SecondarySchools - Evolution and Perspectives: Informatics Education - Supporting ComputationalThinking. Springer-Verlag, S. 110–121, 2008.[Ti63]Tinbergen, Nikolaas: On aims and methods of ethology. Zeitschrift für Tierpsychologie,20(4):410–433, 1963.[UN15]Resolution 70/1 – Transformation unserer Welt: die Agenda 2030 für nachhaltige Entwick-lung. Vereinte Nationen, New York, 2015.324 Ann-Katrin Schmidt, Carsten SchultecbaHerausgeber et al. (Hrsg.): INFOS 2019,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1AI Unplugged – Wir ziehen Künstlicher Intelligenz denSteckerStefan Seegerer1, Annabel Lindner1, Ralf Romeike2Abstract:Aufgrund seiner großen Bedeutung in Medien, StartUp-Welt und der Digitalstrategie derBundesregierung wird das Thema Künstliche Intelligenz (KI) auch für die Schule zunehmend relevant.Bisher sind Ansätze, die KI abseits von Programmierung für Schülerinnen und Schüler erlebbarmachen, rar. Um dem zu begegnen, wurde eine Sammlung verschiedener Unplugged Aktivitäten rundum KI entwickelt, die das Thema greifbar macht und auch als Unterrichtssequenz verwendet werdenkann. Unplugged stellt Aktivitäten bereit, die Ideen und Konzepte der Informatik ohne Computerergründen. Die Aktivitäten beleuchten wichtige Konzepte des Themas KI und ermöglichen, derKünstlichen Intelligenz zugrunde liegende Ideen zielgruppengerecht zu vermitteln. Zudem bietensie Ansatzpunkte, um gesellschaftliche Fragen der KI zu diskutieren. Dieser Beitrag beschreibt dieAktivitäten und deren theoretische Hintergründe, skizziert einen möglichen Unterrichtsverlauf undschildert konkrete Praxiserfahrungen von AI Unplugged.Keywords:Künstliche Intelligenz; CS Unplugged; Maschinelles Lernen; Unterrichtsaktivitäten1 EinleitungVermutlich bestimmt kein anderes informatisches Thema die aktuelle Berichterstattungso stark wie die Künstliche Intelligenz (KI, engl. AI). KI ﬁndet in vielen BereichenAnwendung: Wir sprechen mit Künstlichen Intelligenzen in Form von Siri, Cortana oderAlexa, erhalten „intelligente“ Produktempfehlungen beim Online-Shopping oder lesencomputergenerierte Texte. Immer mehr Softwareprodukte werden als KI-gestützt beworben.Auch die Bundesregierung widmet sich in einem aktuellen Strategiepapier dem Thema KI[Bu18]. Diese gesellschaftliche Bedeutung macht das Thema zukünftig auch für die Schulerelevant, gerade vor dem Hintergrund, dass laut einer aktuellen Umfrage 50 % der Deutschenkeine genaue Vorstellung von KI haben [Pr18]. Aufgrund der Komplexität des Themas istein werkzeugbasierter Zugang jedoch erst, wenn überhaupt, für höhere Altersstufen geeignet.Unplugged Aktivitäten können die Beschäftigung mit dem Thema Künstliche Intelligenzerleichtern und von Lehrerinnen und Lehrern ebenso wie von Schülerinnen und Schülern,auch bei geringerem Alter der Lernenden, als Einstieg in die Thematik verwendet werden.1Friedrich-Alexander-Universität Erlangen-Nürnberg, Didaktik der Informatik, Martensstraße 3, 91058 Erlangen,stefan.seegerer@fau.de,annabel.lindner@fau.de2Freie Universität Berlin, Didaktik der Informatik, Königin-Luise-Str. 24-26, 14195 Berlin,ralf.romeike@fu-berlin.decba doi:10.18420/infos2019-33Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 3252 Stefan Seegerer, Annabel Lindner, Ralf Romeike2 Künstliche IntelligenzKünstliche Intelligenz existiert als Teilgebiet der Informatik bereits seit 1956 [Mc06],praktische Relevanz hat das Thema jedoch erst durch die Verfügbarkeit entsprechenderRechenkapazitäten bekommen. Der Begri  Künstliche Intelligenz stellt vor allem eineSammelbezeichnung für verschiedene Technologien und Verfahren dar, wobei hier klas-sische Themen der KI und „neuere“ Ansätze unterschieden werden können. Zwischendiesen beiden Richtungen steht insbesondere im Teilbereich des Maschinellen Lernens ein(Paradigmen)Wechsel von symbolischer Repräsentation, wie sie in Regelbasierten Systemenzur Anwendung kommt, hin zu sub-symbolischer Wissensdarstellung, wie sie NeuronaleNetze nutzen und welche keine explizite Darstellung der erlernten Lösung erlaubt [La11].Der Begri  des Maschinellen Lernens steht dabei fast schon synonym für diese „neueren“Ansätze. Er beschreibt die Fähigkeit künstlicher Systeme, aus großen Datenmengen Musterund zugrundeliegende Regeln abzuleiten. Ergebnis dieses Lernprozesses ist dann ein Modell,das für die erfolgreiche Bearbeitung unbekannter Daten oder Probleme eingesetzt werdenkann. Eine Technologie, die derartige Lernprozesse erlaubt, sind künstliche neuronale Netze.Hierbei handelt es sich um Netzwerke aus künstlichen Neuronen, die in ihrer Funktion denbiologischen Neuronen des menschlichen Gehirns nachempfunden sind. Die künstlichenNeuronen sind innerhalb des Netzwerks miteinander über Kanten verbunden. Sie nehmenInformation auf, verarbeiten diese und geben sie anschließend innerhalb des Netzes weiter.In Bezug auf den Lernprozess künstlicher Systeme lassen sich drei grundlegende Typen desLernens unterscheiden, die zum Trainieren eines Modells eingesetzt werden. Einerseits dasÜberwachte Lernen (Supervised Learning), bei dem bereits bekannt ist, welches Ergebnisvon einem Computer auf eine bestimmte Eingabe hin erwartet wird. Die tatsächlicheAusgabe des Computers wird mit dieser Erwartung verglichen und es werden Rückschlüssegezogen, wie das Modell modiﬁziert werden muss, um Erwartung und Ausgabe anzugleichen.Im Gegensatz dazu steht Unüberwachtes Lernen (Unsupervised Learning), bei dem sichdas Modell basierend auf der Ähnlichkeit von Eingaben selbständig verändert. Diese Artdes Lernens kommt insbesondere dann zum Einsatz, wenn keine bereits klassiﬁziertenDaten, die zum Training des KI-Systems verwendet werden können, vorhanden sind. DasVerstärkende Lernen (Reinforcement Learning) stellt den dritten grundlegenden Lerntypdar. Hierbei werden die Reaktionen eines lernenden Agenten auf bestimmte Eingabedatenbewertet. Basierend auf der erhaltenen Bewertung passt das System seine Reaktionen an.In modernen KI-Systemen nutzen diese Ansätze häuﬁg eine sub-symbolische Abbildungvon Wissen, d. h., dass das vom System erworbene Wissen nur implizit repräsentiert wird,z. B. durch unterschiedliche Kantengewichte in einem Neuronalen Netz, und konkreteLösungsmuster nicht ersichtlich sind. Demgegenüber steht die symbolische KI mit einerexpliziten Darstellung des Wissens und der Anwendung von Logik als zentralem Prinzip.Typische Themenbereiche dieser klassischen KI sind beispielsweise Suchverfahren, Planen,Wissensrepräsentation (u. a. mit Entscheidungsbäumen) und Inferenz unter der Verwendungvon Logik. [Er13]326 Stefan Seegerer et al.AI Unplugged 33 Künstliche Intelligenz als Thema informatischer BildungMit der steigenden gesellschaftlichen Relevanz des Themas Künstliche Intelligenz, welchevor allem mit großen Fortschritten im Bereich Maschinelles Lernen zusammenhängt, wird KInun auch vermehrt in Bildungskontexten diskutiert und thematisiert, etwa in CS4All Kursenan Hochschulen [SR18]. Zunehmend gewinnt das Thema aber auch bei der Gestaltungvon Schulcurricula an Bedeutung (z.B. [CS17] oder [In18]), so hat beispielsweise ChinaKI landesweit zum Unterrichtsinhalt in allgemeinbildenden Schulen gemacht [YC18]. Umeine Vereinheitlichung der curricularen Inhalte zu erreichen, wurden zudem in Anlehnungan die Big Ideas of K12 Computing [Be18] bereits Vorschläge für „Big Ideas“ derKünstlichen Intelligenz gemacht [To19]. Auch ein Konzept von Kandlhofer et al., dasmit der Vermittlung von KI Grundlagen bereits im Kindergarten beginnt, zielt auf diezugrundeliegenden Konzepte und eineAI Literacyab [Ka16].Gerade zu Themen der klassischen KI existiert bereits eine Reihe von Lernmaterialien,beispielsweise bietet Informatik im Kontext (IniK) eine Unterrichtsreihe zum ThemaChatbots, welche mit Weizenbaums ELIZA arbeitet [WH08]. Aber auch sub-symbolischenAnsätze werden in verschiedenen Projekten für den Unterricht aufbereitet. Kahn et al.präsentieren z. B. ein Konzept, das es Schülerinnen und Schülern erlaubt, verschiedeneKI-Dienste in der Programmierumgebung Snap!zu verwenden [Ka18], und Google stellteine Sammlung von Experimenten bereit, mit denen Lernende KI ausprobieren können3.AuchMachine Learning for Kidsbietet Online-Demos, in denen Schülerinnen und SchülerKlassiﬁkationsmodelle trainieren und diese im Anschluss in Scratch verwenden können4.Daneben existieren Ansätze, die Roboter zur Vermittlung von KI-Themen einsetzen5.Derartige Angebote decken häuﬁg jedoch nicht das ganze Feld der Künstlichen Intelligenzab, sondern fokussieren einzelne Teilbereiche, sodass es bisher nur wenige Ansätze gibt,wie das Feld der Künstlichen Intelligenz in seiner Breite und mit einem umfassendenUnterrichtskonzept schülernah vermittelt werden kann. Zudem wird in vielen Projekten vorallem eine anwendungsorientierte Perspektive eingenommen, insbesondere wenn moderneAnsätze, wie Neuronale Netze thematisiert werden. Die zugrundeliegenden Konzepteder Künstlichen Intelligenz sind in der reinen Anwendungssituation allerdings schwer zuerfassen, sodass KI-Systeme bei derartigen Vermittlungskonzepten eine Blackbox bleiben.Um auch die technologische und gesellschaftlich-kulturelle Perspektive einzunehmen, istein Blick auf zugrundeliegende Ideen und Konzepte notwendig (vgl. [Br16]).Die entwickelten Unplugged Aktivitäten zielen aus diesem Grund darauf ab, die derKünstlichen Intelligenz zugrundeliegenden Konzepte zugänglich zu machen, ohne dabeidie Breite des Feldes zu vernachlässigen. Gleichzeitig wird auf eine stark formalisierte,mathematische Darstellung verzichtet, welche den Zugang für Schülerinnen und Schülermaßgeblich erschweren würde.3https://experiments.withgoogle.com/4https://machinelearningforkids.co.uk/5z.B. Cozmo Link (https://www.anki.com/de-de/cozmo)AI Unplugged – Wir ziehen Künstlicher Intelligenz den Stecker 3274 Stefan Seegerer, Annabel Lindner, Ralf Romeike4 AI Unplugged AktivitätenCS Unplugged stellt verschiedene Aktivitäten bereit, die Lernenden jeden Alters Ideen undKonzepte der Informatik näher bringen. Es geht darum, Konzepte der Informatik enaktiv zubegreifen. CS Unplugged Aktivitäten werden seit mittlerweile gut 30 Jahren im Kontextinformatischer Bildung verwendet [BRC12], der erfolgreiche Einsatz von Unplugged-Aktivitäten ist dabei in allen Altersstufen möglich. So werden entsprechende Aktivitätenetwa in einer Sequenz für die Einführung in die Programmierung in der Grundschule[GFH17], in außerschulischen Lernlaboren [GGH15] oder in der Erwachsenenbildungeingesetzt [GHS12]. Im Bereich KI gibt es dazu bisher wenig Material, obwohl sichUnplugged Aktivitäten für diesen Bereich aufgrund seiner Komplexität und Vielseitigkeitgut eignen. Im Folgenden werden Ablauf und theoretischer Hintergrund von fünf AIUnplugged Aktivitäten vorgestellt, welche verschiedene elementare Konzepte hinter KI-Systemen verdeutlichen und sich an den Kriterien von Nishida et al. [Ni09] orientieren.Abb. 1: Beispiel einer Aktivität zur Veranschaulichung von KlassiﬁkationstrategienAktivität 1: Klassiﬁkation mit Entscheidungsbäumen – Das Gute-Ä chen-Böse-Ä chen-Spiel.Wie tri t ein Computer selbstständig Entscheidungen? Wie entscheidetein Computer, ob eine Person sportlich ist, einen Kredit erhalten sollte usw.? Solche Klassi-ﬁkationen sind eine häuﬁge Anwendung von KI. In dieser Aktivität haben Schülerinnenund Schüler die Möglichkeit, selbst ein Klassiﬁkationsmodell mithilfe eines Entscheidungs-baumes zu erstellen (siehe Abb.1). Die Schülerinnen und Schüler untersuchen, wie dieZugehörigkeit von Beispielelementen zu einer Kategorie zustande gekommen ist. Dazuentwickeln Sie in Paaren Kriterien, mit denen neue Elemente klassiﬁziert werden können.Im Anschluss werden die entstandenen Modelle mit neuen Beispielen getestet und dieGenauigkeit der Vorhersage bestimmt. Aus den verschiedenen Modellen wird dann dasbeste Modell ausgewählt.Aktivität 2: #deeplearning – Erkennen von Bildern mit Neuronalen Netzen.Wiekann ein Computer eigentlich Dinge erkennen? Wie entscheidet ein Computer, ob aufeinem Foto ein Hund, eine Katze oder eine Maus abgebildet ist? Wie kann er Gebäude vonMenschen unterscheiden? Gegenstände oder Objekte anhand ihrer Form bzw. ihres Äußeren328 Stefan Seegerer et al.AI Unplugged 5zu erkennen ist für Menschen sehr leicht. Für den Computer, der beispielsweise in einemselbstfahrenden Auto die Objekte in seiner Umgebung erkennen muss, stellt dies jedoch einekomplexe Aufgabe dar. In dieser Aktivität haben Kinder und Jugendliche die Möglichkeit,selbst nachzuvollziehen, wie Computer den Inhalt von Bildern erkennen. Zudem wird derBegri  Deep Learning, der den Einsatz von vielschichtigen, komplexen Neuronalen Netzenin KI-Systemen bezeichnet, aufgegri en.Aktivität 3: Reinforcement Learning – Schlag das Krokodil.Computer, die Schachspielen und auch Menschen schlagen können, sind mittlerweile bekannt. Das chinesischeBrettspiel Go galt hingegen lange Zeit als so komplex, dass nur Menschen es meistern können– so lange, bis Google mit AlphaGo menschliche Proﬁ-Spieler das Fürchten lehrte. In dieserAktivität wird beleuchtet, wie Computer selbst Strategien für Spiele entwickeln, obwohl sienur die Spielregeln und somit nur die Liste möglicher Züge kennen. Je zwei Schülerinnenbzw. Schüler spielen eine Partie “Mini-Schach” gegeneinander. Dabei übernimmt eineSchülerin bzw. ein Schüler die Rolle eines “Papier”-Computers. Der Computer wählt seineZüge zunächst zufällig, lernt aber nach und nach mit einem Token-System, welche Zügeihm zum Sieg verhelfen und welche in einer Niederlage enden. Mit Hilfe der Strategie, diesich auf diese Weise entwickelt, wird der Computer mit der Zeit immer besser.Aktivität 4: Back to the Roots – Krokodil-Schach und klassische KI.Die bisherigenÜbungen beschäftigen sich intensiv mit lernenden KI-Systemen. Das ist jedoch noch nichtalles, was die KI zu bieten hat: Die Ursprünge der KI liegen in der Logik und der Idee,Wissen mathematisch zu formalisieren und es auf diese Weise für Maschinen zugänglichzu machen. Welche Unterschiede es zwischen lernender KI und klassischen Ansätzen gibtund wo die Grenzen der Systeme liegen, wird in dieser Aktivität aufgezeigt. Dazu wird dievorangehende Reinforcement Learning Aktivität mit einem Expertensystem umgesetzt undso die stark unterschiedlichen Herangehensweisen verdeutlicht. Wie in Aktivität 3 spielen jezwei Schülerinnen bzw. Schüler eine Partie “Mini-Schach” gegeneinander. Dabei übernimmteine Schülerin bzw. ein Schüler die Rolle eines “Papier”-Computers. Im Gegensatz zurvorherigen Aktivität lernt der Computer hier sein Verhalten jedoch nicht, sondern arbeitetnach Regeln der Logik. Wird die Aktivität direkt mit der vorangehenden ReinforcementLearning-Version kombiniert, bietet es sich an, dass ein Rollentausch stattﬁndet.Aktivität 5: “Ach wie gut, dass niemand weiß, dass ich ein Computer bin!” - DerTuring-Test.Welches Verhalten muss eine Maschine zeigen, um als intelligent zu gelten?Was bedeutet Künstliche Intelligenz genau? Diese Fragen beschäftigen Forscher seit denAnfängen der Künstlichen Intelligenz. Alan Turing hat 1950 mit dem Turing-Test einVerfahren entwickelt, wie man feststellen könnte, ob eine Maschine intelligent ist. DieseAktivität, entlehnt aus den ursprünglichen Unplugged Materialien [BWF98], stellt mitSchülerinnen und Schülern den Turing-Test nach und soll zur Diskussion anregen, obAI Unplugged – Wir ziehen Künstlicher Intelligenz den Stecker 3296 Stefan Seegerer, Annabel Lindner, Ralf RomeikeComputer tatsächlich so etwas wie Intelligenz zeigen können. Zudem wird deutlich, wieleicht man durch sorgfältig gewählte Beispiele von “Intelligenz” von einer Maschine in dieIrre geführt werden kann.5 Einbindung in den UnterrichtZiel des Unterrichts ist das Entdecken und Ergründen der zugrundeliegenden Konzepte imBereich Künstlicher Intelligenz. Dabei explorieren die Schülerinnen und Schüler spielerischverschiedene Phänomene rund um das Thema. Denkbar ist sowohl die Integration mehrererAktivitäten in eine Einheit als auch einzelne Unterrichtsstunden zu ausgewählten Aspekten.Im Folgenden wird ein möglicher Ablauf der Sequenz grob skizziert, anschließend eineStunde beispielhaft genauer ausgeführt. Zielgruppe sind insbesondere Schülerinnen undSchüler der Sekundarstufe 1 und 2, obwohl einige Aktivitäten auch (eventuell angepasst) inanderen Lernszenarien eingesetzt werden können.5.1 UnterrichtssequenzDie im Folgenden beschriebene Sequenz adressiert mehrere Kompetenzbereiche, insbeson-dere aus den Inhaltsbereichen Informatiksysteme und Informatik, Mensch und Gesellschaft,sowie den Prozessbereichen Begründen und Bewerten und Modellieren und Implementieren,allerdings kommen auch die anderen Inhalts- und Prozessbereich der BildungsstandardsInformatik in der Sequenz in Ansätzen zum Tragen [Pu08]. Die in Tabelle1überblicksartigdargestellte Sequenz verdeutlicht, dass Künstliche Intelligenz vielfältige Formen annehmenkann und aktuelle KI-Systeme auf stark spezialisierte Anwendungen begrenzt sind. Zudemwerden gesellschaftlich-soziale Auswirkungen von KI-Systemen thematisiert und illustriert,dass Künstliche Intelligenz weniger „magisch“ ist, als man vielleicht zunächst annehmenwürde.Zu Beginn der Sequenz wird das Thema KI anhand der Klassiﬁkation von Objekteneingeführt, welche etwa bei selbstfahrenden Autos von Bedeutung ist. Nach dem Einstiegdient die Bilderkennung als Kontext für Maschinelles Lernen mit neuronalen Netzen, ehediese bisher thematisierten, neueren Ansätze klassischen Ansätzen gegenübergestellt werden.Dazu wird anhand eines Spiels der Unterschied zwischen Lernverfahren und RegelbasiertenSystemen herausgestellt und die Breite des Themenfeldes Künstliche Intelligenz angedeutet.Zum Abschluss wird das Thema reﬂektiert und die Frage in den Mittelpunkt gestellt,inwieweit Computer wirklich intelligent sein können.5.2 UnterrichtsstundeExemplarisch wird die erste Stunde der Sequenz (45 Minuten) geschildert, diese kann aucheigenständig zum Einsatz kommen. Die AktivitätKlassiﬁkation mit Entscheidungsbäumen:330 Stefan Seegerer et al.AI Unplugged 7Stunde Stundenthema Beschreibung AI Unplugged1Einstieg in denThemenbereichKIDie Schülerinnen und Schüler explorieren dasKonzept Maschinellen Lernens und beispiel-hafte Auswirkungen auf die Gesellschaft.Aktivität 12-3Neuronale Net-ze und DeepLearningAnhand der Bildklassiﬁzierung mit Neurona-len Netzen ergründen die Schülerinnen undSchüler ein weiteres bekanntes Gebiet der KIund analysieren die Funktionsweise NeuronalerNetze. Sie lernen außerdem, was hinter demBegri  Deep Learning steckt.Aktivität 24-5MaschinellesLernen undklassische KIAnhand von zwei Strategien für dasselbeSpiel vergleichen die Schülerinnen und Schüler„neue“ und klassische Ansätze der KI.Aktivität 3 und 46Was ist künstli-che Intelligenz?Mithilfe des Turing-Tests gehen Schülerinnenund Schüler der Frage nach, ob Computer wirk-lich Intelligenz zeigen können und reﬂektierenethische Aspekte des Themas KI.Aktivität 5Tab. 1: Exemplarischer UnterrichtsverlaufDas Gute-Ä chen-Böse-Ä chen Spiel, die in dieser Stunde zum Einsatz kommt, erlaubtdas Erstellen von Klassiﬁkationsmodellen unterschiedlicher Komplexität. Schülerinnenund Schüler können nach dieser Stunde zum einen erklären, wie ein Computer anhandeiner bereits klassiﬁzierten Beispielmenge lernt, Elemente erfolgreich zu klassiﬁzieren,zum anderen können sie den Trainingsvorgang eines Klassiﬁkationssystems beschreibenund die Bedeutung von Trainings- und Testdaten herausstellen. Des Weiteren können realeSituationen beschrieben werden, in welchen Entscheidungen von Künstlicher Intelligenzproblematisch sein können. Die Stunde stellt grundlegende Aspekte Maschinellen Lernensvor und beleuchtet gleichzeitig gesellschaftliche Problemstellungen, die aus der Verwendungvon KI-Systemen für Klassiﬁkationsaufgaben entstehen können. Folgende Gliederung derUnterrichtsstunde ist dabei möglich:•Zum Einstieg spielen die Schülerinnen und Schüler zunächst eine einfache Versiondes Ä chen-Spiels, um das Spielprinzip zu verdeutlichen.•Die Ergebnisse des ersten Durchgangs werden ausgewertet und das beste Klassiﬁkati-onsmodell ausgewählt.•In einer weiteren Spielrunde kommt nun eine komplexere Spielversion zum Einsatz.•Auch dieser Durchgang wird ausgewertet und das beste Klassiﬁkationsmodell be-stimmt.•Mithilfe einer Lernaufgabe, die den Abstraktionsprozess vom konkreten Spiel hinAI Unplugged – Wir ziehen Künstlicher Intelligenz den Stecker 3318 Stefan Seegerer, Annabel Lindner, Ralf Romeikezum allgemeinen maschinellen Lernprozess ermöglicht, wird die Aktivität dekontex-tualisiert.•Abschließend werden die Ergebnisse der Lernaufgabe diskutiert und auf das Beispielder Teachable Machine6übertragen.Ebenso wie diese Aktivität eignen sich auch die anderen Aktivitäten der Sequenz, etwaReinforcement Learning: Schlag das KrokodilundBack to the roots: Krokodil-Schach undklassische KIfür den isolierten Einsatz in einzelnen Unterrichtsstunden.6 Resümee und AusblickAI Unplugged wurde in einem Schulversuch mit einer neunten und einer zehnten Klasse derRealschule erprobt. Obgleich die Schülerinnen und Schüler eine rudimentäre Vorstellungdes Begri s Künstliche Intelligenz hatten, verfügten sie doch über keine inhaltlichenVorkenntnisse in diesem Themenbereich. So verbinden viele Schülerinnen und Schüler denBegri  vor allem mit selbstständig agierenden, lernfähigen Robotern.Bei der Durchführung erfassten die Schülerinnen und Schüler die Funktionsprinzipien derAktivitäten schnell und umfassend, bei der Arbeit in Teams waren die Schülerinnen undSchüler konzentriert und mit Spaß bei der Sache. Als es beispielsweise galt, Regeln fürdie Klassiﬁkation von Ä chen aufzustellen (Aktivität 1), entwickelte sich ein Wettbewerbdarum, das beste Klassiﬁkationsmodell zu erstellen. Zudem wurde rege diskutiert, wie fairein derartiges Klassiﬁkationsmodell sein kann. Bei Fragen und Problemen besprachen sichdie Schülerinnen und Schüler mit ihren Mitschülerinnen und Mitschülern und erarbeitetenLösungen im Team ohne die Hilfe der Lehrkraft zu beanspruchen. Auch Schülerinnen undSchüler, die dem Konzept „Informatik ohne Computer“ am Anfang skeptisch gegenüberstanden, konnten durch die Aktivitäten sehr gut motiviert werden und zeigten anschließendgroßes Interesse am Thema.Im Rahmen der anschließenden Dekontextualisierung war bei den Schülerinnen undSchülern ein deutlicher Erkenntniszuwachs feststellbar: Nach der Durchführung von AIUnplugged Aktivitäten waren die Schülerinnen und Schüler in der Lage, den Begri  desMaschinellen Lernens zu erläutern und konnten auf dieser Basis zudem gesellschaftlicheImplikationen Künstlicher Intelligenz diskutieren. Sie erkannten die Zusammenhängezwischen individuellen Aktivitäten und den zugrundeliegenden Konzepten der KünstlichenIntelligenz sehr schnell und konnten Parallelen zu Phänomenen, die sie aus dem Alltagkannten (z. B. Captchas, Google Bildersuche etc.), ziehen. Dies sorgte für Aha-E ekte,teilweise sogar schon während der Aktivitäten, und ermöglichte den Schülerinnen undSchülern die Grenzen solcher Systeme zu erkennen.6https://teachablemachine.withgoogle.com/332 Stefan Seegerer et al.AI Unplugged 9Es zeigt sich, dass die AI Unplugged Aktivitäten gut geeignet sind, um das komplexe ThemaKünstliche Intelligenz umfassend darzustellen. Sie erlauben den handlungsorientiertenZugang zum Thema KI, ohne jedoch auf einen technischen Rahmen angewiesen zusein. Das Thema kann damit in reduzierter Komplexität vermittelt werden und bleibtgleichzeitig anschlussfähig für weitergehende Vertiefungen, die sich unterschiedlichsterSoftwarewerkzeuge bedienen können. Zudem bieten die Unplugged Aktivitäten auchLehrkräften, die KI als Unterrichtsthema aufgrund der thematischen Komplexität und dertechnischen Hürden bei der Einrichtung von Programmbibliotheken usw. bisher kritischgegenüber standen, eine gute Möglichkeit, das Thema in den schulischen Unterrichtzu integrieren. Die Konzeption der Aktivitäten ermöglicht dabei sowohl den Einsatz alszusammenhängende Unterrichtssequenz zu Künstlicher Intelligenz als auch den individuellenEinsatz „zwischendurch“ oder als Ergänzung zu anderen Ansätzen und Zugängen zu KI.Die Materialien sind unter Creative Commons Lizenz online abrufbar.7Im Onlineangebotﬁnden sich zudem weitere Materialien und Links zum Thema, die ebenfalls im Unterrichtzum Einsatz kommen können.Literaturverzeichnis[Be18]Bell, Tim; Tymann, Paul; Yehudai, Amiram et al.: The Big Ideas in Computer Science forK-12 Curricula. Bulletin of EATCS, 1(124), 2018.[Br16]Brinda, Torsten; Diethelm, Ira; Gemulla, Rainer; Romeike, Ralf; Schöning, Johan-nes; Schulte, Carsten: Bildung in der digitalen vernetzten Welt–Dagstuhl-Erklärung.URL:https://www.gi.de/aktuelles/meldungen/detailansicht/article/dagstuhl-erklaerung-bildung-in-der-digitalen-vernetzten-welt.html[15.01. 2019], 2016.[BRC12]Bell, Tim; Rosamond, Frances; Casey, Nancy: Computer Science Unplugged and RelatedProjects in Math and Computer Science Popularization. In: The Multivariate AlgorithmicRevolution and Beyond. Springer, Berlin, Heidelberg, S. 398–456, 2012.[Bu18]Bundesregierung: Strategie Künstliche Intelligenz der Bundesregierung. URL:https://www.bmbf.de/files/Nationale_KI-Strategie.pdf[30.1.2019], 2018.[BWF98]Bell, Tim; Witten, Ian; Fellows, Mike: Computer Science Unplugged: O -line activitiesand games for all ages. Citeseer, 1998.[CS17]CSTA: About the CSTA K-12 Computer Science Standards. URL:https://www.csteachers.org/page/standards[15.01.2019], 2017.[Er13]Ertel, Wolfgang: Grundkurs Künstliche Intelligenz. Springer Fachmedien Wiesbaden,2013.[GFH17]Geldreich, Katharina; Funke, Alexandra; Hubwieser, Peter: Willkommen im Program-mierzirkus - Ein Programmierkurs für Grundschulen. In: Informatische Bildung zumVerstehen und Gestalten der digitalen Welt, Proceedings der 17. GI-Fachtagung Informatikund Schule, INFOS 2017, 13.-15. September 2017, Oldenburg. S. 327–334, 2017.7https://ddi.cs.fau.de/schule/ai-unpluggedAI Unplugged – Wir ziehen Künstlicher Intelligenz den Stecker 33310 Stefan Seegerer, Annabel Lindner, Ralf Romeike[GGH15]Gallenbacher, Jens; Gose, Karola; Heun, Dominik: Gestrandet auf der Schatzinsel - Schätzeheben mit Informatik in der Grundschule. In: Informatik allgemeinbildend begreifen, INFOS2015, 16. GI-Fachtagung Informatik und Schule, 20.-23. September 2015, Darmstadt,Germany. S. 101–109, 2015.[GHS12]Garcia, Daniel; Harvey, Brian; Segars, Luke: CS principles pilot at University of California,Berkeley. ACM Inroads, 3(2):58–60, 2012.[In18]International Society for Technology in Education (ISTE): Bold New Program HelpsTeachers and Students Explore the Power of AI. URL:https://www.iste.org/explore/articleDetail?articleid=2229[15.01. 2019], 2018.[Ka16]Kandlhofer, Martin; Steinbauer, Gerald; Hirschmugl-Gaisch, Sabine; Huber, Petra: Artiﬁcialintelligence and computer science in education: From kindergarten to university. In: 2016IEEE Frontiers in Education Conference (FIE). IEEE, S. 1–9, 2016.[Ka18]Kahn, Ken; Megasari, Rani; Piantari, Erna; Junaeti, Enjun: AI Programming by Childrenusing Snap! Block Programming in a Developing Country. 2018.[La11]Langley, Pat: The changing science of machine learning. Machine Learning, 82(3):275–279,Feb 2011.[Mc06]McCarthy, John; Minsky, Marvin; Rochester, Nathaniel; Shannon, Claude: A proposalfor the dartmouth summer research project on artiﬁcial intelligence, August 31, 1955. AImagazine, 27(4):12, 2006.[Ni09]Nishida, Tomohiro; Kanemune, Susumu; Idosaka, Yukio; Namiki, Mitaro; Bell, Tim; Kuno,Yasushi: A CS unplugged design pattern. ACM SIGCSE Bulletin, 41(1):231–235, 2009.[Pr18]Preuss, Susanne: Die Hälfte der Deutschen weiß nicht, was KI ist. URL:https://www.faz.net/aktuell/wirtschaft/kuenstliche-intelligenz/die-haelfte-der-deutschen-weiss-nicht-was-ki-ist-15898006.html[15.01. 2019], 2018.[Pu08]Puhlmann, Hermann; Brinda, Torsten; Fothe, Michael; Friedrich, Ste en; Koerber, Bern-hard; Röhner, Gerhard; Schulte, Carsten: Grundsätze und Standards für die Informatik inder Schule. Bildungsstandards Informatik für die Sekundarstufe I. Beilage zu LOG IN,(150/151), 2008.[SR18]Seegerer, Stefan; Romeike, Ralf: Was jeder über Informatik lernen sollte – Eine Analysevon Hochschulkursen für Studierende anderer Fachrichtungen. In: HDI 2018. Potsdam, S.13–28, 2018.[To19]Touretzky, David; Gardner-McCune, Christina; Martin, Fred; Seehorn, Deborah: Envi-sioning AI for K-12: What should every child know about AI? In: „Blue sky talk“ at theThirty-Third AAAI Conference on Artiﬁcial Intelligence (AAAI-19). 2019.[WH08]Witten, Helmut; Hornung, Malte: Chatbots Teil 1: Einführung in eine Unterrichtsreihe zuInformatik im Kontext (IniK). LOG IN, 28(154/155):51–60, 2008.[YC18]Yu, Yanfang; Chen, Yuan: Design and Development of High School Artiﬁcial IntelligenceTextbook Based on Computational Thinking. Open Access Library Journal, 5(09):1, 2018.334 Stefan Seegerer et al.<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 Eine Unterrichtssequenz zum Einstieg in Konzepte des maschinellen Lernens  Kerstin Strecker1, Eckart Modrow2   Abstract: In diesem Beitrag soll ein Weg aufgezeigt werden, um Grundprinzipien maschinellen Lernens so zu reduzieren, dass sie in der Schule praktisch umzusetzen sind. Dafür werden LEGO-NXT-Roboter so programmiert, dass sie „aus Erfahrungen lernen“.  Keywords: LEGO-Roboter, maschinelles Lernen, Entmystifizierung des „schlauen“ Computers, Konditionierung, Hebb-Regel  1 Entmystifizierung des „schlauen“ Computers Grundschüler3, denen ein Computer Rechenaufgaben stellt und ggf. ein positives Feedback gibt, wurden gefragt, weshalb der Computer immer die korrekte Lösung kennt oder ob er sich auch irren kann. Die einvernehmliche Antwort war, dass Computer sich nicht irren, weil sie „schlau“ sind, zumindest schlauer als die Schülerinnen und Schüler. Erfahren sie später in der Sekundarstufe, wenn sie z.B. mit digitaler Elektronik einen Parallel-Addierer im Informatikunterricht gebaut haben, dass sich ein Computer deshalb nicht „verrechnen“ kann, weil die Leitungen starr gesteckt sind und deterministisch immer derselben Funktionalität folgen, dann erscheint ihnen diese Maschine sehr viel weniger „schlau“. Stattdessen könnten sie jetzt einen Schachcomputer für „intelligent“ halten, bis sie lernen, dass in einem Entscheidungsbaum einfach sehr viele Möglichkeiten durchprobiert werden und dass eine der möglichen Aktionen gewählt wird, die zu einem positiven Ergebnis (Gewinn des Spiels) führt. Auch hier folgt der Rechner einem deterministischen Algorithmus. In beiden Beispielen erscheinen die durch einfache Algorithmen gesteuerten Systeme nur deshalb „intelligent“, weil die Nutzer von deren Funktionsweise nichts wissen (vgl. [Br93]). Allerdings können beide Systeme noch nichts „dazulernen“.  Viele Anwendungen auf dem Smartphone der Lernenden scheinen aber zu lernen. Die Wortergänzung passt sich immer mehr den speziellen Ausdrücken der Schülerinnen und Schüler an, ebenso die Autovervollständigung und weitere. Erst wenn Schülerinnen und Schüler im Informatikunterricht mit Datenbanken arbeiten, verstehen sie, dass es sich hier um einfache Erweiterungen der Datenbasis handelt, also um INSERT-Befehle unter                                                         1 Universität Göttingen, Didaktik der Informatik, Goldschmidtstr. 7, 37077 Göttingen, kerstin.strecker@informatik.uni-goettingen.de 2 Universität Göttingen, Didaktik der Informatik, Goldschmidtstr. 7, 37077 Göttingen, emodrow@informatik.uni-goettingen.de 3 Es wurde eine zweite Klasse mit 21 Grundschülern befragt. Aus dem Ergebnis kann keine allgemeingültige Aussage abgeleitet werden. cba doi:10.18420/infos2019-34Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 335 16 Vorname1 Nachname1 und Vorname2 Nachname2 bestimmten Bedingungen. Der scheinbare Wissenserwerb wird darauf reduziert, dass sich eine Datenbasis durch das Feedback der Benutzer erweitert. Im Informatikunterricht lassen sich also viele scheinbar „intelligente“ Systeme entmystifizieren. Das gilt auch für die künstliche Intelligenz. Dieser viel diskutierte Bereich der Informatik wird über kurz oder lang die Schulinformatik erreichen. Er erscheint sehr viel weniger mystisch, wenn gezeigt wird, dass die aktuellen Feed-Forward-Systeme im Wesentlichen Funktionen anwenden, deren Parameter durch viele Beispiele angepasst werden. Wir beschreiben hier einige Beispiele, in denen die Schülerinnen und Schüler lernen, dass auch „neuronale“ Systeme einfach nur deterministischen, vorgegebenen Regeln folgen. 2 Bestärkendes Lernen durch Zuordnung Wahrnehmung - Aktion Bei dem Ansatz des bestärkenden Lernens „lernt“ ein System in einer Lernphase oder Trainingsphase anhand von Beispielen. Dazu ist ein Feedback in der Lernphase notwendig. Wir nutzen folgendes Beispiel dieses Ansatzes dazu, um die Begriffe der Wahrnehmung und Aktion einzuführen. Wir betrachten ein System, welches mit Hilfe von Sensoren Wahrnehmungen als Eingabe erhält. Dabei sei eine Wahrnehmung eine Kombination der aktuellen Werte aller Sensoren. Gibt es beispielsweise einen Sensor, der hell und dunkel unterscheiden kann und einen Sensor, der in drei Abstufungen Lautstärke unterscheiden kann (leise, mittlere_Lautstärke, laut), dann verfügt das System über sechs verschiedene Wahrnehmungen (hell-leise, hell-mittlere_Lautstärke, hell-laut, dunkel-leise, dunkel-mittlere_Lautstärke, dunkel-laut).   In unserem Programmierbeispiel betrachten wir einen kleinen schwarzen Ball, der sich in einem farbigen Gebiet befindet (Abbildung 1). Dabei kann der Benutzer den grünen Balken mit der Maus von links nach rechts bewegen, ähnlich einem Schläger im Spiel „Pong“.    Abbildung 1 : Ball in farbigem Gebiet 336 Kerstin Strecker, Eckart Modrow Der Kurztitel des Beitrags 17 Unser Ball soll vier Wahrnehmungen unterscheiden können, nämlich ob er die Farben Rot (1), Blau (2), Grün (3) oder nur Weiß (4) berührt. Weiterhin kann dieser Ball drei verschiedene Aktionen ausführen: er kann langsam vorwärtsfliegen (1), abprallen (2) oder schnell vorwärtsfliegen (3). Eine Zuordnungsliste zwischen Wahrnehmung (1,2,3,4) und Aktion (1,2,3) ist anfangs leer. Der Ball prüft ständig seine Wahrnehmung und führt die Aktion aus, die er in der Zuordnungsliste für diese Wahrnehmung findet. Findet er keine Zuordnung, führt der Ball Aktion 1 aus und „fragt“ anschließend, ob das richtig war. Verneint der Benutzer, macht der Ball die Aktion rückgängig und führt Aktion 2 aus. Auch jetzt fordert er das Feedback des Benutzers. Wir gehen davon aus, dass eine der ausgeführten Aktionen ein positives Feedback bekommt. Diese Aktion wird in der Zuordnungsliste gespeichert. Am Ende der Trainingsphase hat der Roboterball jeder Wahrnehmung eine Aktion zugeordnet, die er fortan ausführt. Damit ist das Spiel ganz unterschiedlich konfigurierbar. Der Ball könnte bei Grün (am Schläger) abprallen und bei Blau (am Rand) und bei Rot seine Geschwindigkeit erhöhen. Er könnte aber auch so trainiert werden, dass er bei Rot abprallt und bei Grün seine Geschwindigkeit erhöht, usw. 3 Systeme mit „Neuron“ In dem obigen Beispiel „lernte“ unser Ball sein Verhalten durch Feedback von außen. Jetzt wollen wir Systeme betrachten, die ihre Konfiguration selbst so verändern, dass sie in ihrer Umwelt optimal (re-)agieren (vgl. [MP47]). Unser Beispiel entspricht der klassischen Konditionierung des Pawlowschen Hundes [PH19]. Wir modellieren ein Neuronales Netz als gerichteten Graphen, wobei die Knoten Zellkörper repräsentieren und die Kanten die Verbindungen zwischen den Neuronen. Im Inneren eines Knotens wird ein Schwellenwert notiert. Die Kanten sind gewichtet. Es existieren außerdem Neuronen, die Signale aus der Außenwelt erhalten. Wir verwenden nur binäre Signale (Null oder Eins). Die Ausgabefunktion eines Neurons ist folgendermaßen definiert: Ist die Summe aller Eingaben multipliziert mit den zugehörigen Kantengewichten größer oder gleich dem Schwellenwert, so ist die Ausgabe Eins, sonst Null. Abbildung 2-4 veranschaulicht die Modellierung.  Im Folgenden betrachten wir stets nur ein Neuron. Wir können das logische ODER bereits als erste Programmierübung auf dem NXT-Roboter implementieren. In der Schule hilft dies, um sich die Funktionsweise langsam zu erarbeiten, hier können wir den Code aus Platzgründen nicht wiedergeben, er ähnelt aber dem Code im nächsten Kapitel, nur ohne Änderung der Gewichte. Eine Unterrichtssequenz zum Einstieg in Konzepte des maschinellen Lernens 337 18 Vorname1 Nachname1 und Vorname2 Nachname2  Abbildung 2: Beispiel UND   Abbildung 3 : Beispiel ODER   Abbildung 4 : Beispiel XOR  338 Kerstin Strecker, Eckart Modrow Der Kurztitel des Beitrags 19 4 Der Roboter „lernt“ Unser Roboter soll lernen, aber wie lernt ein Neuronales Netz? Prinzipiell durch die Entwicklung neuer Verbindungen, Löschen bestehender Verbindungen, Ändern der Gewichtung (der Gewichte von Neuron i zu Neuron j), Anpassen der Schwellenwerte der Neuronen, Hinzufügen von Neuronen oder Löschen von Neuronen (vgl. [Wö06]). In unserem reduzierten Modell betrachten wir im Folgenden nur die Möglichkeit der Änderung der Kantengewichte. Dafür gibt es viele verschiedene Lernalgorithmen. Wir verwenden hier die Hebb-Regel, die besagt, dass das Gewicht zwischen zwei Neuronen dann erhöht wird, wenn beide Neuronen gleichzeitig aktiv sind, also beide Neuronen eine Eins am Ausgang liefern (vgl. [Ro96]). Die Erhöhung der Gewichte zwischen den Knoten i und j wird mit einem + dargestellt.   Abbildung 5 : Hebb-Regel  Betrachten wir unseren NXT-Roboter mit einem „Neuron“.    Abbildung 6 : unser Roboter mit Sensoren und Aktoren  Der Roboter besitzt zwei Motoren, mit deren Hilfe er fahren kann. Die beiden möglichen Aktionen sind „vorwärts“ oder „umdrehen“: Eine Unterrichtssequenz zum Einstieg in Konzepte des maschinellen Lernens 339 20 Vorname1 Nachname1 und Vorname2 Nachname2  Abbildung 7 : Roboteraktionen  Unser Roboter fährt geradeaus. Liefert sein Neuron eine Eins, so dreht er um. Das Neuron hat nun drei Eingänge. Eingang 1 liefert Eins, wenn der Geräuschsensor laut registriert, Null sonst. Eingang 2 liefert Eins, wenn der Ultraschallsensor nah registriert, sonst Null. Eingang 3 ist Eins, wenn der Berührsensor gedrückt ist und Null sonst.    Abbildung 8 : Wahrnehmungen des Roboters    Mit unserer Lernregel nach Hebb gilt: liefert eine der Eingaben den Wert Eins (ist also aktiv) und das Neuron liefert ebenfalls den Wert Eins, so erhöht sich das Kantengewicht zwischen Eingabe und Neuron. Für unser Neuron gelten anfangs folgende Kantengewichte:  340 Kerstin Strecker, Eckart Modrow Der Kurztitel des Beitrags 21  Abbildung 9 : Neuron des Roboters  Ist Eingang 3 aktiv (Berührsensor gedrückt), wird bereits der Schwellenwert erreicht und das Neuron feuert, der Roboter dreht um. Das „angeborene“ Verhalten ist also ein Umdrehen, wenn der Roboter z. B. gegen eine Wand fährt. Die anderen Sensoren beeinflussen die Aktivität des Neurons bisher nicht. Setzen wir nun folgenden Algorithmus um:   Abbildung 10 : Lernalgorithmus  Eine Unterrichtssequenz zum Einstieg in Konzepte des maschinellen Lernens 341 22 Vorname1 Nachname1 und Vorname2 Nachname2 Man kann Folgendes beobachten: Der Roboter fährt geradeaus. Wenn er gegen eine Wand fährt (Berührsensor löst aus), dreht er um und fährt wieder geradeaus. Das Ganze passiert mehrmals hintereinander. Nach einigen Kollisionen scheint der Roboter etwas „gelernt“ zu haben, denn er dreht schon um, bevor er die Wand berührt. Jedes Mal, wenn das Neuron aktiv ist, also bedingt durch den Berührsensor umdreht, liefert Eingang 2 auch eine Eins, weil der Ultraschallsensor registriert, dass etwas nah ist. Nach der Lernregel wird dadurch die Gewichtung zwischen Eingang 2 und dem Neuron erhöht. Irgendwann erreicht das Gewicht so den Wert Fünf. Jetzt dreht der Roboter bereits um, wenn Eingang 2 eine Eins liefert (eine Wand nah ist), weil die Summe den Schwellenwert erreicht und das Neuron feuert. Mit den Worten eines Schülers: Nachdem sich der Roboter ein paar Mal die Nase gestoßen hat, fährt er nicht mehr gegen eine Wand, sondern dreht vorher um4. Der Roboter ist konditioniert wie der Pawlowsche Hund.  5 Der „intelligente“ Ball Steht kein Roboter zur Verfügung, kann man auch andere Systeme zum „Lernen“ bringen. Unser Beispiel ist das Spiel „Pong“ mit einem „intelligenten“ Ball. Unser Ball kann zwei verschiedene Aktionen ausführen: fliegen oder abprallen (Der Code ist aus Platzgründen weggelassen, ist aber wenig komplex). Außerdem hat sein Neuron zwei Eingänge. Eingang 1 liefert nur dann eine Eins, wenn die Farbe Schwarz berührt wird, Eingang 2 nur dann eine Eins, wenn die Farbe Rot berührt wird. Auch hier lassen wir aus Platzgründen den Code weg, er ist aber ähnlich zu dem Befehl „checke Wahrnehmung“ des Roboters.  Unser Schläger hat drei verschiedene „Kostüme“. Er kann schwarz sein, rot oder rot-schwarz gestreift.  Abbildung 11 : drei verschiedene Kostüme  Wir implementieren analog zu unserem Roboter folgende Funktionalität (siehe Abbildung 11).                                                         4 Natürlich wachsen die Gewichte immer weiter, was unnötig ist, wenn der Wert Fünf überschritten ist. Auch kann der Roboter nicht wieder „verlernen“. Hier finden die Schüler aber aller Erfahrung nach selbstständig individuelle Lösungen. 342 Kerstin Strecker, Eckart Modrow Der Kurztitel des Beitrags 23 Was passiert? Ist der Schläger schwarz, kann man damit das ganz normale Pong spielen. Ist der Schläger nur rot, fällt der Ball hindurch und prallt nicht am Schläger ab. Wählt der Benutzer den rot-schwarz-gestreiften Schläger, so prallt der Ball ab (der schwarzen Farbe wegen). Er berührt dabei aber gleichzeitig auch rot. Der Ball „lernt“, auch bei Rot abzuprallen, denn wenn der zweifarbige Schläger eine längere Zeit verwendet wird und danach der nur rote Schläger, prallt der Ball auch an diesem Schläger ab.   Abbildung 12 : Lernalgorithmus  6 Fazit In diesem Beitrag haben wir eine mehrfach erprobte Unterrichtssequenz aufgezeigt, die didaktisch sehr reduziert die Grundprinzipien maschinellen Lernens verdeutlicht und die praktisch umsetzbar ist. Dabei wurden NXT-Roboter so programmiert, dass sie scheinbar „aus Erfahrungen“ lernen. Diese Sequenz soll einen ersten Einblick in die Grundprinzipien neuronaler Netze ermöglichen. Hinzu kommt die Erkenntnis der Schülerinnen und Schüler, dass auch diese einfach nur deterministischen Regeln folgen und Algorithmen abarbeiten. Sehr viel größere Netze, die heute durch die hohe Rechenleistung der Rechner zu realisieren sind, verarbeiten auch sehr viel komplexere Situationen, arbeiten aber nicht prinzipiell anders (vgl. [Go16]). Die Frage, ob das Eine Unterrichtssequenz zum Einstieg in Konzepte des maschinellen Lernens 343 24 Vorname1 Nachname1 und Vorname2 Nachname2 menschliche Gehirn prinzipiell mehr leisten kann oder nicht, bleibt (natürlich) unbeantwortet, erschließt sich den Schülerinnen und Schülern aber als Fragestellung.   Literaturverzeichnis  [Br93] Valentin Braitenberg: “Vehikel – Experimente mit kybernetischen Wesen” Rowohlt-Verlag, 1993 [Go16] Ian Goodfellow, Yoshua Bengio, Aaron Courville : “Deep Learning”, MIT Press, 2016 [MP47] W. McCulloch, W. Pitts: „How We Know Universals: the Perception of Auditory and Visual Forms”, Bulletin of Mathematical Biophysics, Vol. 9, 1947 [PH19] https://de.wikipedia.org/wiki/Pawlowscher_Hund, Zugriff: 30.1.19 [Ro96] Raul Rojas: “Neural Networks. A Systematic Introduction”, Springer-Verlag, 1996 [Wö06]   P. Manoonpong, T. Gend, F.Wörgötter: „Exploring the dynamic walking range of the    biped robot RinBot with an active upper-body component”, IEEE-RAS International     Conference of humanoid robots, 2006      344 Kerstin Strecker, Eckart ModrowKurzbeiträgecbaA. Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 111Was haben Staubsaugerroboter, Spielekonsolen undSmartphones gemeinsam?Schülervorstellungen von Teil-Ganzes-Beziehungen in InformatiksystemenNils Pancratz1, Ira Diethelm1Abstract:In diesem Beitrag wird eine Untersuchung vorgestellt, in der der Frage nachgegangenwird, welche mentalen Teil-Ganzes-Denkstrukturen Schülerinnen und Schüler bei der Erklärungvon Informatiksystemen anwenden. Dazu wird Concept Mapping in leitfadengestützte Interviews,die mittels qualitativer Inhaltsanalyse ausgewertet werden, integriert. Die Ergebnisse einer ersten,pilotierenden Durchführung mit acht Achtklässlerinnen zeigen, dass entsprechende Systeme unterihrer Oberﬂäche häuﬁg als Blackboxes begri en und zu ihrer Erklärung hauptsächlich sicht- undinteragierbare Teile herangezogen werden.Keywords:Denken in Teilen von Ganzen; mentale Ordnungssysteme; Wissensrepräsentationen;Schülervorstellungen; Didaktische Rekonstruktion; Concept Mapping1 Motivation und theoretische GrundlagenKognitionswissenschaftliche Untersuchungen belegen2, dass wir – oft unbewusst –mentaleOrdnungssystemeanlegen, um den über unsere Sinnesorgane wahrgenommenen Informati-onsstrom auf uns möglichst e ektiv zu verarbeiten. Die bei der Zuordnung zu mentalenKategoriensystemen (Taxonomien) angewandten Kriterien implizieren dabei, dass wir Ob-jekte unterbewusst danach kategorisieren, aus welchen einzelnen Teilen sie aufgebaut sind[Ro78,TH84]. Die Identiﬁkation einzelner Teile, die ein ganzheitliches System ausmachen,und ihrer wechselseitigen Beziehungen zueinander ist somit als entscheidende Komponentemenschlicher Kognition zu sehen; entsprechend sind die dadurch angelegtenPartonomien(Teil-Ganzes-Hierarchien) zentraler Bestandteil menschlicher Wissensorganisation [Bi98,654]. Zweifelsfrei ist diePartitionierung– also die strukturelle Zerlegung zusammengesetz-ter Systeme – essentiell für ihr allgemeines Verständnis [TZH08]. Die zugehörige Fähigkeitbezeichnen wir in Hinblick auf ihre Relevanz für die Informatikdidaktik alsDenken in Teilenvon Ganzen. Im Sinne jederkonstruktivistischen Au assung von Lernenist es unerlässlich,im Unterricht an die Vorerfahrungen der Schülerinnen und Schüler (SuS) anzuknüpfen[Du07]. Entsprechend wird die hohe Bedeutung der Erforschung von Schülervorstellungen1Carl von Ossietzky Universität Oldenburg, Didaktik der Informatik, Uhlhornsweg 84, 26129 Oldenburg,vorname.nachname@uni-oldenburg.de2Ein umfassender, übersichtlicher Überblick über entsprechende Untersuchungen wird in [La87, 12-57] gegeben.cba doi:10.18420/infos2019-35Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 347112 Nils Pancratz, Ira Diethelmfür die Didaktische Strukturierung von Informatikunterricht (IU) im Modell derDidak-tischen Rekonstruktion(DR) expliziert [Di11]. Da die mentalen Ordnungssysteme, diewir bereits – individuell über unsere Wahrnehmung und Kognition oder kulturell bspw.über die Sprache – gebildet haben, von sich aus bereits einen enormen Einﬂuss auf dieWahrnehmung neuer Situationen und Eigenschaften haben [Ro78, 29] und dadurch auchauf die Art und Weise, wie wir neue, uns unbekannte Objekte verstehen und begreifen,sind auch Lernvoraussetzungsanalysen, die sie zum Forschungsgegenstand nehmen, imSinne der DR von Bedeutung für die Informatikdidaktik3. Besonders stark zum Tragenkommen die Aspekte des Denkens in Teilen von Ganzen in den curricularen Vorgaben zuIU z. B. beim ThemaInformatiksysteme (IS), denn da zu deren Nutzung „ein grundlegendesVerständnis ihres Aufbaus und ihrer Funktionsweise notwendig [ist]“ [GI08, 37] fandenentsprechende Kompetenzanforderungen über die Bildungsstandards der Gesellschaft fürInformatik [GI08] auch Einzug in die Curricula der einzelnen Länder. Im Sinne einerkonstruktivistischen Au assung von Lernen (s. o.) ist es somit unerlässlich, entsprechendeSchülervorstellungen zu erheben. So soll über das in diesemWork-in-Progress-Beitragvorgestellte Forschungsvorhaben den folgenden Forschungsfragen explorativ am Beispiel derdrei ISStaubsaugerroboter (SR),Spielekonsole (SK)undSmartphone (SP)nachgegangenwerden: Welche Vorstellungen haben und entwickeln SuS von der Funktionsweise und vonder Struktur von zusammengesetzten IS? Welche Teile und welche Ganze identiﬁzieren siedabei? Welche Beziehungen der Komponenten untereinander identiﬁzieren sie dabei?2 Methodischer Ansatz und erste ErgebnisseUm die internalisierten, kognitiven Wissensrepräsentationen zu externalisieren, wird indiesem UntersuchungssettingConcept Mappingin leitfadengestützte Interviews integriert.Hierzu wurde ein Leitfaden von zirkulärer Struktur entwickelt, über den in jedem InterviewSP, SK und SR miteinander verglichen werden sollen und die Vorstellungen der Befragtenzum Aufbau der Systeme gemeinsam mit dem Interviewer auf Basis der Schülerinnen-Aussagen in einer (für die drei IS) gemeinsamenConcept Mapexternalisiert werden. DasSample der hier vorgestellten Datenerhebung setzt sich aus acht Teilnehmerinnen (B1 bisB8) an einem Förderprojekt zur Steigerung des Anteils an Mädchen und Frauen in informa-tiknahen Berufen zusammen, die die 8. Klasse einer nds. Oberschule (Zusammenfassung vonHaupt- und Realschule) besuchten, bis dato keinen formalen IU hatten und zum Zeitpunktder Erhebung 13 bis 14 Jahre alt waren. Die Wahl ﬁel auf vier Einzelinterviews und zweiPartnerinterviews (B3/B4 und B5/B6) von 14 bis 33 Minuten Länge. Zur Auswertungwurden die Interviews transkribiert und anschließend einerinhaltlich-strukturierenden qua-litativen Inhaltsanalyse[Ma02] unterzogen, wobei die Kategorienbildung deduktiv-induktiverfolgte. Da die Anfertigung der Concept Maps während der Interviews zweifelsohne im„Grenzbereich zwischen Erhebung und Auswertung“ [Ma02, 86] liegt und die in ihnen ent-haltenen Informationen größtenteils redundant mit den Transkriptinhalten sind, rückten sie3So befassen sich aktuell bspw. [Br19] oder [RP18] mit der Frage danach, welche Kategorien (Taxonomien)Lernende in ihren mentalen Repräsentationssystemen von digitalen Artefakten bilden.348 Nils Pancratz, Ira DiethelmWas haben Staubsaugerroboter, Spielekonsolen und Smartphones gemeinsam? 113während der Inhaltsanalyse in den Hintergrund. Im Folgenden werden Alltagsvorstellungen,wie sie während der Interviews zum Vorschein kamen, anhand expl. Aussagen dargelegt:Bezogen auf denSRgeht B1 davon aus, dass dieser seinen Weg einprogrammiert bekommenmuss (B1:1954) und „wie so ein Hund“ über einen „Spürsinn“ (B1:187) den Dreck zunächstgezielt aufspürt und dann aufsaugt (B1:191). Andere Schülerinnen hingegen verstehen ihnals System, das den Weg automatisch erkennt (B2:24). Die dazu benötigte Komponentewird von Zweien alsSensoridentiﬁziert (B3:27, B6:37); eine weitere verwendet zwar nichtdiese Bezeichnung, expliziert aber, dass SR „da vorne [etwas] haben“ (B2:12), worübersie an die nötigen Informationen – also „wo er langfahren muss“ (B2:10) – gelangen.Das Umfeld wird nach Ansicht von B1 nicht abgespeichert, weil der SR schließlich auchfunktioniert, wenn man ihn in einer anderen Umgebung platziert (B1:320). Zwar ist derAnsicht einer weiteren Schülerin nach in SR auch eineFestplatteenthalten, jedoch istihre Aufgabe dort lediglich „Signale zu empfangen“ (B5:215). InSKhingegen ist aufden Komponenten, die sie alsFestplatten(also „diesen grünen Platten, wo man wasanlötet“, B5:101) bezeichnet, „allesdrauf gespeichert“ (B5:130). Ihre Beschreibung dieserKomponente ähnelt der, die B2 mit dem Begri  desLaufwerksbeschreibt (B2:46): Währenddiese Komponente, deren Rolle mit der eines „Gehirns“ (B2:100) verglichen wird, im SRdafür verantwortlich gemacht wird, zu steuern, wann sich welche Räder drehen sollen,„damit die den Dreck au egen“ (B2:46), ist Aufgabe desLaufwerksimSP, dass es „anbleibt [...] und dass alles angezeigt wird und so“ (B2:158). In SK wiederum – in denendasLaufwerkaus Platzgründen ebenso wie in SP übrigens nicht so groß ist wie in SR(B2:148) – kann es „auch Sachen in sich speichern“ (B2:150); in SP übernehmenSIM-bzw.SD-Karten(B2:130) – zwei Begri e, die von B3 während des Interviews au allend synonymverwendet werden – bzw. „so etwas wie eine Festplatte“ (B3:124) diese Aufgabe. Währendunter den Interviewteilnehmerinnen Einigkeit darüber herrscht, dassSpeicherplatzeinenötige Voraussetzung dafür ist, „Sachen“ herunterzuladen und speichern zu können (bspw.B1:161, B4:118), herrscht Verwirrung darüber, welche Daten überhaupt gespeichert werdenmüssen („der [SR] kriegt ja Sachen programmiert [...] und muss man das nicht speichern?“,B1:314-316) und wo sie herkommen („Vom Strom? [...] Ne, ähm, naja irgendwo muss es jaherkommen.“, B3:82), wo die Speicherung gewisser Daten physisch zu verorten ist (lokaloder auf „Plattformen“ oder „Apps“ wie bspw. Google, „[das] im Internet gespeichert ist“,B1:307) und ob überhaupt lokal-physische Speicherkomponenten benötigt werden (B8:16)oder Speicherplatz ausschließlich als – vermeintlich web-basierter –Zustandverstandenwird. In Analogie dazu erwecken die Beschreibungen einiger Schülerinnen zumAkkudenEindruck, dass sie diesen Begri  eher als Ladezustand(„Akku ist ja halt Akku, dann hast dudas halt nicht mehr“, B3:154), der bspw. dem SP ermöglicht zu „leben“ (B3:157), begreifenstatt alsphysischeKomponente (bspw. B1:69) in Form einesAkkumulators. So erklärt B4,dass „[Akkus] nicht mehr bei so vielen Handys [drinstecken]“ (B4:126) und „es [das] jaauch noch irgendwie anders [gibt]“ (B4:126). Schließlich würden SP „ja auch immer dünner[werden] und dann passen da ja nicht mehr so fette dicke Akkus rein“ (B4:128), weswegenes jetzt „nicht mehr so viele Handys [gäbe], in denen Akkus drin sind“ (B4:128).4Notation:Befragte:Zeilennummer; die Transkripte werden bei Interesse gerne zur Verfügung gestellt.Was haben Staubsaugerroboter, Spielekonsolen und Smartphones gemeinsam? 349114 Nils Pancratz, Ira Diethelm3 Fazit und AusblickIm Rahmen der bisher durchgeführten Interviews konnte eine Reihe anAlltagsvorstellungenzum Aufbau von IS herausgearbeitet werden, die vor allem über die Verbindungen einzelnerKomponenten untereinander, ablaufende Datenströme sowie Informationsﬂüsse und dieRollen einzelner Komponenten alsFehlvorstellungenaufzufassen sind. Hinsichtlich der Tat-sache, dass die bislang befragten Schülerinnen IS unter ihrer Oberﬂäche häuﬁg als Blackboxbehandeln und zur Erklärung ihrer Wirkprinzipien hauptsächlich sicht- und interagierbareTeile identiﬁzieren, kam es dabei über die Interviews hinweg zu einer Stabilisierung. Umentsprechende Schülervorstellungen von Teil-Ganzes-Beziehungen in IS im Sinne der DRfür den IU nutzen zu können, sind jedoch zusätzliche, tiefgreifendere Studien nötig, dieauch über weitere methodische Ansätze (bspw. das Anfertigen von Zeichnungen) angestrebtwerden. In folgenden Interview-Durchläufen nach dem in diesem Beitrag vorgestellten Vor-gehens sollen Teil-Ganzes-Denkstrukturen dabei u. A. über stärkeres Einfordern passenderFormulierungen („ist enthalten in“, „ist Teil von“,) stringenter hinterfragt werden.Literaturverzeichnis[Bi98]Billman, D.: Representations. In (Bechtel, W.; Graham, G., Hrsg.): A Companion toCognitive Science, Kapitel 51, S. 649–659. Blackwell, 1998.[Br19]Brinda, T.; Napierala, S.; Tobinski, D.; Diethelm, I.: Student strategies for categorizingIT-related terms. In: Education and Information Technologies. 2019.[Di11]Diethelm, I.; Dörge, C.; Mesaros, A.; Dünnebier, M.: Die Didaktische Rekonstruktion fürden Informatikunterricht. In (Thomas, M., Hrsg.): Informatik in Bildung und Beruf. Jgg.P-189 in LNI. GI, S. 77–86, 2011.[Du07]Duit, R.: Science Education Research Internationally: Conceptions, Research Methods,Domains of Research. Eurasia Journ. of Math., Science and Tech. Ed., 3(1):3–15, 2007.[GI08]GI, Gesellschaft für Informatik e.V.: Grundsätze und Standards für Informatik in der Schule:Bildungsstandards Informatik für die Sek. I (Beilage zu LOG IN, Heft Nr. 150/151). 2008.[La87]Lako , G.: Women, Fire, and Dangerous Things. Univ. of Chicago Pr., Chicago, 1987.[Ma02]Mayring, P.: Einführung in die qualitative Sozialforschung: Eine Anleitung zum qualitativenDenken. Beltz Verlag, Weinheim und Basel, 6. Auﬂage, 2002.[Ro78]Rosch, E.: Principles of categorization. In (Rosch, E.; Lloyd, B. B., Hrsg.): Cognition andCategorisation, S. 27–48. Lawrence Erbaum Associates, Hillsdale, New Jersey, 1978.[RP18]Rücker, M. T.; Pinkwart, N.: The things that belong: a grounded theory study of studentcategorizations of complex technical artifacts. International Journal of Technology andDesign Education, 28(3):701–720, 2018.[TH84]Tversky, B.; Hemenway, K.: Objects, Parts, and Categories. In: Journal of ExperimentalPsychology: General. Jgg. 113. American Psychological Assoc., Inc., S. 169–193, 1984.[TZH08]Tversky, B.; Zacks, J.; Hard, B.: The Structure of Experience. In: Understanding Events:From Perception to Action, S. 436–464. Shipley, T. F. and Zacks, J. M., 2008.350 Nils Pancratz, Ira Diethelm<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 1 Zur Beliebtheit des Schulfachs Informatik in der Oberstufe nordrhein-westfälischer Schulen Ausgewählte Ergebnisse einer Studie zu Einflüssen auf die Wahl von Informatik in der Oberstufe Niklas Klinge1, Marco Thomas2  Abstract: Im Rahmen des Projekts „Kriterien zum Informatikunterricht von Schülerinnen und Schülern“ (KISS) wurden fast 5000 Schüler in Informatikkursen an gut 150 Schulen vorwiegend quantitativ zur An- und Abwahl, zu Vorerfahrungen, Erwartungen und zur Abiturplanung befragt. Es lassen sich Zusammenhänge zwischen der Belegung von Informatik in der Sekundarstufe I und der Anwahl von Informatik in der Oberstufe aufzeigen. Insbesondere ist eher ein Desinteresse am Informatikunterricht als die Konkurrenz zu anderen Fächern oder die Lehrerkompetenz ein Grund für die Abwahl von Informatik, wobei Unterschiede zwischen Gymnasium und Berufskolleg deutlich werden. Keywords: Informatik, Unterricht, Didaktik, Schule, Oberstufe, Bildung, Standards, MINT 1 Informatische Bildung in der GOSt NRW Seit fast 50 Jahren wird Informatik in der Sekundarstufe I (SI) in Nordrhein-Westfalen (NRW) nicht verpflichtend unterrichtet, was vermutlich Auswirkungen auf die Anwahl von Informatik in der Oberstufe (GOSt) hat. Die fehlende Gleichberechtigung unter den MINT-Fächern wird als eine weitere Ursache für die Entscheidung von Schülern3, Informatik nicht (weiter-)zu belegen, angenommen. Ein hoher Prozentsatz von durchschnittlich 35 % der Schüler wählt Informatik für das zweite Jahr der Oberstufe wieder ab (in den Naturwissenschaften sind es nur 18 %, in Mathematik 22 %) [N18].  Es existieren nur vereinzelt Studien zur Situation des Informatikunterrichts in Deutschland, die das Wahlverhalten von Schülern untersuchen. Seit 2013 besteht das Ziel des Projekts KISS, diese empirische Lücke zu schließen. Nachdem wir uns im Projekt KISS zunächst auf die SI fokussiert hatten und Lehrer, Schüler sowie Schulleiter befragten, wurden in den Schuljahren 2017/18 und 2018/19 Schüler in der GOSt befragt.                                                          1 Westfälische Wilhelms-Universität Münster, Didaktik der Informatik, Corrensstraße 80, 48149 Münster, niklas.klinge@uni-muenster.de  2 Anschrift s. o., marco.thomas@uni-muenster.de 3 Aus Gründen der Lesbarkeit verzichten wir auf die Angabe weiterer Genderformen, soweit dies sachlich nicht erforderlich ist. cba doi:10.18420/infos2019-36Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 351 2 Niklas Klinge und Marco Thomas 2 Untersuchungsmethodik Die Datenerhebung erfolgte weitestgehend quantitativ mit einem standardisierten Online-Fragebogen. Der Online-Fragebogen umfasst zehn Blöcke zu den Themen „Allgemeine Angaben“, „Vertrautheit mit Anwendungen“, „Berührungen mit Informatik und Programmieren“, „Gründe für das Wahlverhalten“, „Abiturplanung“, „Erwartungen an einen Informatikunterricht“, „Gründe für eine Abwahl“. Die Auswahl der Items orientierte sich an Fragen, die wir bei unseren bisherigen Fragebögen in KISS erfolgreich eingesetzt haben, welche sich wiederum an bewährten Studien orientierten. Gegenstand der Untersuchung sind Schüler an Gesamtschulen, Gymnasien und Berufskollegs in NRW, die in den Schuljahren 2017/18 und 2018/19 einen Informatikkurs in der Oberstufe besuchten. Der Aufruf zur Umfrage wurde ab September 2017 in allen Bezirksregierungen NRWs gestartet. Im Schuljahr 2017/18 wurden insgesamt 903 Schüler an 52 Schulen befragt, im Schuljahr 2018/19 haben sich 4021 Schüler von 131 Schulen beteiligt. Schulform Berufskolleg Gesamtschule Gymnasium Gesamt* 101 246 584 Rückmeldungen (in %) 26,73 5,70 24,14 Tabelle 1: Anzahl Schulen bzgl. intendierter Population nach Schulformen. *Quelle: [N18] 3 Ergebnisse und Auswertung Es können an dieser Stelle aus Platzgründen nur einige Zusammenhänge und Interpretationen der Studie dargestellt werden. Die Zusammenhänge weisen alle eine hohe Signifikanz (Chi-Quadrat höher als 30 und einem p-Wert < 0,005) auf. Sprechen wir von wagen Vermutungen, aufgrund geringer Signifikanz oder schlechter Datenlage, werden diese gekennzeichnet. 3.1 Anwahl von Informatik Wir haben die Schüler in einer Mehrfachauswahl von Möglichkeiten gefragt, warum sie Informatik gewählt haben (ergänzend konnten die Schüler in einem Freitext antworten). Über die Hälfte der Schüler gaben an, Informatik gewählt zu haben, weil sie es interessanter als andere naturwissenschaftliche Fächer finden. Für viele schien der Informatikkurs aber auch eine Alternative zu einer weiteren Fremdsprache zu sein. Zwischen 28 % und 38 % der Schüler hatten schon Vorkenntnisse im Programmieren und zur Informatik. Vergleichbare Aussagen finden sich in unseren Studien zur Anwahl von Informatik in der SI [JT15]. Im näheren Umfeld gab es bei der Hälfte der Schüler Personen, die einen „[…] Beruf mit Bezug zur Informatik ausüben? (z.B. Software-Entwicklung, System-Administration etc.)“. Gut 43 % der Schüler nannten als weiteren Grund, dass ihnen der Unterricht in der Unter- und Mittelstufe gefallen hat.  352 Marco Thomas, Niklas Klinge Beliebtheit des Schulfachs Informatik in der Oberstufe in NRW  3 Gut ein Drittel der befragten Schüler hatte keinen Kontakt mit Informatik in der SI. Fast die Hälfte der Schüler gab an, Informatik als Wahlpflichtfach entweder als reines Fach oder als Kombinationskurs in der SI belegt zu haben. Bei einem Fünftel der Schülerschaft hatte auch die gesamte Klasse das Fach in der SI4.  Nur etwa 35 % aller befragten Schüler gaben an, dass sie bei der Anwahl von Informatik für die GOSt wussten, was sie erwartet. Es lassen sich Tendenzen für einen positiven Einfluss der Vorkenntnisse aus der SI auf die spätere Anwahl von Informatik in GOSt finden. 70% der Schüler, die einen Wahlpflichtkurs in der SI besucht hatten, gaben an, Informatik u. a. deswegen gewählt zu haben, weil sie es in der SI hatten und es ihnen gefallen hat. Besuchten die Schüler nur Ergänzungsstunden bzw. AGs lag deren Anteil bei obiger Aussage nur bei circa 26 %, wurde die gesamte Klasse in Informatik unterrichtet bei 40 %. 3.2 Abwahl von Informatik Die Schüler wurden gefragt, ob sie Informatik am Ende der EF oder nach dem ersten Halbjahr abwählen wollen und ob sie Informatik sofort abwählen würden, wenn dies möglich wäre. Über alle Schulformen und -stufen mit GOSt planen 75 % der Schüler Informatik nicht abzuwählen. Wenn die Abwahl sofort möglich wäre, würde ein Fünftel der Schüler Informatik abwählen. Warum die Schüler Informatik abwählen bzw. sofort abwählen wollen, kann verschiedene Gründe haben. Im Folgenden können wir nur zwei Zusammenhänge von erhobenen Parametern darstellen und ansatzweise diskutieren. Interesse an Informatik und dem Programmieren Es wird deutlich, dass bei Interesse an dem Fach Informatik, auch kein Abwahlwunsch besteht. Stimmen die Schüler Aussagen wie „Ich interessiere mich für Computer“ oder „Ich möchte programmieren“ zu, so wollen mehr als 75 % dieser Schüler den Kurs nicht abwählen. Häufig ist Desinteresse ein Grund gegen die Fortführung eines Informatikkurses: Schüler, die Informatik abwählen möchten, wollen nicht programmieren, interessieren sich nicht für Computer oder benötigen aus ihrer Sicht Informatik nicht für ihre Zukunft. Werden andere Wahlpflichtfächer von den Schülern als interessanter angegeben, so wollen über 40% dieser Schüler den Kurs abbrechen. Einigen Schülern sind die Informatik und das Programmieren aber auch zu schwer und möchten deswegen das Fach nicht mehr belegen. Die Zufriedenheit der Schüler mit dem Informatikunterricht ist für die Abwahl von Informatik bedeutend. Je nachdem, ob die Schüler Informatik abwählen möchten oder nicht, stellen sie sich den Unterricht anders vor. Diejenigen, die Informatik nicht mehr belegen möchten, wollen weniger „mathematische Aufgaben lösen“, „Automaten analysieren und modellieren“ oder „über informatische Sachverhalte argumentieren“. Diese Schüler betonen, dass Inhalte langsam und verständlich erläutert werden sollen.                                                          4 Z. B. im Rahmen eines schulinternen Lehrplans mit Pflichtstunden Informatik in der Unterstufe. Aktuell werden in NRW (Modell-)Versuche zur Pflichtstunden Informatik in der SI durchgeführt. Zur Beliebtheit des Schulfach Informatik 353 4 Niklas Klinge und Marco Thomas Schulform/-stufe Die Beliebtheit des Informatikkurses scheint nach Schulform und -stufe zu variieren. Schüler vom Gymnasium führen am ehesten den Informatikkurs weiter: 8 von 10 Schülern geben an, den Kurs nicht abzuwählen. Nur etwa 7 % der Schüler wählen Informatik nach der EF oder zum Halbjahr ab. Beim Berufskolleg ist die Quote mit 15 % mehr als doppelt so hoch und nur 6 von 10 Schülern wollen den Kurs weiterhin belegen. Erklären lässt sich dies vermutlich dadurch, dass Schüler an den befragten Berufskollegs Wirtschafts-informatik verpflichtend5 belegen müssen, sich aber für das Fach bzw. die Inhalte nicht interessieren.  4 Fazit und Ausblick Die Mehrheit der Schüler in den Informatikkursen ist an Informatik interessiert, aber Desinteresse bedingt die Abwahl von Kursteilnehmern. Eine Anwahl von Informatik in der GOSt wird durch Informatik in der Sekundarstufe I begünstigt. Die Untersuchung zeigt, dass eher die Schüler vom Gymnasium Informatik fortführen möchten als die vom Berufskolleg. Literaturverzeichnis [JT15] Janzen, Irina; Thomas, Marco; Angelica Yomayuza (2015): Wahlverhalten zum Schulfach Informatik in der SI. In: Jens Gallenbacher (Hg.): Informatik 2015. Informatik allgemeinbildend begreifen; 16. GI-Fachtagung Informatik und Schule ; Tagung vom 20.-23. September 2015. Bonn. S. 181–190.  [N18] NRW: Das Schulwesen in NRW aus quantitativer Sicht. Amtliche Schuldaten zu den Schuljahren 2014-2018 https://www.schulministerium.nrw.de/docs/bp/Ministerium/Service/Schulstatistik/Amtliche-Schuldaten/index.html                                                          5 https://www.berufsbildung.nrw.de/cms/bildungsgaenge-bildungsplaene/berufliches-gymnasium-anlage-d/stundentafeln/anlage-d-27.html (14.01.2019) 354 Marco Thomas, Niklas Klinge<Name>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 Informatikwissen im Schulalltag sichtbar machen „Wie funktioniert das Internet?“ in Kinderzeichnungen Bettina Waldvogel1 Abstract: Primarschulkinder gehen geschickt mit digitalen Geräten um und erwecken einen kompetenten Eindruck. Diese Anwenderfertigkeiten täuschen nicht selten über die Tatsache hinweg, dass die grundlegenden Konzepte falsch verstanden wurden oder gar nicht bekannt sind. Das stellt die Lehrpersonen vor die Schwierigkeit, auf welchem Vorwissen sie aufbauen können.  Die Forschung kennt verschiedene Methoden zur Erhebung von Präkonzepten. Diese eignen sich aber meist nicht für den Schulalltag - sei es, weil die Auswertung der Daten zu aufwändig oder das Erhebungssetting im regulären Klassenunterricht nicht durchführbar ist. Im Unterricht muss die Erhebung von Vorwissen schnell gehen und vor allem muss die Lehrperson auf einen Blick erkennen können, wo Wissenslücken bestehen oder problematische Fehlkonzepte vorliegen. In diesem Beitrag wird gezeigt, wie Kinderzeichnungen im Unterricht genutzt werden können zur schnellen Erhebung der Schülervorstellungen anhand des Beispiels «Wie funktioniert das Internet?». Die im regulären Unterricht entstandenen Zeichnungen liefern gleichzeitig auch wertvolle Anknüpfungspunkte für die Forschung.  Keywords: Präkonzepte, Vorwissen, Kinderzeichnungen.  1 Einleitung Im Rahmen des Moduls Medien- und Informatik im Lehrplan 21 [Le16] werden in der deutschsprachigen Schweiz eine Vielzahl von Kompetenzen unterrichtet. Es fehlen Methoden, die der Lehrperson in kurzer Zeit, im Rahmen des regulären Unterrichts das Wissen der Schülerinnen und Schüler sichtbar machen.  In der Wissenschaft gibt es viele Ansätze, wie Alltagswissen und Präkonzepte erhoben und visualisiert werden können. Eine anschauliche Gegenüberstellung von Erhebungsmethoden zum Alltagswissen in der Informatik findet man zum Beispiel bei Rücker [Rü17]. Die präsentierten Methoden basieren hauptsächlich auf Interviews, welche eine hochgradig individualisierte Erfassung des Wissens ermöglichen, deren Durchführung und Auswertung jedoch zeitaufwendig und im Rahmen des regulären Unterrichts kaum realisierbar ist.   Novak und Cañas [NC08] empfehlen Concept Maps anstelle von Interviews unter anderem wegen der effizienten, automatisierten Auswertung. Für die Schülerinnen und                                                         1 Pädagogische Hochschule Schaffhausen, Fachbereich Medien und Informatik, Ebnatstrasse 80, CH-8200 Schaffhausen, bettina.waldvogel@phsh.ch  cba doi:10.18420/infos2019-37Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 355 16 Bettina Waldvogel Schüler, sowie für die Lehrpersonen stellt aber allein schon die Bedienung der Concept Mapping Software eine zeitraubende Hürde dar.  Mit Kinderzeichnungen als Erhebungsmethode, zeigt Neuss [Ne17] eine Möglichkeit, die ohne aufwändige Einführung angewendet werden kann, praktisch auf jeder Schulstufe. Die vorliegende Arbeit beschreibt eine Vorstudie zur Klärung, inwiefern Kinderzeichnungen gleichzeitig für die schnelle, unkomplizierte Erfassung des Vorwissens bzw. zur Dokumentation von Lernfortschritten im Schulalltag, aber auch für weiterführende wissenschaftliche Studien genutzt werden können.  2 Vorgehen und Unterrichtssetting In der folgenden Untersuchung wurden die Schülerinnen und Schüler zum ersten Mal mit dem Internet als eigentliches Unterrichtsthema konfrontiert. Das Internet haben alle schon in der Freizeit benutzt. Dabei haben einige Schülerinnen und Schüler lückenhafte oder falsche Vorstellungen entwickelt.  Der Auftrag an die Schülerinnen und Schüler lautete: „Wie funktioniert das Intenet? – Zeichne alles, was Dir dazu einfällt. Einzelne Teile dürfen beschriftet werden.“ Um das Vorwissen und den anschliessenden Wissenserwerb zu visualisieren wurde folgendes Vorgehen gewählt: 1. Ersterhebung am Anfang der Lektion: Zeichnung, ca. 15 Minuten. 2. Erklärvideo vom Schweizer Schulfernsehen (SRF mySchool [SRF17]) schauen und diskutieren ca. 15 Minuten (Videodauer 5:41 Minuten). 3. Zweiterhebung am Ende der gleichen Lektion: Zeichnung, ca. 15 Minuten.  4. Dritterhebung einen Monat später: Zeichnung, ca. 15 Minuten.  Die Erst- und Zweiterhebung wurden mit insgesamt 42 Schülerinnen und Schülern aus zwei Klassen durchgeführt, die Dritterhebung nur an einer Klasse mit 22 Kindern.  3 Resultate Im Erklärvideo wird das Internet als weltumspannendes Netzwerk gezeigt, sowie vier zentrale Elemente des Internets erklärt: Server, Router, Kabel und Endgeräte. Die Zeichnungen wurden in einer ersten rudimentären Auswertung in Hinblick auf das Vorhandensein dieser Elemente untersucht. Weiter wurde darauf geachtet, ob diese Elemente isoliert oder vernetzt dargestellt wurden. Besonders interessante Einblicke entstanden, inwiefern das Vorwissen aus der Ersterhebung in der Zweit- und Dritterhebung noch in Erscheinung trat.  356 Bettina Waldvogel Informatikwissen im Schulalltag sichtbar machen 17 In der Ersterhebung wurden im Durchschnitt 0.9 von den vier im Erklärvideo genannten Elementen genannt, meist die Endgeräte. Am Häufigsten wurden jedoch die Logos von Google (24 mal) und YouTube (23 mal) gezeichnet, gefolgt von Spielen und anderen Apps. In der Lebenswelt der Kinder wird das Internet als Dienstleistung rege genutzt. Das Internet als weltumspannende Infrastruktur ist jedoch weitgehend unbekannt.  In der Zweiterhebung (nach dem Erklärvideo) wurden im Durchschnitt 3.5 der vier im Erklärvideo genannten Elemente gezeichnet. Interessanterweise wurden Server, Router und Kabel oft gezeichnet und sogar miteinander vernetzt. Die Endgeräte sind dafür aber in Vergessenheit geraten (Abb. 1).    Abb. 1: In der Zweiterhebung dominieren drei der vier im Erklärvideo genannten Elemente des Internets: Kabel, Server, Router. Die Endgeräte wurden oft vergessen. Hinweise darauf, ob es sich bei der Zweiterhebung nur um eine kurzfristige Konstruktion oder tatsächlich um einen Konzeptualisierungswechsel handelt, gibt eine Dritterhebung, welche einen Monat später stattfand. Im Durchschnitt wurden 3.1 der vier im Erklärvideo genannten Elemente gezeichnet. Also nur geringfügig weniger als in der Zweiterhebung aber deutlich mehr als in der Ersterhebung. Die Schülerinnen und Schüler haben also etwas gelernt. Viele haben ihre Konzeptualisierung nachhaltig verändert, weg vom Endgeräte- und App-zentrierter Sichtweise hin zu einem globalen, weltumspannenden Blick auf das Internet.   4 Schlussfolgerungen und Ausblick Zeichnungen und Skizzen erlauben den Lehrpersonen schnell zu erfassen, welche Konzeptualisierungen vorhanden sind. Die oben skizzierte rudimentäre Auswertung eignet sich für den Unterrichtsalltag. Wichtig ist, die Zeichnungen zu diskutieren und reflektieren, damit sich die Kinder ihrer Vorstellungen bewusst werden [HM18, S.51].  Informatikwissen im Schulalltag sichtbar machen 357 18 Bettina Waldvogel Die Tatsache, dass die meisten Zeichnungen zwischen der Zweit- und Dritterhebung keine grossen Unterschiede aufweisen, legt nahe, dass mehr als nur eine spontane Ad-hoc Konstruktion, sondern ein nachhaltiges Umlernen stattgefunden hat.  Nicht allen Kindern fällt das Zeichnen leicht. Deshalb schlagen verschiedene Autoren begleitende Interviews vor [Ne17]. Es wäre auch denkbar, Zeichnungen vorzugeben und diese hinterfragen zu lassen im Sinne der von Weigend [2005] vorgeschlagenen Vorgehenswiesen zur Erschliessung der intuitiven Modelle.  Die rudimentäre Vorstudie für den Unterrichtsalltag lässt grosses Potenzial in den Kinderzeichnungen vermuten. Eine Studie mit systematischer Auswertung ist in Planung.   Literaturverzeichnis  [Le16]  Lehrplan 21, Modul Medien und Informatik, Deutschschweizer Erziehungsdirektorenkonferenz, 2016.   [Rü17]  Rücker, M.T., Pancratz, N., Gold-Veerkamp, C., Pinkwart, N., Brinda, T., 2017: Alltagsvorstellungen in der Informatik: Erhebungsmethodik und Implikationen für den Unterricht, I.Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017, 393-400. [NC08]  Novak, J., and A.J. Cañas, 2008: The Theory Underlying Concept Maps And How to Constuct them. Technical Report IHMC CmapTools 2006-01 Rev 01-2008, Florida Institute for Human and Machine Cognition. [Ne17] Neuss, N., 2017: Kinderzeichnungen als Erhebungsmethode. In: Mikos L. und Wegener C. (Hrsg.), Qualitative Medienforschung. Ein Handbuch, 2. Auflage. UVK Verlagsgesellschaft, Konstanz und München. S. 380 – 388.  [SRF17] Schwiezer Radio und Fernsehen, 2017: Wie funktioniert das Internet? Auf Youtube: https://www.youtube.com/watch?v=e9FJPnFQWi8 (zuletzt besucht: 02.05.2019) [HM18]  Hartinger, A., und L. Murmann, 2018: Schülervorstellungen erschliessen – Methoden, Analyse, Diagnose. In: Adamina M., M. Kübler, K. Kalcsics, S. Bietenhard, E. Engeli (Hrsg.), «Wie ich mir das denke und vorstelle…», Bad Heilbrunn Klinkhardt. S. 51-62.  [We05]  Weigend, M., 2005: Intuitive Modelle in der Informatik. In: Lecture Notes in Informatics. Unterrichtskonzepte für informatische Bildung. Proceedings zur 11. GI-Fachtagung Informatik und Schule. S. 275-284.  358 Bettina WaldvogelPostercba(Hrsg.): 19. GI Fachtagung Informatik und Schule,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Algorithmen im Anfangsunterricht mit RunCodeChristoph Gräßl1An bayerischen Gymnasien wird aktuell in den Jahrgangsstufen 6 und 7 einstündigerAnfangsunterricht in Informatik gehalten. Ein Schwerpunkt liegt im BereichBeschreibungvon Abläufen durch Algorithmen. In den Schulbüchern und Unterrichtsempfehlungen wirddavon ausgegangen, dass der Zugang über altersgerechte Lernumgebungen erfolgt, daherkömmliche Programmiersprachen (wie Pascal, C oder Java) ungeeignet sind. Häuﬁgwird hier eine Anwendung, basierend auf einer Arbeit von Richard E. Pattis, eingesetztin der ein virtueller Roboter in einer schachbrettartig aufgebauten Welt programmiertwerden kann. Durch diese Programme kann der Roboter Aufgaben, wie beispielsweisedas Legen eines Quadrates mit Ziegelsteinen, erledigen. Insgesamt sind die Möglichkeiteneiner abwechslungsreichen Aufgabenstellung recht beschränkt und die Graﬁk ist zwarzweckmäßig, aber dennoch wenig ansprechend und keineswegs zeitgemäß. Infolgedessenist die Schülermotivation, mit diesem System zu arbeiten, nicht von Dauer.RunCode kombiniert den bewährten Ansatz von Pattis mit einer ansprechenderen 3D-Umgebung und zusätzlichen Befehlen, die es erlauben, spannende Aufgaben zu stellen. DieLernumgebung, dargestellt in Abbildung1, benötigt minimale Einarbeitungszeit und istintuitiv bedienbar.Abb. 1: Das Benutzerinterface vonRunCode1Donau-Gymnasium Kelheim, Rennweg 61, 93309 Kelheimc.graessl@donau-gymnasium.decba doi:10.18420/infos2019-38Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 3612 Christoph Gräßlwiederhole solange nicht betretbarwiederhole solange nicht betretbarhinlegen*wiederholeschritt*wiederholeAbb. 2: Links: Roboter hebt einen Teich aus. Rechts: Programm zum Erreichen einer Nachbarinsel.Die graﬁsche Benutzeroberﬂäche besitzt im linken Bereich einen Editor, in dem dasProgramm eingegeben werden kann. Abspeichern und Laden ist ebenfalls möglich. Unterdem Editor beﬁnden sich Knöpfe zum Ausführen, Anhalten und Unterbrechen des Codes.Die Ausführungsgeschwindigkeit kann mit einem Regler eingestellt werden. Zur besserenÜbersicht können benutzerdeﬁnierte Anweisungen in eine Bibliothek verschoben werdenund verschwinden somit aus dem Editor. Außerdem ist es möglich per Knopfdruck alleBefehle, Kontrollstrukturen und Bedingungen mit Beschreibung angezeigt zu bekommen.Während der Programmausführung wird die aktuelle Befehlszeile markiert. Sowohl derProgrammcode, als auch die erzeugteWeltlassen sich abspeichern beziehungsweise laden.RunCodebesitzt noch eine Reihe weiterer Eigenschaften, die aber aufgrund von Platzmangelin diesem Schriftstück nicht präsentiert werden können.Es werden im Folgenden einige Aufgabenbeispiele, die auch bereits im Unterricht getestetwurden, kurz skizziert:•Grabe, beginnend am Meer, einen Bachlauf der Länge 5 Schritt aus. Der Graben füllt sichdann automatisch mit Wasser. Wenn du das gescha t hast, dann schreibe das Programmso, dass am Ende des Grabens ein See entsteht (Abbildung2links).•Grabe einen Tunnel durch den Berg.•Baue eine Brücke bis zur nächsten Insel (mögliche Lösung ist in Abbildung2rechts).•Grabe einen Tunnel unter dem Meer bis zur nächsten Insel. Achte darauf, mindestens 6Schritt tief zu graben, damit kein Wasser in den Tunnel eindringt.•Erstelle einen 6x6 Schritt breiten und 20 Schritt tiefen Schacht. Baue anschließend eineTreppe, die vom Grund des Schachts an die Oberﬂäche zurück führt.Die in dieser Arbeit vorgestellte Lernumgebung wurde im Schuljahr 2018/19 in zweiInformatikklassen der 7. Jahrgangsstufe eingesetzt und evaluiert. Obwohl die verwendetenComputer (unter Windows 7) vom aktuellen Stand der Technik eher als leistungsschwachanzusehen sind, liefRunCodeﬂüssig und ruckelfrei. Die Schüler fanden sich schnell zurechtund die Einarbeitungszeit war sehr gering. Der Lehrplansto  im BereichAlgorithmenkonntemit der Software komplett umgesetzt werden.RunCodeist aufhttp://klassenkarte.dekostenlos erhältlich.362 Christoph Gräßl<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 Identifizierung leistungsstarker Schülerinnen und Schüler in der Informatik Claudia Hildebrandt1, Matthias Matzner1  Abstract: Die schulischen Entwicklungsmöglichkeiten leistungsstarker und potenziell besonders leistungsfähiger Schülerinnen und Schüler in der Schule - unabhängig von Herkunft, Geschlecht und sozialem Status - im Regelunterricht zu fördern, ist eines der Ziele des BMBF-Projekts LemaS (Leistung macht Schule) bzw. des Teilprojekts MINT-Informatik. Mithilfe einer Literaturrecherche wird ein erster theoretischer Merkmalskatalog aufgestellt, der zur möglichen Identifizierung leistungsstarker und potenziell besonders leistungsfähiger Schülerinnen und Schüler in der Sekundarstufe I beitragen soll. Keywords: Begabung, Leistung, Informatik, Diagnose  1 Einleitung und das Projekt LemaS Mehr Chancengerechtigkeit für alle, unabhängig von Herkunft, Geschlecht und sozialem Status, ist eines der bildungspolitischen Ziele der Initiative „Leistung macht Schule - LemaS“, die Bund und Länder gemeinsam unterstützen. Umgesetzt wird LemaS mithilfe von 22 Teilprojekten, von denen sich acht auf den MINT-Bereich beziehen. Deutschlandweit sind 300 Schulen aus dem Primar- und Sekundarbereich in die Umsetzung eingebunden. Der offizielle Start für die Bund-Länder-Initiative erfolgte am 30.01.2018 in Berlin [KB18].  Dem LemaS-Verbundprojekt liegt ein mehrdimensionaler Leistungsbegriff zugrunde, der Leistung einerseits als schulbezogene Leistung betrachtet, andererseits aber die Persönlichkeitsentwicklung und gesellschaftliche Verantwortung mit einschließt. Die Begriffe des Leistungspotenzials und der Begabung werden gleichgesetzt. Das Leistungspotenzial ergibt sich dabei als individuelle Konstellation aus Fähigkeiten und (dynamisch sich entwickelnden) Persönlichkeitsmerkmalen. Begabung ist eine Disposition von Leistung, die „durch langfristige systematische Anregung, Begleitung und Förderung das Individuum in die Lage versetzt, sinnorientiert und verantwortungsvoll zu handeln und auf Gebieten, die in der jeweiligen Kultur als wertvoll erachtet werden, anspruchsvolle Tätigkeiten auszuführen“ [Ip09, S. 16]. Für die Entwicklung eines theoretischen Merkmalskatalogs ist die Unterscheidung zwischen leistungsstarken und potenziell besonders leistungsfähigen Schülerinnen und Schüler noch nicht notwendig, so dass im Folgenden vereinfacht von leistungsstarken Schülerinnen und Schülern gesprochen wird.                                                          1 Carl von Ossietzky Universität Oldenburg, Didaktik der Informatik, Uhlhornsweg 84, 26129 Oldenburg, claudia.hildebrandt@uni-oldenburg.de cba doi:10.18420/infos2019-39Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 363 16 Claudia Hildebrandt und Matthias Matzner 2 Das Konstrukt informatischer Leistungsstärke sowie Ausblick Eine erste Annäherung an die informatikspezifischen Begabungsmerkmale für Kinder in der Sekundarstufe I, die das Fundament der informatischen Leistungsstärke sind, erfolgt mithilfe der Beachtung und Erweiterung der Ergebnisse von Kujath und Schwill [KS11], die die Problemlösefähigkeit von Hochleistern (Endrundenteilnehmer des Bundeswettbewerbs Informatik 2005) im Vergleich zu Niedrigleistern (leistungsschwächere Informatikstudenten vor dem Vordiplom) untersucht haben (siehe „Informatikspezifische Merkmale“, Abb. 1). Weiterhin ist anzunehmen, dass die begabungsstützenden Persönlichkeitseigenschaften, die im Modell der Entwicklung mathematischer Begabungen im Grundschulalter nach Käpnick und Fuchs [Kä13] zu finden sind, ebenfalls für leistungsstarke Schüler-innen und Schüler der Informatik zutreffen. Ergänzt werden sie durch die Kommunikations-fähigkeit sowie die Fähigkeit zum Perspektiv-wechsel (siehe „Stützende Persönlichkeitseigen-schaften“, Abb. 1).                                   Abb. 1: Merkmalsystem angelehnt an [Kä13] sowie [KS11] Die aufgestellten informatikspezifischen Leistungsmerkmale sind mithilfe geeigneter Indikatoraufgaben zu verifizieren oder zu widerlegen bzw. neue Merkmale müssen hinzugefügt werden. Kontraststudien mit Hoch- und Niedrigleistern werden folgen.  Literaturverzeichnis [Ip09] International Panel of Experts for Gifted Education. (2009). Professionelle Begabtenförderung. Empfehlungen zur Qualifizierung von Fachkräften in der Begabtenförderung. Salzburg: Österreichisches Zentrum für Begabtenförderung und Begabungsforschung (ÖZBF).   [Kä13] Käpnick, F.: Theorieansätze zur Kennzeichnung des Konstruktes „Mathematische Begabung" im Wandel der Zeit. In (Firtzlar, T.; Käpnick, F., Hrsg.): Mathematische Begabungen, 1. Aufl., WTM-Verlag, Münster, 2013, S. 9–40. [KB18] Käpnick, F.; Benölken, R.: „Leistung macht Schule“ (LemaS). Ein BMBF-Projekt zur Förderung leistungsstarker und potenziell besonders leistungsfähiger Schülerinnen und Schüler. Mitteilungen der GDM 105/2018, S. 27-28, 2018.  [KS11] Kujath, B., Schwill, A.: Hochleister bei der Lösung informatischer Probleme - Was können Niedrigleister lernen. In (Bayrhuber, H.; Harms, U.; Muszynski, B.; Ralle, B.; Rothgangel, M.; Schön, L.-H.; Vollmer, H. J.; Weigand, H.-G., Hrsg.): Empirische Fundierung in den Fachdidaktiken, S. 147-158, 2011.  364 Claudia Hildebrandt, Matthias Matzner<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 Gratulation! Sie haben die Prüfung bestanden. Ergebnisse einer empirischen Umfrage zum ECDL an österreichischen Schulen. Peter Micheuz1  Abstract: Der ECDL hat seit mehr als 20 Jahren einen nicht zu vernachlässigenden Teil österrei-chischer Schulgeschichte im Kontext digitaler (Aus)Bildung geschrieben. Dieser empirisch ange-legte Beitrag befasst sich mit den Ergebnissen einer repräsentativen Umfrage über dieses internati-onale Zertifikat unter österreichischen Informatiklehrenden.  Keywords: Zertifikat, Syllabus, Qualifikation, IT-Skills, Digitale Grundbildung 1 Einleitung und methodisches Vorgehen  Im Jahr 1997 kam der ECDL (European Computer Driving License) durch die Österrei-chische Computergesellschaft auch nach Österreich. Kurz darauf  wurde der ECDL an österreichischen Schulen angeboten. Der Schwerpunkt des Beitrages liegt in der Darstel-lung der Ergebnisse einer im Jahr 2017 durchgeführten repräsentativen Online-Umfrage unter Experten und Lehrkräften. Er liefert ein differenziertes (Stimmungs)Bild der subjek-tiven Einstellungen und Meinungen zum Angebot des ECDL an österreichischen Schulen.  Im Juni 2017 wurde unter den registrierten Usern des österreichischen Informatik-Portals eine Online-Umfrage durchgeführt. Mit der Erhebung sollte eine Momentaufnahme von Expertenmeinungen einholt werden, um daraus eine Standortbestimmung zum ECDL an österreichischen Schulen ableiten zu können. 140 Rückmeldungen von Experten aus ganz Österreich und aus verschiedenen Schultypen wurden sowohl quantitativ als auch qualita-tiv ausgewertet.   2 Auszüge der Ergebnisse der Umfrage  Beispiele von Freiantworten: • „IT/EDV/Office Wissen geht durch Handy & Co teilweise verloren. Daher ECDL nach wie vor wichtig! (Nach NMS in AHS/BMHS teilweise schon wieder grobe Lücken im Anwendungswissen)“  • „Nachweis von erworbenen Kompetenzen, administrativer Aufwand“                                                          1 Alpen-Adria-Universität Klagenfurt, Institut für Informatik und deren Didaktik, Universitätsstraße 65-67, 9020 Klagenfurt, peter.micheuz@aau.at cba doi:10.18420/infos2019-40Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 365 16 Vorname1 Nachname1 und Vorname2 Nachname2 • „Produktschulung, microsoftlastig, keine informatischen Konzepte“  • „kein Thema / AHS: zu früh für's Berufleben / Kompetezen können lustvoller er-worben werden“ Kumulierte exemplarische Ergebnisse von quantitativ erfassten Daten:  Auszüge der SWOT-Analyse zu inhaltlichen Aspekten:  Kategorie Stärken – Chancen Schwächen - Bedrohungen Inhaltliche Aspekte Klare Stoffabgrenzung, Basis-kompetenzen. Gute Unterla-gen (Portal easy4me). 1x1 der Informatik. Wirt-schaftszertifikat. Abdeckung der Office-Skills. Inhalte z.T. lebensfremd. Nur bedingt für alle von Bedeutung. Informatik ist mehr als ECDL. Hat nichts mit Informatik zu tun. In-formatik kommt zu kurz. Zuviel Produkt-schulung – keine Konzeptschulung. Zu ein-fach: Zuviel wird bei Prüfungen angegeben (z.B. Formeln) 3 Schlussanmerkungen Mit diesem Beitrag wurde versucht, auf Grundlage einer Befragung unter Experten ein möglichst objektives und nicht „schöngefärbtes“ (Stimmungs)Bild des ECDL an österrei-chischen Schulen zu zeichnen. Die Umfrage ergab eine starke Polarisierung, wobei sich die Befürworter und Gegner des ECDL ziemlich die Waage halten.  Die kürzlich ab dem Schuljahr 2018/2019 verordnete Einführung des Faches Digitale Grundbildung für die Sekundarstufe I (5.-8. Schulstufe) mit einem sehr detaillierten Lehr-plan hat auch die Rahmenbedingungen für den ECDL geändert. Derzeit kann noch nie-mand sagen, wie sich das auswirken wird. Die Entwicklungen rund um den ECDL an österreichischen Schulen befinden sich auf jeden Fall in einer sehr interessanten Phase.  366 Peter Micheuz<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 15 Freies Explorieren und Programmieren Erkenntnisse über die Eignung didaktischer Materialien mit informatischem Fokus für offene Unterrichtskonzepte in der Grundschule Philipp Straube1, Martin Brämer2 und Hilde Köster3  Abstract: Innerhalb eines offenen Lernsettings wurde das Interesse an unterschiedlichen Lernmedien mit informatischem Fokus in einer Grundschulklasse evaluiert. Es zeigten sich signifikante Genderdifferenzen. Keywords: Sachunterricht, Computational Thinking, Grundschule  Die fortschreitende Digitalisierung der Lebenswelt führt zu Herausforderungen, die Kompetenzen erfordern, die über eine reine Medienbildung hinausgehen [Dö17]. Dementsprechend ist eine Förderung informatischer Kompetenzen auch in der Grundschule anzustreben [Ge19].  Didaktische Materialien mit informatischem Fokus, die potentiell auch für die Grundschule geeignet scheinen, zeigen zunehmende Verbreitung. Eine systematische Evaluation dieser Materialien stellt aktuell ein Desiderat dar. Diese Studie untersucht das Interesse von Kindern einer 1.-3. Klassenstufe in Bezug zu unterschiedlichen Lernmedien mit informatischem Fokus. Konkret soll untersucht werden, ob sich Unterschiede im Interesse bei Mädchen und Jungen in Relation zu unterschiedlichen Lernmedien mit informatischem Fokus zeigen. Interesse wird hier verstanden als „[…] die Beziehung einer Person zu und die Auseinandersetzung mit erfahrbaren Ausschnitten ihrer Umwelt. Im Hintergrund steht eine Person-Gegenstands-Konzeption“ [Kr99]. Als ein Indikator für Interesse wird hier die maximale Verweildauer an den konkreten Stationen betrachtet. Die hier betrachtete Lernumgebung orientiert sich an der Konzeption des Freien Explorierens und Experimentierens [Kö06] und besteht aus elf verschiedenen Angeboten mit informatischem Fokus, die teilweise hardwarebasiert (z.B. Roboter) und teilweise ausschließlich softwarebasiert (z.B. Online-Spiele) sind. Die Kinder sollten die Materialien selbstbestimmt und selbstorganisiert explorieren bzw. damit arbeiten.                                                         1 Freie Universität Berlin, FB Erziehungswissenschaften und Psychologie, AB Grundschulpädagogik / Sachunterricht, Habelschwerdter Allee 45, 14195 Berlin, philipp.straube@fu-berlin.de 2 siehe 1, martin.braemer@fu-berlin.de 3 siehe 1, hilde.koester@fu-berlin.de cba doi:10.18420/infos2019-41Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 367 16 Philipp Straube, Martin Brämer & Hilde Köster Die Stichprobe besteht aus einer Berliner Grundschulklasse (N = 28), die jahrgangs-übergreifend (Jül 1.-3. Klasse) lernt. Die Gruppe beinhaltet 14 Jungen und 14 Mädchen (1. Klasse: 8 Schüler*innen; 2. Klasse: 10 Schüler*innen; 3. Klasse: 10 Schüler*innen).  Die Lernumgebung wurde videographiert und die Daten quantitativ im Hinblick auf die maximale Verweildauer an den Stationen ausgewertet. Mögliche Unterschiede wurden mit dem Wilcoxon-Man-Whitney-U-Test geprüft.  Die Analysen zeigen für die drei hier betrachteten Materialien (Scratch Jr., Lego® EV3, Lego® WeDo) Genderdifferenzen in Bezug auf die maximale Verweildauer. Eine statistische Überprüfung zeigt nicht-signifikante Unterschiede an der Station Lego® WeDo (U=17, p= 0.050, d=0.63).  Ein signifikanter Effekt mittlerer Stärke zu Gunsten der Jungen zeigt sich an der Station Lego® EV3 (U = 7, p = 0.041*, d = 0.65). Bei Scratch Junior konnte ein höchst signifikanter Effekt hoher Effektstärke zu Gunsten der Mädchen festgestellt werden. (U = 102, p = 0.000***, d = 1.01).  Die Ergebnisse deuten darauf hin, dass Lego® EV3 eher Jungen zu interessieren scheint, wohingegen die Mädchen eher eine Präferenz für Scratch Junior zeigen. Die Differenz in der Verweildauer zu Gunsten der Jungen an der Station Lego® WeDo verfehlt die Signifikanz knapp.  Folgende Untersuchungen müssen zeigen, inwiefern diese Trends weitere Evidenz finden. Literaturverzeichnis [Dö17] Döbeli Honegger, B.: Mehr als 0 und 1. Schule in einer digitalisierten Welt. Hep Verlag, Bern, 2017. [Ge19] Gesellschaft für Informatik: Kompetenzen für informatische Bildung im Primarbereich. https://dl.gi.de/bitstream/handle/20.500.12116/20121/61-GI-Empfehlung_Kompetenzen_informatische_Bildung_Primarbereich.pdf, 14.02.2019. [Kö06] Köster, H.: Freies Explorieren und Experimentieren. Eine Untersuchung zur selbstbestimmten Gewinnung von Erfahrungen mit physikalischen Phänomenen im Sachunterricht. Logos-Verl., Berlin, 2006. [Kr99] Krapp, A.: Intrinsische Lernmotivation und Interesse. In Zeitschrift für Pädagogik, 1999, 45; S. 387–406. 368 Philipp Straube, Martin Brämer, Hilde Köster<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 Aufhören oder weitermachen? Ursachen des Studienabbruchs im Fach Informatik Juliane Wegner1, Mona Arndt2  Abstract: Der Übergang von der Schule in die Hochschule gestaltet sich für Studenten der Informatik auf vielschichtige Art und Weise problematisch. Wesentliches Ziel der Studie ist die Identifikation von Herausforderungen und Spezifika des Fachbereichs Informatik in Hinblick auf Studierfähigkeit und Studienerfolg sowie die Markierung von Stellschrauben für einen höheren Studienerfolg. Erste Ergebnisse zeigen: Die Ursachen für einen Studienabbruch liegen v. a. in den Leistungsanforderungen und der zu bewältigende Stoffmenge. Keywords: Ursachen Studienabbruch, Informatikstudium, Studierfähigkeit, Belastungen, Herausforderungen 1 Vorbemerkung In Zeiten des Lehr- und Fachkräftemangels steht neben der schulischen auch die akademische Bildung im Fokus – nur ein geringer Teil der Informatikstudenten erlangt einen Studienabschluss. Laut Kultusministerkonferenz sind in den kommenden Jahren in den Lehrämtern Einstellungs-bedarfe v. a. in den MINT-Fächern zu erwarten [KK18]. Aber auch in der IT-Branche gab es im vergangenen Jahr knapp 40.000 unbesetzte Stellen [AKP18]. Um dem Mangel an Lehr- und Fachkräften entgegenzuwirken, muss der Anteil der Absolventen gesteigert werden. Zur Ent-wicklung entsprechender Maßnahmen und zur effizienten Nutzung von Ressourcen sind gesicherte Kenntnisse über die Ursachen und Bedingungen des Studienabbruchs notwendig [He17]. Die Förderung der Studierfähigkeit scheint essentiell. Sie beschreibt den individuellen Umgang mit Herausforderungen des Studiums auf verschiedenen Ebenen. Bereits während der Schulzeit werden hierfür erste Grundsteine gelegt (Grundkompetenzen Verstehen und Schreiben) und im Rahmen des Studiums erfolgt die Weiterentwicklung (fachspezifische Inhalte und Transfer-leistungen) [Be16]. Ein Studienabbruch ist in der Regel auf eine Vielzahl von Faktoren zurückzuführen. Studienabbrecher scheitern am häufigsten an den hohen Studienanforderungen bzw. an den fehlenden fachlichen Voraussetzungen, aber auch die mangelnde Motivation ist zentral. Der dritthäufigste Abbruchgrund ist die Orientierung auf eine praktische Tätigkeit. Vermisst wird der Praxis- und Berufsfeldbezug im Studiengang. Eine Ausbildung erscheint als attraktive Alternative [He17].                                                         1 Universität Rostock, Zentrum für Lehrerbildung und Bildungsforschung, Doberaner Straße 115, 18057 Rostock, juliane.wegner@uni-rostock.de 2 Universität Rostock, Zentrum für Lehrerbildung und Bildungsforschung, Doberaner Straße 115, 18057 Rostock, mona.arndt@uni-rostock.de cba doi:10.18420/infos2019-42Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 369 16 Juliane Wegner und Mona Arndt 2 Untersuchung und Ergebnisse Im Projektverlauf sollen die folgenden Fragen insbesondere für die Lehramtsstudenten beantwortet werden: Welche Ursachen und Bedingungen führen zum Studienabbruch? Inwieweit können aus diesen Erkenntnissen Maßnahmen abgeleitet werden, um den Studienerfolg im Fach Informatik zu erhöhen?  In der Untersuchung werden Studenten des Faches Informatik der Universität Rostock befragt. Methodisch liegt dem Projekt eine schriftliche Datenerhebung mithilfe eines standardi-sierten Fragebogens zugrunde (Paper-Pencil-Befragung). Dieser beinhaltet sowohl Fragen zur Situation vor und während des Studiums als auch zur Wahrnehmung der Anforderungen, der Lehre und des eigenen Lern- und Studierverhaltens. Bisher gibt es drei Erhebungszeiträume, welche jeweils am Ende der Vorlesungszeit der einzelnen Semester liegen. Begonnen wurde im Wintersemester 2017/18 mit der Befragung der Erstsemesterstudierenden. Im Sommersemester 2018 erfolgte die zweite und im Wintersemsesters 2018/19 die dritte Erhebung. Erste Auswertungen der Ergebnisse weisen darauf hin, dass etwa zwei Drittel der Studenten zumindest teilweise Sorge hat, das Studium erfolgreich abzuschließen. Die Leistungs-anforderungen (45 %) und die Komplexität bzw. der Umfang der Lehrinhalte (44 %) wird von ihnen als stark belastend empfunden. Auch bevorstehende Prüfungen (36 %) können zur Über-forderung führen. Weiter werden fehlende Kenntnisse hinsichtlich der universitären Organisation bzw. Strukturen (41 %) und mangelnde Studienmotivation (33 %) angeführt. Es zeigt sich, dass sowohl fachliche als auch überfachliche Kompetenzen und organisatorische Bedingungen des Studiengangs Informatik von den Studenten kritisch betrachtet werden. Die Gründe für einen Studienabbruch gestalten sich auch an der Universität Rostock mannigfaltig [He17]. Maßnahmen, die zur Verbesserung der Studiensituation beitragen, werden im Moment diskutiert. Hierzu zählen u. a. die Streckung eines Moduls von einem auf zwei Semester sowie eine bessere inhaltliche Abstimmung zwischen den Modulen. Nur durch verbesserte Studienbedingungen können die Ressourcen und Potentiale nutzbar gemacht werden. Nicht nur vor dem Hintergrund der zunehmenden Digitalisierung und den daraus resultierenden Veränderungen in den Bereichen Lernen, Leben und Arbeiten steht die universitäre Informatik-Ausbildung vor großen Heraus-forderungen. 3 Literaturverzeichnis [AKP18] Anger, C.; Koppel, O.; Plünnecke, A.: MINT-Frühjahrsreport 2018. MINT – Offen-heit, Chancen, Innovationen. Köln, www.iwkoeln.de/fileadmin/user_upload/Studien/Gutachten/PDF/2018/MINT-Fr%C3%BChjahrsreport_2018neu.pdf, 07.02.2019. [Be16] Berk, I. et al.: Studierfähigkeit. Theoretische Erkenntnisse, empirische Befunde und praktische Perspektiven. Universitätskolleg-Schriften Band 15, Hamburg, 2016. [He17] Heublein, U. et al.: Zwischen Studienerwartungen und Studienwirklichkeit. Forum Hochschule, DZHW, www.dzhw.eu/pdf/pub_fh/fh-201701.pdf, 08.02.2019. [KK18] KK, Kultusministerkonferenz, Lehrereinstellungsbedarf und -angebot in der Bundesrepublik Deutschland 2018 – 2030. Zusammengefasste Modellrechnungen der Länder. www.kmk.org/fileadmin/Dateien/pdf/Statistik/Dokumentationen/Dok_216_Bericht_LEB_LEA_2018.pdf, 08.02.2019. 370 Juliane Wegner, Mona ArndtWorkshopscbaEditor (Hrsg.): INFOS 2019,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 11Informatiksysteme für den Unterricht aufbereitenMike Barkmin1, Torsten Brinda2Abstract:Dem Fach Informatik kommt eine immer größer werdende Bedeutung zu. Als Bezugswis-senschaft für die Digitalisierung kann das Fach den Schüler*innen Kompetenzen vermitteln, um dievon der Digitalisierung geprägten Welt verstehen und mitgestalten zu können. Eine wichtige Facetteim Kompetenzaufbau ist die Förderung eines übergreifenden Verständnisses von Informatiksystemen,sodass sich Schüler*innen auch unbekannte Systeme erschließen können [Ge16]. Ein Informatiksys-tem ist dabei eine Zusammenstellung von Hardware-, und Software- und Netzwerkkomponenten.Die Herausforderung beim Erschließen von Informatiksystemen besteht darin, dass ein Großteildes Systems nicht direkt sichtbar ist und mit diesem auch nur indirekt agiert wird. Schüler*inneninteragieren in der Regel sogar nur mit der Oberﬂäche eines Informatiksystems, z.B. bei der Benutzungeiner Chat-App. Wichtige Komponenten wie der Transport einer Nachricht durch ein Netzwerk,die Verarbeitung dieser durch mehrere Server oder ihre Speicherung bleiben für Schüler*innen imVerborgenen. Eine Aufgabe von Informatikunterricht besteht darin, den Schüler*innen die nötigenKompetenzen zu vermitteln, um das Verborgene zu verstehen. Stechert [St09] beschreibt zu diesemZweck drei Kompetenzbereiche: (i) Aspekte des nach außen sichtbaren Verhaltens, (ii) Aspekteder inneren Struktur, die auf Strukturmodellen und vernetzten fundamentalen Ideen der Informatikbasieren, (iii) ausgewählte Implementierungsaspekte zur Entwicklung einer konkreten Realisierung.Im Workshop werden die Teilnehmer*innen zunächst ein Vorgehen zur Analyse von Informatiksyste-men kennen lernen. Am Beispiel des Projekts Smartlights werden sie selbst aktiv und nehmen dieRolle der Schüler*innen ein. Die Auswahl der Werkzeuge richtet sich dabei nach den Bedürfnissender Teilnehmer*innen. Anschließend wird gemeinsam über die Grenzen, Schwierigkeiten und Poten-tiale des Ansatzes diskutiert. Zum Abschluss werden dokumentierte reduzierte und rekonstruierteInformatiksysteme von Studierenden präsentiert, um den Teilnehmer*innen weitere Anregungen fürden schulischen Einsatz zu geben.Keywords:Informatiksystem; IOT; Didaktische Reduktion und RekonstruktionLiteratur[Ge16]Gesellschaft für Informatik e. V. (Hrsg.): Bildungsstandards Informatik für dieSekundarstufe II. LOG IN/183/184, Beilage zum Heft, 2016.[St09]Stechert, P.: Fachdidaktische Diskussion von Informatiksystemen und der Kompe-tenzentwicklung im Informatikunterricht. Univ.verlag Potsdam, Potsdam, 2009.1Universität Duisburg-Essen, Didaktik der Informatik,mike.barkmin@uni-due.de2Universität Duisburg-Essen, Didaktik der Informatik,torsten.brinda@uni-due.decba doi:10.18420/infos2019-43Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 373<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 Agile Schule – Weiterentwicklung des Projektunterrichts in der Informatik und darüber hinaus (Workshop) Peter Brichzin1, Petra Kastl2 und Ralf Romeike3 Abstract: In Start-ups geht heute fast nichts mehr ohne Agile Softwareentwicklung. Auch in der Schule wird Projektunterricht dank agiler Methoden gewinnbringender und kann SchülerInnen zur Selbstorganisation anleiten. Der Workshop Agile Schule beschreibt wie [BRK19] aus der schulprak-tischen Perspektive Hintergründe und Philosophie agiler Methoden, illustriert diese an konkreten Praxisbeispielen und stellt Umsetzungshinweise in Form eines praxiserprobten „Methodenkoffers“ zur Verfügung. Erfahrungen zeigen, dass SchülerInnen in agilen Projekten erworbene Selbstorgani-sationskompetenzen auch in anderen Fächern erfolgreich einsetzen. Anliegen des Workshops ist es, für die TeilnehmerInnen das Potenzial agiler Methoden in schuli-schen Informatikprojekten konkret aufzuzeigen. So werden zu Beginn das iterative Vorgehen und typische agile Werte über ein Spiel erfahrbar gemacht. Danach werden zu ausgewählten grundle-genden agilen Praktiken jeweils der professionelle Hintergrund den Varianten schulischer Umset-zung, möglichen Stolpersteinen sowie Tipps und Tricks gegenübergestellt. Exemplarisch seien hier User-Storys genannt, die Anforderungen an eine Software aus Sicht des Kunden beschreiben. In Form von didaktischen Varianten können User-Storys auch eingesetzt werden, den Lernprozess zu strukturieren, indem diese Varianten über eine entsprechende Priorisierung in den Projektablauf ein-geflochten werden und einen entsprechenden Zeitrahmen innerhalb der Iterationsplanung erhalten. Als Varianten verwenden wir einerseits Modeling-Storys, die einen konkreten Modellierungsauftrag z. B. die Erstellung eines Klassendiagramms enthalten. Modeling-Storys können von den SchülerInnen eines Teams bei Bedarf in ihre Planung aufgenommen werden. Ebenso können sie von der Lehrkraft vorgegeben werden, um eine Reflexion über Strukturen anzustoßen. Eine weitere di-daktische Variante sind Student-Storys, die letztendlich Lernaufgaben darstellen. Der Mehrwert für den Unterricht der vorgestellten Methoden wird anhand praktischer Beispiele illustriert, sodass die TeilnehmerInnen für zukünftige Schulprojekte selbst agile Methoden auswählen und didaktisch an-passen können. Keywords: Agile Methoden, Softwareentwicklung, Pair Programming, Projektunterricht. Literaturverzeichnis [BRK19] Brichzin, P.; Kastl, P.; Romeike, R: Agile Schule, hep-Verlag, Bern 2019.                                                            1 Gymnasium Ottobrunn, Karl-Stieler-Str. 1, 85521 Ottobrunn, peter@brichzin.de 2 Gesamtschule Schenklengsfeld,  Dreienbergstraße 28-36, 36277 Schenklengsfeld, kastl@gesamtschule-schenklengsfeld.de 3 Freie Universität Berlin, Didaktik der Informatik, Königin-Luise-Str. 24-26, 14195 Berlin, ralf.romeike@fu-berlin.de cba doi:10.18420/infos2019-44<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 1InstaHub Datenbanken und Datenschutz mit einem extra für den Unterricht entwickelten sozialen Netzwerk unterrichten.Julian Dorn1 Das Internet ist ein wesentlicher  Bestandteil von Jugendlichen. Nach  der  JIM 2018verbringen diese täglich durchschnittlich 3,5 Stunden online. Obwohl Datenbanken derDatenspeicher  fast jeder Webseite sind, ist kaum ein/e SchülerIn  motiviert sich mitdiesen  zu  beschäftigen.  Nach  endlosen  Skandalen  bei  Facebook  veröffentlicheJugendliche noch immer unbekümmert intimste Informationen in sozialen Netzwerken.InstaHub ändert das! Anstelle nur von Gefahren und Funktionsweisen zu reden, lassensie sich hiermit tatsächlich erleben. Nach acht bundesweiten Workshops und über 300angemeldeten LehrerInnen ist InstaHub.org jetzt auch auf der INFOS. InstaHub.org ist ein voll funktionsfähiges soziales Netzwerk, welches sehr ähnlich derbekannten Plattform Instagram ist. Größter Unterschied ist, dass SchülerInnen hier nichteinfach  nur  Benutzer,  sondern  Administratoren  sind.  So  bietet  schon  die  Webseitedeutlich mehr Funktionen: Benutzer und Fotos können gelöscht oder verändert werdenund Details wie das Geburtsdatum eingesehen werden. Ergänzend dazu ermöglicht eineExtraseite den direkten Zugriff auf die Datenbank. Als Administrator hat der oder dieSchülerIn mithilfe einer intuitiven SQL-Eingabe und einer graphischen Abfragesprachedie volle Gewalt über sein eigenes soziales Netzwerk. InstaHub kann auf Wunsch um ein eigenes Benutzertracking und fiktive personalisierteWerbung erweitert werden.Abb. 1: Beschreibung der Abbildung1 WIssen, Leipzig, dorn@wi-wissen.de cba doi:10.18420/infos2019-45Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 375<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 1JavaScript als ideale textbasierte Programmiersprache im Unterricht anhand von ada7 differenziert und motivierend unterrichten.Julian Dorn1 JavaScript ist eine sehr gut für den Informatikunterricht geeignete Programmiersprache.Mit ihr lassen sich Programme entwickeln, welche zu Beginn motivierende Szenarienabbilden  und  später  in  Form  von  Webseiten,  Apps  oder  Spielen  direkt  derLebenswirklichkeit  der  SchülerInnen  entsprechen.  Dadurch  dass  der  Unterrichtvollständig im Browser durchgeführt werden kann, entfallen Wartungsaufwände in derSchule und alle SchülerInnen können auch zu Hause üben. Zum  Erlernen  von  JavaScript  wird  die  vom  Autor  entwickelte  und  kostenfrei  zurVerfügung stehende Plattform ada7.de vorgestellt:Abb. 1: Beschreibung der AbbildungEs wird Blended Learning als Methode zum Lehren vorgestellt, womit eine individuelleFörderung auch bei heterogenen SchülerInnengruppen möglich ist. Dadurch kann einreibungsloser  Unterricht  gestaltet  werden,  in  welchem  alle  SchülerInnen  einenmaximalen Lernerfolg erreichen können, ohne dass für Einzelne Pausen entstehen. Sowird  vermieden,  dass  SchülerInnen  sich  langweilen  und  so  der  Lernerfolg  und  dieDisziplin gestört wird. Die Lehrkraft behält dank eines Dashboards dennoch immer dieÜbersicht über den Lernfortschritt Einzelner.1 WIssen, Leipzig, dorn@wi-wissen.de cba doi:10.18420/infos2019-46Arno Pasternak (Hrsg.): Informatik für alle. INFOS 2019,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 15 „Wie funktioniert das?“ - Informatische Konzepte in der Vor- und Grundschule spielerisch begreifen und anwenden Anja Gärtig-Daugs1, Alexander Werner2, Ute Schmid3   Damit Kinder zu souveränen Akteuren in einer zunehmend von Digitalisierung geprägten Welt werden, bedarf es zielgerichteter Bildungsangebote [SG18]. Im Workshop werden die von der Forschungsgruppe Elementarinformatik entwickelten Lehr-Lern-Konzepte der Experimentierkiste Informatik vorgestellt, die anschließend in Kleingruppen erprobt werden können. Die Materialien der Experimentierkiste sind handlungsorientiert gestaltet und regen zum forschenden und entdeckenden Lernen an. Sie ermöglichen Kindern, sich grundlegende Funktionsprinzipien digitaler Medien zu erschließen und diese kreativ zu nutzen [SWK18].  Ausgehend vom kindlichen Interesse und der Erfahrungswelt der Kinder wurden bislang Konzepte zu folgenden Oberthemen entwickelt:  • Digitale Repräsentation (Wie stellt ein Computer Bilder dar?) mit den Lerneinheiten „Pixel“, „Analog und digital“, „TuxPaint – Bilder am Computer malen, speichern, drucken“ • Algorithmen (Was ist ein Algorithmus?) mit den Einheiten „Such-/Sortier-algorithmen“, „Algorithmen im Alltag“, „Programmieren mit ScratchJr/Scratch“ Literaturverzeichnis [SG18] Schmid, U.; Gärtig-Daugs, A.: Notwendigkeit der Integration elementarinformatischer Lerneinheiten in den Vor- und Grundschulunterricht. In (Bastian, J. Hrsg.): MedienPädagogik. Zeitschrift für Theorie und Praxis der Medienbildung. Themenheft Nr. 31: Digitale Bildung - Medienbezogene Bildungskonzepte für die nächste Gesellschaft, S. 78-106, 2018. [SWG18] Schmid, U.; Weitz, K.; Gärtig-Daugs, A.: (2018). Informatik in der Grundschule. Eine informatisch-pädagogische Perspektive auf informatikdidaktische Konzepte. Informatik-Spektrum 41/3, S. 200-207, 2018.                                                             1 Otto-Friedrich-Universität Bamberg, Forschungsgruppe Elementarinformatik/Kompetenzzentrum für digitales Lehren und Lernen, Luitpoldstraße 19, 96052 Bamberg, anja.gaertig-daugs@uni-bamberg.de 2 Otto-Friedrich-Universität Bamberg, Forschungsgruppe Elementarinformatik/Lehrstuhl für empirische Bildungsforschung, Markusstraße 8a, 96045 Bamberg, alexander.werner@uni-bamberg.de 3 Otto-Friedrich-Universität Bamberg, Forschungsgruppe Elementarinformatik/Professur für Angewandte Informatik, insb. Kognitive Systeme, 96045 Bamberg, ute.schmid@uni-bamberg.de cba doi:10.18420/infos2019-47Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 377cba(Hrsg.): INFOS,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 11Workshop: Internet of Things zum NachbauenLaura Hembrock1, Patrick Tschorn2, Michael Brinkmeier3Abstract:Das Lebensumfeld von Schülerinnen und Schülern wird heutzutage immer mehr vernetzt.Wo früher noch Einkaufslisten per Hand geschrieben werden mussten, kann diese Aufgabe nunAssistenten wie Alexa, Cortana und Siri überlassen werden, oder aber der Kühlschrank sendet einfachselbst ein Bild seines Inhaltes in den Supermarkt.Der Workshop „IoT zum Nachbauen“4bietet eine gute Gelegenheit ein Projekt durchzuführen, beidem die Schülerinnen und Schüler ein Beispiel für die Vernetzung von Informatiksystemen selbererfahren können.Im Laufe des Workshops soll von den Teilnehmenden Stadiontechnik für einen Tischkicker im-plementiert werden. Dazu gehören z.B. Toranzeigen für die beiden gegnerischen Teams und eineAnzeige für die verbleibende Spielzeit. Gesteuert wird die Stadiontechnik von einem Schiedsrichtermithilfe eines Tablets. Von diesem wird ein Calliope Mini mit HTTP-Requests angesteuert, derwiederum ein entsprechendes Signal per Funk an die Mikrocontroller mit den einzelnen Funktionender Stadiontechnik sendet.Der Workshop beginnt mit einer kurzen Einführung zu abbozza! und dem Calliope Mini. Währendder gesamten Zeit wird die Methode des Pair Programming verwendet.Nach der Einführung tre en sich alle Teilnehmenden, um gemeinsam die gewünschten Funktionenzu besprechen. Hier ist eine Variation von Gruppe zu Gruppe möglich, da die Teilnehmenden sehrfrei entscheiden können, was implementiert werden soll. Stehen die umzusetzenden Funktionen fest,wird mit den Teilnehmenden über die Notwendigkeit eines Kommunikationsprotokolls diskutiert. ImAnschluss an die Diskussion wird mit den Teilnehmenden ein Kommunikationsprotokoll entwickelt unddie einzelnen Funktionen der Stadiontechnik auf die Programmier-Teams aufgeteilt. Ein Team bekommtdabei die Aufgabe den Master-Calliope, welcher die HTTP-Requests empfängt, zu programmierenund ein weiteres soll die App für das Tablet des Schiedsrichters mit dem MIT App-Inventor erstellen.Während die Programmier-Teams nach der Besprechung in die Implementierung ihrer Funktionenstarten, bekommt das App-Team zuerst eine Einweisung in die Arbeit mit dem App-Inventor. Sind alleTeams mit ihren Aufgaben fertig, wird die Stadiontechnik mit einem Spiel am Tischkicker getestet.Keywords:Internet of Things; Calliope Mini; graphische Programmierung; Mittelstufe; K-12education1Universität Osnabrück, Institut für Informatik, Wachsbleiche 27, 49090 Osnabrücklhembrock@uos.deDie Autorin wird im Rahmen des PhyCoS-Projektes von der Stiftung Stahlwerk Georgsmarienhütte, der Stiftungder Sparkassen im Landkreis Osnabrück und der Stiftung der Sparkasse Osnabrück gefördert.2Universität Osnabrück, Institut für Informatik, Wachsbleiche 27, 49090 Osnabrückpatschorn@uos.de3Universität Osnabrück, Institut für Informatik, Wachsbleiche 27, 49090 Osnabrückmbrinkmeier@uos.de4Die Materialien sind unterhttps://tinyurl.com/workshopuoszu ﬁnden.cba doi:10.18420/infos2019-48<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 Quadrologik – Modularisierung von Schaltnetzen und Schaltwerken Tobias Jördens1, Jens Gallenbacher2  Abstract: Aufbauend auf dem von uns auf der INFOS2017 vorgestellten System Quadrologik wurde ein Programmiergerät entwickelt, mit dem Schaltnetze und Schaltwerke modularisiert werden können.  Der Grundgedanke für die hier vorgestellte Erweiterung von Quadrologik ist, dass durch Legen erstellte (und als solche getestete) Schaltungen von einem Programmiergerät erfasst werden, um diese dann in ein Logikmodul zu übertragen. Dieses Logikmodul simuliert die gelegte Schaltung und kann von da an in weiteren Schaltungen genutzt werden. Auf diese Weise können auch mehrere identische Module generiert werden, um zum Beispiel komplexere Schaltungen zu realisieren. Im Workshop wird dieses Verfahren vorgestellt und anhand von Beispielen die Möglichkeiten und didaktischen Ideen zur Modularisierung dargestellt. Da die Modularisierungstiefe von Schaltwerken im momentanen Modell noch endlich ist, wollen wir im Workshop über die didaktischen Möglichkeiten und Notwendigkeiten diskutieren. Keywords: Modularisierung, Modellbildung, Technische Informatik, Digitaltechnik, Logikgatter, Logikstecksystem, Logische Schaltungen, Rechnertechnik                                                             1 Schuldorf Bergstraße und Technische Universität Darmstadt, Didaktik der Informatik, Hochschulstraße 10, 64289 Darmstadt, tj@di.tu-darmstadt.de 2 Technische Universität Darmstadt, Didaktik der Informatik, Hochschulstraße 10, 64289 Darmstadt, jg@di.tu-darmstadt.de cba doi:10.18420/infos2019-49Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 379<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 Mehr als Programmieren lernen - einen Mikrocontroller-Roboter zum Leben erwecken Zweitägiges Workshopkonzept zur Mädchenförderung mit dem B-O-B-3 Andrea Langer1, Nadine Bergner2 und Ulrik Schroeder1  Abstract: Da die Informatik auch 2019 weit von der gewünschten Frauenquote entfernt ist, bedarf es innovativer Ideen und neuartiger Zugänge, um Mädchen an die Informatik und insbesondere an die Programmierung heranzuführen. Im Rahmen des seit 2008 laufenden Mädchenförderprojektes go4IT!3 der RWTH Aachen wurde ein bereits etablierter Robotik-Workshop mit Lego Mindstorms durch ein Workshop-Programm mit dem Roboter B-O-B-3 ergänzt. Aufbauend auf den Erfahrungen aus über 250 go4IT! [Le15] wurde ein Workshop zum Informatikeinstieg konzipiert, der Themen wie Aufbau eines Informatiksystems, Sensorik und Binärsystem ebenso behandelt wie den Einstieg in die Algorithmik und Programmierung. Durchgeführt wird der neue B-O-B-3-Workshop (wie auch der bisherige Mindstorms-Workshop) mit 12-14 Mädchen der Klassenstufe 6 bis 8 an zwei aufeinanderfolgenden Tagen direkt in den Schulen, um die Einstiegshürde für die Mädchen möglichst gering zu halten. Geleitet werden die Workshops von zwei (hilfs-)wissenschaftlichen Mitarbeiterinnen aus dem MINT-Bereich, die gleichzeitig als Role Models dienen. Das neue Mädchenförderkonzept hat dabei drei besondere Stärken: (1) Die Montage des Roboters durch die Mädchen geschieht mittels Löten der einzelnen Komponenten auf die vorgefertigte Platine, was im Gegensatz zum eher spielerisch wirkenden Aufbau eines Lego Mindstorms ein hohes Maß an Professionalität bewirkt. (2) Durch den kompetenzorientierten Wechsel der Programmiersprachen von der grafischen Sprache Ardublockly zur textuellen Programmierung mittels Arduino gelingt die Kombination aus weichem Einstieg für Novizinnen und dem professionellen Endergebnis. (3) Die Identifikation mit dem Informatiksystem des B-O-B-3 und die Nachhaltigkeit der einmaligen Maßnahme werden durch den Übergang der Roboter in den Besitz der Mädchen verstärkt. Das neue Workshop-Konzept wurde bisher mit 8 Gruppen an verschiedenen Schulen in NRW erprobt. Das Feedback der Mädchen am Ende der Workshops war durchweg gut und nach ihrer eigenen Einschätzung eine Fortführung der Programmierung sehr wahrscheinlich. Insbesondere positiv erwähnt wurde dabei die Löterfahrung und die Durchführung als genderspezifische Maßnahme. Trotz und vielleicht auch gerade wegen einiger Schwierigkeiten und Hürden beim Umstieg auf die textuelle Programmierung, sehen die Mädchen die Bewältigung derselben meist als persönliches Erfolgserlebnis und als durchaus positive Erfahrung. Literaturverzeichnis [Le15] Leonhardt, T.: Etablierung eines begabungsfördernden Lernumfeldes für Mädchen im Bereich der Informatik. RWTH Aachen, Aachen, 2015.                                                            1 RWTH Aachen, Lehr- und Forschungsgebiet Informatik 9, Ahornstr. 55, 52074 Aachen, a.langer@informatik.rwth-aachen.de bzw. schroeder@informatik.rwth-aachen.de 2 TU Dresden, Professur für Didaktik der Informatik, Nöthnitzer Str. 46, 01187 Dresden, nadine.bergner@tu-dresden.de 3 http://www.schuelerlabor.informatik.rwth-aachen.de/go4it cba doi:10.18420/infos2019-50cbaA. Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 11Über Lottofeen zu (mehr) ComputernerdsUndoing Gender im Informatikunterricht durch eine selbstreﬂektierte Konfrontationmit geschlechtsspeziﬁschen StereotypisierungenKris Markussen, Kirsten Alich, Jana Gerdes, Mareike Daeglau, Nils Pancratz, Ira Diethelm1Extended Abstract:Lehrende in der Informatik werden trotz aller Aufgeschlossenheit ggü. Gender-und Diversity-Themen von der in diesem Fachbereich präsenten männlich konnotierten Fachkultur,unreﬂektierten Machtverhältnissen, fachspeziﬁschen Verhaltensmustern und vorherrschenden ge-schlechtsspeziﬁschen Normen- und Wertesystemen beeinﬂusst. Diese inhärenten gesellschaftlichenStrukturen erschweren eine gleichberechtigte Teilhabe aller Geschlechter am Informatikunterricht.Eine weitere Rolle spielen die in der jeweiligen Fachkultur herrschenden (männlichen) Selbstverständ-nisse und die im Sinne des „Doing Gender“ hergestellten Geschlechterordnungen. Bath fordert indiesem Kontext eine Auseinandersetzung nicht nur mit Frauen in MINT, sondern v. a. mit GenderStudies in MINT im Sinne der „Gender Science“. Sie schlägt u. a. eine „Reﬂektion des eigenen Anteilsan binären Geschlechterkonstruktionen“ [Ba15, 111] in MINT vor. An dieser Stelle setzen wir mitunserem Workshop an. Mit dem an das Identitätenlotto2angelehnten Spiel soll unter Berücksichtigungder Vorerfahrungen der Teilnehmenden zunächst ein Perspektivwechsel vollzogen werden. Anhandexpl. Fallbeispiele werden wir Perspektiven anderer Identitäten betrachten und uns mit eigenenVorurteilen, Zuschreibungen und Handlungsmustern konfrontieren und unser Unterrichtsverhaltenreﬂektieren. Dazu werden im Workshop folgende Fragen in Bezug auf die betrachteten Identitäten ge-stellt: Welches genderspeziﬁsche Selbstverständnis herrscht in der Fachkultur der Informatik? WelcheExpert*innen repräsentieren auf welcher Grundlage die Fachkultur und welche Ein- und Ausschlüssesind damit verbunden? Wie werden Hierarchien, Gleichberechtigung und Teilhabe gestaltet? WelcheMitgestaltungsmöglichkeiten haben Lernende? Aus dieser Reﬂexion sollen anschließend konstruktiveLösungsansätze entwickelt werden, die in einem gendersensitiven Informatikunterricht angewandtwerden können.Keywords:Gendersensitiver Informatikunterricht; Diversität; reﬂexives unterrichtliches HandelnAnmerkung:Dieser Workshop wurde im Rahmen des Projektssmile(www.smile-smart-it.de), dasvom BMBF unter den Förderkennzeichen 01FP1611 bis 01FP1615 gefördert wird, konzipiert.Literatur:[Ba15]Bath, C.: Sensibilisierung von Lehrenden, aber wofür? Von „Frauen in MINT“ zu „GenderStudies in MINT“. In (Augustin-Dittmann, S.; Gotzmann, H., Hrsg.): MINT gewinntSchülerinnen. Erfolgsfaktoren von Schülerinnen-Projekten in MINT. VS, Wiesbaden, S.111–126, 2015.1Universität Oldenburg, Didaktik der Informatik, Uhlhornsweg 84, 26129 Oldenburg, vorname.nachname@uol.de2BeimIdentitätenlotto(©spielecht Spieleverlag & Juliette Wedl, www.identitaetenlotto.de) handelt es sich um einLehr-/Lernspiel, das die geschlechtliche Vielfalt und damit verbundene Diskriminierung und Mobbing aufzeigt.cba doi:10.18420/infos2019-51Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 381<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 Pair Programming im Klassenraum Eine Digital Game-based Methode für die Sekundarstufe I Maximilian Marowsky1, Paul Ohm2, Julian Dierker3   Abstract: PearUp ist eine digitale Lernplattform, die im Rahmen eines Studierendenprojekts der Universität Osnabrück entwickelt wird. Die Lernplattform unterstützt Informatiklehrer dabei und befähigt fachfremde Lehrkräfte dazu, qualitativ hochwertigen Informatikunterricht anbieten zu können, um Schülern der Sekundarstufe I spielerisch die Grundlagen der Informatik zu vermitteln. Der Ansatz der Lernplattform PearUp ist der des Digital Game-Based Learning: Im Rahmen einer Spielhandlung gründen Schüler in Zweiergruppen ein virtuelles IT-Start-Up, das sich auf das Lösen gegenwartsnaher Informatikaufgaben spezialisiert hat. Die Aufgaben werden in Form von Aufträgen verschiedener Firmen im Bereich der Jobbörse angeboten. Anhand dieser realitätsnahen Aufträge lernen die Schüler die Grundlagen des Programmierens kennen und erleben zugleich, wie aufregend und vielseitig die Arbeitswelt der Informatik sein kann. Erledigte Aufträge generieren virtuelle Einnahmen wie Geld, Erfahrungspunkte und Auszeichnungen. Mit steigender Kompetenz und Stufe erhöht sich die Anzahl der verfügbaren Aufträge sowie die Möglichkeiten das eigene Startup zu personalisieren, indem z.B. Arbeitsplatz und -ort frei gewählt werden können. Das erwirtschaftete Geld hingegen kann in verschiedene Upgrades investiert werden, um weitere Spielmechaniken freizuschalten, wie Werbung zu schalten, mit Auftraggebern verhandeln oder kollaborative Großaufträge mit anderen Kleingruppen bearbeiten zu können. PearUp setzt dabei auf die Arbeitsmethode des Pair Programming, bei der zwei Schüler zusammen am selben Endgerät arbeiten, um eine höhere Qualität zu erreichen. Der Name der Lernplattform spiegelt also den Kerngedanken des Projekts wider, dass gemeinsames Programmieren sowohl Freude bereitet als auch effektiv und lehrreich ist. Die Lehrkraft behält dabei stets den Überblick über all ihre Klassen und deren Gruppen, kann Aufgabenpakete auswählen oder flexibel zusammenstellen, direkt oder indirekt Hilfestellung leisten und sowohl die Leistungen jeder Gruppe als auch die individuellen Leistungen der einzelnen Schüler nachverfolgen und den Lernprozess so gezielt lenken. Unterstützt wird sie dabei von modernen Algorithmen der Learning Analytics. Das erste Aufgabenpaket “Einstieg in die Algorithmik” kann bereits ausführlich getestet werden. Weitere Aufgabenpakete zu den Themen „Datensicherheit“, „Objektorientiertes Programmieren“ und „Maschinelles Lernen“ befinden sich derzeit im Rahmen von Abschlussarbeiten an der Universität Osnabrück in Entwicklung. Zusätzlich soll die Funktionalität um ein Aufgabenerstellungs-Tool erweitert werden, das Lehrkräften eine Entwicklungsumgebung bietet, mit der sie, ihren Wünschen entsprechend, Aufgaben erstellen können.                                                         1 Universität Witten/Herdecke, Psychologie, Martinistr. 46, 49078 Osnabrück, Maximilian.Marowsky@uni-wh.de 2 Universität Osnabrück, Lehramt, Martinistr. 46, 49078 Osnabrück, pohm@uos.de 3 Universität Osnabrück, Lehramt, Ernst-Sievers-Straße 76a, 49078 Osnabrück, jdierker@uos.de cba doi:10.18420/infos2019-52cbaHerausgeber et al. (Hrsg.): INFOS,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 11Workshop: Maschinelles Lernen UnpluggedElisaweta Ossovski1, Michael Brinkmeier2Abstract:Künstliche Intelligenz, bei der Maschinelles Lernen als Grundtechnik eine wichtigeRolle spielt, wird immer häuﬁger in den Medien thematisiert und bewertet, ohne auf die konkreteFunktionsweise einzugehen. Dadurch kann gerade bei Schülerinnen und Schülern ein falschesBild davon entstehen. Der bereits mit einigen Gruppen erprobte Workshop3„Maschinelles LernenUnplugged“ stellt dabei einen ersten Versuch dar, wie Schülerinnen und Schülern das TeilgebietMaschinelles Lernen mit einem Unplugged-Konzept näher gebracht werden kann.Im Anschluss an einen kurzen theoretischen Impuls, der eine Motivation für die handlungsorientiertePhase gibt, sollen die Teilnehmenden mithilfe einer Pinnwand, Pinnnadeln sowie einer Holzleisteeine lernende Maschine entwickeln, die zwei Arten von Schrauben klassiﬁzieren kann. Dabei fällt zurDatengenerierung eine zu klassiﬁzierende Schraube zufällig auf eine bewegliche Platte und wird vonoben fotograﬁert. Auf diesem Bild wird eine Bounding Box bestimmt und die Maße dieses Rechtecksstellen mit dem jeweils größeren Wert als erste Vektorkomponente und dem jeweils kleineren Wert alszweite Vektorkomponente die Daten dar.Beim Lernprozess werden 20 zufällige Datenkarten aus dem Datensatz einzeln auf der Pinnwandmarkiert und die Holzleiste entsprechend in Richtung des eingefügten Punktes bewegt, wobeidie Holzleiste, die zu Beginn an einem Punkt an der x-Achse ﬁxiert wurde, um eine immergeringere Distanz gedreht wird. Dies entspricht der graphischen Repräsentation eines Perzeptrons,wobei das Lernverfahren zugunsten der Handhabbarkeit vereinfacht wurde. Danach präsentierendie Teilnehmenden jeweils den anderen Gruppen kurz ihr Ergebnis. Bei der Vorstellung sollendiese auch ihre Gedanken während des Durchführens erläutern und die Fragen beantworten, welcheÜberlegungen zur Wahl der initialen Gerade geführt haben und ob sie eine Fortsetzung des Verfahrensfür sinnvoll halten. Die Intention dabei ist die Erkenntnis der Vorteile eines Rechners, um Präzisiongewährleisten und auch kleine Veränderungen sinnvoll durchführen zu können. Diese Eigenschaftenkann die handlungsorientierte Darstellung nicht erfüllen, da eine Bewegung der Holzleiste um wenigeMillimeter keine bedeutenden Ergebnisse hervorrufen würde. Die unterschiedlichen Ergebnisse derGruppen können gegebenenfalls durch weitere auf Bildern dokumentierte Ergebnisse ergänzt und zumAnlass genommen werden, um die Auswirkungen verschiedener Parameter wie die Wahl der initialenGerade sowie die Auswahl und Anzahl der Datenkarten zu diskutieren. Den Abschluss des Workshopsbildet eine Diskussion über weitere Fälle wie andere Größenverhältnisse der Schraubenarten, nichtlinear separable Daten sowie die Möglichkeiten mehr als nur zwei Arten zu klassiﬁzieren.Keywords:Maschinelles Lernen; Linearer Klassiﬁzierer; Unplugged; Oberstufe; K-12 education1Universität Osnabrück, Institut für Informatik, Wachsbleiche 27, 49090 Osnabrück,eossovski@uni-osnabrueck.deDie Autorin wird im Rahmen eines Promotionsstipendiums vom Ernst Ludwig Ehrlich Studienwerk gefördert.2Universität Osnabrück, Institut für Informatik, Wachsbleiche 27, 49090 Osnabrück,mbrinkmeier@uni-osnabrueck.de3Die Materialien sind unterhttps://tinyurl.com/workshopuoszu ﬁnden.cba doi:10.18420/infos2019-53Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 383<First name last name [et. al.]>(ed.): < book title>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <year>    15 Wie gelingt eine obligatorische Weiterbildung für tausende von Lehrpersonen der Volksschule? Ein Erfahrungsbericht mit erlebbaren Praxisteilen aus dem Grundlagenkurs Medien und Informatik. Tobias M. Schifferle1, Eike Rösch1, Peter Suter1 Keywords: Lehrplan, Informatikdidaktik, Grundschule, Volksschule, Ausbildung, Weiterbildung. 2017 wurden mit dem «Lehrplan 21» Informatik und Medienbildung als obligatorische Inhalte in der Volksschule der deutschsprachigen Kantone der Schweiz verankert. Seitdem werden die Themen ab dem Kindergarten integriert und ab der 5. Klasse als eigenständiges Fach «Medien und Informatik» mit einer Wochenstunde unterrichtet. Damit Lehrerinnen und Lehrer das Fach im Kanton Zürich unterrichten dürfen, müssen sie in ihrer unterrichtsfreien Zeit eine 90-stündige Weiterbildung, den Grundlagenkurs Medien und Informatik» (GMI), an der Pädagogischen Hochschule Zürich besuchen. Bis 2021 werden gut 3’000 Lehrpersonen, getrennt nach Niveau Primar- oder Sekundarschule, den GMI absolvieren. Nach Abschluss des ersten Kursjahres wurde evaluiert, wie bereit sich die Lehrpersonen nach dem GMI fühlen, das neue Fach zu unterrichten. Mit n=273 Antwortenden (70% weiblich) betrug die Rücklaufquote 50%. Davon sind 91% der Lehrpersonen (75% davon stark und sehr stark) der Meinung, der GMI habe ihr Interesse, das Fach zu unterrichten, geweckt. 91% trauen sich nach dem Besuch des GMI zu, das Fach Medien und Informatik angemessen zu unterrichten. Knapp die Hälfte der Befragten wünscht sich zurzeit keine zusätzliche Weiterbildung. 39% der Lehrpersonen möchten eine Weiterbildung in 1-2 Jahren, während je 13% entweder gar keine oder möglichst schnell weitere Weiterbildungen wünschen. Wenn Weiterbildungen gewünscht werden, dann sollen sie für eine Mehrheit (88%) kürzer als 8 Stunden sein. Die Resultate der Befragung zeigen, dass das Ziel des GMI, die Lehrpersonen in dieser ersten Phase der Einführung des Faches unterrichtsfähig zu machen, erreicht worden ist. Im Workshop wird berichtet, wie es gelungen ist, diese sehr grosse, heterogene und beim Kursstart meist informatik-unerfahrene Gruppe von Volksschullehrpersonen für den Informatikunterricht zu motivieren und ihnen das nötige Start-Know-How und Vertrauen in die Informatik und -didaktik zu vermitteln. Die Workshopteilnehmenden erleben Activities aus der Weiterbildung und erhalten zusammen mit Hintergrundinformationen zu Aufbau und Didaktik ein Bild dieser handlungsorientierten Weiterbildung, welches anschliessend mit den Teilnehmenden diskutiert wird.                                                         1 Pädagogische Hochschule Zürich, Zentrum Medienbildung und Informatik, Lagerstrasse 2, Zürich, 8090, {tobias.schifferle, eike.roesch, peter.suter}@phzh.ch cba doi:10.18420/infos2019-54cbaArno Pasternak et al. (Hrsg.): INFOS 2019 - Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Maschinelles Lernen im Unterricht mit Jupyter NotebookMichael Schlichtig, Simone Opel, Carsten Schulte1, Rolf Biehler, Daniel Frischemeier,Susanne Podworny, Thomas Wassong2Keywords:Data Science; Machine Learning; KI; Künstliche Neuronale Netze; Entscheidungsbäume;Decision Trees; Big Data; Workshop; Maschinelles Lernen; Artiﬁcial Neural Networks; Python;Jupyter NotebookData Science und Big Data durchdringt in ihren diversen Facetten unser tägliches Leben– kaum ein Tag, an dem nicht verschiedene Meldungen über technische Innovationen,Einsatzmöglichkeiten von Künstlicher Intelligenz (KI) und Maschinelles Lernen (ML) undihre ethischen sowie gesellschaftlichen Implikationen in den unterschiedlichen Mediendiskutiert werden. Aus diesem Grund erscheint es uns immens wichtig, diese Fragestellungenund Technologien auch in den Unterricht der Sekundarstufe II zu integrieren.Um diesem Anspruch gerecht zu werden, entwickelten wir im Rahmen eines Forschungs-projekts ein Curriculum, welches wir als konkretes Unterrichtskonzept innerhalb einesProjektkurses erprobt, evaluiert weiterentwickelt wird. Bei der Implementierung entschiedenwir uns, zur aktiven Umsetzung von Konzepten von ML als Plattform Jupyter Notebook mitPython zu verwenden, da diese Umgebung durch die Verbindung von Code und Hypertextzur Dokumentation und Erklärung Medienbrüche im Lernprozess verringern kann. Zudemist Python zur Implementierung der Methoden von ML sehr gut geeignet.Im Themenfeld des ML als Teilgebiet der KI legen wir den Fokus auf zwei unterschiedli-che Lernverfahren um verschieden Aspekte von ML, u.A. wie Nachvollziehbarkeit untergesellschaftlichen Gesichtspunkten zu vermitteln. Diese sindKünstliche Neuronale Netze(bei denen die Berechnung und Bedeutung der Kantengewichte zwischen den Neuronen fürden Menschen insbesondere bei komplexeren Netzen kaum nachvollziehbar erschienen)undEntscheidungsbäume(strukturierte und gerichtete Bäume zur Darstellung von Ent-scheidungsregeln, welche auch für Schülerinnen und Schüler meist gut nachvollziehbaresund verständliches KI-Modell darstellen). In diesem Workshop stellen wir konkrete Umset-zungsbeispiele inklusive der Programmierung für beide Verfahren mit Jupyter Notebookund Python als Teil einer Unterrichtssequenz vor und diskutieren diese.1Universität Paderborn, Didaktik der Informatik, Fürstenallee 11, 33102 Paderborn, michael.schlichtig@uni-paderborn.de, simone.opel@uni-paderborn.de, carsten.schulte@uni-paderborn.de2Universität Paderborn, Didaktik der Mathematik, Warburger Str. 100, 33098 Paderborn, biehler@math.uni-paderborn.de, dafr@math.uni-paderborn.de, podworny@math.uni-paderborn.de, wassong@math.uni-paderborn.decba doi:10.18420/infos2019-55Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 385<First name last name [et. al.]>(ed.): < book title>, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <year>    15Künstliche Intelligenz im Informatikunterricht der Sek II –Unterrichtsmodul “Lernende Algorithmen”Pascal Schmidt1, Stefan Strobel2 Abstract: Der Workshop zeigt einen unterrichtspraktischen Weg auf, wie in das Thema “LernendeAlgorithmen” am Beispiel von Entscheidungsbäumen im Informatikunterricht der Sekundarstufe IIeingeführt werden kann.Keywords: Entscheidungsbäume, allgemeinbildender Informatikunterricht, Sekundarstufe II.  InhaltsüberblickIm unplugged-Teil werden der Ablauf der Klassifikation nachvollzogen und von Hand(unterschiedliche) Entscheidungsbäume konstruiert [Er08]. Die Mehrdeutigkeit dieserKonstruktion leitet schrittweise zu einer rekursiven Baumerzeugung über, bei der eingieriger  Algorithmus  zur  Attributauswahl  und  der  gewichtete  Gini-Index  alsAttributauswahlmaß genutzt werden [BV08], [BK98].Im  plugged-Teil  besteht  die  Möglichkeit,  anhand  bereitgestellter  Codevorlagen  dieMethode  zur  Baumerzeugung  zu  implementieren.  Zudem  kann  der  Einfluss  vonDatenduplikaten  bzw.  widersprüchlichen  Daten  untersucht  und  der  Algorithmusweiterentwickelt werden. Anhand von Beispielen kann zudem Einsicht in die Grenzender gierigen Attributauswahl gewonnen werden [LS19]. Literatur[BV08]Bankhofer, U.; Vogel, J.: Datenanalyse und Statistik. Gabler-Verlag, Wiesbaden, 2008.[BK98]Borgelt,  C.;  Kruse,  R.:  Attributauswahlmaße  für  die  Induktion  vonEntscheidungsbäumen: Ein Überblick. In: Data Mining: Theoretische Aspekte undAnwendungen. Physica-Verlag, Heidelberg, S. 77-98, 1998. [Er08]Ertel,  W.:  Grundkurs  Künstliche  Intelligenz:  Eine  praxisorientierte  Einführung.Vieweg-Verlag, Wiesbaden, 2008. [LS19]Lambert, A.; Schmidt, P.: Algorithmen im Mathematik- und Informatikunterricht. In:Der Mathematikunterricht, Heft 65(4). Friedrich-Verlag, Seelze, 2019. 1 Universität des Saarlandes, Campus, Geb. E 2 4, 66123 Saarbrücken, pascal.schmidt@uni-saarland.de2 Gymnasium am Rotenbühl, Neugrabenweg 66, 66123 Saarbrücken, stefan-strobel@posteo.eucba doi:10.18420/infos2019-56AutorenverzeichnisAAlich, Kirsten, 381Arndt, Mona, 369BBarkmin, Mike, 373Baum, Kevin, 49Berges, Marc, 161Bergner, Nadine, 380Best, Alexander, 59,237Biehler, Rolf, 285,385Borowski, Christian, 237Brämer, Martin, 367Brichzin, Peter, 374Brinda, Torsten, 25,373Brinkmeier, Michael, 378,383Brüggen, Niels, 25CCapovilla, Dino, 35Chytas, Christos, 295DDaeglau, Mareike, 295,381Dierker, Julian, 382Diethelm, Ira, 23,25,69,295,347,381Dorn, Julian, 375,376EEhmann, Matthias, 161Engbring, Dieter, 171FFandrich, Anatolij, 295Freudenberg, Rita, 237Fricke, Martin, 237Frischemeier, Daniel, 285,385GGall, Rainer, 161Gallenbacher, Jens, 221,379Gärtig-Daugs, Anja, 377Geldreich, Katharina, 181Gerdes, Jana, 381Glücks, Sebastian, 69Göbel, Lisa, 191Gräßl, Christoph, 361Greubel, André, 161Gumpert, Andrea, 201Günzel-Weinkamm, Nicole, 161HHacke, Alexander, 79Haller, Verena, 161Haselmeier, Kathrin, 89,99,237Hausner, Niko, 109Hellmig, Lutz, 191Hembrock, Laura, 378Hennecke, Martin, 161Hermida, Martin, 231Herper, Henry, 237Heuer, Ute, 161Hielscher, Michael, 211Hildebrandt, Claudia, 363Hinz, Volkmar, 237Hochthurn, Tamara, 221Honegger, Beat Döbeli, 231Hubwieser, Peter, 181Humbert, Ludger, 99,119,237JJördens, Tobias, 379KKaczmarek, Oliver, 21Kapp, Florian, 247Kastl, Petra, 374Killich, Klaus, 99Kirsch, Nadine, 49Klinge, Niklas, 351Knaus, Thomas, 25Koch, Andreas, 257Kommer, Sven, 25Kopf, Christine, 25Köster, Hilde, 367Kronawitter, Julia, 161LLanger, Andrea, 380Leschke, Rainer, 25Lindner, Annabel, 161,325Losch, Daniel, 119MMagenheim, Johannes, 139Markussen, Kris, 381Marowsky, Maximilian, 382Matzner, Matthias, 363Meier, Urs, 265Michaeli, Tilman, 129Micheuz, Peter, 275,365Missomelius, Petra, 25Mittag, Alexander, 257Modrow, Eckart, 335Müller, Dorothee, 99,237Müller, Kathrin, 139OOhm, Paul, 382Opel, Simone, 285,385Ossovski, Elisaweta, 383PPancratz, Nils, 295,347,381Petrenko, Ilona, 149Podworny, Susanne, 285,385Pöhner, Nicolai, 161Przybylla, Mareen, 79RReese, Kerstin, 49Romeike, Ralf, 129,325,374Rösch, Eike, 384SSchi erle, Tobias M., 384Schlichtig, Michael, 285,385Schmalfeldt, Thomas, 305Schmid, Regina, 231Schmid, Ute, 377Schmidt, Ann-Katrin, 315Schmidt, Pascal, 49,386Schroeder, Ulrik, 380Schulte, Carsten, 139,247,285,315,385Schwill, Andreas, 79,237Seegerer, Stefan, 325Straube, Philipp, 367Strecker, Kerstin, 335Strobel, Stefan, 386Suter, Peter, 384TTalbot, Mike, 181Thomas, Marco, 149,237,351Tilemann, Friederike, 25Tschorn, Patrick, 378WWachter, Lukas, 49Wagenknecht, Christian, 211Waldvogel, Bettina, 355Wassong, Thomas, 285,385Wegner, Juliane, 369Weich, Andreas, 25Wendlandt, Katharina, 109Wendlandt, Matthias, 109Werner, Alexander, 377Wolf, Verena, 49ZZaugg, Pascal, 201  Arno Pasternak (Hrsg.)Informatik für alle18. GI-Fachtagung Informatik und Schule16. 18. September 2019Dortmund Gesellschaft für Informatik e.V. (GI)Lecture Notes in Informatics (LNI) ProceedingsSeries of the Gesellschaft für Informatik (GI)Volume P-288ISBN 978-3-88579-682-4ISSN 1617-5468Volume EditorsDr. Arno PasternakTU DortmundOtto-Hahn-Str. 14D-44227 DortmundGermanyArno.Pasternak@tu-dortmund.deSeries Editorial BoardHeinrich C. Mayr, Alpen-Adria-Universität Klagenfurt, Austria (Chairman, mayr@ifit.uni-klu.ac.at)Torsten Brinda, Universität Duisburg-Essen, GermanyDieter Fellner, Technische Universität Darmstadt, GermanyUlrich Flegel, Infineon, GermanyUlrich Frank, Universität Duisburg-Essen, GermanyMichael Goedicke, Universität Duisburg-Essen, GermanyRalf Hofestädt, Universität Bielefeld, GermanyWolfgang Karl, KIT Karlsruhe, GermanyMichael Koch, Universität der Bundeswehr München, GermanyThomas Roth-Berghofer, University of West London, Great BritainPeter Sanders, Karlsruher Institut für Technologie (KIT), GermanyAndreas Thor, HFT Leipzig, GermanyIngo Timm, Universität Trier, GermanyKarin Vosseberg, Hochschule Bremerhaven, GermanyMaria Wimmer, Universität Koblenz-Landau, GermanyDissertationsSteffen Hölldobler, Technische Universität Dresden, GermanyThematicsAndreas Oberweis, Karlsruher Institut für Technologie (KIT), Germany Gesellschaft für Informatik, Bonn 2019printed by Köllen Druck+Verlag GmbH, Bonn  This book is licensed under a Creative Commons BY-SA 4.0 licence.cbaArno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1VorwortSeit inzwischen über 50 Jahren gibt es Informatik-Angebote in den Schulen. Aus den erstenArbeitsgemeinschaften und Projekten erwuchs in den 70-Jahren das Schulfach Informatik.Mit der Reform der gymnasialen Oberstufe im Jahre 1972 wurde es in den Rang eines‚normalen’ Schulfaches gehoben, das von den Schülerinnen und Schülern in der gymnasialenOberstufe gewählt werden konnte[KM72].Folglich entwickelte sich die didaktische Forschung in der Schulinformatik, Schulbücherwurden erstellt, Lehrer ausgebildet und weiterqualiﬁziert. Zusätzlich entstanden in derSekundarstufe I Lehrangebote von Arbeitsgemeinschaften bis hin zu Wahlpﬂichtangeboten.Eigentlich stellte sich nicht die Frage, ob Informatik in der Sekundarstufe I Schulfachwerden sollte oder nicht, sondern nur wann und wie. EineGrundbildung Informatikfür alleSchülerinnen und Schüler war ein wichtiges bildungspolitisches Thema [Bo85,fPuTdS86,Ku90,vP86,Bi90].Ausdruck dieser intensiven bildungspolitischen Diskussion um das Schulfach Informatikwar u.A. der Start der KonferenzreiheInformatik und Schulemit der ersten Tagung vom8. bis zum 10. Oktober 1984 in Berlin vor fast genau 35 Jahren. Dort formuliertePeterHeyderho in einem GrundsatzartikelDidaktik der Schulinformatikden Anspruch auf eineInformatik für alle:„Ein Schüler, der nach 10 Schuljahren in die Berufsausbildung entlassen wird,muß verstehen, wie eine Problemlösung in Einzelschritten erarbeitet wirdund welche intellektuellen Fähigkeiten des Menschen durch Rechner sinnvollunterstützt werden können. In seiner Berufssituation als Betro ener undals Anwender muß er in fachlicher und sozialer Kompetenz zum Einsatztechnischer Medien Stellung beziehen können[He84, S.66]."Er schliesst seine Analyse mit:„Die Herausforderung durch die Informationstechnik führt zu der Notwen-digkeit, Informatikunterricht in allen Bildungsbereichen einzuführen. Dies istmittlerweile eine unumstrittene und allgemein akzeptierte Erkenntnis und mußkonsequenterweise dazu führen, daß Informatikunterricht sehr bald von einemSpezialgebiet und Wahlfach zu einem festen Bestandteil des Pﬂichtfachbereichsin der allgemeinbildenden Schule wird[He84, S.71]."Diese schon 1984 berechtigte Forderung nach einerInformatik für alleist in Deutschlandbis heute nicht realisiert.In der Euphorie der Anfangsjahre der Schulinformatik und der ersten INFOS-Konferenz istvermutlich allen Beteiligten entgangen, dass diese Position nicht von allen im Bildungsbe-reich Tätigen geteilt worden sind. Während fast alle Informatikdidaktiker in der Vorbereitungund Teilnahme der ersten INFOS involviert waren, wurde fast zur gleichen Zeit vom 6.bis zum 8. September 1984 ziemlich genau 500 km entfernt an der Universität Dortmundeine KonferenzNeue Medien und Lernendurchgeführt, an der eine Vielzahl von Perso-nen aus dem Bildungsbereich — allerdings bis auf Ausnahmen keine Informatiklehrer —teilnahmen.Am letzen Tag dieser Veranstaltung wurde in einer Plenumssitzung nach einer Diskussions-runde auf einem Podium mit ca. zehn Personen aus vielen Bereichen des Bildungswesenseine (vorbereitete) Resolution von den Teilnehmern fast einstimmig verabschiedet. Aufdiesem Podium waren von der Gewerkschaft GEW bis zum Verband der Lateinlehrer unter-schiedlichste Positionen vertreten, nur ein Vertreter aus dem Bereich der Informatik(lehrer)fehlte. So konnte auch ein damals recht junger Informatiklehrer von einer Gesamtschuleaus Hagen nicht verhindern, dass gegen seine (o ensichtlich nicht gewünschten und alsStörung der grossen sonst so einmütigen Gemeinsamkeit empfundenen) Einwände folgenderGrundsatz im Rahmen dieser Erklärung festgelegt wurde:„Eine ,informationstechnologische Grundbildung’ sollte am Ende der Sekun-darstufe I in Form von Blockphasen eingerichtet werden. Diese Grundbildungsoll jedoch nicht in Form eines eigenständigen Fachs, sondern projektförmigin Verbindung mit Naturwissenschaften, Sozialwissenschaften und Sprachenunterrichtet werden. [RZ85, S.198]“Allerdings wurde auch festgestellt:„Wenn es zutri t, daß die Neuen Medien Universalmedien sind, die aufInformatik (engl. computer science) als Grundlagenwissenschaft beruhen, dannerhält die Notwendigkeit einer wissenschaftspropadeutischen Grundbildungfür alle neue unabweisbare Begründung. [RZ85, S.199]“Diese Erkenntnis wurde aber sofort wieder eingeschränkt:„Diese wissenschaftspropädeutische Grundbildung dürfte sich allerdings nichtdarauf beschränken, in die Grundlagen der Informatik einzuführen. [RZ85,S.199]“Arno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 3Selten hat eine Konferenz die praktische Bildungspolitik beeinﬂusst wie diese. Ein durch-gängiges Fach Informatik in der Sekundarstufe I gibt es in Deutschland landesweit bis heutenicht. Zwangsläuﬁg kommt daher in mehr oder weniger unregelmässigen Abständen dieDiskussion um ein Schulfach Informatik erneut auf. So wird auch derzeit im Rahmen deraktuellen Diskussion um dieDigitalisierung der Schuleerneut das Schulfach Informatikin der Sekundarstufe I von vielen gefordert. Diese Forderungen werden inzwischen durchdieGI Bildungsstandards Informatikfür den Primarbereich [Ar] und die Sekundarstufen Iund II inhaltlich gestützt und beschrieben [Ar08,Ar16].Es ist und tut gut, dass die Teilnehmer auf der18. GI-Fachtagung Informatik und Schulewieder hier in Dortmund die Möglichkeit haben, durch ihre Diskussionen und Beratungenals Grundlage weiterer Forschungen in den Hochschulen sowie Unterrichten in den Schulenals auch Planungen im adminstrativen Bereich die Voraussetzungen dafür zu scha en, dengrandiosen Fehler der Tagung von vor 35 Jahren zu korrigieren.Wünschen wir daher allen Schülerinnen und Schülern der Gegenwart und Zukunft, dass eskeine weiteren 35 Jahre mehr dauert, bisInformatik für alleeine gelebte Selbstverständlichkeit ist.INFOS 2019In diesem Band zur TagungINFOS 2019 — Informatik für allebeﬁnden sich die angenom-menen wissenschaftlichen Beiträge und Praxisberichte sowie die Beschreibungen der aufder Tagung durchgeführten Workshops und präsentierten Poster.Das Programmkomitee hat aus 38 eingereichten wissenschaftlichen Beiträgen 12 ausgewählt.Dies entspricht einer Annahmequote von 32%. Von 33 eingereichten Praxisberichten wurden19 angenommen. Dies entspricht einer Annahmequote von 58%. Damit sind von insgesamt 71Einreichungen 31 Beiträge — also 44% — angenommen worden. Ich danke allen Autorinnenund Autoren für ihre Mitarbeit an der Konferenz und allen beteiligten Gutachterinnen undGutachtern für den sehr konstruktiven Review-Prozess.Ich ho e, dass die Vorträge und Workshops auf der Konferenz für alle eine Bereicherungdarstellen. Es bleibt zu ho en, dass diese Tagung für die Teilnehmer und darüber hinaus vorallem für alle Lehrerinnen und Lehrer einen positiven Einﬂuss auf den Unterricht hat und wirentsprechend dem Konferenzmotto baldInformatik für alleals Normalität feststellen können.Dortmund, im September 2019Arno PasternakLiteraturverzeichnis[Ar]Arbeitskreis ’Bildungsstandards Informatik im Primarbereich’ der GI: Kompetenzen fürinformatische Bildung im Primarbereich. LOGIN-Verlag, Berlin.[Ar08]Arbeitskreis ’Bildungsstandards’ der GI: Grundsätze und Standards für die Informatikin der Schule. LOGIN-Verlag, Berlin, 2008.[Ar16]Arbeitskreis ’Bildungsstandards SII’ der GI: Bildungsstandards Informatik für dieSekundarstufe II. LOGIN-Verlag, Berlin, 2016.[Bi90]Bikos, Konstantinos: Informationstechnologische Grundbildung als Curriculum-Problemder Achtziger Jahre. Europäische Hochschulschriften: Pädagogik. Peter Lang, Frankfurtam Main, 1990.[Bo85]Bosler, Ulrich; Hampe, Wolfgang; Wanke, Ilona; van Weert, Tom J.: GrundbildungInformatik. J.B. Metzlersche Verlagsbuchhandlung, Stuttgart, 1985.[fPuTdS86]für Praxis und Theorie der Schule, Landesinstitut Schleswig-Holstein: Informationstech-nische Grundbildung Band1. Aulis Verlag Deubner & Co KG, Köln, materialien fürden mathematikunterricht in allgemeinbildenden schulen des landes schleswig-holstein(klassenstufe 8). Auﬂage, 1986.[He84]Heyderho , Peter: Didaktik der Schulinformatik. In (Arlt, Wolfgang, Hrsg.): Informatikals Herausforderung an Schule und Ausbildung. Jgg. 1, R.Oldenbourg Verlag, München,1984.[KM72]KMK (Ständige Konferenz der Kultusminister der Länder der Bundesrepublik Deutsch-land): Vereinbarung zur Gestaltung der gymnasialen Oberstufe in der Sekundarstufe II.1972.[Ku90]Kultusminister, NRW: Vorläuﬁge Richtlinien zur Informationsund Kommunikations-technologischen Grundbildung in der Sekundarstufe I, Jgg. 5051. Ritterbach, Frechen,1990. Schriftenreihe des Kultusministers.[RZ85]Rol , Hans-Günter; Zimmermann, Peter: Neue Medien und Lernen. Beltz Verlag,Weinheim, 1985.[vP86]von Puttkamer, Ewald, Hrsg. Informatik-Grundbildung in Schule und Beruf, GI-Fachtagung, Kaiserslautern, 29. September 1. Oktoker 1986, Proceedings, Jgg. 129 inInformatik-Fachberichte. Springer, 1986.Tagungsleitung Gesamtleitung:  Arno Pasternak, TU Dortmund Doktorandensymposium:  Martin Weinert, TU Dortmund  Programmkomitee Leitung des Programmkommitees:   Arno Pasternak  (V orsitz) Peer Stechert (stellvertretender V orsitz)   Christian Borowski  Universität Oldenburg Michael Brinkmeier  Universität Osnabrück Katrin Büttner   Goethe-Mittelschule Heidenau Dino Capovilla   Humboldt-Universität zu Berlin Beat Döbeli Honegger  Pädagogische Hochschule Schwyz Ira Diethelm   Carl von Ossietzky Universität Oldenburg Rebecca Doherty   Landrat-Lucas-Gymnasium Leverkusen Dieter Engbring   Universität Bonn Johannes Fischer   TU Dortmund Jens Gallenbacher   TU Darmstadt Kathrin Haselmeier  Universität Wuppertal Werner Hartmann   Pädagogische Hochschule Bern Lutz Hellmig    Universität Rostock Tino Hempel   Richard-Wossidlo-Gymnasium Henry Herper   Universität Magdeburg Sven Hofmann   Universität Leipzig Alexander Hug   Universität Koblenz-Landau Ludger Humbert   Willy-Brandt-Gesamtschule Bergkamen Lennard Kerber   Otto-Nagel-Gymnasium Berlin Maria Knobelsdorf  Universität Wien Martin Lehmann    Pädagogische Hochschule Bern Peter Micheuz   Alpen-Adria-Universität Klagenfurt Andreas Muehling  Universität Kiel Dorothee Müller   Bergische Universität  Simone Opel   Universität Paderborn Arno Pasternak   TU Dortmund Johannes Pieper   Joseph-König-Gymnasium Haltern Wolfgang Pohl   Bundesweite Informatikwettbewerbe Mareen Przybylla   Universität Potsdam Hermann Puhlmann  Leibniz-Gymasium Altdorf Gerhard Röhner   Studienseminar für Gymnasien Darmstadt Ralf Romeike      Freie Universität Berlin Carsten Schulte   Universität Paderborn Andreas Schwill   Universität  Potsdam Peer Stechert   RBZ Technik Kiel Kerstin Strecker   Universität Göttingen Renate Thies   Cusanus Gymnasium Erkelenz Marco Thomas   Westfälische Wilhelms-Universität Münster Michael Weigend   Westfälische Wilhelms-Universität Münster  Organisationsteam Kensuke Akao   TU Dortmund Frank Thorsten Breuer  TU Dortmund Stefan Dissmann   TU Dortmund Johannes Fischer   TU Dortmund Gundel Jankord   TU Dortmund Florian Kurpicz   TU Dortmund Alfred Schenk   TU Dortmund Martin Weinert   TU Dortmund  Joachim Deckers   GI FG NRW (Registrierungssystem) Tobias Brinkjost    TU Dortmund (Webseite)    Lektorat Eberhard Kranert   Fritz-Steinhoff-Gesamtschule Hagen Jörg Kuhlmann   Essen Torben Leopold   Fritz-Steinhoff-Gesamtschule Hagen Uwe Marnowsky   Fritz-Steinhoff-Gesamtschule Hagen Irene Pasternak   Essen   Proceedings-Support Anatolij Fandrich   Carl von Ossietzky Universität Oldenburg Nils Pancratz   Carl von Ossietzky Universität Oldenburg               Sponsor Wir danken der Firma   Google   für die Finanzierung dieses Bandes und die weitere Unterstützung der Konferenz. Inhaltsverzeichnis Eingeladene Vorträge Oliver Kaczmarek Lernen in der digitalen Welt..................... 21 Hans Werner Heymann Allgemeinbildung und Informatik................... Ira Diethelm Von Dagstuhl nach Frankfurt – auf dem Weg zu einem interdisziplinären Modell digitaler Bildung....................... 23 Torsten Brinda, Niels Brüggen, Ira Diethelm, Thomas Knaus, Sven Kommer, Christine Kopf, Petra Missomelius, Rainer Leschke, Friederike Tilemann, Andreas Weich Frankfurt-Dreieck zur Bildung in der digital vernetzten Welt Ein interdisziplinäres Modell....................... 25 Dino Capovilla Informatische Bildung und inklusive Pädagogik........... 35 Wissenschaftliche Beiträge Kevin Baum, Nadine Kirsch, Kerstin Reese, Pascal Schmidt, Lukas Wachter, Verena Wolf Informatikunterricht in der Grundschule? Erprobung und Auswertung eines Unterrichtsmoduls mit Calliope mini.............. 49 Alexander Best Bild der Informatik von Grundschullehrpersonen: Ergebnisse eines mehrjährigen Projekts zu informatikbezogenen Vorstellungen.... 59Ira Diethelm, Sebastian Glücks Analyse von Curricula auf Abdeckung der Kompetenzen zur Bildung in der digitalen Welt............................. 69 Alexander Hacke, Mareen Przybylla, Andreas Schwill Beobachtungen zum inform. Problemlösen im Escape-Adventure-Spiel „Room-X“............................... 79 Kathrin Haselmeier Informatik an Grundschulen – Stellschraube Lehrerbildung..... 89 Kathrin Haselmeier, Ludger Humbert, Klaus Killich, Dorothee Müller Interesse an Informatik und Informatikselbstkonzept bei Schülerinnen und Schülern zu Beginn der fünften Jahrgangsstufe des Gymnasiums Eine empirische Untersuchung....................... 99 Niko Hausner, Matthias Wendlandt, Katharina Wendlandt Informatikunterricht – Ein Muss zur politischen Mündigkeit..... 109 Daniel Losch, Ludger Humbert Informatische Bildung für alle Lehramtsstudierenden – Reformprozess einer allgemeinbildenden Informatikveranstaltung in der universitären Lehrerbildung............................. 119 Tilman Michaeli, Ralf Romeike Debuggen im Unterricht Ein systematisches Vorgehen macht den Unterschied 129 Kathrin Müller, Carsten Schulte, Johannes Magenheim Zur Relevanz eines Prozessbereiches Interaktion und Exploration im Kontext informatischer Bildung im Primarbereich.......... 139 Ilona Petrenko, Marco Thomas Entwicklung ökologischen Denkens im Informatikunterricht..... 149Praxisberichte Marc Berges, Matthias Ehmann, Martin Hennecke, Ute Heuer, Annabel Lindner, Rainer Gall, André Greubel, Nicole Günzel-Weinkamm, Verena Haller, Julia Kronawitter, Nicolai Pöhner Erfahrungsbericht zur Qualiﬁzierungsmaßnahme Informatik als Erweiterungsfach (Lehramt Realschule) in Bayern.......... 161 Dieter Engbring „Bildung in der digital vernetzten Welt“ Ohne Informatik nicht denkbar!? 171 Katharina Geldreich, Mike Talbot, Peter Hubwieser Aufgabe ist nicht gleich Aufgabe – Vielfältige Aufgabentypen bewusst in Scratch einsetzen........................... 181 Lisa Göbel, Lutz Hellmig Informatik spannend präsentieren – Ein Einstieg in den Studiengang Lehramt Informatik.......................... 191 Andrea Gumpert, Pascal Zaugg Fit für den Lehrplan 21 – Wie Klassenlehrpersonen auf den Informatikunterricht vorbereitet werden (können).......... 201 Michael Hielscher, Christian Wagenknecht FLACI – Eine Lernumgebung für theoretische Informatik...... 211 Tamara Hochthurn, Jens Gallenbacher Innovative Gestaltung und Einsatz von Erklärvideos im Informatikunterricht 221 Beat Döbeli Honegger, Martin Hermida, Regina Schmid Zur Entwicklung des Masterstudiengangs "Medien und Informatik". 231 Ludger Humbert, Henry Herper, Alexander Best, Christian Borowski, Rita Freudenberg, Martin Fricke, Kathrin Haselmeier, Henry Herper, Volkmar Hinz, Dorothee Müller, Andreas Schwill, Marco Thomas Empfehlungen der GI – Kompetenzen für informatische Bildung im Primarbereich............................. 237 Florian Kapp, Carsten Schulte Einsatz von Jupyter Notebooks am Beispiel eines ﬁktiven Kriminalfalls .. 247Andreas Koch, Alexander Mittag Informatikunterricht in Baden-Württemberg............. 257 Urs Meier TPA-Modell.............................. 265 Peter Micheuz Mischen possible. Didaktische und unterrichtspraktische überlegungen zum Mischen im Informatikunterricht................. 275 Simone Opel, Michael Schlichtig, Carsten Schulte, Rolf Biehler, Daniel Frischemeier, Susanne Podworny, Thomas Wassong Entwicklung und Reﬂexion einer Unterrichtssequenz zum Maschinellen Lernen als Aspekt von Data Science in der Sekundarstufe II..... 285 Nils Pancratz, Anatolij Fandrich, Christos Chytas, Mareike Daeglau, Ira Diethelm Blöcke, Blumen, Mikrocontroller und das Internet of Things – Ein Konzept zum kontextorientierten Einsatz von Parametric Design und Physical Computing in Mädchen-Workshops.................. 295 Thomas Schmalfeldt Einsatz von Skill Cards und Story Cards für einen kreativitätsfördernden Informatikunterricht auf der Sekundarstufe I............. 305 Ann-Katrin Schmidt, Carsten Schulte Das RetiBNE Café Ein Konzept für Repair Cafés in der informatischen Bildung................................ 315 Stefan Seegerer, Annabel Lindner, Ralf Romeike AI Unplugged – Wir ziehen Künstlicher Intelligenz den Stecker... 325 Kerstin Strecker, Eckart Modrow Eine Unterrichtssequenz zum Einstieg in Konzepte des maschinellen Lernens 335Kurzbeiträge Nils Pancratz, Ira Diethelm Was haben Staubsaugerroboter, Spielekonsolen und Smartphones gemeinsam? Schülervorstellungen von Teil-Ganzes-Beziehungen in Informatiksystemen.......................... 347 Marco Thomas, Niklas Klinge Zur Beliebtheit des Schulfach Informatik in der Oberstufe nordrhein-westfälischer Schulen Studie zu Einﬂüssen auf die Wahl von Informatik in der Oberstufe...................... 351 Bettina Waldvogel Informatikwissen im Schulalltag sichtbar machen.......... 355 Poster Christoph Gräßl Algorithmen im Anfangsunterricht mit RunCode........... 361 Claudia Hildebrandt, Matthias Matzner Identiﬁzierung leistungsstarker Schülerinnen und Schüler in der Informatik 363 Peter Micheuz Gratulation! Sie haben die Prüfung bestanden............ 365 Philipp Straube, Martin Brämer, Hilde Köster Freies Explorieren und Programmieren im Sachunterricht...... 367 Juliane Wegner, Mona Arndt Aufhören oder weitermachen? Ursachen des Studienabbruchs im Fach Informatik............................... 369 Workshops Mike Barkmin, Torsten Brinda Informatiksysteme für den Unterricht aufbereiten.......... 373Peter Brichzin, Petra Kastl, Ralf Romeike Agile Schule – Weiterentwicklung des Projektunterrichts in der Informatik und darüber hinaus.......................... 374 Julian Dorn InstaHub Datenbanken und Datenschutz mit einem extra für den Unterricht entwickelten sozialen Netzwerk unterrichten............. 375 Julian Dorn JavaScript als ideale textbasierte Programmiersprache im Unterricht anhand von ada7 lebensnah und e zient für Mädchen und Jungen. 376 Anja Gärtig-Daugs, Alexander Werner, Ute Schmid Informatische Konzepte spielerisch begreifen und anwenden..... 377 Laura Hembrock, Patrick Tschorn, Michael Brinkmeier IoT zum Nachbauen.......................... 378 Tobias Jördens, Jens Gallenbacher Quadrologik – Workshop....................... 379 Andrea Langer, Nadine Bergner, Ulrik Schroeder Mehr als Programmieren lernen einen Mikrocontroller-Roboter zum Leben erwecken / Zweitägiges Workshopkonzept zur Mädchenförderung mit dem B-O-B-3........................... 380 Kris Markussen, Kirsten Alich, Jana Gerdes, Mareike Daeglau, Nils Pancratz, Ira Diethelm Über Lottofeen zu (mehr) Computernerds: Undoing Gender im Informatikunterricht durch eine selbstreﬂektierte Konfrontation mit geschlechtsspeziﬁschen Stereotypisierungen............. 381 Maximilian Marowsky, Paul Ohm, Julian Dierker Pair Programming im Klassenraum – Eine Digital Game-based Learning Methode für die Sekundarstufe I................... 382 Elisaweta Ossovski, Michael Brinkmeier Maschinelles Lernen Unplugged – Ein Workshop zum Maschinellen Lernen in der Oberstufe........................ 383Tobias M. Schi erle, Eike Rösch, Peter Suter Wie gelingt eine obligatorische Informatikweiterbildung für Tausende von Lehrpersonen der Volksschule? ein Erfahrungsbericht mit erlebbaren Praxisteilen.............................. 384 Michael Schlichtig, Simone Opel, Carsten Schulte, Rolf Biehler, Daniel Frischemeier, Susanne Podworny, Thomas Wassong Maschinelles Lernen im Unterricht mit Jupyter Notebook...... 385 Pascal Schmidt, Stefan Strobel Künstliche Intelligenz (KI) im Informatikunterricht der Sekundarstufe II .386Eingeladene VorträgecbaEditor (Hrsg.): INFOS 2019,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Lernen in der digitalen WeltOliver Kaczmarek,Sprecher für Bildung und Forschung der SPD-BundestagsfraktionAbstract:Den Wandel unserer Arbeitsund Lebenswelt gerecht zu gestalten, ist die politischeHerausforderung vor der wir bildungspolitisch, aber auch weit darüber hinaus stehen. Digitalisierung,Ökologisierung und Globalisierung greifen ineinander und verändern unsere ganz persönliche Lebens-und Arbeitswelt ebenso wie die Gesellschaft als Ganzes. Gerade die Bildungspolitik ist deswegengefordert zu handeln, da die Vermittlung von adäquaten Kompetenzen und Wissen entscheidenddafür sein werden, dass der Wandel erfolgreich im Sinne der Menschen gestaltet werden kann. Damites gerecht dabei zugeht, sind drei zentrale Themen wichtig. Erstens gilt es die Selbstbestimmungder Menschen im digitalen Zeitalter zu garantieren. Zweitens sollen die Aussichten auf eine guteBeschäftigung gesichert werden und drittens soll von Anfang an eine Kultur des Lernens etabliertwerden, die lebensbegleitendes Lernen fördert.Selbstbestimmung im digitalen Zeitalter bedeutet, dass nicht die Maschinen über das Leben derMenschen bestimmen, sondern die Menschen über die Maschinen bestimmen. Dafür sind neueKompetenzen im Umgang mit digitalen Geräten nötig. Wie gehen Menschen kritisch mit der ständigenVerfügbarkeit von Informationen um und wie können sie den Wert und die Qualität einer Informationunterscheiden? Wie kann es gelingen, dass Menschen sich auch von der digitalen Welt abgrenzenkönnen, damit sie nicht durch permanente Benachrichtigungen unter Stress gesetzt werden? Wie gehtman am besten souverän mit den eigenen persönlichen Daten um?Die Arbeitswelt der Zukunft wird sich stark von der heutigen unterscheiden. Viele Arbeitsabläufewerden automatisch ablaufen und die Tätigkeiten der Menschen werden sich wandeln. Sind heute nochviele Berufe von den Tätigkeitsfeldern Herstellen und Produzieren geprägt, wird in Zukunft der BereichÜberwachen und Kontrollieren im Vordergrund stehen. Gleichzeitig wird standortunabhängigesArbeiten immer leichter möglich werden. Menschen aus unterschiedlichen Teilen der Welt könnenunabhängig von Zeit und Ort miteinander kooperieren. Auf diese gewandelte Arbeitswelt sollen unsereBildungseinrichtungen optimal vorbereiten. Dabei ist ebenso zu beachten, dass Menschen auch unterden neuen Voraussetzungen der digitalen Welt, selbstbestimmt ihr Leben gestalten können, um ihrePersönlichkeit zu entfalten.Eine Kultur des lebensbegleitenden Lernens wird sich nur dann etablieren, wenn sie von Anfang angelebte Praxis ist. Neugier und die Freude am Erwerb von neuen Kompetenzen und neuem Wissen sindschon im frühkindlichen Bereich zu fördern. Der selbstverständliche Umgang mit neuen Informationen,neuer Technik und einem stetig wachsenden Wissen ist eine Kompetenz, die in den Schulen vermitteltwerden soll. Damit wird klar, dass es nicht mehr um den abschließenden Erwerb von Wissen geht,sondern dass fortwährendes Lernen ein integraler Bestandteil des gesamten Lebens ist. cba doi:10.18420/infos2019-01Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 21cbaArno Pasternak (Hrsg.): INFOS2019: Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 11Von Dagstuhl nach FrankfurtIra Diethelm1Abstract:Dieser Hauptvortrag beschreibt die Entwicklung vomDagstuhl-Dreieckund derDagstuhl-Erklärung zur Bildung in der digital vernetzten Welt[Br16] hin zumFrankfurt-Dreieck[Br19],das auf den folgenden Seiten mit dem Originaltext der interdisziplinären Autor*innengemeinschaftbeschrieben ist. Der Hauptvortrag skizziert den Entstehungsprozess und erläutert wesentliche Gründefür die Weiterentwicklung desDagstuhl-Dreiecksund wesentliche Punkte des neuen Modells.Keywords:Bildung in der digital vernetzten Welt, Dagstuhl-Dreieck, Frankfurt-DreieckLiteraturverzeichnis[Br16]Brinda, Torsten; Diethelm, Ira; Gemulla, Rainer; Romeike, Ralf; Schöning, Johannes;Schulte, Carsten: Dagstuhl-Erklärung: Bildung in der digital vernetzten Welt. 2016.http://www.dagstuhl-dreieck.de.[Br19]Brinda, Torsten; Brüggen, Niels; Diethelm, Ira; Knaus, Thomas; Kommer, Sven; Kopf,Christine; Missomelius, Petra; Leschke, Rainer; Tilemann, Friederike; Weich, Andreas:Frankfurt-Dreieck zur Bildung in der digital vernetzten Welt. In (Pasternak, Arno, Hrsg.):Informatik und Schule 2019: Informatik für alle. Köllen Verlag, Bonn, S. 25–33, 2019. 1Carl von Ossietzky Universität, Didaktik der Informatik, 26111 Oldenburgira.diethelm@uol.de cba doi:10.18420/infos2019-02Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 23cbaArno Pasternak (Hrsg.): INFOS2019: Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 11Frankfurt-Dreieck zur Bildung in der digital vernetzten WeltEin interdisziplinäres ModellTorsten Brinda1, Niels Brüggen2, Ira Diethelm3, Thomas Knaus4, Sven Kommer5, ChristineKopf6, Petra Missomelius7, Rainer Leschke8, Friederike Tilemann9, Andreas Weich10Abstract:DasFrankfurt-Dreieckist eine Erweiterung und Fortschreibung des in derDagstuhl-ErklärungenthaltenenDagstuhl-Dreiecksund richtet sich in Ergänzung dazu nun in erster Linie anForscher*innen und andere Personen, die sich primär reﬂexiv und theoretisch – mit Bildung imKontext des digitalen Wandels beschäftigen. Das Papier will die aus verschiedenen Disziplinen andie Gruppe der Autorinnen und Autoren herangetragenen konzeptionellen Lücken beispielsweise zurGestaltung von Informatiksystemen oder zur Einordnung und Rolle des Individuums als handelndes undmedial adressiertes Subjekt schließen. Entsprechend gelten die politischen Forderungen derDagstuhl-Erklärung[Br16] weiterhin, werden konzeptionell ergänzt und auf außerschulische Bildungskontexteerweitert.Keywords:Bildung in der digital vernetzten Welt, Dagstuhl-Dreieck, Informatik, Medienwissen-schaften, MedienpädagogikDie Funktion dieses Modells besteht darin, einen überfachlichen Orientierungsund Re-ﬂexionsrahmen für Bildungsprozesse imdigitalen Wandelbereitzustellen und möglichstalle relevanten Perspektiven daran beteiligter Disziplinen einzubeziehen11. Das gemeinsamentwickelte Modell – im Weiteren bezeichnet alsFrankfurt-Dreieck, benannt nach dem Ortseiner Entstehung in zwei Expert*innen-Workshops 2017 und 2018 in Frankfurt am Main– basiert auf dem in der sogenanntenDagstuhl-ErklärungenthaltenenDagstuhl-Dreieck,das 2016 unter Beteiligung von Akteur*innen aus Informatik, Informatikdidaktik, Medien-pädagogik, Schulpraxis, Wirtschaft und Bildungspolitik in einem mehrtägigen Workshop1Universität Duisburg-Essen, Didaktik der Informatik,torsten.brinda@uni-due.de2JFF-Institut für Medienpädagogik in Forschung und Praxis, Münchenniels.brueggen@j .de3Carl von Ossietzky Universität Oldenburg, Didaktik der Informatik,ira.diethelm@uol.de4PH Ludwigsburg | Frankfurt University of Applied Sciences, FTzM,knaus@ftzm.de5RWTH Aachen, Institut für Erziehungswissenschaft,sven.kommer@rwth-aachen.de6DFF Deutsches Filminstitut & Filmmuseum, Frankfurt,kopf@d .ﬁlm7Universität Innsbruck, Institut für Medien, Gesellschaft und Kommunikation,petra.missomelius@uibk.ac.at8Universität Siegen, Medienwissenschaft,leschke@medien-peb.uni-siegen.de9PH Zürich, Bildung und Erziehung, Fachteam Medienpädagogik,friederike.tilemann@phzh.ch10HBK Braunschweig, Institut für Medienwissenschaft,an.weich@hbk-bs.de| TU Braunschweig, ProjektgruppeLehre und Medienbildung,a.weich@tu-braunschweig.de11Dieser Text erscheint daher nicht nur hier, sondern auch in anderen Publikationsorganen der beteiligtenFachgesellschaften: merz 5/19 und MedienPaedagogik.com, Medienimpulse 58/19 sowie den Webseiten derGesellschaft für Informatik e.V. cba doi:10.18420/infos2019-03Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 2512 Torsten Brinda, Niels Brüggen, Ira Diethelm, Thomas Knaus, Sven Kommer, Christine Kopf,Petra Missomelius, Rainer Leschke, Friederike Tilemann, Andreas Weichauf Schloss Dagstuhl erarbeitet und von einer breiten Ö entlichkeit – entsprechend seinerIntention – insbesondere von Praktiker*innen und Politiker*innen wahrgenommen wurde.Ziel ist es vielmehr, aus den disziplinären Perspektiven von Informatik, Informatikdidaktik,Medienpädagogik und Medienwissenschaft die Phänomene einer digitalen Welt und diedaraus resultierenden Erfordernisse für Bildungsprozesse zu beschreiben und dadurcheine gemeinsame Reﬂexionsbasis zu entwickeln sowie darauf aufbauend – in künftigenSchritten – die notwendigen Kompetenzen für Partizipation in einer digital geprägten Weltzu deﬁnieren.Eine Herausforderung im Diskussionsprozess der Autor*innengruppe war, dass es zuwesentlichen Kernbegri en bislang kein etabliertes Begri sverständnis gab – schon garkein zwischen den beteiligten Disziplinen abgestimmtes. So wird beispielsweise „digitaleBildung“ häuﬁg als Schlagwort verwendet (mal mit einem auf das Lehren und Lernenmitdigitalen Mitteln eingeschränkten Bildungsverständnis, maleinschließlichinformatischerGrundlagen gedacht usw.). Das Adjektiv „digital“ wird in der ö entlichen Diskussion undBerichterstattung oft als ein Synonym für „neuartig“ oder „modern“ verwendet. Dabeibeschreibt es ursprünglich die Repräsentation von Daten und indirekt auch Information ineiner Weise, die die automatische Verarbeitung mittels Computern ermöglicht, und „Digita-lisierung“ damit die Umwandlung analoger in diskrete Werte, was heute im Wesentlichendurch binäre Signale realisiert wird. So ist Digitalisierung eines der drei Grundprinzipien derInformatik neben Automatisierung und Vernetzung, wird aber oft stellvertretend für diesegenannt. Mit der Digitalisierung wurde die Voraussetzung für eine universelle Kompatibilitätvon Daten und Informationen gescha en und zugleich die Bedingungen für die Integrationbislang getrennter Praktiken, sozialer Strukturen und Technologien, was einen nachhaltigenEinﬂuss auf die tradierten räumlichen und temporären Unterscheidungen sowie soziale Ein-und Ausschließungen hat. Heute wird der Begri  der Digitalisierung in politischen undsozialen Kontexten vor allem zur Beschreibung von aktuellen informatisch und technischinduzierten gesellschaftlichen Transformationsprozessen genutzt.Wir gehen davon aus, dass die Digitalisierung in den heutigen Gesellschaften die Kultur,die Infrastruktur und entsprechend die weitere Technologieentwicklung wesentlich mitprägtund sprechen daher vomdigitalen Wandel. Die Teilhabe an politischen, kulturellen undökonomischen Prozessen innerhalb der Gesellschaft setzt Fähigkeiten im UmgangmitundzurAnalyse, ReﬂexionundGestaltungvondigitalen Artefaktenvoraus. Erforderlich hierfürist die Kenntnis der informatischen Grundlagen sowie der medienwissenschaftlichen underziehungswissenschaftlichen Zugänge und Diskurse.Analog zumDagstuhl-Dreieckwerden im Modell drei Perspektiven ausdi erenziert, dieBildung für und über den digitalen Wandel aufgreifen muss. Diese werden im weiterentwi-ckelten Modell bezeichnet alstechnologisch-mediale Perspektive,gesellschaftlich-kulturellePerspektiveundInteraktionsperspektive. Diesen Perspektiven sind jeweils die ProzesseAnalyse, ReﬂexionundGestaltungzugeordnet, die Lernende mit dem Ziel der Befähigungzur Partizipation an der durch Digitalisierung geprägten Welt und am digitalen Wandeljeweils durchlaufen sollen. Zugleich kann eine umfassende Analyse, Reﬂexion und Gestal-26 Torsten Brinda et al.Frankfurt-Dreieckzur Bildung in der digital vernetzten Welt 13tung des digitalen Wandels nur gelingen, wenn alle drei Perspektiven systematisch und sichwiederholend eingenommen werden.DieMittedes Modells bietet Raum für den jeweiligenBetrachtungsgegenstandder durchDigitalisierung geprägten Welt, also digitale Artefakte wie beispielsweise autonome Fahr-zeuge, soziale Netzwerke, Hate Speech und Multitasking und damit in Zusammenhangstehende Phänomene, der dann aus Sicht der drei zuvor benannten Perspektiven und dendamit verbundenen Prozessen aufgearbeitet werden soll. Auf Basis dieses Modells sollen künftig Konkretisierungen im Hinblick auf Handlungsfelderwie Schule, außerschulische Bildungskontexte wie Kinderund Jugendbildung, KulturelleBildung und Erwachsenenbildung, Berufsbildung und Hochschule, LehrerinnenundLehrerbildung sowie Ausund Fortbildung von pädagogischen Fachkräften entwickeltwerden. Diese können dann in weiteren Schritten im Hinblick auf Kompetenzmodelle undfachdidaktischensowie mediendidaktische Fragen und insbesondere die Weiterentwicklungvon vorhandenen (Unterrichts-) Konzepten und Empfehlungen der Fachgesellschaften[GI08,LK08,Gf13,LK15,GI16,Gf16,DG17,KMT17,Gf16,GI19] usw. ausgearbeitetwerden.Frankfurt-Dreieck zur Bildung in der digital vernetzten Welt 2714 Torsten Brinda, Niels Brüggen, Ira Diethelm, Thomas Knaus, Sven Kommer, Christine Kopf,Petra Missomelius, Rainer Leschke, Friederike Tilemann, Andreas WeichTechnologisch-mediale PerspektiveZiele der Betrachtung aus einertechnologisch-medialen Perspektivesind das Hinterfragenund Reﬂektieren der den Phänomenen und Artefakten der durch Digitalisierung geprägtenWelt zugrundeliegenden Strukturen und deren Funktionsweisen sowie eine Befähigung zur(Mit-) Gestaltung solcher Artefakte und Phänomene. Dazu erfolgt eine Auseinandersetzungmit konzeptionellen Fragen, insbesondere mit informatischen und medialen Funktionsprin-zipien digitaler Systeme, mit den zu deren Erstellung verwendeten informatischen undmedialen Strukturierungsund Gestaltungsmitteln und -formen, den sich durch sie ergeben-den technischen Analyseund Verarbeitungsmöglichkeiten sowie den an der „Oberﬂäche“meist nicht sichtbaren kulturellen, politischen oder persönlichen Einschreibungen.In dieser Perspektive werden damit zwei Aspekte verknüpft, die untrennbar miteinanderverbunden sind:1.Unter Anwendung langlebiger Informatik-Konzepte werden ausinformatischer Sichtdie Funktionsweise von digitalen Artefakten, die die digitale vernetzte Welt ausma-chen, sowie damit in Zusammenhang stehenden Phänomenen hinterfragt und bewertet.ZugrundeliegendeFunktionsprinzipienundStrukturen der digitalen Artefaktewerdenanalysiert und aufgedeckt und damit Möglichkeiten zurGestaltung und Erweiterungder Funktion digitaler Systemeunter Berücksichtigung von informatischen Problem-lösestrategien und -methoden einerseits, aber auch zu einem reﬂektierten Umgangmit digitalen Systemen andererseits angelegt. Die Basis hierfür bilden theoretischeund praktische Grundlagen der Informatik insbesondere in den Bereichen Digitali-sierung, Automatisierung und Vernetzung und deren Anwendung auf aktuelle undgesellschaftlich relevante Themen (wie z. B. Big Data oder Künstliche Intelligenz)sowie Aussagen zu den praktischen und theoretischen Grenzen von Berechenbarkeitbzw. Automatisierung. Hinzu kommen Konzepte zur Kommunikation informatischerSysteme untereinander (z. B. Netzwerke, Protokolle, Verschlüsselung), Priorisie-rungen darin (insbes. Netzneutralität) sowie systematische Vorgehensmodelle zurErstellung von digitalen Artefakten und Systemen.2.Durch informatische Modellierung von Ausschnitten der Welt mit entsprechendenMitteln und Werkzeugen sowie geprägt durch kulturelle Einschreibungen und diepersönliche Perspektive von Entwickler*innen (z. B. Auswahl von Trainingsdatenfür KI, normative Algorithmen ohne Legitimierung von Entwicklern), entstehendigitale Artefakte. Diese beeinﬂussen als soziotechnische Informatiksysteme mitcharakteristischen Eigenschaften, Ästhetiken, Formen und Grenzen die menschlicheWahrnehmung und bedürfen daher auch einer Auseinandersetzung ausmedialerSicht. Von den Entwickler*innen und/oder den Auftraggeber*innen wird explizit undmitunter auch interessengeleitet, unreﬂektiert oder aufgrund kultureller Konventionenfestgelegt, was sichtbar oder wahrnehmbar ist, wie auch, was in den Hintergrund tritt.Hierdurch wird die mit solchen Systemen mögliche Interaktion und insbesonderedas Repertoire kultureller Ausdrucksund Kommunikationsmöglichkeiten bestimmt.28 Torsten Brinda et al.Frankfurt-Dreieckzur Bildung in der digital vernetzten Welt 15Mit diesen charakteristischen Prägungen schreibt sich die Technologie mittels ihrerArtefakte, aber auch deren Geschichte und Genese, in die durch sie ermöglichtenkulturellen und sozialen Formenein: In ihnen sindSozialstrukturenangelegt, in ihnenist festgeschrieben, was in welcher Weise archiviert, was vergessen und ignoriert wirdsowie was historisches Gewicht verliehen bekommt.Darüber hinaus legen verwendete Technologien erforderliche Kompetenzen für ihre Nutzungfest. Umgekehrt kann die Reﬂexion und Kenntnis von solchen Determinationsverhältnissen indie Konstruktion von digitalen Artefakten einﬂießen, was zu einem dynamischen souveränenUmgang mit Technologien befähigen würde. Es ist daher unerlässlich, die Strukturen,Funktionen und Funktionsweisen von digitalen (Medien-) Systemen aus informatischer undmedialer Sichtanalysieren, reﬂektieren und (mit-)gestaltenund diese Sichten aufeinanderbeziehen zu können. Solcherart fundiertes und verknüpftes Informatikund Medienwissenerklärt technologische und mediale Phänomene mit langlebigen Konzepten und scha tzusammen mit der Entwicklung grundlegender Problemlösestrategien die Basis für diereﬂektierte Teilhabe an einer digital geprägten Welt.Gesellschaftlich-kulturelle PerspektiveDer digitale Wandel prägt die sozialen Kommunikationsund Interaktionsbedingungensowie die politische Organisation von Gesellschaften. Er bildet dabei nicht zuletzt aucheinen kulturellen Möglichkeitsraum, der von Gesellschaften genutzt und gestaltet werdenkann. Dasselbe gilt auch für die ökonomische Reproduktion von Gesellschaften. Es werdenbeispielsweise neue Arbeitsbedingungen, Produktionsmethoden und Austauschbedingungenentwickelt. Dadurch verändern sich die gesellschaftlichen Rollen von Akteur*innen sowiedie Dynamiken gesellschaftlicher Entwicklung. Gesellschaften entwerfen Normen undRegeln für die Verwendung und den Einsatz von Technologien und Techniken, die diekonkrete Bedeutung und den Einﬂuss von digitaler Technik strukturieren. So werden in ge-sellschaftlichen Aushandlungsprozessen die Bedingungen von Privatheit und Ö entlichkeitfestgelegt, es werden Interaktionsmöglichkeiten gescha en oder aber begrenzt und es wirdder Zugang zu technischen Systemen geregelt. Gesellschaften prägen Bildungsinstitutionenund regulieren durch Bildungsangebote für den Erwerb entsprechender Kompetenzen dasVerständnis für und die gesellschaftliche Nutzung von digitalen Technologien und Techniken.Der Grad der gesellschaftlichen Durchdringung mit Technologien und auch deren sozialeRolle wird daher wesentlich vom Bildungssystem bestimmt. Dabei bestimmt der Grad derEnkulturation digitaler Technologien und Techniken auch die Rolle einer digitalen Kultur inder Gesellschaft und deren Verhältnis zu analogen kulturellen Artefakten.Ausgesellschaftlich-kultureller Perspektivewerden deshalb Wechselwirkungen zwischenIndividuen, Gesellschaft und digitalen Systemen vor dem Hintergrund der Medialisierungund des digitalen Wandels analysiert und reﬂektiert. Im Vordergrund stehen die Verände-rungen, denen Individuen und Gesellschaft unterworfen werden, sowie eine Analyse undFrankfurt-Dreieck zur Bildung in der digital vernetzten Welt 2916 Torsten Brinda, Niels Brüggen, Ira Diethelm, Thomas Knaus, Sven Kommer, Christine Kopf,Petra Missomelius, Rainer Leschke, Friederike Tilemann, Andreas WeichBewertung von Chancen und Problemen, die sich durch den digitalen Wandel ergeben.Das betri t beispielsweise sich durch digitalisierungsbezogene Kompetenzen erö nendeMöglichkeiten für wirtschaftliches, ökologisches, nachhaltiges und politisches Handeln unddie damit einhergehende Verantwortung einerseits sowie die sich durch Nutzung digitalerSysteme ergebenden Datenspuren der*des Einzelnen im Netz und die damit verbundenenProﬁlbildungen für kommerzielle oder ideologische Zwecke andererseits. Zudem werdenunter den Bedingungen digitaler Infrastrukturen das Erkennen und die Bewertung medialerEinﬂüsse sowie die aktive Teilhabe an gesellschaftlichen und kulturellen Entwicklungenvoraussetzungsreicher. Sie erfordern Hintergrundwissen und speziﬁsche Kompetenzen, wiebeispielsweise das Beurteilen von Information oder die Entwicklung eigener Standpunkte.Hierbei lassen sich widersprüchliche Tendenzen feststellen: die erhöhten Partizipationsmög-lichkeiten steigern den potentiellen Einﬂuss von Individuen, wohingegen die wachsendeKomplexität einer digital gewandelten/beeinﬂussten Kultur und die Geschlossenheit au-tonomer und/oder selbstlernender Systeme den individuellen und gesellschaftlichen Ein-und Zugri  wiederum erschweren. Dadurch stellt sich die Frage nach einer Mitgestaltungvon „digitaler“ Kultur und ihrer Enkulturation grundlegend neu. Zugleich können in derdigitalen Welt mittels digitaler Technologien (neue) soziale Ungleichheiten produziertbeziehungsweise verfestigt werden, so dass auch Fragen sozialer Gerechtigkeit und sozialenAusgleichs neu reﬂektiert werden müssen.Ein weiterer Aspekt ist die historische und die damit einhergehende politische Entwicklungvon Informationsund Kommunikationstechniken. Dazu muss analysiert werden, welcheNormen und Regeln in mediengestützten sozialen Prozessen wirksam sind, wie und von wemsie ausgestaltet werden und welche Machtstrukturen hier eingeschrieben sind. Konkret sindbeispielsweise Fragen der Netzneutralität in den Blick zu nehmen – auch im Hinblick derEntstehung des Internets und seiner Dynamiken vor dem Hintergrund historischer Prozesse.Dazu gehören auch ökonomische Implikationen digitaler Technologien und Techniken.So müssen Fragen wie die von Nutzung versus Besitz, die des Eigentums an Daten, dievon Persönlichkeitsrechten, die der Mündigkeit der verschiedenen Akteur*innen, die derinformationellen Selbstbestimmung sowie die eines zivilen Ungehorsams gegenüber immerautonomer werdenden technischen Systemen und die der gesellschaftlichen Teilhabe geradeauch aus einer ethischen Perspektive analysiert werden.InteraktionsperspektiveIm Fokus derInteraktionsperspektivestehen die Menschen, zentral sind die Fragen, wiesie vor dem Hintergrund der technologisch-medialen und gesellschaftlich-kulturellenVoraussetzungen welche digitalen Medien und Systemewarumundwozunutzen,inwiefernsie am digitalen Wandel teilhaben und ihn mitgestalten (können) sowiewiesie sich alshandlungsfähige Subjekte konstituieren (vgl. auch Medienaneignung). Dabei sind dieAspekte Nutzung, Handlung und Subjektivierung zentral.30 Torsten Brinda et al.Frankfurt-Dreieckzur Bildung in der digital vernetzten Welt 17UnterNutzungist die funktionale Anwendung von digitalen Medien und Systemen beispiels-weise für rezeptive, gestalterische, kommunikative, problemlösende und organisatorischeZwecke gefasst. Diese Nutzungsoptionen, die von Einzelnen oder Gruppen von Personenwahrgenommen, selektiert und ggf. auch verändert werden, beziehen sich auf digitaleArtefakte und die von ihnen erö neten Möglichkeiten.Im Rahmen vonHandlungenwerden diese Nutzungsoptionen in unterschiedliche sozialePraktiken integriert. Dabei werden kulturell tradierte Interaktionsund Kommunikations-formen sowohl aufgenommen als auch transformiert. Eine bewusste Aneignung dieserNutzungsoptionen setzt stets bestimmte Handlungsmotive wie auch die Reﬂexion und Ana-lyse der technologischen und medialen Funktionsprinzipien und Potentiale sowie rahmendersoziokultureller Praktiken voraus – dies gilt gleichermaßen für den Einsatz von Bildungsme-dien, Lehrund Lerntechniken. Auf dieser Grundlage lassen sich die Gestaltungspotentialedigitaler Artefakte realisieren. Derartige Handlungsoptionen bilden auch den Horizont fürdie individuelle Kompetenzentwicklung.MitSubjektivierungist schließlich darauf verwiesen, dass im Zusammenwirken vondigitalen Medien und Systemen sowie menschlichem Handeln auch die Identitätsbildungund -entwicklung angelegt, ermöglicht oder auch behindert werden können. Dies betri tmehrere Ebenen: Konkret sind damit erstens Formen der Selbstthematisierung gemeint,die in und über digitale Medien und Systeme ermöglicht und nahegelegt werden. So sindbeispielsweise in Interfaces von sozialen Netzwerken bestimmte Handlungsau orderungeneingeschrieben, wie man sich in und über diese Dienste zeigen und darin agieren soll und sichzugleich damit selbst konstituiert. Aus der Interaktionsperspektive betrachtet, interessiert,welches Menschenbild durch diese Formen möglicher Selbstthematisierung konstituiertwird. Zweitens wird abstrakter auch die Frage gestellt, wie und vor dem Hintergrund welcherkulturellen Einschreibungen Subjekte in den jeweiligen Medien repräsentiert und adressiertsind, beispielsweise in Form von Interessenproﬁlen in Empfehlungsund Filtersystemenoder auf Ebene von Interfaces und Interaktionsmöglichkeiten. Drittens sind beispielsweiseim Angesicht von Data Analytics und Künstlicher Intelligenz traditionell auf Subjektebezogene Konzepte wie Autonomie und Authentizität auch auf technologisch-medialerEbene in den Blick zu nehmen.Reﬂektiert werden soll aus der Interaktionsperspektive, wie und warum digitale Medi-en und Systeme als Werkzeuge jeweils für konkrete Vorhaben ausgewählt und genutztwerden. Dies erfordert eine Orientierung hinsichtlich der vorhandenen Möglichkeitenund Funktionsumfänge gängiger Werkzeuge in der jeweiligen Anwendungsdomäne sowiederen sichere Handhabung, aber auch die Kenntnis ökonomischer, gesellschaftlicher undpolitischer Interessen, welche Anbietende von digitalen Werkzeugen vertreten. Mit demeigenen Handeln stellt sich so auch immer die Frage, welche anderen Handlungsoptionenindividuell und sozial wünschenswert und realisierbar wären. Gleichzeitig ist aus dieserPerspektive immer auch zu reﬂektieren, welche Subjektpositionen technologisch-medial undkulturell angelegt sind, wie Subjekte sich in diesem Rahmen konstituieren und inwiefernsich Subjektivität angesichts digitaler autonomer Systeme transformiert.Frankfurt-Dreieck zur Bildung in der digital vernetzten Welt 3118 Torsten Brinda, Niels Brüggen, Ira Diethelm, Thomas Knaus, Sven Kommer, Christine Kopf,Petra Missomelius, Rainer Leschke, Friederike Tilemann, Andreas WeichAnschlüsseDie drei Seiten desFrankfurt-Dreiecksbeschreiben jeweils unterschiedliche Perspektivenfür dieAnalyse, ReﬂexionundGestaltungvon Artefakten und Phänomenen einer durchdigitale Medien und Systeme geprägten Welt. Dies schließt jeweils unterschiedlicheZugänge zur Erklärung der digitalen Artefakte und damit verbundener Phänomene ein.Das (theoretisch-konzeptionelle) Modell bietet eine begri iche und strukturelle Grundlage,um an die Diskurse der Disziplinen Informatik, Informatikdidaktik, Medienpädagogikund Medienwissenschaft anschließen zu können, in einen produktiven interdisziplinärenAustausch einzutreten und eigene anschlussfähige Theoriebildung zur Ausdi erenzierungund Konkretisierung voranzutreiben.Für Bildungskonzepte, die digitale Medien und Systeme einschließlich der damit verbun-denen Phänomene und ihrer Grundlagen adressieren und zur Teilhabe an der durch siegeprägten Welt befähigen sollen, ergibt sich aus demFrankfurt-Dreieckdie Maßgabe,dass sowohl die technologischen und medialen Strukturen und Funktionen, als auch diegesellschaftlich-kulturellen Wechselwirkungen sowie die Nutzungs-, Handlungund Sub-jektivierungsweisen in Interaktionen mit digitalen Medien und Systemen einzubeziehensind. Das übergeordnete Ziel muss dabei sein, digitale Artefakte und mit ihnen verbundenePhänomene im Zusammenspiel dieser drei Perspektiven analysieren, reﬂektieren, gestaltenund damit erklären und beurteilen zu können.Vor dem Hintergrund derartiger Bildungskonzepte gilt es im Austausch mit Bildungspolitikund -praxis konkrete Kompetenzanforderungen weiterzuentwickeln und im Zusammen-wirken informatischer, informatikdidaktischer, medienwissenschaftlicher und medienpäd-agogischer Expertise (fach-)didaktische Szenarien und Lernmaterialien zu entwickeln, dieden Aufund Ausbau dieser Kompetenzen in Bildungseinrichtungen ermöglichen. DiesesRahmenmodell kann dabei für alle Praxisund Handlungsfelder in Bildungskontextenund pädagogischer Arbeit adaptiert werden: für die allgemeinbildende Schule, für dieHochschule, die Lehrer*innenbildung wie auch für außerschulische Bildungskontexte,wie die Kinderund Jugendarbeit und Erwachsenenbildung. Perspektivisch ergibt sich soein umfassender, wissenschaftlich fundierter und interdisziplinär getragener Katalog vonZielstellungen und Maßnahmen für Bildungskonzepte in einer durch digitale Medien undSysteme geprägten Welt.Literaturverzeichnis[Br16]Brinda, Torsten; Diethelm, Ira; Gemulla, Rainer; Romeike, Ralf; Schöning, Johannes; Schulte,Carsten: , Dagstuhl-Erklärung: Bildung in der digital vernetzten Welt. http://www.dagstuhl-dreieck.de, 2016.[DG17]DGfE Sektion Medienpädagogik: Orientierungsrahmen für die Entwicklung von Curriculafür medienpädagogische Studiengänge und Studienanteile. MedienPädagogik: Zeitschriftfür Theorie und Praxis der Medienbildung, Dezember 2017.32 Torsten Brinda et al.Frankfurt-Dreieckzur Bildung in der digital vernetzten Welt 19[Gf13]GfM Gesellschaft für Medienwissenschaften, Strategiekommission und AG Medienkultur& Bildung: , "Medienkultur und Bildung"Positionspapier der GfM, 2013.[Gf16]GfM Gesellschaft für Medienwissenschaften: , Stellungnahme der Arbeitsgemeinschaft’Medienkultur und Bildung’ der Gesellschaft für Medienwissenschaft (GfM) zum Entwurfder Strategie der Kultusministerkonferenz "Bildung in der digitalen Welt", 2016.[GI08]GI Gesellschaft für Informatik e.V.: , Grundsätze und Standards für die Informatik in derSchule. http://www.informatikstandards.de, 2008.[GI16]GI – Gesellschaft für Informatik e.V.: , Bildungsstandards Informatik – Sekundarstufe II.http://www.informatikstandards.de, 2016.[GI19]GI – Gesellschaft für Informatik e.V.: , Kompetenzen für informatische Bildung im Primar-bereich. http://www.informatikstandards.de, 2019.[KMT17]Knaus, Thomas; Meister, Dorothee M.; Tulodziecki, Gerhard: Futurelab Medienpädagogik:Qualitätsentwicklung – Professionalisierung – Standards. Thesenpapier zum Forum Kom-munikationskultur 2017 der GMK. MedienPädagogik: Zeitschrift für Theorie und Praxisder Medienbildung, Oktober 2017.[LK08]LKM Länderkonferenz MedienBildung: , Kompetenzorientiertes Konzept für die schulischeMedienbildung -LKM-Positionspapier Stand 01.12.2008. https://lkm.lernnetz.de, 2008.[LK15]LKM Länderkonferenz MedienBildung: , Kompetenzorientiertes Konzept für die schulischeMedienbildung – LKM-Positionspapier Stand 29.01.2015. https://lkm.lernnetz.de, 2015.Frankfurt-Dreieck zur Bildung in der digital vernetzten Welt 33<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15   Informatische Bildung und inklusive Pädagogik Dino Capovilla1 Abstract: Informatiksysteme haben unser Zusammenleben in vielerlei Hinsicht verändert und von diesen Veränderungen haben auch behinderte Menschen maßgeblich profitiert. In der informatischen Bildung fand diese zentrale Bedeutung von Informatiksystemen als Mittel zur Förderung von Teilhabe bisher jedoch wenig Beachtung, was sich mit Blick auf die Neufassung der ländergemeinsamen inhaltlichen Anforderungen für die Informatik-Lehramtsstudiengänge offenbar ändern soll. Mit der vorliegenden Arbeit sollen einige Ansätze aufgezeigt werden, wie die Didaktik der Informatik im Sinne einer inklusiven Pädagogik für behinderungsbedingte Bedürfnisse anschlussfähiger werden kann. Dabei liegt der Fokus auf der Herstellung einer Vielfalt unterschiedlicher Handlungsund Ausdrucksmodi und der sensorischen und kognitiven Parallelisierung von Unterrichtsinhalten. Keywords: Informatische Bildung, Inklusive Pädagogik, Sensorische Parallelisierung, Anforderungsniveaus, Leichte Sprache, Assistive Technologien 1 Einleitung Digitalisierung verändert und reorganisiert unser Interaktionsverhalten, unsere gesellschaftliche Selbstbeschreibung und letztlich sämtliche Strukturen unserer schulischen, beruflichen und privaten Lebensbereiche [KM16]. Dieser Wandel wird wesentlich durch rasante technologische Innovationen angestoßen, die geprägt durch Vorstellungen von informatisch hochqualifizierten Menschen verfügbar gemacht werden [GI16a]. Auf der anderen Seite wächst der Kreis der Nutzenden weiter und schließt somit immer mehr Menschen ein, deren Stärken in technikfernen Bereichen liegen oder die gar mit ihrer Technikaversion kokettieren.  Bereits vor 30 Jahren hatten Wilfried und Ute Brauer [BB89] unser heutiges informationsgesellschaftliches Selbstverständnis bemerkenswert treffend prophezeit. Durch die omnipräsente, einfache und unbegrenzte Verfügbarkeit von Informationen werde die Überzeugung reifen, dass eine verständnisschaffende Ausbildung im Umgang mit Informatik-Systemen nicht mehr notwendig sei. In dieser reinen Anwendungsorientierung werde sich die technomorphe Vorstellung von Informatiksystemen hin zu einer anthropomorphen Vorstellung mythologisieren. Der Umgang mit solchen vermenschlichten Informatiksystemen werde in Zukunft weniger rational und viel mehr emotional sein. Diese Entwicklung nahm mit Karl Klammer ihren Anfang und ist mit Siri, Alexa und Cortana längst Wirklichkeit geworden.                                                          1 Institut für Rehabilitationswissenschaften/Humboldt-Universität zu Berlin, Abteilung Pädagogik bei Beeinträchtigungen des Sehens, Unter den Linden 6, 10099 Berlin, dino.capovilla@hu-berlin.de  cba doi:10.18420/infos2019-04Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 35 16 Vorname1 Nachname1 und Vorname2 Nachname2   Um Menschen auf die Anforderungen und Herausforderungen unserer Zeit im Rahmen ihrer schulischen Bildung vorzubereiten und ihnen ein möglichst hohes Maß an Selbstbestimmung und Autonomie in der Anwendung von digitalen Systemen zu geben, fordert die KMK [KM16] eine flächendeckende und systematische Vorbereitung. Dies impliziert, dass diese Vorbereitung kein durch Intuition oder Learning-by-doing gesteuerter Prozess der Selbstläufigkeit ist, sondern auf einer nicht zu ignorierenden und durchaus komplexen Fachlichkeit beruht [GI18]. Vor diesem Hintergrund einer informatischen Bildung, die sich an alle Menschen richtet, geht es im vorliegenden Artikel um die Zielgruppe von Menschen mit Behinderungen. Wie zu zeigen sein wird, nimmt die informatische Bildung eine erweiterte Bedeutung bei den Bemühungen um die Realisierung schulischer Inklusion und gesellschaftlicher Teilhabe ein. Dabei sei vorausgeschickt, dass es im inklusiven Kontext keine spezielle Didaktik der Informatik für Menschen mit Behinderungen geben kann. Das sonderpädagogische Anliegen diesbezüglich besteht darin, die allgemeine Didaktik der Informatik anschlussfähig für die besonderen Lernvoraussetzungen von Menschen mit Behinderungen zu gestalten, was im Wesentlichen mit einigen methodischen und wenigen inhaltlichen Erweiterungen verbunden ist. Es gilt also zu überlegen, welche Veränderungen im Regelunterricht sinnvoll und notwendig sind, damit mehr Lernende mit Behinderungen die Dinge lernen können, die auch alle unbehinderten Lernenden lernen.  Bevor nun diese besondere Rolle von Informatiksystemen näher beschrieben wird und anschließend der Versuch unternommen wird, einige inklusive pädagogische Ansätze mit der informatischen Bildung zu verbinden, sollen die Begriffe informatische Bildung und Inklusion in einer für diesen Artikel geeigneten Form bestimmt werden.  Hubwieser [Hu07, S. 43ff.] subsumiert die Unterstützung von Lernprozessen, die Bedienungsschulung und den Informatikunterricht unter das Dach der informatischen Bildung, wobei er hinsichtlich des Informatikunterrichts die Prinzipien, Konzepte und Strategien zur Planung, Konstruktion, Beschreibung und Bewertung abstrakter Informatiksysteme besonders hervorhebt. Ergänzt und konkretisiert werden sollte diese Definition durch medienpädagogische Aspekte, die bei Hubwieser implizit im Zusammenspiel aus Benutzungsschulung und Informatikunterricht verortet sein dürften. Medienbildung soll Kompetenzen in den Bereichen Wahrnehmungs-, Nutzungsund Konstruktionsprozesse von und mit Medien, sowie der kritischen Verarbeitung und Bewertung von Medien und deren Einflüsse fördern [De18]. Die informatische Bildung soll damit zusammenfassend Lernende zu kompetenten und reflektierten Anwenderinnen und Anwendern von bestehenden Informatiksystemen machen und ihnen durch das Verständnis der Wirkprinzipien dieser Informatiksysteme Möglichkeiten zu deren aktiver Mitgestaltung eröffnen [CA12, S. 4].  Eine allgemein akzeptierte Begriffsbestimmung schulischer Inklusion scheint es weder im wissenschaftlichen noch im gesellschaftlichen Diskurs zu geben. Trotz dieser begrifflichen Unschärfe wurde schulische Inklusion 2012 zum Bildungsziel aller Bundesländer erhoben, was mit der Idee des gemeinsamen Lernens von Kindern und Jugendlichen mit und ohne Behinderungen verbunden wurde [KM12]. Da jedoch 36 Dino Capovilla Der Kurztitel des Beitrags 17   gemeinsames Lernen nicht bereits mit der lediglich gemeinsamen Anwesenheit im selben Raum realisiert wird, wird in der Forschungsliteratur das gemeinsame Lernen mit den beiden Zielen der effektiven Förderung und der sozialen Anerkennung der Lernenden mit sonderpädagogischem Förderbedarf verbunden [Ge15]. 2 Informatiksysteme und die Bildung behinderter Menschen Die UN-Behindertenrechtskonvention beschreibt in diversen Artikeln die Bereitstellung und den Einsatz von Technologien und Medien als wesentlich für die Durchsetzung der Rechte von behinderten Menschen. Dabei geht es u.a. um die Verwirklichung des Rechts auf uneingeschränkte Teilhabe an der Informationsgesellschaft, der mediatisierten Welten und der Kommunikationskultur [Bo14]. Vor diesem Hintergrund sollte die von Diethelm und Brinda [GI18] vorgeschlagene Bestimmung der Rollen von Informatiksystemen im Bildungsprozess ergänzt werden. Informatiksysteme dienen im Bildungsprozess nicht nur als Organisationsmittel, Lehr-Lern-Mittel, Werkzeug und Unterrichtsgegenstand, sondern auch als Mittel zur Förderung von Teilhabe.  In dieser Rolle haben Informatiksysteme die Lebensbedingungen von behinderten Menschen in den letzten Dekaden entscheidend verbessert [Mi15] und in vielen Fällen überhaupt erst die Rahmenbedingungen geschaffen, die gemeinsames Lernen möglich machen [CH13]. Wesentlich dabei sind die Möglichkeiten, die sich durch die technologiegestützte Interaktion zwischen behinderten und unbehinderten Lernenden ergeben haben und die Möglichkeiten, die den Zugang zu Informationen immer weiter in den Bereich der Selbstbestimmung von behinderten Menschen verschieben. Da zahlreiche dieser Technologien und Konzepte inhaltlich zurecht der Informatik zugeordnet werden und vor allem die Bedienung immer enger mit der Anwendung und dem Verständnis von Standard-Softund Hardware verbunden ist, muss sich die informatische Bildung gründlich mit ihrer Rolle in der Umsetzung der schulischen und gesellschaftlichen Inklusion auseinandersetzen. Diese besondere Rolle wird in der Neufassung der ländergemeinsamen, inhaltlichen Anforderungen für die Fachwissenschaften und Fachdidaktiken in der Lehrerbildung für Informatik [KM17] spürbar, mit der zahlreiche Bezüge zu inklusionsrelevanten Inhalten hergestellt wurden. In der Verbindung von Informatiksystemen und Inklusion gilt es zwischen dem Ziel und dem Weg zu unterscheiden. Das Ziel beschreibt Caspers [AM11] als die vollständige informationelle Partizipation, die darin besteht, alle Informationsund Kommunikationssysteme so zu gestalten, dass sie für alle Menschen unabhängig von Hardware, Software, Sprache, Kultur, Ort, physischen oder kognitiven Fähigkeiten nutzbar sind. Auf dem Weg zu diesem idealen Ziel müssen zwei grundsätzlich verschiedene Herangehensweisen zur technologiegestützten Förderung von Teilhabe kombiniert werden: Auf der einen Seite müssen die Technologien und das mediale Angebot selbst so verändert werden, dass es für möglichst viele Personen zugänglich ist. Auf der anderen Seite müssen die individuellen Voraussetzungen der einzelnen Person an Informatische Bildung und inklusive Pädagogik 37 18 Vorname1 Nachname1 und Vorname2 Nachname2   die Anforderungen der verfügbaren Technologien und des medialen Angebots angepasst werden, was durch spezielle Technologien, Medien und Bedienungskonzepte gelingt.  Insbesondere die erstgenannte Herangehensweise ist im Kontext der allgemeinen informatischen Bildung relevant. Mithilfe von Technologien und veränderten medialen Angeboten sollen Barrieren im Informationszugang und in der Interaktion abgebaut werden und Produkte sowie ganze Lebensräume für möglichst viele Menschen jeden Alters und unterschiedlicher Fähigkeiten verfügbar gemacht werden [SMM98]. Um ein entsprechendes gesellschaftliches Selbstverständnis zu etablieren und die Grundlagen für die Entwicklung entsprechender Kompetenzen zu legen, erscheint es sinnvoll, alle Lernenden möglichst früh in ihrer Bildungsbiographie mit dieser besonderen Bedeutung und Funktion von Technologien und Medien für unser Zusammenleben zu konfrontieren und zu sensibilisieren. Da das Ideal der universell designten Welt jedoch in absehbarer Zeit praktisch nicht vollständig erreicht werden kann, wird es auch weiterhin zusätzliche assistive Technologien und Medien geben müssen, welche die physischen, sensorischen oder kognitiven Voraussetzungen der einzelnen Person dahingehend stärken, dass sie in unterschiedlichen Umgebungen mehr Unabhängigkeit gewinnen und ihre behinderungsspezifischen Eigenarten in den Hintergrund rücken [SMM98]. Die konkrete Einweisung und Unterstützung im Umgang mit diesen ergänzenden Technologien und Medien stellt jedoch aufgrund des individuellen Charakters und der hohen Spezifität keinen Gegenstand der allgemeinen informatischen Bildung dar und ist in der additiven sonderpädagogischen oder rehabilitativen Förderung zu verorten [Ca15, S. 30]. Insbesondere in den letzten Jahren sind die Strukturen in unserer Welt beachtlich universeller geworden und immer mehr handelsübliche Endgeräte bieten Funktionen an, die individualisierte assistive Hardund Softwarelösungen überflüssig machen. Konkret bedeutet dies, dass technologiegestützte Zugänglichkeit in Zukunft immer weniger eine Frage der Verfügbarkeit und der ökonomischen Möglichkeit sein wird, sondern viel mehr eine didaktische Herausforderung, die sich immer weiter in den Kernbereich der informatischen Bildung verschieben wird [Ca15, S. 28]. 3 Ansätze für einen inklusiven Informatikunterricht Aus der Perspektive der inklusiven Pädagogik muss die allgemeine Didaktik der Informatik den besonderen Lernvoraussetzungen von behinderten Menschen Rechnung tragen und entsprechend anschlussfähig sein. Diese Anschlussfähigkeit wird im Wesentlichen durch diverse methodische und wenige inhaltliche Erweiterungen realisiert. Die zentrale Fragestellung der inklusiven Didaktik der Informatik besteht also darin, welche Veränderungen im Regelunterricht sinnvoll und notwendig sind, damit mehr Lernende mit Behinderungen die Dinge lernen können, die auch alle unbehinderten Lernenden lernen. Inklusiver Informatikunterricht zeichnet sich daher entsprechend der Forderung der Kultusministerkonferenz [KM17] durch eine systematische Ausrichtung an 38 Dino Capovilla Der Kurztitel des Beitrags 19   einer heterogenen Lerngruppe aus, die weit über die bereits heute übliche Binnendifferenzierung hinausgeht.  Bei der Unterrichtsplanung für homogene Lerngruppen orientiert sich die Lehrkraft in der Regel an ihrer fiktiven Vorstellung der oder des durchschnittlichen Lernenden und es obliegt den realen Lernenden, sich den hierdurch geschaffenen Bedingungen anzupassen. Genau dieses Vorgehen wird einer heterogenen Lerngruppe nicht gerecht. Im Unterricht für heterogene Lerngruppen wird versucht, anhand der individuellen Lernvoraussetzungen der einzelnen Lernenden zusätzliche, inhaltsgleiche Lernangebote zu schaffen, die zum einen den Unterricht für genau diese einzelnen Lernenden öffnen und zum anderen auch für weitere Lernende Vorteile mit sich bringen können. Der Unterricht orientiert sich damit an den Gemeinsamkeiten mehrerer „realer“ Lernender und nicht an den Eigenarten einer oder eines fiktiven vorweggenommenen Einzelnen. Eine solche systematische Ausrichtung lässt sich naturgemäß auf unterschiedlichen Wegen erreichen, die abhängig von der tatsächlichen Lerngruppe auch unterschiedlich gut geeignet sind.  Einige dieser Wege, die inzwischen auch in Europa an Bedeutung gewinnen, orientieren sich an den sieben Prinzipien des Universal Designs [SMM98], welche auf unterschiedliche Art und Weise auf den Bildungskontext übertragen werden [DV15]. Diese lassen sich zu drei Gruppen klassifizieren [Bu08]. Bei Ansätzen wie dem Universal Design in Education werden die sieben Prinzipen des Universal Designs direkt übertragen. Bei Ansätzen wie dem Universal Design for Instruction werden die sieben Prinzipen verändert und erweitert. Bei Ansätzen wie dem Universal Design for Learning werden schließlich gänzlich neue Prinzipien geschaffen.  Im Kontext der informatischen Bildung erscheint vor allem der Ansatz des Universal Designs for Learning [RM02] als geeignet, da die parallelen Lernangebote vor allem mithilfe von digitalen Werkzeugen und Artefakten bereitgestellt und realisiert werden. Informatiksysteme entfalten ihre Wirkung im Lernprozess damit nicht nur in der Rolle als Mittel zur Förderung von Teilhabe, sondern auch in den von Diethelm und Brinda [GI18] genannten Rollen als Organisationsmittel, Lehr-Lern-Mittel und Werkzeug. Das Universal Design for Learning fußt auf den vier Handlungsfeldern Lernziele, Methoden, Bewertung und Material, die mit den drei Strategien Vielfalt der Handlungsund Ausdrucksmodi, der Motivationsund Intentionsmodi und der Repräsentationsmodi universeller gestaltet werden sollen [RM02]. Im Folgenden sollen die beiden Strategien Vielfalt der Handlungsund Ausdrucksmodi und Vielfalt der Repräsentationsmodi beispielhaft mit der Unterrichtsplanung einer Einheit zur Datenstruktur „Baum“ verbunden werden, um die praktische Anwendung zu verdeutlichen.  In Bezug auf verschiedene Ausdrucksund Handlungsmodi werden die inhaltlichen Lernund Leistungsziele festgeschrieben, während die Wege und Mittel zu diesen Zielen bewusst freigestellt werden. Zum einen geht es also darum, dass sich die Lernenden zwischen unterschiedlichen Handlungsmodi entscheiden und zwischen diesen auch im Verlauf des Lernprozesses wechseln können. Zum anderen bleibt auch der Ausdrucksmodus des Produkts am Ende des Lernprozesses weitgehend unbestimmt. Die Informatische Bildung und inklusive Pädagogik 39 20 Vorname1 Nachname1 und Vorname2 Nachname2   Vergleichbarkeit und Bewertung der einzelnen Leistungen wird nicht anhand der Abweichungen der realen Produkte von einem fiktiven Normalund Idealprodukt hergestellt, sondern über die mit dem Produkt abgebildete, zugrundeliegende Kompetenzvermutung.  In der Praxis muss diese Freiheit zwecks Realisierbarkeit eingegrenzt werden, da erfahrungsgemäß zahlreiche Lernende diese Freiheiten nicht ohne Führung ausschöpfen könnten oder wollen. Das Konzept „Baum“ könnte die Lehrkraft beispielsweise mit den beiden Ausdrucksmodi Quellcode und verbal-visuelle Darstellung planen. Innerhalb der Ausdrucksmodi könnte sie die Handlungsmodi über verschiedene Anforderungsniveaus realisieren. Einen sinnvollen Ansatz für die Realisierung von Anforderungsniveaus zeigt Roth [GU13] auf, der zwischen Reproduktion, Rekonstruktion und Konstruktion unterscheidet. Für den Ausdrucksmodus Quellcode könnten die drei Niveaus folgendermaßen verwirklicht werden: Abschreiben einer bestehenden Codevorlage und Vervollständigen einer bestehenden Lücken-Codevorlage (Reproduktion), Erstellung eines Codes durch Verkettung vermischter Programmteile oder auf der Grundlage eines funktionsähnlichen Codes (Rekonstruktion) und schließlich selbständiges Schreiben des Codes (Konstruktion). Für den Ausdrucksmodus der verbal-visuelle Darstellung könnten die Anforderungsniveaus wie folgt umgesetzt werden: Suchen und nachspielen von passenden Videos oder Vervollständigung eines thematischen Posters (Reproduktion), strukturelle Neugestaltung (Collage) eines thematischen Posters oder Nachbildung einer ikonischen Video-Visualisierung durch haptische Modelle (Rekonstruktion) und schließlich selbständige Gestaltung eines verbal-visuellen Mediums (Konstruktion). Damit würden sechs Zugänge entstehen, zwischen denen die Lernenden entsprechend ihrer Schwächen, Stärken und Neigungen wählen und natürlich auch im Lernverlauf wechseln können.  Bei der Vielfalt verschiedener Repräsentationsmodi werden die Unterrichtsinhalte mithilfe verschiedener möglichst gleichwertiger Repräsentationen angeboten. Die Bedeutung der unterschiedlichen Repräsentationsmodi unterstreicht auch die Kultusministerkonferenz [KM17] durch die ausdrückliche Nennung im fachspezifischen Kompetenzprofil. Demnach sollen Informatiklehrkräfte Möglichkeiten zur Illustration von informatischen Prinzipien, welche die visuelle, auditive und haptische Wahrnehmung ansprechen und die Regeln für leichte Sprache kennen. Für die Realisierung verschiedener Repräsentationsmodi gibt es mehrere Ansätze. Eine erste mögliche Form sind multikodale Aufbereitungen [We02]. Hierbei unterscheiden sich die Angebote hinsichtlich ihrer Repräsentation durch verschiedene Symboloder Kodierungssysteme. Ein Beispiel hierfür sind die äquivalenten textuellen Beschreibungen (Verbalisierung) von Tabellen oder Diagrammen in wissenschaftlichen Arbeiten. Eine zweite Möglichkeit besteht in der multimodalen Aufbereitung der Unterrichtsinhalte, bei der gleichzeitig unterschiedliche Sinnesmodalitäten angesprochen werden [We02]. Im Unterschied dazu sprechen monomodale Darbietungen in einem bestimmten Zeitpunkt genau einen Sinneskanal an. Das klassische Beispiel für eine multimodale Darbietung ist der Lehrfilm, bei dem das visuelle Angebot durch eine nicht deckungsgleiche akustisch wahrnehmbare Erklärung unterstützt wird. Eine dritte Methode ist die sensorische Parallelisierung [Ca15, S. 52]. 40 Dino Capovilla Der Kurztitel des Beitrags 21   Hierbei wird derselbe Inhalt in mindestens zwei unterschiedlichen sensorischen Formen angeboten. Wesentlich ist dabei, dass die sensorisch parallelen Angebote inhaltlich möglichst vollständig und weitestgehend substituierbar sein sollten. Dies bedeutet also, dass bei der sensorischen Parallelisierung mehrere eigenständige und inhaltsgleiche monooder multimodale Lernangebote zur Verfügung stehen, die sich insbesondere durch die Kombination der Kodierungsformen unterscheiden. Hierzu gehört beispielsweise die Digitalisierung von handgeschriebenem Material, die auditive Aufbereitung von gedruckten Texten, die ergänzende Bereitstellung von zugänglichen Präsentationsfolien, die textuelle Beschreibung (Verbalisierung) von Grafiken, Bildern und visuellen Modellen oder auch die Anfertigung von haptischen oder taktilen Modellen die zweidimensionalen Abbildungen entsprechen [CH13].  Neben dieser wahrnehmungsorientierten, eher technischen Herangehensweise, lässt sich die Vielfalt der Repräsentationen auch im Bereich der kognitiven Zugänglichkeit erhöhen. Ausgangspunkt sind in diesem Zusammenhang Leseeinschränkungen, welche das Verstehen und Behalten von Allgemeinoder Fachtexten erschweren oder unmöglich machen können [BM18]. Leseeinschränkungen können dabei ganz unterschiedliche Wurzeln haben, weshalb es auch unterschiedliche Ansätze gibt, diesen Barrieren zu begegnen. Einige Lernende können beispielsweise vom Einsatz inhaltsgleicher Versionen in unterschiedlichen Sprachen profitieren [Ca15, S. 125f.]. Ein solches mehrsprachiges Angebot lässt nicht nur positive Effekte für den Fremdsprachenerwerb erwarten, sondern erhöht auch die Zugänglichkeit für Lernende mit internationaler Geschichte. Zudem lassen sich in guten mehrsprachigen Darstellungen möglicherweise spannende kulturelle Facetten erkennen, die das Sprachgefühl fördern und motivieren. Die textuelle Parallelisierung muss jedoch nicht notwendigerweise mehrsprachig erfolgen. In Bildungsinstitutionen ist nach wie vor eine mittelschichtsorientierte Sprache maßgebend [Bo14]. Diese kann insbesondere für Lernende mit Leseeinschränkungen ein Lernhindernis darstellen. Die informatische Bildung baut zudem in vielen Bereichen auf ein ausgeprägtes Fachvokabular auf, welches für Lernende eine faktische oder motivationale Barriere darstellen kann. In beiden Fällen können inhaltsgleiche Varianten auch mit hohem sprachlichem Anspruch [Bo14], sowie Varianten unterschiedlicher Sprachniveaus sinnvoll sein.  Ein systematischer Ansatz zur textuellen Parallelisierung auf unterschiedlichen Sprachniveaus ist die Leichte Sprache. Bei Leichter Sprache geht es darum, die Verständlichkeit standarddeutscher Texte für Personen mit Leseeinschränkungen zu erhöhen. Leichte Sprache zeichnet sich u.a. dadurch aus, dass einfache und präzise Worte in einfachen grammatikalischen Formen zu kurzen Sätzen zusammengefasst werden. Auf Worttrennungen, Abkürzungen, Passivformen und Negationen wird verzichtet. Sätze sind in größerer Schrift linksbündig ausgerichtet und die Satztrennung erfolgt durch Zeilenumbrüche. Schwierige Worte und Inhalte werden zudem durch weitere textuelle Erklärungen verdeutlicht [BM18].  Ein erster Eindruck lässt sich anhand der Definition des Studienfachs der Informatik im Wörterbuch für leichte Sprache (hurraki.de) gewinnen, wobei hier auf die üblichen Informatische Bildung und inklusive Pädagogik 41 22 Vorname1 Nachname1 und Vorname2 Nachname2   Zeilenumbrüche aus redaktionellen Gründen verzichtet wurde: „Informatik ist die Lehre von der Information. Die Menschen bekommen heute viele Informationen. Die Informationen kommen aus den Nachrichten. Die Informationen kommen von anderen Menschen. Die Informationen kommen von den Computern anderer Menschen. Die meisten Menschen lesen das nicht nur, sondern machen daraus neue Informationen. Sie rechnen Zahlen aus. Sie schreiben Texte. Sie drucken Listen. Nehmen Fotos auf oder Videos oder Musik. Kein Mensch weiß heute mehr, welche Informationen es gibt, und wo die alle herkommen. Darum brauchen wir Computer. […]“. Zwischen der akademischen Standardsprache und der leichten Sprache lässt sich das Konzept der einfachen Sprache verorten, bei der lediglich sprachliche und keine inhaltlichen Vereinfachungen vorgenommen werden [BM18]. Konkret bedeutet dies, dass überschaubar lange Sätze genau einen Gedanken enthalten sollen und nicht zusammengesetzt werden, dass aktiv formuliert wird und sprachliche Bilder, Synonyme und Untertöne konsistent konkretisiert werden. Im vorliegenden Text würde also die parallele Verwendung der Begriffe „Informatiksysteme“, „Technologien und digitale Medien“ sowie „Digitale Systeme und Artefakte“ nicht mit den Grundsätzen der einfachen Sprache vereinbar sein.  Abschließend stellt sich die Frage, für welche Lernenden dieses Angebot geschaffen werden sollte und inwiefern der damit verbundene Aufwand überhaupt gerechtfertigt ist. Der günstigste Faktor für einen sensiblen Umgang mit den Bedürfnissen behinderter Lernender und eine damit verbundene zielführende Binnendifferenzierung bleibt, unabhängig von allen theoretischen und praktischen Konzepten und wissenschaftlichen Veröffentlichungen, eine engagierte und kluge Lehrkraft. Daran haben natürlich auch die postulierten Bildungsrechte in der Behindertenkonvention nichts geändert. Die entscheidende Veränderung durch die Behindertenrechtskonvention für die Unterrichtsplanung besteht darin, dass eben keine konkrete Person mehr notwendig ist, um Lernangebote zu schaffen, die ein breiteres Spektrum von Lernenden adressieren.  Für diesen inklusiven Denkansatz spricht außerdem, dass nicht nur Lernende mit Behinderungen von dieser systematischen Binnendifferenzierung profitieren können, sondern auch ein Teil der Lernenden ohne festgestellten Förderbedarf. Beispielsweise lässt die multimodale sensorische Aufbereitung eine tiefere Verarbeitung der Lerninhalte potentiell bei allen Lernenden erwarten [Br11, S. 95], während Lernende mit bestimmten sensorischen Präferenzen oder Beeinträchtigungen genau die Lernangebote wählen können, welche ihre Bedürfnisse treffen. Vergleichbar lässt sich auch im Bereich der sprachlichen Vielfalt und für die Vielfalt bei den Handlungsund Ausdrucksmodi argumentieren. 4 Assistive Technologien Wie bereits beschrieben, werden bei der Ausrichtung des Unterrichts an heterogenen Lerngruppen die Lernbedingungen so verändert, dass der Unterricht für eine bedeutend größere Zahl von Lernenden – unabhängig von deren individuellen Voraussetzungen – 42 Dino Capovilla Der Kurztitel des Beitrags 23   offen steht. Davon abgesehen wird es jedoch vermutlich immer Lernvoraussetzungen geben, die so speziell sind, dass die allgemeine Unterrichtsausrichtung an Grenzen stößt. Ein Ansatz, um diese verbleibenden, fehlenden Fähigkeiten und Fertigkeiten im Unterricht zu kompensieren, besteht im Einsatz von assistiven Technologien. Klassische Beispiele für solche assistiven Technologien sind Elektrorollstühle, Prothesen, Sprachausgaben, Hörgeräte, Tafelkamerasysteme usw. Die Kultusministerkonferenz [KM17] ist diesbezüglich bei der Neufassung des fachspezifischen Kompetenzprofils überraschend weit gegangen und postuliert, dass Informatiklehrkräfte die Möglichkeiten, die sich durch den Einsatz von assistiven Technologien im Informatikunterricht eröffnen, einschätzen und bewerten können sollen. Auch wenn es hier nicht um den konkreten Einsatz von assistiven Technologien geht, ist diese geforderte Kompetenz durchaus anspruchsvoll. Beispielsweise sollte eine Informatiklehrkraft beurteilen können, ob und wie sehbehinderte oder blinde Lernende, ggf. durch den Einsatz von assistiven Technologien, funktionale Modelle erstellen können. Auf der Grundlage dieser Einschätzung sollte dann die Informatiklehrkraft die notwendige, sonderpädagogische Unterstützung einfordern, die ressourcenabhängig geleistet werden kann.  Wie bereits erwähnt, gehört die Einweisung und Unterstützung beim Einsatz assistiver Technologien zum additiven, sonderpädagogischen Angebot. Da nun aber assistive Technologien im schulischen Kontext häufig Informatiksysteme sind, stellt sich die Frage, ob sich diese aus der alleinigen, funktionalen Verknüpfung mit Hilfsmitteln lösen und für sinnvolle pädagogische Anwendungskontexte in der allgemeinen informatischen Bildung öffnen lassen [SB12, S. 21]. Auf der Grundlage des Dagstuhl-Dreiecks [GI16b] lassen sich solche Unterrichtsgegenstände vor allem aus der gesellschaftlich-kulturellen und technologischen Perspektive begründen. Aus gesellschaftlich-kultureller Perspektive verspricht die Auseinandersetzung mit assistiven Technologien diverse Einsichten und eine Sensibilisierung für die ansonsten häufig vorurteilsgeformten Lebensbedingungen behinderter Menschen. Ein kritisch hinterfragender Blick aus der technologischen Perspektive auf die Funktionsweise von assistiven Technologien könnte in Einzelfällen auch besondere methodische oder inhaltliche Ansätze rechtfertigen, wie das folgende Beispiel zeigen soll [Ca15, S. 30ff.; CG16].  Sehbeeinträchtigte Menschen verwenden grundsätzlich handelsübliche Hardund Software, die durch assistive Technologien ergänzt wird. Im Unterschied zum herkömmlichen Arbeitsplatz wird der Rechner mit einer Screen Reader Software ausgestattet. Diese Software abstrahiert den Bildschirminhalt und extrahiert relevante Informationen. Diese Informationen können dann mittels einer Sprachausgabe oder einer Braillezeile auditiv bzw. haptisch wahrnehmbar ausgegeben werden.  Die Bedienungskonzepte dieses dadurch entstehenden assistiven Informatiksystems unterscheiden sich grundlegend von der herkömmlichen Arbeitsweise von unbehinderten Menschen. Entscheidend hierfür ist, dass die grafische Benutzeroberfläche bei sehbeeinträchtigten Menschen ihre zentralen Vorteile verliert: Das sind die intuitive Informatische Bildung und inklusive Pädagogik 43 24 Vorname1 Nachname1 und Vorname2 Nachname2   Führung und die Maussteuerung. Die sich aus dem Verzicht auf Intuition und Maus ergebenden Nachteile müssen durch das abstrakte Verständnis der Bildschirminhalte und ein tastaturbasiertes Steuerungskonzept ersetzt werden. Mit anderen Worten heißt das, dass sehbeeinträchtigte Menschen ein maßgeblich visuell orientiertes System soweit abstrahieren müssen, dass die enthaltenen Konzepte unabhängig von der konkreten Ausgestaltung am Bildschirm verstanden werden können. Davon ausgehend müssen alternative, in der Regel nicht intuitive Steuerungstechniken erlernt werden. Muss ein Computer ohne das Ausgabemedium Bildschirm bedient werden, besteht Lernprozess vor allem darin, die Klassen der grafischen Benutzeroberfläche kennenzulernen und anhand von Beispielen die zugehörigen, nicht visuell-orientierten Bedienungskonzepte zu erarbeiten. Das tatsächliche, nicht visuell-orientierte Arbeiten besteht dann darin, die Klasse des gefundenen Objekts zu erkennen, sich an das Bedienungskonzept für genau diese Klasse zu erinnern und dieses dann zielorientiert anzuwenden. Eine solche Herangehensweise lässt sich erfahrungsgemäß als alternativer Handlungsmodus durchaus in den Informatikunterricht integrieren oder bereichert die ansonsten rein intuitiv geleitete, rezepthafte Bedienungsschulung. 5 Schluss Am Ende dieses Artikels stehen zusammenfassend drei Thesen: Erstens kann es in einer inklusiven Pädagogik keine spezifische Didaktik der Informatik geben, sondern die Didaktik der Informatik muss sich dahingehend verändern, dass sie hinsichtlich der besonderen Bedürfnisse behinderter Lernender anschlussfähig wird. Zweitens sind Informatiksysteme wesentlich für die Förderung von Teilhabe und sollten in dieser Rolle auch Gegenstand der informatischen Bildung sein. Drittens verspricht eine sensorische und kognitive Parallelisierung Vorteile für behinderte und unbehinderte Lernende und ist damit eine inklusive und keine sonderpädagogische Maßnahme.  Vor diesem Hintergrund erscheint es bemerkenswert, dass die inklusionsfördernde Wirkung der informatischen Bildung in der Argumentation zur flächendeckenden Einführung eines Pflichtfachs Informatik bisher so wenig Beachtung gefunden hat. Informatische Bildung ist offenkundig für viele behinderte Lernende ganz unmittelbar Inklusionsunterricht und wenn wir dann davon ausgehen, dass wir durch das gegenseitige Verständnis von Interaktionenformen, Arbeitsweisen, Möglichkeiten etc. Vorurteile abbauen und in manchen Bereichen voneinander lernen können, dann auch für alle anderen.  6 Literaturverzeichnisses [AM11] AM, Aktion Mensch e.V.: Einführung in die Barrierefreiheit. www.einfach-fuer-alle.de/artikel/einfuehrung-barrierefreiheit/, Stand: 19.01.2019. 44 Dino Capovilla Der Kurztitel des Beitrags 25   [BB89] Brauer, W.; Brauer, U.: Better Tools Less Education? In (Ritter, G. Hrsg.): Information Processing IFIP’89. Elsevier Science Publishers B.V., Amsterdam, S.101–106, 1989. [BM18] Bredel, U; Maaß, C.: Leichte Sprache. In (Maaß, C.; Rink, I. Hrsg.): Handbuch Barrierefreie Kommunikation. Frank & Timme, Berlin, S. 251-271, 2018. [Bo14] Bosse, I.: Zur Rolle der Medienpädagogik im Inklusionsprozess. VHN 2/2014, S. 149-152, 2014. [Br11] Brand, M.: Gedächtnis. In (Schütz, A.; Brand, M.; Selg, H.; Lautenbacher, S. Hrsg,): Psychologie: Eine Einführung in ihre Grundlagenund Anwendungsfächer. W. Kohlhammer, Stuttgart, S. 89-103, 2011. [Bu08] Burgstahler, S.: Universal Design of Instruction. From Principles to Practice. In: Universal Design in Higher Education. MA: Harvard Education Press, Cambridge, S. 23-44, 2008. [Ca15] Capovilla, D.: Inklusion in der Informatischen Bildung am Beispiel von Menschen mit Sehschädigung. PhD thesis, TU München, München, 2015. [CA12] CASWG: Computer Science: A curriculum for schools. www.computingatschool.org.uk/data/uploads/ComputingCurric.pdf, 19.01.2019, 2012. [CG16] Capovilla, D.; Gebhardt, M.: Assistive Technologien für Menschen mit Sehschädigung im inklusiven Unterricht. Zeitschrift für Heilpädagogik 1/2016, S. 4-15, 2016. [CH13] Capovilla, D.; Hubwieser, P.: Soziale Inklusion als fachdidaktisches Problem der Informatik. blind – sehbehindert 4/2013, S. 226-235, 2013. [De18] Dengel, A.: Digitale Bildung: ein interdisziplinäres Verständnis zwischen Medienpädagogik und Informatik. MedienPädagogik 33, S. 11–29, 2018. [DV15] DVfR: Universal Design im Kontext von Hochschule und Hochschulbildung. www.reha-recht.de/fachbeitraege/beitrag/artikel/beitrag-d11-2015/, Stand: 19.01.2019. [Ge15] Gebhardt, M.: Gemeinsamer Unterricht von Schülerinnen und Schülern mit und ohne sonderpädagogischen Förderbedarf. Ein empirischer Überblick. In (Kiel, E. Hrsg.): Inklusion im Sekundarbereich. W. Kohlhammer, Stuttgart, S. 39-52, 2015. [GI16a] GI: Stellungnahme zum KMK-Strategiepapier „Bildung in der digitalen Welt“, fb-iad.gi.de/fileadmin/FB/IAD/Dokumente/gi-fbiad-stellungnahme-kmk-strategie-digitale-bildung.pdf, 19.01.2019, 2016. [GI16b] GI: Dagstuhl-Erklärung: Bildung in der digitalen vernetzten Welt, gi.de/fileadmin/GI/Hauptseite/Themen/Dagstuhl-Erkla__rung_2016-03-23.pdf, 19.01.2019, 2016. [GI18] GI: Stellungnahme zu den Veränderungsvorschlägen zu den „Ländergemeinsamen inhaltlichen Anforderungen für die Fachwissenschaften und Fachdidaktiken in der Lehrerbildung“ (Fachstandards) der Kultusministerkonferenz auf Basis der KMK-Strategie zur „Bildung in der digitalen Welt“, fb-iad.gi.de/fileadmin/FB/IAD/Dokumente/gi-fbiad-stellungnahme-kmk-anforderungen-lehrerbildung-digitalisierung.pdf, Stand: 19.01.2019, 2018. Informatische Bildung und inklusive Pädagogik 45 26 Vorname1 Nachname1 und Vorname2 Nachname2   [GU13] GU, Thüringer Forschungsund Arbeitsstelle für den Gemeinsamen Unterricht/Inklusion: Hinweise und Anregungen zur Differenzierung,  www.gu-thue.de/material/RROTH_Differenzierung.pdf, 19.01.2019, 2013. [Hu07] Hubwieser, P.: Didaktik der Informatik. 3. Auflage, Springer VS, Berlin, 2007. [KM12] KMK: Sonderpädagogische Förderung in Schulen 2001 bis 2010, www.kmk.org/fileadmin/pdf/Statistik/Dokumentationen/Dokumentation_SoPaeFoe_2010.pdf, 19.01.2019, 2012. [KM16] KMK: Bildung in der digitalen Welt, www.kmk.org/fileadmin/Dateien/pdf/ PresseUndAktuelles/2017/Strategie_neu_2017_datum_1.pdf, 19.01.2019, 2016. [KM17] KMK: Ländergemeinsame inhaltliche Anforderungen für die Fachwissenschaften und Fachdidaktiken in der Lehrerbildung, www.kmk.org/fileadmin/Dateien/veroeffentlichungen_beschluesse/2008/2008_10_16-Fachprofile-Lehrerbildung_01.pdf, 19.01.2019, 2017. [Mi15] Miesenberger, K.: Advanced and Emerging Solutions: ICT and AT in Education of Low Vision and Blind Students. In (Kouroupetroglou, G. Hrsg.): Proceedings of ICEAPVI’15. Athen, S. 17-26, 2015. [RM02] Rose, D.; Meyer, A.: Teaching Every Student in the Digital Age. Universal Design for Learning. Association for Supervision and Curriculum Development, Alexandria, 2002. [SB12] Schnaak, T.; Böhmig, S.: Inklusive Medienpädagogik – was ist das? In (Landesarbeitsgemeinschaft Lokale Medienarbeit NRW in Kooperation mit der Technischen Jugendfreizeitund Bildungsgesellschaft Hrsg.): In Materialien für eine inklusive Medienpädagogik, S. 17-21, 2012. [SMM98] Story, M. F.; Mueller, J. L.; Mace, R. L.: The Universal Design File. Designing for People of All Ages and Abilities. Revised Edition, files.eric.ed.gov/fulltext/ED460554.pdf 27.04.2019, 1998. [St14] Sturm, T.; Rekonstruktion der Herstellung und Bearbeitung von Differenz im inklusiven Unterricht mithilfe der Dokumentarischen Videointerpretation. In: (Bohnsack, R.; Fritzsche, B.; Wagner-Willi, M. Hrsg.): Dokumentarische Videound Filminterpretation. Barbara Budrich, Opladen, S. 153-178, 2014. [We02] Weidenmann, B.: Multicodierung und Multimodalität im Lernprozess. Information und Lernen mit Multimedia und Internet 3, S. 45-62, 2002. 46 Dino CapovillaWissenschaftliche BeiträgecbaHerausgeber et al. (Hrsg.): INFOS 2019,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Informatikunterricht in der Grundschule? – Erprobung undAuswertung eines Unterrichtsmoduls mit Calliope miniKevin Baum1, Nadine Kirsch1, Kerstin Reese1, Pascal Schmidt1, Lukas Wachter1, VerenaWolf1Abstract:Im Zuge der Digitalisierung wird die Lebenswelt von Grundschulkindern mehr und mehrdurch Informatiksysteme geprägt. Informatische Bildung in der Grundschule kann zur Entmystiﬁ-zierung solcher Systeme maßgeblich beitragen und so die Grundlage für tiefgreifendes Verständnislegen. Bisher ist allerdings nur wenig bekannt über das Vorwissen der SchülerInnen in Bezug aufInformatiksysteme und über die Wirksamkeit der eingesetzten Unterrichtsmaterialien im Hinblick aufden Erwerb von informatischen Kompetenzen. In der hier beschriebenen Studie mit insgesamt 137Kindern wurde das Vorwissen von Viertklässlern mit einem Leitfadeninterview ermittelt. Danachwurde eine fünfstündige Unterrichtseinheit zu algorithmischen Grundbausteinen und dem Mikrocon-troller Calliope mini durchgeführt. Die Unterrichtseinheit endete mit einer Aufgabenstellung, für diedie Kinder das Eingabe-Verarbeitung-Ausgabe-Prinzip (EVA-Prinzip) nachvollziehen und mit demMikrocontroller umsetzen mussten. Die Bearbeitung dieser Aufgabenstellung wurde per Screencastfestgehalten. Unsere Ergebnisse zeigen, dass ein Großteil der Kinder bestenfalls vage Vorstellungenvon Informatiksystemen hat, aber sehr gut in der Lage ist, ein altersangemessenes System wie denCalliope mini zielgerichtet zu programmieren.Keywords:Grundschule; Informatik; Calliope mini1 Motivation und Ziele der StudieInformatiksysteme halten mehr und mehr Einzug in den Lebensalltag aller Menschen,darunter auch SchülerInnen der Primarstufe. Doch im Gegensatz zu Phänomenen dernatürlichen Umwelt, über die der Sachkundeunterricht größtenteils aufklärt, sind Systemeder digitalen Welt noch nicht Gegenstand des Unterrichts in der Primarstufe. Im Gegensatzzu anderen Ländern gibt es in Deutschland zur Zeit weder ein eigenes Unterrichtsfachnoch eine feste Verankerung dieser Themen in den Lehrplänen der bestehenden Grund-schulfächer (vgl. [ST11]). Das Calliope-Mini-Projekt des Ministeriums für Bildung undKultur (MBK) Saarland ist ein erster Schritt, um dies zu ändern: Seit Anfang 2017 werdenLehrerfortbildungen vom Landesinstitut für Pädagogik und Medien im Saarland angeboten,die den Mikrocontroller Calliope mini als didaktisches Informatiksystem zum Einsatz inder Schule vorstellen und Grundkonzepte zur informatischen Bildung in der Primarstufevermitteln. Das Gerät soll nach Vorstellung des MBK ab Klassenstufe 3 saarlandweit im1Universität des Saarlandes,Campus, DE-66123 Saarbrücken,[kevin.baum|kerstin.reese|pascal.schmidt|verena.wolf]@uni-saarland.de,[s8nakirs|s8luwach]@stud.uni-saarland.de cba doi:10.18420/infos2019-05Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 492 Kevin Baum, Nadine Kirsch, Kerstin Reese, Pascal Schmidt, Lukas Wachter, Verena WolfRegelunterricht eingesetzt werden [LP17].Ziel der hier beschriebenen Studie ist es, die Vorkenntnisse von GrundschülerInnen zubeleuchten und Calliope mini auf seine Tauglichkeit bei der Einführung von Algorithmenund der Funktionsweise (reaktiver) Informatiksysteme im Regelunterricht zu untersuchen.Das sind wichtige Kompetenzen, die auch von der GI für den Primarbereich gefordertwerden (vgl. [Be18]). Die Forschungsfragen, die hierzu geklärt werden sollen, lassen sichauf zwei wesentliche Hauptfragen A und B einschränken.AGelingt es Kindern der 4. Klasse nach einer dreistündigen Einführung in Algorithmenund die Programmierung des Calliope mini, eigenständig Programme zur Lösungvorgegebener Eingabe-Ausgabe-Zusammenhänge zu entwerfen?Daraus ergeben sich folgende Teilfragen:A1Nutzen die Kinder zielgerichtet algorithmische Grundbausteine (Eingaben, Ausgaben,Sequenzen) sowie Sensoren und Aktoren?A2Lassen sich typische Missverständnisse oder Verständnisschwierigkeiten identiﬁzie-ren?Fragestellung B bezieht sich primär auf das Vorwissen der Lernenden:BErkennen Kinder ein ihnen unbekanntes Informatiksystem als solches (und nichtnur als Spielzeug oder allgemeines technisches Gerät) und wie beschreiben sie einsolches System?Hier werden drei Teilfragen unterschieden:B1Welche Bestandteile und Funktionsweisen eines beobachteten Informatiksystemsnennen die Kinder?B2Beschreiben die Kinder einen zutre enden kausalen Zusammenhang zwischenEingabe und Ausgabe?B3Falls die Kinder einen solchen Zusammenhang hergestellt haben: Welche Ursacheschreiben die Kinder dem genannten Zusammenhang zu?In der Studie wurde zunächst das Vorwissen von Viertklässlern ermittelt. Danach wurde einefünfstündige Unterrichtseinheit zu algorithmischen Grundbausteinen und dem Mikrocontrol-ler Calliope mini durchgeführt. Die Unterrichtseinheit endete mit einer Aufgabenstellung,für die die Kinder das Eingabe-Verarbeitung-Ausgabe-Prinzip (EV A-Prinzip) nachvollziehenund mit dem Mikrocontroller umsetzen mussten.Unsere Ergebnisse zeigen, dass ein Großteil der Kinder bestenfalls vage Vorstellungen vonInformatiksystemen hat, aber sehr gut in der Lage ist, ein altersangemessenes System wieden Calliope mini zielgerichtet zu programmieren. Er ermöglicht den Kindern einen erstenZugang zum EVA-Prinzip und wird erfolgreich von ihnen zur Problemlösung eingesetzt.2 Organisation der StudieDie Studie wurde von September bis Dezember 2018 in acht Klassen an fünf saarländischenGrundschulen mit insgesamt 137 Kindern durchgeführt (Tab. 1). Die nachfolgend beschrie-50 Kevin Baum et al.Unterrichtsmodul mit Calliope mini 3Nr.12345678⌃Schulcode11123445Anzahl SchülerInnen20 17 21 18 17 15 18 11137Tab. 1: Anzahl der an der Studie teilnehmenden Schulen, Klassen und SchülerInnenbene Unterrichtseinheit hat einen Umfang von drei Doppelstunden. Unterrichtet wurdeim Klassenraum mit einem Team von zwei Personen, wobei die Lehrperson der Klassezusätzlich anwesend war. Das erforderliche technische Equipment – Calliope mini, Beamer,Laptops – wurde vom Projektteam vorbereitet und mitgebracht. Auf den Laptops wurdemithilfe eines lokalen Web-Servers eine O ine-Version des Microsoft MakeCode-Editors[Mi] betrieben, um von einem Internetzugang unabhängig zu sein. Der Calliope mini warals Download-Ordner des Web-Browsers konﬁguriert, so dass beim Klick auf den Knopf„Herunterladen“ sofort der angeschlossene Calliope mini bespielt wurde.Um die Vorstellungen der Kinder von Informatiksystemen zu untersuchen, wurden Cubeletsbenutzt [Mo]. Die über Magnete zusammensteckbaren Cubeletmodule hatten sich in Vortestsbewährt, weil sie nicht direkt als „Computer“ erkennbar sind. Cubeletmodule sind Blöckemit unterschiedlichen Funktionen, wie z.B. Motoren oder Sensoren. Damit stellen sie einabstraktes, programmierbares Informatiksystem dar, das den Kindern recht wahrscheinlichnicht bereits bekannt war.3 Verlauf der UnterrichtseinheitErste Doppelstunde: Interviews, Wortfeldarbeit und AlGo.Zur Exploration des Vor-wissens wurden alle SchülerInnen zunächst einzeln mithilfe eines standardisierten Leitfadensinterviewt: Nach einer kurzen Demonstration der Funktionsweise eines Cubelet-Aufbaus mitMotorund Sensorblock – das Erkennen eines Gegenstandes im Nahbereichs des Sensorssetzt den Motor für wenige Sekunden in Bewegung – wurden die SchülerInnen aufgefordert,das Gesehene zu beschreiben bzw. zu erklären.Die im Verlauf der Interviews gesammelten Begri e wurden auf Kärtchen notiert undim Plenum nacheinander an die Tafel geheftet, ggf. geklärt und anhand verschiedenerKriterien (z.B. Verhalten vs. Bestandteile des Roboters) sortiert. Neben einer gemeinsamen(sprachlichen) Ausgangsbasis wurde dadurch eine erste Sensibilisierung für die im Hinblickauf das EVA-Prinzip notwendige Unterscheidung zwischen Einund Ausgaben gescha en.Die Einführung algorithmischer Grundkonzepte erfolgte zunächst unplugged, um dasgleichzeitige Auftreten konzeptioneller und technischer Herausforderungen zu verhindenund um eine Ablenkung durch rein technische Probleme zu verhindern. Dafür wurde dasAlgorithmenspiel Algo! verwendet, welches lediglich LEGO-Zubehör und Befehlskartenmit Piktogrammen nutzt. Die einfachste Aufgabenvariante besteht darin, eine Spielﬁgurentlang eines Weges zu steuern, indem der passende Algorithmus mithilfe von elemen-taren Anweisungen eines begrenzten Befehlssatzes beschrieben wird. Nach einer kurzenKennenlernphase bearbeiteten die SchülerInnen in Zweiergruppen mit jeweils eigenemInformatikunterricht in der Grundschule mit Calliope 514 Kevin Baum, Nadine Kirsch, Kerstin Reese, Pascal Schmidt, Lukas Wachter, Verena WolfSpielset unterschiedlich komplexe Szenarien (z.B. auch die Umkehraufgabe: Wegebau zuvorgegebenem Algorithmus).Zweite Doppelstunde: Calliope ohne und mit Strom.In der ersten Hälfte der Doppel-stunde lernten die Kinder die Bestandteile der (zunächst noch stromlosen) Minis kennen undordneten diese den Kategorien „Eingabe“, „Ausgabe“ und „Sonstiges“ zu. Anschließenderkundeten sie die Funktionsweise der Geräte: Hierzu wurden vier unterschiedlich pro-grammierte Sorten von Minis (Kombinationen aus Eingabe (Knopf A gedrückt, geschüttelt)und Ausgabe (Smiley-Folge, Ampel-Farben)) an die SchülerInnen verteilt und jeweils einprototypischer Vertreter in eine Raumecke platziert. Die SchülerInnen mussten sich nunso im Klassenraum positionieren, dass in den Ecken nur gleich funktionierende Minis(d.h. gleiche Kombination von Einund Ausgabe) zusammenkamen. In der anschließendenBesprechung wurde herausgearbeitet, dass sich das unterschiedliche Verhalten der Minisdurch unterschiedliche, von Menschen gemachte Programmierung erklärt – damit war eineMotivation zum Kennenlernen der MakeCode-Entwicklungsumgebung gegeben.Die Präsentation der Entwicklungsumgebung und die Programmierung eines Mini wurdenzunächst am Beamer erläutert und anschließend von den SchülerInnen in Zweiergruppen ameigenen Rechner nachvollzogen. Nach erfolgreicher Reproduktion eines zweiten Beispielsdurften die Kinder die vorgegebenen Programme verändern und weitere Befehle aus denBereichen „Grundlagen“, „Eingabe“ und „Musik“ ausprobieren.Dritte Doppelstunde: Abschlussaufgaben und Projekte.In der dritten Doppelstundebearbeiteten die Kinder in Zweiergruppen vier Programmieraufgaben mit ansteigendemSchwierigkeitsgrad. Alle Programme sind mit sequenziellen Befehlen lösbar, wie auf derersten Stufe des Stufenmodells von [HWW17]. Die SchülerInnen wurden nicht darüberinformiert, dass es sich um „Testaufgaben“ handelt, um eine möglichst natürliche undungezwungene Atmosphäre zu scha en. Im Einzelnen sollten folgende Aufgaben bearbeitetwerden:Aufgabe 1: Reproduktion einer bereits bekannten Programmierung („Auf Knopfdruck A:Smileys anzeigen“).Aufgabe 2: Transfer durch leichte Variation („Auf Knopfdruck B: Text „CODE“ anzeigen“).Aufgabe 3: Vorlage eines Calliope mini, dessen Verhalten die Kinder zunächst erkundenund dann in Form eines Programms rekonstruieren sollten („Auf Knopfdruck A: längereSequenz von unterschiedlichen Ausgaben“).Aufgabe 4: Aufgabenstellung wie Aufgabe 3, bis auf komplexeres Verhalten des Calliopemini (drei unterschiedliche Inputs, die jeweils unterschiedliche Outputfolgen auslösen).Die Bearbeitung der Abschlussaufgaben beanspruchte durchschnittlich 50 Minuten. In derrestlichen Zeit durften die SchülerInnen selbstständig eigene Projekte realisieren und dieseam Ende der Doppelstunde vor der gesamten Klasse präsentieren. Die Auswertung desfreien Programmierens ist nicht Teil dieser Verö entlichung.52 Kevin Baum et al.Unterrichtsmodul mit Calliope mini 5IDKategoriebezeichnungDeﬁnition AnkerbeispielOK 1VerhaltenUK 1.1kann Verhalten repro-duzierenSchülerIn wird selber aktiv, handelt undreproduziert das gezeigte VerhaltenUK 1.2kann Verhalten be-schreibenSchülerIn beschreibt das Beobachtete„Wenn man die Hand dahin hält, fährter nach links“, Interview-Nr. 59OK 2Begri eUK 2.1benutzt mystische Be-gri eAussagen, in denen Begri e auftreten,die vermenschlichen oder eine höhereGewalt hinzuziehen„Es hat Angst, dass es kaputt geht undweiß, dass es weglaufen soll“, Interview-Nr. 61UK 2.2benutzt nicht-mystische, abernicht-technischeBegri eAussagen, in denen Begri e aus der Bio-logie oder Analogien mit dem menschli-chen Körperbau, z.B. Augen, beinhaltetsind„Die Augen reagieren auf die Hand“,Interview-Nr. 64UK 2.3benutzt technische Be-gri eAussagen, in denen Begri e, die fürein technisches System angemessen sind,z.B. Räder, Sensoren, beinhaltet sind„Da ist ein Sensor drin, der Bewegungwahrnimmt“, Interview-Nr. 82OK 3Weiterführend/SpeziellerUK 3.1gibt Antwort auf„Warum“-FrageAntwort auf die „Warum“-Frage, die fürden Schüler/die Schülerin sinnvoll ist„Da ist was drin, das dafür sorgt, dasses sich bewegt“, Interview-Nr. 96UK 3.2erwähnt, dass einMensch das so gebaut/programmiert hatAussagen, in denen erwähnt wird, dassein Mensch das Informatiksystem gebaut/programmiert hat„Jemand hat sich was ausgedacht undwollte es umsetzen“, Interview-Nr. 93UK 3.3verwendet den Begri „Programmierung“SchülerIn kennt das Wort und verwendetes im Interview„Das ist so programmiert“, Interview-Nr. 116UK 3.4hat eine Erklärung da-für, was „Programmie-rung“istAuf Nachfrage: Erklärung des Begri s„Programmierung“, die für den Schüler/-die Schülerin sinnvoll ist„Man kann ihm sagen, was es machensoll“, Interview-Nr. 103Tab. 2: Kategorienssystem zur Einordnung der Aussagen in den Interviews4 Erhebungsinstrumente und AuswertungsmethodenWährend der Interviews zur Vorwissensabfrage wurden Reaktionen und Antworten derKinder von einem Protokollanten in Form von schriftlichen Notizen festgehalten.Bei den Programmieraufgaben wurden die Aktionen am Computer per Screencast erfasst.Die Screencasts wurden mit der Software OBS [Op] angefertigt, die automatisch mit demEditor startete. Während der Bearbeitung der Programmieraufgaben wurden Rückfragender Kinder beantwortet, ggf. auch Hilfestellungen und Tipps geben – beides wurde mitZuordnung zu dem/der betre enden Schüler(in) und Zeitstempel notiert. Tonoder Video-aufzeichnungen wurden nicht angefertigt.Die Interviews wurden in Anlehnung an Mayring (vgl. [Ma02]) ausgewertet, da ledig-lich Notizen zu den Schülerantworten und -reaktionen vorlagen und keine vollständigenTranskriptionen. Tab.2zeigt das Kategoriensystem, welches induktiv entwickelt und inRückkopplung mit seiner Anwendung mehrfach angepasst wurde.Da die Notizen kurz und die Deﬁnitionen und Ankerbeispiele bereits sehr konkret sind,wurde auf Codierregeln verzichtet. Das Kategoriensystem wurde von mehreren Personenzur unabhängigen Auswertung genutzt. Im nächsten Schritt ließen sich die Unterkategorien„mystische“ (UK 2.1), „nicht-technische“ (UK 2.2), „technische“ (UK 2.3) Begri e, dieAntwort auf die „Warum-Frage“ (UK 3.1) und die Erklärung des Begri s „Programmierung“(UK 3.4) in Anlehnung an Mayring reduzieren.Informatikunterricht in der Grundschule mit Calliope 536 Kevin Baum, Nadine Kirsch, Kerstin Reese, Pascal Schmidt, Lukas Wachter, Verena WolfBei der quantitativen Auswertung der Screencasts ist für jedes Team und jede Aufgabebestimmt worden, ob die Aufgabe vollständig, bis auf kleine Mängel oder gar nicht gelöstwurde. Ebenso wurde die Bearbeitungsdauer erfasst. Aufgabe 4 wurde aufgrund ihrerKomplexität genauer ausgewertet. Um diese Aufgabe erfolgreich zu lösen, musste sie inTeilaufgaben zerlegt werden. Der Erfolg beim Erkennen und Bearbeiten der Teilaufgabenund das Vorgehen der Schülerinnen und Schüler wurden festgehalten.5 Ergebnisse der Studie5.1 Ergebnisse der InterviewauswertungEs lagen 133 Notizen zu Interviews vor, die ausgewertet werden konnten (Tab. 3). Alsmystische Begri e (UK 2.1) wurde z.B. „Jedi-Fahrzeug“ genannt. Es wurde unterstellt, dassdie Cubelets „denken“oder „sich erschrecken“. Zusammenfassend kann gesagt werden, dassdiese Gruppe von Kindern die Cubelets als handelnd beschreibt. Neun Kinder haben imInterview mystische Begri e verwendet.Die Reduktion der nicht technischen Begri e (UK 2.2) ergab, dass diese Gruppe vonKindern das eingesetzte Informatiksystem häuﬁg mit Analogien aus der Biologie beschreibt.Die Cubelets haben „Augen“ oder die „Sonne löst etwas aus“. Meist werden Begri e fürden sichtbaren Teil der Sensoren gesucht: „Löcher“, „das Schwarze“ oder „Punkte“. 41Kinder haben wenigstens einen nicht-technischen Begri  benutzt.An technischen Begri en (UK 2.3) wurden meist „Sensor“ oder Analogien („Scanner“,„Bewegungsmelder“) genannt. Die sichtbaren, mechanischen Bestandteile der Cubeletswurden öfter mit Begri en wie „Räder“oder „Rollen“beschrieben. Innerhalb der Cubeletswurden „Kabel“, „Motoren“, „Elektronik“ und „Batterien“ vermutet. Manche Kinder dieserGruppe erklärten die berührungsfreie Interaktion mit den Cubelets mit „Magneten“ oder„Wärme“. Einige sagten, dass „Signale“ oder „Daten“ vom Sensor an den Motor geschicktwerden. Insgesamt kann der Gebrauch der technischen Begri e als überwiegend vagebezeichnet werden. 115 Kinder benutzten technische Begri e.Als Antwort auf die „Warum“-Frage (UK 3.1) wurde meist genannt, dass das System „soprogrammiert“ oder etwas „so eingebaut“ sei. Als Erklärung wurde oft nur gesagt, dass eseinen „Sensor“ gibt. Die Antworten blieben kurz und kamen über Schlagworte – „Technik“,„Elektronik“, „Signale“– kaum hinaus. Oft wurde erst auf Nachfrage eine Antwort gegeben.66 Kinder gaben eine Antwort auf die „Warum“-Frage.Wenn die Kinder den Begri  „Programmieren“ benutzt haben, wurde nachgefragt, was dassei (UK 3.4). Die Kinder erläuterten, dass „ein Mensch etwas sagt“ oder „etwas eingestelltwird“. Das macht man „am Computer“ und „überträgt“ es auf das Informatiksystem. 24Schulcode11123445⌃Anzahl Interviews17 17 21 18 17 15 17 11133Tab. 3: Anzahl der verwertbaren Interviews54 Kevin Baum et al.Unterrichtsmodul mit Calliope mini 7bearbeitet vollst. gelöst kl. Fehler nicht gelöstmin maxAufg. 1 63 58 4 101:00 03:19 19:31Aufg. 2 59 57 1 100:38 04:48 17:59Aufg. 3 62 47 10 503:23 13:38 37:12Aufg. 4 54 9 0 4513:18 23:09 36:29Tab. 4: Anzahl der bearbeiteten Aufgaben, Erfolg und BearbeitungszeitenKinder hatten eine eher vage Vorstellung davon, was Programmieren ist. Kein Kind schienvon eigenen Erfahrungen berichten zu können.5.2 Ergebnisse aus der Screencast-AuswertungNach der Erhebungsphase lagen 63 auswertbare Screencasts mit insgesamt mehr als 50Stunden Videomaterial vor. Tab.4zeigt den nach Aufgaben aufgeschlüsselten Erfolg derBearbeitung sowie die Bearbeitungsdauer.Festzustellen ist, dass bei den ersten drei Aufgaben jeweils über 90% der Gruppen einekorrekte Lösung oder eine Lösung mit nur kleinen Fehlern gefunden haben. Zur erfolgreichenBearbeitung der 3. Aufgabe mussten die Teams ein komplexeres Verhalten des Calliopemini nachbilden. Dazu musste das Verhalten der Vorlage genau beobachtet und Schritt fürSchritt programmiert werden. Nahezu 75% der Teams konnten diese Aufgabe vollständiglösen, während nur ca. 10% keine Lösung gelang.Bei der 4. Aufgabe mussten mehrere Eingabe-Ausgabe-Zusammenhänge erkannt undimplementiert werden. Besonders gut gelang es den Kindern, eine rein visuelle Sequenzzu erkennen und zu reproduzieren: Zwei Drittel konnten die korrekte Reihenfolge für dasLauﬂicht auf dem LED-Feld programmieren.Zur Bestimmung der Bearbeitungsdauer der einzelnen Aufgaben (vgl.Abb. 1) wurde die Zeitgemessen, die entsprechend der Screencasts an der Lösung der Aufgabe verbracht wurde.Da die Aufgaben ohne Vorplanung lösbar waren und im Unterricht keine Planungszeitohne Aktivität am Computer beobachtet werden konnte, gehen wir davon aus, dass dieermittelten Bearbeitungszeiten in Tab.4ausreichend genau sind. Zu erkennen ist, dass dieBearbeitungsdauer mit ansteigendem Schwierigkeitsgrad zunehmend stärker variiert. Daslässt vermuten, dass die erste Aufgabe als Einstieg den meisten Kindern gerecht wurde.Die in einzelnen Fällen sehr geringe Bearbeitungszeit bei Aufgabe 2 ergibt sich daraus, dassnur wenige Teams den Baustein „Zeige Zeichenfolge“ benutzt haben. Die meisten Teamshaben jeden Buchstaben einzeln auf dem LED-Feld gezeichnet, womit diese Umsetzunglänger dauerte.Gut 87% der Teams waren während (mehr oder minder) der gesamten Bearbeitungszeit mitden Aufgaben beschäftigt. Die Teams, die nicht an der Lösung gearbeitet haben, schautensich an anderer Stelle des Editors um. Kein Team hat den Editor verlassen, andere Programmeaufgerufen oder die Arbeit am Computer komplett eingestellt.Informatikunterricht in der Grundschule mit Calliope 558 Kevin Baum, Nadine Kirsch, Kerstin Reese, Pascal Schmidt, Lukas Wachter, Verena Wolf Abb. 1: Dauer der erfolgreichen Bearbeitung für jede AufgabeDie 4. Aufgabe bestand aus drei Teilaufgaben, die grundsätzlich in beliebiger Reihenfolgeabgearbeitet werden konnten:Teilaufgabe 1:Dauerhaft blinkendes Muster auf dem LED-FeldTeilaufgabe 2:Wenn Knopf A gedrückt wird, werden 3 verschiedene Töne gespieltTeilaufgabe 3:Wenn Knopf B gedrückt wird, werden 3 verschiedene Töne gespielt undder Ampelfarbverlauf (Rot, Gelb, Grün) dargestelltFast alle Teams bearbeiteten als erstes Teilaufgabe 1, die auch am häuﬁgsten korrekt gelöstworden ist (gut 60% aller Teams). Bei den Teilaufgaben 2 und 3 sank der Anteil dererfolgreichen Teams auf ca. ein Viertel.5.3 Beobachtungen während der Arbeit an den AbschlussaufgabenGelegentlich fehlten Teile des zu entwickelnden Algorithmus, wie z.B. das Ausschalten desLED-Felds am Ende des ersten Programms. Insbesondere bei Aufgabe 3 fehlte oft der ﬁnaleTon, da der Calliope mini nicht sehr laut piept. Es ﬁel einigen Kindern schwer, selbstständigneue Bausteine, wie z.B. den „dauerhaft“-Baustein für Aufgabe 4 oder den „Wenn Knopf Bgedrückt“-Baustein für Aufgabe 2, zu integrieren. Wir vermuten, dass dies an der Kürzeder Arbeit mit dem Editor lag und Probleme dieser Art mit zunehmender Übung seltenerauftreten dürften.56 Kevin Baum et al.Unterrichtsmodul mit Calliope mini 9Nur wenige Kinder verwendeten bei Aufgabe 3 auf Anhieb auch das Ausschalten desLED-Felds, um es zum Blinken zu bringen. Fast alle versuchten das Blinken mit dem„Pausiere“-Baustein umzusetzen. Dies wurde möglicherweise durch die Programmierungder Ampel in der Einführung begünstigt, bei der man diesen Baustein benötigt. Zudemkönnte der Bezeichner dazu geführt haben, dass die Kinder in den „Pausiere“-Bausteineine andere Semantik hinein interpretierten ("tue eine Zeit lang nichts"), von der sie auchnur schwer abzubringen waren. Die Verwendung eines leeren „Zeige LEDs“-Bausteins inVerbindung mit dem „Pausiere“-Baustein überzeugte die Kinder deutlich mehr.6 Fazit und abschließende WorteDie Ergebnisse der Studie zeigen einerseits die geringen Vorkenntnisse der interviewtenSchülerInnen und o enbaren zugleich das Potential kindgerechter reaktiver Informatiksyste-me – hier in Form des Calliope mini – für das Erlernen informatischer Grundprinzipien.Ein Großteil der 137 TeilnehmerInnen verschiedener Schulen in unterschiedlichen Einzugs-gebieten hatte bislang allenfalls rudimentäres Vorwissen über Informatiksysteme. Eineadäquate Vorstellung der Funktionsweise des EVA-Prinzips konnte nahezu überhaupt nichtfestgestellt werden.Die Ergebnisse der abschließenden Programmierarbeit zeigen, dass die Kinder mit deneinfachen EVA-Problemstellungen, wie sie in den Aufgaben 1-3 zu lösen waren, kaumProbleme hatten. Dies zeigt auch, dass sie im Laufe der Unterrichtseinheit die Kompe-tenz erworben haben, mit elementaren Programmierelementen und dem Editor sinnvollumzugehen. Die 4. Aufgabe erforderte eine Zerlegung in überschaubare Teilprobleme,also eine durchaus fortgeschrittene Kompetenz des "computional thinking". Insofern istes bewerkenswert, dass neun Teams (ca. 14%) diese Aufgabe vollständig korrekt lösenkonnten und fast alle anderen Teams immerhin korrekte Teilergebnisse bei der Wahl derEin-Ausgabe-Bausteine und der Deﬁnition der Sequenzen angeben konnten.Insgesamt ziehen wir hieraus das Fazit, dass SchülerInnen der 4. Klasse in der Lage sind,einfache Beispiele für das EV A-Prinzip zu verstehen und in einem konkreten Informatiksys-tem zu implementieren – wie es auch [Sc01] aus kognitionspsychologischer Sicht bestätigt.Der Calliope mini stellte sich als gutes Hilfsmittel zur Entmystiﬁzierung solcher Systemeheraus und ist den Ergebnissen der Studie nach zu urteilen als didaktisches Informatiksystemzum Einsatz in der Primarstufe geeignet. Zu sehr ähnlichen Schlussfolgerungen kommtauch eine Studie von Murmann et al. (vgl. [Mu18]), in der ebenfalls Unterrichtseinheitenfür Calliope mini entworfen und durchgeführt worden sind. Während der Bremer Fokus aufBeobachtungen und Befragungen der Kinder lag, die mit den Calliope minis arbeiteten,beinhaltet unsere Studie auch die Auswertung eines Abschlusstests und fokussiert damitauch die Performanz der SchülerInnen. Eine weitere Studie mit der ProgrammierspracheScratch ﬁndet sich in [FGH17].Abschließend möchten wir einige persönliche Eindrücke schildern: Viele Lehrkräfte warenim Vorfeld skeptisch und zeigten gegenüber den Geräten Berührungsängste. Manchekonnten sich kaum vorstellen, dass ihre SchülerInnen im Umgang mit den MinicomputernInformatikunterricht in der Grundschule mit Calliope 5710 Kevin Baum, Nadine Kirsch, Kerstin Reese, Pascal Schmidt, Lukas Wachter, Verena Wolfetwas Sinnvolles lernen könnten. Die Unterrichtseinheit hat dieses Bild deutlich verändert,weil sie den Kindern Spaß machte und ihre Ergebnisse die Erwartungen der Lehrkräfteschon nach kurzer Zeit deutlich übertrafen – eine Erkenntnis, die bei möglichst vielenGrundschullehrkräften erreicht und gefestigt werden muss.DanksagungWir danken Ludger Humbert (Universität Wuppertal), der uns in derVorbereitungsphase für die Studie unterstützt hat. Ebenso danken wir den beteiligtenLehrerInnen und SchülerInnen für ihre Bereitschaft, an der Studie teilzunehmen.Literatur[Be18]Best, A.; Borowski, C.; Büttner, K.; Freudenberg, R.; Fricke, M.; Haselmei-er, K.; Herper, H.; Hinz, V.; Humbert, L.; Müller, D.; Thomas, M.: Kompeten-zen für informatische Bildung im Primarbereich. LOG IN 38/189/190, S. 1–36,2018.[FGH17]Funke, A.; Geldreich, K.; Hubwieser, P.: Analysis of scratch projects of anintroductory programming course for primary school students. In: IEEE GlobalEngineering Education Conference (EDUCON). S. 1229–1236, Apr. 2017.[HWW17]Ho mann, S.; Wendlandt, K.; Wendlandt, M.: Algorithmisieren im Grund-schulalter. In: Informatische Bildung zum Verstehen und Gestalten der digitalenWelt. Gesellschaft für Informatik, Bonn, S. 73–82, 2017.[LP17]LPM: Bildungsminister Commerçon stellt Landeskonzept Medienbildung undFörderprogramm für Medienschulen vor, 2017,   :https://www.lpm.uni-sb.de/typo3/index.php?id=2092&tx_ttnews%5Btt_news%5D=679&cHash=fc7e178c61bb18f79092d46e441cccf0&L=0, Stand: 18. 05. 2019.[Ma02]Mayring, P.: Einführung in die qualitative Sozialforschung. Beltz, 2002.[Mi]Microsoft: MakeCode,   :makecode.calliope.cc, Stand: 18. 05. 2019.[Mo]Modular Robotics: Cubelets,   :www.modrobotics.com, Stand: 18. 05. 2019.[Mu18]Murmann, P. D. L.; Schelhowe, P. D. H.; Bockermann, D. I.; Engelbertz, S.; Ill-ginnis, S.; Moebus, A.: Calliope mini Eine Explorationsstudie im pädagogisch-didaktischen Kontext, Abschlussbericht, 2018,   :https://elib.suub.uni-bremen.de/edocs/00106848-1.pdf, Stand: 18. 05. 2019.[Op]Open Broadcaster Software: OBS Studio,   :https://obsproject.com,Stand: 18. 05. 2019.[Sc01]Schwill, A.: Ab wann kann man mit Kindern Informatik machen? Eine Studieüber informatische Fähigkeiten von Kindern. In: Informatikunterricht undMedienbildung. INFOS ’01, GI, S. 13–30, 2001.[ST11]Starruß, I.; Timmermann, B.: Informatische Bildung in Deutschland. LOG IN31/1, S. 49–59, 2011.58 Kevin Baum et al.Arno Pasternak (Hrsg.): INFOS 2019,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1 Bild der Informatik von Grundschullehrpersonen Ergebnisse eines mehrjährigen Projekts zu informatikbezogenen Vorstellungen Alexander Best1 Abstract: Grundschullehrpersonen (n=11) wurden mittels leitfadengestützter Einzelinterviews zu ihren Vorstellungen zur Informatik und zum Informatikunterricht befragt. Die Analyse der Transkripte deckte vier Sichtweisen auf Informatik auf: eine mathematische, mediengeprägte, gesellschaftliche und technische. Die Lehrpersonen gehen von einer dichotomen Einteilung in Informatik-Insider sowie Informatik-Outsider aus und haben eine funktional geprägte Sichtweise auf digitale Artefakte (black box). Informatiksysteme nehmen einen hohen Stellenwert ein; es werden aber auch Unplugged-Ansätze expliziert. Fachliche Vorstellungen beschränken sich auf sämtliche GI-Prozessbereiche und die GI-Inhaltsbereiche INFORMATION UND DATEN, ALGORITHMEN sowie INFORMATIK, MENSCH UND GESELLSCHAFT. Der Kontakt mit Informatik entstand in der eigenen Schulzeit, Freizeit, im Studium oder beruflichen Umfeld und führte zu unterschiedlichen biografischen Zugängen. Das selbstständige Unterrichten einer informatischen Unterrichtseinheit führte bei Lehrpersonen (n=3) sowohl zur Vorstellungsänderung (conceptual change) als auch Vorstellungsbeständigkeit und -resilienz (belief perseverance oder conceptual conservatism bzw. robustness), welche in abschließenden Einzelinterviews erhoben wurden. Keywords: Informatik in der Grundschule; Primarbildung; Bild der Informatik; Lehrervorstellungen; Einzelfallstudien; Leitfadeninterviews; Grounded Theory 1 Einleitung Das Projekt „Informatik in der Grundschule (IGS)“ am Arbeitsbereich Didaktik der Informatik der WWU Münster wurde 2014 initiiert und an ein Dissertationsvorhaben gekoppelt. Die Forschungsfragen lauten: RQ1 Welche biografischen Bezüge zur Informatik und zum Informatikunterricht werden von Grundschullehrpersonen assoziiert? RQ2 Welche zentralen Begriffe der Informatik sind nach Auffassung der Lehrpersonen für die Grundschule von Bedeutung; warum sind sie es und wie sind diese ihrer Ansicht nach inhaltlich belegt? RQ3 Wo begegnen Kinder im Grundschulalter nach Ansicht der Grundschullehrpersonen Informatik in ihrem Alltag?                                                         1 Westfälische Wilhelms-Universität Münster, Didaktik der Informatik, Corrensstraße 80, 48149 Münster, alexander.best@uni-muenster.de  cba doi:10.18420/infos2019-06Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 59 2 Alexander Best RQ4 Welche implizit-unbewussten informatikbezogenen Vorstellungen manifestieren sich beim Unterrichten einer informatischen Unterrichtseinheit und inwiefern kommt es hierbei zu Vorstellungsänderung, -beständigkeit und/oder -resilienz? Auf der INFOS 2015 wurden erste Forschungsergebnisse vorgestellt, welche durch einen hypothesenprüfenden Zugang mittels eines Fragebogens gewonnen wurden [BM15]. Grundlage bildete ein Datensatz von 27 Lehrpersonen des Faches Sachunterricht an 13 Grundschulen. Auf der INFOS 2017 wurden Zwischenergebnisse vorgestellt, die über einen hypothesengenerierenden Zugang mittels leitfadengestützter Einzelinterviews gewonnen wurden [Be17]. Grundlage bildeten zwei kontrastierende Einzelfälle. In diesem Beitrag werden die abschließenden Ergebnisse des Vorhabens vorgestellt, welche zwischen 2014 und 2019 gewonnen wurden. Die Datenerhebung war auf Grundschulen in öffentlicher Trägerschaft im Regierungsbezirk Münster (NRW) beschränkt. Die Population besteht aus 6.469 Lehrpersonen (♂=534) an 411 Schulen2. 2 Forschungsstand Lehrpersonen besitzen sowohl fachliche, allgemeindidaktische als auch fachdidaktische Kenntnisse. Besonders Shulman zeigte in seinen Arbeiten, dass Drittes als „besonderes Amalgam“ dient, um Erstes und Zweites zu verknüpfen [Sh87]. Hierauf basierend entwickelte Ernest ein Modell für die Mathematikdidaktik, in dem er neben Kenntnissen (knowledge) auch Vorstellungen (beliefs) und Einstellungen (attitudes) von Lehrpersonen als bedeutsame Faktoren für professionelles Handeln herausstellte und in Anlehnung an Thompsons Vorarbeiten drei Sichtweisen auf Mathematik auswies: problem-solving view, Platonist view und instrumentalist view [Er89]. Das Interesse der Forschung an Lehrervorstellungen stieg zunehmend und erhielt mit Pajares Aufsatz „Teachers' Beliefs and Educational Research: Cleaning Up a Messy Construct“ von 1992 ein Manifest, welches die multidisziplinären Ergebnisse und Erkenntnisse bündelte und systematisierte. Für die Fachdidaktik Informatik gelangt Bender zu zahlreichen „professionellen Überzeugungen“3 von Informatiklehrpersonen [Be16]. Lewis, Jackson und Waite zeigen, dass sich Vorstellungen und Einstellungen von Hochschuldozierenden (faculty) und Studierenden (students) gleichen, unterscheiden, annähern und auseinanderentwickeln [LJW10]. Dengel weist in einer Studie mit 116 Informatiklehrpersonen an unterschiedlichen Schulformen der Sekundarstufe nach, dass eine Mehrheit frühe informatische Bildung sowohl für möglich als auch sinnig erachtet [De17]. Funke, Geldreich und Hubwieser führten eine Studie mit sechs Grundschullehrpersonen (♀=5) durch [FGH16]. In dieser kommen sie zum Ergebnis, dass die interviewten Lehrpersonen zwar über „kein konkretes Bild der Informatik in der                                                         2 Angaben laut Statistischem Landesamt NRW, Landesdatenbank-Codes B-D06.1-I1 und B-D09.1-I1, Schuljahr 2017/18. Angaben exklusive PRIMUS-Schulen, Freie Waldorfschulen und sonstige Privatschulen. 3 Kirchner weist darauf hin, dass die Begriffe „Überzeugung“ sowie „Vorstellung“ in der Bildungsforschung weitestgehend synonym verwendet werden und empfiehlt die Verwendung des letzteren [Ki16]. 60 Alexander Best Bild der Informatik von Grundschullehrpersonen 3 Grundschule“, jedoch über einige förderliche Vorund Einstellungen verfügen [FGH16]. Die Ergebnisse decken sich mit denen der auf der INFOS 2015 und 2017 vorgestellten Beiträge [BM15], [Be17]. Die Veränderbarkeit, Beständigkeit bzw. Resilienz sowie Differenzierung in bewusste und unbewusste Lehrervorstellungen stellen bislang ein Forschungsdesiderat der Fachdidaktik Informatik für sämtliche Bildungsbereiche dar. 3 Theoretischer Rahmen Kirchner definiert: „Lehrervorstellungen sind subjektive, relativ stabile, wenngleich erfahrungsbasiert veränderbare, zum Teil unbewusste, kontextabhängige Kognitionen von Lehrpersonen. Sie umfassen die theorieähnlichen, wenn auch nicht widerspruchsfreien Gedanken zu verschiedenen fächerübergreifenden und fachspezifischen Gegenstandsbereichen der Profession von Lehrpersonen.“ [Ki16]. Eine Übersicht weiterer Definitionen geben Fives und Buehl [FB12]. Über Anteile von Affektion, Motivation und Volition an Vorstellungen sowie deren Wechselwirkung mit weiteren mentalen Merkmalen, etwa Einstellungen, wird derzeit aktiv geforscht. 3.1 Eigenschaften von Lehrervorstellungen Aus den Katalogen von Pajares, Fives und Buehl sowie Kirchner lassen sich folgende Eigenschaften zusammentragen [Pa92], [FB12], [Ki16]: Lehrervorstellungen können (1) explizit, also bewusst, oder implizit, also unbewusst, sein, (2) fungieren als Filter auf die Wahrnehmung, (3) haben individuelle Bedeutung und Funktion im Vorstellungssystem4, (4) sind entgegen wissenschaftlicher Theorien weder zwingend logisch noch widerspruchsfrei, (5) haben Einfluss auf das Verhalten von Lehrpersonen innerund außerhalb des Unterrichts, (6) haben Einfluss auf die Lernprozesse von Schülerinnen und Schülern5 sowie deren Vorstellungen, (7) lassen sich nicht distinkt von Wissen trennen und (8) sind kontextuell. Die Mehrheit der Forscher geht davon aus, dass Lehrervorstellungen veränderbar sind, jedoch leicht und schwer veränderbare Vorstellungen existieren. Zwei Kriterien hierfür stellen die Zeitspanne sowie Relevanz oder Zentralität einer Vorstellung im Vorstellungssystem dar. 3.2 Systematisierung von Lehrervorstellungen Taxonomien lassen sich u. a. bei Fives und Buehl, Kunter und Pohlmann sowie Calderhead finden:                                                         4 Bryan definiert: „Belief systems are groups of beliefs that, unlike knowledge systems, do not require general consensus. They are relatively static, and when they change it is not because of sound reasoning but more likely because of a »conversion or gestalt shift«“ [Br03] in Anlehnung an Nespor. 5 „Schülerinnen und Schüler“ bzw. „Schülerinnen und Schülern“ wird im Folgenden mit SuS abgekürzt. Bild der Informatik von Grundschullehrpersonen 61 4 Alexander Best Domänen von Lehrervorstellungen nach...Fives und Buehl [FB12] • Selbst • Kontext oder Umgebung • Inhalt oder Wissen • spezifische Unterrichtskonzepte • Lehransätze • Lernende Kunter und Pohlmann [KP15] • Selbst • bestimmte SuS • Lehren und Lernen Calderhead [Ca96] • Selbst und die Lehrerrolle • Lernende und das Lernen • Lehren • Lernen zu Lehren • Fach  Für die Fachdidaktik Informatik gelangt Bender zu folgender Systematisierung [Be16]: (1) Lehr-lerntheoretische und epistemologische Überzeugungen in Bezug auf Informatik, (2) Überzeugungen in Bezug auf den Umgang mit Daten und (3) Überzeugungen zum Lernen im Kontext von Strategien und Prinzipien. 4 Methodik und Methodologie Die Ergebnisse des auf der INFOS 2015 vorgestellten Beitrags zeigen große Unsicherheiten bei den Lehrpersonen, sich deduktiv vorgegebenen Aussagen über Informatik und Informatikunterricht zuzuordnen [BM15]. Fischler problematisiert: „Fragebogen besitzen nicht die Flexibilität, die notwendig ist, um situationsbezogene Vorstellungen so auszuloten, dass der Zusammenhang von erklärten Handlungszielen und darauf abgestimmten Handlungen sichtbar wird. Außerdem öffnen sie durch die Vorgabe von Begriffen, über deren Bedeutung im Falle verschiedener Interpretationen wegen Fehlens eines Dialogs zwischen Fragendem und Befragtem kein Konsens hergestellt werden kann, ein weites Feld möglicher Missverständnisse.“ [Fi01]. Methodologischer Rahmen für die Neuausrichtung des Vorhabens bildete die Grounded Theory (GT), welche bereits in mehreren Arbeiten der Fachdidaktik Informatik erfolgreich genutzt werden konnte [Kn11], [Mü17]. Die Wahl des Datenerhebungsinstruments fiel auf das leitfadengestützte Einzelinterview. Es zeichnet sich über den Einsatz eines Gesprächsleitfadens und sogenannter Check-Up-Fragen durch ein mittleres Maß an Strukturiertheit aus, was besonders Novizen den Einstieg in die Interviewführung erleichtert. Die Interviews wurden digital-auditiv aufgezeichnet und mittels Regelsets transkribiert sowie pseudonymisiert. Daran schloss sich die Analyse der Transkripte über das dreischrittige Kodier-Schema der GT an: offene, selektive und axiale Kodierung. Die Zusammensetzung der Stichprobe (sample) erfolgte mittels theoretischem Sampling. Hierfür wurden nach Auswertung eines Interviews Lehrpersonen identifiziert, die das Potential kontrastiver (maximale Ausprägung) oder ähnlicher (minimale Ausprägung) Vorstellungen vermuten ließen. Grundlage für diese Auswahl bildeten zumeist quantitative Daten, die zuvor mittels eines 62 Alexander Best Bild der Informatik von Grundschullehrpersonen 5 Interviewakquisebogens erhoben wurden. Neben diesem Zugriff auf die expliziten Vorstellungen der Lehrpersonen sollte auch eine Erhebung der impliziten Vorstellungen erfolgen.6 Als eine Möglichkeit, auf Letztere zuzugreifen, schlagen Fives und Buehl vor, (geplantes) Verhalten und Gespräche der Lehrpersonen zu beobachten und auf zugrundeliegende Vorstellungen zu schließen (infer) [FB12]. Einige der zuvor interviewten Lehrpersonen (n=3) erklärten sich bereit, eine informatische Unterrichtseinheit unter Hospitation des Forschers durchzuführen und anschließend an einem Abschlussinterview teilzunehmen. Während der Hospitation wurde ein Protokoll angefertigt. Die Durchführung und Auswertung der Abschlussinterviews gestaltete sich analog zu den Eingangsinterviews. 5 Vorstellungen von Grundschullehrpersonen zur Informatik Es zeigten sich vier Sichtweisen auf Informatik, die nur geringe Überschneidungen bei den interviewten Lehrpersonen aufwiesen. Eine Sonderrolle kommt der mediengeprägten Sichtweise zu, denn der Medienbegriff wurde von zahlreichen Lehrpersonen zur Kompensation fehlender Fachlichkeit oder Fachsprache situationsbezogen herangezogen, auch wenn sie nicht genuin dieser Sichtweise zugeordnet werden können. Mediengeprägte Sichtweise: Informatik ist für diese Lehrpersonen eng mit Informatiksystemen verknüpft. Diese nehmen jedoch in ihren Vorstellungen unterschiedliche Funktionen ein: Für manche Lehrpersonen führt bereits die Nutzung von Informatiksystemen zur Assoziation mit Informatik, wobei sie sich stark auf den Medienbegriff stützen.7 Andere erwarten eine Gestaltungsoder Bewertungskomponente. Mathematische Sichtweise: Diese Lehrpersonen zeigen im Interview Parallelen zwischen Informatik und Mathematik auf. Insbesondere der Algorithmenbegriff nimmt für sie eine wichtige Funktion ein. Rechenstrategien oder die Auseinandersetzung mit Sachaufgaben werden mit diesem verknüpft. Eine Lehrerin sieht sich durch die Teilnahme am Informatik-Biber in ihrer diesbezüglichen Vorstellung bestätigt. Technische Sichtweise: Diese Lehrpersonen verbinden mit Informatik eine strukturelle Perspektive auf digitale Artefakte [Sc08], bei der sie sich auf Hardware(bspw. Datenspeicher) oder Softwarekomponenten (bspw. algorithmische Grundbausteine) beziehen. Insbesondere Datenspeicherung, -sicherheit und -schutz werden von ihnen                                                         6 Fives und Buehl stellen fest: „We contend that teachers hold both implicit and explicit beliefs that influence their teaching practice. Attempts to access teachers’ implicit beliefs may well bring these conceptions into the explicit realm, thereby changing the nature of the beliefs under examination.“ [FB12]. 7 Dies deckt sich mit Borowskis Aussage: „Es gibt zwei entscheidende Gründe, warum sich ein Ansatz der Informatik in der Grundschule mit der Medienbildung und Medienpädagogik auseinandersetzen muss. Der eine besteht darin, dass bei Lehrerinnen und Lehrern häufig informatische Bildung und Medienbildung synonym benutzt wird.“ [Bo14]. Bild der Informatik von Grundschullehrpersonen 63 6 Alexander Best genannt. Besonders der GI-Inhaltsbereich INFORMATION UND DATEN wird von diesen Lehrpersonen mit Informatik assoziiert. Während der Datenbegriff aus dem Mathematikunterricht bekannt ist, wird Information meist mit der sogenannten „Informationsrecherche“ im Netz assoziiert. Gesellschaftliche Sichtweise: Informatik setzt sich für diese Lehrpersonen mit Fragen der Auswirkungen auseinander, die durch die zunehmende gesellschaftliche Durchdringung mit Informatiksystemen entstehen. Die Einstellungen der Lehrpersonen sind durchaus differenziert und reflektiert („keine Rose ohne Dornen“). Sie gehen davon aus, dass sowohl förderliche als auch gefährdende Auswirkungen existieren. Genanntes Beispiel für Erstes bildet der Einsatz von Informatiksystemen in der Medizin, die Vernichtung von Arbeitsplätzen im Niedriglohnsektor durch die Automatisierung von Abläufen für Letztes. Obwohl die interviewten Lehrpersonen ähnliche Biografien aufweisen, hat der Kontakt mit Informatik sie unterschiedlich geprägt und zu unterschiedlichen Vorstellungen geführt, welche wiederum unterschiedliche Funktion im informatischen Vorstellungssystemen einnehmen. Dies gilt insbesondere für Lehrpersonen, die Informatikunterricht in der eigenen Schulzeit belegten. Während eine Lehrperson bereits Überlegungen angestellt hatte, wie sie Themen aus ihrem damaligen Informatikunterricht auf den Unterricht in der Grundschule übertragen könne, führte bei einer anderen Lehrperson der eigene, als negativ empfundene, Informatikunterricht dazu, dass Informatik im Studium, im Referendariat und auch im Berufsalltag gemieden wurde und weiterhin wird. 6 Vorstellungen von Grundschullehrpersonen zum Informatikunterricht Informatische Bildung, im Sinne der Vorstellungen der Lehrpersonen zur Informatik, wird als bedeutsam für die Primarstufe und darüber hinaus auch für die Lebensund zukünftige Berufswelt der SuS erachtet. Der Ort bzw. die Form informatischer Bildung zeichnet sich hierbei jedoch sehr heterogen ab: (1) eigenständiges Fach, (2) fächerintegriert in mehrere Fächer, (3) fachintegriert in ein Fach oder (4) Arbeitsgemeinschaft/Neigungsgruppe. Die Lehrpersonen gehen davon aus, dass SuS bereits über das Elternhaus und peer-groups informatikaffin oder nicht-informatikaffin sind. Sie sehen eine Verstärkung dieser Differenzierung in Informatik-Insider und Informatik-Outsider [Kn11] mit zunehmendem Alter. Sie gehen davon aus, dass Jungen höheres Interesse an Informatik haben als Mädchen. Eine Lehrperson differenzierte hier jedoch zwischen einer qualitativen und quantitativen Begegnung mit Informatiksystemen, die bei Jungen häufig in den letztgenannten Bereich falle. Die Lehrpersonen sind überzeugt, dass genderspezifischen Sozialisationseffekten zur Informatik in den unteren Klassen der Grundschule oder gar in der Elementarbildung 64 Alexander Best Bild der Informatik von Grundschullehrpersonen 7 entgegengewirkt werden müsse. Informatikunterricht wurde von sämtlichen Lehrpersonen mit kooperativen Sozialund Aktionsformen assoziiert. 7 Ergebnisse Zu RQ1: Der Bezug zur Informatik sowie zum Informatikunterricht entsteht überwiegend in der eigenen Schulzeit. Dies geschieht entweder durch die Wahl, Abwahl oder Nicht-Wahl des Informatikunterrichts. Die durch den Informatikunterricht gewonnenen Vorstellungen sind häufig durch einen Theorie-Praxis-Konflikt gekennzeichnet. Zudem beschränken sich diese meist auf einzelne Werkzeuge oder Gegenstände („Programmiersprache C“, „Diskettenlaufwerk“ etc.). Die Einstellungen der Lehrpersonen gegenüber dem Informatikunterricht in der Sekundarstufe sind negativ oder indifferent, was jedoch nur bei einer Lehrperson zur Ablehnung informatischer Bildung in der Grundschule führt. Zu RQ2: Insbesondere die GI-Prozessbereiche sehen die Lehrpersonen als bedeutsam für die Primarbildung an. Mehrfach äußern sie jedoch Befürchtungen, dass, etwa im Fall von BEGRÜNDEN UND BEWERTEN, eine Überforderung der SuS eintreten könne. DARSTELLEN UND INTERPRETIEREN sowie STRUKTURIEREN UND VERNETZEN werden häufig auf den Einsatz von Informatiksystemen zur Unterstützung von Lernprozessen beschränkt. Die Lehrpersonen beziehen sich auf die GI-Inhaltsbereiche ALGORITHMEN, INFORMATION UND DATEN sowie INFORMATIK, MENSCH UND GESELLSCHAFT, deren Bedeutung für die Primarbildung je nach Sichtweise unterschiedlich gewichtet wird. Lediglich Lehrpersonen, die der mediengeprägten Sichtweise zugeordnet werden können, haben bei der Erläuterung der GI-Inhaltsbereiche durchgängig Schwierigkeiten, da ihnen hier der Medienbegriff fehlt. Vorstellungen zu INFORMATIKSYSTEME sowie SPRACHEN UND AUTOMATEN existieren nicht – zumindest nicht unter diesen Bezeichnungen. Die Relevanz der GI-Kompetenzbereiche wird anhand des (1) Alltagsbezugs, (2) des Allgemeinbildungsanspruchs und (3) der Berufsvorbereitung festgemacht. Zu RQ3: Der Kontakt von Kindern mit Informatik wird von den interviewten Lehrpersonen überwiegend über Informatiksysteme wahrgenommen. Hierzu zählt sowohl der bewusste Kontakt (Phänomenbereich 1), aber auch der unbewusste Kontakt (Phänomenbereich 2) [HP04]. Insbesondere diejenigen Lehrpersonen, die eine mathematische Sichtweise einnehmen, gehen auch auf Kontakte der SuS zur Informatik ohne Informatiksysteme (Phänomenbereich 3) ein. Mit zunehmendem Alter wird ein häufigerer und bewussterer Kontakt von SuS mit Informatik wahrgenommen. Darüber hinaus sind die Lehrpersonen der Ansicht, dass genderspezifische Sozialisationseffekte in den unteren Klassen der Grundschule weniger stark ausgeprägt seien und eine informatische Bildung deshalb bereits hier einsetzen müsse. Zu RQ4: Die Hospitationen (n=3) zeigen, dass die Lehrpersonen ihre zuvor in den Interviews explizierten Vorstellungen auch auf Handlungen und Gespräche im Bild der Informatik von Grundschullehrpersonen 65 8 Alexander Best Unterricht übertragen. Vorstellungsänderungen treten insbesondere bei denjenigen Lehrpersonen auf, die eine starke Verknüpfung zwischen Informatik und Informatiksystemen in den Interviews explizieren und eine Unplugged-Einheit unterrichten. Eine Lehrperson mit hoher Berufserfahrung zeigt erkennbare Vorstellungsbeständigkeit bzw. –resilienz; obwohl sie die Durchführung einer Unplugged-Unterrichtseinheit zur Kryptologie als motivierend für die SuS erachtet, hält sie an ihrer Vorstellung fest, dass Informatikunterricht zu theoriegeladen sei. 8 Implikationen Anders als bislang vermutet, verfügen die interviewten und beobachteten Grundschullehrpersonen über heterogene informatikbezogene Vorstellungen. Eine Gefahr besteht darin, dass die Lehrpersonen selektiv informatische Inhalte oder Prozesse aufgreifen, die ihre Vorstellungen bestätigen, und solche, die ihren Vorstellungen widersprechen, zurückzuweisen. Lehrpersonen mit einem noch sehr vagen und undifferenzierten Bild der Informatik neigen dazu, spezifische Themen der Informatik als umfassend aufzufassen. Dies könnte dazu führen, dass Informatik bspw. mit Programmierung oder Kryptologie gleichgesetzt wird. Folgende Empfehlungen können aus den gewonnenen Erkenntnissen abgeleitet werden: Initiativen für die tertiären und quartären Bildungsbereiche sollten... (1)sämtliche GI-Prozessbereiche und GI-Inhaltsbereiche abdecken, sodass ein differenziertes Bild der Informatik vermittelt werden kann. (2)förderliche Vorstellungen zur Informatik, etwa den Bezug zu Algorithmen über Ablaufbeschreibungen, Anleitungen und Rätsel, aufgreifen, um die Wahrnehmung für Unplugged-Ansätze zu sensibilisieren. (3)für eine vorgeschaltete, formative, summative und nachbereitende Evaluation informatikbezogener Vorstellungen genutzt werden. (4)Ansätze und Methoden, welche auf die „Diskreditierung“ resilienter Vorstellungen ausgelegt sind, überprüfen. 9 Ausblick Erste Ergebnisse und Erkenntnisse konnten im Grundschullehramtsseminar „Digitale Medien und informatische Bildung (DiMeiB)“ an der WWU Münster integriert werden. In Zukunft sollen vorhandene, sich verändernde und beständige bzw. resiliente Vorstellungen in den Fokus genommen werden. Zudem wird die Forschung auf weitere Regierungsbezirke ausgeweitet und zu einem Mixed-Methods-Ansatz erweitert. 66 Alexander Best Bild der Informatik von Grundschullehrpersonen 9 10 Literaturverzeichnis [Be16] Bender, E.: Modellierung und Dimensionierung der professionellen Überzeugungen und motivationalen Orientierungen als Aspekte professioneller Kompetenz von Informatiklehrkräften. Kumulative Dissertation, Paderborn, 2016. [Be17] Best, A.: Bild der Informatik von Grundschullehrpersonen. Erste Ergebnisse aus qualitativen Einzelfallstudien. In (Diethelm, I. Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt. Köllen Druck+Verlag, Bonn, 2017; S. 83–86. [BM15] Best, A.; Marggraf, S.: Das Bild der Informatik von Sachunterrichtslehrern. Erste Ergebnisse einer Umfrage an Grundschulen im Regierungsbezirk Münster. In (Gallenbacher, J. Hrsg.): Informatik allgemeinbildend begreifen. Köllen Druck+Verlag, Bonn, 2015; S. 53–62. [Bo14] Borowski, C.: Thesen zur Informatik in der Grundschule. https://www.grundschulinformatik.de/thesen-zur-informatik-in-der-grundschule/, 18.05.2019. [Br03] Bryan, L. A.: Nestedness of beliefs: Examining a prospective elementary teacher's belief system about science teaching and learning. In Physical Review Special Topics Physics Education Research, 2003, 40; S. 835–868. [Ca96] Calderhead, J.: Teachers: Beliefs and Knowledge. In (Berliner, D. C.; Calfee, R. C. Hrsg.): Handbook of educational psychology. Macmillan Library Reference USA, New York, 1996; S. 709–725. [De17] Dengel, A.: Opinions of CS Teachers in Secondary School Education about CS in Primary School Education. In (Barendsen, E.; Hubwieser, P. Hrsg.): Proceedings of the 12th Workshop in Primary and Secondary Computing Education. ACM Press, New York, 2017; S. 97–98. [Er89] Ernest, P.: The Knowledge, Beliefs and Attitudes of the Mathematics Teacher: a model. In Journal of Education for Teaching, 1989, 15; S. 13–33. [FB12] Fives, H.; Buehl, M. M.: Spring cleaning for the “messy” construct of teachers’ beliefs. What are they? Which have been examined? What can they tell us? In (Harris, K. R.; Graham, S.; Urdan, T. Hrsg.): APA Educational Psychology Handbook. Volume 2. Individual Differences and Cultural and Contextual Factors. American Psychological Association, Washington (D.C.), 2012; S. 471–499. Bild der Informatik von Grundschullehrpersonen 67 10 Alexander Best [FGH16] Funke, A.; Geldreich, K.; Hubwieser, P.: Primary School Teachers’ Opinions about Early Computer Science Education. In (Sheard, J.; Suero Montero, C. Hrsg.): 16th Koli Calling International Conference on Computing Education Research. Koli Calling 2016. ACM Press, New York, 2016; S. 135–139. [Fi01] Fischler, H.: Verfahren zur Erfassung von Lehrer-Vorstellungen zum Lehren und Lernen in den Naturwissenschaften. In Zeitschrift für Didaktik der Naturwissenschaften, 2001, 7; S. 105–120. [HP04] Humbert, L.; Puhlmann, H.: Essential Ingredients of Literacy in Informatics. In (Schubert, S.; Magenheim, J. Hrsg.): Informatics and Student Assessment. Concepts of Empirical Research and Standardisation of Measurement in the Area of Didactics of Informatics. Köllen Druck+Verlag, Bonn, 2004; S. 65–76. [Ki16] Kirchner, V.: Wirtschaftsunterricht aus der Sicht von Lehrpersonen. Eine qualitative Studie zu fachdidaktischen teachers’ beliefs in der ökonomischen Bildung. Springer VS, Wiesbaden, 2016. [Kn11] Knobelsdorf, M.: Biographische Lernund Bildungsprozesse im Handlungskontext der Computernutzung. Dissertation, Berlin, 2011. [KP15] Kunter, M.; Pohlmann, B.: Lehrer. In (Möller, J.; Wild, E. Hrsg.): Pädagogische Psychologie. Springer, Berlin, 2015; S. 261–281. [LJW10] Lewis, C.; Jackson, M. H.; Waite, W. M.: Student and Faculty Attitudes and Beliefs About Computer Science. In Communications of the ACM, 2010, 53; S. 78–85. [Mü17] Müller, D.: Der Berufswahlprozess von Informatiklehrkräften. Überarbeitete Fassung der Dissertation, Universität Wuppertal, 2016. Universitätsverlag Potsdam, Potsdam, 2017. [Pa92] Pajares, M. F.: Teachers’ Beliefs and Educational Research: Cleaning Up a Messy Construct. In Review of Educational Research, 1992, 62; S. 307–332. [Sc08] Schulte, C.: Die duale Natur digitaler Artefakte als Kern Informatischer Bildung. In (Thomas, M.; Weigend, M. Hrsg.): Interesse wecken und Grundkenntnisse vermitteln. 3. Münsteraner Workshop zur Schulinformatik. ZfL-Verlag, Münster, 2008; S. 7–24. [Sh87] Shulman, L. S.: Knowledge and teaching: Foundations of the new reform. In Harvard Educational Review, 1987, 57; S. 1–22. 68 Alexander BestcbaArno Pasternak (Hrsg.): INFOS2019: Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 11Analyse von Curricula auf Abdeckung der Kompetenzen zurBildung in der digitalen WeltIra Diethelm1, Sebastian Glücks2Abstract:Die Kultusministerkonferenz hat Ende 2016 die Strategie zur Bildung in der digitalen Welt[Ku16] verabschiedet hat, mit der sich die Länder verpﬂichten dafür zu sorgen, dass Schüler*innenzum Ende ihrer Pﬂichtschulzeit 61 Kompetenzen besitzen. In dieser Studie wurden daher alle Curriculader Sekundarstufe I, die für niedersächsische Gymnasien im Schuljahr 2017/18 in Kraft waren, aufAbdeckung dieser Kompetenzen untersucht. Dabei wurde sowohl der Frage nachgegangen, welcheKompetenzen bereits jetzt in welchen Fachcurricula enthalten sind als auch, welche Kompetenzen sichvglw. leicht in Bezug auf die Unterrichtsthemen oder die Ausbildung der Lehrkräfte in welche Fächeraufnehmen ließen3. Die Rolle des Faches Informatik wird bei dieser Analyse sehr deutlich. Sie zeigt,dass mindestens ein Drittel der KMK-Kompetenzen keinem anderen Fach zuzuordnen sind und jenach Stundenumfang eine Aufnahme von bis zu zwei Dritteln der Kompetenzen in das Fach Informatiksinnvoll erscheinen. Die Analyse zeigt auch, welche anderen Fächer noch Potenzial aufweisen, welcheaber auch nicht, so dass hieraus gut abzulesen ist, welche Curricula überarbeitet werden sollten. Diehier erstellten Zuordnungen und Veränderungsvorschläge sollen keine bundesweite Empfehlung sein.Sie stellen nicht mehr und nicht weniger als eine erste Untersuchung dar. Sie können aber einenwertvollen Ausgangspunkt für Schulentwicklungsgespräche mit Kollegien und erste Orientierungfür andere Bundesländer und Schulformen sein und so helfen mit einem konstruktiven Prozess dieRelevanz der Informatik im Kollegium zu verdeutlichen.Keywords:Kompetenzen; digitale Welt; Curricula; Inhaltsanalyse; Rolle der Informatik1 Ausgangslage und FragestellungDer Bildungsauftrag der allgemeinbildenden Schulen ist, die Schülerinnen und Schüler zuder aktiven und mündigen Teilhabe an der Gesellschaft zu befähigen. Mit der fortschreitendenEntwicklung der digitalen Technologien steigen auch die Anforderungen an diejenigen,die mit ihnen umgehen müssen. Ein kompetenter Umgang mit diesen setzt somit denfundierten Erwerb entsprechender Kompetenzen voraus. Dazu zählt neben dem Wissenum die Verwendung auch ein Grundverständnis für die informatischen Grundlagen. Füreinen reﬂektierten Umgang mit Informatiksystemen und der Urteilsfähigkeit über siesind diese Aspekte gleichermaßen bedeutend. Da das Zurechtﬁnden in der digitalenWelt inzwischen als Kulturtechnik neben dem Lesen, Schreiben und Rechnen angesehenwird, ist in Bezug auf den allgemeinbildenden Schulunterricht festzuhalten, dass den1Carl von Ossietzky Universität, Didaktik der Informatik, 26111 Oldenburgira.diethelm@uol.de2Studienseminar Leer, Bürgerm.-Ehrlenholtz-Str. 15, 26789 Leer (Ostfriesland)sebastian.gluecks@uol.de3Dieser Artikel fasst die Masterarbeit [Gl18] zusammen, aus der viele Passagen z.T. wortwörtlich übernommensind. Aus Gründen der Lesbarkeit wurde auf die umfangreiche Kenntlichmachung verzichtet. cba doi:10.18420/infos2019-07Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 6912 Ira Diethelm, Sebastian GlücksSchülerinnen und Schülern während ihrer Schullaufbahn die benötigten Kompetenzenvermittelt werden müssen. Welche Kompetenzen dies genau sind, wurde schon vielfachdiskutiert. Die Gesellschaft für Informatik hat dazu bereits im Jahr 2008 Empfehlungen für dieSekundarstufe I ausgesprochen [Ge08]. Auch seien die Empfehlungen der Länderkonferenzder MedienBildung [LK15] und der europäische DIGCOMP [FPB13] exemplarisch fürsolche Kompetenzlisten genannt.Mit der Umsetzung der Strategie sollen laut KMK zwei wesentliche Ziele verfolgt werden:Das erste betri t die Integration der aufgestellten Kompetenzen in den Unterrichtsalltag.Es wird angestrebt, die digitalen Kompetenzen in die Unterrichtsfächer zu integrieren. Alszweites Ziel formuliert die KMK, dass digitale Lernumgebungen vermehrt pädagogischsinnvoll eingesetzt werden sollen. Auch dies erfordert einen abgestimmten Katalog anKenntnissen und Fähigkeiten der Schülerinnen und Schüler, auf den sich die Lehrkräftein den verschiedenen Fächern verlassen können, damit nicht in jedem Fach erneut erklärtwerden muss, wie man beispielsweise an einem gemeinsamen Dokument arbeitet.Den Anstoß für die hier vorliegende Untersuchung bildet die Anfrage eines niedersächsischenGymnasiums, das ein Schulkonzept für die digitale Bildung erarbeiten will. Dabei sollensowohl Pläne für die Infrastruktur und technische Ausstattung als auch für curriculareVorgaben entstehen. Ähnliche Schulentwicklungsprozesse beschäftigen seit Verö entlichungder KMK-Strategie viele Schulen bundesweit. Insofern ist die Anfrage der Schule nachentsprechenden Umsetzungskonzepten exemplarisch. Insbesondere stellen Schulen (undLänder) sich die folgenden zwei Fragen:1. Inwiefern sind die geforderten Kompetenzenjetzt schon in den Curricula enthalten?und2. Welche Fächer können bzw. sollten welcheKompetenzen in ihre Curricula aufnehmen?Die KMK-Strategie [Ku16] schreibt zur Verteilung der Kompetenzen auf die Fächer: „DieEntwicklung und das Erwerben der notwendigen Kompetenzen für ein Leben in einerdigitalen Welt gehen über notwendige informatische Grundkenntnisse weit hinaus undbetre en alle Unterrichtsfächer.“ Hier wird also festgestellt, dass es notwendige informatischeGrundkenntnisse gibt, die zum Leben in der digitalen Welt erforderlich sind. Es wird aberauch gefordert, dass alle Fächer ihren Beitrag leisten müssen. Welche Fächer aber genauwelchen Beitrag leisten müssen, wird im KMK-Dokument nicht speziﬁziert. Informatik istwie in Niedersachsen in vielen anderen Bundesländern kein Pﬂichtfach und erreicht daherdort nur einen Teil der Jahrgänge. Informatik kann daher in diesen Ländern zur Umsetzungdes für alle Schülerinnen und Schüler verpﬂichtenden Kompetenzkatalogs der KMK nureingeschränkt herangezogen werden. Die Frage nach der Verteilung der Kompetenzen istdamit auch eine Frage nach der Stellung des Schulfaches Informatik.Als erste Schritte auf dem Weg zu einer umfassenden Antwort auf diese Fragen wurde dahereine Analyse aller gültigen Kerncurricula Niedersachsen für Gymnasium und die Sekundar-stufe I. Dies entsprach einerseits dem Proﬁl der anfragenden Schule, und andererseits istdies genau der Bereich, in dem nach der ICILS13 [Bo14] die deutschen Schülerinnen undSchüler am besten abgeschnitten hatten. Daher ist anzunehmen, dass hier bei einer Analyse70 Ira Diethelm, Sebastian GlücksAnalyse von Curricula auf Abdeckung der KMK-Kompetenzen 13ggf. die größte Übereinstimmung zu ﬁnden wäre, falls die ICILS-Ergebnisse auf die Lehr-pläne zurückgeführt werden können. Die Analyse soll zum einen eine Bestandsaufnahmedavon sein, welche dieser Kompetenzen bereits vermittelt werden müssen. Dazu werden imFolgenden das Vorgehen und die Ergebnisse beispielhaft am Fach Informatik und einemweiteren Fach dargestellt. Zum anderen werden mögliche Anpassungen vorgeschlagen, diedie Umsetzung der KMK-Strategie befördern würden.2 VorgehenEs wurden alle gymnasialen Kerncurricula der Sekundarstufe I Niedersachsens, die imSchuljahr 2017/18 in Kraft waren, zur Analyse herangezogen. Bei der Wahl der zu analysie-renden Fächer wurde keine weitere Einschränkung vorgenommen. Die Analyse wurde in denFächern auf die o ziellen Dokumente der Kerncurricula begrenzt und keine darüber hinausgehende Literatur zur Interpretation der Curricula (wie z.B. Schulbücher) herangezogen.Für jedes Fach entstand während der Analyse eine Tabelle, in der jeder Kompetenz derKMK-Strategie die passenden fachspeziﬁschen Kompetenzen zugeordnet wurden. Dabeiwurde in zwei Kategorien unterschieden. Zur so deﬁnierten „vollen Abdeckung“ zählt eineFachkompetenz, wenn diese nach Einschätzung der Autoren die Kompetenz zur digitalen Bil-dung vollständig umschließt. Dazu musste die folgende Frage mit „ja“ beantwortet werden:Wenn Schülerinnen und Schüler die betrachtete Fachkompetenz erworben haben, haben siedamit gleichzeitig auch die Kompetenz zur Bildung in der digitalen Welt erworben? Wurdediese Frage jedoch mit „nein“ beantwortet, wurde in abgeschwächter Form danach gefragt,ob wenigstens ein Teilaspekt der Kompetenz zur Bildung in der digitalen Welt erworbenwurde. Fachkompetenzen, für die diese Frage mit „ja“ beantwortet wurde, wurden in die„teilweise Abdeckung“ einsortiert. Zu diesen teilweise abdeckenden Fachkompetenzenwurden darüber hinaus Veränderungsvorschläge erarbeitet, durch deren Umsetzung einevollständige Abdeckung erreicht werden könnte. An dieser Stelle verschwimmt bereits dieErgebnisdarstellung mit der Deutung, da es sich bei den Veränderungsvorschlägen bereitsum Schlussfolgerungen aus der Analyse handelt. Diese Darstellung wurde gewählt, damitdie Information zusammenhängend dargestellt werden kann.Einschränkend ist anzumerken, dass die Autor*innen die Schulfächer Informatik, Musik,Mathematik und Chemie vertreten und die Analyse daher in allen andere Fächern ausfachfremder Sicht durchgeführt wurde. Wie bei jeder qualitativen Inhaltsanalyse ergeben sichaus unterschiedlichen Einschätzungen verschiedener Personen Deutungsunterschiede, diebei einer weiterführenden Diskussion der Ergebnisse zu beachten sind. Dies wird durch dierecht allgemeinen Formulierungen der Kompetenzen in der KMK-Strategie, die häuﬁg nichtexplizit auf die digitale Welt Bezug nehmen, noch verstärkt. So kann man Kompetenzen wie„Referenzierungspraxis beherrschen“ oder „eine Produktion planen“ auch als erfüllt ansehen,wenn in einem Kerncurriculum diese ebenfalls allgemein erwähnt werden und man dieseKompetenzen somit auch mit analogen Mitteln erreichen kann. Insofern soll hier betontwerden, dass die nachfolgenden Ergebnisse und VeränderungsvorschlägeeinemöglicheAnalyse von Curricula auf Abdeckung der Kompetenzen zur Bildung in der dig. Welt 7114 Ira Diethelm, Sebastian GlücksDeutung darstellen und nicht als endgültige Empfehlung, sondern als Ausgangspunkt fürweitere Diskussionen zu verstehen sind. Ebenso sind die berechneten prozentualen Abde-ckungsquoten zu verstehen: Es wurden zur Vereinfachung Spiegelstriche der Kompetenzengezählt, obwohl verschiedene Kompetenzen natürlich durchaus unterschiedlichen Umfangim Unterricht einnehmen.3 ErgebnisseHier werden nun exemplarisch die Ergebnisse der Analyse der fachspeziﬁschen Curriculafür Musik und Informatik dargestellt. Die vollständigen Ergebnisse für alle Fächer sindonline verfügbar [Gl18]. Die Ergebnisse werden tabellarisch dargestellt, vgl. Abb.1: In derersten Zeile steht die betrachtete KMK-Kompetenz, die über eine Übereinstimmung in demUnterrichtsfach verfügt. Fachspeziﬁsche Kompetenzen, die die KMK-Kompetenz vollständigabdecken (VA), sind in der zweiten Zeile aufgeführt. In der dritten Zeile, die gelb markiertist, sind Fachkompetenzen aufgelistet, die die betrachtete KMK-Kompetenz teilweiseabdecken (TA). Dies kann der Fall sein, wenn beispielsweise der direkte Bezug zu digitalenUmgebungen fehlt oder sie als nicht-verpﬂichtende Option genannt ist, ansonsten aber eineähnliche Kompetenz zu Grunde liegt oder sie sich auf konkrete, fachspeziﬁsche Beispielebezieht. Die vierte und damit letzte Zeile ist für Kommentare und Veränderungsvorschläge(VV) vorgesehen. Abb. 1: Vergleich des Curriculums für Musik mit der KMK-Strategie im Bereich 3Wenn eine Kompetenz aus der KMK-Strategie sowohl vollständig als auch teilweise vonunterschiedlichen Fachkompetenzen abgedeckt wird, so ist sie insgesamt als vollständigabgedeckt zu werten. Daraus resultiert, dass keine Veränderungsvorschläge für die teilweiseabdeckenden Kompetenzen formuliert werden. Darüber hinaus ﬁnden sich in dieser ZeileErklärungen zu Interpretationen, sofern diese für das Verständnis notwendig sind. DieKompetenzbereiche, Lernfelder oder ähnlichen Kategorien, zu denen die Fachkompetenzenin den Curricula zusammengefasst wurden, wurden in die tabellarische Darstellung derErgebnisse übernommen, um ein leichteres Au nden der Kompetenzen in den Curriculazu ermöglichen. Diese Inhalte sind kursiv gedruckt, damit sie gut von den eigentlichenFachkompetenzen unterschieden werden können.72 Ira Diethelm, Sebastian GlücksAnalyse von Curricula auf Abdeckung der KMK-Kompetenzen 153.1 MusikDas Curriculum für das Fach Musik [Ni17] deckt in seiner jetzigen Form nach unsererEinschätzung fünf Kompetenzen aus dem Kompetenzrahmen zur Bildung in der digitalenWelt der KMK ab. Dies entspricht einer Abdeckungsquote von 8,2%. Weitere vier dieserKompetenzen lassen sich in der teilweisen Abdeckung durch Fachkompetenzen ﬁnden.In Abb.1ist exemplarisch der KMK-Kompetenzbereich 3Produzieren und Präsentierendargestellt.Der Kompetenzbereich 3.3Rechtliche Vorgaben beachtenlässt sich im Fach Musik bei derThematisierung des Urheberrechts ﬁnden. Neben Bereich 3 sind auch im Kompetenzbereich1 und 2 der KMK Übereinstimmung zu erkennen. Insbesondere ist eine Zuordnungder Kompetenz 2.5.2Medienerfahrungen weitergeben und in kommunikative Prozesseeinbringenzum Unterrichtsfach Musik im Kerncurriculum zu ﬁnden. Der Kompetenzbereich6.1Medien analysieren und reﬂektierenlässt sich im Fach Musik unter anderem imBereich der Analyse der Wirkung von Musik wiederﬁnden. Auch gibt es Möglichkeit dieKompetenzen 6.1.3 Wirkungen von Medien in der digitalen Welt (z.B.mediale Konstrukte,Stars, Idole, Computerspiele, mediale Gewaltdarstellungen) analysieren und konstruktivdamit umgehen anhand von Komponistenund Musikerportraits zu vermitteln.3.2 InformatikDas Kerncurriculum des Unterrichtsfachs Informatik [Ni14] enthält nach unserer Ein-schätzung passende Fachkompetenzen zu 20 der 61 Kompetenzen der KMK-Strategieund deckt damit momentan 32,8% der zu vermittelnden Kompetenzen zur Bildung in derdigitalen Welt ab. Eine Erhöhung um weitere 26 Kompetenzen auf 75,4% ist mit Blickauf die Ausbildung der dafür nötigen Fachlehrkräfte zur Umsetzung der zuvor genanntenVeränderungsvorschläge möglich. Zu den 15 verbleibenden Kompetenzen ließen sich keinepassenden Fachkompetenzen aus dem KC Informatik ausmachen.Im Kompetenzbereich 1.1Suchen und Filternsteht die Verwendung von digitalen Res-sourcen für Recherchearbeiten im Vordergrund. Die Vermittlung der Kompetenzen desKompetenzbereichs 1.2Auswerten und Bewertenwird durch die Kompetenzen des imKC Informatik sogenannten LernfeldesDaten und ihre Spurenumfassend abgedeckt. DerKompetenzbereich 3.1Speichern und Abrufenwird durch Fachkompetenzen, die in Verbin-dung zu Datenbanken und weiteren Möglichkeiten der Strukturierung von Daten stehen,abgedeckt. In Bezug zu den Kompetenzen aus 2.1Interagierenließen sich die ThemenDatenschutz und Datensicherheit behandeln. Die Kompetenzen zu 2.4Umgangsregelnkennen und einhalten (Netiquette)ließen sich anhand der Thematisierung sozialer Netz-werke vermitteln. Zu diesem Kompetenzbereich lassen sich im Kerncurriculum in deraktuellen Form jedoch keine zugehörigen Kompetenzen identiﬁzieren. Die Kompetenz 2.5.1Ö entliche und private Dienste nutzenhingegen lässt sich in Ansätzen im Kerncurriculumwiederﬁnden.Analyse von Curricula auf Abdeckung der Kompetenzen zur Bildung in der dig. Welt 7316 Ira Diethelm, Sebastian GlücksDie Vermittlung der Kompetenzen aus dem Kompetenzbereich 3Produzieren und Präsentie-renkann ebenfalls durch den Unterricht im Fach Informatik umfassend sichergestellt werden.Für den Kompetenzbereich 4Schützen und sicher Agierenlassen sich im Kerncurriculumpassende Kompetenzen insbesondere aus dem Lernfeld Daten und ihre Spuren ausmachen.Hier erscheint eine Zusammenführung der Fachkompetenzen mit den KMK-Kompetenzensinnvoll. Dies könnte als Ergänzung zum KompetenzbereichI4 Informatik und Gesellschaftdes Kerncurriculums geschehen. Der Kompetenzbereich 5Problemlösen und Handelnlässtsich gänzlich in den Informatikunterricht integrieren. Neben dem Bereich 5.5Algorithmenerkennen und formulieren, der umfangreich durch Fachkompetenzen abgedeckt ist, lassensich auch Kompetenzen ﬁnden, für die weitgehende Anpassungen notwendig werden würden.Zu den Kompetenzen 5.1.1Anforderungen an digitale Umgebungen formulieren, 5.2.2An-forderungen an digitale Werkzeuge formulieren, 5.2.4Digitale Umgebungen und Werkzeugezum persönlichen Gebrauch anpassen, 5.4.1E ektive digitale Lernmöglichkeiten ﬁnden,bewerten und nutzenund 5.4.2Persönliches System von vernetzten digitalen Lernressourcenselbst organisieren könnenlassen sich in der aktuellen Form des Kerncurriculums derzeitkeine passenden Fachkompetenzen ausmachen, obwohl diese Kompetenzen eindeutig demLernfeldComputerkompetenzzuzuordnen sind. Insofern könnte dieses Lernfeld um denUnterpunktUmgang mit digitalen Umgebungen und Werkzeugenerweitert werden, in demdiese fünf Kompetenzen zusammengefasst werden.Die Kompetenzen aus dem Bereich 6Analysieren und Reﬂektierenlassen sich als Teil-aspekte der beiden FachkompetenzenI 4.1 beschreiben die Auswirkungen des Einsatzesvon Informatiksystemen auf die GesellschaftundP 4.4 bewerten die Bedeutung einesInformatiksystems für das Individuum und die Gesellschaftwiederﬁnden. Diese beidenKompetenzen sind sehr umfangreich und allgemein formuliert, sodass die zugeordnetenKompetenzen aus der KMK-Strategie als Konkretisierungen angesehen werden können.4 Zusammenfassung für alle FächerIn der Übersichtsgraﬁk in Abb.2sind die Abdeckungsquoten der einzelnen Fächeraufgelistet. Die oberen, grün eingefärbten Balken stellen die prozentuale Abdeckung derKompetenzen zur Bildung in der digitalen Welt der jeweiligen Fächer dar. Die Wertesind so zu verstehen, dass in dem jeweiligen Unterrichtsfach die KMK-Kompetenzen zudem aufgeführten Prozentsatz bereits unterrichtet werden müssen. Das UnterrichtsfachInformatik hat mit 32,8% in der jetzigen Form des Curriculums nach unserer Einschätzungdie größte fachspeziﬁsche Abdeckung. Die zweitgrößte Abdeckung ist beim UnterrichtsfachDeutsch mit 23,0% zu ﬁnden. Die geringste Abdeckung mit 1,6% erreicht derzeit das FachPolitik-Wirtschaft.Die unteren, gelben Balken weisen die Abdeckungsquoten aus, die erreicht werden können,wenn die Veränderungsvorschläge umgesetzt werden würden. Das Fach Informatik erreichtweiterhin die höchste Quote mit 75,4%. Auch das Fach Deutsch behält den zweiten Platz in74 Ira Diethelm, Sebastian GlücksAnalyse von Curricula auf Abdeckung der KMK-Kompetenzen 17der Rangfolge mit einer Erhöhung auf 31,1%. Der geringste Wert wäre dann beim FachGeschichte mit 9,8% zu ﬁnden. Abb. 2: Abdeckung der KMK-Kompetenzen durch die FächerUm eine Aussage darüber tre en zu können, wie viele Kompetenzen aus der KMK-Strategieinsgesamt durch die vorhandenen Kerncurricula abgedeckt werden, muss eine Auszählungüber mehrere Fächer durchgeführt werden. In der KMK-Strategie ist festgelegt, dass dieVermittlung der Kompetenzen alle SuS erreichen soll. Daher wurde ermittelt, ob dies in denPﬂichtfächern möglich ist und welcher Anteil dort bereits vermittelt wird. Den Abbildungen3bis5kann entnommen werden, welche Kompetenzen in welchen Fächern zu ﬁnden sind.Darüber hinaus ist mit der Größe der farbigen Kästchen angedeutet, in welchem Umfang dieentsprechende Kompetenz in dem jeweiligen Fach abgedeckt wird. Dazu wird zwischen zweiFällen unterschieden. Sofern nur eine einzige passende Fachkompetenz gefunden wurde, istein kleines Kästchen dargestellt. Bei zwei oder mehr übereinstimmenden Fachkompetenzenwurde ein breites Kästchen eingefügt. Darüber hinaus kann an der Art der farblichen Füllungerkannt werden, ob es sich bei dem Unterrichtsfach um ein Pﬂichtfach handelt. Diesesind einfarbig ausgefüllt, während alle anderen Fächer eine gestreifte Struktur aufweisen.Zur Menge der Pﬂichtfächer werden die Unterrichtsfächer Biologie (BI), Chemie (CH),Deutsch (DE), Englisch (EN), Erdkunde (EK), Geschichte (GE), Kunst (KU), Mathematik(MA), Musik (MU), Physik (PH), Politik-Wirtschaft (PW) und Sport (SP) gezählt. DieAbkürzungen für die übrigen Fächer sind: Evangelische Religion (ER), Französisch (FR),Griechisch (GR), Informatik (IF), Islamische Religion (IR), Katholische Religion (KR),Latein (LA), Niederländisch (NI), Spanisch (SN) und Werte und Normen (WN). Außerdemist an der Farbe zu erkennen, ob die KMK-Kompetenz, auf die die Nummer verweist,Analyse von Curricula auf Abdeckung der Kompetenzen zur Bildung in der dig. Welt 7518 Ira Diethelm, Sebastian Glücksvollständig (grün) oder teilweise (gelb) von dem entsprechenden Unterrichtsfach abgedecktwird. Aus Platzgründen wurde auf die ausführliche Nennung der Kompetenzen aus derKMK-Strategie verzichtet und nur die Kompetenznummern Bezug genommen. Abb. 3: Abdeckung der KMK-Bereiche 1 und 2 Abb. 4: Abdeckung der KMK-Bereiche 3 und 4Der Kompetenzbereich 1Suchen, Verarbeiten und Aufbewahrenist jetzt schon vergleichswei-se gut in die vorhandenen Curricula integriert. Anders sieht es bei dem Kompetenzbereich2Kommunizieren und Kooperieren,4Schützen und sicher Agierensowie 5Problemlösenund Handelnaus. Insgesamt können 21 der 61 Kompetenzen bereits vollständig von denPﬂichtfächern abgedeckt werden. Wird die teilweise Abdeckung hinzugerechnet, ist eineAbdeckung von 40 Kompetenzen möglich. Es bleiben allerdings weitere 21 Kompetenzenübrig, die auf diesem Weg nicht ohne weiteres in die Pﬂichtfächer integriert werden können.Es handelt sich hierbei um die Kompetenzen 1.3.1, 2.1.1, 2.1.2, 2.2.1, 2.3.2, 2.5.1, 3.3.3,4.1.1, 4.1.2, 4.2.2, 4.2.3, 5.1.1, 5.1.2, 5.2.2, 5.2.3, 5.2.4, 5.3.1, 5.4.2, 5.5.2, 5.5.3 und6.2.3. Gründe hierfür sind in erster Linie, dass diese Kompetenzen keine reinen Anwen-derkompetenzen sind, sondern alle ein tieferes Grundverständnis der zugrundeliegendenFunktionsweisen und Strukturen erfordern.Bei der Betrachtung, welche Fächer diese übrigen Kompetenzen einschließen, fällt insbe-sondere das Fach Informatik auf. In diesem lassen sich alle aufgezählten Kompetenzen in76 Ira Diethelm, Sebastian GlücksAnalyse von Curricula auf Abdeckung der KMK-Kompetenzen 19 Abb. 5: Abdeckung der KMK-Bereiche 5 und 6voller oder teilweiser Abdeckung wiederﬁnden oder leicht hinzufügen. Abbildung6zeigtdazu eine graﬁsche Übersicht und damit die Relevanz des Pﬂichtfaches Informatik. Abb. 6: Abdeckung der KMK-Kompetenzen durch Pﬂichtfächer mit und ohne Informatik5 SchlussfolgerungenDie in den vorangegangenen zwei Kapiteln ausführlich beschriebenen Ergebnisse derUntersuchung zeichnen ein erstes, aber deutliches Bild davon, wie die Umsetzung derKMK-Strategie zur Bildung in der digitalen Welt aussehen kann. Die hier dargestellteAnalyse weist auf die Einstufung von Informatik als verpﬂichtendes Unterrichtsfachhin. Dadurch ließe sich sicherstellen, dass alle Schülerinnen und Schüler genau dieinformatischen Grundkenntnisse besitzen, die sie für den Erwerb der weiterführendenKompetenzen benötigen. Diese Maßnahme ist dieser Untersuchung zufolge notwendig,um die verbleibende Lücke bei der Kompetenzvermittlung zu schließen. Gleichwohl lässtAnalyse von Curricula auf Abdeckung der Kompetenzen zur Bildung in der dig. Welt 7720 Ira Diethelm, Sebastian Glückssich auch erkennen, dass Informatik die Last für die Umsetzung der KMK-Strategie nichtallein tragen kann. Es braucht somit beides: Ein eigenes Schulfach für die systematischeBereitstellung der Grundkompetenzen UND eine Aufnahme einiger Kompetenzen, diezu dem jeweiligen Fach passen. Der Informatikunterricht ist demnach der richtige Ort,um das von der KMK als informatische Grundkenntnisse beschriebene Grundverständniszu vermitteln. Die weiteren Unterrichtsfächer können dann darauf zurückgreifen und dieNutzungskompetenzen vertiefen.Die Umsetzung der vorgeschlagenen Veränderungsvorschläge kann allerdings nur gelingen,wenn auch die Lehrkräfte entsprechend diesem Anforderungsproﬁl ausgebildet wordensind. Dazu sind zwei Bedingungen zu erfüllen. Zum einen müssen die Lehrkräfte selbstüber die Kompetenzen verfügen, die sie den Schülerinnen und Schüler vermitteln sollen.Zum zweiten müssen sie in der Vermittlung dieser Kompetenzen ausgebildet sein. Darausergeben sich neue Anforderungen sowohl an die Ausbildung als auch an die Fortbildung vonLehrkräften. Anzusetzen ist dazu bereits an den Hochschulen. Diese müssen ihrerseits durchentsprechende curriculare Vorgaben sicherstellen, dass die Absolventinnen und Absolventender Lehramtsstudiengänge die entsprechenden Kompetenzen zur Bildung in der digitalenWelt, die sie in ihren Unterrichtsfächern vermitteln sollen, selbst erworben haben undwissen, wie sie diese weitergeben. Dies betri t somit sowohl die Fachinhalte als auch dieFachdidaktiken.Literaturverzeichnis[Bo14]Bos, Wilfried; Eickelmann, Birgit; Gerick, Julia; Goldhammer, Frank; Schaumburg, Heike;Schwippert, Knut; Senkbeil, Martin; Schulz-Zander, Renate; Wendt, Heike: ICILS 2013Computerund informationsbezogene Kompetenzen von Schülerinnen und Schülern in der 8.Jahrgangsstufe im internationalen Vergleich. Waxmann, Münster, Westf, 2014.[FPB13]Ferrari, Anusca; Punie, Yves; Bre ko, Barbara N.: , DIGCOMP: A framework for developingand understanding digital competence in Europe, 2013.[Ge08]Gesellschaft für Informatik e.V.: , Grundsätze und Standards für die Informatik in der Schule,2008.[Gl18]Glücks, Sebastian: , Analyse der niedersächsischen Kerncurricula der gymnasialen Sekundar-stufe I auf Kompetenzen zur Bildung in der digitalen Welt.https://oops.uni-oldenburg.de/id/eprint/3585, 2018.[Ku16]Kultusministerkonferenz: , Bildung in der digitalen Welt – Strategie der Kultusministerkonfe-renz, 2016.[LK15]LKM Länderkonferenz MedienBildung: , Kompetenzorientiertes Konzept für die schulischeMedienbildung – LKM-Positionspapier Stand 29.01.2015, 2015.[Ni14]Niedersächsisches Kultusministerium: , Kerncurriculum für die Schulformen des Sekundar-bereichs I Schuljahrgänge 5 10 Informatik, 2014.[Ni17]Niedersächsisches Kultusministerium: , Kerncurriculum für die Schulformen des Sekundar-bereichs I Schuljahrgänge 5 10 Musik, 2017.78 Ira Diethelm, Sebastian GlückscbaHerausgeber et al. (Hrsg.): INFOS 2019,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Beobachtungen zum informatischen Problemlösen imEscape-Adventure-Spiel „Room-X“Alexander Hacke1, Mareen Przybylla2, Andreas Schwill3Abstract:Informatisches Problemlösen ist einer der zentralen Aspekte der Informatik und einForschungsgebiet innerhalb der Informatikdidaktik, das Prozesse, Aufgaben und Einstellungen be-züglich des Problemlösens hinsichtlich informatischer Vorgehensweisen und Inhalte untersucht. Iminformatischen Escape-Adventure-Spiel „Room-X“ bieten sich aus Forschungssicht Möglichkeiten,Lernende beim Problemlösen zu beobachten und deren Strategien zu analysieren. In diesem Artikelzeigen wir auf, wie der Room-X zu einer geeigneten Umgebung wird, die Lernenden ein Schau-fenster für die Informatik bietet und ihnen ermöglicht, informatisches Problemlösen als eine derKernkomponenten der Informatik in einem attraktiven und motivierenden Umfeld auszuüben. MittelsVideoanalyse werden Verhaltensweisen analysiert und Schlussfolgerungen für die gezielte Förderungvon Problemlösekompetenzen in der Informatik sowie zur Weiterentwicklung des Room-X gezogen.Keywords:Informatisches Escape-Game; Informatisches Problemlösen; außerschulischer Lernort1 EinleitungProblemlösen ist einer der zentralen Aspekte der Informatik und bildet mit jeder ihrerTeildisziplinen Verknüpfungspunkte. Um eine gute Grundlage für ein Informatikstudiumbeziehungsweise eine informatische Ausbildung zu erhalten, ist es eine Grundvorausset-zung für Schülerinnen und Schüler, sich mit dem Problemlösen in der Informatik explizitauseinanderzusetzen. Jedoch ist die Thematik vergleichsweise wenig erforscht. Folglich istauch wenig darüber bekannt, wie informatisches Problemlösen in der Schule zielführend un-terrichtet werden kann. Trotzdem ist Problemlösen fester Bestandteil der BildungsstandardsInformatik für die Sekundarstufe II [Ar16] und Bestandteil vieler deutscher Rahmenlehrplänefür das Fach Informatik (u. a. [Mi14; Mi18]). Da informatisches Problemlösen in der Schuleoft in theoretischem Umfeld behandelt wird und mit wenig schülernahen Inhalten besetzt istoder aber nur implizit eine Rolle spielt, ist es für viele Schülerinnen und Schüler nur vongeringem Interesse. Mit einem informatisch geprägten Escape-Room können Schülerinnenund Schüler für das Thema motiviert werden und gleichzeitig an einem außerschulischenLernort die Anwendung von Problemlösestrategien vertiefen. Das informatisch geprägteEscape-Adventure-Spiel „Room-X“ fungiert getreu dem Motto „Informatik für alle“ alsSchaufenster für die Informatik und zeigt, dass informatische Bildung auch im spielerischen1Universität Potsdam, Didaktik der Informatik, August-Bebel-Str. 89, 14482 Potsdam,ahacke@uni-potsdam.de2Universität Potsdam, Didaktik der Informatik, August-Bebel-Str. 89, 14482 Potsdam,przybyll@uni-potsdam.de3Universität Potsdam, Didaktik der Informatik, August-Bebel-Str. 89, 14482 Potsdam,schwill@uni-potsdam.de cba doi:10.18420/infos2019-08Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 792 Alexander Hacke, Mareen Przybylla, Andreas SchwillUmfeld hilfreich sein kann. In diesem Beitrag wird zunächst theoretisch fundiert, wasunter informatischem Problemlösen zu verstehen ist. Anschließend wird am Beispiel des„Room-X“ gezeigt, inwieweit Problemlösen sich an außerschulischen Lernorten integrierenlässt. Darauf basierend werden Empfehlungen für Weiterentwicklungen abgeleitet.2 Informatisches ProblemlösenProblemlösen wird innerhalb der Kognitionspsychologie als der Versuch bezeichnet,voneinem Anfangszustand vorbei an einer Barriere zu einem Zielzustand zu gelangen[MR17].Problemlösen verlangt eine Reihe kognitiver Fähigkeiten, welche nach Bloom aufeinanderaufbauend in sechs Kategorien eingeteilt werden können, wobei die oberen drei („Analysing“,„Evaluating“, „Creating“) als „higher-order thinking“ betrachtet werden und die unteren drei(„Remembering“, „Understanding“, „Applying“) voraussetzen [AK01]. Die Bearbeitung voneinfachen Aufgaben lässt sich normalerweise durch die unteren drei Kategorien abbilden. Esist hierfür erforderlich, die Aufgabenstellung zu verstehen (Understanding), dazu passendeInformationen und Prozeduren aus dem Langzeitgedächtnis abzurufen (Remembering) unddiese im gegebenen Kontext anzuwenden (Applying). Das Problemlösen benötigt zusätzlichauch die Fähigkeiten des „higher-order thinking“. Das Problem muss analysiert werden,wobei wichtige von unwichtigen Details unterschieden und nicht vordergründig sichtbareDetails erkannt werden müssen (Analyzing). Aus der Analyse muss per Heuristik einezielführende Strategie generiert werden, die gegebenenfalls bekannte elementare Prozedurenmit neuen Zusammenhängen verknüpft (Creating). Dabei ist diese Strategie ständig aufE ektivität zu überwachen und gegebenenfalls zu überdenken (Evaluate). Zum erfolgreichenProblemlösen ist es zusätzlich erforderlich, Zutrauen in die eigenen Fähigkeiten zu haben.Auch die Einstellungen zum konkreten Problem und Problemlösen an sich sind maßgeblichmit dafür verantwortlich, wie gut ein Problemlöser die ihm zur Verfügung stehendenMittel nutzen will und kann (vgl. [Sc13]). Der Begri  „Problem“ muss in Hinblick aufdas Problemlösen eingegrenzt werden. Eine aus der Psychologie stammende Deﬁnitionbesagt, dass einProblem dann vorliegt, wenn in einer Situation, in der ein bestimmtes Zielerreicht werden soll, ein Hindernis oder eine Barriere dies verhindert[MR17]. Problemelassen sich auf vielfältige Weise kategorisieren. Man kann sie beispielsweise anhanddessen unterscheiden, wie klar der zu erreichende Zielzustand deﬁniert ist, oder danach,ob es sich um sogenannteeinfacheoderkomplexeProbleme handelt. BeikomplexenProblemen ändern sich im Verlauf des Lösungsversuchs die Rahmenbedingungen, waseine fortwährende Neubewertung des Lösungsansatzes erfordert. Zudem spielen sehr vieleVariablen eine Rolle, die sich teilweise gegenseitig bedingen. Zu komplexen Problemenzählen beispielsweise die Steuerung eines Unternehmens oder die Bewältigung einerglobalen Krise.EinfacheProbleme hingegen besitzen stabile Rahmenbedingungen undim Vergleich weniger relevante Variablen, was jedoch nicht bedeutet, dass sie leichtzu lösen wären. Informatische Problemstellungen fallen zumeist in die Kategorie dereinfachenProbleme. Das bedeutet, die Rahmenbedingungen verändern sich während desLösungsversuchs nicht oder nur wenig und die Anzahl der zu beachtenden Variablen bewegt80 Alexander Hacke, Mareen Przybylla, Andreas SchwillBeobachtungen zum informatischen Problemlösen im Escape-Adventure-Spiel „Room-X“ 3sich im überschaubaren Bereich. Natürlich können sie, eingebettet in eine realweltlicheSituation, auch Teil eineskomplexenProblems sein. Im hier gedachten Zusammenhang solljedoch der Fokus aufeinfacheProbleme gesetzt werden, da sonst nicht mehr eindeutig ist,ob das Problem informatischer oder sonstiger Natur ist.Deﬁnition:Ein informatisches Problem liegt vor, wenn in einer Situation mitstabilen Rahmenbedingungen, in der ein bestimmtes Ziel erreicht werden soll,ein Hindernis oder eine Barriere dies verhindert, wobei zur Zielerreichung eininformatisches Verfahren benötigt wird.Nun stellt sich die Frage, ob das vorliegende Problem informatischer Natur ist oder nurder gewählte Problemlöseablauf – oder ob möglicherweise beide Teile der Informatikzuzurechnen sind. Ähnlich der Vorgehensweise durch Humbert und Puhlmann bei derUnterteilung informatischer Phänomene in drei Kategorien [HP04] lassen sich auch Problemenach deren Bezug zur Informatik klassiﬁzieren:1.Das Problem ist nicht informatischer Natur.Probleme rein philosophischen Charakters,bei denen ein informatischer Lösungsansatz nicht sinnvoll bzw. deplatziert ist.2.Das Problem ist indirekt informatischer Natur.Probleme, die realweltlichen Cha-rakter haben, jedoch inhärent informatisch sind und somit durch eine informatischeProblemlösestrategie gelöst werden können.3.Das Problem ist direkt informatischer Natur.Probleme, die eine Problemlösestrategiemit informatischen Prinzipien erfordern.Unterteilt man Probleme auf diese Weise, so wird o ensichtlich, dass sich ein Problem derKategorie drei4durchaus in Kategorie zwei wiederﬁnden kann, nämlich als informatischerTeil eines realweltlichen Problems. Beispielsweise ist ein Problem, bei dem es um dieVerteilung von Aufgaben an Mitarbeiter oder die Umlaufplanung im Nahverkehr geht, oft einganzzahliges Optimierungsproblem, welches mit dem Branch-and-Bound-Verfahren aus derInformatik gelöst werden kann. Der Problemraum eines solchen Problems besteht dann nichtnur aus dem informatischen Problem, sondern auch darin, dass der informatische Charakterzunächst erkannt werden muss. Probleme der Kategorie zwei lassen sich aber eventuell auchauf nicht-informatischem Wege lösen. Beispielsweise lässt sich ein Optimierungsproblemauch per zufälliger Verteilung lösen, da die Frage nach der besten Verteilung bei einemrealweltlichen Problem nicht immer im Vordergrund steht. O ensichtlich wird auch, dassdie Ausgangssituation des Problems über die Wahrscheinlichkeit des Informatikgehalts desProblemlösevorgangs Auskunft gibt.4Hierzu zählen Probleme wie das Finden des dichtesten Punktepaars, das mit dem Divide-and-Conquer-Verfahrengelöst werden kann oder die Programmierung eines Oberon-Programms zur Berechnung von Fakultäten, wobeihier Programmierkonzepte zur Problemlösung erforderlich sind.Beobachtungen zum inform. Problemlösen im Escape-Adventure-Spiel „Room-X“ 814 Alexander Hacke, Mareen Przybylla, Andreas Schwill3 Problemlösen in Escape-Adventure-SpielenEscape-Adventure-Spiele haben ihren Ursprung in den sogenannten Point-and-Click-Adventures, welche sich als Konsolenoder Computerspiele bereits seit den 1970er Jahrengroßer Beliebtheit erfreuten und in den frühen 2000er Jahren als Browser-Games wie-derbelebt wurden. Escape-Rooms (auch als Live-Escape-Games, Exit-Rooms und unterweiteren, ähnlichen Begri en bekannt) sind eine spezielle Art der Escape-Adventure-Spiele,in denen die Spieler als Team in einen real existierenden Raum eingeschlossen werden undmit Hilfe der im Raum beﬁndlichen Hinweise und Rätsel in begrenzter Zeit versuchen,aus dem Raum zu entkommen. Meist gilt es zusätzlich noch eine Mission zu erfüllen,wie beispielsweise das Entschärfen einer Bombe, das Lösen eines Kriminalfalls oder dasStehlen eines Gegenstandes. Die Themen für solche Spiele sind dabei äußerst vielfältigund siedeln sich gern in spannenden Settings an, z. B. Chemielaboren, Gefängnistraktenoder Agentenbüros. Escape-Adventure-Spiele bieten auch für Bildungskontexte Anreize. Sobeschreibt beispielsweise Nicholson [Ni18] als Vorzüge der Verwendung solcher Spiele imUnterricht u. a. die Abwechslung zur Arbeit am Computer, die erforderliche Kooperation imTeam und motivationale Aspekte als Grundlage für aktives Lernen und sozialen Konstrukti-vismus. Escape-Adventure-Spiele bieten eine gute Gelegenheit, Problemlösefähigkeitenzu trainieren. Das Konzept solcher Spiele beinhaltet die wesentlichen Merkmale eineso. g.einfachenProblems und macht die Spielenden somit zu Problemlösern. Sie müsseninnerhalb einer bestimmten Zeit von einem Ausgangszustand (der Raum und die mitgegebe-nen Hinweise) zu einem Zielzustand (meist: den Raum verlassen) gelangen. Dies ist nichtohne Weiteres möglich, da ihnen ein oder mehrere Hindernisse (Rätsel; der Raum lässtsich nicht ohne Weiteres ö nen, etc.) in den Weg gestellt werden. Sie müssen sich daherheuristischer Verfahren (z.B. Bildung von Teilzielen, Suchraumeingrenzung, Visualisierung)bedienen, kreativ eine Lösungsstrategie planen und diese bei der Durchführung stetig aufSinnhaftigkeit überprüfen. Zudem sind Escape-Adventure-Spiele durch den spielerischenAbenteuer-Charakter gut geeignet, um die Motivation der Teilnehmenden hoch zu halten undeventuell vorhandene negative Einstellungen zum Problemlösen zu überdecken. Eventuellwird das enthaltene Problemlösen sogar gar nicht als solches wahrgenommen.4Room-X: Ein Escape-Adventure-Spiel für den InformatikunterrichtUm Schülerinnen und Schülern in begrenzter Zeit und auf motivierende Weise einen Einblickin verschiedene Themengebiete der Informatik zu geben, sie für das Fach zu begeistern undfür das Institut für Informatik zu werben, wurde an der Universität Potsdam das Escape-Adventure-Spiel „Room-X“ eingerichtet. In diesem Kontext besuchen uns regelmäßigSchülergruppen, die sich bereitwillig beim Problemlösen beobachten lassen. Anders als beianderen Escape-Adventure-Spielen, deren Themen meist die Allgemeinheit ansprechen, istdas Szenario des Room-X auf die Zielgruppe ab der zehnten Klasse zugeschnitten. IhreMission beinhaltet, die Aufgaben der nächsten Informatikarbeit im Klassenraum von HerrnSchröder auszuspionieren, welche sich auf einem passwortgeschützten Tablet beﬁndet. Die82 Alexander Hacke, Mareen Przybylla, Andreas SchwillBeobachtungen zum informatischen Problemlösen im Escape-Adventure-Spiel „Room-X“ 5Klausur muss abfotograﬁert werden, andernfalls ist die Mission nicht vollständig erfüllt undgilt als verloren. Das Passwort lässt sich mithilfe der Gegenstände im Raum in Erfahrungbringen. Zusätzlich hat der Lehrer die Alarmanlage der Tür des Klassenraums aktiviert. Umunbemerkt wieder hinaus zu gelangen, müssen die Teams den Zahlencode des Schlossesherausﬁnden, welches den Zugang zu einer Fernbedienung der Alarmanlage versperrt. DieTeams im Room-X werden während der gesamten Spielzeit durch eine Kamera im Raumbeobachtet, damit ihnen gegebenenfalls durch Tipps geholfen werden kann. Das Spiel dauert60 Minuten, nach Ablauf der Zeit löst die Alarmanlage aus. Auch das vorzeitige Ö nen derTür löst die Alarmanlage aus und führt zu Disqualiﬁkation und zum Abbruch der Mission.Die Nutzung der Tafel und der Blöcke und Stifte im Raum ist ausdrücklich erlaubt.Zunächst erhalten die Teams in einem separaten Raum sämtliche Informationen über dasSzenario, die Abläufe und die Spielregeln des Room-X. Es wird darauf hingewiesen, dassdie Spielleitung die Personen im Raum im Laufe des Spiels kontaktieren kann. Die Artder Kontaktaufnahme bleibt zunächst o en. Anschließend wird das Team in den Room-Xgeführt, der Timer wird gestartet, die Tür geschlossen und die Alarmanlage aktiviert. Umdas Spiel zu gewinnen, muss das Team nun verschiedene Rätsel lösen. Um eine Verbreitungdes Lösungsweges für den Raum zu verhindern, wird an dieser Stelle darauf verzichtet, dieRätsel im Detail zu beschreiben. Man kann sie sich aber in etwa wie folgt vorstellen:•Das Tablet ist mit einem Passwort gesichert, daran klebt ein Zettel mit der Aufschrift„PW: Endlich Ferien! (HexHex)“!Was soll das heißen?•An der Pinnwand beﬁndet sich ein Zettel mit einer kryptischen Botschaft: „FcuHtüjuvüem nkgiv okt jgwvg uejygt ko Ocigp.“!Was hat das zu bedeuten?•Auf dem Lehrertisch liegt eine SD-Karte mit der AufschriftGEHEIM, legt mansie in eine herumliegende Digitalkamera ein, sieht man Fotos von verschiedenenGegenständen (z. B. ein riesiges Gerät mit der AufschriftZ3und eine merkwürdigbunt eingefärbte Landkarte)!Beﬁnden sich in den Bildern entscheidende Hinweise?Durch das Erkennen und Lösen typisch informatischer Problemstellungen und die geschickteKombination gefundener Hinweise ist es schließlich möglich, das Tablet zu entsperren,den Schlüsseltresor zu ö nen und die Alarmanlage zu deaktivieren. Im Anschluss habendie Teammitglieder die Möglichkeit, ihre Erlebnisse untereinander zu diskutieren undHintergründe und Lösungen zu einzelnen Rätseln des Raumes zu erfahren.5 Room-X und informatisches ProblemlösenMit dem Ziel, das Vorgehen der Schülerinnen und Schüler beim Lösen informatischerProbleme im Room-X zu beobachten, deren Strategien zu identiﬁzieren und daraus Schluss-folgerungen für die gezielte Förderung von Problemlösekompetenzen im Room-X (undBeobachtungen zum inform. Problemlösen im Escape-Adventure-Spiel „Room-X“ 836 Alexander Hacke, Mareen Przybylla, Andreas Schwillallgemein) abzuleiten, soll zunächst untersucht werden, in welchem Maße das Spiel informa-tisches Problemlösen (er)fordert. Hierzu wird der Raum mit den dazugehörigen Aufgabenund Rätseln im Folgenden unter Bezugnahme auf die o. g. Deﬁnitionen und „Thinking skills“analysiert. In einer anschließenden Videoanalyse werden die Strategien der Teilnehmeridentiﬁziert und bzgl. der zum Erfolg führenden Eigenschaften analysiert.5.1 Problem und Problemlösen im Room-XDie Startsituation, mit der die Teilnehmenden konfrontiert werden, entspricht einemeinfachenProblem der o. g. Problemdeﬁnition, denn es lassen sich die folgenden Merkmalewiederﬁnden: Das Team beﬁndet sich am Anfang der Spielphase im Ausgangszustand, deraus dem Raum mit seinen versteckten Hinweisen und den vom Übungsleiter genanntenHinweisen besteht. Die Gruppe kann nicht ohne Weiteres zum Zielzustand übergehen, alsodie Klassenarbeit abfotograﬁeren und die Tür ö nen, da der Weg dorthin durch verschiedeneHindernisse (Türcode, Tablet-Passwort) versperrt ist. Die Rahmenbedingungen ändern sichwährend der Suche im Problemraum nicht, wenn man vom sich verstärkenden Zeitdruckabsieht. Auch die Anzahl der Variablen, mit denen im Verlauf hantiert werden muss, istüberschaubar groß und die Wechselwirkungen zwischen ihnen sind gering. Dementsprechendlässt sich eine Kategorisierung alskomplexesProblem ausschließen. Untersucht man dendurch Rätsel vorgegebenen Weg durch den Room-X, so zeigt sich, dass viele Elemente ausdem Bereich der „lower-order Thinking Skills“ enthalten sind. Das heißt, es gibt eine Reihevon Aufgaben, die im Raum zu lösen sind. Es fällt auf, dass es selbst mit sorgfältiger Planungteils nicht möglich ist, den Zusammenhang zwischen den Aufgaben vorab herzustellen,beziehungsweise zu erkennen, wozu die Lösung der Aufgabe dienlich sein könnte. Dashat weniger mit der Komplexität der zu ﬁndenden Strategie zu tun als damit, dass dervorgesehene Lösungsweg an einigen Stellen zu stark konstruiert ist und Zusammenhängekeinem erkennbaren Muster folgen und somit kaum nachvollziehbar sind. Der Weg hin zumZielzustand erfordert oft einfach Brute Force, Teamarbeit und Glück.5.2 Informatik im Room-XDas gestellte Problem an sich ist zunächst kein informatisches. Es wird nach einer Klausurgesucht und nach einem Weg, um ein Schloss zu knacken. Hinter dem Problem verbirgtsich keine direkte informatische Problemlösestrategie, somit fällt es in die Kategorie dernicht-informatischen Probleme. Der Weg durch den Problemraum enthält jedoch eine Reihevon Aufgaben informatischer Natur, beispielsweise in den Themengebieten Verschlüsselung,Logik und Automatentheorie. Allerdings müssen einige der Aufgaben nicht wegen ihresinformatischen Hintergrunds gelöst werden, sondern weil sie beim Lösen einen nicht-informatischen Hinweis preisgeben. Zudem sind die Aufgaben derart konstruiert, dass sievon jedermann gelöst werden können, also keine informatischen Kompetenzen voraussetzen.Auch zusammengenommen ergeben sie keine speziell informatische Problemlösestrategie84 Alexander Hacke, Mareen Przybylla, Andreas SchwillBeobachtungen zum informatischen Problemlösen im Escape-Adventure-Spiel „Room-X“ 7nach o. g. Deﬁnition, sondern stehen für sich. Die Problemlösestrategie besteht dadurch vorallem darin, nach Hinweisen zu suchen, die Aufgaben richtig zu lösen und die gefundenenHinweise und Lösungen derart zusammenzubringen, dass sich daraus das Endergebnisergibt. Zusammenfassend lässt sich feststellen, dass der Room-X zwar informatische Anteileauf Aufgabenlevel enthält, jedoch gesamt gesehen kein informatisches Problemlösen. Ande-rerseits sind die geforderten Teilstrategien beim informatischen Problemlösen unabdingbar.Das korrekte Lösen von Aufgaben und die dazugehörige Evaluation der Ergebnisse sindGrundbausteine auf dem Weg zum erfolgreichen Problemlösen. Lässt man die systematischeSuche im Problemraum aus, so werden leicht entscheidende Hinweise übersehen. Ohnedie Gewissheit, dass es sich um die korrekte Lösung handelt, kann nicht mit derselbenweitergearbeitet werden, ohne Folgefehler zu riskieren. Letztlich ist auch die Kombinationvon Teilergebnissen ein Grundbaustein beim informatischen Problemlösen. Dieser Schrittsetzt eine fortlaufende Dokumentation der Ergebnisse sowie eine zielführende Darstellungvoraus, die Zusammenhänge erkennbar machen kann. Somit lassen die im Room-X benötig-ten Strategien beim Problemlösen Rückschlüsse darauf zu, wie gut die Schülerinnen undSchüler für das informatische Problemlösen gewappnet sind.5.3 Angewandte Problemlösestrategien im Room-XIn einer qualitativen Videoanalyse soll nun zunächst geprüft werden, ob die oben ge-nannten Teilstrategien beobachtet werden können und ob sich ein Einﬂuss auf den Erfolgbeim Problemlösen ableiten lässt. Für die Videoanalyse ergeben sich daraus folgendeFragestellungen:1.Welche typischen Verhaltensweisen können beim Problemlösen im Room-X beob-achtet werden?2.Welchen Einﬂuss haben die beobachteten Verhaltensweisen auf den Erfolg beimProblemlösen im Room-X?Bezüglich der Fragestellungen lassen sich basierend auf den inAbschnitt 2dargestelltenÜberlegungen und Deﬁnitionen sowie den Eigenschaften des Room-X folgende Annahmenableiten: Erwartungsgemäß werden die Teams die Gegenstände im Raum nach Hinweisenaller Art durchsuchen, die Teammitglieder ihren Vorlieben bzw. Vorkenntnissen entsprechendauf die Aufgaben verteilen, versuchen die einzelnen Aufgaben zu lösen, die Tafel bzw. Blöckeals Mittel zur Visualisierung bzw. Repräsentation der Erkenntnisse nutzen, miteinanderkommunizieren und Erkenntnisse im Team evaluieren. Dabei wird davon ausgegangen, dassdie folgenden Verhaltensweisen zum Erfolg führen: systematisches Suchen nach Hinweisen,korrekte Lösung der Einzelaufgaben, Visualisierung und Repräsentation der Hinweiseund Ergebnisse, Einbeziehung aller Teammitglieder und Evaluation und Kombination derHinweise und Ergebnisse miteinander.Beobachtungen zum inform. Problemlösen im Escape-Adventure-Spiel „Room-X“ 858 Alexander Hacke, Mareen Przybylla, Andreas Schwill5.4 DurchführungFür die Videoanalyse liegt Videomaterial von 24 Gruppen à 5-6 Personen vor, was ca.130 Teilnehmenden entspricht. Das Material ist hochauﬂösendes Video mit Ton von einerÜberwachungskamera an der Decke des Raumes. Diese Überwachung dient dem Spielleiternormalerweise zur Steuerung des Spiels. Das Videomaterial wurde hinsichtlich des Erfolgbringenden Verhaltens der Teilnehmenden beim Problemlösen untersucht. Dabei wurdenfolgende Verhaltensweisen vorab isoliert und operationalisiert (deduktives Vorgehen):1.korrekte Lösung der Einzelaufgaben: Ein oder mehrere Teammitglieder lösen eineder Aufgaben und erhalten eine korrekte Lösung.2.Einbeziehung aller Teammitglieder: Alle Teilnehmer sind fokussiert auf das Problem,d. h. suchen nach Hinweisen, geben Ratschläge, helfen anderen, lösen Aufgaben.3.systematisches Suchen nach Hinweisen: Der Raum wird von einem Ende zum anderengründlich auf Hinweise untersucht, idealerweise unabhängig durch mehrere Personen.4.Visualisierung und Repräsentation der Hinweise und Ergebnisse: Die Tafel bzw. einSchreibblock wird genutzt, um Zwischenergebnisse, Hinweise, Erkenntnisse, Fragenzu protokollieren, sobald diese zur Verfügung stehen.5.Evaluation und Kombination der Hinweise und Ergebnisse miteinander: Ergebnissewerden gegenseitig kontrolliert, an Tafel oder mündlich in Bezug gesetzt.5.4.1 Beobachtete VerhaltensweisenNach qualitativer Auswertung von ca. 70% der Videos lassen sich Tendenzen bezüglichder ersten Fragestellung erkennen. Typischerweise beginnt die Gruppe mit Brute-Force-Heuristik: alle Teammitglieder schwärmen aus, verteilen sich im Raum, blättern Bücherdurch, etc. Dies entspricht dem zu erwartenden Durchsuchen der Gegenstände im Raumnach Hinweisen. Im Zuge dieses Prozesses werden verschiedene Aufgaben entdeckt undim Normalfall sofort versucht, sie zu lösen. Dabei werden oft Präferenzen berücksichtigt.Aufgaben, die einer Person zu schwer erscheinen, werden liegengelassen oder jemandanderes zu Rate gezogen, beispielsweise passiert das, wenn eine Umrechnung in ein anderesZahlensystem erfolgen muss. Diese Verhaltensweisen wurden so auch erwartet. Ebensoerfolgt die Nutzung der Tafel, um Einzelergebnisse zu dokumentieren. Jedoch ist dieDokumentation der gefundenen Hinweise oft gering ausgeprägt und eine Visualisierungselten. Hin und wieder gehen Hinweise im Kommunikationsprozess der Teammitgliederzunächst wieder verloren und müssen dann erneut entdeckt werden. Die Annahmen bezüglichder angewandten Problemlösestrategien bestätigen sich also weitgehend. Alle erwartetenVerhaltensweisen lassen sich beobachten. Darüber hinaus werden auch Verhaltensweisensichtbar, die auf Demotivation einzelner Teammitglieder schließen lassen, d. h. mituntergibt es Teilnehmer, die oft aus dem Fenster blicken oder teilnahmslos herumstehen.86 Alexander Hacke, Mareen Przybylla, Andreas SchwillBeobachtungen zum informatischen Problemlösen im Escape-Adventure-Spiel „Room-X“ 95.4.2 Erfolgversprechendes VerhaltenAuch die Annahme hinsichtlich erfolgversprechender Verhaltensweisen lässt sich durch dasVideomaterial weitgehend bestätigen, wobei folgende Aspekte deutlich wurden: Teams, diedie Tafel intensiver für Notizen nutzen, sind meist erfolgreicher. Es zeigte sich beispielsweise,dass oft Striche für die Anzahl der Stellen des Passworts an die Tafel gebracht werden,was einer allgemein verständlichen Repräsentation des Teilziels entspricht. Andererseitsentstanden oft auch Kritzeleien, deren Sinn anderen Teilnehmern verschlossen bleibt.Es zeigte sich ferner, dass auch Teams ohne erkennbar strukturierten Tafelanschriebfrühzeitig fertig sein können, sofern sie trotzdem viel aufschrieben. Wenig bis gar nichtzu ﬁnden sind informatische Darstellungen, was jedoch auch so zu erwarten ist. DieZuhilfenahme von Notizen spielt auch bei der Lösung der Einzelaufgaben eine Rolle.Erfolgreiche Teams nutzen hier oft Zettel und Stift. Die Evaluation der Ergebnisse ergibtsich bei den Aufgaben oft einfach dadurch, dass die Lösung ein „sinnvolles“ Wort istund die Teilnehmer daraus eine Bestätigung der Richtigkeit ableiten. Außerdem zeigtsich, dass es stark unterschiedlich funktionierende Teams gibt. Es gibt Teams, derenMitglieder viel untereinander kommunizieren, aber auch solche, in denen Mitgliederrelativ teilnahmslos erscheinen, teils auch destruktiv arbeiten. Neben diesen nicht imLösungsprozess involvierten Teilnehmern kristallisierten sich vier Teilnehmertypen heraus:Solche, die Aufgaben verteilen wollen, solche, die Aufgaben annehmen wollen, solche,die autark arbeiten wollen, und solche, die mit anderen zusammenarbeiten wollen. EineVorhersage auf Erfolg und Misserfolg bei der Absolvierung des Room-X ließ sich darausjedoch zunächst nicht ableiten.6 Fazit und AusblickDer Room-X ist ein Escape-Adventure-Spiel mit informatischen Anteilen, der allgemeineProblemlösestrategien erfordert. Vorteilhaft am gegenwärtigen Konzept ist, dass keinVorwissen bezüglich einer speziellen Vorgehensweise erwartet wird. Es kann also einebreite Zielgruppe angesprochen werden, da nur Fähigkeiten erwartet werden, die die meistenLernenden ab Klasse 10 mitbringen. Daraus ergibt sich ferner, dass das Problem für höhereJahrgänge oder Studierende nicht einfacher wird und das Konzept somit auch für sie ohneVeränderungen durchführbar bleibt. Nachteilig ist jedoch, dass gerade erfahrenere Teamskeine eventuell bekannten informatischen Strategien anwenden können, um das Problem(schneller) zu lösen. Dies kann mitunter frustrieren und entspricht weniger den Erwartungenan einen informatischen Escape-Room. In Bezug auf die einzelnen Aufgaben ist vorteilhaft,dass auch Teams mit keinen oder nur geringen Vorkenntnissen ein motivierender Einblickin informatische Ideen gegeben werden kann, um ihnen so die Informatik schmackhaft zumachen, auch wenn einige Aufgaben derzeit recht konstruiert wirken und nicht notwendigim Sinne eines informatischen Lösungsschritts sind. Um künftig den Informatikgehalt jenach Besuchergruppe anpassen zu können, sind modulare Weiterentwicklungen geplant,die die Nützlichkeit der informatischen Ideen und den Sinn informatischer VerfahrenBeobachtungen zum inform. Problemlösen im Escape-Adventure-Spiel „Room-X“ 8710 Alexander Hacke, Mareen Przybylla, Andreas Schwillbetonen. Auf diese Weise können einzelne Rätsel ausgetauscht werden, um inhaltlicheSchwerpunkte zu verschieben und den Raum an die Vorkenntnisse der Teilnehmer zuadaptieren. Aus den Ergebnissen der Videoanalyse lassen sich erste Hinweise für dieFörderung von Problemlösekompetenzen ableiten. In Bezug auf die Dokumentation ist diegeringe Tendenz zu strukturierter Darstellung besonders au ällig. Die Ursachen hierfürmüssen daher näher untersucht werden. Idealerweise sollten sich die Problemlösendenper geschickt gewählter Strategie zielgerichtet durch den Problemraum bewegen. Diessetzt jedoch voraus, dass der Lösungsweg so gestaltet ist, dass er durch gute Planung,Evaluation und Anwendung einer Strategie zu Fortschritten führt. Die Videoanalyse zeigtejedoch, dass keinerlei Planungsphase stattﬁndet, sondern stattdessen gleich mit der Suchebegonnen wird, da das derzeitige Konzept eine solche Phase nicht erfordert. Um künftigden Problemlöseaspekt zu verstärken, muss der gegenwärtige Ablauf ersetzt werden. Einemögliche Herangehensweise besteht darin, informatische Konzepte auf ihre Struktur hin zuuntersuchen und diese als (Teil-)Strategie zu integrieren.Literatur[AK01]Anderson, L. W.; Krathwohl, D. R.: A taxonomy for learning, teaching, andassessing: a revision of Blooms taxonomy of educational objectives. Longman,2001.[Ar16]Arbeitskreis Bildungsstandards SII: Bildungsstandards Informatik für die Sekun-darstufe II, Beilage zur LOG IN 183/184, 2016.[HP04]Humbert, L.; Puhlmann, H.: Essential ingredients of literacy in informatics. In(Magenheim, J.; Schubert, S., Hrsg.): Informatics and Student Assessment -Concepts of Empirical Research and Standardisation of Measurement in the Areaof Didactics of Informatics. Bd. 1. LNI Seminars, Gesellschaft für Informatik,Bonn, S. 65–76, 2004.[Mi14]Ministerium für Schule und Weiterbildung des Landes Nordrhein-Westfalen:Kernlehrplan für die Sekundarstufe II Gymnasium/Gesamtschule in Nordrhein-Westfalen, 2014.[Mi18]Ministerium für Bildung, Jugend und Sport des Landes Brandenburg: Rahmen-lehrplan für den Unterricht in der gymnasialen Oberstufe im Land Brandenburg,2018.[MR17]Müsseler, J.; Rieger, M.: Allgemeine Psychologie. Springer-Verlag, Berlin Hei-delberg New York, 2017,    : 978-3-642-53898-8.[Ni18]Nicholson, S.: Creating Engaging Escape Rooms for the Classroom. ChildhoodEducation 94/1, S. 44–49, 2018.[Sc13]Schoenfeld, A. H.: Reﬂections on Problem Solving Theory and Practice. TheMathematics Enthusiast 10/1, S. 9–34, 2013.88 Alexander Hacke, Mareen Przybylla, Andreas SchwillcbaArno Pasternak (Hrsg.): INFOS2019 Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Informatik in der Grundschule – StellschraubeLehrerbildungZur Notwendigkeit nachhaltiger informatischer Bildung für angehendeGrundschullehrkräfteKathrin Haselmeier1Abstract:Die universitäre Lehrerbildung für Grundschullehrkräfte muss Informatik als Gegenstandder allgemeinen Bildung umfassen. Aus entwicklungspsychologischer Sicht begründet der Beitrag,warum Informatik bereits in der Grundschule Bestandteil des Unterrichts sein muss und referenziertdabei aktuelle Studienergebnisse. Im Spannungsfeld Lehren und Lernen wird herausgestellt, dassgut ausgebildete Lehrkräfte zwar zentral für die kompetente Vermittlung informatischer Inhalte undGegenstände in der Grundschule sind, sie jedoch bislang im Rahmen ihrer Ausbildung bzw. derWeiterqualiﬁzierung wenig Möglichkeiten haben, fundierte informatische Kompetenzen aufundauszubauen. Fortbildungsmöglichkeiten für Bestandslehrkräfte werden aufgezeigt, hinsichtlich ihrerMöglichkeiten und Grenzen diskutiert und schließlich der Einﬂuss auf die universitäre Lehrerbildungals maßgebliche Stellschraube für Informatik in der Grundschule identiﬁziert. Aus der dargestelltenNotwendigkeit heraus wurde eine eigene universitäre Veranstaltung für Studierende konzipiertund (bisher zwei Mal) durchgeführt.2Vorläuﬁge Evaluationsaspekte aus der Veranstaltung werdenvorgestellt und diskutiert.Keywords:Grundschule; Informatische Bildung; Lehrerbildung1 SituationInformatik wird gebraucht. Diese Aussage ist die Essenz eines wirtschaftlichen, politischenund gesellschaftlichen Diskurses, der inzwischen seit einigen Jahren sehr präsent geführtwird. Allen Hindernissen und allen Bedenken zum Trotz bleibt unterm Strich die Erkenntnis:Ohne Informatikkenntnis ist eine mündige Teilhabe kaum mehr zu realisieren. Informatikﬁndet sich in allen Lebensbereichen, sie ist omnipräsent und wird nicht mehr verschwinden– egal, wie man zu ihr steht. Ebenso ist unbestritten, dass es viel zu wenig Menschenmit informatischer Bildung gibt, die als Experten Gestaltungsaufgaben übernehmen undinformatische Umsetzungen sinnstiftend modellieren können. Sobald jedoch der Begri »Bildung« im Zusammenhang mit »Informatik« genannt wird, rückt auch die Schule alsBildungsinstitution in den Fokus. In den Dreiklang aus Informatik-Bildung-Schule mischt1Bergische Universität Wuppertal, Didaktik der Informatik, Gaußstraße 20, 42119 Wuppertal, Deutschlandkhaselmeier@uni-wuppertal.de2Gefördert im Rahmen der Qualitätso ensive Lehrerbildung des BMBW – Teilprojekt KoLBi, »Kohärenz in derLehrerbildung« an der Bergischen Universität. cba doi:10.18420/infos2019-09Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 892 Kathrin Haselmeiersich noch eine weitere Komponente: Informatik gilt als Männerdomäne. Genderfragenkönnen also nicht unberücksichtigt bleiben.1.1Genderaspekte als Indikator für den »richtigen Zeitpunkt« zur Wahrnehmungeiner informatischen BildungsaufgabeAus der Geschlechterforschung ist bekannt, dass Kinder bis zum Eintritt in die Grundschulebereits sehr rigide, traditionelle Geschlechtsrollenstereotype ausbilden. Diese Zuweisungweicht ab Mitte der Grundschulzeit wieder auf, wird bis zum Einsetzen der Pubertätmodiﬁziert und dann sehr beständig getro en [vgl.BK10, S. 181]. Es ergibt sich alsoein recht kurzes Zeitfenster, in welchem informatische Bildung dazu beitragen kann, dieZuweisung an die Disziplin als »Männerdomäne« zu überwinden. Wagner gibt darüber hinauszu bedenken, dass geschlechterstereotype Verhaltensweisen eine deutliche Auswirkung aufBerufswahl und Bildungschancen haben und insbesondere Mädchen daraus resultierendBenachteiligungen erwachsen [vgl.Wa17]. Vor dem Hintergrund, dass Mädchen im Mittelüber signiﬁkant höhere computerund informationsbezogene Kompetenzen verfügen alsJungen, ist diese Pille besonders bitter [vgl.Fr14].Die Grundschule muss als erste verpﬂichtende Bildungseinrichtung explizit in den Blickgenommen werden und mit ihr auch die überwiegend weiblichen Lehrkräfte.1.2 Informatische Bildung bei den »Bestandslehrkräften«Nun erwächst Bildung nicht schlicht aus dem Besuch einer Institution – vielmehr sind es dieMenschen, welche dort unterrichten, die den Bildungserfolg und die Rollenzuweisungenihrer Schüler*innen maßgeblich beeinﬂussen. Fehlen also im Erwachsenenalter informa-tikkundige Menschen, so ist ein Blick auf das eingesetzte pädagogische Personal, in dieinstitutionellen Bildungsaufgaben und die -abläufe aufschlussreich: An weiterführendenSchulen wird zu wenig Informatik unterrichtet und erreicht zudem dort überwiegendJungen. In der Grundschule fehlt Informatik (fast) vollständig, ist nicht im Fächerkanonenthalten und kommt somit im Studium oder in der zweiten Phase der Lehrerbildungnicht vor. Informatische Bildung bleibt individuellen Interessen und Schwerpunktsetzungenvorbehalten.2 Informatik versus MedienbildungDa in den Kollegien in der Regel keine informatische Bildung vorhanden ist, können sich dieSchulen nur auf ihre Vorstellungswelt zur »Digitalisierung« stützen. So werden überwiegendAngebote genutzt, die den Medieneinsatz im Unterricht zum Thema haben. Dieser Fokusist für Grundschulen zudem attraktiv, denn der Einsatz digitaler Medien hat das Potential,einige der Schwierigkeiten in den Grundschulen zu adressieren:Kompensation von zu wenig voll ausgebildeten Lehrkräften in den Kollegien, Unterstüt-zung bei unterschiedlichen Aufgaben in Inklusion und Integration und Möglichkeiten90 Kathrin HaselmeierInformatik in der Grundschule – Stellschraube Lehrerbildung 3für individuelle Förderungen auf verschiedenen Anforderungsniveaus.3Für nachhaltige,aufschließende informatische Bildung jedoch müssten Lehrkräfte nach Bergner et al. [vgl.Be17a] neben pädagogischer und didaktischer Handlungskompetenz auch über fachliche undfachdidaktische Kompetenzen verfügen, eine positive Einstellung zur Informatik aufweisensowie o en für neue Sichtweisen sein. Die grundlegende Bereitschaft sich entsprechendfortzubilden darf bei Lehrkräften vorausgesetzt werden, sie ist im Dienstrecht verankert.42.1 Fortbildungen als Problemlösung?Fortbildungen werden von Grundschullehrkräften in Nordrhein-Westfalen in der Regelin zwei verschiedenen Modi besucht: Entweder im Rahmen ihrer Tätigkeit für die Fach-konferenzen, um auf dem aktuellen Stand in den Fächern zu bleiben oder vorhandeneFachkenntnisse vertiefen zu können, oder im Kontext einer Fortbildung für das gesamte Kol-legium einer Grundschule. Diese Fortbildungen richten sich an die Arbeitsschwerpunkte, diealle Kollegiumsmitglieder vereinen: Pädagogik in allen Ausprägungen und Schwerpunkten,Schulentwicklung, Unterrichtsmethoden, sowie schulund klassenorientierte Organisati-onsformen. Neben dem Aspekt der Freiwilligkeit und der interessensgebundenen Auswahl,der oft fehlenden Möglichkeit, überhaupt an Fortbildungen teilzunehmen und dem breitenAufgabenspektrum an Grundschulen, werden Fortbildungen für Grundschullehrkräfte inNordrhein-Westfalen maßgeblich schulund themenbezogen von Kolleg*innen andererSchulen der gleichen Schulform durchgeführt. Für die Ausbildung und die Fortbildung derLehrkräfte an Grundschulen bedeutet dies, dass das Fortbildungsportfolio zur »Digitalisie-rung« nahezu vollständig vonmediena nen Grundschullehrkräften angeboten wird.Es entsteht eine Art Perpetuum mobile der sich selbst bestärkenden Vorstellungsbilderbezüglich der »Digitalisierung«.Von Seiten der Schulträger wird gleichzeitig viel Geld in die Hand genommen, um eine Aus-stattung mit Informatiksystemen an den Schulen voranzutreiben, um die »Digitalisierung«in die Schulen zu transportieren. Das Informatiksystem wird in der Regelbenutzt, um Inhalteanderer Fächer zu erarbeiten, er dient als reines Werkzeug.5Dies ist nicht grundlegendfalsch, greift aber zu kurz. Informatiksysteme müssen »entzaubert«, Konzepte, Ideen und3Laut ICILS-Studie [vgl.Ei17, S.15] wird der »digitalen« Technik zwar viel Potential zugesprochen, doch wirddieses Potential von den Schulen derzeit nicht ausgeschöpft, eskannohne informatische Bildung nicht ausge-schöpft werden. Derzeit müssen Lehrkräfte an Grundschulen darauf vertrauen, dass Verlage und Unternehmengeeignete Lernund Diagnoseprogramme entwickeln und diese Werkzeuge zur Verfügung stellen. Da jedoch dieindividuellen Lernwege der Kinder im Zentrum der pädagogischen Überlegungen der Lehrkräfte stehen, könnendiese Werkzeuge nicht umfänglich zielführend eingesetzt und an die Schüler*innen der eigenen Klasse angepasstwerden. Somit scha en sie zwar kurzfristig Entlastung, tragen aber nicht zur Lösung des Problems bei. Mehrnoch: Es steht zu vermuten, dass individuelle Lerrnschwierigkeiten sich verschärfen, wenn sie nicht mehr vonder Lehrkraft adressiert werden, sondern von einem Werkzeug, das unabhängig von der konkreten Lernsituationin der eigenen Lerngruppe »funktionieren« soll.4Nachzulesen in der ADO NRW, §11 und im Schulgesetz §17 LVO §57, Absatz 35Diese Fehlvorstellung mahnt Eickelmann in der Auswertung der ICILS-Studie an und gibt zu bedenken,dass Ausstattungsprogramme ohne fundiertes pädagogisches Konzept nicht oder nur selten zu nachhaltigenVeränderungen des Lernens führen [vgl.Ei17, S.16].Informatik an Grundschulen – Stellschraube Lehrerbildung 914 Kathrin HaselmeierGrundlagen thematisiert und beherrscht werden,bevorsie als Werkzeuge kompetent undmündig eingesetzt werden können.2.2KMK-Strategie konkret am Besipiel des Medienkompetenzrahmens Nordrhein-WestfalenIn der KMK-Strategie »Bildung in der digitalen Welt« werden sechs Kompetenzbereicheformuliert, die in den Bundesländern umzusetzen sind [vgl.KM16]. In Nordrhein-Westfalenwerden diese Kernbereiche im Medienkompetenzrahmen für alle Schulstufen aufgegri enund speziﬁziert. Die ursprünglichen Vorgaben zur Querschnittsaufgabe »Medienkompetenz«wurden überarbeitet und um eine sechste Spalte ergänzt. Dort werden unter der Kompetenz»Problemlösen und Modellieren« die Teilkompetenzen »Prinzipien der digitalen Welt«,»Algorithmen erkennen«, »Modellieren und Programmieren« und »Bedeutung von Algo-rithmen« ausgewiesen und knapp vertieft [vgl.MS18]. Hier ist die Informatik klar alsBezugswissenschaft zu identiﬁzieren.Mit der Überarbeitung des Medienkompetenzrahmens ist die Tür zur informatischen Bildungin der Grundschule aufgestoßen worden. Darüber hinaus soll der Medienkompetenzrahmenauch als Basis für die Anpassung der Kerncurricula in der Lehrer*innenbildung verstandenwerden. Es existieren also bereits verpﬂichtende informatische Bildungsbestandteile fürdie Grundschule. Es geht daher sowohl aus entwicklungspsychologischer als auch ausschulpolitischer Sicht nicht mehr um die Frage,obInformatik in die Grundschule soll,sondern nur noch darumwie.63 Stellschraube LehrerbildungUm vor diesem Hintergrund sicher zu stellen, dass in den Grundschulen Personal zur Verfü-gung steht, um den notwendigen Informatikunterricht zu erteilen, liegt eine verpﬂichtendeVerankerung von Informatik in den universitären Lehrangeboten für Grundschullehrkräftennahe. Blömeke [vgl.BKL10] identiﬁziert in ihren fachübergreifenden Ausführungen zu derStudie TEDS-M7die starke Überschneidung von Lehrerund Schülerkompetenzen. Dass derWeg Lehrer*innenbildung-Lehrer*innenhandeln-Lernergebnisse der Schüler*innen eineWirkungskette darstellt, wird unter anderem von Terhart [Te06] beschrieben. Die curriculareVerankerung entsprechender Elemente in der Lehrerbildung (für die Grundschule leiderimmer noch überwiegend LehrerINNENbildung) kann dazu beitragen, dass Hürden aufSeiten der Lehrkräfte abgebaut werden und das fachliche Selbstkonzept bezüglich Informatik6Leider wird die Frage nach demwiein Nordrhein-Westfalen jedoch nicht VOR der verpﬂichtenden Einführung desMedienkompetenzrahmens beantwortet. Vielmehr sind alle einzelnen Schulen dazu aufgefordert, standortbezogeneigene Medienkonzepte zu entwickeln. Es ist zu überlegen, die Schulen bei dieser Aufgabe kompetent zuunterstützen, indem beispielsweise ein allgemeines Medienund Informatikkonzept zur Verfügung gestellt wird,welches alle Aspekte der KMK-Strategie abdeckt und durch die Schulen entsprechend angepasst und modiﬁziertwerden kann.7»Teacher Education and Development Study«, Internationale Vergleichstudie zur E ektivität des deutschenLehrerausbildungssystems [BKL10]92 Kathrin HaselmeierInformatik in der Grundschule – Stellschraube Lehrerbildung 5positiv verändert wird. Lehrkräfte wiederum, die keine Hemmungen gegenüber dem Fachund dem eigenen Können haben UND die in Informatik gebildet sind, könnten dazu beitra-gen, das Spannungsfeld Informatik-Bildung-Schule-Gender positiv zu gestalten und ihreKompetenz für den Bildungserfolg der Kinder, insbesondere der Mädchen, gewinnbringendeinzusetzen.Qualiﬁzierte Lehrkräfte können den Herausforderungen informatischer Bildung kompetentund verantwortungsbewusst begegnen. Damit scha t die universitäre Lehrerbildung dienotwendigen Voraussetzungen und muss als mögliche Stellschraube identiﬁziert werden.4 Lehrveranstaltung »Informatik für die Grundschule«Noch ist Informatik weit davon entfernt, ein verpﬂichtender Bestandteil derGrund-schullehrerbildung zu sein. Weder die Fachdidaktiken noch die angehenden Grundschul-lehrkräfte sind auf diese Aufgabe vorbereitet. Best kann in den Zwischenergebnissen seinerForschung zwar informatische Präkonzepte bei den interviewten Grundschullehrkräftenidentiﬁzieren [vgl.Be17b], Dengel und Heuer berichten jedoch, dass Grundschullehrkräftehäuﬁger falsche Vorstellungsbilder zur Informatik haben als Lehramtstudierende andererSchularten [vgl.DH17]. Sie gehen sogar so weit, von einem »speziellen Wissensdeﬁzit beiangehenden Grundschullehrkräften« zu sprechen [vgl.DH17, S.95]. Darüber hinaus weisenDengel und Heuer darauf hin, dass Menschen mit falschen Vorstellungen bezüglich derInformatik später aufgenommenes, korrektes Wissen nicht in das eigene Vorstellungsbildintegrieren können, da eine Assmiliation bei sich widersprechenden Vorstellungsbildernunmöglich ist und die Fehlvorstellungen somit persistent sind [vgl. ebenda]. Diese Persistenzmuss bei der Konzeption einer Lehrveranstaltung von Informatikdidaktikern berücksichtigtwerden, um nachhaltige informatische Kompetenz zu ermöglichen. Während Lehrkräftean weiterführenden Schulen sich für das Fach Informatik aktiv entscheiden und die uni-versitäre Lehre an ein grundlegendes Interesse anknüpfen kann, ist die Ausgangslage beiGrundschullehrkräften eine völlig andere. Grundschulinformatikdidaktik ist bislang auchkein durchgängiger Bestandteil der Informatikfachdidaktik und wird fast ausschließlichvon Menschen beforscht, die Informatik studiert haben – und kein Grundschullehramt.Sie kennen weder Bedingungsgefüge in Schulen, noch die Zielgruppe(d. h. nicht nurein einzelnes Kind) im Klassenverband. Während Nicht-Informatiker oft ein verzerrtesBild von Informatik haben, haben Nicht-Grundschulpädagogen oft ein verzerrtes Bild vonGrundschulen – und auch von Grundschullehrkräften. Beide Perspektiven zu vereinen kannnur im gegenseitigen Austausch auf Augenhöhe gelingen. Einen ersten Ansatz kann dasvierstündige Seminar »Informatik für die Grundschule« an der Universität Wuppertal bieten,das im Curriculum verankert wurde und 6 Leistungspunkte für den Optionalbereich derBildungswissenschaften abdeckt.Von der Annahme ausgehend, dass Wissen nicht in bestimmten Alterstufen, sondern inbestimmten Kompetenzstufen erworben wird, ist die Veranstaltung für absolute Informatik-novizen konzipiert. Selbstverständlich sind Tempo, Komplexität, Abstraktion, Arbeitsweisenund Theoriegehalt auf Studierende abgestimmt, doch zeigt die vergleichende Erfahrung ausder Arbeit mit den drei Zielgruppen »Kinder«, »Lehrkräfte« und »Studierende«, dass dieInformatik an Grundschulen – Stellschraube Lehrerbildung 936 Kathrin HaselmeierNutzungskompetenz zwar variiert, die informatische Kompetenz jedoch generationsüber-greifend auf einem ähnlichen Niveau zu verorten ist.Es wurde darüber hinaus mit in die Überlegungen einbezogen, dass es den zukünftigenLehrkräften möglichst leicht gemacht wird, die erarbeiteten Inhalte in der Grundschule tat-sächlich einzusetzen. Grundschullehrkräfte erteilen bereits in mehr Fächern Fachunterricht,als sie studiert haben. Sie sind darauf angewiesen, sich auch fachfremde Gegenstände fürden Unterricht eigenständig zu erschließen. In der Regel können sie dabei auf ihre in dereigenen Biograﬁe erworbenen Fachkonzepte zurückgreifen und daher einen Einstieg in neueGegenstände der jeweiligen Disziplin ﬁnden und kreativ eigenes Unterrichtsmaterial zukonzipieren. Für die Informatik ist bei der Zielgruppe jedoch überwiegend entweder kein,oder ein falsches Fachkonzept zu identiﬁzieren. Daher muss es einen engen Rahmen geben,innerhalb dessen Studierende ihr fachliches Selbstkonzept hinterfragen und anpassen können,grundlegende Ideen kennenlernen und den Transfer für den Grundschulunterricht bereitsvorbereitet ﬁnden. Die curricularen Entscheidungen zur Lehrveranstaltung orientieren sichan den Kompetenzempfehlungen der Gesellschaft für Informatik für die Grundschule [GI19].Die in der Veranstaltung berücksichtigten informatischen Gegenstände genügen den Kriteri-en, die durch die Methode der fundamentalen Ideen als durchaus grundlegende Elemente derInformatik identiﬁziert werden können. Die in Tabelle 1 aufgeführten Gegenstände wurdenfür die Veranstaltung für fachlich nicht vorbereitete Studierende aufgearbeitet, didaktischreduziert und bilden den Ausgangspunkt für den Aufschluss jeden Lerngegenstandes, sowohlmitals auchüberdas Material.In der vierstündigen Veranstaltung wechseln sich theoretische und praktische Arbeitsphasenab, d. h. nach dem theoretischen Einstieg z. B. in einen Gegenstand der Kryptologie, werdenpassend Unterrichtmaterialien für die Grundschule vorgestellt, erprobt, diskutiert undzurückbezogen auf den theoretischen Ausgangspunkt. Theorie und Praxis ergänzen sichund adressieren die Grundschule.Die eingesetzten Unterrichtmaterialien aus dem Grundschulkontext werden von allen Se-minarteilnehmern jeweils in einem Klassensatz erstellt und wandern zusammen mit dentheoretischen Ausführungen in eine persönliche »Informatikbox«, angelehnt an das Konzeptder »Klassenkisten« zum Sachunterricht der Westfälischen Wilhelms Universität Münster[vgl.MST08]). Die in der Veranstaltung gelieferten Deﬁnitionen, Erklärungen und Erläute-rungen werden auf Wortspeicherkarten verschriftlicht und für den Einsatz im Klassenraumaufbereitet. Darüber hinaus legen die Studierenden ein Glossar an, das sie fortlaufendergänzen. Passend zum theoretischen Input und zum vorgestellten Material werden von denStudierenden Unterrichtsentwürfe entwickelt, die sich an den Vorgaben der Studienseminareorientieren. Diese Unterrichtsentwürfe werden in den letzten Veranstaltungen im Seminarerprobt und diskutiert. Nach der abschließenden Überarbeitung landen alle Materialien undUnterrichtsentwürfe ebenfalls in der »Informatikbox«. Diese enthält also im Anschluss andas Seminar eine einsatzfähige Materialausstattung für fundierten Grundschulinformatik-unterricht, auf die die Studierenden viel Mühe verwendet haben, welche sie erprobt unddiskutiert haben und zu der sie über das theoretische Wissen verfügen. Die Begleitforschungzu den Sachunterrichtkisten aus Münster zeigt, dass solcherart einsatzbereite Boxen im94 Kathrin HaselmeierInformatik in der Grundschule – Stellschraube Lehrerbildung 7späteren Unterricht auch eingesetzt werden [vgl.MST08]).Fachgebiet 1. Durchlauf SoSe18 2. Durchlauf WiSe18/19Technische InformatikRechneraufbau RechneraufbauHardwarekomponenten HardwarekomponentenFestplatte ö nenNetzwerkeInternet InternetCalliopeTheoretische InformatikKryptologie KryptologieBinärdarstellung BinärdarstellungASCIIKontrollstrukturen KontrollstrukturenRekursionPraktische InformatikDjikstraAlgorithmusRoutenplanungSuchalgorithmen Binäre SucheSortieralgorithmen Bubble-SortAngewandte InformatikWeg einer E-Mail Weg einer E-MailE-Mail-Sicherheit E-Mail-SicherheitStrukturierung von DatenBetriebssystemeInformatik, MenschModellierung Modellierungund GesellschaftPhänomenbereiche Phänomenbereichesowie DidaktikFundamentale IdeenInformatik im Alltag Informatik im AlltagGesellschaftlicher DiskursInformatik in Grundschulen Informatik in GrundschulenGeschichte der Informatik Geschichte der InformatikTab. 1: Gegenstände im ersten und zweiten Durchlauf5 Darstellung erster ErkenntnisseNach dem ersten Veranstaltungsdurchlauf mit 10 Teilnehmer*innen (8 weiblich, 2 männlich)hatten alle Studierenden des Seminars deutliche Hürden bezüglich der Informatik abgebaut.Die Aussage: »Das ist Informatik? Cool!« könnte sinnbildlich stehen für den A-Ha-E ekt,der sich bei ihnen einstellte. Alle Teilnehmer*innen berichteten im Anschluss von einemveränderten Selbstund Fachkonzept, von einer überwundenen Hürde und einer verändertenEinstellung zum Thema. Nach dem Erfolg des ersten Durchgangs wurde das Seminarentgegen der ursprünglichen Planung einer jährlichen Durchführung im folgenden Semesterdirekt wieder angeboten. Die Teilnehmerzahl wurde im zweiten Durchgang erhöht und 20Plätze konnten an 17 weibliche und 3 männliche Teilnehmer*innen vergeben werden. Umallen Studierenden die Möglichkeit einzuräumen, in Partnerarbeit einen UnterrichtsentwurfInformatik an Grundschulen – Stellschraube Lehrerbildung 958 Kathrin Haselmeierzu einem ausgewählten Thema zu erstellen und sich intensiv mit einem selbst gewähltenGegenstand der Informatik auseinanderzusetzen, musste der theoretische Input und derUmgang mit dem Material eingeschränkt werden (vgl. Tabelle1). Gekürzt wurden Inhalte,bei denen vermutet wurde, dass sich der Lebensweltbezug für Grundschulkinder erst aufden zweiten Blick oder über Umwege erschließt.Während bei 10 Personen der persönliche Kontakt gewährleistet und das Lerntempo sehrlangsam war (was mitunter auch eine 1 zu 1 – Betreuung ermöglichte), ﬁel diese engeBetreuung bei 20 Teilnehmer*innen deutlich geringer aus. Neben der engen Anbindung undder Möglichkeit, sich der »Informatik« langsam und in einem kleinen, geschützen Rahmenzu nähern, ist mit dieser Einschränkung auch die Möglichkeit erschwert, Fehlkonzepte beiden Studierenden zu identiﬁzieren und zu korrigieren und auf Fragen, Anregungen undÄngste bezüglich der Informatik zugewandt einzugehen.Erste Ergebnisse im Zusammenhang mit den durchgeführten Veranstaltungen können infünf Punkten zusammenfassend dargestellt werden:•Ängste und Unsicherheit, bzw. falsche oder fehlende Vorstellungen sind durchgängigund bislang ohne Ausnahme bei allen Studierenden in beiden Durchläufen zubeobachten. Es kann nur zum Teil davon gesprochen werden, dassneueGegenständevermittelt werden. Vielmehr geht es häuﬁg zunächst darumfalscheVorstellungen zurevidieren,bevormit der Entwicklung informatischer Kompetenz überhaupt begonnenwerdenkann.•Der Lernprozess ist sehr zeitaufwändig und erfordert eine sehr enge Betreuung.•Viele Gegenstände und Inhalte sind für die Studierenden zunächst fremd oder zumTeil negativ konnotiert.•Eine in Teilnehmerzahl, Tempo und Niveau reduzierte Veranstaltung erreicht esbesser, Studierende für die Gegenstände zu gewinnen, als eine gestra te Veranstaltungfür mehr Studierende.•Die Hinwendung zum einzelnen Studierenden erlaubt die nötige Korrektur derfachlichen Selbsteinschätzung bezüglich der Informatik und eine stabile Orientierungzur Überwindung der eigenen Unsicherheiten.•Der Schritt, die Teilnehmerzahlen zu verdoppeln, kann als nicht zielführend angesehenwerden.•Die Reduktion des fachlichen Inputs wirkte sich auf die Veranstaltungstiefe negativaus.6 Weiterführende FragenDurch die dargestellten Rahmenbedingungen und die ersten explorativ gewonnenen Ergeb-nisse werden eine Reihe von Fragen aufgeworfen, die in dem weiteren Forschungsprozess96 Kathrin HaselmeierInformatik in der Grundschule – Stellschraube Lehrerbildung 9adressiert werden müssen. Es gilt zunächst herauszuﬁnden, ob diese Ergebnisse sich stabilabbilden. In einem weiteren Schritt muss abgewogen werden, welche Priorität zu setzenist: Ist die exclusive Veranstaltung für nur 10 Studierende mit besseren Ergebnissen demSeminar für 20 Teilnehmer*innen vorzuziehen? Welche Kompetenzen müssen zukünftigeGrundschulehrkräfte bezüglich der Informatik in der Grundschule erwerben? und wiekann das überprüft werden? Können wir davon ausgehen, dass auf diesem Weg Informa-tik überhaupt zukünftig Eingang in den Unterricht dieser Lehrkräfte ﬁndet? Kann eineLangzeitbeobachtung eventuell Aufschluss geben? Dürfen die technischen Möglichkeitender Informatik als zentrales Element zugunsten der Ideenwelt der Informatik zunächstausgeklammert werden?Es zeichnet sich ab, dass die Studierenden beides benötigen: Einblick in Konzepte undIdeen UND Einblick in die Systeme. Eine einzelne Lehrveranstaltung in oben angegebenerForm kann diesen Spagat nicht leisten. Soll Informatik in der Breite wirken, sollen also alleStudierenden des Grundschullehramtes über fundierte Kenntnisse verfügen, ist über andereuniversitäre Veranstaltungsformate nachzudenken.Werden sich die Ergebnisse aus den bisher untersuchten Kontexten durch weitergehendequantitative und qualitative Studien verstetigen / bestärken, wird auch zu prüfen sein, ob(und wie) Seitene ekte für die Entwicklung der informatischen Bildung der Schülerinnenund Schüler festzustellen sind. In diesem Fall könnte es angezeigt sein, die Umsetzungder Gestaltung der informatischen Bildung z. B. bzgl. der Gruppengröße in den Blick zunehmen. Zudem muss vor dem Hintergrund dieser Ergebnisse überlegt werden, wie und obSchüler*innen einen ähnlichen Kompetenzuwachs in den üblichen großen Lerngruppenüberhaupt erreichen können und welche Bedingungen neben fundierter Lehrerausbildungim Schulkontext zusätzlich erfüllt sein müssen.Literatur[Be17a]Bergner, N.; Köster, H.; Magenheim, J.; Müller, K.; Romeike, R.; Schroeder, U.;Schulte, C.: Zieldimensionen für frühe informatische Bildung im Kindergartenund in der Grundschule. In (Diethelm, I., Hrsg.): Informatik im Unterricht– so geht’s. LectureNotes in Informatics(LNI)-Proceedings, Gesellschaft fürInformatik e.V. (GI), Bonn, S. 53–62, Sep. 2017,    : 978-3-88579-668-8,   :https://metager.to/9188-, Stand: 17. 05. 2019.[Be17b]Best, A.: Bild der Informatik von Grundschullehrpersonen. Erste Ergebnisse ausqualitativen Einzelfallstudien. In (Diethelm, I., Hrsg.): Informatik im Unterricht– so geht’s. LectureNotes in Informatics(LNI)-Proceedings, Gesellschaft fürInformatik e.V. (GI), Bonn, S. 83–86, Sep. 2017,    : 978-3-88579-668-8,   :https://metager.to/9188-, Stand: 17. 05. 2019.[BK10]Becker, R.; Kortendieck, B., Hrsg.: Handbuch Frauenund Geschlechterfor-schung, VS Verlag für Sozialwissenschaften der Springer Fachmedien, 2010,    : 978-3-531-17170-8.Informatik an Grundschulen – Stellschraube Lehrerbildung 9710 Kathrin Haselmeier[BKL10]Blömeke, S.; Kaiser, G.; Lehmann, R., Hrsg.: TEDS-M 2008 Primarstufe:Ziele, Untersuchungsanlage und zentrale Ergebnisse, Professionelle Kompetenzund Lerngelegenheiten angehender Primarstufenlehrkräfte im internationalenVergleich, Waxmann Verlag, 2010, S. 11–38,    : 978-3-8309-2281-0.[DH17]Dengel, A.; Heuer, U.: Aufbau des Internets: Vorstellungsbilder angehenderLehrkräfte. In (Diethelm, I., Hrsg.): Informatik im Unterricht – so geht’s.LectureNotes in Informatics(LNI)-Proceedings, Gesellschaft für Informatike.V. (GI), Bonn, S. 87–97, Sep. 2017,    : 978-3-88579-668-8,   :https://metager.to/9188-, Stand: 17. 05. 2019.[Di17]Diethelm, I., Hrsg.: Informatische Bildung zum Verstehen und Gestalten derdigitalen Welt, INFOS 2017, 17. GI-Fachtagung Informatik und Schule, 13.–15. September 2017, Oldenburg, Germany, LectureNotes in Informatics(LNI)-Proceedings, Bonn: Gesellschaft für Informatik e.V. (GI), 2017,    : 978-3-88579-668-8,   :https://metager.to/9188-, Stand: 17. 05. 2019.[Ei17]Eickelmann, B.: Konzepte und Entwicklungsperspektiven Kompetenzen in derdigitalen Welt. 2017.[Fr14]Fraillon, J.; Ainley, J.; Schulz, W.; Friedman, T.; Gebhardt, E.: Preparing for Lifein a Digital Age – The IEA International Computer and Information LiteracyStudy (ICILS) International Report. Springer Open, Melbourne, Australia, 2014.[GI19]Gesellschaft für Informatik e. V., Hrsg.: Kompetenzen für informatische Bildungim Primarbereich, Empfehlungen der Gesellschaft für Informatik e. V. Erarbeitetvom Arbeitskreis „Bildungsstandards Primarbereich“ – Beschluss des  -Präsidiums vom 31. Januar 2019 – wird in gedruckter Form der LOG IN 39(2019) Heft 191/192 beigefügt, 7. Feb. 2019,   :http://uni-w.de/1gm,Stand: 09. 05. 2019.[KM16]KMK, Hrsg.: Kompetenzen in der digitalen Welt, Kompetenzbereiche, Dez.2016,   :https://metager.to/r6tqb, Stand: 17. 05. 2019.[MS18]MSB-NW, Hrsg.: Medienkompetenzrahmen NRW – Webseite, Ministerium fürSchule und Bildung des Landes Nordrhein-Westfalen (MSB-NW), 2018,   :https://t1p.de/00on, Stand: 11. 05. 2019.[MST08]Möller, K., Hrsg.: Lernen mit der Klasse(n)kiste, Ergebnisse einer Befragungvon grundschullehrkräften, Westfälische Wilhelms Universität, 2008,    :978-3-00-025409-3.[Te06]Terhart, E.: Universität und Lehrerbildung: Perspektiven einer Partnerschaft. In:Lehrerbildung im Diskurs. S. 20–39, 2006.[Wa17]Wagner, P., Hrsg.: Handbuch Inklusion, Grundlagen vorurteilsbewusster Bildungund Erziehung. Herder Verlag, Freiburg, 2017.98 Kathrin HaselmeiercbaA. Pasternak (Hrsg.): INFOS 2019,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Interesse an Informatik und Informatikselbstkonzept zuBeginn der Sekundarstufe I des GymnasiumsKathrin Haselmeier1, Ludger Humbert2, Klaus Killich3, Dorothee Müller4Abstract:Die Kompetenzentwicklung bei Schülerinnen und Schülern hängt deutlich von demfachlichen Interesse und dem fachlichen Selbstkonzept ab. Im Rahmen eines forschend begleitetenModellvorhabens zur Informatik in der Erprobungsstufe des Gymnasiums wurden zu Beginn desSchuljahres 2018/19 über 2 500 Schülerinnen und Schüler der Jahrgangsstufe 5 befragt. Die leitendeForschungsfrage dieser Untersuchung war: Welche motivationalen Merkmale in der AusprägungInteresse an InformatikundInformatikselbstkonzepthaben Schülerinnen und Schüler zu Beginn desModellvorhabens am Anfang der Jahrgangsstufe 5?Die Ergebnisse zeigen, dass bei den Befragten im Durchschnitt das Interesse an Informatik sehr hoch undihr fachliches Selbstkonzept bezüglich der Informatik positiv ist. Neben diesen, die gesamte Stichprobebetre enden Ergebnissen wird die Befragung auch unter den beiden Aspekten geschlechtsbezogeneDisparität und Wirkung von bereits besuchtem Informatikunterricht di erenziert untersucht. Bei denSchülerinnenist sowohl bezüglich des Interesses an Informatik wie des Informatikselbstkonzepteseine signiﬁkant stärkere Unsicherheit zu erkennen als bei männlichen Schülern. Die Unterschiedezwischen Befragten, die angeben, bereits Informatikunterricht gehabt zu haben, und denjenigen ohneInformatikunterricht sind gering. Dabei weist die Gruppe mit Informatikunterricht ein etwas höheresInteresse am Informatik und ein leicht positiveres Informatikselbstkonzept auf.Keywords:Einstieg Informatik; Informatikselbstkonzept; Fachliches Interesse Informatik1 Forschungsstand und Forschungsziele1.1 Fachliches Interesse und fachliches SelbstkonzeptIn der empirischen Bildungsforschung stehen zunehmend motivationale und a ektiveEinﬂussfaktoren im Fokus der Forschung. Die Untersuchung dieser Faktoren gewinnt umso mehr an Wichtigkeit, je mehr die Forschungsergebnisse einen deutlichen Einﬂuss auf dieKompetenzentwicklung und den Lernerfolg belegen. Vor allem die große Bedeutung dermotivationalen Faktoren fachliches Interesse und fachliches Selbstkonzept für die schulischeLeistungsentwicklung ist unbestritten und für einige Fächer – in erster Linie für mathematisch-naturwissenschaftliche Fächer und Deutsch – durch empirische Untersuchungen belegt [vgl.1Bergische Universität Wuppertal (BUW), Didaktik der Informatik (DdI), Gaußstr. 20, 42 119 Wuppertal (BUW),khaselmeier@uni-wuppertal.de2BUW – DdIhumbert@uni-wuppertal.de3Bezirksregierung Düsseldorf, Am Bonneshof 35, 40 474 Düsseldorf,klaus.killich@brd.nrw.de4BUW – DdI,dmueller@uni-wuppertal.de cba doi:10.18420/infos2019-10Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 992 Kathrin Haselmeier, Ludger Humbert, Dorothee Müller, Klaus Killichz. B.He11;KH06;Kö06;Le08]. Fachliches Interesse und fachliches Selbstkonzept stehenin Wechselwirkung zueinander [vglSt17].Dasfachliche Interesse– d. h. im Schulkontext das Interesse an einem Schulfach – manifes-tiert sich in positiven Emotionen gegenüber den Gegenständen des Faches und in seinerallgemeinen Wertschätzung [vgl.Sc09]. Im Grundschulalter ist das fachliche Interesseim Allgemeinen hoch. Es di erenziert und verfestigt sich in der Sekundarstufe I [vgl.Pa13, S. 361]. Das fachliche Interesse ist u. a. entsprechend der geschlechtsstereotypischenFächerzuordnung ausgeprägt [Le08]. So zeigt sich bei Wahlfächern, dass Fächer aus demmännlich konnotiertenMINT-Bereich5von Mädchen seltener gewählt werden [vgl. z. B.MS18a].Alsfachliches Selbstkonzeptwerden die auf ein spezielles Schulfach oder auf einen Kom-petenzbereich bezogenen Einschätzungen der eigenen Kompetenzen und Möglichkeitenverstanden. Seine starke Wirkung auf die Kompetenzentwicklung lässt es als „selbsterfüllen-de Prophezeiung“ [vgl.He11] erscheinen. In der Bildungswissenschaft wird die Förderungeines adäquaten und positiven Selbstkonzeptes daher oft sogar als das zentrale Ziel pädagogi-scher Bemühungen gewertet [MT09, S. 196]. Das individuelle fachliche Selbstkonzept einerSchülerin oder eines Schülers und ihre/seine tatsächlichen fachbezogenen Kompetenzenund Möglichkeiten entsprechen sich nicht. Wie das fachliche Interesse ist auch das fachlicheSelbstkonzept in der Primarstufe eher hoch, di erenziert sich in der Sekundarstufe I ausund fällt dabei im Durchschnitt ab [vgl.Pa13, S. 361]. Männliche Schüler verfügen im All-gemeinen, vor allem in den Fächern mit männlicher Geschlechtszuschreibung, bei gleicherKompetenz bereits in der Grundschule über ein deutlich höheres, oft überhöhtes, fachlichesSelbstkonzept als Schülerinnen, die häuﬁg ein zu niedriges fachliches Selbstkonzept besitzen.In der Sekundarstufe I verstärkt sich die geschlechtsbezogene Diskrepanz des fachlichenSelbstkonzeptes [KH06].1.2 Interesse an Informatik und InformatikselbstkonzeptDie Entwicklung eines hohen Interesses und positiven fachlichen Selbstkonzeptes bezüglichInformatik ist – nicht nur bei Schülerinnen und Schülern – durch weitverbreitete Fehl-vorstellungen [vgl.Kl13] zur Informatik behindert. Zum Interesse an Informatik undzum Informatikselbstkonzept von Schülerinnen und Schülern gibt es kaum empirischeUntersuchungen. Bei Befragungen von Studierenden, die retrospektiv den eigenen Infor-matikunterricht ihrer Schulzeit betrachten [vgl. z. B.Kn11;Ku08;Mü17], ﬁnden sichdeutliche Hinweise auf Hinderung der Entwicklung des Interesses an Informatik bzw. amInformatikunterricht durch tradierte Fehlvorstellungen zu Informatik (z. B. Männerfach,Nerdfach, reine Computerwissenschaft).Die frühe und anhaltende Einordnung des Schulfaches Informatik als „Männerfach“ hatEinﬂuss auf das informatische Selbstkonzept der Schülerinnen. Mädchen entdecken im Ge-gensatz zu Jungen oft erst im Informatikunterricht die Informatik für sich [vgl.Ku08, S. 120].5MINTist ein Akronym aus Mathematik, Informatik, Naturwissenschaften und Technik100 Kathrin Haselmeier et al.Interesse an Informatik und Informatikselbstkonzept zu Beginn der Sek I des Gym. 3Da Informatik in den meisten Bundesländern kein Pﬂichtfach ist, entfällt diese Möglichkeitfür viele Mädchen. Das Kurswahlverhalten belegt eine durch Geschlechtssterotypen geprägteInteressenverteilung, die eine noch stärkere geschlechtsbezogene Diskrepanz aufweist alsbei den anderenMINT-Fächern. So lag z. B. in Nordrhein-Westfalen im Schuljahr 2017/18der Anteil der weiblichen Teilnehmenden an den Grundkursen Informatik bei 25,39 % undin den Leistungskursen bei 15 % [vgl. z. B.MS18a, S. 106]. Die Zahlen der vorangegangenJahre waren ähnlich.Anders als die erwähnten qualitativen, retrospektiven Untersuchungen durch Befragung vonStudierenden, untersucht die 2013 durchgeführte ICILS-Studie Schülerinnen und Schüler derachten Jahrgangsstufe. Sie thematisierte mit dem „computerbezogenen Selbstkonzept“ undden „computerbezogenen Einstellungen“ [vgl.Lo14, S. 263 f] dem Informatikselbstkonzeptund dem Interesse an Informatik nahestehende Themen. Ein Ergebnis der ICILS-Studie2013 ist, dass Mädchen in Deutschland wie auch in den meisten anderen an der Studieteilnehmenden Ländern „über signiﬁkant höhere computerund informationsbezogeneKompetenzen verfügen als Jungen“, während ihr entsprechendes Selbstkonzept unterdurch-schnittlich ist [vgl.Ei17, S. 14]. In dieser untersuchten Altersgruppe sind Interessen undfachliches Selbstkonzept schon weitgehend ausdi erenziert und oft verfestigt, so dassdie vorangegangen diesbezüglichen Entwicklungen von Interesse sind. Die Entwicklungdes Informatikselbstkonzeptes und des Interesses bezüglich des Faches Informatik in derÜbergangsphase zwischen Primarstufe und der Sekundarstufe I stellt ein Forschungsdesi-derat dar. Da sich fachliches Interesse und Selbstkonzept vor allem in der Sekundarstufe Iausdi erenzieren und festigen, ist genau dieser Zeitpunkt in der Bildungsentwicklung undKompetenzentwicklung für das Schulfach Informatik bedeutsam.2 Forschungsfeld, -fragen und -durchführungIn einem vierjährigen Forschungsprojekt werden 3 Jahrgänge von Schülerinnen und Schü-lern, die von der fünften bis zur sechsten Jahrgangsstufe an Informatikunterricht teilnehmen,forschend begleitet. Im ersten Teilprojekt, über das in diesem Beitrag berichtet wird, werdenInteresse und Selbstkonzept bezüglich der Informatik zu Beginn der fünften Jahrgangsstufeuntersucht.ForschungsumfeldDie Bezirksregierung Düsseldorf setzt ab dem Schuljahr 2018/19 über 4 Jahre ein Modellvor-haben um. Das Unterrichtsfach Informatik wird in diesem Modellvorhaben in den Klassen5 und 6 als Pﬂichtfach für alle Schülerinnen und Schüler implementiert (Tab. 1). Es sindzunächst 72 Gymnasien der Regierungsbezirke Düsseldorf und Köln beteiligt. Die Schulennehmen jeweils mit einer, mehreren oder allen Klassen der Jahrgangsstufe 5 teil. In denbeiden folgenden Schuljahren werden sich darüber hinaus weitere Schulen an dem Vorhabenbeteiligen. Der Unterricht ﬁndet im Umfang von einer Wochenstunde auf der Basis einesverbindlichen didaktischen Konzeptes statt. Die Schulen stellen je eine Ergänzungsstundefür den Informatikunterricht der jeweiligen Klassen in den Jahrgangsstufen 5 bzw. 6 zurInteresse an Informatik und Informatikselbstkonzept 1014 Kathrin Haselmeier, Ludger Humbert, Dorothee Müller, Klaus KillichVerfügung. Das Modellvorhaben wird durch die Informatikdidaktikgruppe der BergischenSchuljahr Klasse(n) derJahrgangsstufe 5Klasse(n) derJahrgangsstufe 62018/19X2019/20XX2020/21XX2021/22XTab. 1: Zeitlicher Ablauf des ModellvorhabensUniversität Wuppertal forschend begleitet. Mit dem Modellvorhaben erö net sich dieMöglichkeit, die informatikbezogenen motivationalen Tendenzen von Schülerinnen undSchülern zum Zeitpunkt des Übergangs von der Grundschule in die Sekundarstufe I zuerfassen, sowie deren Entwicklung unter dem Einﬂuss von Informatikunterricht über zweiJahre forschend zu begleiten.Forschungsfrage(n)Die im Folgenden dokumentierten Ergebnisse der quantitativen, empirischen Untersuchun-gen geben Hinweise zur Beantwortung der Frage:Welche motivationalen Merkmale in der Ausprägung Informatikselbstkonzept undInteresse an Informatik haben Schülerinnen und Schüler zu Beginn der Jahrgangsstufe5 des Gymnasiums?Von besonderem Interesse sind Bezüge zum Geschlecht der Befragten und zum Einﬂussvon bereits besuchtem Informatikunterricht, wodurch sich zu der Forschungsfrage folgendeUnterfragen ergeben:1.Bestehen geschlechtsbezogene Diskrepanzen bezüglich dieser Merkmale?2.Hat zuvor besuchter Informatikunterricht Einﬂuss auf diese Merkmale?Stichprobe und BefragungZu Beginn des Schuljahres wurden die Klassen der Jahrgangsstufe 5, die im Rahmendes Modellvorhabens mit Informatik im Gymnasium beginnen, aufgefordert, an einerOnline-Befragung teilzunehmen. Es haben insgesamt 2 570 Schülerinnen und Schüler denFragebogen vollständig bearbeitet.Die Befragungen sollten in der knappen Informatikunterrichtszeit durchgeführt und vonden Schülerinnen und Schülern möglichst selbstständig bearbeitet werden. Es wurdendie folgenden Rahmenbedingungen im Design der Befragung berücksichtigt: Die reineBearbeitungszeit des Fragebogens sollte deutlich unter 20 Minuten liegen. Und die Fragensollten kindgerecht formuliert und ohne Erklärungen der Lehrkraft verständlich sein.102 Kathrin Haselmeier et al.Interesse an Informatik und Informatikselbstkonzept zu Beginn der Sek I des Gym. 5Die Auswertung der von den Schülerinnen und Schüler bearbeiteten Fragen sollte Aufschlusszum Interesse bezüglich Informatik und zum Informatikselbstkonzept geben. Die Befragungist so konzipiert, dass ebenfalls di erenzierte Aussagen in Bezug auf diese motivationalenMerkmale unter den Aspekten möglicher geschlechtsbezogenen Disparität und der Wirkungvon bereits besuchtem Informatikunterricht gemacht werden können.Um die angestrebte Bearbeitungszeit zu realisieren und die Verständlichkeit für die Kinderzu erhöhen, wurden für die Datenerhebung statt der oft üblichen Likert-Skalen mit fünfoder sieben Antwortoptionen einfache, umgangssprachliche und meistens in der Ich-Formformulierte Aussagen genutzt, denen die Befragten in zwei Antwortoptionen zustimmenoder widersprechen konnten, wozu bei einigen Fragen noch die Option „Ich weiß nicht“hinzugefügt wurde (s. z. B.: Abschnitt3.3– Frage zum Interesse am Informatikunterricht).3 Ergebnisse3.1 Geschlecht der TeilnehmendenDie prozentuale Geschlechterverteilung entspricht mit 44,09 % weiblichen und 50,70 %männlichen Befragten (Tab. 2) nicht den zu erwartenden Werten. Denn in den Jahren von2007 bis 2017 lag in Nordrhein-Westfalen der Mädchenanteil in der fünften Jahrgangsstufedes Gymnasiums bei ca. 52 % [vgl.MS18b, S. 45].Mädchen Jungen keine Angabe1133 1303 13444,09 % 50,70 % 5,21 %Tab. 2: Geschlechterverteilung der 2 570 BefragtenSelbst die Annahme, dass ausschließlich Mädchen keine Angabe zum Geschlecht6gemachthätten, kann diese Abweichung nicht erklären. Eine mögliche Erklärung für diese Abwei-chung besteht darin, dass nach Auskunft/Angabe(n) einiger Schulen nicht alle Klassender Jahrgangsstufe 5 an dem Modellvorhaben teilnahmen. Die Zuordnung ihrer Kinderzu den „Informatikklassen“ wurde nach Aussage der Schulen von Eltern oft ausdrücklichangestrebt. Damit zeigt sich bereits zu diesem frühen Zeitpunkt der Kompetenzentwicklungim Schulfach Informatik eine leichte Tendenz der Geschlechtersegregation.6Bei der Frage nach dem Geschlecht wurde den Befragten die neben den Antwortmöglichkeiten „Ich bin einMädchen“ und „Ich bin ein Junge“ mit „Dazu möchte ich nichts sagen“ als drittes auch die Möglichkeit keinerAngabe gegeben, wovon 5,21 % Gebrauch machten.Interesse an Informatik und Informatikselbstkonzept 1036 Kathrin Haselmeier, Ludger Humbert, Dorothee Müller, Klaus Killich3.2 Informatikunterricht in der GrundschuleDie Aussage „Ich hatte bereits in der Grundschule Informatikunterricht“ bestätigen 10,5 %mit „Ja“ und verneinen 89,5 % mit der Auswahlmöglichkeit „Nein“. Die Frage nach dem„Informatikunterricht in der Grundschule“ hat das Ziel, bereits im schulischen Kontexterfahrene Gegenstände, die von den Schülerinnen und Schülern als zur Informatik gehörendeingeordnet werden, zu erfassen. Diese Zuordnung ist nicht in erster Linie von denerworbenen Kompetenzen, sondern vor allem von ihrer Einordnung durch die Lehrkraftder Grundschule abhängig. Solchermaßen zugeordnete Elemente des Unterrichts und dieindividuellen Lernerfahrungen mit ihnen werden auf ihren Einﬂuss sowohl auf das Interesseder Schülerinnen und Schüler an der Informatik und als auch auf ihr Informatikselbstkonzeptuntersucht.3.3 Interesse an Informatik und InformatikselbstkonzeptDas Interesse an der Informatik wurde mit der einfachen Aussage „Ich freue mich aufden Informatikunterricht“ und den drei Wahloptionen „Ja“, „Nein“ und „Ich weiß nicht“erhoben. Die in der Frage implizierten Vorstellungen der Schülerinnen und Schüler vonInformatikunterricht und Informatik sind wahrscheinlich von großer Divergenz und vonzahlreichen Fehlvorstellungen bestimmt (s. S.2).In der gesamten Stichprobe ist das Interesse sehr hoch: Es antworten 2 316 der 2 570Befragten (90,12 %) mit „Ja“, 9,03 % mit „Ich weiß nicht“ und 0,86 % mit „Nein“ (Abb. 1a).Au allend ist nicht nur der hohe Anteil derjenigen, die zustimmen, sondern auch, dassweniger als ein Prozent der Befragten mit „Nein“ antworten.% 25507510090,12 % Ja9,03 %Ich weiß nicht0,86 %Nein(a) Interesse% 25507510070,27 %Ja1,67 %Nein28,05 %Ich weiß nicht(b) SelbstkonzeptAbb. 1: Informatik: Interesse und SelbstkonzeptAuch das mit der Antwortau orderung „Ich erwarte, in Informatik gut zu sein“ erhobeneInformatikselbstkonzept ist positiv. 70,27 % der Befragten erwarten nach eigener Aussage„in Informatik gut zu sein“, 28,05 % geben an, sie wüssten es nicht, und 1,67 % antworteten,dass sie dies nicht erwarteten (Abb. 1b).104 Kathrin Haselmeier et al.Interesse an Informatik und Informatikselbstkonzept zu Beginn der Sek I des Gym. 7In diesem speziellen Fall – der deutlich überwiegende Teil der befragten Schülerinnenund Schüler hat zum Zeitpunkt der Befragung noch keine Erfahrungen mit eigenemInformatikunterricht – sind die positiven Erwartungen an das Fach Informatik deutlichhöher als die Erwartungen an die eigenen diesbezüglichen Fähigkeiten. Die sehr positiveWertung, die dem Informatikunterricht entgegengebracht wird, verdeutlicht sich, wenn dieDaten der Befragten zu Interesse und Informatikselbstkonzept in Beziehung gesetzt werden.Selbst von den 43 Schülerinnen oder Schülern, die explizit nicht erwarten, „in Informatikgut zu sein“, freut sich dennoch mit 28 der größte Teil auf den Informatikunterricht, 7wissen es nicht und nur 8 freuen sich nicht.Geschlechtsbezogene Diskrepanzen bei Interesse und Selbstkonzept bzgl. InformatikBetrachtet man das Interesse an Informatik (Abb. 2a) und das Informatikselbstkonzept(Abb. 2b) bei Jungen und Mädchen unter dem Genderaspekt, so ist in beiden Gruppen einsehr hohes Interesse und ein hohes Informatikselbstkonzept zu beobachten. Dennoch tretenUnterschiede auf. Vor allem ist bei den weibliche Befragten eine stärkere Unsicherheit zuerkennen. Von den 1 133 befragten Mädchen freuen sich 88,44 % auf den Informatikunter-richt, 0,53 % freuen sich nicht, aber 11,03 % wissen nicht, ob sie sich freuen sollen, undbringen damit ihre Unsicherheit bezüglich ihres Interesses an Informatik zum Ausdruck.Von den 1 303 befragten Jungen freut sich ein noch größerer Anteil, nämlich 92,86 %, aufden Informatikunterricht, 0,77 % freuen sich nicht und ein deutlich kleinerer Anteil als beiden Mädchen, nämlich 6,37 %, ist sich unsicher.% 25507510088,44 %92,86 %Ja weibl.männl.11,03 %6,37 %Ich weiß nicht weibl.männl.0,53 %0,77 %Nein weibl.männl.(a) Interesse65,49 %75,90 %Ja weibl.männl.33,10 %22,79 %Ich weiß nicht weibl.männl.1,41 %1,30 %Nein weibl.männl.(b) SelbstkonzeptAbb. 2: Informatik: Vergleich Schülerinnen und SchülerNoch ausgeprägter sind die geschlechtsbezogenen Diskrepanzen bei dem informatischenSelbstkonzept. Von den Mädchen erwarten 65,49 % „gut in Informatik zu sein“, 1,44 %erwarten dies nicht und 33,10 % wissen es nicht. 75,9 % der befragten Jungen, also deutlichmehr als bei den Mädchen, erwarten in „gut in Informatik zu sein“. 1,3 %, ein etwaskleinerer Anteil als bei den Mädchen, erwarten dies nicht. Die Unsicherheit bezüglich desInformatikselbstkonzeptes, „Ich weiß nicht“, ist mit 22,97 % deutlich geringer.Aus dem Informatik-Biber 2015 wurde eine für die Jahrgangsstufen 5 und 6 als leichteingestufte Aufgabe zur Mustererkennung als ein Item der Befragung übernommen. DieseAufgabe wird insgesamt von 92,8 % der Befragten richtig beantwortet. Bei den befragtenInteresse an Informatik und Informatikselbstkonzept 1058 Kathrin Haselmeier, Ludger Humbert, Dorothee Müller, Klaus KillichMädchen ist ein deutlich niedrigeres Informatikselbstkonzept vorhanden als bei den Jungen.Dennoch ist der Anteil der richtigen Antworten bei den Mädchen mit 93,65 % nicht niedriger,sondern geringfügig größer als bei den Jungen mit 92,63 %. Dies kann als einen – in weiterenUntersuchungen noch zu überprüfenden – Hinweis auf eine Bestätigung der in der ICILS-Studie 2013 hergestellten Zusammenhänge zwischen genderspeziﬁschen informatischenKompetenzen und Informatikselbstkonzept (s.Abschnitt 1.2) gewertet werden.Zur Geschlechtszuordnung in der Informatik wurde die Frage „In Berufen mit Informatikarbeiten“ mit den Ergänzungsoptionen „mehr Frauen“, „mehr Männer“ oder „etwagleich viele Frauen wie Männer“ gestellt. Das Ergebnis zeigt, dass von vielen der befragtenSchülerinnen und Schülern eine männlichen Rollenzuordnung bezüglich der Informatikvorgenommen wird. Fast die Hälfte der Schülerinnen und Schüler, 48,52 %, gibt an, dassmehr Männer in der Informatik arbeiten, während 5,60 % vermutet, dass der Frauenanteilgrößer wäre. 45,88 % geben an, dass die Anteile ausgeglichen seien.Einﬂuss des Informatikunterrichts in der GrundschuleWeniger stark als die Geschlechtszugehörigkeit wirkt sich aus, ob die Schülerinnen undSchüler bereits in der Grundschule Informatikunterricht hatten. 10,5 % der 2 570 Befragtengeben an, Informatikunterricht in der Grundschule gehabt zu haben. Der Informatikun-terricht in der Grundschule beeinﬂusst das Interesse an Informatik (Abb. 3a) und auf dasInformatikselbstkonzept (Abb. 3b) leicht positiv.% 25507510092,19 %89,87 %Ja mitohne6,69 %9,30 %Ich weiß nicht mitohne1,12 %0,83 %Nein mitohne(a) Interesse77,32 %69,45 %Ja mitohne20,28 %28,90 %Ich weiß nicht mitohne1,86 %1,65 %Nein mitohne(b) SelbstkonzeptAbb. 3: Grundschulunterricht Informatik – EinﬂussWährend sich 92,19 % derjenigen, die Informatikunterricht in der Grundschule hatten, aufden Informatikunterricht freuen, sind es bei den anderen 89,87 % (Abb. 3a). Eine leichteSteigerung bewirkt der Informatikunterricht in der Grundschule auch bei dem sehr geringenAnteil der Verneinung der Aussage „Ich freue mich auf den Informatikunterricht“. Von denbefragten Schülerinnen und Schülern mit Informatikunterricht in der Grundschule geben 3(1,12 %) an, sich nicht auf den Informatikunterricht zu freuen, während es bei den Befragtenohne Informatikunterricht in der Grundschule 19 der 2 301 Befragten (0,89 %) sind. Beidiesen geringen Zahlen ist diese Abweichung allerdings nicht signiﬁkant.Deutlicher als bei dem Interesse ist der Unterschied in Bezug auf das Informatikselbstkonzept:77,32 % derjenigen mit Informatikunterricht in der Grundschule erwarten, gut in Informatik106 Kathrin Haselmeier et al.Interesse an Informatik und Informatikselbstkonzept zu Beginn der Sek I des Gym. 9zu sein, während es bei denjenigen ohne Informatikunterricht in der Grundschule 69,45 %sind (Abb. 3b). Die gemachten Erfahrungen mit Informatikunterricht verringern dieUnsicherheit bezüglich der Erwartung an den zukünftigen Informatikunterricht: 9,30 % derSchülerinnen und Schüler ohne Informatikunterricht in der Grundschule antworten mit „Ichweiß nicht“ auf die Frage, ob sie sich auf den Informatikunterricht freuen. Hingegen sind esbei den Schülerinnen und Schülern mit Informatikunterricht in der Grundschule 6,69 %.4 Fazit und AusblickDas Interesse an Informatik ist bei den Befragten überraschend hoch. Diese hohen Erwartun-gen sind bei den Jungen ausgeprägter als bei den Mädchen. Es zeigt sich bei allen Befragtenebenfalls ein im Durchschnitt hohes Informatikselbstkonzept, wobei die geschlechtsbezoge-ne Diskrepanz deutlicher ausgeprägt ist als bei dem Interesse an Informatik. Die Mädchenhaben ein niedrigeres Informatikselbstkonzept als die Jungen, wobei dieses bei beidenGeschlechtern eher hoch ist. Informatikunterricht in der Grundschule desillusioniert nicht,sondern stärkt das Interesse und das Selbstkonzept leicht. Die ausgewerteten Daten sprechenfür eine frühe Einführung des Informatikunterrichts für alle Schülerinnen und Schüler(möglichst bereits in der Grundschule), um das Interesse der Kinder für Lernerfolge zunutzen, zur frühen Förderung der Mädchen und zur Verminderung des Gendergaps in derInformatik.Die forschende Beobachtung der Schülerinnen und Schüler in der Entwicklung ihrer motiva-tionalen Tendenzen bezüglich der Informatik im Verlauf der zwei Jahre Informatikunterrichtist geplant. Entsprechende Daten einer Vergleichsgruppe der gleichen Jahrgangsstufe ohneInformatikunterricht werden ab dem kommenden Schuljahr erhoben und ausgewertet.Literatur[Ei17]Eickelmann, B.: Konzepte und Entwicklungsperspektiven Kompetenzen in derdigitalen Welt. 2017.[He11]Hellmich, F., Hrsg.: Selbstkonzepte im Grundschulalter: Modelle, empirischeErgebnisse, pädagogische Konsequenzen, Stuttgart: W. Kohlhammer, 2011.[KH06]Kessels, U.; Hannover, B.: Zum Einﬂuss des Image von mathematisch-naturwissenschaftlichen Schulfächern auf die schulische Interessenentwicklung.In (Prenzel, M.; Allolio-Näcke, L., Hrsg.): Untersuchungen zur Bildungsqualitätvon Schule. Abschlussbericht des DFG-Schwerpunktprogramms. Waxmann,Münster, S. 350–369, 2006.[Kl13]Kleinn, K.; Götsch, M.; Heine, Y.; Schinzel, B.: Das DFG-Projekt „Weltbilderder Informatik“. Informatik-Spektrum 36/3, S. 251–256, 2013.[Kn11]Knobelsdorf, M.: Biographische Lernund Bildungsprozesse im Handlungs-kontext der Computernutzung, Dissertation, Department of Computer Science,Free University Berlin, 2011.Interesse an Informatik und Informatikselbstkonzept 10710 Kathrin Haselmeier, Ludger Humbert, Dorothee Müller, Klaus Killich[Kö06]Köller, O.; Trautwein, U.; Lüdtke, O.; Baumert, J.: Zum Zusammenspiel vonschulischer Leistung, Selbstkonzept und Interesse in der gymnasialen Oberstufe.Zeitschrift für pädagogische Psychologie 20/1/2, S. 27–39, 2006.[Ku08]Kuhl, M.: Studienkultur Informatik neu denken: Geschlechterkonstruktionenim Informatikstudium an der Universität Dortmund und der Carnegie MellonUniversity. Shaker Verlag, Aachen, 2008.[Le08]Lechte, M.-A.: Sinnbezüge, Interesse und Physik. Eine empirische Untersuchungzum Erleben von Physik aus Sicht von Schülerinnen und Schülern, Dissertation,Opladen; Farmington Hills, Mich., 2008.[Lo14]Lorenz, R.; Gerick, J.; Schulz-Zander, R.; Eickelmann, B.: Computerundinformationsbezogene Kompetenzen von Mädchen und Jungen im internatio-nalen Vergleich. In (Bos, W.; Eickelmann, B.; Gerick, J.; Goldhammer, F.;Schaumburg, H.; Schwippert, K.; Senkbeil, M.; Schulz-Zander, R.; Wendt, H.,Hrsg.): Computerund informationsbezogene Kompetenzen von Schülerinnenund Schülern in der 8. Jahrgangsstufe im internationalen Vergleich. ICILS– International Computer and Information Literacy Study, Waxmann Verlag,Münster, New York, Kap. VIII, S. 231–263, 2014.[MS18a]MSB-NW, Hrsg.: Das Schulwesen in Nordrhein-Westfalen aus quantitativerSicht – 2017/18, Ministerium für Schule und Bildung des Landes Nordrhein-Westfalen (MSB-NW), Düsseldorf, 19. Juni 2018.[MS18b]MSB-NW, Hrsg.: Statistik-TELEGRAMM 2017/18, Schuleckdaten 2017/18.Zeitreihen 2008/09 bis 2017/18. Statistische Übersicht Nr. 397 – 1. Auﬂage, MSB-NW – Ministerium für Schule und Bildung des Landes Nordrhein-Westfalen,15. Feb. 2018.[MT09]Möller, J.; Trautwein, U.: Selbstkonzept. In (Wild, E.; Möller, J., Hrsg.): Pädago-gische Psychologie. Springer-Lehrbuch, Springer Berlin Heidelberg, S. 179–203,2009.[Mü17]Müller, D.: Der Berufswahlprozess von Informatiklehrkräften. ÜberarbeiteteFassung der Dissertation von 2016, Universiätsverlag Potsdam, Potsdam, 2017.[Pa13]Pant, H. A.; Stanat, P.; Schroeders, U.; Roppelt, A.; Siegle, T.; Pöhlmann, C.,Hrsg.: IQB-Ländervergleich 2012 – Mathematische und naturwissenschaftlicheKompetenzen am Ende der Sekundarstufe I, IQB – Institut zur Qualitätsentwick-lung im Bildungswesen, Münster, New York: Waxmann Verlag, 2013.[Sc09]Schiefele, U.: Motivation. In (Wild, E.; Möller, J., Hrsg.): Pädagogische Psycho-logie. Springer-Lehrbuch, Springer Berlin Heidelberg, S. 151–178, 2009.[St17]Stanat, P.; Schipolowski, S.; Rjosk, C.; Weirich, S.; Haag, N.: Zusammenfassungund Einordnung der Befunde. In (Stanat, P.; Schipolowski, S.; Haag, N.; Rjosk, C.;Weirich, S., Hrsg.): IQB-Bildungstrend 2016. Waxmann Verlag, S. 387–411,2017.108 Kathrin Haselmeier et al.cba(Hrsg.): ,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Informatikunterricht – Ein Muss zur politischen MündigkeitNiko Hausner1, Katharina Wendlandt2, Matthias Wendlandt3Abstract:Ein erklärtes Ziel schulischer Bildung ist es, die SuS zu (politischer) Mündigkeit zuerziehen. Mündigkeit beschreibt dabei die Fähigkeit, selbstbestimmt und eigenverantwortlich zuhandeln. Politische Mündigkeit im Besonderen befähigt dazu, sich begründet am aktuellen ö entlich-politischen Diskurs zu beteiligen und bildet somit die Grundlage aktiven demokratischen Handelns. Indieser Arbeit analysieren wir die Wahlprogramme zur Bundestagswahl 2017 derjenigen Parteien, dieim Parlament vertreten sind, im Hinblick auf Themen die Informatik betre end. Wir erörtern, welcheinformatischen Grundkenntnisse für die einzelnen digitalen Schwerpunkte nötig sind und inwieferndas Schulfach Informatik dazu beiträgt, eine Beurteilungskompetenz im politischen Wahlprozess zuentwickeln.1 EinleitungIm Zuge einer Wahlkampfveranstaltung im Vorfeld zur Wahl des 19. Deutschen Bundes-tages stellte einer meiner Studenten, der sich aktiv politisch engagiert, einem führendenLandespolitiker die Frage, was man seiner Meinung nach gegen illegale Seiten im Internetmachen könne. Die Antwort des Politikers ist amüsierend und alarmierend zugleich. DerPolitiker schlug vor, die Einträge und Verweise auf die entsprechenden Seiten bei Googlezu löschen die Webseiten seien dann schließlich nicht mehr erreichbar.Nachdem der Student diese Anekdote im Rahmen eines Seminars zum Thema „Infor-matik als Pﬂichtfach?!“ vorgetragen hatte, entbrannte eine wilde Diskussion unter denTeilnehmenden. Wie soll man politisch selbstbestimmt handeln in einer Gesellschaft, dieso extrem von informatischen Inhalten durchzogen ist, wenn man so wenig informatischesWissen voraussetzen kann und so viele Fehlvorstellungen vorherrschen? Dies gilt nichtnur für Politikerinnen und Politiker, die durch politische Entscheidungen unser aller Lebenbeeinﬂussen, sondern es geht auch um die Bürgerinnen und Bürger, die sich mit denWahlprogrammen auseinandersetzen und sich eine eigene Meinung über die Zukunft bildenmüssen. Dies ist die Basis der Demokratie.Josef Kraus, Präsident des Deutschen Lehrerverbandes, äußerte sich 2013 zur Einführungeines Pﬂichtfachs Informatik mit den Worten „Die Schüler müssen ja auch nicht wissen,wie eine Schreibmaschine funktioniert. Hauptsache, sie können sie bedienen.“[SP13]Ähnlich äußerte sich die Schulbehörde Hamburg nach der Abscha ung des PﬂichtfachsInformatik im Jahr 2013. Informatik sei als Fach „nicht für alle in gleicher Intensität1Freiherr-vom-Stein-Schule, Dr.-Berthold-Leinweber-Str. 1, 35075 Gladenbach, Deutschland2Mathematisches Institut, Universität Gießen, Arndtstr. 2, 35392 Gießen, Deutschland3Institut für Informatik, Universität Gießen, Arndtstr. 2, 35392 Gießen, Deutschland cba doi:10.18420/infos2019-11Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 109vonnöten“, so Behördensprecher Peter Albrecht. Weiter heißt es „Etwas salopp formuliert:Alle sollten in einer mobilen Gesellschaft ein Auto fahren können. Aber nicht alle müssenauch wissen, wie es im Detail funktioniert oder gebaut wird.“[WE13]Beide Kommentare zeigen, wie wenig fundiert der Blick auf das Schulfach Informatik ist undwie undi erenziert die Thematik analysiert wird. Eine mögliche Ursache mag mangelndesFachwissen sein. In einem Gastbeitrag von Urs Lautebach in derZeitschreibt er quasikonternd [ZE18]: „Diese Hilﬂosigkeit führt in eine digitale Unmündigkeit, denn wer vonInformatik keine Ahnung hat, kann zwar die Systeme benutzen, die andere entwerfen undbewirtschaften, aber er oder sie kann sie nicht hinterfragen und schon gar nicht an eigeneBedürfnisse anpassen. Zu technisch geprägten Themen kann er sich keine Meinung bildenund die Wahrnehmung bestimmter Rechte bleibt ihm zunehmend verwehrt.“ Er fordertdeshalb ein Pﬂichtfach Informatik, denn „Nur so kann die Schule auch im 21. Jahrhundertihrem Allgemeinbildungsauftrag gerecht werden.“[ZE18]In der folgenden Arbeit möchten wir unterstützende Argumente für die Aussage von UrsLautebach geben, indem wir die Rolle informatischer Bildung im Bereich der Politikim Kontext der Bundestagswahl 2017 analysieren. Die Kernfragen, mit denen sich dieseArbeit beschäftigt, sind: Welchen Stellenwert haben informatische Inhalte im politischenDiskurs? Welche informatischen Themen sind in den einzelnen Wahlprogrammen enthalten?Über welche informatischen Grundlagen sollten Wählerinnen und Wähler verfügen, umdie Themenkomplexe verstehen und bei der Bundestagswahl selbstbestimmt über dieParteiprogramme urteilen zu können?2 Bildung, Mündigkeit und Demokratie„Aufklärung ist der Ausgang des Menschen aus seiner selbst verschuldetenUnmündigkeit. Unmündigkeit ist das Unvermögen, sich seines Verstandes ohneLeitung eines anderen zu bedienen. Selbstverschuldet ist diese Unmündigkeit,wenn die Ursache derselben nicht am Mangel des Verstandes, sondern derEntschließung und des Muthes liegt, sich seiner ohne Leitung eines andernzu bedienen. Sapere aude! Habe Muth dich deines eigenen Verstandes zubedienen! ist also der Wahlspruch der Aufklärung.“ [KA84, S.6]Fritz Reheis [RE14] beschreibt in seinem Einführungswerk zur politischen Bildung diemündigen Bürgerinnen und Bürger als selbstständig in ihrer Lebensführung. Er muss nachReheis in der Lage sein, selbstständig zu erkennen bzw. zu beurteilen, wann Widerspruchnotwendig ist. Dabei stellt er einen Bezug zum Aufklärungspostulat von Immanuel Kanther. Wolfgang Sander [SD08] behandelt den mündigen Bürger als ein mögliches Leitbildder politischen Bildung. Die Mündigkeit der Bürgerinnen und Bürger sei nötig, um dasdemokratische System eines Staates am Leben zu erhalten. Entsprechend müssen nachSander auch Schülerinnen und Schüler auf ihre Zukunft innerhalb einer Demokratie110 Niko Hausner et al.3vorbereitet werden. Für Seidel ist Mündigkeit die Fähigkeit „seine eigenen Angelegenheitenselbst regeln zu können“[SE16, S.286].Eine wichtige Instanz zur politischen Bildung stellt das Bundesamt für politische Bildungdar. Mündigkeit wird dort wie folgt deﬁniert: „Mündigkeit hat noch eine weitergehendeBedeutung. Gemeint ist damit auch Selbstbestimmung und Urteilsfähigkeit. Man sprichtoftmals von mündigen Bürgern und meint damit, dass die Bürger und Bürgerinnen nichtnur für sich selbst Verantwortung übernehmen, sondern auch für ihren Staat und ihreGesellschaft. In einer Demokratie wie in Deutschland ist das besonders wichtig. DieDemokratie braucht mündige Bürger und Bürgerinnen, die sich interessieren und engagieren,die bereit sind, politisch im Staat mitzuwirken.“[BP18]Alle Deﬁnitionen verstehen Mündigkeit als Synonym der Selbstbestimmung auf allenEbenen des Lebens. Sowohl Wolfgang Sander als auch das Bundesamt für politischeBildung heben darüber hinaus noch das aktive Leben in einer Demokratie hervor, was in denBegri  der politischen Mündigkeit gefasst werden kann. Im Folgenden verstehen wir unterpolitischer Mündigkeitdie Fähigkeit, in politischen Entscheidungsprozessen selbstbestimmturteilen und handeln zu können.Wolfgang Klafki formulierte folgende grundlegende Fragestellung als Leitziel zu bildendenInhalten:„Welche Objektivierungen der bisher erschlossenen Menschheitsgeschichtescheinen am besten geeignet, dem sich Bildenden Möglichkeiten und Aufgabeneiner Existenz in Humanität, in Menschlichkeit aufzuschließen, also einer aufwechselseitig anerkannte, damit aber immer auch begrenzte Freiheit, auf Gerech-tigkeit, kritische Toleranz, kulturelle Vielfalt, Abbau von Herrschaft und Ent-wicklung von Friedfertigkeit, mitmenschliche Begegnung, Erfahrung von Glückund Erfüllung hin orientierte, vernunftgeleitete Selbstbestimmung?“[KL86]Bildung und Erziehung haben also nach Klafki die Aufgabe, dem unmündigen Menschenzur Mündigkeit zu verhelfen. Die Begri e der Bildung und der Mündigkeit werden dabeiverknüpft und bilden die zentralen Begri e seiner Bildungstheorie.Wir sehen den Begri  der digitalen Mündigkeit, wie ihn Urs Lautebach im Zitat der Einleitungverwendet, als notwendige Voraussetzung, um informatische Inhalte im politischen Kontextbeurteilen zu können. Die digitale Mündigkeit ist eine spezielle Form der Mündigkeit[BE18]. Der souveräne Einsatz von Informationsund Kommunikationstechniken (IKT)wird in Boberach/Neuburger [BO14] als eine wesentliche Voraussetzung für den mündigen,digital-souveränen Bürger hervorgehoben. So zeichnet sichdigitale Souveränitätdurchausreichend inhaltliches Wissen und technische Kompetenzen aus. Hierzu zählen der Autorund die Autorin den Umgang mit Programmen wie Word und Excel sowie die Nutzungtechnischer Geräte wie Drucker oder Scanner.Informatikunterricht – Ein Muss zur politischen Mündigkeit 111Nach Müller, Stecher, Dietrich, Wolf, et al. [MU16, S.7] benötigt die digitale Gesellschaftdigital selbstbestimmte Bürgerinnen und Bürger, „die eigenverantwortlich mit den Produkten,Geräten und Technologien der heutigen Zeit umgehen können (Kompetenz) und sich proaktivmit den Vorteilen und möglichen Risiken der Nutzung auseinandersetzen (O enheit).“Versteht man digitale Souveränität als einen Prozess, der sich stetig wandelt und immer anneue Entwicklungen gebunden ist, so ist die zweite Deﬁnition, die sich an den allgemeinenKonzepten orientiert, zu bevorzugen. In Bezug auf informatische Bildung in Schulen istdies besonders wichtig. Schule kann nie so umfassend bilden, dass alle informatischenInhalte aller zukünftigen Wahlprogramme detailliert im Unterricht behandelt werden. Dieallgemeinen Konzepte können aber zum einen dazu beitragen, dass die Themen leichterzugänglich sind und zum anderen, dass die Grundlagen gelegt werden, um sich aktuelleThemen schneller aneignen zu können.3 ParteiprogrammeIn diesem Abschnitt arbeiten wir zunächst den Stellenwert des Themenkomplexes Informatikund Digitalisierung in jedem Parteiprogramm heraus. Die Beurteilung erfolgt relativ zumUmfang des jeweiligen Parteiprogramms. Hierbei werden wir uns ausschließlich auf dieParteien beziehen, die im aktuellen Bundestag vertreten sind.CDU/CSUDas Regierungsprogramm [PU17] für 2017-2021 der Union erstreckt sichüber 76 Seiten im regulären DIN A4 Format. Abgesehen von Einleitung und Vorwort sowieWahlaufruf ist das Programm in neun verschiedene und auf den ersten Blick gleichberechtig-te Themenkomplexe unterteilt. Inhalte zum Bereich Informatik und Digitalisierung ﬁndensich im Themenkomplex mit dem Titel „Chancen im digitalen Zeitalter“. Die Union räumtden Themen mit digitalem Schwerpunkt einen eigenen Bereich in ihrem Regierungspro-gramm ein. Damit erlangen diese Themen eine ähnliche Bedeutung wie beispielsweise dieFamilienpolitik oder die Sicherheitspolitik, welche ebenfalls einen eigenen Themenkomplexin diesem Programm bilden.SPDDie SPD unterteilt ihr Regierungsprogramm [PS17] mit dem Titel „Es ist Zeit fürmehr Gerechtigkeit: Zukunft sichern, Europa stärken“ in zwölf Themenkomplexe, exklusiveder Einleitung. Dabei umfasst das Programm 116 DIN A4 Seiten. Im Programm derSozialdemokraten ﬁndet sich zunächst kein eigener Themenkomplex, der der Digitalisierunggewidmet ist. Dennoch ﬁnden sich in mehr als der Hälfte der Themenkomplexe Bezüge zudigitalen Themen. Es lässt sich herausstellen, dass auch in diesem Programm den digitalenThemen ein hohes Gewicht zukommt.112 Niko Hausner et al.5Die LinkeAuf rund 140 Doppelseiten, die in etwa dem DIN A4 Format entsprechen,beschreibt die Partei Die Linke ihr Programm [PL17] für die Bundestagswahl 2017. Siesetzen dabei auf di erenziertere Themenüberschriften. In neun von 18 Themenkomplexenwerden informatische Schwerpunkte thematisiert.FDPDas Wahlprogramm [PF17] der FDP umfasst 150 Seiten. Abzüglich der Einleitungund einem allgemeinen Schluss umfasst es lediglich sechs Themenkomplexe. Erst ein Blickin die Untergliederung dieser sechs Hauptbereiche zeigt digitale Schwerpunkte. Es wirddeutlich, dass alle Hauptbereiche, ausgenommen der Steuerpolitik („Politik, die rechnenkann“), informatische Themen beinhalten. Trotz dieser starken Verﬂechtung digitalerThemen mit dem Gesamtbild des Parteiprogramms ist die absolute Anzahl digitaler Themengeringer als beispielsweise bei SPD und Union, wenngleich die Deckung in diesem Vergleicherstaunlich ist.Bündnis 90/Die GrünenDas umfangreichste Wahlprogramm [PG17] mit fast 250 Seitenim DIN A4 Format (wenn auch etwas größerem Schriftbild) entstammt der Partei Bündnis90/ Die Grünen. Trotz des umfangreichen Programms beschränkt sich diese Partei aufwenige und entsprechend weit gefasste Themenkategorien. Man ﬁndet im Wahlprogrammvon Bündnis 90/Die Grünen lediglich im zweiten Teil einige digitale Schwerpunkte. Dieinformatischen Themen sind in diesem Programm nicht so stark vertreten wie in anderen,jedoch sind auch hier die bedeutendsten von ihnen, gemessen an ihrem Anteil im ö entlichenDiskurs, durchaus zu ﬁnden.AFDDie geringste Menge an informatischen Inhalten bietet das Wahlprogramm [PA17]der Alternative für Deutschland. Dies kann jedoch auch dem kompakten Umfang desProgramms geschuldet sein. So umfasst es zwar 76 Seiten, doch deren Format entsprichtin etwa nur DIN A5 im Querformat. Die Aufteilung der AFD sieht 15 Themenkomplexevor, wobei sieben dieser 15 Komplexe informatische Themen beinhalten. Bezogen auf daskompakte Wahlprogramm ﬁndet durchaus eine bemerkenswerte Menge an informatischenThemen Platz, wenngleich es im direkten Vergleich zu anderen Parteien vom Umfang eherweniger ist.4 ThemenübersichtWir geben nun eine Auswahl der in den Wahlprogrammen der unterschiedlichen Parteiengenannten informatischen Themen an. Dabei beschränken wir uns auf diejenigen Themen,die in mehreren Parteiprogrammen Erwähnung fanden, weshalb kein Anspruch auf Voll-ständigkeit der Liste aller digitalen Themen im Bundeswahlkampf 2017 bestehen kann.Dies sind die ausgewählten Themen in alphabetischer Reihenfolge:Informatikunterricht – Ein Muss zur politischen Mündigkeit 113Algorithmen, Big Data, Cybersicherheit, Datenschutz, Digitalisierung derArbeitswelt, Fake News, Freies WLAN, Identiﬁzierung und Verschlüsselung,Infrastruktur, Internetkriminalität, Künstliche Intelligenz, Netzneutralität, Soft-ware, Tracking Softund Hardware, Urheberrecht sowie Wahlfreiheit in dendigitalen Märkten.Im Folgenden werden wir nun einige der bedeutendsten Themen näher analysieren. Wirgeben eine kurze Übersicht, inwieweit Berührungspunkte zu den Programmen der Bun-destagsparteien bestehen, und begründen, weshalb informatische Grundkenntnisse dazubenötigt werden, um den kompletten Rahmen der politischen Diskussion zu durchdringen.Kritiker mögen nun anmerken, dass Bürgerinnen und Bürger nicht in jedem Wahlkampf-thema Experten sein können bzw. müssen. Dieser Ansicht kann man entgegenhalten, dasses zum einen einer Grundbildung bedarf, um Sachverhalte einschätzen zu können, und zumanderen eine grundlegende Bildung vorhanden sein sollte, damit sich Interessierte ohneWeiteres zusätzliches Wissen zu den genannten Themengebieten aneignen können.Algorithmen„Ein sogenannter Algorithmen-TÜV soll dafür sorgen, dass niemand durchsoftwaregestützte Entscheidungen diskriminiert wird oder zu Schaden kommt.“ [PS17] Solautet die konkrete Forderung, die der SPD-Bundesverband in seinem Wahlprogramm fürdie Bundestagswahl 2017 formuliert hat.In derZeit[ZE17] wird Heiko Maas zitiert. Er verlangt „eine behördliche Kontrolle, um dieFunktionsweisen, Grundlagen und Folgen von Algorithmen überprüfen zu können“. DieseAufgabe könne eine Digitalagentur übernehmen, eine Aufsichtsbehörde, der Unternehmenwie Google Einblick in ihre Quellcodes und damit Geschäftsgeheimnisse geben müssten.Auch der Bundesverband der Partei Die Linke bezieht sich auf das theoretische Konzeptdes Algorithmus’. In ihrem Wahlprogramm wird eine transparente O enlegung derjenigenAlgorithmen, welche durch ö entlich-rechtliche Internetangebote genutzt werden, gefordert.Abgesehen von der Tatsache, dass die Verö entlichung eines Algorithmus’ den Ruin deszugehörigen Unternehmens bedeuten könnte, mag dieses Konzept einen interessantenAnsatz darstellen. Informatisch gebildeten Bürgerinnen und Bürgern wird aber sofortklar, was digital unmündigen Bürgerinnen und Bürgern eventuell nicht bewusst ist: DassAlgorithmen beliebig komplex sind, dass sich Programme über hundertausende oder garmillionen Zeilen von Code erstrecken können und dass die Analyse von Programmcodevon Menschenhand in dieser Komplexität praktisch unmöglich ist. Auch der Gedanke aneine automatisierte Analyse von Programmcode verschwindet sofort, da jegliche detaillierteAnalyse sehr schnell auf ein nicht-entscheidbares Problem wie das Leerheitsproblem oderdas Halteproblem für Turing Maschinen zurückgeführt werden kann.Dieses Basiswissen wird zum einen beim Programmieren und zum anderen in der Theoreti-schen Informatik vermittelt. Beide Themengebiete sind in den meisten Curricula, zumindestin den Oberstufenplänen, enthalten.114 Niko Hausner et al.7Big DataBeide sogenannten Volksparteien (CDU/CSU und SPD) nutzen den Begri  BigData oder eines seiner Synonyme innerhalb ihrer Regierungsprogramme. So schreibt dieUnion über „Umgang mit großen Datenmengen“, während die SPD den wirtschaftlichenNutzen von Big Data mit den damit verbundenen Datenschutzfragen in Relation setzt.So heißt es im Wahlprogramm der SPD: „Ziel unserer Datenpolitik ist es, das Recht aufPrivatsphäre zu gewährleisten. Gleichzeitig wollen wir das wirtschaftliche Potenzial vonDaten nutzen, denn Datenschutz und Big Data schließen sich nicht aus. Wir werden klareRegelungen scha en, wie Daten verfügbar gemacht werden können und wer welche Datenwann, zu welchem Zweck und zu welchen Bedingungen verwenden darf.“ Die FDP weißtauf den Umstand des Datenwertes in ihrem Wahlprogramm hin. So sprechen sie den Verkaufdes Messengerdienstes WhatsApp an den Facebook-Konzern an. Der Kaufpreis stehe inkeinem Verhältnis zur Größe der Firma bzw. deren Jahresumsatz. Lediglich der Zugang,welchen WhatsApp zu Daten und Kommunikationskanälen habe, rechtfertige den Kaufpreisim zweistelligen Milliardenbereich.Grundlegende algorithmische Verfahren, bzw. Verfahren aus dem Data Mining, verfeinernhierbei die Sichtweise auf die Grenzen und Möglichkeiten, große Datenmengen zu analy-sieren. Auch wenn der Themenkomplex Data Mining nicht verpﬂichtend in den aktuellenCurricula steht, hilft ein grundlegendes Verständnis für Algorithmisierung an dieser Stelleweiter. Die aktuelle Tendenz zeigt, dass die Analyse von großen Datenmengen einen immergrößeren Stellenwert einnimmt. Es stellt sich die Frage, ob dieser Bereich aufgrund seinera ektiven und auch fachlich interessanten Seite nicht einen größeren Stellenwert in denCurricula einnehmen sollte. Neben den Möglichkeiten des Data Mining spielt der Werthinter Daten eine Rolle für den politischen Diskurs um Big Data. Entsprechend wirddie Fähigkeit, den Wert hinter Daten abschätzen zu können, für ein selbstbestimmtesMeinungsbild benötigt. Hierzu könnte Informatikunterricht beitragen.Freies WLANDie SPD verspricht, dass „ö entliche Einrichtungen o ene und kostenfreieWLAN Hotspots verfügbar machen“[PS17, S.38], die FDP erweitert diese Forderungum den ö entlichen Nahverkehr. Damit stoßen die Parteien auf großen Zuspruch in derBevölkerung. Laut einer repräsentativen Umfrage der YouGov Deutschland AG [EC16]wünschen sich 74% der deutschen Bevölkerung über 18 Jahren ﬂächendeckendes freiesWLAN. Doch sind weiten Teilen der Bevölkerung die Gefahren ö entlich zugänglicherNetzwerke nicht bewusst. Auch wenn die Betreiber der Netze mit Sicherheit werben, sobleibt unerwähnt, dass die jeweiligen Anbieter den Datenverkehr und die Bewegungsproﬁleder Nutzer überwachen und ausspionieren können. Ist einem Bürger nicht bewusst, werder Betreiber desjenigen Netzwerks ist, in das er sich eingewählt hat und welche Datenvon ihm ausgelesen werden können, so besteht die Gefahr eines fahrlässigen Verhaltens inVerbindung mit dem Diebstahl sensibler Daten. Grundlegende Kenntnisse über Netzwerke,wie sie im Themenkomplex Internet unterrichtet werden, ermöglichen einen kritischenBlick auf dieses Wahlversprechen.Informatikunterricht – Ein Muss zur politischen Mündigkeit 115Identiﬁzierung und VerschlüsselungSPD und FDP befassen sich nur oberﬂächlich mitder Thematik, fordern aber sichere Lösungen für elektronische Signaturen und verschlüsselteKommunikation. Die Linke hingegen fordert ein „Recht auf Ende-zu-Ende-Verschlüsselungin persönlicher Kommunikation“. Eine elektronische Identiﬁzierung ﬁndet Anwendung imBereich E-Government. Sofern Anträge oder auch Verträge in einer Art Bürgerportal (so eineForderung der Union) abgewickelt werden sollen, muss sichergestellt werden, dass immerder rechtmäßige Antragsteller oder Vertragspartner Zugri  auf personenbezogene Datenerhält. Eine Vorstellung davon zu haben, wie genau eine elektronische Signatur aussehenkann, welche Voraussetzungen sie erfüllen muss und was jeder einzelne Bürger und jedeeinzelne Bürgerin hierfür benötigt, sind Grundvoraussetzungen, um sich an der politischenDiskussion beteiligen zu können. Darüber hinaus stellt sich die Frage der Sicherheit, welchedie meisten Bürgerinnen und Bürger beschäftigt. Die Wahlprogramme schreiben immerwieder, dass diese Verfahren sicher sind. Urteilen wir nicht fremdbestimmt, wenn wir unsblind darauf verlassen?Ohne eine informatische Grundbildung sind weder das grundlegende Verfahren vonE2EE (End-to-End-Encryption), noch dessen Vorund Nachteile oder dessen Sicherheitbekannt. Ähnlich sieht es bei der elektronischen Signatur aus. Aktuell ﬁnden sich dieBereiche Verschlüsselung, sichere Kommunikation und elektronische Signaturen meistensnur fakultativ in den Curricula wieder. Jedoch werden diese Themengebiete meistens imThemengebiet Internet angeschnitten. Unter Berücksichtigung der Tatsache, dass dieseThemenkomplexe einen immer höheren Stellenwert im alltäglichen Leben einnehmen, stelltsich die Frage, ob dieser Themenbereich nicht einen höheren Stellenwert in den Curriculaeinnehmen sollte.Künstliche IntelligenzDie Parteiprogramme beschäftigen sich nur mit einem Ausblickauf die möglichen Anforderungen, die Entwicklungen im Bereich Künstliche Intelligenz fürdie Gesellschaft bereithalten könnten. Rechtliche und ethische Fragen stehen dabei für dieSPD im Vordergrund. Bei der Union sind es vor allem Chancen in Forschung und Wirtschaft.Die FDP erachtet es als wichtig in ihrem Programm, dass Einblicke und Funktionsweisen indiesen Bereichen im Kindesalter vermittelt werden.Im Bereich der Künstlichen Intelligenz gibt es viele Fehlvorstellungen, welche durchverschiedene Romane und Blockbuster noch verstärkt werden. Der Bereich der KünstlichenIntelligenz wird damit beworben, dass er ungeahnte Funktionalitäten und Möglichkeitenböte. Um Chancen und Gefahren richtig einordnen zu können, ist es sinnvoll, die Grenzender Informatik, speziell die Grenzen der Künstlichen Intelligenz, zu thematisieren. DerThemenbereich ist fakultativ in vielen Curricula enthalten.116 Niko Hausner et al.95 DiskussionDie Analyse in Kapitel 3 hat gezeigt, dass informatische Inhalte in großem Umfang inden Parteiprogrammen zur Bundestagswahl 2017 enthalten sind, digitale Themen somitvon großer Bedeutung für den ö entlich-politischen Diskurs sind. Gerade die sogenanntenVolksparteien thematisieren sehr vielfältig Themenbereiche, in denen eine informatischeBildung notwendig ist, damit Bürgerinnen und Bürger selbstbestimmt urteilen können. Aberauch die Parteiprogramme der FDP und Die Linke beschäftigen sich an vielen Stellen mitDigitalisierung. Die FDP fordert unter anderem, dass „das Fach Informatik wesentlicherBestandteil der berufsschulischen Ausbildung sein“ muss [PF17].Die einzelnen Themengebiete sind sehr unterschiedlich und auch mit einer sehr starkunterschiedlichen Gewichtung in den Parteiprogrammen enthalten. Ein Hauptthemengebietist der Bereich Internet und verschlüsselte Kommunikation. In verschiedenen Programmenwurde die O enlegung von Algorithmen, bzw. die Analyse von Funktionalitäten vonAlgorithmen gefordert. Grundlagenwissen, wie es in den aktuellen Curricula abgedeckt wird(auch wenn die genaue Interpretation der Themen von der jeweiligen Lehrkraft abhängt),ermöglicht hier eine kritische Auseinandersetzung mit den Inhalten und Forderungen. Esbleibt die Frage, ob diese Themen nicht doch ﬂächendeckend stärker mit Bezug auf dieaktuellen politischen oder gesellschaftlichen Gegebenheiten unterrichtet werden sollten.Peter Euler schreibt in einem Artikel [EU13] über Bildung und Schule: „Stattdessen gibtes ständig neue Reformen, die alle ein Ziel haben: möglichst schnelle Verwertbarkeitfür den Markt. Ist das Bildung? Ursprünglich bedeutete Bildung mehr: Mündigkeit füralle die Basis für Demokratie.“ Schule erhebt den Anspruch, die SuS auf zukünftigeLebenssituationen vorzubereiten, sie möchte ihnen die Grundlagen zum selbstbestimmtenHandeln und Urteilen in unserer Demokratie mitgeben. Das selbstbestimmte Urteilen überpolitische Entscheidungen und Ideen ist dabei der wesentliche Faktor. Die vorliegendeArbeit zeigt somit auf, dass eine informatische Grundbildung für alle notwendig ist.Literatur[BE18]Roman Beck et al.Eine Analyse der Fähigkeiten der Bürger in Deutschland zumkonstruktiven und souveränen Umgang mit digitalen Räumen.abgerufen (2019) un-ter: negz.org/wp-content/uploads/2018/06/NEGZ-ISPRAT-Studie-Dig-M%C3%BCnd-Abs chlussbericht.pdf [2018].[BO14]Michael Boberach, Rahild Neuburger.Zukunftspfade Digitales Deutschland 2020.Springer. 2014.[BP18]Gerd Schneider, Christiane Toyka-Seid.Mündige Bürgerinnen. Das junge Politik-Lexikon.In: Bundeszentrale für politische Bildung. 2017.[EC16]Verband der Internetwirtschaft e.V.Das Haftungsrisiko fällt weg.abgerufen (2019) unter:https://www.eco.de/wp-content/blogs.dir/freie-hotspots_infograﬁk-2.jpg [2016][EU13]Peter Euler.Bildung heißt Mündigkeit.In: Metallzeitung (Mitgliederzeitung der IGMetall) Heft 4. S. 15-16. 2013.Informatikunterricht – Ein Muss zur politischen Mündigkeit 117[KA84]Immanuel Kant.Beantwortung der Frage: Was ist Aufklärung?In: Berlinische Monats-schrift Band 12. S.481-494. 1784.[KL86]Wolfgang Klafki.Die Bedeutung der klassischen Bildungstheorien für ein zeitgemäßesKonzept allgemeiner Bildung. In: Zeitschrift für Pädagogik. 32. Auﬂ. S. 455-475. 1986.[MU16]Lena-Sophie Müller et al.D21-DIGITAL-INDEX. Jährliches Lagebild zur DigitalenGesellschaft.abgerufen (2019) unter: initiatived21.de/app/uploads/2017/01/studie-d21-digital-index-2016.pdf [2016].[PA17]Alternative für Deutschland.Programm für Deutschland.Wahlprogramm der Alternativefür Deutschland für die Wahl zum Deutschen Bundestag am 24. September 2017. Köln.2017.[PF17]Freie demokratische Partei.Denken wir neu.Das Programm zur Bundestagswahl 2017der Freien Demokraten. Berlin. 2017.[PG17]Bündnis 90/ Die Grünen.Zukunft wird aus Mut gemacht.Bundestagswahlprogramm2017. Berlin. 2017.[PL17]Die Linke.Sozial. Gerecht. Frieden. Für alle. Die Zukunft für die wir kämpfen!DieLinke. Langfassung des Wahlprogramms zur Bundestagswahl 2017. Hannover. 2017.[PS17]Sozialdemokratische Partei Deutschland.Es ist Zeit für mehr Gerechtigkeit: Zukunftsichern, Europa stärken.Das Regierungsprogramm 2017-2021. Berlin. 2017.[PU17]Die Union.Für ein Deutschland, in dem wir gut und gerne leben.Regierungsprogramm2017-2021. Berlin. 2017.[RE14]Fritz Reheis.Politische Bildung. Eine kritische Einführung.Springer. 2014.[SD08]Wolfgang Sander.Politik entdecken Freiheit leben: Didaktische Grundlagen politischerBildung.Wochenschau Verlag. 2008.[SE16]Christian Seidel.Selbst bestimmen. Eine pholosophische Untersuchung personalerAutonomie.De Gruyter. 2016.[SP13]Hilmar Schmundt.Wir machen eine Rolle rückwärts.abgerufen (2019) unter:www.spiegel.de/lebenundlernen/schule/erziehungswissenschaftler-wollen-informatik -alspﬂichtfach-einfuehren-a-903096.html [2013].[WE13]Jens Meyer-Wellmann.Hamburg scha t trotz Kritikdas Pﬂichtfach Informatik ab.abgerufen (2019) unter:www.welt.de/print/welt_kompakt/hamburg/article116640160/Hamburgscha t-trotz-Kritik-das-Pﬂichtfach-Informatik-ab.html [2013].[ZE17]Christopher Lauer.Gesetzesbrecher im Netz.abgerufen (2019) unter:www.zeit.de/2016/02/internet-charta-heiko-maas-grundgesetz [2016].[ZE18]Urs Lautebach.Informatik für alle.abgerufen (2019) unter:www.zeit.de/gesellschaft/schule/2018-02/digitalisierung-informatikunterr icht-schulen-bildung [2018].118 Niko Hausner et al.cbaArno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Informatische Bildung für alle LehramtsstudierendenReformprozess einer allgemeinbildenden Informatikveranstaltung in deruniversitären LehrerbildungDaniel Losch1, Ludger Humbert2Abstract:Alle Lehrpersonen benötigen – unabhängig von ihren konkreten Fächern – angesichts einervon Informatik durchdrungenen Welt einen Zugang zu allgemeinbildenden Elementen der Informatik.An der Bergischen Universität Wuppertal werden seit 2009 regelmäßig Veranstaltungen durchgeführt,die dieser Anforderung Rechnung tragen. Befragungen und Rückmeldungen der Studierenden sowieder Lehrenden aus der mehrjährigen Durchführung der Veranstaltung legten nahe, dass eine für alleLehramtsstudierenden adäquate Optimierung der Veranstaltung möglich ist. Daraus ergibt sich alseine zu untersuchende Hypothese: Das bestehende Lehrangebot muss – hinsichtlich der intendiertenKompetenzen für die Studierenden – als nicht vollständig befriedigend bezeichnet werden. Durchdie Rekonﬁguration der Veranstaltung werden Möglichkeiten zur Qualitätsverbesserung des Lehran-gebots diskutiert. Die Umgesetzung wird prozessbegleitend untersucht, um gegebenenfalls zeitnahzu intervenieren. Durch qualitative Forschungselemente konnten studentische Belange inhaltlicherund organisatorischer Art auf die Hypothese bezogen werden und diese in erster Näherung bestäti-gen. Die Hinzunahme zweier informatikfachwissenschaftlicher und -fachdidaktischer Perspektivengewährleistet die Triangulation des konzeptuellen Reformprozesses. Das entwickelte Konzept ei-ner allgemeinbildenden Informatikveranstaltung für alle Lehramtsstudierenden berücksichtigt eineverstärkte Verzahnung von Theorie und Praxis, inhaltliche Modularität und konkreten Berufsbzw.Lebensweltbezug.Keywords:Allgemeinbildung; Informatik; Lehrerbildung; Literalität; Reform; Phänomene1 Einleitung1.1 Motivation und ForschungskontextDass informatische Bildung in der Gesellschaft eine nachhaltige Verankerung ﬁnden muss,ist Konsens in der Informatikdidaktik [bspw.Br16]; dass es dazu einen Lernort durch das ver-pﬂichtende Schulfach Informatik in der Schule braucht, ﬁndet ebenfalls breite Zustimmung.Hierzu bedarf es zahlreicher, grundständig in erster und zweiter Phase der Lehrerbildungausgebildeter Informatiklehrkräfte sowie darüber hinausgehender Informatikfortbildungenfür Lehrkräfte. Um aber Aspekten der Medienbildung [etwaHa99] angemessen Rechnung1Bergische Universität Wuppertal, Gaußstraße 20 42119 Wuppertal,d.losch@uni-wuppertal.de2Bergische Universität Wuppertal, Gaußstraße 20 42119 Wuppertal,humbert@uni-wuppertal.de cba doi:10.18420/infos2019-12Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1192zu tragen, müssen allgemeinbildende Elemente der Informatik für Lehrkräfte aller Fächeraufbereitet werden. So wie Schülerinnen und Schüler erst durch die Kombination vonInformatik und integrativer Medienbildung zur Mündigkeit befähigt werden, so bedürfenauch Lehramtsstudierende in der ersten Phase ihrer Ausbildung der Synergien von eigenstän-digem Informatikangebot und fachlich konkretisierender Mediendidaktik. An der BergischenUniversität Wuppertal werden seit 2009 regelmäßig Veranstaltungen durchgeführt, diedies zu gewährleisten versuchen. Sie wurden bis 2016 hinsichtlich ihrer inhaltlichen Tiefesukzessive weiter ausgerollt. Zu den seither etablierten Grundfesten der Veranstaltunggehört die Repräsentation der fachlichen Breite der Informatik durch Dozierende, die jeweilsaus ihrem jeweiligen Fachgebiet Aufschluss zur Informatik bieten. Für die Orientierunginformatischer Lehrangebote für Studierende anderer Fachkontexte klassiﬁzieren Seegererund Romeike vier Grundtypen: Denkweisen, Fluency, Wissenschaft und Gesellschaft [SR18,S. 20]. Die Veranstaltung kann vornehmlich der Kategorie »Wissenschaft« zugeordnetwerden:Kurse sollen einen Überblick über das Fachgebiet Informatik geben. DenStudierenden werden zentrale Ideen und Schlüsselkonzepte der WissenschaftInformatik aufgezeigt. Es geht häuﬁg auch darum, ein (breites) Bild der Diszi-plin zu vermitteln und gleichzeitig das Verständnis für dessen grundlegendeKonzepte zu scha en. [SR18, S. 20]Zwölf Lehrende gestalten die Veranstaltung durch Beiträge; mit dieser Vielzahl wirdauch versucht, die Vielheit in der Wissenschaft Informatik abzubilden. Die Veranstaltungwendet sich an zwei Gruppen bezüglich der zu erwerbenden ECTS: zwei respektivesechs ECTS. Durch curriculare Restriktionen der betro enen Studiengänge ist für dieLehramtsstudierenden der Sekundarstufe I der geringere Umfang von 60 Zeitstundenvorgesehen; alle weiteren Lehramtsstudierenden sowie Nicht-Lehramtsstudierende studieren180 Zeitstunden. Die Studierenden wenden zur Erfüllung der Anforderungen vier zusätzlicheECTS im Zusammenhang mit einem begleitenden Projektseminar auf. Wir betrachten indiesem Zusammenhang die Veranstaltung, die zwei ECTS umfasst; diese Veranstaltungverfolgt das Ziel, bei den Studierenden einen universitären »Mindeststandard« informatischerKompetenzen zu entwickeln.Befragungen und Rückmeldungen der Studierenden sowie der Lehrenden aus der mehr-jährigen Durchführung der Veranstaltung legten bereits nahe, dass eine für alle Lehr-amtsstudierenden adäquate Optimierung der Veranstaltung möglich ist. Inbesondere dieInteressenlage der Studierenden, die Freiwilligkeit der Veranstaltung und eine vermeint-liche und »gefürchtete« Abstraktheit der informatischen Fachgegenstände bedürfen einerinformatikdidaktischen Erörterung.120 Daniel Losch, Ludger HumbertInformatische Bildung für alle Lehramtsstudierenden 31.2 FragestellungIn der bundesdeutschen Hochschullandschaft gibt es ein ausgewiesenermaßen umfänglichesAngebot an Medienbildung, was anhand der Zahl hochschulischer Medienzentren bereitsdeutlich wird. Universitäre Angebote, die eine Entwicklung informatischer Selbstkompetenzim Zusammenhang mit geeigneten Veranstaltungen ermöglichen, sind im Vergleich kaumau ndbar; Seegerer und Romeike haben neun Hochschulkurse für Studierende andererFachkontexte in Deutschland in ihre Datenbasis aufgenommen [SR18, S. 18]. Die Frage nachder konkreten Gestaltung eines universitären Informatikangebots für alle Lehramtstudieren-den wurde nach unserer Kenntnis bisher nicht wissenschaftlich untersucht. Im Folgendenstellen wir ein informatikdidaktisches Forschungselement aus dem Reformprozess einesbestehenden Konzeptes vor. Dabei wird folgende Hypothese formuliert: Das bestehendeLehrangebot muss – hinsichtlich der intendierten Kompetenzen für die Studierenden – alsnicht vollständig befriedigend bezeichnet werden. Wenn das Lehrangebot sich als nichtvollumfänglich zielführend erweist, ist insbesondere die Beantwortung folgender Fragenbedeutsam: Was muss inhaltlich angeboten werden? Welche Formen der Umsetzung sindzielführend?2 VorgehensweiseUm eine multiperspektivische Auseinandersetzung des konzeptuellen Reformprozesses zugewährleisten, wird ein triangulatives Forschungsdesign gewählt:1.DiestudentischePerspektive auf die Veranstaltung wird mittels einer qualitativen,schriftlichen Befragung erhoben; die Befragung wird dabei als Reﬂexionselementnach etwa zwei Dritteln der Veranstaltung implementiert. Im Anschluss fand eine Dis-kussion zur Gesamtveranstaltung in dialogischer Hörsaalsituation statt; dazu wurdenzwei Leitfragen formuliert – zum einen nach dem Verhältnis von inhaltlicher Tiefeund thematischer Breite zum anderen nach Aufwand, Ablauf sowie Organisation derVeranstaltung. Abschließend konnten die Forschungselemente hinsichtlich aktuellerUmgestaltungen und Gesamtkonzept unter Zuhilfenahme qualitativer Inhaltsanalyse[Ma99] ausgewertet werden; konkret wurden Zusammenfassungen der einzelnenErhebungen vorgenommen und induktive Kategorien gebildet, welche schließlicheiner Häuﬁgkeitsanalyse unterzogen wurden [Ma99, S. 67  .].2.Der empirische Befund (s. Abschnitt4) wird aus der Perspektive zweierfachwis-senschaftlichorientierter Aufschlüsse der Informatik betrachtet ([Cl91;De08]–s. Abschnitt5.1), die strukturgebende Impulse für die Veranstaltungskonzeptionsetzen.3.Die Ergebnisse werden über zweifachdidaktischeAufschlüsse diskutiert (s. Ab-schnitt5.2): Das Konzept informatischer Literalität bietet die Phänomenorientierung,Informatische Bildung für alle Lehramtsstudierenden 1214bei der einerseits Phänomene als Erscheinungen und Konsequenzen des alltäglichenLebens aufgefasst werden [HP04]; andererseits werden informatische Handlungs-dimensionen in Anwendung, Gestaltung und Entscheidung deutlich. In diesemZusammenhang soll die von Engbring erweiterte Form des sogenannten »DagstuhlDreiecks« einen Aufschluss aus der gemeinsamen Perspektive eines Diskurses vonMedienpädagogik, Informatik und Medienwissenschaft zu. Um den organisatori-schen Rahmen der Veranstaltung angemessen zu erfassen, sollen zur Unterstützungzugeschnittene Elemente einer empirischen Studie herangezogen werden; dieserStudie liegt eine Ein-/Ausgangsbefragung in der Veranstaltung mit quantitativemSchwerpunkt zugrunde.3 DurchführungVorlesungsthema Kürzel SWS Dozent*inWas ist Informatik? was 4 AGeschichte der Informatik hist 4 AZahlensysteme und Codierung code 4 BEingebettete Echtzeitsysteme ees 4 CRechnerarchitektur arch 2 DModellierung und Implementierungimp 6 EMensch-Maschine-Schnittstellen mms 4 FTechnische Informatik tech 2 DBetriebssysteme os 2 GGrundlagen Internet net 4 HKryptographie crypt 2 ISicherheit im Internet sec 2 HRecht und Internet law 2 JHörsaalreﬂexion reﬂ 2 –Datenbanken dbs 4 BMaschinelles Lernen ml 2 LGrenzen der Informatik theo 4 KInformatikallgemeinbildung did 4 ATab. 1: Gegenstände der VorlesungDie Umgestaltung der Veranstaltung im Semester der Durchführung umfasste folgendeAspekte:•Restrukturierung nach fachdidaktischer Maßgabe der thematischen Reihung•Ergänzung um eine Vorlesung zum maschinellen Lernen•Erweiterung der Teilveranstaltung {imp}3um Programmierpraxis3Die in {. . . } gesetzten Veranstaltungskürzel sind stets in der Tabelle1aufgelöst.122 Daniel Losch, Ludger HumbertInformatische Bildung für alle Lehramtsstudierenden 5•Erweiterung der Teilveranstaltungen {was, code, tech, net, crypt, sec, theo} umenaktive Elemente4Im Durchschnitt waren 62 Studierende in der Veranstaltung anwesend. An der Evaluations-sitzung, die auch die qualitative Befragung einschließt, nahmen 54 Studierende teil, wobei49 Bögen ausgefüllt wurden. Die von den teilnehmenden Studierenden belegten Fächersind in Tabelle2dargestellt. Die Teilveranstaltung {reﬂ} wurde als reﬂexives Elementeingebettet, um die genannte Hypothese einer Überprüfung zuführen zu können:1.Die Studierenden konnten – über die Implementierung der »Think-Pair-Share«-Methode – ihre Reﬂexion zur Begegnung mit demFachInformatik und mit derVeranstaltungals solcher schriftlich dokumentieren, anhand von Leitfragen mitKommiliton*innen diskutieren und schließlich vor dem Plenum zu Gehör und zuProtokoll geben.2.Den Studierenden wurden Hintergründe zur Veranstaltung dargestellt und erhielteneinen Ausblick auf Reformüberlegungen der Veranstaltenden.3.Die Studierenden waren aufgerufen, angesichts des neu gewonnenen Hintergrundwis-sens zur Veranstaltung weitere Argumente vorzubringen.Fach TeilnehmendeMathematik 53,45 %Englisch 18,97 %Biologie 17,24 %Musik 17,24 %Politik 17,24 %Chemie 12,07 %Deutsch 12,07 %Pädagogik 6,90 %Fach TeilnehmendeGeschichte 6,90 %Physik 6,90 %Psychologie 6,90 %Evangelische Religion 5,17 %Französisch 3,45 %Spanisch 3,45 %Katholische Religion 1,72 %Tab. 2: Teilnehmende der Veranstaltung nach studierten Fächern54 Ergebnisse und Diskussion der empirischen Forschungselemente4.1 Struktur und erste Ergebnisse der Befragung der StudierendenDieInteressenlageder Studierenden an der Informatik kann als ausgeglichen mit leichtpositivem Überhang bezeichnet werden; Informatik ist also für einige (27 %, s. Abb.1)4Bei diesen Elementen handelt es sich um Rollenspiele oder Gruppenarbeiten im Hörsaal mit haptischer Aktivität.5Lehramtsstudierende qualiﬁzieren sich in zwei respektive drei Fächern, daher sind die Summen größer als 100 %.6Das qualitative Format sah eineo eneBeantwortung der Fragen vor. Daher ist die Summe größer als 100 %Informatische Bildung für alle Lehramtsstudierenden 123627 %interessant16 %uninteressant10 %Programmierpraxis als positiv aufgefasst14 %Programmierpraxis schwierig in der Umsetzung41 %vielseitig53 %komplex31 %wenig berufsoder lebensweltbezogen22 %Anspruch sehr hochAbb. 1: Häuﬁgkeiten der induktiven Kategorien6ein Thema, in das ein Einblick lohnenswert scheint; 16 % bekundeten explizites Des-interesse, sodass etwas über die Hälfte von sich aus keine Stellung dazu bezieht. ZehnStudierende hobenexplizitdie Teilveranstaltungen {was, hist, law, crypt, net, sec} alssehr positiv hervor; dies kann bei ersteren dreien auf ein hohes Interesse an der Reﬂexiongesellschaftlich-kultureller Wechselwirkungen [En18, S. 7] zurückgeführt werden, was auchan anderer Stelle bereits belegt werden konnte [SR18, S. 26]. Für {crypt, net, sec} sehendie Studierenden die positive Markierung in der Integration enaktiver Phasen begründet:»Beispiel Programmieren erst Theorie und anschließend Praxis (aber dann auch mehr) MehrInteraktion mit der Hörerschaft wie bei den Entschlüsselungen und dem »Paket-Verschicken«hält (mich persönlich) näher am Geschehen und macht Konzepte greifbarer«. Hier wirdsogar eine Steigerung der Anteile an Programmierpraxis gefordert. 41 % der Befragtenbekundeten unmittelbar dieVielseitigkeitder Informatik in dieser Veranstaltung (davonhoben acht Personen die Vielfalt explizit als positiv hervor); dies bestätigt die geplante Dar-stellung der fachlichen Breite; die Ringvorlesung ist dafür vermutlich weiterhin geeignetesGestaltungsformat, wenngleich sich eine Person explizit gegen das Format aussprach. EineBeobachtung einer befragten Person lautet: »Zur Einordnung der entsprechenden Themensollten meiner Meinung nach mehr verbindende Elemente betont werden, sodass man denzu Beginn der Veranstaltung vorgestellten ›roten Faden‹ häuﬁger wiedererkennt.« Dies zeigt,dass die Absicht, die Veranstaltung unter ein Leitmotiv zu stellen, erkennbar war, jedoch inder Umsetzung eine eher geringe Kohärenz7der Teilveranstaltungen aufwies. Die häuﬁgsteZuschreibung an die Informatik ist ihreKomplexität8; damit kann vermutetet werden, dassStudierende sich informatische Kompetenzen also nicht »nebenbei« aneignen können;demnach würden integrative Informatikangebote allein nicht ausreichen. Dies ist auch einwichtiges Element für den Reformprozess: Primär sollten in dieser fachwissenschaftlichorientierten Informatikveranstaltung für Nicht-Informatikstudierende Prozessund Gegen-standsbereiche der Informatik thematisiert werden. Der Bezug zu Lehramt, Studienfächernund Lebenswelt der Teilnehmenden sollte möglichst berücksichtigt werden sein. Die bisherdurchgeführte Veranstaltung und ihre Struktur führen o ensichtlich bei 31 % der Befragtender Veranstaltung dazu, dass derartige Bezüge nur eingeschränkt hergestellt werden können;dazu gesellt sich, dass 22 % der Befragten den Anspruch als sehr hoch einstufen.7In diesem Beitrag wird Kohärenz als Bezeichnung für die einheitliche Orientierung an einer fachdidaktischenGestaltungslinie verstanden.8Die Erwartungen bezüglich der Komplexität und Vielseitigkeit wurden oftmals als überraschend aufgefasst.124 Daniel Losch, Ludger HumbertInformatische Bildung für alle Lehramtsstudierenden 74.2 Interaktives ReﬂexionselementDie dialogische Hörsaalsituation bestätigt die Ergebnisse der schriftlichen Befragung: Sohabe es mit Blick auf inhaltliche Tiefe und thematische Breite eine gelungene Übersichtgegeben, die jedoch nicht überschneidungsfrei geblieben sei. Die Kohärenz der Teilveranstal-tungen sollte in diesem Sinne stärker herausgestellt werden. Wenngleich praktische Elementein die Teilveranstaltungen {was, code, imp, tech, net, crypt, theo} eingewoben wurden, seider Vorlesungsanteil zu umfangreich gewesen; statt des Programmierens seien andere bzw.weitere Praxisbeispiele informatischen Handelns zu gestalten (ein genanntes, studentischesAnliegen: rudimentäre Netzwerkkonﬁguration). Die stärkere,praktischorientierte Einbin-dung der Studierenden in die jeweiligen informatischen Themen ist eine bedeutsame Auﬂagefür den Reformprozess. Insgesamt wurde durch die Diskussionsbeiträge das Spannungsfeldzwischen den Dimensionen Breite, Tiefe und Anwendbarkeit der informatischen Themendeutlich.5 Triangulation5.1 Fachwissenschaftliche PerspektiveIm Rahmen wissenschaftstheoretischer Überlegungen zur Informatik wirft Denning folgende,grundlegende Fragen auf: »What is computation? What is information? What can we knowthrough computing? What can we not know through computing? How can we build complexsystems simply?« [De08, S. 2]. Für eine geeignete Darstellung der Wissenschaft Informatik indidaktischen Zusammenhängen empﬁehlt Claus folgende Zielbereiche: (a) wissenschaftsbe-zogener Bereich, (b) Zukunftsaspekte, (c) Einsatz–Anwendungen–Auswirkungen bis heute,(d) Nutzen (und Schaden), (e) Grundtechniken und Unterstützungscharakter [Cl91, S. 149].Mit den Teilveranstaltungen {was, hist} wird dem wissenschaftsbezogenen Bereich bereitsbegegnet; dieses Element ist auch laut empirischem Befund fundamental für den Aufschlussder Informatik und wurde explizit positiv konnotiert. Die Teilveranstaltungen {ees, os, net,crypt, sec, dbs, ml} sind den Zielbereichen »Zukunftsaspekte«, »Einsatz–Anwendungen–Auswirkungen bis heute«, »Nutzen (und Schaden)« dienlich. Der Beantwortung der vonDenning aufgestellten Fragen kann insbesondere über diekerninformatischenFachgebieteabgedeckt werden, die in »reiner Form« bislang zu wenig Berücksichtigung in der Veran-staltung gefunden haben. Der bisherige Ansatz ist stark an den Fachgegenständen einzelner(den Studierenden nicht transparenten) Disziplinen orientiert gewesen; damit ist auch der zuTage getretene Mangel an Kohärenz erklärbar.5.2 Fachdidaktische PerspektiveWird nun – als zweiter Zugang – die fachdidaktische Perspektive der Phänomenorientierunghinzugenommen, so ist zu konstatieren, dass Beispiele aus allen drei »Phänomenbereichen«Informatische Bildung für alle Lehramtsstudierenden 1258[HP04, S. 4] in die Veranstaltung eingebettet werden sollten und exemplarisch in je einerTeilveranstaltung informatisch erörtert werden. Dadurch könnte sichergestellt werden, dassdie erhobene informatische Komplexität und der zu hohe Anspruch lebensweltbezogenaufgelöst wird. Die Teilveranstaltungen {ees, os, net, crypt, sec, dbs, ml} eignen sich dazuin besonderer Weise. Das in [Pu03, S. 138] vorgestellte Konzept informatischer Literalitätermöglicht folgende, erhellende Aufstellung:Handlungs-dimensionVeranstaltung(s. Tab.1)fachwissenschaftlicheund fachdidaktische ReferenzAnwendung{ees, os, net, crypt, sec, dbs, ml}(c),(e) (s. Abschnitt5.1)Gestaltung {tech, mms, imp, code}[De08]; Strukturen und Funktionen [En18]Entscheidung{hist, theo, law, did}(b),(d) (s. Abschnitt5.1); gesellschaftlich-kulturelle Wechselwirkungen [En18]Tab. 3: Zuordnung von Elementen informatischer Literatität zu Teilen der VeranstaltungEine Betonung der Handlungsdimension »Anwenden« begegnet den nachgewiesenenProblemzonen beim Berufsund Lebensweltbezug und adressiert Claus’ Zielbereiche»Einsatz–Anwendungen–Auswirkungen bis heute« (c) und »Grundtechniken und Unter-stützungscharakter« (s. Abschnitt5.1). Die Handlungsdimension »Gestalten« hingegensollte in einem kerninformatischen Modul einen Schwerpunkt bilden. Damit kann demProblem hoher Komplexität Rechnung getragen werden. Der Programmierpraxis und dertechnischen Informatik wird in praktischer Ausführung mehr Zeit eingeräumt. Das großeInteresse an der Reﬂexion gesellschaftlich-kultureller Wechselwirkungen spiegelt sich inder Handlungsdimension »Entscheiden« wieder. Die Teilveranstaltung {was} muss beimÜberblick über die Informatik einen »roten Faden« aufzeigen, der die einzelnen Veranstal-tungselemente kohärent in den Modellierungsprozess einbindet. Somit wird einerseits diejeweilige Schwerpunktsetzung (Anwendung–Gestaltung–Entscheidung) einer Teilveranstal-tung für die Studierenden transparent; andererseits wird der prozessuale Zusammenhangder Handlungsdimensionen verdeutlicht, der in den Teilveranstaltungen stets mitgedachtwerden sollte.6 KonsequenzenDie Veranstaltung ist bisher durch eine starke informatikfachwissenschaftliche Orientie-rung geprägt. Damit erfahren die Studierenden an einigen Stellen die große fachlicheKomplexität und nur geringe Lebensweltbezüge. Die ersten Ergebnisse scheinen damitvorerst die oben dargestellte Vermutung zu bestätigen. Um diesem Eindruck zu begegnen,versuchen wir, die Veranstaltung durch den vorgestellten Lösungsansatz (s. Abb.2) soanzureichern und umzugestalten, dass die Studierenden informatische Kompetenzen inallen in [SR18, S. 20] aufgestellten Kategorien entwickeln können. Dabei sollen Theorieund Praxis stärker verzahnt werden, indem in jeder Woche einer Vorlesung eine praktischeHörsaalübung zugeordnet wird. Die Veranstaltung als Ganzes wird modularisiert (s. Abb.2):126 Daniel Losch, Ludger HumbertInformatische Bildung für alle Lehramtsstudierenden 91 Orientierung1Was ist Informatik?2Geschichte der Informatik2 Projektorientierter Rundgang durchdie Kerninformatik3Technische Informatik4Informatische Modellierung5Von der Modellierung zur Imple-mentierung6Grenzen der Informatik3 Informatischer Aufschluss ausge-wählter Phänomene7Allgegenwärtige Informatiksysteme8Betriebssysteme9.1Internet9.2Recht und Internet10.1Kryptographie10.2Sicherheit im Internet11.1Datenbanken11.2Maschinelles LernenAbb. 2: Vorläuﬁges Konzept zur Planung einer allgemeinbildenden InformatikveranstaltungAuf die eingängliche Orientierungsphase, folgt ein projektorientierter Rundgang durchdie Kerninformatik. Diese Exposition möge als Grundlage für die Gestaltungsund Ent-scheidungskompetenz der Studierenden am Beispiel des Mikrocontrollers Calliope [Ge18]gelten. Der informatische Aufschluss ausgewählter Phänomene bietet die Möglichkeit – aufBasis der kerninformatischen Kompetenzen –, Aspekte der Anwendung mit konkretemBerufsbzw. Lebensweltbezug zu erarbeiten. Nächste Schritte sind die interne Revisionder Veranstaltung auf Grundlage der hier ausgeführten Forschungselemente im kollegialenKreise und die Untersuchung des projektorientierten Begleitformates (für Studierendemit vier zusätzlichen Leistungspunkten). Dieses birgt ein Potential zur Scha ung vonnoch stärkerem, studentischen Berufsund Lebensweltbezug zu informatischen Denk-und Handlungsweisen – auch und gerade bezüglich individueller Studienfachrichtungen.Letztlich ergeben sich Herausforderungen im Hinblick auf die Zieldimension des gesam-ten Reformprozesses: Es wird angestrebt, durch Vereinheitlichung und Dokumentationdie Portabilität des Studienmoduls auf andere Hochschulstandorte voranzutreiben. Wirdeine allgemeinbildende Informatikveranstaltung angeboten, so ist nach den bisherigenÜberlegungen in der Fachdidaktik eines jeden Faches eine fruchtbare Diskussion überfachlich-informatische Wechselwirkungen anzuregen.Literatur[Br16]Brinda, T.: Stellungnahme zum KMK-Strategiepapier »Bildung in der digitalenWelt«, 2016,   :https://pygy.co/zW, Stand: 17. 02. 2019.[Cl91]Claus, V.: Die Rolle der Sprache – Anforderungen an den Informatikunterricht.In (Burkert, J.; Peschke, R., Hrsg.): Weiterentwicklung des Informatikunterrichts– Folgerungen aus der Sicht von Lehrerbildung und Wissenschaft. Materialienzur Schulentwicklung 16, Hessisches Institut für Bildungsplanung und Schulent-wicklung (HIBS), Wiesbaden, S. 148–158, 1991,    : 3-88327-241-8.Informatische Bildung für alle Lehramtsstudierenden 12710[De08]Denning, P. J.: Great Principles of Computing, 2008,   :https://pygy.co/NE,Stand: 17. 02. 2019.[En18]Engbring, D.: Überlegungen zu einem Beitrag zur Lehrerbildung in der digitalvernetzten Welt, Ein auf Erfahrungen gestützter Bericht und Diskussionsbeitrag.In (Thomas, M.; Weigend, M., Hrsg.): Informatik und Medien – 8. MünsteranerWorkshop zur Schulinformatik. Books on Demand GmbH, Norderstedt, S. 95–106, Mai 2018,    : 9783752849424,   :https://t1p.de/3k9u, Stand:17. 02. 2019.[Ge18]Gesche Joost and Franka Futterlieb and Stephan Noller and Jørn Alraun andKlaus Buß and Maxim Loick: Calliope mini Dokumentation v1.0 auf github.io,31. Jan. 2018,   :https://pygy.co/NF, Stand: 17. 02. 2019.[Ha99]Hauf-Tulodziecki, A.; Bartsch, P. D.; Becker, K.-H.; Herzig, B.; Lehmann, G.;Magenheim, J.; Schelhowe, H.; Siegel, C.; Wagner, W.-R.: Informatische Bildungund Medienerziehung. Empfehlung der Gesellschaft für Informatik e. V. erarbeitetvon einem Arbeitskreis des Fachausschusses »Informatische Bildung in Schulen«(7.3), Informatik Spektrum, Band 23, Heft 2, 2000 und LOG IN Nr. 6 1999, Okt.1999,   :https://pygy.co/NG, Stand: 17. 02. 2019.[HP04]Humbert, L.; Puhlmann, H.: Essential Ingredients of Literacy in Informatics.In (Magenheim, J.; Schubert, S., Hrsg.): Informatics and Student Assessment.Concepts of Empirical Research and Standardisation of Measurement in the Areaof Didactics of Informatics. Bd. 1. GI-Edition – Lecture Notes in Informatics(LNI) – Seminars S-1, Dagstuhl-Seminar of the German Informatics Society (GI)19.–24. September 2004, Köllen Druck+Verlag GmbH, Bonn, S. 65–76, 2004,    : 3-88579-435-7,   :https://pygy.co/NI, Stand: 17. 02. 2019.[Ma99]Mayring, P.: Einführung in die qualitative Sozialforschung. Psychologie VerlagsUnion, München, 1999.[Pu03]Puhlmann, H.: Informatische Literalität nach dem PISA-Muster. In (Hubwieser, P.,Hrsg.): Informatik und Schule – Informatische Fachkonzepte im UnterrichtINFOS 2003 – 10. GI-Fachtagung 17.–19. September 2003, München. GI-Edition– Lecture Notes in Informatics – Proceedings P 32, Gesellschaft für Informatik,Köllen Druck + Verlag GmbH, Bonn, S. 135–144, 2003,    : 3-88579-361-X,   :https://pygy.co/NJ, Stand: 17. 02. 2019.[SR18]Seegerer, S.; Romeike, R.: Was jeder über Informatik lernen sollte – Eine Analysevon Hochschulkursen für Studierende anderer Fachrichtungen. In (Bergner, N.;Röpke, R.; Schroeder, U.; Krömker, D., Hrsg.): Hochschuldidaktik der InformatikHDI 2018 – 8. Fachtagung des GI-Fachbereichs Informatik und Ausbildung/-Didaktik der Informatik. Bd. 8. Commentarii informaticae didacticae (CID),Universitäts-Verlag Potsdam, Potsdam, S. 15–28, 2018,    : 978-3-86956-435-7,   :https://t1p.de/k8cu, Stand: 17. 02. 2019.128 Daniel Losch, Ludger HumbertcbaHerausgeber et al. (Hrsg.): Name-der-Konferenz,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Debuggen im Unterricht – Ein systematisches Vorgehenmacht den UnterschiedTilman Michaeli1, Ralf Romeike2Abstract:Selbstständig Fehler in Programmcode zu ﬁnden und zu beheben stellt sowohl eine wichtige Fähig-keit als auch eine große Herausforderung beim Programmierenlernen dar. Debuggen unterscheidetsich von allgemeinen Programmierfertigkeiten und muss explizit gelehrt werden. Dennoch gibt esüberraschend wenige Studien, Materialien und Konzepte, die sich mit der expliziten Vermittlungvon Debuggingfähigkeiten beschäftigen. Eine relevante Debuggingfähigkeit ist ein systematischesVorgehen bei der Fehlersuche. Dieser Beitrag analysiert die Wirksamkeit einer expliziten Vermittlungeines solchen systematischen Vorgehens im Unterricht, insbesondere hinsichtlich der Selbstwirk-samkeitserwartungen und der resultierenden Debuggingleistung der Schülerinnen und Schüler. Zudiesem Zweck haben wir eine Intervention entwickelt, pilotiert und anschließend in einem Pre-Post-Kontrollgruppen-Test-Design untersucht. Die Ergebnisse zeigen sowohl einen signiﬁkanten Anstiegder Selbstwirksamkeitserwartungen als auch der Debuggingleistung in der Versuchsgruppe.Keywords:Debugging; Interventionsstudie; Systematisches Vorgehen1 EinleitungProgrammieren erfordert eine Vielzahl an Kompetenzen, entsprechend stellt deren Ver-mittlung eine zentrale Herausforderung des Informatikunterrichts dar. Dabei müssenSchülerinnen und Schüler nicht nur Programmierkonzepte erlernen, sondern auch dazubefähigt werden, Lösungen zu ﬁnden, wenn sie mit Fehlern konfrontiert werden. Programmesystematisch auf Fehler zu untersuchen, sie zu ﬁnden und zu beheben, stellt eine zentraleKompetenz professioneller Entwicklerinnen und Entwickler dar, die zwischen 20 und 40Prozent ihrer Arbeitszeit dafür aufwenden [Pe17]. Allerdings haben gerade Programmier-anfängerinnen und -anfänger große Probleme im Umgang mit Fehlern. Dies stellt einerhebliches Hindernis beim Programmierenlernen dar.Darüber hinaus wird Debuggen im Kontext von Computational Thinking diskutiert [Ya11],und ﬁndet sich prominent in neueren Curricula wie dem britischen „Computing Curriculum“.1Friedrich-Alexander-Universität Erlangen-Nürnberg, Didaktik der Informatik, Martensstraße 3, 91058 Erlangentilman.michaeli@fau.de2Freie Universität Berlin, Didaktik der Informatik, Königin-Luise-Str. 24-26, 14195 Berlinralf.romeike@fu-berlin.de cba doi:10.18420/infos2019-13Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1292 Tilman Michaeli, Ralf RomeikeIn deutschen Lehrplänen kommt der Begri  „debuggen“ nur selten vor, allerdings fordernfast alle die Fähigkeit, „mit Fehlern umzugehen“. Dennoch gibt es überraschend wenigeStudien, die sich mit der expliziten Vermittlung von Debuggingfähigkeiten beschäftigen.Gleichzeitig mangelt es Lehrerinnen und Lehrern an Konzepten und Materialien für denUnterricht [MR19]. Eine relevante Debuggingfähigkeit ist ein systematisches Vorgehen beider Suche und beim Beheben von Fehlern.Das Ziel dieser Interventionsstudie ist es, den Einﬂuss einer expliziten Vermittlung einessystematischen Vorgehens zum Debuggen zu untersuchen. Im Fokus stehen dabei derEinﬂuss auf(RQ1) Selbstwirksamkeitserwartungenund(RQ2) Debuggingleistung. Dazuhaben wir eine Intervention entwickelt, pilotiert und anschließend in einem Pre-Post-Kontrollgruppen-Test-Design untersucht.2 HintergrundDebuggen beschreibt den Prozess der Suche und des Behebens von Fehlern. Debuggingfä-higkeiten unterscheiden sich von allgemeinen Programmierfertigkeiten, wie [AEH05] oder[Mu08b] zeigen. Während ausgeprägte Debuggingfähigkeiten in der Regel auf entsprechen-de Programmierfähigkeiten schließen lassen, gilt die Umkehrung nicht unbedingt: GuteProgrammierer sind nicht notwendigerweise auch gute Debugger. Dies wirft die Frage auf:Was macht einen „guten“ Debugger aus?Als eine relevante Debuggingfähigkeit wird die Anwendung einessystematischen Vorge-hens, also die systematische Verfolgung eines zielgerichteten Plans zur Fehlersuche und-behebung, gesehen. Dazu werden wiederholt Hypothesen formuliert, in Experimentenüberprüft und gegebenenfalls verfeinert, bis die Ursache des Fehlers gefunden ist (vgl.z.B. [Gi91]). Oftmals kann dieser Prozess abgekürzt werden: Durch Erfahrung und damitdieAnwendung von Heuristiken und Pattern, sind typische Fehler und deren möglicheUrsachen bekannt. Um dieses „Lernen aus früheren Fehlern“ zu unterstützen, führen vieleprofessionelle Entwickler ein Debugging-„Tagebuch“ mit dem sie ihre Debugging-Erfahrungdokumentieren [Pe17]. Darüber hinaus spielt die Anwendung vonDebuggingstrategieneine große Rolle im Debuggingprozess: Durch Strategien, wie beispielsweise dem Tracendes Kontrollﬂusses durchprint-f-Debugging, dem Auskommentieren von Code oder Slicing,können Informationen gewonnen werden, die bei der Formulierung von Hypothesen unddamit der Lokalisierung des Fehlers helfen [Sp18]. Ähnliches wird durch die VerwendungvonWerkzeugenwie dem Debugger ermöglicht.Murphy et al. [Mu08a] genauso wie Kessler and Anderson [KA86] argumentieren, dassDebuggingfähigkeiten explizit unterrichtet werden sollten. Nichtsdestotrotz gibt es über-raschend wenige Studien sowohl in Bezug auf die universitäre Lehre als auch auf denUnterricht, die sich mit der expliziten Vermittlung von Debugginginhalten beschäftigen.130 Tilman Michaeli, Ralf RomeikeDebuggen im Unterricht – Ein systematisches Vorgehen macht den Unterschied 32.1 Debuggen in der HochschullehreChmiel und Loui [CL04] verwendeten freiwillige Debuggingaufgaben, um die Debugging-fähigkeiten der Studierenden zu fördern. Es stellte sich heraus, dass Studierende, die diefreiwilligen Debuggingaufgaben bearbeitet hatten, deutlich weniger Zeit für das Debuggenihrer eigenen Programme benötigten. Dieser Zusammenhang spiegelte sich jedoch nicht inden Klausurergebnissen wider, die entgegen der Erwartungen nur leicht besser waren.Katz und Anderson [KJ87] untersuchten den E ekt der Vermittlung verschiedener Vorge-hensweisen (forward-reasoning, backward-reasoning) beim Debuggen. UnterschiedlichenStudierendengruppen wurde zunächst jeweils eine der Vorgehensweisen vermittelt, ehe sieihr Vorgehen frei wählen konnten. Dabei zeigte sich, dass Studierende weiterhin das ihnenvermittelte Vorgehen anwendeten.Allwood und Björhag [AB91] untersuchten, inwieweit schriftliche Debugging-Hinweiseden Prozess unterstützen können. Während sich die Anzahl der Fehler zwischen Versuchs-und Kontrollgruppe nicht unterschied, war die Anzahl der beseitigten Fehler (insbesonderesemantischer und logischer Art) bei Verfügbarkeit schriftlicher Hinweise signiﬁkant höher.Da gleichzeitig keine Unterschiede in den verwendeten Strategien zwischen den Gruppenerkennbar waren, folgerten die Autoren, dass die Unterschiede auf einer höheren Ebeneliegen müssen und vor allem ein systematisches Vorgehen beim Debuggen entscheidend sei.Böttcher et al. [Bo16] vermittelten ein systematisches Debuggingvorgehen sowie dieVerwendung des Debuggers in einer expliziten Einheit. Dabei wurde das Debuggingver-fahren in einer Live-Demonstration verdeutlicht und eine Übung mit Debuggingaufgabendurchgeführt. Die Auswertung zeigte, dass nur wenige Studierenden den vermittelten syste-matischen Ansatz anwendeten, sondern schnell zu einem unsystematischen „Herumstöbern“zurückkehrten.2.2 Debuggen im UnterrichtCarver und Risinger [CR87] vermittelten einen Debuggingprozess mit LOGO mit viel-versprechenden Ergebnissen: Sie gaben den Schülerinnen und Schülern eine StundeDebugging-Training als Teil eines größeren LOGO-Curriculums. Sie nutzten ein Flow-Chart,das den Debuggingprozess charakterisiert, „Bug Mappings“ und Debugging-Tagebücher,die während der gesamten Zeit im Klassenzimmer vorhanden waren. Die Ergebnisse (ohneKontrollgruppe) zeigten einen Wechsel von Brute-Force hin zu einem systematischenVorgehen bei der Suche nach Fehlern. Darüber hinaus wurde für die Fehlersuche deutlichweniger Zeit benötigt. Die Schülerinnen und Schüler formulierten vor dem Ausprobierendes Codes mehr Hypothesen, achteten stärker auf den Kontrollﬂuss, nahmen wenigerCode-Änderungen vor (insbesondere an fehlerfreien Stellen) und machten weniger neueFehler.Debuggen im Unterricht Ein systematisches Vorgehen macht den Unterschied 1314 Tilman Michaeli, Ralf RomeikeIn einer qualitativen Interviewstudie unter Informatiklehrkräften untersuchten [MR19] dieaktuelle Rolle, die Debuggen im Unterricht spielt. Dabei ist festzustellen, dass Lehrkräfte beiProgrammierproblemen viel und oft individuelle Hilfestellung leisten müssen. In der Folgeeilen sie häuﬁg von Schüler-Rechner zu Schüler-Rechner und versuchen zu helfen (gemeinhinals „Turnschuhdidaktik“ bekannt). Weiterhin mangelt es Lehrkräften an Konzepten undMaterialien für die Vermittlung von Debugging. Insbesondere ist die Vermittlung einessystematischen Vorgehens – obgleich dessen Bedeutung – in der Schule unterrepräsentiert.Zusammenfassend zeigt sich, dass nur wenige Untersuchungen zur expliziten Vermittlungvon Debuggingfähigkeiten existieren und ein Großteil der Studien älter als 25 Jahreist. Nichtsdestotrotz demonstrieren die vorhandenen Ergebnisse, dass sich Debuggenexplizit vermitteln lässt. Sie deuten zudem darauf hin, dass ein systematisches Vorgeheneine entscheidende Rolle in einem erfolgreichen Debuggingprozess spielen kann. Eineempirische Untersuchung, inwieweit Programmieranfängerinnen und -anfänger innerhalbeines Unterrichtssettings von der Vermittlung eines solchen systematischen Vorgehensproﬁtieren, fehlt bislang.3 VorgehenZiel dieser Untersuchung ist es, den Einﬂuss einer expliziten Vermittlung eines systema-tischen Vorgehens zum Debuggen im Unterricht zu untersuchen. Wir adressieren damitfolgende Forschungsfragen:•(RQ1) Hat die Vermittlung eines systematischen Vorgehens einen positiven E ektauf die Selbstwirksamkeitserwartungen der Schülerinnen und Schüler?•(RQ2) Hat die Vermittlung eines systematischen Vorgehens einen positiven E ektauf die Debuggingleistung der Schülerinnen und Schüler?3.1 UntersuchsungsdesignUm diese Forschungsfragen zu beantworten, haben wir ein Pre-Post-Kontrollgruppen-Test-Design gewählt. Zunächst wurde die Intervention in einer 10. Klasse für besondersleistungsstarke Schülerinnen und Schüler (n=14, Greenfoot und Stride) pilotiert, umausgehend von den gewonnenen Erkenntnissen der Durchführung Anpassungen vorzuneh-men. Ergebnisse aus einer solchen Untersuchung ohne Kontrollgruppe helfen uns bei derBeantwortung der Forschungsfragen allerdings nur eingeschränkt, da mögliche Zuwächse inSelbstwirksamkeitserwartungen und Leistung der Schülerinnen und Schüler auch lediglichauf die zusätzliche Übung im Debuggen zurückzuführen seien könnten. Um den Einﬂuss derIntervention im Gegensatz zum reinen Üben von Debuggen, z.B. durch Debuggingaufgaben,zu untersuchen, haben wir zwei 10. Klassen als Versuchs(n=13) und Kontrollgruppe132 Tilman Michaeli, Ralf RomeikeDebuggen im Unterricht – Ein systematisches Vorgehen macht den Unterschied 5(n=15) herangezogen. Dabei wurden explizit zwei Klassen ausgewählt, die von derselbenLehrkraft mit dem identischen Unterrichtskonzept (unter Verwendung von BlueJ undJava) unterrichtet wurden und die im Curriculum zum Untersuchungszeitpunkt gleich weitfortgeschritten waren.   Debugging-aufgabenDebugging-aufgabenFragebogenVersuchsundPilotgruppe:InterventionDebugging-aufgabenFragebogenDebugging-aufgabenDebugging-aufgabenFragebogenKontrollgruppe:Debugging-aufgabenFragebogenPretestPosttestPretest     Posttest Abb. 1: UntersuchungsdesignDer Ablauf der jeweils 90-minütigen Unterrichtseinheiten bestand aus einem Pretest,der Intervention (außer in der Kontrollgruppe) und einem Posttest. Wie in Abbildung1dargestellt, unterteilten sich Preund Posttest jeweils in einen Fragebogen zur Erhebungder Selbstwirksamkeitserwartungen (vier Items mit fünfstuﬁger Likert-Skala) und derLösbarkeit der Aufgaben (nur im Posttest) sowie in Debuggingaufgaben zur Erhebung derLeistung der Schülerinnen und Schüler. Für Letzteres wurde die Anzahl der behobenenFehler (analog zu [Mu08b]) herangezogen, wofür sowohl die Arbeitsblätter, auf denenFehler und deren Behebung von allen Gruppen notiert werden sollten, als auch der Codeausgewertet wurde.3.2 InterventionDie Intervention vermittelt ein systematisches Vorgehen für die Suche und das Behebenvon Fehlern. Das Vorgehen lehnt sich an die sogenanntewissenschaftliche Methode[Ze05]an, die von professionellen Entwicklerinnen und Entwicklern typischerweise implizitangewendet wird [Pe17]: Es werden wiederholte Hypothesen formuliert, in Experimentenveriﬁziert und gegebenenfalls verfeinert, bis die Ursache gefunden ist. Wir verwendendabei eine didaktisch angepasste Variante dieses Vorgehens und unterscheiden explizitzwischen unterschiedlichen Fehlertypen: Compilezeit-, Laufzeitund logischen Fehlern (vgl.Abbildung2). Es wird dasRückgängigmachenvon Änderungen betont, falls Maßnahmenzur Fehlerbehebung nicht erfolgreich sind – gerade da dieses Vorgehen für Schülerinnenund Schüler unnatürlich ist [Si08]. Hierdurch soll vermieden werden, dass die SchülerinnenDebuggen im Unterricht Ein systematisches Vorgehen macht den Unterschied 1336 Tilman Michaeli, Ralf Romeikeund Schüler im Zuge einer fehlgeschlagenen Fehlerbehebung zusätzliche Fehler einbauen –ein typisches Phänomen für Programmieranfängerinnen und -anfänger [GO86]. ggf.Änderungenrückgängigmachen ggf.ÄnderungenrückgängigmachenKompilierzeitfehler Laufzeitfehler Logischer Fehler LiesundverstehedieFehlermeldung! LiesundverstehedieobersteFehlermeldung!PassedeinProgramman. PassedeinProgramman.FindedenFehlerundlokalisieredenrelevantenCode. FindedenFehlerundlokalisieredenrelevantenCode."WorinliegtdieUrsache?"VerfeineredeineVermutungoderstelleeineneueauf! "Warumistdasso?"VerfeineredeineVermutungoderstelleeineneueauf!PassedeinProgramman.SO FINDE ICH FEHLER IN MEINEM PROGRAMMCODEDebuggen leichtgemacht AusführenLäuftdasProgrammohneFehlerab?2 VergleichenStimmenerwartetesundtatsächlichesVerhaltenüberein?3KompilierenÜbersetztdasProgramm?1 Fertig!/|tilman.michaeli@fau.deddi.cs.fau.deggf.Änderungenrückgängigmachen Abb. 2: Vermitteltes VorgehenZum Üben des Debuggens werden typischerweise Debuggingaufgaben verwendet. Aller-dings konfrontieren diese die Schülerinnen und Schüler mit einer großen Menge an fremdemProgrammcode. Das Verständnis und die Einarbeitung in fremden Code stellt jedoch einegroße Herausforderung dar [AB90]. Um sich dem eigentlichen Lernund Untersuchungs-ziel – dem DebuggeneigenerProgramme – anzunähern, verwenden wir daher mehrereaufeinander aufbauende Prototypen eines Programms. Auf diese Art und Weise sehen sichdie Schülerinnen und Schüler in jedem neuen Prototypen nur mit vergleichsweise wenig„fremdem“ Code konfrontiert und kennen sich im „alten“ Code bereits aus. Beispielsweise istim ersten Prototypen des in der Pilotgruppe verwendeten Pongspiels lediglich die Bewegungdes Balles umgesetzt, und im nächsten werden zusätzlich die Schläger und deren Steuerungeingefügt. Da die Debuggingund nicht die Testfähigkeiten der Schülerinnen und Schüleruntersucht werden sollten, war die Anzahl der vorhandenen Fehler je Prototyp gegeben. Ausdem gleichen Grund wurde darauf geachtet, dass das Fehlverhalten des Programms schnellersichtlich war, sodass direkt mit der Fehlerlokalisation begonnen werden konnte.4 Ergebnisse4.1(RQ1) Hat die Vermittlung eines systematischen Vorgehens einen positiven E ektauf die Selbstwirksamkeitserwartungen der Schülerinnen und Schüler?Zunächst untersuchen wir den Zuwachs der Selbstwirksamkeitserwartungen für Pilot-,Versuchsund Kontrollgruppe pre und post, der sich als Mittelwert der vier Items ergibt.Die Antworten der fünfstuﬁgen Likert-Skala wurden auf die Skala 0 (stimme nicht zu) bis 4(stimme zu) abgebildet. Die Mittelwerte bewegen sich folglich zwischen 0 und 4.134 Tilman Michaeli, Ralf RomeikeDebuggen im Unterricht – Ein systematisches Vorgehen macht den Unterschied 7Wir ermitteln, ob ein signiﬁkanter Anstieg der Selbstwirksamkeitserwartungen zwischen Pre-und Post-Test innerhalb der einzelnen Gruppen feststellbar ist. Aufgrund der Stichprobengrö-ßen verwenden wir dazu stets nicht-parametrisierte Verfahren zur Prüfung auf Signiﬁkanz[Ra10]. Mithilfe des Wilcoxon-Vorzeichen-Rang-Tests – einem nicht-parametrischen Testfür abhängige Stichproben – analysieren wir die Rangfolgen im Preund Posttest. In Tabelle1sind die jeweiligen Mediane und der p-Wert des Wilcoxon-Vorzeichen-Rang-Tests (H0:Kein oder negativer Versuchse ekt) dargestellt3.Median pre Median post Wilcoxon-TestPilotgruppe2,75 3,25p=0,044⇤Kontrollgruppe2,25 2,50p=0,083Versuchsgruppe2,25 2,75p=0,001⇤Tab. 1: Einﬂuss auf SelbstwirksamkeitserwartungenWir sehen also in allen drei Gruppen einen Anstieg der Selbstwirksamkeiterwartungen.Dieser ist allerdings nur für die Pilotund die Versuchsgruppe signiﬁkant auf einemSigniﬁkanzniveau von↵=0,05. Die E ektstärken nach Cohen liegen beid=0,56(Pilot)bzw.d=0,54(Versuch), dies entspricht einem mittleren E ekt [Co88].Obgleich das aktive Üben von Debugging die Selbstwirksamkeitserwartungen verbessert,scheint ein systematisches Vorgehen die Selbstwirksamkeitserwartungen stärker positiv zubeeinﬂussen.4.2(RQ2) Hat die Vermittlung eines systematischen Vorgehens einen positiven E ektauf die Debuggingleistung der Schülerinnen und Schüler?Für Unterschiede in der Debuggingleistung vergleichen wir Versuchsund Kontrollgruppein Preund Posttest. Die Debuggingleistung wird anhand der Anzahl der behobenen Fehlergemessen. Ein pre-post-Vergleich der Debuggingleistung innerhalb der einzelnen Gruppenanalog zur Untersuchung der Selbstwirksamkeitserwartungen ist nicht zielführend, da inPreund Posttest unterschiedliche Fehler zu beheben waren.Um festzustellen, ob sich die Leistung der Schülerinnen und Schüler der Versuchsgruppesigniﬁkant von der Leistung der Schülerinnen und Schüler der Kontrollgruppe unterscheidet,prüfen wir, ob die beiden Stichproben derselben Grundgesamtheit entstammen. Nur wenndies nicht der Fall ist, können wir von einem signiﬁkanten Unterschied ausgehen. Auchhier greifen wir ob der Stichprobengröße wieder zu einem nicht-parametrisierten Test,dem Mann-Whitney-U-Test. Im Gegensatz zum Wilcoxon-Vorzeichen-Rang-Tests ist dieserTest für unabhängige Stichproben ausgelegt. Die p-Werte des Mann-Whitney-U-Tests (H0:Stichproben kommen aus derselben Grundgesamtheit) sind in Tabelle2dargestellt.3Signiﬁkante Testergebnisse zu einem Signiﬁkanzniveau von↵=0,05sind durch ein⇤gekennzeichnet.Debuggen im Unterricht Ein systematisches Vorgehen macht den Unterschied 1358 Tilman Michaeli, Ralf RomeikeMann-Whitney-U-TestVersuchvs. Kontrollgruppe Prep=0,191Versuchvs. Kontrollgruppe Postp=0,049⇤Tab. 2: Einﬂuss auf DebuggingleistungDementsprechend können wir die Nullhypothese für den Vergleich der Pre-Tests auf einemSigniﬁkanzniveau von↵=0,05nicht ablehnen: Die Debuggingleistung der Schülerinnenund Schüler unterscheidet sich vor Durchführung der Intervention nicht signiﬁkant. ImGegensatz dazu zeigt sich ein signiﬁkanter Unterschied im Posttest: Die Schülerinnenund Schüler der Versuchsgruppe weisen eine höhere Debuggingleistung (Median = 4, beiinsgesamt 9 zu behebenden Fehlern) auf als die Schülerinnen und Schüler der Kontrollgruppe(Median = 2). Im Posttest wurden für das Ermitteln der Debuggingleistung Aufgaben mithöherem Schwierigkeitsgrad herangezogen, da in beiden Gruppen ein Lerne ekt zwischenPreund Posttest anzunehmen ist. Die E ektstärke nach Cohen liegt beid=0,69undentspricht einem mittleren E ekt [Co88].Die höhere Debuggingleistung spiegelt sich auch in der wahrgenommenen Schwierigkeit derAufgaben durch die Schülerinnen und Schüler wider. Diese wurde ex post im Fragebogenmit Hilfe einer fünfstüﬁgen Likert-Skala erhoben. Wiederum auf die Skala 0 (stimme nichtzu) bis 4 (stimme zu) abgebildet, ergeben sich folgende Mittelwerte:Aufgaben Pre Aufgaben PostKontrollgruppe3,07 1,47Versuchsgruppe3,23 2,92Tab. 3: Mittelwerte fürAufgaben gut lösbarDie Ergebnisse lassen darauf schließen, dass ein systematisches Vorgehen den Unterschiedmachen kann: Wird Schülerinnen und Schülern ein solches systematisches Vorgehen an dieHand gegeben, so können diese ihren Erfolg beim Lokalisieren und Beheben von Fehlernsigniﬁkant verbessern.5 Diskussion und FazitWelche Bedeutung haben diese Ergebnisse für den Informatikunterricht? Nach [MR19]fehlt es Informatiklehrkräften an geeigneten Konzepten für den ThemenkomplexDebuggen:Zwar sind verschiedene Debuggingstrategien sowie der Umgang mit Werkzeugen wie demDebugger teils Unterrichtsgegenstand, allerdings spielt die Vermittlung eines systemati-schen Vorgehens im Unterricht bisher kaum eine Rolle. Diese Studie unterstreicht dabei,wie wichtig es ist, ein systematisches Vorgehen zu vermitteln und liefert Ansatzpunktefür eine Umsetzung. Dabei ist die Unabhängigkeit von Werkzeugen und (textbasierten)136 Tilman Michaeli, Ralf RomeikeDebuggen im Unterricht – Ein systematisches Vorgehen macht den Unterschied 9Programmiersprachen – die in der Schulpraxis eine große Heterogenität aufweisen – zubetonen, so wurde dieselbe Intervention sowohl mit Java und BlueJ, als auch mit Strideund Greenfoot erfolgreich durchgeführt. Weiterhin legt dieser Ansatz einen Fokus auf dieSelbstständigkeitder Schülerinnen und Schüler in der Fehlersuche und -behebung, um dasProblem der „Turnschudidaktik“ zu adressieren.Die vorgestellte Intervention stellt einen ersten Baustein für die Förderung von Debug-gingfähigkeiten dar. Dieser sollte um die Vermittlung von konkreten Debuggingstrategien,Werkzeugen und Heuristiken erweitert werden.Eine mögliche Einschränkung der Validität dieser Studie stellt die geringe Stichprobengrößeund die nicht vorhandene Randomisierung der Schülerinnen und Schüler dar. Sie wurdenvon derselben Lehrkraft nach demselben Konzept unterrichtet und stammen von derselbenSchule. Dies könnte die Aussagekraft bezüglich der Verallgemeinerung der Ergebnisseauf die Grundgesamtheit einschränken. Wir planen daher, diese Studie auf eine größereStichprobe auszuweiten.Zusammenfassend zeigt unsere Untersuchung, dass eine solche Intervention einen vielver-sprechenden Ansatz für die Vermittlung von Debuggingfähigkeiten darstellt. Die Vermittlungeines systematischen Vorgehens zum Finden und Beheben von Programmierfehlern hat einenpositiven Einﬂuss auf die Debugging-Selbstwirksamkeitserwartungen. Schülerinnen undSchüler, die ein systematischen Vorgehen vermittelt bekommen haben, zeigen zudem höhereLeistungen im Debuggen als Schülerinnen und Schüler, die Debuggen ausschließlich geübthaben: Ein systematisches Vorgehen der Schülerinnen und Schüler macht den Unterschied.Literaturverzeichnis[AB90]Allwood, Carl Martin; Björhag, Carl-Gustav: Novices’ debugging when programming inPascal. International Journal of Man-Machine Studies, 33(6):707–724, 1990.[AB91]Allwood, Carl Martin; Björhag, Carl-Gustav: Training of Pascal novices’ error handlingability. Acta Psychologica, 78(1-3):137–150, 1991.[AEH05]Ahmadzadeh, Marzieh; Elliman, Dave; Higgins, Colin: An analysis of patterns of debuggingamong novice Computer Science students. Proceedings of the 10th annual SIGCSEconference on Innovation and Technology in Computer Science Education (ITiCSE ’05),37(3):84–88, 2005.[Bo16]Bottcher, Axel; Thurner, Veronika; Schlierkamp, Kathrin; Zehetmeier, Daniela: Debuggingstudents’ debugging process. Proceedings Frontiers in Education Conference, FIE,2016-Novem, 2016.[CL04]Chmiel, Ryan; Loui, Michael C: Debugging: from Novice to Expert. Proceedings ofthe 35th SIGCSE technical symposium on Computer science education SIGCSE ’04,36(1):17, 2004.[Co88]Cohen, Jacob: Statistical power analysis for the behavioural sciences. Hillsdale, NJ: erlbaum,1988.Debuggen im Unterricht Ein systematisches Vorgehen macht den Unterschied 13710 Tilman Michaeli, Ralf Romeike[CR87]Carver, McCoy Sharon; Risinger, Sally Clarke: Improving children’s debugging skills. In:Empirical studies of programmers: Second workshop. Ablex Publishing Corp., S. 147–171,1987.[Gi91]Gilmore, David J: Models of debugging. Acta psychologica, 78(1-3):151–172, 1991.[GO86]Gugerty, Leo; Olson, G.: Debugging by skilled and novice programmers. ACM SIGCHIBulletin, 17(4):171–174, 1986.[KA86]Kessler, Claudius M; Anderson, John R: A model of novice debugging in LISP. In:Proceedings of the First Workshop on Empirical Studies of Programmers. S. 198–212,1986.[KJ87]Katz, Irvin R.; John R. Anderson: Debugging: An Analysis of Bug-Location Strategies.Human-Computer Interaction, 3(4):351–399, 1987.[MR19]Michaeli, Tilman; Romeike, Ralf: Current Status and Perspectives of Debugging in theK12 Classroom: A Qualitative Study. In (IEEE, Hrsg.): Global Engineering EducationConference (EDUCON). 2019.[Mu08a]Murphy, Laurie; Lewandowski, Gary; McCauley, Renée; Simon, Beth; Thomas, Lynda;Zander, Carol: Debugging: the good, the bad, and the quirky – a qualitative analysis ofnovices’ strategies. Proceedings of the 39th SIGCSE technical symposium on ComputerScience Education (SIGCSE ’08), 40:163, 2008.[Mu08b]Murphy, Laurie; Simon, Beth; Fitzgerald, Sue; Lewandowski, Gary; Thomas, Lynda;Zander, Carol: Debugging: ﬁnding, ﬁxing and ﬂailing, a multi-institutional study of novicedebuggers . Computer Science Education, 18(2):93–116, 2008.[Pe17]Perscheid, Michael; Siegmund, Benjamin; Taeumel, Marcel; Hirschfeld, Robert: Studyingthe advancement in debugging practice of professional software developers. SoftwareQuality Journal, 25(1):83–110, 2017.[Ra10]Rasch, Björn; Friese, Malte; Hofmann, Wilhelm; Naumann, Ewald: , Quantitative Methoden2: Einführung in die Statistik für Psychologen und Sozialwissenschaftler (3., erweiterteAuﬂage), 2010.[Si08]Simon, Beth; Bouvier, Dennis; Chen, Tzu-yi; Lewandowski, Gary; Mccartney, Robert;Sanders, Kate: Common sense computing (episode 4): debugging. Computer ScienceEducation, 18(2):117–133, 2008.[Sp18]Spinellis, Diomidis: Modern debugging: the art of ﬁnding a needle in a haystack. Commu-nications of the ACM, 61(11):124–134, 2018.[Ya11]Yadav, Aman; Zhou, Ninger; Mayﬁeld, Chris; Hambrusch, Susanne; Korb, John T: Introdu-cing Computational Thinking in Education Courses. In: Proceedings of the 42Nd ACMTechnical Symposium on Computer Science Education. SIGCSE ’11, ACM, New York,NY, USA, S. 465–470, 2011.[Ze05]Zeller, Andreas: Why Programs Fail: A Guide to Systematic Debugging. Elsevier, 2005.138 Tilman Michaeli, Ralf RomeikecbaArno Pasternak [et. al.] (Hrsg.): INFOS 2019 Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Zur Relevanz eines Prozessbereiches Interaktion undExploration im Kontext informatischer Bildung imPrimarbereichKathrin Müller1, Carsten Schulte2, Johannes Magenheim3Abstract:Im Zusammenhang mit der aktuellen Diskussion über eine informatische Bildung für alleab der Primarstufe wurden im vergangenen Jahr zwei Empfehlungen für Kompetenzen im Bereichder frühen informatischen Bildung verö entlicht. Ein wesentliches Unterscheidungsmerkmal beiderDokumente ist die Einführung eines neuen Prozessbereiches P0 ”Interagieren und Explorieren” inder Expertise der Stiftung Haus der kleinen Forscher. Im Rahmen der GI-Empfehlungen wird dieserProzessbereich nur indirekt aufgenommen. Darüber hinaus gibt es zahlreiche Diskussionen über dieSinnhaftigkeit dieses neuen Prozessbereichs. Übergreifendes Ziel dieses Artikels ist es, die Bedeutungund Anwendung des Prozessbereichs P0 zu erläutern: Was verbirgt sich hinter diesem Prozessbereichund wie kann er mit anderen Inhaltsbereichen zu relevanten Kompetenzfeldern kombiniert undmethodisch adäquat umgesetzt werden? Es wird u.a. gezeigt, dass mit dem Prozessbereich P0 ein dernaturwissenschaftlichen Methodik ähnlicher experimenteller empirischer Zugang zum Verständnisvon Informatiksystemen und Algorithmen ermöglicht wird.Keywords:Interaktion und Exploration; Kompetenzen; Explorieren1 EinleitungIm Zuge der Diskussion um eine informatische Bildung für alle hat auch die Frage nachinformatischer Bildung ab der Primarstufe stark zugenommen und damit nach passendenCurricula. Im Zuge dieser Diskussion wurden zuletzt mit der Expertise der Stiftung Haus derkleinen Forscher (HdkF)[St17] und den GI-Standards [Ge19] für die Primarstufe zwei Emp-fehlungen für Kompetenzen im Bereich früher informatischer Bildung verö entlicht. BeideDokumente basieren auf den bisherigen Inhaltsund Prozessbereichen der GI-Standards.Damit liegt ihnen gemeinsam auch ein Kompetenzbegri  in Orientierung an Weinert[We01] zugrunde, nach dem sich die Performanz von Kompetenzen als konkrete Tätigkei-ten (Prozessdimenion) von Lernenden in einem speziﬁschen Kontext (Inhaltsdimension)1Universität Paderborn, Didaktik der Informatik, Fürstenallee 11, 33102 Paderborn, Deutschlandkathrin.mueller@uni-paderborn.de2Universität Paderborn, Didaktik der Informatik, Fürstenallee 11, 33102 Paderborn, Deutschlandcarsten.schulte@uni-paderborn.de3Universität Paderborn, Didaktik der Informatik, Fürstenallee 11, 33102 Paderborn, Deutschlandjohannes.magenheim@uni-paderborn.de cba doi:10.18420/infos2019-14Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1392 Kathrin Müller, Carsten Schulte, Johannes Magenheimbeobachten und ggf. messen lassen. Die Empfehlungen des HdkFs enthalten einen neuenProzessbereich P0 “Interagieren und Explorieren” (I&E) der in den GI Empfehlungen nurindirekt aufgenommen ([Ge19] S. VI,3,7) wird. In diesem Zusammenhang stellen sich eineReihe von Fragen, zu deren kritischer Diskussion und Beantwortung der Artikel beitragenmöchte:•Kann I&E als eigenständiger Prozessbereich einer informatischen Kompetenz ange-sehen werden oder handelt es sich lediglich um eine Vermittlungsmethodik?•Bis zu welchem Grad kann vom I&E eines Informatiksystems auf dessen innere,informatische Struktur und seine handlungsstrukturierende Wirkung auf dessenNutzerInnen geschlossen werden?•Welche pädagogischen Interventionen seitens der Lehrkräfte sind für das zielgerichteteund erkenntnisfördernde I&E von Informatiksystemen durch Schülerinnen und Schülererforderlich?•Kann systematisches I&E im Informatikunterricht auf methodische Erfahrungen desnaturwissenschaftlichen Unterrichts bezüglich der Beobachtung von Naturphänome-nen und der Gestaltung von Experimenten zurückgreifen?•Welchen Bildungswert beinhaltet systematisches I&E von Informatiksystemen imInformatikunterricht und welchen Beitrag zur informatischen Bildung kann damitgeleistet werden?Übergreifendes Ziel dieses Artikels soll es sein, zu erläutern was I&E im Rahmen informa-tischer Bildung für die Primarstufe bedeutet, welche Möglichkeiten dieser Prozessbereichbietet und welche Grenzen mit ihm verbunden sind. Dazu wird zunächst dargestellt, wassich hinter I&E als Kompetenzdimension verbirgt und wie der Prozessbereich mit denInhaltsbereichen kombiniert werden kann. Im weiteren Verlauf wird insbesondere dieMethodik des Explorierens im Bereich der informatischen Bildung theoretisch und anhandvon Beispielen erläutert.2 I&E als Prozessdimension eines KompetenzmodellsUm den Stellenwert der Prozessdimension I&E im Rahmen des Kompetenzmodells derGI-Empfehlungen einzuordnen, ist zunächst festzuhalten, dass sich die GI-Empfehlungennicht auf ein empirisch validiertes Kompetenzstrukturmodell beziehen, das mit Methodender Kompetenzforschung entwickelt wurde. Es handelt sich vielmehr um ein im Diskursmit ExpertenInnen entwickeltes normatives Modell, das einen hohen Grad an Praxisbezugzur Fachwissenschaft und Fachdidaktik Informatik aufweist, einen wesentlichen Beitragzur Allgemeinbildung der SchülerInnen postuliert und mittlerweile im Hinblick auf dieGestaltung einschlägiger Curricula von großer bildungspolitischer Bedeutung ist. In denfolgenden Abschnitten dieses Beitrags wird, analog zur Begründung der Prozessund140 Kathrin Müller et al.Exploration und Interaktion 3Inhaltsdimensionen des GI-Kompetenzmodells, dargelegt, weshalb I&E als eigenständigeProzessdimension das GI-Modell sinnvoll erweitern kann.2.1 Bezüge zu Fachwissenschaft und Fachdidaktik InformatikIn der Fachwissenschaft Informatik ist das I&E von Informatiksystemen von großer Be-deutung. Zahlreiche Vorgehensmodelle zur Softwareentwicklung weisen entsprechendeArbeitsphasen im Kontext der Anforderungsanalyse und dem Re-engineering von Informa-tiksystemen aus. Sie sind der Phase des Modellierens und Implementierens vorgeschaltet.Die Exploration bereits bestehender und die (Neu-)gestaltung von Informatiksystemen sinddabei wesentliche Phasen eines iterativen, zyklischen Entwicklungsprozesses von Informa-tiksystemen [Sc17]. Die in dieser Phase erforderliche Analyse von Anwendungsfällen (UseCases) basiert zunächst auf dem systematischen Testen und Beobachten von Funktionendes Informatiksystems und der Interaktionen der involvierten Nutzer mit dem System bzw.deren Interaktionen untereinander. Interagieren und Explorieren eines Informatiksystemsbeschränkt sich daher nicht auf seine technischen Funktionen, sondern berücksichtigt auchdessen sozio-technischen Aspekte und trägt damit seinem Charakter als hybrides Inter-aktionssystem Rechnung [SB18]. Für Experten wäre ein weiterer Schritt einer derartigenDekonstruktion des Informatiksystems die Analyse des vorhandenen Sourcecodes sowieder zugehörigen Dokumentation inkl. der evtl. vorhandenen (graﬁschen) ArchitekturundModellbeschreibungen.In der Fachdidaktik gehören derartige Explorationsphasen ebenfalls zum fachlichen undmethodischen Repertoire einiger fachdidaktischer Ansätze.Beispiele bzw. Vorläufer des I&E mit Bezug zu den zuvor genannten fachwissenschaftli-chen Aspekten existieren im Bezug auf die Betrachtung komplexer Systeme (Benutzung,Wartung und Erweiterung von Softwaresystemen) [Mo], die Analyse und Modellierungvon Standardsoftware [Mo] und Benutzen-Analysieren-Gestalten [HH15]. EntsprechendeAnsätze aus dem internationalen Raum sind beispielsweise ”Consume before Produce” [In]und PRIMM (Predict-Run-Inverstigate-Modify-Make)[SW17].Je nach Kenntnisstand der Lerngruppe können durch geeignete Aufgabenstellungen undInterventionen der Lehrkräfte von den Lernenden wichtige Kenntnisse und Kompetenzengewonnen werden, die zum Verständnis und der Gestaltung von Informatiksystemen bei-tragen. Dieser Anspruch an den Informatikunterricht schlägt sich auch in entsprechendenempirisch fundierten Kompetenzstrukturund -entwicklungsmodellen nieder [MSS].Dabei dient das I&E mit Informatiksystemen aus dem Erfahrungsbereich der SchülerInnennicht nur als Anknüpfungspunkt und motivierender Einstieg in einen informatischen Themen-bereich im Unterricht. Es geht beim Erwerb dieser Kompetenzdimension vielmehr darum,Informatiksysteme aus dem Alltag der SchülerInnen als solche zu identiﬁzieren, über ihreFunktion deren inhärente informatische Prinzipien zu erschließen und ihre Wirkungsweiseals hybrides Interaktionssystem mit seinen Auswirkungen auf das soziale Handlungsumfeldder NutzerInnen zu verstehen. Wenn I&E in diesem Sinne im Informatikunterricht realisiertRelevanz eines Prozessbereiches Interaktion und Exploration 1414 Kathrin Müller, Carsten Schulte, Johannes Magenheimwird, leistet er auch einen wichtigen Beitrag zur Allgemeinbildung der SchülerInnen, da siemit dieser Kompetenz befähigt werden, auch zukünftige Informatiksysteme als solche zuidentiﬁzieren und sich wesentliche Fragen zu deren Funktion, ihren in Praxis umgesetzteninformatischen Prinzipien und deren gesellschaftlichen Auswirkungen zu beantworten.2.2 I&E im Kontext der Prozessdimensionen der GI-EmpfehlungenNachdem die fachliche und fachdidaktische Bedeutung der Prozessdimension I&E (P0)diskutiert wurde, soll nun ihr Stellenwert im Zusammenhang mit den anderen Prozessdi-mensionen des GI-Modells erörtert werden. Diese Prozessdimensionen sind: Modellierenund Implementieren (P1), Begründen und Bewerten, (P2) Strukturieren und Vernetzen (P3),Kommunizieren und Kooperieren (P4) sowie Darstellen und Interpretieren (P5). Beim Blickauf diese Aufzählung wird deutlich, dass nur P1 einen genuin informatischen Bezug aufweist,während die anderen Prozessdimensionen eher generisch sind und auch in anderen Fächernals wichtige Kompetenzdimensionen angesehen werden könnten. Hauptsächlich durch ihreKontextualisierung in den verschiedenen informatischen Inhaltsbereichen erhalten sie ihreBedeutung für die Informatik. Daraus ergibt sich zweierlei: Einerseits zeigt sich, dassI&E eine wichtige Ergänzung bei den Prozessdimensionen des GI-Modells mit expliziteminformatischem Bezug darstellt. Andererseits gilt es zu überprüfen, ob die ProzessdimensionP0 auch in den verschiedenen Inhaltsbereichen I1 – I5 zu sinnvollen kontextualisiertenKompetenzanforderungen führt, wie es bei P1-P5 der Fall ist. Dies soll jetzt für die fünfInhaltsbereiche Information und Daten (I1), Algorithmen (I2), Sprachen und Automaten(I3), Informatiksysteme (I4) sowie Informatik, Mensch und Gesellschaft (I5) in knapperForm geschehen.Information und Daten (I1):Thematischer Schwerpunkt dieses Inhaltsbereiches bildetnach den GI-Empfehlungen für die primäre informatische Bildung u.a. die Codierung undDecodierung von Information sowie das Verund Entschlüsseln. Im folgenden Beispielkonzentrieren wir uns auf den Aspekt ”Kommunikation und Sicherheit”.Kindern ist das Verschicken von Nachrichten z.B. in Form von Briefen bekannt. Einigehaben sicherlich bereits erste Erfahrungen mit Geheimschriften oder Sprachen im Sinneeiner vertraulichen Kommunikation unter Freunden gemacht. An diesem Punkt kann imUnterricht zunächst angeknüpft werden: Kinder verschicken unterschiedliche Nachrich-ten und überlegen, wie sie sicherstellen können, dass jemand Fremdes diese Nachrichtnicht versteht. Dabei entwickeln sie z.B. selbst altersentsprechende Geheimschriften oderSprachen und analysieren diese oder gegebene auf Sicherheitsmerkmale. Fragestellungist hier beispielsweise: Was ist notwendig, damit sowohl Sender als auch Empfänger dieNachricht verstehen, aber kein Fremder? Im Anschluss kann ein Übergang zu bekanntenVerschlüsselungsverfahren wie z.B. Skytale und Caeser stattﬁnden.Ein weiterer, primär explorativer Aspekt, kann anschließend die Untersuchung von unter-schiedlichen Passwörtern z.B. mit dem Verschlüsselungsverfahren Caesar sein. Fragestellun-142 Kathrin Müller et al.Exploration und Interaktion 5gen während der Exploration sind beispielsweise: Welche Passwörter lassen sich schnellerknacken als andere? Wie unterscheiden sich die unterschiedlichen Passwörter (z.B. in Längeoder Anzahl unterschiedlicher Zeichen etc.)? Somit können, wie bereits zuvor erwähnt, ausder Exploration heraus Aussagen über die Sicherheit von Passwörtern und Anforderungenan geeignete Passwörter gewonnen werden.Folglich unterstützt die Prozessdimension P0 hier unter Anderem die Entwicklung der inden GI-Standards deﬁnierten Kompetenzen: ”nutzen und entwickeln Vereinbarungen, umDaten zu verschlüsseln und zu entschlüsseln”, ”nutzen und entwickeln Vereinbarungen zurÜbermittlung von Nachrichten” sowie ”geben an, dass Vereinbarungen notwendig sind, umDaten zu codieren und zu decodieren” [Ge19].Algorithmen (I2):Dieses Kompetenzfeld weist eine hohe A nität zu dem im Hinblick aufAlgorithmen beschriebenen Kompetenzbereich 5.5 der ”KMK-Kompetenzen in der digitalenWelt” auf [Ku17]. Insbesondere der Kompetenzbereich 5.5.2 ”Algorithmische Strukturenin genutzten digitalen Tools erkennen und formulieren” erö net im Zusammenhang mitI&E einen empirisch-analytischen Zugang zum Verständnis von Algorithmen in alltäglichverwendeten digitalen Werkzeugen und Medien. Dies betri t eine große Bandbreite vonTools und Anwendungssituationen, wie etwa die Berechnung von Ergebnissen in derTabellenkalkulation, die Suchfunktion in Texten, die Preisgestaltung bei der ProduktundServicesuche im Internet in Abhängigkeit von Tageszeit, verwendetem Gerät und Browser,etc. (zur Methodik vgl. Abschnitt 2.3).Aus dem I&E von Informatiksystemen können über systematische Beobachtungen, z.B. mitentsprechenden Beobachtungsprotokollen, ”Wenn-Dann-Beziehungen” gefolgert werden,welche die Systemreaktionen als Folge von User-Interaktionen mit dem System beinhalten.Gleiches gilt für das beobachtbare ”Verhalten” eines Informatiksystems beim Input vonunterschiedlichen Messwerten über Sensoren (z. B. bei Robotern). Auf diese Weise kannauf interne Verarbeitungsmechanismen des Systems und den ihnen zugrundeliegendenAlgorithmen geschlossen werden. An diesem Punkt existiert eine enge Verzahnung mitdem Inhaltsbereich Informatiksysteme, die sich aus der Tatsache ergibt, dass Algorithmenimmer in einem Informatiksystem implementiert sind. Ferner kann z.B. die empirischeBeobachtung des Laufzeitverhaltens unterschiedlicher Algorithmen in Abhängigkeit vonder Dateneingabe einen Zugang zu Komplexitätsbetrachtungen von Algorithmen erö nen.Die Prozessdimension I&E trägt hier unter anderem zum Aufbau der in den GI-Standardsdeﬁnierten Kompetenezen ”beschreiben Algorithmen alltagssprachlich” und ”vergleichenAlgorithmen unter Verwendung der Fachsprache” [Ge19] bei.Sprachen und Automaten (3):Hier können den SchülerInnen aus ihrem Alltag bekann-te Automaten (z.B. Getränkeautomat, Verkehrsampel) als Explorationsgegenstand einesInformatiksystems dienen. Systematisches Beobachten und eine Variation der Eingabe-möglichkeiten erschließen dann den Zugang zu wesentlichen Aspekten der informatischenKonzepte von Automat und Sprache, wie Einund Ausgabealphabet, Systemzustände,Relevanz eines Prozessbereiches Interaktion und Exploration 1436 Kathrin Müller, Carsten Schulte, Johannes Magenheimakzeptierte Eingaben etc.. Durch die Untersuchung der Lebenswelt im Bezug auf Automatenträgt die Exploration somit zur in den GI-Standards deﬁnierten Kompetenz: ”beschreibenAutomaten in ihrer Lebenswelt als selbsttätig arbeitende Maschinen” [Ge19] bei.Informatiksysteme (I4):Das I&E mit/von Informatiksystemen ist, wie zuvor bereitsbeschrieben, ein zentraler Inhaltsbereich dieser Prozessdimension und kann auch in derGrundschule mit unterschiedlichen altersadäquaten Systemen, z.B. Robotern, durchgeführtwerden. Wir zeigen hier am Beispiel des Lernroboters Ozobot4wie das InformatiksystemRoboter exploriert werden kann.Ozobots (Ozobot bit) besitzen lediglich einen Farbsensor, sowie als Aktoren eine Farb-LEDund zwei Motoren zum Antrieb der Räder. Sie folgen schwarzen Linien und reagieren aufvordeﬁnierte Farbcodes. Darüber hinaus sind sie mit einer Blocksprache programmierbar.Aufbau und Funktionsweise können z.B. wie folgt exploriert werden:Ein Unterricht mit Ozobots kann z.B. mit der Exploration der Linienverfolgung starten:Wie verhält sich der Ozobot an Kreuzungen? Nimmt er immer die gleiche Richtung?Ändert sich die Richtung? Gibt es ein Muster? Welche Hypothesen gibt es zur Ursachedieses Verhaltens? Im weiteren Verlauf kann dann exploriert werden, welche Eigenschaftendie Linien haben müssen, auf denen der Roboter fährt. Hier können unterschiedlicheFarben, unterschiedlich breite Linien, unterschiedliche Kurven etc. getestet werden. DieErgebnisse können auf entsprechenden Arbeitsblättern protokolliert werden. Aus diesenProtokollen können die Kinder anschließend Schlussfolgerungen ziehen, wie z.B. welcheFarben der Ozobot ”erkennt” und wie er auf die Farben reagiert. Darauf basierend könnendann Hypothesen über die Architektur des Ozobots aufgestellt werden. Wie kann es dazukommen, dass die LED in der Farbe der Linie leuchtet? Welche Bauteile sind dazu notwendigund welche Prozesse innerhalb des Ozobots? Farbcodes können exploriert werden, indemdas Verhalten des Ozobots bei unterschiedlichen Farbcodes protokolliert wird, oder indemdie Reaktion des Roboters vorgegebenen Reaktionsmöglichkeiten zugeordnet werden. Aufdiese Weise können sich die Kinder zunächst die Funktionsweise erschließen. Anschließendkönnen, z.B. auf Basis der bereits aufgestellten Hypothesen, Überlegungen zur Architekturaufgestellt werden, wie beispielsweise: Der Roboter braucht etwas, mit dem er die Farbenund Linien erkennen kann, er besitzt einen Motor und Räder, eine LED, etc. Über dieseÜberlegungen kann dann ggf. mit Unterstützung der Lehrperson auf die einzelnen Bauteiledes Roboters und das EVA-Prinzip geschlossen werden.Ein Anwendungsbeispiel über die Ozobots hinaus ist die Möglichkeit, im Alltag mittelsprotokollierter Beobachtung nach Informatiksystemen zu suchen. Wo ist mir in meinemAlltag ein Informatiksystem begegnet? Warum ist dies ein Informatiksystem?Die Prozessdimension I&E trägt hier ebenfalls zum Aufbau von in den GI-Standardsdeﬁnierten Kompetenzen bei. Dies sind unter anderem: ”interagieren zielgerichtet mitInformatiksystemen” und ”geben grundlegende, allgemeingültige Beschreibungen derFunktion und Arbeitsweise von Informatiksystemen an (EVA-Prinzip)” [Ge19].4https://ozobot.com/products144 Kathrin Müller et al.Exploration und Interaktion 7Informatik, Mensch und Gesellschaft (I5):Die Prozessdimension I&E betrachtet Infor-matiksysteme nicht nur als technische Artefakte, sondern als sozio-technische Systememit einer hybriden Interaktionsstruktur. Insofern werden die mit dem Informatiksystemverbundenen Interaktionen stets auch im sozialen Kontext seiner Nutzung gesehen. So kannmit der Prozessdimension I&E beispielsweise das Nutzungsverhalten unterschiedlicherUser bei einer gegebenen Benutzungsoberﬂäche beobachtet und diese Beobachtungen imHinblick auf softwareergonomische Fragestellungen bewertet werden. Daraus lassen sichdann wiederum Anforderung an die Re-konstruktion der Benutzungsoberﬂäche im Rahmeneiner Systemgestaltung ableiten.2.3 Methodik der Prozessdimension I&ENachdem die Kontextualisierung der Prozessdimension I&E in den verschiedenen Inhaltsbe-reichen aufgezeigt wurde und sich daraus relevante informatische Kompetenzanforderungenergeben, muss nun geklärt werden, wie zugehörige Lernprozesse zu einem für SchülerInnenmotivierenden und erfolgreichen Kompetenzerwerb organisiert werden können.Im Vordergrund steht das eigenständige explorative Handeln der SchülerInnen im Sinneder Prozessdimension I&E, das für sie zu informatischem Kenntnisgewinn führen kann(vgl.[Be16]).Dabei sollte im konstruktivistischen Sinn einerseits die natürliche Freude der Kinder amforschenden, selbst-entdeckenden Lernen gefördert und andererseits Hilfestellung durchdie Lehrkraft bei der systematischen Gestaltung und Auswertung der Beobachtungen beimUmgang mit Informatiksystems gegeben werden. Dies stellt die Lehrkraft vor anspruchsvolleModerationsaufgaben bei der kognitiven Aktivierung der SchülerInnen. In der Grundschuleund im Primarbereich können dabei ko-konstruktive Methoden, wie z.B. das ”sustainedshared thinking” [Ho12] zum Einsatz kommen, bei denen die SchülerInnen durch o eneFragen und Lernimpulse der Lehrkraft weitgehend autonom Aussagen und Vermutungenzu ihren Explorationserfahrungen äußern können. In einem weiteren Schritt können dieBeobachtungen dann systematisch und formalisiert erfasst, analysiert und auf der Basisdieses Datenmaterials Hypothesen zum Zusammenhang von beobachtetem Systemverhaltenund der inneren Struktur bzw. den inneren Zuständen des Informatiksystems formuliertwerden. Daran könnte sich eine Phase zur (graﬁschen) Beschreibung von Systemzuständen,Datenstrukturen bzw. Einund Ausgabewörtern sowie ggf. von Algorithmen des erkundetenInformatiksystems anschließen. Je nach Intention und Zielsetzung kann dann ein Übergangzur (Neu-)gestaltung des Informatiksystems mit Modellierungsund Implementierungsphaseerfolgen.Falls Lernprozesse zum Kompetenzerwerb in Bezug auf I&E in den verschiedenen Inhalts-bereichen nach diesen Prinzipien organisiert werden wird deutlich, dass die Methodik:•über ein anfängliches unverbindliches Herumspielen und Ausprobieren nach dem ”trialand error”Prinzip hinausgeht und sinnerschließende Fragen und eine auswertbareBeobachtungsmethodik beinhalten sollte,Relevanz eines Prozessbereiches Interaktion und Exploration 1458 Kathrin Müller, Carsten Schulte, Johannes Magenheim•gezielte, erkenntnisfördernde Interventionen der Lehrkraft, abhängig vom Kenntnis-stand der Lernenden, den Lernprozess unterstützen können, ohne das entdeckendeLernen der SchülerInnen zu behindern,•systematische empirische Beobachtungen von auszuwählenden relevanten Parameternbeinhaltet, die im Hinblick auf Fragestellungen zum Informatiksystem ausgewertetwerden können und zu einem Erkenntnisgewinn über dieses System beitragen.•die Beobachtungen und Erkenntnisse so angelegt werden, dass von der von au-ßen sichtbaren Funktionsebene (Nutzerperspektive) ausgehend anhand geeigneterMerkmale/Ereignisse/Beobachtungen auf die innere Bauweise (ArchitekturundKonstruktionsperspektive) geschlossen werden kann, bzw. zumindest begründeteVermutungen über diese Bauweise angestellt werden können.Besonders der vorletzte methodische Aspekt verdeutlicht, dass hier im Informatikunterrichtauch Methoden eingesetzt werden können, die man aus dem naturwissenschaftlichenUnterricht beim Durchführen und Auswerten von Experimenten kennt. Das für das I&Eausgewählte Informatiksystem dient dabei nicht lediglich als Einstiegsbeispiel, sondern istzentraler Unterrichtsgegenstand zum Kompetenzerwerb.Eine di erenzierte Darstellung, wie im Kontext der Prozessdimension P0 das Explorierenund Gestalten von Informatiksystemen als iterativer, wechselseitig verwobener Prozesserfolgen kann, ist in [Sc17] zum Explorationsund Gestaltungskreis in der informatischenBildung sowie zum Informatikkreis als naturwissenschaftlich-technischer Lernmethodebeschrieben [Fr19]. Beiden Konzepten liegt die Au assung zugrunde, dass das Exploriereneines existierenden Informatiksystems, ganz im Sinne des informatischen Re-engineerings,nicht nur zum Systemverständnis beiträgt, sondern auch zu dessen Weiterentwicklungoder zur Neugestaltung eines Informatiksystems führen kann, das auf ähnlichen Prinzipienaufgebaut ist, wie das zuvor explorierte.3 FazitDie Prozessdimension I&E verknüpft das Nutzen eines digitalen Artefakts (Interaktion) mitder fachlich orientierten Analyse und Erkundung der Architektur (dazu können zählen dieinnere Bauweise, Wirkprinzipien, Funktionsweisen, verwendete informatische Konzeptewie Datenstrukturen und Algorithmen, usw.). Die genaue Bezeichnung von Exploration,sowie Ziele und methodische Hinweise sind zusammengefasst in Abb.1dargestellt. Durchdie im Papier beschriebenen fachwissenschaftlichen und fachdidaktischen Bezüge wirddie Rolle von I&E in informatischen Kontexten verdeutlicht. Diese Rolle wurde anhandvon Beispielen und Kompetenzen, auch im Kontext der GI-Standards, insbesondere derPrimarstufe, weiter konkretisiert.Zusammenfassend zeigt sich, dass I&E als Prozessbereich nicht nur auf die Methodikbeschränkt ist. In gewisser Weise stellt er das ergänzende Gegenstück zum Prozessbereich146 Kathrin Müller et al.Exploration und Interaktion 9Modellieren und Implementieren dar. Dieser lässt sich ebenfalls nicht auf die Methodikbeschränken. Für das Programmieren braucht man wie für das I&E nicht nur Prozess-wissen, sondern auch Inhaltswissen; ebenso sind beide auf speziﬁsche unterrichtlicheVorgehensweisen bezogen, die methodisch unterschiedlich ausgestaltet werden könnenund müssen. Der Prozessbereich I&E kann als vorgeschaltete Erkundungsphase für das’Re-enginnering’ eines bestehenden Informatiksystems angesehen werden oder lediglichdem Wissenserwerb der Lernenden dienen, um ggf. in einem späteren Transferprozess dasWissen zur (Neu-)gestaltung eines Informatiksystems anzuwenden. In dieser Sichtweiseist der Prozessbereich Modellieren und Implementieren alleine nicht ausreichend für eineinsgesamt gelingende informatische Bildung. Denn die konstruierende Perspektive desModellierens und Implementierens kann und sollte durch die analytische und reﬂektierendeSichtweise der Exploration ergänzt werden. In diesem Sinne gehören auch der Explorations-und Gestaltungskreis zusammen[Sc17].Exploration bezeichnet:1. ein Verfahren, um Erkenntnisse zu erlangen (methodische bzw. Prozesskomponente)  2. einen generellen Zugang zu Technologie im Alltag (Bildungspolitikbzw.  Kompetenzkomponente: Explorationsfähigkeit als Kompetenz, sich aus einer Nutzungsperspektive die innere Bauweise zu erarbeiten und aus diesen Erkenntnisse Rückschlüsse und Bewertungen der Technologie im Kontext ableiten können)  3. einen unterrichtlichen Zugang zu Technologie (Lernen aus Beispielen, nicht nur konstruierend, auch analysierend und reﬂektierend vorgehen)Zielaspekte:1. Erkennen, dass es unterschiedliche Betrachtungsweisen gibt: Benutzersicht, Konstruktionssicht…  2. Zwischen den Betrachtungsweisen wechseln können  3. Notwendigkeit des Zusammenhangs der beiden Sichtweisen erkennen können (Duale Natur)  4. Duale Natur als fachliche Basis für Diskussion der Relevanz nutzen könnengesellschaftliche und technische Perspektive verknüpfen können.Methodische Hinweise:1. Explorieren von außen nach innen.  2. Analytischer, empirischer, reﬂektierender, interpretierender Zugang (im Gegensatz zum konstruktiven Zugang).  3. Sollte wissensund kompetenzbasiert sein.  4. Sollte  hypothesengeleitet sein.Abb. 1: Was ist Exploration?Literaturverzeichnis[Be16]Benton, Laura; Hoyles, Celia; Kalas, Ivan; Nos, Richard: Building mathematical know-ledge with programming: insights from the ScratchMaths project. In: Proceedings of theConstructionism 2016. S. 25–32, 2016.[Fr19]Franke-Wiekhorst, Antonia; Günther, Christine; Brünger, Karen; Magenheim, Johannes;Romeike, Ralf: „Der Informatikkreis“: Kinder von drei bis zehn Jahren beim Forschen inInformatik begleiten – ein methodisch-didaktisches Material. GdSU-Journal, (9):10–21,2019.[Ge19]Gesellschaft für Informatik (Hrsg.): Kompetenzen für informatische Bildung im Primar-bereich.Empfehlungen der Gesellschaft für Informatik e.V. erarbeitet vom Arbeitskreis”Bildungsstandards Informatik im Primarbereich” unter Koordinierung von Ludger Humbert.Beilage zu LOG IN, 39. Jahrgang (2019), Heft, 2019.Relevanz eines Prozessbereiches Interaktion und Exploration 14710 Kathrin Müller, Carsten Schulte, Johannes Magenheim[HH15]Hellmig, Lutz; Hempel, Tino: Benutzen – Analysieren – Gestalten – Verankern als di-daktische Schrittfolge im Informatikunterricht. In (Gallenbacher, Jens, Hrsg.): Informatikallgemeinbildend begreifen. Gesellschaft für Informatik e.V., Bonn, S. 145–154, 2015.[Ho12]Hopf, Michaela: Sustained Shared Thinking im frühen naturwissenschaftlich-technischenLernen. Waxmann, 2012.[In]: Instructional Design of a Programming Course: A Learning Theoretic Approach.[Ku17]Kultusministerkonferenz, Hrsg. Strategie der Kultusministerkonferenz„Bildung in derdigitalen Welt“ Beschluss der Kultusministerkonferenz vom 08.12.2016 in der Fassung vom07.12.2017. KMK, 2017.[Mo]Modellierung von Standardsoftware aus didaktischer Sicht.[MSS]Magenheim, Johannes; Schubert, Sigrid; Schaper, Niclas: Entwicklung von qualitativen undquantitativen Messverfahren zu Lehr-Lern-Prozessen für Modellierung und Systemverständnisin der Informatik (MoKoM). In (Bayrhuber, Horst; Harms, Ute; Muszynski, Bernhard; Ralle,Bernd; Rothgangel, Martin; Schön, Lutz-Helmut; Vollmer, Helmut J.; Weigand, Hans-Georg,Hrsg.): Formate fachdidaktischer Forschung, S. 109–128. Waxmann.[SB18]Schulte, Carsten; Budde, Lea: A Framework for Computing Education: Hybrid InteractionSystem: The Need for a Bigger Picture in Computing Education. In: Proceedings of the 18thKoli Calling International Conference on Computing Education Research. Koli Calling ’18,2018.[Sc17]Schulte, C.; Magenheim, J.; Müller, K.; Budde, L.: The design and exploration cycle asresearch and development framework in computing education. In: 2017 IEEE GlobalEngineering Education Conference (EDUCON). S. 867–876, 2017.[St17]Stiftung Haus der kleinen Forscher; Bergner, N.; Budrich, Barbara; Köster, H.; Magenheim,J.; Müller, K.; Romeike, R.; Schroeder, U.; Schulte, C.; Hubwieser, P.: Frühe informatischeBildung Ziele und Gelingensbedingungen für den Elementarund Primarbereich. Wis-senschaftliche Untersuchungen zur Arbeit der Stiftung "Haus der kleinen Forscher". VerlagBarbara Budrich, 2017.[SW17]Sentance, Sue; Waite, Jane: PRIMM: Exploring pedagogical approaches for teaching text-based programming in school. In: Proceedings of the 12th Workshop on Primary andSecondary Computing Education. ACM, S. 113–114, 2017.[We01]Weinert, Franz: Concept of Competence: A conceptual clariﬁcation. In (Rychen, D. S.;Salganik, L., Hrsg.): Deﬁning and Selecting Key Competencies, S. 45–65. Huber, 2001.148 Kathrin Müller et al.<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr>    Entwicklung ökologischen Denkens im Informatikunterricht  Ilona Petrenko1, Marco Thomas2 Abstract: Die hohe Relevanz von Ökologie und Informatiksystemen (IS) für unsere heutige Welt ist vermutlich unstrittig. In ökologischer Hinsicht beeinflusst der Zustand der Welt die Möglichkeiten der Menschheit, auf der Erde zu überleben. IS gehören zunehmend zum Werkzeug der Menschheit und haben sich in allen Bereichen des Lebens verbreitet. Weniger offensichtlich sind die Zusammenhänge zwischen Ökologie und IS, sowohl im positiven als auch im negativen Sinne. Um den rationalen Umgang mit beiden zu realisieren, kann man ökologisches Denken im Zusammenhang mit IS entwickeln. Die Grundidee des Projektes ÖKI ist es, ökologisches Denken der Schülerinnen und Schüler im Rahmen des Faches Informatik zu vertiefen. Dieser Beitrag dient zur Vorstellung von ersten Studien und Modulen zur unterrichtlichen Vermittlung ökologischer Aspekte im Kontext von Informatiksystemen.  Keywords: Informatik, Unterricht, Schule, Ökologie, Bildung, Informatiksystem, Umwelt 1 Einleitung Die Idee des Projektes „Ökologie als Kontext im Informatikunterricht“ (ÖKI) entstand im Rahmen eines Praktikums unter Förderung der Deutschen Bundesstiftung Umwelt3 im Jahr 2017. Der Projekttitel mag ungewöhnlich klingen, aber sowohl Informatik mit den sich ergebenden digitalen Artefakten als auch Ökologie sind zwei zentrale Schlüsselthemen in unserer Welt geworden. Obwohl es nicht immer sichtbar wird, sind die Informatik und ihre Systeme in viele ökologische Zusammenhänge eingebunden und von großer Bedeutung – so beschränkt sich der Begriff »Ökologie« in seiner ursprünglichen Bedeutung nicht nur auf den schonenden Umgang mit natürlichen Ressourcen, sondern befasst sich allgemein mit den Wechselwirkungen von Organismen und ihrer unbelebten Umwelt. Das Denken in diesen Zusammenhängen kann als »ökologisches Denken« bezeichnet werden. Als eine negative Folge der Einwirkung von Informatiksystemen (IS) auf die Umwelt kann man den hohen Energieverbrauch nennen oder auch die nicht einfache Wiederverwertung von wertvollen Materialien in der Elektronik. Es gibt aber auch positive Auswirkungen, wie eine mögliche Reduzierung des Papierverbrauchs in der Zukunft mit Hilfe des                                                         1 Westfälische Wilhelms-Universität Münster, Didaktik der Informatik, Corrensstraße 80, 48149 Münster, ilona.petrenko@uni-muenster.de 2 Anschrift s.o., Marco.Thomas@uni-muenster.de 3 https://www.dbu.decba doi:10.18420/infos2019-15Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 149 Ilona Petrenko und Marco Thomas   elektronischen Dokumentenverkehrs4, Videotelefonate zur Reduzierung von Reisen oder eine ökologisch nachhaltigere Landwirtschaft. Aus diesen wenigen Überlegungen kann eine mögliche allgemeinbildende Relevanz hinsichtlich einer Auseinandersetzung mit Informatiksystemen in ökologischen Kontexten abgeleitet werden, um ökologisches Denken zu fördern. Ökologisches Denken basiert auf dem vernetzten Denken und erfordert eine kontinuierliche Auseinandersetzung mit den Auswirkungen auf die Umwelt, die eine bestimmte Tätigkeit oder Entscheidung auslösen kann (vgl. [Wi19]). Die Entwicklung ökologischen, vernetzten Denkens ist ein wichtiges, fächerverbindendes Ziel, um mit unserer Umwelt in Einklang zu gelangen.  Ist es möglich und sinnvoll, ökologisches Denken gerade im Informatikunterricht zu entwickeln? Diese Frage führt zu ersten Forschungsfragen: 1. Welche Projekte und Literatur existieren zum Spannungsfeld Ökologie-Medien-Informatik, die Impulse für einen ökologischen Informatikunterricht geben? 2. Welche ökologischen Probleme bzw. Fragen können in den Informatikunterricht integriert werden? 3. Wie muss ein ökologischer Informatikunterricht konzipiert sein bzw. welche fachdidaktischen Ansätze sind geeignet? 4. Welche Informatiksysteme gibt es, die untersucht werden könnten? 5. Was umfasst ökologisches Denken und warum sollte es in den Informatikunterricht integriert werden? Die Methodik ist in dem Projekt ÖKI noch nicht endgültig festgelegt, aber neben einer Literaturrecherche und dem Erfassen von Expertenmeinungen (s. u.) haben wir mit der Entwicklung von Modulen begonnen, die mittels Design-based-research [DRC03] evaluiert und optimiert werden sollen. Auch eine Anbindung an das Projekt „Informatik im Kontext“5 (IniK) erscheint uns geeignet und wurde mit Studierenden in einem Seminar diskutiert und bearbeitet. 2 Konzeptentwicklung 2.1 Zusammenhang Ökologie und Informatik Die Auseinandersetzung mit und die Simulation von dynamischen Systemen – insbesondere in ökologischen und ökonomischen Zusammenhängen – wurde bereits vor 25 Jahren für den Informatikunterricht diskutiert ([Th93] u. a.) und ist auch heute noch in                                                         4 Allerdings steigt derzeit der Papierverbrauch eher, insbesondere aufgrund des zunehmenden Paketversands. Immerhin haben ca. 30% der Unternehmen ihre Kommunikation weitestgehend digitalisiert. S. https://www.verbraucherservice-bayern.de/themen/umwelt/papierverbrauch-steigt-trotz-digitalisierung (15.02.2019). 5 Informatik im Kontext. http://www.informatik-im-kontext.de (15.02.2019) 150 Ilona Petrenko, Marco Thomas Entwicklung ökologischen Denkens im Informatikunterricht   einigen Curricula verankert6. Die Idee, eine »Dimension Ökologie« in den Informatikunterricht zu integrieren, wurde von J. Koubek im Zusammenhang mit der Integration von Informatik und Gesellschaft für das Projekt „Informatik im Kontext“ (IniK) eingebracht. Koubek hat auch Kriterien für die Auswahl von geeigneten Kontexten beschrieben [In19]: • Mehrdimensionalität: rechtliche, ökonomische, ökologische, ethische, informatische Fragestellungen sind u.a. möglich.  • Breite: Der Kontext ist gesellschaftlich relevant. • Tiefe: Der Kontext ist informatisch relevant.  • Lebenswelt: Bezug zur Lebenswelt der Schülerinnen und Schüler.  • Stabilität: Der Kontext ist über einen längeren Zeitraum relevant.  Auf den Folien zum Vorlesungs-Podcast „Dimensionen der Informatik Ökologie“ nennt Koubek auch ethische Aspekte, wo er unter anderem das Prinzip der Nachhaltigkeit definiert: „Nachhaltigkeit bedeutet, dass die gegenwärtige Generation ihre Bedürfnisse befriedigt, ohne die Fähigkeit der zukünftigen Generation zu gefährden, ihre eigenen Bedürfnisse befriedigen zu können“ [KK08]. Ein nachhaltiges Handeln ist sicherlich eine Grundlage ökologischen Denkens und gehört zur Allgemeinbildung. 2.2 Existierende Projekte In einem ersten Schritt auf der Suche nach passenden Themen haben wir verschiedene Quellen analysiert, um existierende Erfahrungen in dem Zusammenhang Schule-Informatik-Ökologie zu analysieren und aufzuarbeiten (vgl. 1. Forschungsfrage). Es ergab sich ein Modell, in das Projekte oder Themen in die Bereiche Informatik, Mediennutzung und Ökologie und ihre Schnittmengen eingeordnet werden können (Abb.1). Die senseBox ist beispielsweise ein erfolgreiches Projekt der Geoinformatiker in Münster zum Messen von Umweltphänomenen und wird mittlerweile kommerziell vertrieben [Se19]. Allerdings liegen bisher kaum Erfahrungen zum Einsatz im Informatikunterricht7 vor, eher zum Einsatz im Fach Geographie. Das länderübergreifende MINT-Bildungsprogramm Experimento [Ex19] scheint vor allem für Kinder im Grundschulalter geeignet zu sein. Unsere Suche und Auswertung hierzu ist nicht abgeschlossen und offen für Neues.                                                         6 Unterrichtsbeispiel zu dynamischen Systemen für den Hamburger Schulinformatik Lehrplan in der Oberstufe: https://haukemorisse.de/blog/?p=2300 und https://bildungsserver.hamburg.de/simulation/ (17.02.2019) 7 Ein Vorteil der senseBox liegt in dem abgestimmten und vorbereiteten Informatiksystem. Denkbar sind sicherlich auch der Einsatz von alternativen Informatiksystemen, die selbst zusammengebaut werden.  Entwicklung ökologischen Denkens im Informatikunterricht 151 Ilona Petrenko und Marco Thomas    Abb. 1: Modell zur Gruppierung der Themen im Projekt ÖKI 2.3 Überlegungen für ein Konzept Für die Konzeptentwicklung ist es erforderlich, praktische Aufgaben für den Schulunterricht zu entwickeln, die an einer Schule evaluiert bzw. für den Schulunterricht diskutiert werden können. Es ist zu überlegen, welche ökologischen Probleme in den Informatikunterricht integriert werden können (Forschungsfrage 2) und welche fachdidaktischen Ansätze geeignet sind (Forschungsfrage 3). Zunächst wurde ein Modul skizziert, das die grundlegenden Ideen für den Informatikunterricht mit ökologischen Aspekten gesammelt hat [Pe18]. Das Modul „Umweltfreundlicher Umgang mit IT im Alltagsleben“ basiert auf der Idee eines rationalen Umgangs mit IT aus Sicht der Ökologie. Als Beispiele werden Probleme in Bezug auf das Recycling von IT, ihr Energieverbrauch sowie ihr allgemeiner Einfluss auf die Umwelt angeboten. Dabei wurde geplant, den Unterricht mit realen Beispielen aus dem Alltag zu unterstützen. Als Ziel sollten die Lernenden am Ende des Moduls einen umweltbewussteren Umgang mit IT-Mitteln verinnerlichen und die angeeigneten Kenntnisse im Alltag anwenden können. Konkrete Aufgabenbeispiele dienen der  152 Ilona Petrenko, Marco Thomas Entwicklung ökologischen Denkens im Informatikunterricht   Berechnung des Energieverbrauchs einer IT-Workstation pro Tag. Zudem sollte eine App Thema „Mülltrennung“ (Abb. 2) entworfen werden. Teilnehmer eines Workshops im Jahr 2018 hielten dieses für die Schüler der Sekundarstufe I für wenig motivierend.     Abb. 2: Prototyp einer Mülltrennungs-App 3 Befragung von Lehrenden Im Schuljahr 2017/18 wurde im Rahmen einer Umfrage unter Lehrenden ein Meinungsbild eingeholt. An der Umfrage haben 65 Lehrende aus NRW teilgenommen.   3.1 Methodik und Durchführung Der Fragebogen wurde in EvaSys8 generiert und bestand aus 4 quantitativen und 3 qualitativen Fragen (Abb.3). Das Ziel der Umfrage für die weitere Konzeptund Modulentwicklung war, die Expertenmeinungen für die Beantwortung der zweiten Forschungsfrage einzuholen: welche ökologischen Probleme in den Informatikunterricht integriert werden können. Einladungen für die Teilnahme an der Umfrage wurden per Fax an Schulen der Sekundarstufe in NRW geschickt.                                                           8 Eine in Münster verfügbare Evaluationssoftware für automatisierte Befragungen  Entwicklung ökologischen Denkens im Informatikunterricht 153 Ilona Petrenko und Marco Thomas    Abb. 3: Aufbau der Fragen zum Projekt ÖKI in dem Fragebogen  3.2 Auswertung und Interpretation Quantitativ auszuwertende Daten wurden in EvaSys gesammelt und von uns mittels der Statistiksoftware SPSS ausgewertet. Qualitative Daten wurden von uns ohne Software ausgewertet, weil nicht viele Teilnehmer solche Fragen beantwortet haben.  Viele Teilnehmer haben die Idee des Projektes eher skeptisch gesehen: rund ein Drittel von den Befragten fand es nicht sehr sinnvoll, ökologische Aspekte in den Informatikunterricht zu integrieren, ein Drittel fand die Idee gut und ein Drittel hatte eine neutrale Haltung. Die Lehrenden wurden auch gefragt, welche ökologischen Themen im Rahmen des Informatikunterrichtes behandelt werden sollten und wie ökologische Aspekte methodisch in den Informatikunterricht integriert werden könnten. Aus den angegebenen Themen wurden die folgenden häufiger ausgewählt (Mehrfachauswahl):  154 Ilona Petrenko, Marco Thomas Entwicklung ökologischen Denkens im Informatikunterricht   • Optimierte Ressourcennutzung bei der Konstruktion und Verschrottung von digitalen Endgeräten wie Computer, Handy etc. (59%) • Reduzierung des Energieverbrauchs bei der Verwendung von Computern, Handys etc. (52%) • Regelung und Steuerung von Heizungssystemen (43%) In einem Freitextfeld haben die Lehrpersonen die angegebene Liste um die folgenden Themen ergänzt (jeweils eine Nennung): • Papierflut durch Ausdrucken. • Rechnerarchitektur in Bezug auf Energieverbrauch. • Softwareoptimierung, um Endgeräte länger nutzen zu können (2 Nennungen). • Fahrzeugsteuerung zur Verbrauchsreduktion • Simulationen zur Folgenabschätzung menschlichen Handels • Ressourcenhunger von Bitcoingenerierung und -transferierung • Keine konkreten Themenfelder oder Inhalte vorgeben, sondern stattdessen jeweils Saison oder tagesaktuelle Themen ad hoc integrieren. Alle drei Vorschläge zur Unterrichtsmethodik (s. Abb. 3) wurden von den Befragten angewählt: • Modellierung und Simulation von Umweltprozessen z.B. für Prognosen (55%) • Programmierung von sensorgestützten Systemen zur Erfassung von Umweltdaten. (55%) • Ausstellung zu in digitalen Endgeräten verwendeten Materialien und deren Gewinnung. (37%) Die Auswahl „Andere“ wurden nur von knapp 8% der Befragten angekreuzt, was dahingehend interpretiert werden könnte, dass nur wenige Lehrende eine Vorstellung zu dem Thema entwickelt haben. Diese Annahme wird gestützt durch die Aussage, dass 97% kein ähnliches Projekt kennen und nur 11% sich auch andere ökologische Themen als die vier von uns vorgeschlagenen für eine Behandlung im Informatikunterricht vorstellen können (vgl. [Pe18]). 4 Modulentwicklung Aktuell arbeiten wir im Projekt ÖKI an drei Modulen. Die ersten Rückmeldungen von Experten wurden Ende März 2019 im Rahmen des Informatiktages NRW9 gesammelt. Dort wurden die Module zum ersten Mal präsentiert und beim Workshop durchgearbeitet.                                                         9 https://informatiktag-nrw.de/informatiktag/informatiktag2019 (15.02.2019) Entwicklung ökologischen Denkens im Informatikunterricht 155 Ilona Petrenko und Marco Thomas   Im folgenden Abschnitt skizzieren wir den Stand der Überlegungen zu den Modulen, wie sie im Workshop präsentiert wurden. Jedes Modul enthält eine Problembeschreibung zu dem Kontext „Informatik und Ökologie“ und Vorschläge für praktische Aufgaben. Die Empfehlungen zu Bildungsstandards für das Fach Informatik ([GI08], [GI16]) und die IniK-Kriterien werden berücksichtigt.  4.1 Modul: Nachhaltige Nutzung von Smartphones Die Lernenden bekommen in immer früherem Alter ein Smartphone. Die Eltern bringen ihnen die Nutzung allerdings höchstens oberflächlich bei. Hintergrundwissen zu umweltrelevanten Informationen wird dabei i. d. R. nicht vermittelt. Dies kann im Informatikunterricht als Themengebiet für den Aufbau ökologischer und informatischer Kompetenzen behandelt werden.  In diesem Modul müssen sich die Lernenden zuerst mit theoretischen Aspekten der nachhaltigen Nutzung von Smartphones auseinandersetzen und danach ein Quiz entwickeln, das Fragen zum Thema enthält. Die notwendigen theoretischen Kenntnisse für das Quiz werden im ersten, theoretischen Teil erworben. Denkbar ist auch eine App-Entwicklung o. ä., wenn die Lernenden zuvor entsprechende Fertigkeiten erworben haben (z. B. mit dem „MIT App Inventor“10), so dass Softwareentwicklung und Ökologie im Informatikunterricht miteinander verbunden werden. Die App könnte dann entsprechende Kenntnisse zur Nachhaltigkeit bei Handynutzung als Auskunft und das Quiz als Spiel (oder Umfrage) enthalten. Im Rahmen der Unterrichtseinheit werden u. a. die folgenden Fragen gestellt: Welche Gefahrstoffe sind in einem Handy versteckt? Wie viel Strom verbraucht ein Handy? Wie kann ich Energie bei der Handynutzung sparen? Was ist ein Fairphone? 4.2 Modul: Smart Farming Die modernen Informationsund Kommunikationstechnologien werden immer häufiger in der Landwirtschaft zum Steuern, Regeln und Messen von Abläufen [Ba18] eingesetzt, auch verbunden mit ökologischen Zielen. Hierfür steht der Begriff Smart Farming oder Landwirtschaft 4.0. Die Lernenden können die (ökologischen) Auswirkungen der Automatisierung an diesem Beispiel in der Arbeitswelt kennenlernen und bewerten.  In einem Seminar zur Didaktik der Informatik haben wir im Wintersemester 2018/19 einen ersten Entwurf für das Modul erstellt und eine Integration in das Projekt IniK angedacht. Als Einstieg bekommen die Lernenden einen Überblick zum Thema und überlegen sich, was in der Landwirtschaft digitalisiert werden könnte. Es folgen drei weitestgehend                                                         10 www.appinventor.mit.edu/explore  156 Ilona Petrenko, Marco Thomas Entwicklung ökologischen Denkens im Informatikunterricht   unabhängig einsetzbare Bausteine: Stall, Feld, Kommunikation. Ökologische Aspekte können sich beispielsweise auf die optimale Versorgung des Viehs unter Nutzung einer Vieh-Datenbank und eine ökologisch-ökonomische Düngung von Feldern beziehen. Im Rahmen der Unterrichtseinheit werden unter anderem folgende Fragen thematisiert: Wie kann man die Landwirtschaft sinnvoll digitalisieren bzw. was ist bereits digitalisierbar? Welche positiven und negativen Auswirkungen sind bei dem Einsatz von Informatiksystemen in der Landwirtschaft zu bedenken? 4.3 Modul: Reduktion des Energieverbrauchs mit Informatiksystemen Vielen Menschen fehlt das Bewusstsein, dass die tägliche Nutzung von Elektrogeräten einen hohen und ökologisch schädlichen Energieverbrauch verursacht. Im Informatikunterricht kann darauf aufmerksam gemacht werden, wie man allgemein Elektrogeräte stromsparend nutzt (ggf. fächerverbindend mit dem Physikunterricht). Im Rahmen dieses Moduls wird eine Simulation entwickelt, in der ein Smart-Homesystem die Heizung ausschalten bzw. niedriger stellen kann, wenn die Temperatur im Raum hoch genug ist bzw. wenn niemand daheim ist. Zudem soll das System die Beleuchtung ausschalten können. Das Hauptziel des Unterrichts ist, dass die Lernenden ein solches System modellieren und programmieren – auch im Sinne eines physical computings, indem man beispielsweise verschiedene Sensoren programmiert, die auf das Licht bzw. auf die Bewegung reagieren. Messen oder Simulieren des Strombzw. Gasverbrauchs können eine ökologische Dimension integrieren uvm. Im Rahmen der Unterrichtseinheit werden unter anderem die folgenden Fragen gestellt: Welche Informatiksysteme können für das Energiesparen verwendet werden? Welche „grüneren“11 Methoden zur Stromerzeugung kann es geben und wie können solche Methoden z. B. in den Smarthome-Systemen eingesetzt werden? 5 Fazit und Ausblick Obwohl bei der ersten Umfrage ein Drittel der befragten Lehrer die Idee einer Integration von ökologischen Aspekten eher ablehnend bewertet haben, sehen wir ein Potenzial zur Bereicherung des Informatikunterrichts. Auch hat ein Workshop im Rahmen des NRW Informatiktags 2019 gezeigt, dass die Lehrpersonen unser Projekt interessant und sinnvoll finden: alle 14 Teilnehmer haben positive Rückmeldungen gegeben und 3 davon sind bereit, die fertigen Module in ihrem Unterricht auszuprobieren und sie danach zu evaluieren.   Ein weiterer Schritt ist nun, die Module weiter zu entwickeln und besonders die dritte und die vierte Forschungsfrage anzugehen, indem wir uns unter Berücksichtigung der GI                                                       11 Mit „grüneren“ Methoden werden alternative, umweltfreundlichere Methoden zur Energieerzeugung bezeichnet (z.B. Solarenergie): http://www.ess.co.at/URBANECOLOGY/Banzer_Froehlich.pdf (17.02.2019) Entwicklung ökologischen Denkens im Informatikunterricht 157 Ilona Petrenko und Marco Thomas   Empfehlungen zu Bildungsstandards überlegen werden, welche fachdidaktischen Ansätze für die Entwicklung eines Informatikunterrichtes mit diesen Modulen am besten geeignet sind. Parallel muss nach Informatiksystemen recherchiert werden, die als Gegenstände und Inhalte geeignet sind (4. Forschungsfrage). Die letzte Forschungsfrage – was umfasst ökologisches Denken und warum sollte es in den Informatikunterricht integriert werden – wird das Projekt dauerhaft begleiten und führt immer wieder zu neuen Überlegungen, indem wir neue Literaturquellen durcharbeiten, die Module überarbeiten und auf Fachtagungen und Konferenzen diskutieren.  Literaturverzeichnis [Ba18]  Bayer, M.: Was Sie über Landwirtschaft 4.0 wissen müssen. Computerwoche.de, veröffentlicht am 07.08.2018, https://www.computerwoche.de/a/was-sie-ueber-landwirtschaft-4-0-wissen-muessen,3544215, Stand: 11.02.2019 [DRC03] The Design-Based Research Collective: Design-Based Research: An Emerging Paradigm for Educational Inquiry, Educational Researcher Vol.32 No.1, S.5-8, 2003 [Ex19]  Experimento Naturwissenschaft und Technik lebensnah vermitteln, https://www.siemens-stiftung.org/de/projekte/experimento, Stand: 11.02.2019 [GI08]  Grundsätze und Standards für die Informatik in der Schule Bildungsstandards Informatik für die Sekundarstufe I: GI, Gesellschaft für Informatik e.V., Beilage zu LOG IN, 28. Jg. (2008), Heft Nr. 150/151 [GI16]  Grundsätze und Standards für die Informatik in der Schule Bildungsstandards Informatik für die Sekundarstufe II: GI, Gesellschaft für Informatik e.V., Beilage zu LOG IN, 36. Jg. (2008), Heft Nr. 183/184. [In19] Informatik im Kontext Kriterien für die Auswahl von Kontexten, https://medienwissenschaft.uni-bayreuth.de/inik/konzepte/kriterienkontexte/, Stand: 14.02.2019 [KK08] Koubek, J.; Klumpp S.: Dimensionen der Informatik. 25-Ökologie. Folien zur Vorlesung Informatik & Informationsgesellschaft II., 2008.  [Pe18] Petrenko, I.: Bildung ökologischen Denkens im Informatikunterricht. In (Thomas, M.; Weigend, M. Hrsg.): Informatik und Medien. 8. Münsteraner Workshop zur Schulinformatik 18. Mai 2018.  BoDBooks on Demand, Norderstedt, S. 81-88, 2018. [Se19] senseBox, www.sensebox.de, Stand: 14.02.2019 [Th93] Thomas, M.: Computersimulation als Hilfsmittel zur Erkenntnisgewinnung über das Verhalten dynamischer Wirkungsgefüge, Schriftliche Hausarbeit im Rahmen der 1. Staatsprüfung an der Universität Paderborn 1993 [Wi19] Willi, Josef: Ökologisch denken heißt Gesamtzusammenhänge erfassen, http://www.landwirtschaftundleben.at/downloads/lehrbrief2.2.2.pdf, Stand: 16.02.2019 158 Ilona Petrenko, Marco ThomasPraxisberichtecbeHerausgeber et al. (Hrsg.): INFOS,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Erfahrungsbericht zur Qualiﬁzierungsmaßnahme Informatikals Erweiterungsfach (Lehramt Realschule) in BayernMarc Berges1, Matthias Ehmann2, Rainer Gall3, André Greubel3, Nicole Günzel-Weinkamm2, Verena Haller4, Martin Hennecke3, Ute Heuer4, Julia Kronawitter4,Annabel Lindner1, Nicolai Pöhner3Abstract:Teil des Programms BAYERN DIGITAL II ist die berufsbegleitende Nachqualiﬁzierungvon rund 180 Lehrerinnen und Lehrern der Realschule. Über die Ermäßigung des Stundendeputatswird den Teilnehmenden ermöglicht, sich innerhalb von zwei Jahren für das Fach Informatik anbayerischen Realschulen nachzuqualiﬁzieren. Ausbildungsziel ist das einem regulären Studiumentsprechende Staatsexamen. An mehreren universitären Standorten wurden daher entsprechendeMaßnahmen aufgelegt. Durch die besonderen Rahmenbedingungen kommen vor allem LehrundLernformen des „blended learning“ Konzepts zum Tragen. Zweiwöchentliche Präsenztage sorgendabei für eine kontinuierliche Flankierung, wobei versucht wird, im Sinne des „ﬂipped classroom“Prinzips die Präsenzzeit möglichst lernerzentriert und interaktiv zu gestalten. Untersuchungen zurZufriedenheit und Motivation nach dem ersten Halbjahr zeigen den Erfolg der Maßnahme, aber auchweiteres Verbesserungspotential.Keywords:Nachqualiﬁzierung; Realschule; Blended Learning1 EinleitungSeit der Einführung des Pﬂichtfachs Informatik an bayerischen Gymnasien im Schuljahr2003/04 setzt das Land neben der Einstellung von Absolventinnen und Absolventen derinformatischen Lehramtsstudiengänge auch auf die Nachqualiﬁzierung von im Dienst be-ﬁndlichen Lehrkräften mit anderen Fächerkombinationen. Durch verschiedene Maßnahmenwie den Programmen NELLI bzw. SIGNAL (2001-06) und FLIEG (seit 2006) wurde so eingroßer Teil der heutigen Lehrkräfte nachträglich für das Fach Informatik qualiﬁziert.An der bayerischen Realschule wird Informatik gemeinsam mit Textverarbeitung undTechnischem Zeichnen / Computer Aided Design im Rahmen des Pﬂichtfachs „Informati-onstechologie“ angeboten. Textverarbeitung und Technisches Zeichnen / Computer Aided1Universität Erlangen-Nürnberg, Didaktik der Informatik, Martensstraße 3, 91058 Erlangen,marc.berges@fau.de2Universität Bayreuth, Didaktik der Informatik, Universitätsstraße 30, 95447 Bayreuth,matthias.ehmann@uni-bayreuth.de3Universität Würzburg, Didaktik der Informatik, Emil-Fischer-Str. 30, 97074 Würzburg,martin.hennecke@uni-wuerzburg.de4Universität Passau, Didaktik der Informatik, Innstr. 33. 94032 Passau,ute.heuer@uni-passau.de cba doi:10.18420/infos2019-16Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1612 Berges et al.Design werden dabei oft von Fachlehrkräften unterrichtet. Entsprechend ist der Anteil dergrundständig ausgebildeten Informatiklehrkräfte an der Realschule eher gering. Zwar gabes auch für die Realschule in der Vergangenheit diverse Fortbildungsangebote, Nachqualiﬁ-zierungen, die wie SIGNAL oder FLIEG einen universitären Abschluss erreichen sollten,wurden jedoch bisher keine angeboten.Das Programm BAYERN DIGITAL II ermöglicht seit 2018 nun auch die Nachqualiﬁzie-rung von knapp 180 Lehrkräften bayerischer Realschulen. Diese erhalten für zwei Jahreeine Freistellung von einem Tag pro Woche. Ferner stehen Mittel für Reisekosten fürPräsenzveranstaltungen an den durchführenden Universitäten zur Verfügung. Am Ende derMaßnahme sollen die Teilnehmerinnen und Teilnehmer die Erweiterungsprüfung für dasFach Informatik ablegen. In Bayern bedeutet dies die Teilnahme am Staatsexamen. Das Landverspricht sich von der Maßnahme neben der Verbesserung der Qualität des informatischenUnterrichts auch die Scha ung einer Grundlage für den weiteren Ausbau des Schulfachsan der Realschule. Im Rahmen des Beitrags soll der Aufbau und die Durchführung derMaßnahme kurz vorgestellt werden. Ferner wird über Erfahrungen aus dem ersten Halbjahrder Nachqualiﬁzierung berichtet.2 Maßnahme2.1 Informatik an der bayerischen RealschuleDie Schulordnung für die bayerische Realschule von 2002 sah je nach gewählter Ausbil-dungsrichtung Informatik als Pﬂichtbzw. Wahlpﬂichtfach vor. Seit 2007 wurde es in allenAusbildungsrichtungen durch das Pﬂichtfach Informationstechnologie ersetzt. Inhaltlichumfasst das Fach die zuvor eigenständigen Bereiche Informatik, Textverarbeitung undTechnisches Zeichen / Computer Aided Design. Dem Fach liegt ein modularisierter Lehr-plan5mit ﬂexibilisierter Stundentafel zugrunde. Dieser legt für die Jahrgangsstufen 5 bis 7(Anfangsunterricht) acht Module zu je 14 Unterrichtsstunden aus den Bereichen Tastschrei-ben / Textverarbeitung, Informationstechnische Grundlagen und Informatik fest. Ab derachten Jahrgangsstufe (Aufbauunterricht) sind Umfang und Inhalte je nach Ausbildungs-richtung unterschiedlich. Der Modulkanon umfasst derzeit die Bereiche Textverarbeitung,Tabellenkalkulation, Datenbanksysteme, Computergestützte Konstruktion, Datennetze,Programmierung Algorithmen und Objekte, Logik und Robotik sowie Multimedia. DieModulblöcke bestehen dabei aus zwei bis sechs Modulen à 14 Unterrichtsstunden.Die Lehrerschaft ist im Fach Informationstechnologie sehr heterogen zusammengesetzt.Neben Lehrerinnen und Lehrern, die das Fach Informatik als Lehramtsfach an der Universitätstudiert haben, gibt es im Rahmen des Vorbereitungsdienstes nachqualiﬁzierte Lehrkräfte.Hinzu kommen viele an Staatsinstituten ausgebildete Fachlehrerinnen und Fachlehrer. Da5https://www.lehrplanplus.bayern.de/fachlehrplan/realschule/10/it162 Marc Berges et al.Erfahrungsbericht Qualiﬁzierungsmaßnahme Informatik als Erweiterungsfach Realschule Bayern 3die drei Qualiﬁzierungssysteme inhaltlich und organisatorisch sehr unterschiedlich sind,ergeben sich unterschiedliche Schwerpunkte der Lehrkräfte in den drei fachlichen Bereichen.Die Regelstudienzeit für Lehramt Informatik an Realschulen beträgt in Bayern siebenSemester. Rund ein Drittel des Studiums entfällt dabei auf Veranstaltungen aus dem FachInformatik bzw. deren Didaktik. Am Ende des Studiums steht in Bayern nach wie vor dasStaatsexamen als zentrale schriftliche Prüfung. Zwar haben die bayerischen Universitäten ihrStudium modularisiert und bieten meist neben dem Staatsexamen auch Bachelorabschlüssean, für die Aufnahme in das Referendariat qualiﬁziert jedoch nur die staatliche Prüfung.Das Studium stellt somit vor allem eine Vorleistung für das Staatsexamen dar, gehtaber auch in die Berechnung der Gesamtnote mit ein. Für das Staatsexamen Informatikschreibt die Lehramtsprüfungsordnung I (LPO I)6drei schriftliche Prüfungen vor . Geprüftwerden die TeilgebieteTheoretische Informatik und Algorithmen und Datenstrukturen,Softwaretechnologie und DatenbanksystemesowieFachdidaktik Informatik.2.2 HerausforderungenDie Durchführung der Maßnahme ist mit einer Reihe von Herausforderungen verbunden.Der enge Zeitplan von zwei Jahren, in dem die Maßnahme durchgeführt wird, stellt an dieStudierenden hohe Anforderungen. Trotz der Reduktion der Unterrichtsverpﬂichtung wirdvon den Teilnehmerinnen und Teilnehmern gefordert, sich in relativ kurzer Zeit eine sehrgroße Menge komplexer informatischer Fachinhalte anzueignen. Dies ist nur mit Disziplinund durch kontinuierliches Arbeiten mit den Studieninhalten möglich. Die Lehrkräfte müsseneine Balance zwischen Schule, begleitendem Studium und Privatleben ﬁnden, die über einenZeitraum von zwei Jahren tragbar ist und gleichzeitig ein möglichst rasches Vorankommen imStudium ermöglicht. Um dies zu unterstützen, wird den Teilnehmerinnen und Teilnehmern imSinne von „blended learning“ [OT05] ein umfangreiches Studienmaterial zum Selbststudiumzur Verfügung gestellt sowie an den Präsenztagen versucht, komplexe Sachverhalte möglichstzugänglich darzustellen.Auf Seiten der Universitäten ist sowohl der stra e Zeitplan als auch die Heterogenität inBezug auf die fachlichen Vorkenntnisse bei den Teilnehmerinnen und Teilnehmern einegroße Herausforderung. So ﬁnden sich in der Gruppe verschiedenste Studienfächer imErststudium, unterschiedliche Erfahrungen in Bezug auf IT / Informatik-Unterricht, sowieunterschiedlicher Umgang der Lehrkräfte mit der Doppelbelastung, z. B. in Bezug aufFrustrationstoleranz. Um den Studierenden hier möglichst gut zur Seite zu stehen, fungierenstudentische Hilfskräfte an den Universitäten als unterstützende Tutorinnen und Tutoren.6http://www.gesetze-bayern.de/Content/Document/BayLPO_I-49Qualiﬁzierungsmaßnahme Informatik als Erweiterungsfach 1634 Berges et al.2.3 Aufbau der MaßnahmeUm innerhalb des engen Zeitrahmens von nur zwei Jahren eine fundierte Ausbildung derTeilnehmerinnen und Teilnehmer sowohl in fachlicher Hinsicht als auch in Hinblick aufdie Unterrichtspraxis zu realisieren, folgt die Maßnahme einerseits einem relativ engenCurriculum und greift andererseits auf Blended Learning [OT05] und Flipped Classroom[BS12] Konzepte zurück. Dies ist notwendig und sinnvoll, da aufgrund des berufsbeglei-tenden Studiums nur begrenzt die Möglichkeit besteht, an Präsenzveranstaltungen an derUniversität teilzunehmen. Da vorangehende Weiterbildungsprogramme jedoch gezeigthaben, dass die Teilnehmerinnen und Teilnehmer Präsenzzeiten für sehr wichtig haltenund diese Auswirkungen auf den Erfolg der Maßnahme haben (vgl. [Sp09]), ﬁnden imZweiwochenrhythmus Präsenztage an den beteiligten Universitäten statt, an denen dieInhalte aufgearbeitet und vertieft werden. Ziel ist hierbei kein Vorlesungsformat, vielmehrsoll die Präsenzzeit möglichst interaktiv gestaltet werden und intensiv auf Fragen undProbleme der Studierenden eingegangen werden.Der inhaltliche Aufbau der Maßnahme orientiert sich am Kerncurriculum für das bayerischeStaatsexamen in Informatik7, das zentrale Fachkenntnisse aus den Bereichen Datenbanksyste-me, Algorithmen und Datenstrukturen, Softwaretechnik und Theoretische Informatik sowieder Fachdidaktik Informatik als examensrelevant ausweist. Da die Fakultas in Informatikausgewiesenes Ziel der Maßnahme ist, ist die Abdeckung dieser zentralen Themengebieteaus fachwissenschaftlicher Sicht erforderlich, zudem soll jedoch auch ein Wissensfundamentaufgebaut werden, das die Lehrkräfte in der täglichen Unterrichtspraxis unterstützt. Vordiesem Hintergrund wurde ein Modell mit acht Modulen entwickelt (vgl. Tab.1), bei demzentrale Ideen wie die Algorithmik semesterübergreifend aufgegri en werden und dieProgrammierung als wachsender Baustein vom ersten Semester bis zum Examen umfas-send vermittelt und geübt wird. Zudem werden ein Softwarepraktikum, welches für dieStudierenden im Erweiterungsfach die einzige Zulassungsvoraussetzung zum Staatsexamendarstellt, und ein Examens-Repetitorium in den Modulplan integriert. Für den BereichFachdidaktik ist kein eigenes Modul vorgesehen, vielmehr werden fachdidaktische Elementeund Werkzeuge in die fachpraktischen Module integriert. Am Ende der Module steht jeweilseine Klausur zur Überprüfung des Lernfortschrittes und als individuelle Rückmeldung fürdie Teilnehmerinnen und Teilnehmer. Diese Klausuren haben jedoch keinen Einﬂuss auf dieExamenszulassung. Um einen Eindruck von der Gestaltung der Module zu geben, werdenim Folgenden die Module des ersten Semesters detaillierter vorgestellt.2.3.1 Modul DatenbanksystemeGrundständige Studierende erwerben im Bereich Datenbanksysteme und Softwaretechnolo-gie mindestens 15 ECTS (vgl. LPO I8). Dies wird im Rahmen der Maßnahme durch die7https://www.verkuendung-bayern.de/amtsblatt/dokument/kwmbl-2009-2-34/8http://www.gesetze-bayern.de/Content/Document/BayLPO_I-49164 Marc Berges et al.Erfahrungsbericht Qualiﬁzierungsmaßnahme Informatik als Erweiterungsfach Realschule Bayern 51. Semester 2. Semester 3. Semester 4. SemesterDatenbanksystemeAlgorithmen undDatenstrukturenSoftwaretechnologieTheoretischeInformatikFachdidaktikEinführung in dieProgrammierungProgrammierung Softwarepraktikum RepetitoriumTab. 1: Modulplan der MaßnahmeBehandlung der im Kerncurriculum geforderten Inhalte abgebildet: „Datenmodellierung undDatenbankentwurf; relationales Modell (Grundlagen); Konvertierung eines ER-Entwurfsin einen relationalen Entwurf; Anfragesprachen in DBMS (SQL); Integrität (Strukturelleund Domänenspeziﬁsche Integritätsbedingungen); relationale Entwurfstheorie (FunktionaleAbhängigkeiten, Normalformen); Transaktionsmanagement“. Diese Auﬂistung bildet deninhaltlichen Rahmen für das erste Modul, da die zeitlichen Restriktionen keine weitereVertiefung zulassen.Der grundsätzliche Aufbau des Moduls entspricht dem didaktischen Konzept des „FlippedClassroom“. Dabei werden den Lernenden entsprechende Lerninhalte in einer Selbst-studiumsphase zur Verfügung gestellt. Als Literatur zum Eigenstudium wird in diesemModul das Buch „Datenbanksysteme Eine Einführung“ von Alfons Kemper und AndréEickler [KE15] empfohlen. Zusätzlich wird auf zum Buch passende Begleitmaterialien, wiePräsentationen und Videoaufzeichnungen9verwiesen. Zu den jeweiligen Kapiteln lösen dieTeilnehmerinnen und Teilnehmer begleitende Aufgabenblätter auf Staatsexamensniveau.In der anschließenden Präsenzveranstaltungen werden Übungsblätter und im Selbststudi-um aufgekommene Fragen besprochen, um dann anhand weiterer Übungsaufgaben undPräsentationen zu den theoretischen Inhalten das aktuelle Thema zu vertiefen und imgemeinsamen Austausch weitergehende Fragen und Probleme zu klären. Abschließend wirdein kurzer Ausblick auf die Inhalte des nächsten Themenbereichs gegeben sowie möglicheSchwierigkeiten des Themas vorweggenommen. In der folgenden Selbststudiumsphasewird den Teilnehmenden noch einmal die Möglichkeit gegeben anhand von aufbauendenÜbungsaufgaben die Inhalte zu vertiefen. Gleichzeitig beginnt der nächste Zyklus mit demEinarbeiten in die theoretischen Inhalte und dem Lösen der ersten Übungsaufgaben.Ergänzend zu den fachlichen Inhalten werden folgende beispielhafte fachdidaktischeInhalte im ersten Modul thematisiert: Allgemeinbildungsanspruch, Fundamentale Ideen,Lehrplan der Realschule Bayern: Module Datenbanksysteme I & II, Werkzeuge zurModellierung und zum Erstellen von SQL-Abfragen und Aufgaben aus Schulbüchern undAufgabensammlungen.9https://db.in.tum.de/teaching/bookDBMSeinf/aufzeichnungen/Qualiﬁzierungsmaßnahme Informatik als Erweiterungsfach 1656 Berges et al.2.3.2 Modul Einführung in die ProgrammierungWährend das erste Modul an allen Standorten weitestgehend gleich abgelaufen ist, wurdedas Modul „Einführung in die Programmierung“ an den verschiedenen Standorten nach denlokalen Gegebenheiten unterschiedlich gehandhabt. Hier wird das Vorgehen der UniversitätPassau dargestellt.Die Notwendigkeit, das Testen von Programmen systematisch in die Programmierveranstal-tung des ersten Informatiksemesters zu integrieren, wird seit vielen Jahren gesehen (vgl.[BM16]). Im Bereich der Fortund Weiterbildung von Lehrkräften wurden Überlegungenzum Unterrichten des Testens im Sinne einiger Ideen des „test-driven learnings“ jedochbisher wenig beschrieben.Weiter gibt es nur vereinzelt Berichte, die entsprechend auf das systematische Testenim Rahmen einer Einführung in die Programmierung in der Schule fokussieren (vgl.[SS13]), obwohl dies folgende positive E ekte haben kann: (1) Schülerinnen und Schülererfahren, welche wichtige Rolle das Testen schon während und nicht erst am Ende derEntwicklung einer robusten und zuverlässigen Lösung spielt. (2) Sie erkennen, welcheVorteile eine Automatisierung in diesem Zusammenhang bietet. (3) Sie erhalten durch dasAusführen der Tests eine vergleichsweise schnelle und an ihr persönliches Arbeitstempoangepasste Rückmeldung über Aspekte ihres Arbeitsfortschritts. (4) Die lernbegleitendePrüfung einer Schülerlösung durch automatische Tests im Sinne eines inkrementellen „einbisschen schreiben, testen, ein bisschen mehr schreiben, wieder testen usw.“ Zugangskann Lehrkräfte entlasten. So haben Lehrende mehr Zeit für die individuelle Betreuung undUnterstützung ihrer Schüler.Entsprechend dieser Überlegungen wird ein Vorgehen gewählt, das einerseits konsequentund von Anfang an mit Aufgaben und zugehörigen vordeﬁnierten Tests arbeitet, andererseitseinige ausgewählte einfache vordeﬁnierte Tests reﬂektiert. Dabei werden den Lehrkräftendie vordeﬁnierten Tests auch als „worked examples“ zur Verfügung gestellt.So setzen sich die Lehrkräfte bereits in einer sehr frühen Phase ihres Lernprozesses mit demregelmäßigen Testen ihres Codes auseinander. Dadurch entwickeln sie ein Bewusstsein fürdie Notwendigkeit der systematischen Programmentwicklung. Sie beschäftigen sich nicht nurmit ihren eigenen möglicherweise verschieden di usen Erwartungen an den Code, sondernauch mit der durch die Tests sichergestellten Funktionalität. Die Studierenden arbeitenmit Java und entsprechenden JUnit-Tests, die in Gradle-Projekte10integriert sind. Gradlewird als Projektmodell verwendet, um die Ausführung der Tests und den Projektimport indie Entwicklungsumgebungen möglichst einfach zu gestalten. Als Entwicklungsumgebungdient IntelliJ, wobei geplant ist BlueJ mit einzubeziehen.Thematisch fokussiert das Modul die folgenden Konzepte:Klasse, Objekt, Kontrollstrukturen,einfache Datenstrukturen, Datenkapselung, Exceptions, PolymorphieundProgrammierkon-10https://gradle.org/166 Marc Berges et al.Erfahrungsbericht Qualiﬁzierungsmaßnahme Informatik als Erweiterungsfach Realschule Bayern 7ventionen. Der methodische Aufbau des Moduls deckt sich mit dem des ThemenbereichsDatenbanken.2.4 Teilnehmerinnen und Teilnehmer der MaßnahmeDie Gewinnung von Interessenten erfolgte seitens des Kultusministeriums über entspre-chende Schreiben an die Schulleitungen. Die vom Ministerium ausgewählten ca. 80Teilnehmerinnen und Teilnehmer der ersten Kohorte wurden im Anschluss gleichmäßigauf die Universitäten Bayreuth, Erlangen-Nürnberg, Passau und Würzburg verteilt undsind dort als reguläre Studierende in Erweiterungsstudiengängen für das Lehramt an Real-schulen eingeschrieben. Die gleichmäßige Verteilung auf die Standorte führt bei einzelnenTeilnehmenden zu sehr langen Anfahrtswegen zu den Präsenzveranstaltungen.Tabelle2zeigt relevante (berufs-)biographische Daten der Teilnehmerinnen und Teilnehmer.Die Hälfte von ihnen hat bereits erste Unterrichtserfahrung im Fach Informatik / Informa-tionstechnologie gesammelt. Die unterrichtliche Tätigkeit erfolgte meist im Rahmen vonfachfremdem Unterricht bzw. aufgrund einer Lehrerlaubnis.Merkmal Anzahl Merkmal AnzahlGeschlecht (n=80) Unterrichtsfahrung (n=76)weiblich 38 1-5 Jahre 15männlich 42 6-10 Jahre 32mehr als 10 Jahre 29Unterrichtsfächer (n=80) Unterrichtserfahrung Informatik/IT (n=76)Mathematik oder Physik 42 keine 26Biologie oder Chemie 8 1-5 Jahre 17andere 30 6-10 Jahre 12mehr als 10 Jahre 11Tab. 2: (Berufs-)biographische Merkmale der Teilnehmerinnen und Teilnehmer3 Erste EvaluierungsergebnisseKurz vor Ende des ersten Halbjahres wurden die Teilnehmerinnen und Teilnehmer miteiner Online-Erhebung um ein erstes Feedback zu ihren bisherigen Erfahrungen mit derMaßnahme gebeten. Zudem wurden Selbstwirksamkeitsaspekte und Motivation untersucht.Um die allgemeine Zufriedenheit besser einordnen zu können, haben wir zunächst nachdem empfundenen Kursniveau gefragt (Wie haben Sie die Gesamtschwierigkeit des erstenKurshalbjahres empfunden?). Auf einer 5-stuﬁgen Likert-Skala geben drei Teilnehmende an,das Kursniveau sei viel zu hoch, 29 empﬁnden es als zu hoch und 29 als angemessen. Dierestlichen Teilnehmerinnen und Teilnehmern der Maßnahme haben kein Feedback gegeben.Qualiﬁzierungsmaßnahme Informatik als Erweiterungsfach 1678 Berges et al.Abb.1zeigt ein erstes Bild der Zufriedenheit der Teilnehmerinnen und Teilnehmer mitden einzelnen Komponenten des Kursdesigns, wie Lesesto  in Form des eingesetztenFachbuchs, die Durchführung der Präsenzveranstaltungen, die für den Kurs erstelltenAufgabenblätter, die Auswahl der Themenbereiche und alle sonstigen Materialien wie z.B.Vorlesungsmitschnitte (Wie zufrieden waren Sie mit den folgenden Aspekten des Kurses?).Antworten konnten auf einer 4-stuﬁgen Likert-Skala von gar nicht zufrieden (1) über nichtzufrieden (2) und zufrieden (3) bis zu sehr zufrieden (4) gegeben werden. Abb. 1: Einschätzung der Zufriedenheit mit den einzelnen Komponenten des KursdesignsNeben der Zufriedenheit mit den einzelnen Komponenten des Kursdesigns haben wir auchnach der Zufriedenheit mit dem Lernfortschritt gefragt. Basierend auf dem Instrument vonMichalis Giannakos [GHC13] haben wir folgende Aussagen auf einer 4-stuﬁgen Likert-Skalabezüglich des Grades der Zustimmung bewerten lassen:•Ich kann einen Überblick über die Konzepte des ersten Halbjahres geben.•Ich habe die Konzepte des ersten Halbjahres verstanden.•Ich habe im ersten Halbjahr viel gelernt.•Ich nehme aus dem ersten Halbjahr ein erweitertes bzw. vertieftes Verständnis derKonzepte mit.Die Mehrheit der Teilnehmerinnen und Teilnehmer ist mit dem Lernfortschritt zufrieden.Nur sechs der Teilnehmenden zeigen sich mit Ihrem Lernfortschritt unzufrieden.Zur Erfassung der Motivation wurde auf die kurze Version des „Intrinsic MotivationInventory“11von Deci & Ryan zurückgegri en. Dieses Messinstrument basiert auf derSelf-Regulation Theory [DR12]. Abb.2gibt einen Überblick über die Motivation bezüglichder vier Faktoren „Interesse/Vergnügen“, „wahrgenommene Kompetenz“, „wahrgenommene11https://selfdeterminationtheory.org/168 Marc Berges et al.Erfahrungsbericht Qualiﬁzierungsmaßnahme Informatik als Erweiterungsfach Realschule Bayern 9Wahlfreiheit“ und „Druck/Anspannung“ die mittels Faktorenanalyse auch in unseren Datenbestätigt werden konnten. Dabei spiegelt „Interesse/Vergnügen“ direkt die intrinsischeMotivation wieder, die „wahrgenommene Kompetenz“ reﬂektiert das Kompetenzbedürfnisund die „wahrgenommene Wahlfreiheit“ das Autonomiebedürfnis. Sind die letzten beidennicht erfüllt, stellt sich ein Gefühl von Druck und Anspannung ein, welches als negativerPrädiktor für die intrinsische Motivation gilt. Abb. 2: Verteilung der Teilnehmenden bezüglich der Wahrnehmung (tri t überhaupt nicht zu (0), tri teher nicht zu (1), teils teils (2), tri t eher zu (3), tri t voll und ganz zu (4)) der Motivationsfaktoren4 Zusammenfassung und AusblickInsgesamt können wir für die Maßnahme nach dem ersten Halbjahr ein positives Fazitziehen, haben aber im Rahmen der Evaluation einige Elemente gefunden, die in den nächstenHalbjahren noch verbessert werden müssen. So ist die Zufriedenheit mit dem Kursdesigninsgesamt relativ hoch. Allerdings bezieht sich das vor allem auf die mit Präsenz assoziiertenElemente (Präsenzveranstaltung, Themenauswahl und Aufgabenblätter). Die Elemente des„ﬂipped-classroom“ wie Lesesto  und sonstiges zum Selbststudium bereitgestelltes Materialschneiden eher schlechter ab. Für die kommenden Kursmodule bedeutet das, dass weitereAnstrengungen in die Aufbereitung von Lehrmaterialien gelegt werden müssen. Die Präsenzlässt sich aufgrund der ohnehin als hoch bis sehr hoch empfundenen Arbeitsbelastung undder mitunter weiten Anfahrtswege nicht steigern. Trotz der hohen Arbeitsbelastung gibt esbisher von 80 Teilnehmenden nur vier AbbrecherInnen zu verzeichnen, was verglichen mitüblichen Abbruchraten nach dem ersten Semester eine ordentliche Quote darstellt.Die Motivationsverteilung zeigt einige interessante Aspekte, die in die Planung undDurchführung der folgenden Module eingehen wird. So liegt das Interesse und damit dieintrinsische Motivation weiterhin im „positiven“ Bereich. Allerdings ist die empfundeneKompetenz eher als „neutral“ zu betrachten mit einer leichten Tendenz zum „negativen“Qualiﬁzierungsmaßnahme Informatik als Erweiterungsfach 16910 Berges et al.Empﬁnden. Dies kann aber auch am Zeitpunkt der Erhebung vor der ersten Klausur liegen.Die fehlende Autonomie, die ein wenig in der Natur der Maßnahme liegt, ist ein Aspekt demin den kommenden Semestern unbedingt begegnet werden muss, um ein weiteres Absinkender Motivation zu verhindern. Ebenso muss der empfundene Druck, der sicherlich mit demFortschreiten der Maßnahme eher zunehmen wird, im Auge behalten werden.Neben den weiteren Semestern haben die gewonnenen Erkenntnisse auch unmittelbareAuswirkungen auf die zweite Kohorte der Realschullehrkräfte, die die Maßnahme imSchuljahr 2019/2020 beginnen werden. Außerdem soll der sich aus der Einführung vonverpﬂichtendem Informatikunterricht in der 11. Jahrgangsstufe für alle Ausbildungsrichtun-gen der bayerischen Gymnasien ergebende massive Bedarf an neuen Informatiklehrkräftenebenfalls durch eine Nachqualiﬁzierung gedeckt werden. Ziel ist es dabei, dass an jedemder rund 400 bayerischen Gymnasien eine zusätzliche Informatiklehrkraft zur Verfügungsteht. Die Maßnahme wird zum Schuljahr 2019/2020 anlaufen und auf den Erkenntnissender hier beschriebenen Maßnahme aufbauen.Literaturverzeichnis[BM16]Braught, Grant; Midki , James: Tool Design and Student Testing Behavior in an Introduc-tory Java Course. In: Proceedings of the 47th ACM Technical Symposium on ComputingScience Education. SIGCSE ’16, ACM, New York, NY, USA, S. 449–454, 2016.[BS12]Bergmann, Jonathan; Sams, Aaron: Flip your classroom: Reach every student in everyclass every day. ISTE and ASCD, Eugene, Or. and Alexandria, Va., 1. ed.. Auﬂage, 2012.[DR12]Deci, Edward L.; Ryan, Richard M.: Motivation, Personality, and Development WithinEmbedded Social Contexts: An Overiew of Self-Determination Theory. In: The Oxfordhandbook of human motivation, S. 85–107. Oxford University Press, New York, 2012.[GHC13]Giannakos, Michail; Hubwieser, Peter; Chrisochoides, Nikos: How students estimate thee ects of ICT and programming courses. In: Proceedings of the 44th ACM technicalsymposium on Computer science education. ACM Press, New York, S. 717, 2013.[KE15]Kemper, Alfons; Eickler, André: Datenbanksysteme: Eine Einführung. De GruyterOldenbourg, Berlin and Boston, 10. auﬂage. Auﬂage, 2015.[OT05]Oliver, Martin; Trigwell, Keith: Can ‘Blended Learning’ Be Redeemed? E-Learning andDigital Media, 2(1):17–26, 2005.[Sp09]Spohrer, Matthias: Konzeption und Analyse neuer Maßnahmen in der Fortund Weiterbil-dung von Informatiklehrkräften. 2009.[SS13]Stejskal, R.; Siy, H.: Test-driven learning in high school computer science. In: 2013 26thInternational Conference on Software Engineering Education and Training (CSEE T). S.289–293, May 2013.170 Marc Berges et al.Arno Pasternak (Hrsg.): INFOS 2019 – Informatik für alle,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019    1   „Bildung in der digital vernetzten Welt“ Ohne Informatik nicht denkbar!? Folgerungen aus mehr als 50 Jahren 'Digitalisierung' der Bildung Dieter Engbring1 Abstract: In diesem Aufsatz wird diskutiert, ob bzw. in welchem Umfang „Bildung in der digital vernetzten Welt“ informatische Bildung beinhalten sollte. Dazu wird aufgezeigt, dass die Diskus-sion um eine solche Bildung nicht nur seit vielen Jahrzehnten geführt wird, sondern dass seit etwa 30 Jahren auch die entsprechenden Herausforderungen benannt sind, ohne dass diese gelöst wer-den konnten. Zur empirischen Erforschung dieser Herausforderungen wird ein Alternativvorschlag unterbreitet, der die verschiedenen Perspektiven miteinander verbindet.   Keywords: Digitalisierung, Allgemeinbildung, Medienbildung, Technikgenese 1 Einleitung Der Prozess der 'Digitalisierung' wird nicht nur durch neue Hardware schulische Bildung verändern, auch Ziele und Inhalte werden sich wandeln müssen. Die Strategie der Kul-tusministerkonferenz für eine „Bildung in der digitalen Welt [KMK17] und der darauf Bezug nehmende Medienkompetenzrahmen NRW2 sind Zeugen dafür. „Bildung in der digitalen vernetzten Welt (kurz: Digitale Bildung)“ ist die Bezeichnung für diesen Trans-formationsprozess, die in der »Dagstuhl-Erklärung« [GI16b] genutzt wird. In der Erklä-rung wird beschrieben, dass die Informatik daran Anteil haben sollte, ohne dass erneut die Forderung nach einem Pflichtfach Informatik erhoben wird.3 Mithin stellt sich die Frage, wie Informatik einen Beitrag zur Bildung in der digitalen vernetzten Welt“ leistet. Dieses zu untersuchen bietet die bildungspolitisch ausgerichtete Erklärung insofern ei-nen Ansatzpunkt, da hierin (nicht zum ersten Mal) der Vorschlag unterbreitet wird, dass es drei Perspektiven auf eine solche Bildung gibt und dass diese aufeinander zu beziehen sind. Dieses ist jedoch nie wirklich gelungen. Möglichen Gründen dafür wird in diesem Aufsatz in Abschnitt 3 nachgegangen und zur weiteren Erforschung dieser Gründe in Abschnitt 4 ein Alternativvorschlag unterbreitet. Dieser Einleitung folgt zunächst ein Abschnitt, in dem die Ähnlichkeit zu früheren Diskussionen aufgezeigt wird. Mit einem 'Fazit mit Ausblick' werden die nun anstehenden Forschungsfragen benannt.                                                            1 Universität Bonn, Institut für Informatik, Endenicher Allee 19a, 53115 Bonn, dieter.engbring@uni-bonn.de 2 https://medienkompetenzrahmen.nrw.de/ 3 Dies ist mindestens ungewöhnlich, da diese Forderung nach einem Pflichtfach, ansonsten Bestandteil vieler solcher »Dagstuhl-Erklärungen« gewesen ist, zuletzt im Jahr 2015. https://gi.de/meldung/informatikunterricht -gehoert-in-die-schule/. Dort als 3. »Dagstuhl-Erklärung« ausgewiesen.  cba doi:10.18420/infos2019-17Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 171 2    Dieter Engbring    2 Über 50 Jahre Digitalisierung des Bildungswesens B. Koerber und J. Müller haben im Editorial der LOG IN 187/188 daran erinnert, dass schon sehr viele Jahre – wenn auch unter anderen Überschriften – von Digitalisierung der Bildung die Rede ist [KM18]. In den Debatten enthalten waren immer zwei Aspekte, die bildungspolitisch bis heute nicht immer getrennt werden. Einerseits geht/ging es um den Einsatz computergestützter Systeme zur Verbesserung (?) des Unterrichts. Anderer-seits sollen computergestützter Technologien im Unterricht thematisiert werden. Dieser Aufsatz kapriziert sich auf den zweiten Aspekt und zählt hierzu auch die Diskussionen um die Notwendigkeit informatischer Bildung.  Bereits vor etwa 50 Jahren gab es auch in Deutschland erste Pilotprojekte zu einem In-formatikunterricht [KM15]. Bald nach ihrer Etablierung als Disziplin an den Universitä-ten, wurde Informatik 1972 zum Schulfach, da es in den Katalog der Wahlpflichtfächer der gymnasialen Oberstufe aufgenommen wurde. Seither stockt die Entwicklung jedoch. Zwar ist Informatik auch zu einem Wahlpflichtfach in der Sekundarstufe I geworden; Pflichtfach ist es jedoch nur punktuell.4 Anstelle der Einrichtung eines Pflichtfaches wurde seit Beginn der 1980er Jahre immer wieder versucht, Computer als Teil sog. fachübergreifenden Lernbereichen zu thematisieren. So wurde 1984 zunächst ein Rah-menund dann 1987 ein Gesamtkonzept zur „informationsund kommunikationstechni-schen Grundbildung“ (je nach Bundesland ITG oder IKG abgekürzt) vorgestellt. Dieses Gesamtkonzept enthält als bildungspolitischer Kompromiss neun Aufgaben [BLK87], die sich allerdings wenig kohärent auf Anwendungsschulung, kritische Reflexion der technologischen Entwicklung, ein wenig Hardwarekunde und Algorithmik beziehen. Die mit diesen Aufgaben verknüpften Inhalte und Ziele lassen sich – das ist letztlich das Ergebnis der nordrhein-westfälischen Interpretation – auch in einem Dreieck anordnen [ITG91]. Die Gegenüberstellung des »Dagstuhl-Dreieck« (links) mit dem Dreieck aus dem NRW-ITG-Lehrplan in der nachstehenden Abbildung zeigt die Ähnlichkeit.    Abb. 1: Gegenüberstellung »Dagstuhl-Dreieck« und aus Auszug aus dem NRW-Lehrplan  zur Umsetzung der Informationstechnischen Grundbildung                                                            4 In einer Online Petition für ein Pflichtfach Informatik in Nordrhein-Westfalen (NRW) werden fünf Bundes-länder aufgezählt, in denen es etabliert ist oder kurzfristig erfolgen soll. www.informatiknrw.de  172 Dieter Engbring Informatik und »Digitalisierung«   3   Für jede der drei Perspektiven wird in dem älteren Dreieck eine Vielzahl von Beispielen genannt, an der sich die notwendige didaktische Analyse mit nachfolgender Aufberei-tung Nahrung fand. Es sind damals eine Vielzahl zeitgemäßer Thematisierungen vorge-legt worden. Diese standen jedoch für sich allein, waren nicht exemplarisch, ohne echte Zusammenhänge, da mal dieses und mal jenes Fach zuständig war und nur auf den aktu-ellen Stand der Technik ausgerichtet. Ein auf die absehbare Zukunft gerichtetes Lernen war kaum möglich, da eine übergreifende (= informatische?) Perspektive fehlte.  Solche fachübergreifenden Lernbereiche erscheinen vielen bildungspolitischen Verant-wortlichen auch heute noch ausreichend zu sein, den Themen 'Computer nutzen und einschätzen' gerecht zu werden. Dabei spielt einerseits das Wissen darum, dass es kaum ausgebildete Informatik-Lehrer gibt, sicher ebenso eine Rolle wie eine gewisse Ignoranz (in der ganzen Bandbreite von Unwissenheit bis Missachtung) in Bezug auf die Informa-tik, die vermeintlich nur ein Fach für Freaks und Nerds ist. Andererseits liegt die immer wieder aufkommende Forderung nach einem Pflichtfach zwar in der Logik eines Bil-dungssystems, das die Inhalte dessen, was als allgemeinbildend angesehen wird, wei-testgehend über Pflichtfächer definiert. Dabei werden jedoch zugleich die Performanz-probleme übersehen, die Pflichtfächer haben. Vor allem Mathematik und Naturwissen-schaften, an denen sich die Informatik immer wieder orientiert hat, haben solche Prob-leme, die so ähnlich auch auf die Informatik zutreffen werden (vgl. hierzu [En14]).  Eine Ursache könnte darin liegen, dass lebenspraktische und wissenschaftspropädeuti-sche Zielsetzungen nicht ohne weiteres im selben Bildungsangebot erreicht werden kön-nen. Heymann hat vor über 20 Jahren für die Mathematik auf der Grundlage seiner Auf-gaben allgemeiner Bildung einen Vorschlag unterbreitet, der ein drei Stufen umfassen-des Kurssystem vorsieht. Auf der ersten Stufe sollen nur die lebensnotwendigen Inhalte vermittelt werden. Auf der zweiten Stufe, die dann nicht mehr verpflichtend ist, die darüber hinausgehenden und auf der dritten die speziell studienvorbereitenden. Für die Mathematik konkretisiert er: Wäre Lebensvorbereitung die einzige Aufgabe von Allge-meinbildung, würden die ersten sieben Jahre Mathematik ausreichen, in denen die Schü-ler das bürgerliche Rechnen inklusive der Prozentund der Zinsrechnung und die ele-mentare Geometrie erlernen. [He96; 151ff] Für die Schulinformatik hat man bisher nicht wirklich explizieren können, was solche basale Qualifikationen sein könnten. Auch die Kompetenzerwartungen der Sekundarstufe I [GI08] und für die Primarstufe [GI19] ste-hen in der Tradition des algorithmenorientierten Ansatzes, der– wie im folgenden Ab-schnitt gezeigt wird – vor allem fachwissenschaftliche Perspektiven fokussiert.  3 Ältere bis heute gültige Bestandaufnahmen Ziel dieses Abschnitts ist es zu zeigen, dass nicht nur die fachübergreifenden, sondern auch die fachbezogenen Ansätze blinde Flecken in Bezug auf die drei verschiedenen zu berücksichtigenden Perspektiven aufweisen. Dazu wird zunächst auf Peschkes 1989 ver-öffentlichte Bestandsaufnahme eingegangen, mit der er auf der eine „Krise des Informa-Bildung in der digital vernetzten Welt 173 4    Dieter Engbring    tikunterrichts“ für die 1990er Jahre prognostizierte [Pe89]. Insbesondere reflektiert er darin die Beziehung von Informatikunterricht und ITG/IKG (3.1). Aus der kurz darauf veröffentlichten Bestandsaufnahme von Forneck [Fo92] zu den bis dahin vorliegenden fachdidaktischen Konzepten der Informatik geht zudem hervor, welche Herausforderun-gen die angestrebte Verbindung der drei Perspektiven mit sich bringen (3.2), die  – das wird abschließend gezeigt – bis heute allenfalls im Ansatz gelöst sind. Hier geht es auch um die Frage, ob und wie lebenspraktische und darüber hinaus reichende (wissenschaft-liche) Ziele überhaupt miteinander verzahnt werden können (3.3).  3.1 Zur „Krise des Informatikunterrichts“ Der Aufsatz zur prognostizierten Krise des Informatikunterrichts ist eigentlich eine Be-standsaufnahme zum Informatikunterricht nach Einführung der ITG/IKG. Peschke prä-sentiert fünf Schlussfolgerungen, die auf Erfahrungen basieren, aber nicht im strengen Sinne empirisch sind. Diese Schlussfolgerungen sind letztlich Hypothesen zum damali-gen Stand der Informatik in der Schule: 1. Der Stellenwert und Qualität des Informatik-unterrichts geben keinen Anlass zur Zufriedenheit; die Inhalte sind durch die partielle Einführung von Leistungskursen weiter diversifiziert worden. 2. Der 'Bildungskern' ist undeutlich geworden. Die Programmiersprache ist nicht mehr von zentraler Bedeutung. Dennoch konnten Algorithmenund anwendungsorientierte Zugänge nicht auf einander bezogen werden. 3. Fachübergreifende inhaltliche Anforderungen wie die Diskussion um gesellschaftliche Aspekte lösen Unsicherheiten aus. Es fehlt diesbezüglich an ent-sprechenden Leitbegriffen und Grundkategorien. 4. Aufgrund der medialen Bindung an Hardund Software kann man sich in der Informatik kaum auf Konstantes, Fundamenta-les und Exemplarisches besinnen. Im Informatikunterricht wird die Trennung zwischen Inhalt und Medium vielfach aufgehoben. 5. Die Grundbildung kann den Bedarf an in-formatischer Bildung nicht befriedigen. Der Bedarf wird wachsen, um ein Verständnis zu den neuen Technologien und deren Auswirkungen wirklich fördern zu können. [Pe89; 91ff] Erst durch die letzte Schlussfolgerung wird aus den Befunden in 1. bis 4. eine Kri-se. Wäre informatische Bildung prinzipiell verzichtbar, könnte Informatik als Wahl-pflichtfach oder gar im AG-Bereich verbleiben. Die Diskussion um ihren Beitrag zur Bildung würde sich erübrigen. Rückblickend hat sich diese fünfte Hypothese bestätigt. Nicht nur die »Dagstuhl-Erklärung« [GI16b] weist darauf hin. Allerdings stellt sich auch die Frage, ob der Informatikunterricht – zumindest mit seinen derzeitigen Curricula und Umsetzungen – dazu geeignet ist. Die Zweifel ergeben sich u. a. aus der Reflexion der Schlussfolgerungen Peschkes.  Die Diversifizierung der Inhalte konnte trotz der Anstrengungen der Fachdidaktik Infor-matik nicht eingedämmt werden. Zwar haben die „fundamentalen Ideen der Informatik“ [Sc93] und danach auch die Bildungsstandards für die Sekundarstufen [GI08, GI16a] ei-nen Beitrag zur Kanonisierung bzw. Konsolidierung geleistet. Diese kommen aber kaum zum Tragen, da sich insbesondere die mediale Bindung den Informatikunterricht immer wieder verändert hat: Dies betrifft auch die immer wieder neue Entwicklungsumgebun-gen (z. B. BlueJ) sowie Mini-Welten (z. B. Greenfoot, Scratch) und zudem immer neue 174 Dieter Engbring Informatik und »Digitalisierung«   5   'Tangibles‘ (LEGO-Mindstorms, Raspberry Pi, Arduino, Calliope etc.).5 Zudem hat auch in Bezug auf die fachübergreifenden Anforderungen keine Ablösung von der technologi-schen Entwicklung stattgefunden. Dies betrifft vor allem die Thematisierung gesell-schaftlicher oder kultureller Ausbzw. Wechselwirkungen, die sich auch immer an gera-de aktuellen oder neuartig erscheinen Anwendungen der Informatik orientieren. Deren Thematisierung ist außerdem nur schwach mit den anderen Zielen verbunden, wie u. a. die Bestandaufnahme von Forneck im folgenden Unterabschnitt zeigt.  3.2 Revision der Ansätze informatischer Bildung 1992 legte Forneck eine Revision der bis dahin vorliegenden fachdidaktischen Ansätze vor, die empirisch fundiert ist.6 Er hat Unterrichtseinheiten gemäß dieser Ansätze gestal-ten, durchführen und analysieren lassen. Dabei wird deutlich, dass keiner der untersuch-ten Ansätze alle sich selbst gesetzten Ziele erreicht [Fo92]. In einem ersten Schritt wird auf Fornecks Erkenntnisse zum algorithmenorientierten Ansatz eingegangen, der sich in seinem Begründungszusammenhang auch auf die drei Perspektiven bezieht, [GI76] und im zweiten Schritt dann auf den anwendungsund den benutzungsorientierten Ansatz, die dies auch tun. Forneck beschreibt, dass der algorithmenorientierte Ansatz zwar die Ziele erreicht, die die Wissenschaftspropädeutik betreffen, die anderen Perspektiven jedoch weitestgehend unberücksichtigt lässt. Er schreibt: „[N]ormative und subjektive Fragen [fallen] aus dem Horizont der Problemstellung einer algorithmenorientierten Wirklichkeitskonstruktion … Die additive Hinzufügung von Fragen der Bewertung gesellschaftlicher Auswirkun-gen der Informatik verdankt sich der transzendentalen Trias von Objektivität, Informati-on und Subjektivität. Die ersten beiden Regionen der algorithmischen Weltkonstitution sind, da rationalisierbar, eigentlicher Gegenstand des Unterrichts. Die letzte Wirklich-keitsregion ’Subjektivität’ bleibt dem algorithmischen Denken unfassbar. Deshalb kön-nen in algorithmenorientierten Konzeption im 'eigentlichen' Unterricht Fragen normati-ven Richtigkeit und der subjektiven Wahrhaftigkeit nicht integriert werden, weshalb sie additiv hinzugefügt werden müssen.“ [Fo92; 177]  Die anderen eher auf die Lebenspraxis ausgerichteten Ansätze (namentlich der benut-zungsorientierte Ansatz, der maßgeblich von der ITG/IKG bestimmt ist sowie der an-wendungsorientierte, der als expliziter Gegenentwurf zum algorithmenorientierten ge-staltet wurde) erreichen die selbstgesteckten Ziele ebenso wenig. So schreibt Forneck ab-schließend zum anwendungsorientierten Ansatz: „[Es] wurde aufgewiesen, dass es in den untersuchten Unterrichtsreihen nicht gelingt, nach einer Algorithmisierung und Programmierung diese Tätigkeiten auf gesellschaftliche Fragestellungen zurückzubezie-hen. Dies liegt auch an der Komplexität und Voraussetzungshaftigkeit der Algorithmi-sierung und Programmierung.“ Zudem führt Forneck aus, dass es diesen Ansätzen nicht                                                            5 Tatsächlich ist dies nur eine Arbeitshypothese, die hier nicht ausführlich erörtert werden kann.  6 Auch der Autor dieses Aufsatzes hat Fragen zu Fornecks Methodik. Die Ergebnisse zu den Herausforderun-gen der Verbindung der drei in Frage stehenden Perspektiven scheinen hiervon jedoch unabhängig.  Bildung in der digital vernetzten Welt 175 6    Dieter Engbring    gelungen ist, den Begriff 'Anwendung' zu klären: Ist Anwendung im Sinne von 'Applica-tion' oder im Sinne der Anwendung informatischer Denkweisen gemeint? [ebd.; 229f] Insgesamt resümiert er, dass man in allen ihm vorliegenden Ansätzen „den eigentümli-chen Charakter technischer Objektivität.“ [ebd.; 272] unberücksichtigt lässt. „Dem kon-struktiven Charakter der Technik muss ein konstruktiver Charakter (Informations)tech-nischer Bildung entsprechen. Dieser nicht analytische, sondern konstruktive Charakter ist die eigentliche fachdidaktische Herausforderung, die mit der unterrichtlichen Behand-lung von Technik verbunden ist.“ [ebd.; 273] Diese Herausforderung beschreibt er wie folgt: So „vermag ein Informatikunterricht die Leistung traditioneller Fächer insofern nicht erreichen, weil die Technisierung der Lebenswelt einen Entwicklungsstand ange-nommen hat, der es nicht mehr möglich erscheinen lässt, dass Individuen verstehende Rekonstruktionen der Wirklichkeit allein, sozusagen als Ausfluss eines wie auch immer gearteten Fächerkanons, zu leisten vermöchte.“ [ebd.] Allerdings leisten auch fächer-übergreifende Ansätze dieses wohl nicht, weil sie die Informatik nicht miteinbeziehen. Diese Herausforderung wiederum ist allerdings aus der Didaktik der Informatik heraus allein nicht zu lösen, wohingegen die Integration der Sichten anderer Fächer in die In-formatik von der Didaktik der Informatik geleistet werden kann. Die damit verbundenen Herausforderungen sind bis heute weiterhin ungelöst.  3.3 Zu den bis heute ungelösten Herausforderungen In der Didaktik der Informatik hat man sich kaum mit Fornecks Aufforderungen befasst, die didaktische Analyse aus Sicht der Begriffe 'Anwendung' und 'Technik' zu intensivie-ren. Es wäre darum gegangen zu klären, auf was sich Anwendung bezieht (Denkweisen oder Informatiksysteme) und den (besonderen) technischen Charakter der Informatik zu berücksichtigen. Stattdessen hat man sich vornehmlich an der Mathematik – wie oben schon dargestellt – und deren Bildungsziele orientiert, insbesondere auch, was die über das Fach hinausreichenden Ziele betrifft. Diese werden in der Informatik vor allem unter der Überschrift »Computational Thinking« (CT) propagiert. 'Informatisches Denken' (als nicht direkte aber nahliegende Übersetzung) wird als durch die Informatik und auch in vielen anderen Bereichen anwendbares Ziel ausgegeben. CT setzt damit auf 'Anwendung der Denkweisen' statt auf 'Anwendungen der Informatik'.  Ursprünglich steht, wie Denning, Tedre und Youngpradit beschreiben, CT im direkten Zusammenhang mit der Entwicklung programmierbezogener Fähigkeiten. Diese werden dann als auf die Lebenswirklichkeit der Lernenden übertragbar dargestellt. Hierzu stellen Denning u. a. jedoch dar, dass viele Lernende den hier notwendigen Transfer offenbar nicht leisten. Sie sehen gar in diesen über die Informatik hinausreichenden Deutungen informatischer Denkweisen sogar einen „computational chauvinism“ [DTY17; 33].  Bezüglich des CT wird in den letzten Jahren ausdrücklich auf J. Wing Bezug genom-men, die 2006 die Diskussion darum wiederbelebt hat. Weniger Beachtung findet, dass sie dabei Widersprüchliches fordert. Unter der Überschrift „What it is, what it isn’t“ benennt sie u. a. zwei Ausschlüsse: „Ideas, not artifacts“ sowie „Conceptualizing, not 176 Dieter Engbring Informatik und »Digitalisierung«   7   programming” während sie andererseits schreibt „Complements and combines mathema-tical and engineering thinking” [Wi06; 35]. Die Komplementarität nimmt auf den beson-deren technischen Charakter der Informatik Bezug. Aber wie soll die Komplementarität verstanden werden, wenn man wirklich die Artefakte (Informatiksysteme) und das Pro-grammieren außen vor lässt? Man würde tatsächlich den technischen Charakter der In-formatik negieren. Außerdem wird nicht der Versuch unternommen, die anwendungsbe-zogene Perspektive für die Informatik zu klären. Dazu müsste es eigentlich 'Conceptuali-zing within programming’ sowie 'Ideas by artifacts' heißen. Aus Letzterem würde sich ein rekonstruktives bzw. sogar experimentelles Vorgehen ergeben.  So bezieht CT in der Deutung von J. Wing zwar den (besonderen) technischen Charakter der Informatik mit ein, schlägt sich allerdings in der Deutung des Begriffes Anwendung einseitig auf die Seite der Anwendung der Denkweisen, da sie die Informatiksysteme ausblendet.  Die durchaus vorhandenen Zusammenhänge von Anwendung der Denkwei-sen und Artefakten können so kaum verstanden werden. Diese besser zu verstehen, hat Peschke einen Ansatz vorgelegt [Pe90]. Dieser Vorschlag konnte jedoch in der Didaktik der Informatik nicht überzeugen. Zu nah positioniert er die Schulinformatik in der Nähe des Lernbereichs Arbeitslehre/Technik. Unter anderem definiert Peschke in diesem Auf-satz Rollen im Umgang mit – wie man heute sagen würde – Informatiksystemen, auch um Unterschiede zur ITG/IKG darzustellen. Beide Bildungsangebote adressieren diese vier Rollen, wenn auch in unterschiedlicher Ausprägung. Diese Rollen definiert er mit „Betroffener, Bediener, Benutzer und Gestalter“.7 Eine im Unterschied zu dieser norma-tiven Setzung empirisch fundierte Kategorisierung des Umgangs mit Informatiksystemen hat viele Jahre später M. Knobelsdorf mit ihrer Analyse von Computernutzungsbiogra-fien vorgelegt. Sie nennt auch vier Umgangsweisen: „ausprobieren“, „anwenden“, „ver-ändern“ und „erzeugen“. Als zusätzliches Ergebnis kann sie zeigen, dass „Erzeugen“ nur von informatik-affinen Personen ausgefüllt wird [Kn08]. Damit stellt sich insbesondere die Frage, ob es klug ist, den Informatikunterricht beim 'erzeugen' (gestalten) zu starten. Im folgenden Abschnitt darzustellenden Zugang wird entsprechen beim „Ausprobieren“ bzw. „Anwenden“ angesetzt, um darüber zum „Verändern“ und ggf. zum „Erzeugen“ zu gelangen.  4 Didaktische Aufbereitung via „Dagstuhl in Progress“ Das »Dagstuhl-Dreieck« ist wie die dazugehörige Erklärung zunächst nur ein Kommu-nikationsmittel für bildungspolitische Auseinandersetzung. Es folgt letztlich der Marke-ting-Maxime 'keep it small and simple' und ist deswegen für die bildungspolitische Aus-einandersetzung besonders gut geeignet. Aber auch für den wissenschaftlichen und fach-didaktischen Diskurs bieten die darin benannten Strukturmomente und Prinzipien die Möglichkeit den Prozess der Digitalisierung zu analysieren. Im Zuge einer Tagung mit                                                            7 Er unterscheidet 'Bediener' und 'Benutzer' insofern, da bedienen mit der Unterordnung unter bzw. Anpassung an die Systemrationalität zusammenhängt, während benutzen deutlich selbstständiger und selbstbewusster ist [Pe90; 32] Bildung in der digital vernetzten Welt 177 8    Dieter Engbring    dem programmatischen Titel „Dagstuhl in Progress“ haben neben Informatikern und Medienpädagogen auch Medienwissenschaftler das Dreieck weiterentwickelt und be-grifflich präzisiert. Nach eineinhalb Tagen Diskussionen war man trotz anderer Überle-gungen bei drei Perspektiven geblieben,8 hatte diese jedoch umbenannt. An die Stelle der letztlich zu kurz greifenden Fragen waren nun Inhalte getreten (vgl. hierzu die Darstel-lung in [En18] und Abb. 2 links). Dieses auf der Arbeitstagung weiterentwickelte Drei-eck ist letztlich nur ein weiteres Zwischenresultat der notwendigen begrifflichen Diskus-sionen, die zu führen eine Daueraufgabe ist und nicht durch weitere bildungspolitische Verlautbarungen abgeschlossen werden kann. Es bildet im Folgenden den Ausgangs-punkt einer didaktischen Aufbereitung, die die Ergebnisse der Bestandaufnahmen mit-einbezieht. Es wird ein Zugang skizziert, der beim individuellen Umgang und der gesell-schaftlichen Einbettung ansetzt und zugleich die Rolle von Technik und Techniken für den Menschen diskutiert, womit auch die Beziehung von Anwendungen der Informatik und Anwendung ihrer Denkweisen miteinbezieht ('ideas by artifacts'). Dieser Zugang stellt die Anwendungen der Informatik in einen technikgenetischen Zusammenhang, in dem die Bedeutung von digitalen Artefakten für Kultur, Arbeit und Freizeit herausgear-beitet wird.    Abb. 2: Gegenüberstellung modifiziertes „Dagstuhl-Dreieck“ als (Zwischen-)Ergebnis der  Arbeitstagung „Dagstuhl in Progress“ und Schaubild zur Verortung der vier Bausteine Der weitere Aufbau ergibt sich aus dem Versuch einmal im Uhrzeigersinn um das Drei-eck herum zu gehen (siehe Abbildung 2 rechts). Dabei wird in den ersten drei Baustei-nen auf je zwei Perspektiven Bezug genommen. 2. und 3. beziehen sich dann auf die Strukturen und Funktionen solcher 'Medien' unterhalb der sichtbaren Oberfläche. In 2. geht es um die Vernetzung und Medienintegration am Beispiel von Dateiformaten, HTML und http. Diese werden auch in ihrer geschichtlichen Entwicklung ausgehend von der Diskussion um 'Multimedia' aus den 1990er Jahre miteinbezogen. In 3. wird auf das Besondere des technischen Artefakts 'Software' Bezug genommen. Dieses geschieht weniger konstruktiv denn rekonstruktiv. Hier ist Zeit und Raum das Zusammenspiel von                                                            8 So hatte der Tulodziecki in einem auf der Tagung vorliegenden, jedoch unveröffentlichten Handout als Diskussionsbeitrag zur „Dagstuhl-Erklärung“ [GI16b] angeregt, weitere Perspektiven zu berücksichtigen. 178 Dieter Engbring Informatik und »Digitalisierung«   9   modellieren und implementieren ('conceptualizing within programming') zu thematisie-ren. 4. Zum Abschluss wird auf wichtige Normen und Gesetze Bezug genommen, die sich auch aus den Besonderheiten von Software ergeben.  5 Fazit und Ausblick Dieser Rückblick auf frühere didaktische Diskussionen macht deutlich, dass eine Bil-dung in der digital vernetzten Welt wohl drei Perspektiven miteinander verbinden muss. Diese Perspektiven sind Teil der Begründungszusammenhänge für das Fach Informatik, ohne dass in der Praxis eine echte Verbindung dieser Perspektiven hergestellt wird. Al-lerdings leisten auch fachübergreifende Lernbereiche dies nicht. Bildung in der digital vernetzten Welt ist damit zwar ohne Informatik denk-, aber wohl nicht umsetzbar. Der Vorschlag aus Abschnitt 4 beinhaltet den Versuch durch eine technikgenetische Sicht auf die Anwendungen und die Denkweisen der Informatik, Lebensvorbereitung und Wissenschaftspropädeutik zu verbinden. Vielleicht ist diese Verbindung auch nicht mög-lich. Insofern ist Heymanns drei Stufen beinhaltendes Kurssystem eine andere mögliche Lösung, für die hier kein Vorschlag gemacht wird.9 Dieser Aufsatz ist damit die Auffor-derung (auch des Autors an sich selbst) diesen Zugang und die Strukturierung in der Praxis zu evaluieren, der möglicherweise erst in der Sekundarstufe II umsetzbar ist. Auch dort könnte noch ein Beitrag zu einer Bildung in der digitalen vernetzten Welt geleistet werden und die Defizite in der allgemeinen Bildung aufgearbeitet werden.  Literaturverzeichnis [BLK87] Bund-Länder-Kommission für Bildungsplanung und Forschungsförderung (Hrsg.): Gesamtkonzept für informationstechnische Bildung. Materialien zur Bildungsplanung. Heft 16, Bonn, 1987 [DTY17] Denning, P.J.; Tedre, M.; Youngpradit, P.: The Profession of IT. Misconception about Computer Science. Communications of the ACM. March 2017/Vol. 60, No. 3, S. 31 – 33. doi:10.1145/3041047 [En14] Engbring, D.: Zum Verhältnis von Informatik und Naturwissenschaften. Ein Vorschlag zur MINT-Förderung. In: Thomas, M., Weigend, M. (Hrsg.): Informatik und Natur. 6. Münsteraner Workshop zur Schulinformatik 9. Mai 2014. Books on Demand GmbH, Norderstedt. S. 9 – 18 [En18] Engbring, D.: Überlegungen zu einem Beitrag zur Lehrerbildung in der digital vernetz-ten Welt. Ein auf Erfahrungen gestützter Bericht und Diskussionsbeitrag. In: Thomas, M., Weigend, M. (Hrsg.): Informatik und Medien. 8. Münsteraner Workshop zur Schu-linformatik 18. Mai 2018. Books on Demand GmbH, Norderstedt. S. 95 – 106                                                            9 Hierzu können die laufenden Projekte im Primarund unteren Sekundarbereich auch in dieser Hinsicht aus-gewertet werden. Bildung in der digital vernetzten Welt 179 10    Dieter Engbring    [Fo92] Forneck, H. J.: Bildung im informationstechnischen Zeitalter. Untersuchung der fach-didaktischen Entwicklung der informationstechnischen Bildung. Sauerländer, Aarau Frankfurt a. M. Salzburg, 1992 [GI76] Brauer, W. u. a.: Zielsetzungen des Informatikunterrichts. In: Zentralblatt für Didaktik der Mathematik 8 (1976) S. 35-43 [GI08] Gesellschaft für Informatik. Grundsätze und Standards für die Informatik in der Schule Bildungsstandards für die Sekundarstufe I. https://www.informatikstandards.de/ docs/bildungsstandards_2008.pdf (16.2.2019) [GI16a] Gesellschaft für Informatik. Grundsätze und Standards für die Informatik in der Schule Bildungsstandards für die Sekundarstufe II. https://www.informatikstandards.de/ docs/Bildungsstandards_SII.pdf  (16.2.2019) [GI16b] Gesellschaft für Informatik. Bildung in der digital vernetzten Welt. https://gi.de/the-men/detail/dagstuhl-erklaerung-bildung-in-der-digital-vernetzten-welt-1/  (16.2.2019) [GI19] Gesellschaft für Informatik. Kompetenzen für informatische Bildung im Primarbereich https://www.informatikstandards.de/docs/v142_empfehlungen_kompetenzen-primarbereich_2019-01-31.pdf  (16.2.2019) [He96] Heymann, H. W.: Allgemeinbildung und Mathematik. Beltz, Weinheim Basel, 1996 [ITG90] Der Kultusminister des Landes Nordrhein-Westfalen (Hrsg.): Vorläufige Richtlinien zur informationsund kommunikationstechnologischen Grundbildung in der Sekun-darstufe I. Ritterbach. Frechen. 1990 [Kn11] Knobelsdorf, M.: Biographische Lernund Bildungsprozesse im Handlungskontext der Computernutzung. Dissertation FU Berlin. http://ddi.cs.uni-potsdam.de/ Examensar-beiten/Knobelsdorf2011.pdf (16.2.2019) [KM15] Knobelsdorf, M.; Magenheim, J. u. a.: Computer Science Education in North-Rhine-Westphalia, Germany. A Case Study. ACM Transactions on Computing Education (TOCE) Special Issue II on Computer Science Education in K-12 Schools Volume 15 Issue 2, May 2015 Article No. 9 ACM New York, NY, USA  doi>10.1145/271631  [KM18] Koerber, B.; Müller, J.: Analoge Erfahrungen. Editorial der Log IN 187/188. S. 3 [KMK17] Kultusministerkonferenz. Strategie der Kultusministerkonferenz. „Bildung in der digitalen Welt“. Beschluss der Kultusministerkonferenz vom 08.12.2016 in der Fas-sung vom 07.12.2017 [Pe89] Peschke, R.: Die Krise des Informatikunterrichts in den neunziger Jahren. In: Brauer, W.; Stetter, F. (Hrsg.): Informatik und Schule 1989: Zukunftsperspektiven der Infor-matik für Schule und Ausbildung, Springer. S. 89-98 [Pe90] Peschke, R.: Grundideen des Informatikunterrichts. Erfahrungen und Perspektiven aus den „alten“ Ländern der Bundesrepublik Deutschland. In: LOG IN 10 Heft 6, S. 25-33   [Sc93] Schwill, A.: Fundamentale Ideen der Informatik. In: Zentralblatt für Didaktik der Mathematik 25 Heft 1 (1993) S. 20-31. [Wi06] Wing, J.: Computational Thinking. Communications of the ACM. March 2006/ Vol. 49, No. 3, 33-35 180 Dieter EngbringArno Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Aufgabe ist nicht gleich Aufgabe –Vielfältige Aufgabentypen bewusst in Scratch einsetzenKatharina Geldreich1, Mike Talbot1und Peter Hubwieser1Abstract:Aufgaben sind ein fester Bestandteil jeden Unterrichts und können je nach Einsatz ver-schiedene didaktische Funktionen übernehmen. Auch beim Programmierenlernen spielen Aufgabeneine zentrale Rolle und können bei entsprechender Auswahl und Anwendung den Lernprozess derSchülerinnen und Schüler entscheidend beeinﬂussen. In der internationalen Fachliteratur lassensich verschiedene Frameworks und didaktische Ansätze ﬁnden, die sich damit auseinandersetzen,welche Entwicklung die Lernenden beim Programmierenlernen durchlaufen. Diese Ansätze undeinhergehende mögliche Aufgabenstellungen wurden im Rahmen einer Fortbildungsmaßnahme fürGrundschullehrkräfte zum Thema Algorithmik und Programmierung thematisiert. Damit die Teil-nehmerinnen und Teilnehmern gleichzeitig eine große Vielfalt an Aufgabenstellungen kennenlernen,wurden bei dem Design der Aufgaben bereits bestehende Aufgabenklassiﬁkationen für Programmier-aufgaben herangezogen. Der Praxisbeitrag beschreibt die erwähnten theoretischen Ansätze und zeigt,wie sie bei der Aufgabengestaltung umgesetzt werden können. Unser Fokus liegt darauf, wann welcherAufgabentyp im Lernprozess sinnvoll eingesetzt werden kann. Sämtliche Aufgaben beziehen sichdabei auf die blockbasierte Programmiersprache Scratch.Keywords:Programmieren; Aufgabentypen; Scratch1 EinleitungAufgaben können auf verschiedene Ziele ausgerichtet sein und dementsprechend unter-schiedliche didaktische Funktionen übernehmen. Dabei unterscheidet man grundlegendzwischen Aufgaben, die Lernende beim Aufbau und der Festigung von Wissen und Fä-higkeiten unterstützen, sowie prüfenden Aufgaben zur Ermittlung des Leistungsstands[Ri05]. Erstere stellen für Lehrkräfte ein zentrales Gestaltungselement für den Unterrichtdar und können ihnen helfen, Lernprozesse gezielt zu steuern. Auch beim Erlernen einerProgrammiersprache sind geeignete Aufgaben wichtig, um den Lernprozess der Schülerin-nen und Schüler bei entsprechender Auswahl und Anwendung entscheidend zu beeinﬂussen.Wie der Prozess des Programmierenlernens gestaltet werden sollte, ist nicht abschließendgeklärt und stellt Lehrende wie Lernende vor Herausforderungen [MR02]. VerschiedeneAutoren beschreiben didaktische Ansätze, in denen die Lernenden zunächst mit bereitsbestehenden Programmen arbeiten und diese immer weiter modiﬁzieren, bis sie schließlichselbstständig programmieren. Diese Ansätze und damit zusammenhängende Aufgabenwaren Gegenstand einer Fortbildung für Grundschullehrkräfte zum ThemaAlgorithmen und1Technische Universität München, School of Education, Professur für Didaktik der Informatik, Arcisstr. 21,80333 München,{katharina.geldreich,mike.talbot,peter.hubwieser}@tum.de cba doi:10.18420/infos2019-18Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1812 Katharina Geldreich, Mike Talbot, Peter HubwieserProgrammierung. Um die Lehrkräfte gleichzeitig mit unterschiedlichen Aufgabentypen inScratch vertraut zu machen, wurde bei der Aufgabengestaltung eine bestehende Taxonomiefür Programmieraufgaben herangezogen. Dieser Beitrag gibt zunächst einen Einblick in diezuvor erwähnten didaktischen Ansätze und Aufgabentaxonomien und beschreibt, wie imKontext der Fortbildung damit gearbeitet wurde. Um einen möglichst praxisnahen Einblickzu geben, werden verschiedene konkrete Beispielaufgaben beschrieben, die sich auf dievisuelle Programmiersprache Scratch beziehen. Diese können sowohl im Fortbildungsalsauch im Unterrichtskontext eingesetzt werden.2 Theoretischer Hintergrund2.1 Sca olding im UnterrichtDer Begri Sca olding(zu dt.Gerüst) bezieht sich im pädagogisch-psychologischenKontext auf die Unterstützung eines Lernprozesses durch verschiedene Maßnahmen wieAnleitungen, Denkanstöße oder andere Hilfestellungen [Sc06]. Diese Maßnahmen sollen dieSchülerinnen und Schüler auf dem Weg zum selbstständigen Handeln begleiten und werdenmit zunehmendem Können zurückgenommen. Sca olding kann auf verschiedenen Ebenenstattﬁnden und sich auf die Planung von Lernaufgaben und Unterrichtssequenzen (Makro-Ebene), die Strukturierung von Lernaufgaben in einzelne Arbeitsschritte (Meso-Ebene)oder die Interaktion zwischen Lehrkraft und Lernenden (Mikro-Ebene) beziehen [Va96].Im Kontext der Informatikdidaktik untersuchen sowohl Lee et al. [Le11] als auch Sentanceund Waite [SW17], welche Entwicklung die Schülerinnen und Schüler auf dem Weg zumselbstständigen Programmieren durchlaufen sollten und wie man sie im Sinne des Sca oldingdabei unterstützen kann. Lee et al. entwickelten dasUse-Modify-Create-Lehrkonzept, indem die Lernenden zunächst mit bereits bestehenden Programmen arbeiten und dieseschrittweise modiﬁzieren bis sie schließlich eigene Programme erstellen. Daraufhin folgt einiterativer Prozess des Testens, Analysierens und der Weiterentwicklung. Sentance und Waitestellen den Lehransatz PRIMM vor, der unter anderem auf der Arbeit von Lee et al. basiert.PRIMM ist die Abkürzung fürpredict,run,investigate,modifyundmake(zu dt.vorhersagen,ausführen,untersuchen,anpassen,machen). In beiden Ansätzen arbeiten die Lernendenzunächst mit bestehenden Programmen, nehmen kleinere und größere Veränderungen daranvor und erstellen schließlich komplette Programme eigenständig (Abb.1). Abb. 1: Sca olding beim Programmierenlernen182 Katharina Geldreich et al.Aufgabe ist nicht gleich Aufgabe – Vielfältige Aufgabentypen bewusst in Scratch einsetzen 32.2 AufgabentypenAufgaben sind ein zentraler Bestandteil des Informatikunterrichts und spielen sowohl für dasErarbeiten neuer Inhalte als auch für die Ermittlung des Leistungsstands eine wichtige Rolle.Besonders beim Programmierenlernen wird betont, dass sich Expertise nur durch praktischeAufgaben und intensives Üben einstellen kann [HM06]. Für die Entwicklung von Aufgabenlassen sich verschiedene Qualitätskriterien ﬁnden, an denen sich Lehrende orientierenkönnen [BHP14]. Neben der Berücksichtigung von Faktoren wie Kompetenzund Kontext-orientierung wird empfohlen, die Aufgabentypen zu variieren. Welche Aufgabentypen imKontext des Programmierens verbreitet sind, wurde mehrfach untersucht. Dabei entstandenverschiedene Aufgabentaxonomien, die z.B. deduktiv durch die Analyse verschiedenerCurricula [Bo08] sowie induktiv aus der Analyse von Programmieraufgaben abgeleitetwurden [RBH13]. Ruf et al. [RBH15] unterscheiden zwölf verschiedene Aufgabentypen,die sich durch die zur Lösung erforderlichen Schülerhandlungen (z.B. Code testen, Codeschreiben) und die Art der Darstellung der gegebenen Informationen (z.B. Text, Code,Bilder) unterscheiden.3 KontextUm zu beurteilen, ob sich Aufgaben für die jeweilige Zielgruppe und deren Kenntnisstandeignen, ist es wichtig, dass Lehrkräfte entsprechende Kriterien kennenlernen [HB14]. Nebenallgemeindidaktischen Kriterien wie z.B. O enheit der Aufgabe, Lebensweltbezug [Ma10],sollten Aufgaben immer auch im Kontext der jeweiligen Fachdidaktik gesehen werden. DerBereichAufgabenist daher auch in Modellen des fachdidaktischen Wissens (pedagogicalcontent knowledge) für die Informatik zu ﬁnden [Hu13].Zur Ausbildung von unterrichtsmethodischem Know-How wurden Grundschullehrkräfte imRahmen einer mehrtägigen Fortbildungsmaßnahme mit verschiedensten Programmieraufga-ben konfrontiert. Um die Programmierkenntnisse der Teilnehmenden weiter zu festigen,wurden sämtliche Programmieraufgaben zunächst eigenständig bearbeitet. Im Anschlusswurde derUse-Modify-Create-Ansatz, PRIMM sowie die Aufgabentaxonomie von Rufet al. eingeführt (vgl. Punkt 2). Um die Theorie mit der Praxis zu verknüpfen, ordnetendie Lehrkräfte die Aufgaben im Anschluss in die Sca olding-Kategorienuse,modifyundcreateein. Hier arbeiteten die Lehrkräfte zu zweit mit einem Satz Kärtchen, auf denendie Programmieraufgaben in Miniatur abgebildet waren und die entsprechend gruppiertwerden mussten. Dieses Vorgehen förderte die Auseinandersetzung mit den verschiedenenAufgabentypen in Bezug auf die Einordnung in die Sca olding-Kategorien.Die Fortbildung ist Teil des ProjektsAlgoKids – Algorithmen für Kinder, das vom Bayeri-schen Staatsministerium für Unterricht und Kultus gefördert und über einen Zeitraum vonzwei Jahren durchgeführt wird [GTH18]. Im Rahmen des Projekts werden insgesamt 40Grundschullehrkräfte in den BereichenAlgorithmikundProgrammierungfachwissenschaft-lich und fachdidaktisch fortgebildet und bei eigenen Unterrichtsversuchen begleitet.Aufgabe ist nicht gleich Aufgabe 1834 Katharina Geldreich, Mike Talbot, Peter Hubwieser4 AufgabenDie nachfolgende Auswahl zeigt exemplarisch, welche Aufgabentypen im Laufe der Fortbil-dung bearbeitet wurden. Die teilnehmenden Lehrkräfte haben in einer ersten Fortbildungbereits intensiv mit Scratch gearbeitet, der Fokus lag hierbei jedoch vermehrt auf fachwis-senschaftlichen Inhalten, insbesondere den algorithmischen Grundstrukturen.4.1 Programme werden gelesen, ausgeführt, untersucht (use)Programme nachbauen (Code!Code)Ein komplett vorgegebenes Programm wird in Scratch nachprogrammiert und ausgeführt.Im Anschluss daran sollen Stellen markiert werden, bei denen man besonders sorgfältigsein musste (z.B. die Auswahl der richtigen Kostüme, Einfügen derfühlen-Blöcke in einebedingte Anweisung). Der Fokus dieser Aufgabe liegt vorrangig auf der Bedienung vonScratch und der Handhabung der Programmierblöcke.Blöcke erkunden (Code!Text)Die Lernenden ö nen ein bereits bestehendes Scratch-Projekt und führen dieses aus. Aufeinem Aufgabenblatt wird notiert, welche Funktionen die einzelnen Blöcke haben (Abb.2).Aufgaben dieser Form eignen sich besonders für die Einführung von noch unbekanntenBlöcken oder komplett neuen Scratch-Erweiterungen (z.B. die Übersetzungsblöcke inScratch 3). Abb. 2: Blöcke erkunden – Welche Funktion haben die einzelnen Blöcke?Programme lesen (Code!Text)Ein vorgegebenes Programm wird zunächst auf einem Aufgabenblatt gelesen (Abb.3).184 Katharina Geldreich et al.Aufgabe ist nicht gleich Aufgabe – Vielfältige Aufgabentypen bewusst in Scratch einsetzen 5Danach soll beschrieben werden, was passiert, wenn der Mauszeiger unterschiedlichePositionen auf der Bühne einnimmt (z.B. Mauszeiger steht auf Position 2!Schmetterlingbewegt sich in Richtung des Igels). Die Lösungen werden im Anschluss durch Ausführendes Programms überprüft. Abb. 3: Programme lesen – Was passiert nach dem Drücken der Leertaste, wenn der Mauszeiger aufden verschiedenen Positionen steht?Programme lesen und Fehler ﬁnden (Code!Code)Ein vorgegebenes Programm soll auf Fehler überprüft werden. Der Weg eines Marienkäfersdurch ein Raster wird zunächst verfolgt (Abb.4). Im Anschluss sollen Fehler im Programmgekennzeichnet werden, die dazu führen, dass der Käfer nicht bei seinem Ziel, der Blume,ankommt.Programme testen (Code!Text)Es soll getestet werden, ob ein bestehendes Programm das tut, was es soll. Hierzu wurdeein Programm erstellt, in dem eine Zahlenfee zwei durch den Nutzer eingegebene Variablenaddiert und das Ergebnis ausgibt. Die Lernenden füllen eine Tabelle aus, in der sowohl diebeiden Eingaben als auch deren Summe erfasst werden. Zusätzlich soll getestet werden waspassiert, wenn Dezimalzahlen, besonders lange Zi ern oder Wörter eingegeben werden.Aufgabe ist nicht gleich Aufgabe 1856 Katharina Geldreich, Mike Talbot, Peter Hubwieser Abb. 4: Programme lesen und Fehler ﬁnden – Wie muss man das Programm verändern, dass derMarienkäfer bei der Blume ankommt?4.2 Programme werden verändert, angepasst, erweitert (modify)Programme debuggen (Code!Text+Code)Ein Programm erfüllt nicht die gewünschte Funktion (Abb.5). Es wird analysiert, wo sichder Fehler beﬁndet und das Programm wird angepasst, um ihn zu beheben. Der Fokus liegthier auf dem genauen Nachvollziehen des Programmablaufs. Abb. 5: Programme debuggen – Warum wechselt der Fisch beim Anklicken der grünen Flagge nichtdie Farbe?186 Katharina Geldreich et al.Aufgabe ist nicht gleich Aufgabe – Vielfältige Aufgabentypen bewusst in Scratch einsetzen 7Programme erweitern (Code+Text!Code)Ein Programm ist in Teilen vorgegeben und soll um weitere Funktionen erweitert werden.Die Bewegung einer Figur lässt sich bereits mit den Pfeiltasten steuern. Das Programm sollso erweitert werden, dass die Figur einen Dialog startet, wenn sie eine andere berührt.Programme optimieren (Code!Code)Ein fertiges Programm, welches die gewünschte Funktion scheinbar erfüllt, wird mittelsverschiedener Fallunterscheidungen untersucht. Der Programmcode soll so optimiert werden,dass die gewünschte Funktion in jeder Situation erfüllt wird. In einem vorgegebenemProgramm läuft eine Maus nacheinander zu verschiedenen Futterquellen. Da die Mausjedoch nur einzelne Koordinaten abläuft, kann sie das Futter nicht mehr ﬁnden, sobald manes auf der Bühne verschiebt. Die Lernenden sollen das Programm so modiﬁzieren, dass dieMaus immer zu ihrem Futter ﬁndet (Abb.6). Abb. 6: Programme optimieren – Mit dem rechten Programm läuft die Maus auch zu ihrem Futter,wenn man die Figuren auf der Bühne verschiebtSzenario in Scratch anpassen (Code+Text!Code)Für ein vorgegebenes Programm soll das Bühnenbild so angepasst werden, dass diegewünschte Funktionalität erfüllt wird. Ein Geist möchte zu seinem Schlüssel (Abb.7).Er kann bereits mit den Pfeiltasten gesteuert werden, ist aber nicht in der Lage, durch dieWand zu seinem Schlüssel zu ﬂiegen. Das Bühnenbild soll so angepasst werden, dass derGeist zu seinem Schlüssel ﬂiegen kann (z.B. durch Verändern der Randfarbe, Vergrößerndes Rechtecks). Abb. 7: Szenario in Scratch anpassen – Wie kann man das Bühnenbild verändern, dass der Geist zuseinem Schlüssel kommt?Aufgabe ist nicht gleich Aufgabe 1878 Katharina Geldreich, Mike Talbot, Peter Hubwieser4.3 Programme werden eigenständig erstellt (create)Programmieren nach bildlichen Vorgaben (Bild!Code)Eine vorgegebene Bildergeschichte soll in Scratch nachprogrammiert werden (Abb.8).Dabei kann variiert werden, ob die Lernenden zusätzlich zu der Programmierung der Figurz.B. auch die Bühnenbilder selbst gestalten sollen.In der Klassiﬁkation von Ruf et al. [RBH15] gibt es den AufgabentypDiagramm!Code,in dem ein Programm zu einem Diagramm (z. B. Klassen-, Zustands-, Sequenzdiagramm)geschrieben wird. Da Diagramme dieser Form in der Grundschule nicht eingeführt werden,wurde stattdessenbildliche Vorgabengewählt. Abb. 8: Programmieren nach bildlichen Vorgaben – Die Bildergeschichte soll in Scratch implementiertwerdenProgrammieren nach textlichen Vorgaben (Text!Code)Das Schreiben von Code nach textlichen Vorgaben gehört zu den häuﬁgsten Aufgabentypenfür Programmieranfänger [RBH15]. Es kann dabei variiert werden, wie detailliert manvorgibt, was programmiert werden soll.Es soll eine Abwandlung des SpielsBreakoutprogrammiert werden. Dazu bekommen dieLernenden eine kurze Beschreibung des Spiels:188 Katharina Geldreich et al.Aufgabe ist nicht gleich Aufgabe – Vielfältige Aufgabentypen bewusst in Scratch einsetzen 9Ein Erdball prallt vom Rand der Bühne und von einem Paddel ab. Er darf den Boden unterdem Paddel nicht berühren – sonst stoppt das Spiel. Mit dem Paddel, das man als Spielervon rechts nach links steuern kann, versucht man den Erdball vom Boden fernzuhalten.Programmieren eigener Ideen nach textlichen Vorgaben (Text!Code)Auch wenn man vorgibt, was programmiert werden soll, kann man die Aufgaben sogestalten, dass die Lernenden dennoch ihre eigenen Ideen umsetzen können. An einemWeihnachtsbaum hängen verschiedene Kugeln. Diese sollen so programmiert werden, dassjede Kugel beim Anklicken etwas anderes macht (z.B. Ton abspielen, Farbe ändern, sichbewegen).5 FazitIm Beitrag wurde gezeigt, wie man durch variierende Aufgaben den Lernprozess desProgrammierens gezielt steuern kann. Dabei handelt es sich keinesfalls um eine strengeHandlungsempfehlung, die Aufgaben sollen vielmehr dazu anregen, den eigenen Blick fürdas Potenzial unterschiedlicher Aufgabentypen zu schärfen.Das Feedback der Grundschullehrkräfte, die an der beschriebenen Fortbildungsmaßnahmeteilgenommen haben, war durchweg sehr positiv. Es wurde berichtet, dass in vielen Büchern,die sich mit dem ThemaProgrammieren für Kinderauseinandersetzen, nur Aufgaben bzw.Anleitungen zu ﬁnden sind, in denen Programme schrittweise nachgebaut werden müssen.Sich damit auseinanderzusetzen, wann dieses Kopieren von Code sinnvoll sein kann undwie man die Schülerinnen und Schüler darüber hinaus auf dem Weg zum selbstständigenProgrammieren unterstützen kann, wurde von den Lehrkräften als sehr hilfreich eingeschätzt.Das Programmieren im Kontext der Grundschule ist für die Lehrkräfte eine sehr neueThematik und sie können noch nicht auf einen vergleichbaren Aufgabenpool wie in anderenFächern zurückgreifen. Wir halten es deshalb für umso wichtiger, sie von Beginn an mit denunterschiedlichsten Aufgabenstellungen vertraut zu machen und sie zu befähigen, Aufgabengezielt und bewusst einzusetzen.Literatur[BHP14]Brichzin, P.; Humbert, L.; Puhlmann, H.: Aufgabenkultur im Schulfach Infor-matik. LOG IN 34/1, S. 27–32, 2014.[Bo08]Bower, M.: A Taxonomy of Task Types in Computing. In: Proceedings of the45th annual Design Automation Conference. ACM Press, New York, S. 281–285,2008.[GTH18]Geldreich, K.; Talbot, M.; Hubwieser, P.: O  to new shores: Preparing PrimarySchool Teachers for Teaching Algorithmics and Programming. In (Mühling, A.;Cutts, Q., Hrsg.): Proceedings of the 13th Workshop in Primary and SecondaryComputing Education. ACM Press, New York, USA, S. 1–6, 2018.Aufgabe ist nicht gleich Aufgabe 18910 Katharina Geldreich, Mike Talbot, Peter Hubwieser[HB14]Humbert, L.; Brichzin, P.: Unterrichtskultur und Aufgaben im Informatikunter-richt. LOG IN 34/1, S. 45–53, 2014.[HM06]Hassinen, M.; Mäyrä, H.: Learning Programming by Programming: a CaseStudy. In (Berglund, A.; Wigbberg, M., Hrsg.): Proceedings KolliCalling 2006.S. 117–119, 2006.[Hu13]Hubwieser, P.; Berges, M.; Magenheim, J.; Schaper, N.; Bröker, K.; Margari-tis, M.; Schubert, S.; Ohrndorf, L.: Pedagogical content knowledge for computerscience in German teacher education curricula. In (Caspersen, M. E.; Knobels-dorf, M.; Romeike, R., Hrsg.): Proceedings of the 8th Workshop on Primaryand Secondary Computing Education. ACM Press, New York, USA, S. 95–103,2013.[Le11]Lee, I.; Martin, F.; Denner, J.; Coulter, B.; Allan, W.; Erickson, J.; Malyn-Smith, J.; Werner, L.: Computational thinking for youth in practice. ACMInroads 2/1, S. 32, 2011.[Ma10]Maier, U.; Kleinknecht, M.; Metz, K.; Bohl, T.: Ein allgemeindidaktischesKategoriensystem zur Analyse des kognitiven Potenzials von Aufgaben. Beiträgezur Lehrerinnenund Lehrerbildung 28/1, S. 84–96, 2010.[MR02]Milne, I.; Rowe, G.: Di culties in Learning and Teaching Programming —Views of Students and Tutors. Education and Information Technologies 7/1,S. 55–66, 2002.[RBH13]Ruf, A.; Berges, M.; Hubwieser, P.: Types of assignments for novice programm-ers. In (Caspersen, M. E.; Knobelsdorf, M.; Romeike, R., Hrsg.): Proceedingsof the 8th Workshop on Primary and Secondary Computing Education. ACMPress, New York, USA, S. 43–44, 2013.[RBH15]Ruf, A.; Berges, M.; Hubwieser, P.: Classiﬁcation of Programming TasksAccording to Required Skills and Knowledge Representation. In (Brodnik, A.;Vahrenhold, J., Hrsg.): Informatics in Schools. Springer, Heidelberg, S. 57–68,2015.[Ri05]Rieck, K.: Gute Aufgaben. IPN, Kiel, 2005.[Sc06]Schnotz, W.: Pädagogische Psychologie: Workbook. Beltz, PVU, Weinheim,Basel, 2006.[SW17]Sentance, S.; Waite, J.: PRIMM: Exploring pedagogical approaches for teachingtext-based programming in school. In (Barendsen, E.; Hubwieser, P., Hrsg.):Proceedings of the 12th Workshop on Primary and Secondary ComputingEducation. ACM Press, New York, USA, 2017.[Va96]Van Lier, L.: Interaction in the Language Curriculum Awareness, Autonomyand Authenticity. Longman, Harlow, 1996.190 Katharina Geldreich et al.cbaHerausgeber et al. (Hrsg.): 18. GI-Fachtagung Informatik und Schule,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 11Informatik spannend präsentieren – Ein Einstieg in denStudiengang Lehramt InformatikLisa Göbel1, Lutz Hellmig2Abstract:Studiengänge für das Lehramt Informatik verzeichnen seit Jahren eine zu hohe Schwund-quote. Als eine der Ursachen wird der mangelnde Praxisbezug besonders am Anfang des Studiumsangesehen. Da Studienanfänger die erforderlichen Kompetenzen für die Erteilung von Unterrichtüberwiegend in späteren Semestern erwerben, müssen andere Formen didaktischer Praxis für dieStudieneingangsphase gefunden werden. Im Artikel wird über die Entwicklung, Durchführung undEvaluation eines Pilotprojektes berichtet, in dem sich vor allem Studierende des ersten Semestersinformatische Sachverhalte selbst erschließen und sie für die Präsentation in einem populärwissen-schaftlichen Format didaktisch aufbereiten.Keywords:Praxisbezug; Studieneinstieg; Lehramt Studium; Informatik; Studienabbruch1 Motivation und ZielsetzungAn der Universität Rostock wurden Untersuchungen zum „Studienerfolg und-misserfolg imLehramtsstudium“ durchgeführt. Die Ergebnisse der Studie zeigen, dass im Lehramtsstu-dium Informatik nur 5% aller Studierenden das Studium erfolgreich in Regelstudienzeitabsolvieren. 10% der Studierenden studieren nach der Regelstudienzeit weiterhin LehramtInformatik. 85% der Studierenden brechen das Studium ohne Abschluss ab. Die Schwund-quote ist nach dem zweiten Fachsemester besonders hoch [Ra18].Eine mögliche Ursache für die zu hohe Schwundquote könnte der geringe Praxisbezugin den ersten Studiensemestern sein. Die Studierenden belegen erst im vierten Semesterdie Grundvorlesung der Didaktik des Informatikunterrichts. Die Schulpraktische Übungﬁndet im fünften oder sechsten Semester statt. Bis zum vierten Semester besteht dasStudium ausschließlich aus Modulen der Fachwissenschaft. Diese Module entstammen fastausnahmslos dem Bachelor-Studiengang Informatik.Ramm et al. erkennen einen Zusammenhang zwischen dem Praxisbezug im Lehramtsstudi-um und dem erfolgreichen Abschluss. Insbesondere kann ein verbesserter Praxisbezug diezu hohe Schwundquote mindern. [Ra98]1Universität Rostock, Institut für Informatik, Albert-Einstein Straße 22, 18051 Rostock, Deutschlandlisa.goebel@uni-rostock.de2Universität Rostock, Institut für Informatik, Albert-Einstein Straße 22, 18051 Rostock, Deutschlandlutz.hellmig@uni-rostock.de cba doi:10.18420/infos2019-19Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 19112 Lisa Göbel, Lutz HellmigDie Scha ung eines frühen authentischen Praxisbezugs stellt aus mehreren Gründen ei-ne gewisse Herausforderung dar. Die Studierenden haben zu Beginn des Studiums nurwenig fachliche sowie noch keine didaktischen Kompetenzen erworben. Damit kommtdas Unterrichten in einer Klasse im ersten Semester nicht als Mittel des Praxisbezugsin Frage. Abgesehen von dem Recht der Schülerinnen und Schüler auf guten Unterricht,das eine solche Maßnahme per se ausschließt, spricht noch ein weiterer wichtiger Grunddagegen: Studierende des ersten Fachsemesters wären mit der komplexen Aufgabe derPlanung und Durchführung von Fachunterricht überfordert. Die sich daraus ergebendennegativen Erfahrungen der Studierenden mit der Schulpraxis wirken sich nachhaltig auf dieMotivation der Studierenden aus.Mit der Entwicklung eines Pilotprojektes sollten ein früher Praxisbezug und ein sozialesMiteinander unter Umgehung der Risiken hergestellt werden. In Zusammenarbeit mit demZentrum für Lehrerbildung und Bildungsforschung sowie mit Unterstützung des Prorektorsfür Studium und Lehre wurde das Projekt „Informatik spannend präsentieren“ entwickelt.2 Entwicklung des PilotprojektesDas Durchlaufen der wichtigsten Schritte des Planungsprozesses für ein Bildungsangebot istein naheliegendes Szenario für die Herstellung eines Praxisbezugs. Die Studierenden arbeitenim Bereich des fachlichen und fachdidaktischen Professionswissens und damit in zentralenHandlungsfeldern von Lehrpersonen [BK11]. Zum pädagogischen Planungsprozess gehörendie Bestimmung der zu entwickelnden Kompetenzen, die Analyse der Rahmenbedingungen,eine Sachanalyse, didaktische sowie methodische Überlegungen und die Bestimmung derFeinziele.Eine Schauvorlesung mit populärwissenschaftlichem Charakter trägt diesen AnforderungenRechnung. Sie ist weniger komplex als die Gestaltung von Unterricht, da eine Reihe vonAnforderungen wie die Einbettung einer Stunde in die Sto einheit oder die Berücksichtigungspezieller Attribute der Lerngruppe keine Rolle spielt. Lernziele im engeren Sinne müssenebenfalls nicht formuliert werden.Die Vorgabe eines organisatorischen und inhaltlichen Rahmens dient der weiteren Reduktionder von den Studierenden zu klärenden Fragen.Jede Gruppe bekommt den Auftrag, eine 15bis 20-minütige Präsentation zu entwickelnund diese am Ende des Semsters im Rahmen einer ö entlichen Abschlussveranstaltungmit Wettbewerbscharakter zu präsentieren. Auf Grundlage der besten drei von fünf imSeminar entwickelten Ideen wird daraufhin eine insgesamt 30-minütige Schauvorlesungentwickelt und auf der Langen Nacht der Wissenschaften präsentiert. Das Publikum bestehtaus Kindern im Alter ab 10 Jahren (und ihren Begleitern) mit wissenschaftlichen Interesse,aber ohne tiefere Vorkenntnisse.Die thematische Schwerpunktsetzung wird durch die Betreuer im Vorfeld mit dem Anspruchvorgenommen, ein möglichst allgemeines informatisches Konzept in verschiedenen, demPublikum vertrauten Anwendungsbereichen zu vermitteln. Als geeignetes Prüfkriteriumerweisen sich in diesem Zusammenhang die Merkmale der fundamentalen Ideen [Br60,Sc93,192 Lisa Göbel, Lutz HellmigInformatik spannend präsentieren 13HNR06]. Die Strategie derMinimalisierungerfüllt mit der Anwendbarkeit auf Datenmengeund Speicherbedarf, den Zeitbedarf für Prozesse oder die Mächtigkeit/Reduktion vonSystemen und die mit allen Aspekten verbundenen Kosten das Horizontalkriterium. Aspekteder Minimalisierung sind anschaulich (Repräsentationskriterium) auch Kindern vermittelbar(Vertikalkriterium). Seit jeher werden bei der Konstruktion von Informatiksystemen und derEntwicklung von Modellen – aus Kosten-, Platzund Zeitgründen – Aspekte der Minimierungbeachtet (Zeitkriterium). Die Erfüllung des Sinnkriteriums wird durch eine Reihe praktischerBezüge augenfällig, wie sie im folgenden Abschnitt bei der Projektrealisierung beschriebenwerden.Für die sich der Grundidee unterordnenden Teilthemen werden Themenvorschläge undLiteraturhinweise vorgegeben, eigene Vorschläge der Studierenden waren ebenfalls möglich.In der Regel besitzen die Studierenden nur eine vage inhaltliche Vorstellung über dieThemen, so dass die selbstständige Aneignung der fachlichen Grundlagen ein maßgeblicherBestandteil des Arbeitsprozesses ist.Um einen motivationalen Anreiz für die Teilnahme am Projekt zu bieten, wird dieses alsWahlpﬂichtmodul mit 3 Leistungspunkten angeboten.3 Realisierung des PilotprojektesDas Lehramtsstudium an der Universität Rostock beginnt jeweils in der ersten Oktoberwoche.Hier ﬁnden sämtliche Einführungsveranstaltungen statt. Anlässlich dieser Veranstaltungwurde das neue Seminar „Informatik spannend präsentieren“ beworben. Das Seminar standunter dem Motto „Minimalisierung – Weniger ist mehr“. Anhand des Beispiels Entropie alsMaß für den Informationsgehalt von Jens Gallenbacher [Ga17] wurde den Studierenden einEinblick in die Thematik gegeben. OktoberEinführungs-veranstaltungPräsenzver-anstaltungenNovemberDezemberJanuarAprilGruppenkon-sultationenMedien-technikGeneral-probeAbschluss-präsentationEnde des SeminarsVorbereitungSchauvor-lesungLange Nacht derWissenschaftenGruppenkon-sultationenAbb. 1: Grobe Zeiteinteilung des PilotprojektesEs haben sich 14 Studierende – davon zwei Studierende des fünften Semesters und ein Stu-dent aus dem neunten Semester – für dieses Seminar entschieden. Von den elf Teilnehmernaus dem ersten Semester waren fünf Studierende aus dem gymnasialen und sechs aus demregionalen Lehramt.Im Rahmen des Seminars fanden sechs Präsenzveranstaltungen für alle Teilnehmer sowievier Konsultationen für die einzelnen Gruppen statt (siehe Abb.1).In den Präsenzveranstaltungen wurden organisatorische Absprachen getro en, ein inhaltli-cher Zugang zum Thema hergestellt, gemeinsam getragene Bewertungkriterien erarbeitetsowie didaktisch-methodische und technische Anregungen zur Aufbereitung und Darstellungdes Themas gegeben. In der letzten Präsenzveranstaltung fand eine Abschlussreﬂexion derInformatik spannend präsentieren 19314 Lisa Göbel, Lutz HellmigPräsentationen statt.Einen ersten inhaltlichen Zugang zu der Idee der Minimalisierung haben die Studierendenüber ein Placemat gefunden (siehe Abb.2). Abb. 2: Mindmap zum Thema Minimalisierung – Ergebnis des Placemats im SeminarZur Bearbeitung in Gruppen wurden sechs Themenbereiche vorgestellt. Auf der Vorschlags-liste standen die Minimalisierung von Automaten, verschiedene Sortierund Suchverfahren,die Optimierung von Netzwerken, die Datenkomprimierung sowie die Minimalisierungvon Datenbanken. Zu den Themen haben die Studierenden jeweils Literaturempfehlungen[BWF15,Ga17] erhalten. Das Thema „Optimierung von Netzwerken“ wurde nicht gewählt.Eigene Themenvorstellungen wurden nicht eingebracht. Bis auf eine Zweiergruppe wurdendie Themen von Dreiergruppen bearbeitet. Dank der kleinen Gruppen war es den Studie-renden trotz unterschiedlicher Zweitfächer möglich, Termine für Tre en außerhalb desSeminars zu vereinbaren. Bei zu großen Gruppen wäre es zu Terminﬁndungsproblemengekommen.Weiterhin haben die Teilnehmer Bewertungskriterien erarbeitet (siehe Abb.3), die bei derErstellung der Präsentationen beachtet werden mussten. Die Bewertung der Präsentationenauf der Abschlussveranstaltung wurde durch die Jury anhand dieser Kriterien vorgenommen.Im Weiteren haben die Gruppen eine konkrete Sachanalyse zu den von ihnen gewähltenThemen vorgenommen.Auf Basis einer erstellten Sachanalyse in den Gruppen wurden die im Vorfeld entworfendenIdeen in Gruppenkonsultationen mit den Betreuern diskutiert, fokussiert und Möglichkeiteneiner geeigneten Strukturierung und ansprechenden Darstellung besprochen. Mit demNachdenken über mögliche Darstellungsformen ergaben sich kontinuierliche Anlässe füreine wiederholte und vertiefte Sachanalyse. Die Aufgabe, Drehbücher zu erstellen, zwangdie Studierenden ihre Präsentationen gründlich zu planen und detailliert auszuarbeiten.Um die Präsentationen auf die örtlichen Gegebenheiten anzupassen, wurde die Medientech-nik im Hörsaal sowie ihre Funktionsweise durch die Teilnehmer erkundet.194 Lisa Göbel, Lutz HellmigInformatik spannend präsentieren 15 Abb. 3: Mindmap zu den Bewertungskriterien – erstellt im SeminarEine Generalprobe vor allen Kursteilnehmern gab den Studierenden die Möglichkeit ihrePräsentation zu üben. Wichtig war das Üben eines zügigen Aufund Abbaus, sodass bei derAbschlusspräsentation ein schneller Gruppenwechsel gewährleistet wurde. Die Gruppenhaben sich gegenseitig Tipps für die Vorstellung gegeben.Auf der Abschlussveranstaltung vor interessierten Studierenden und Mitarbeitern hat einezehnköpﬁge Jury aus Studierenden und Mitarbeitern die einzelnen Gruppen bewertet. DiePräsentationen der Gruppen wurden durch eine Moderation zu einer zusammenhängendenVorstellung verbunden.Der erste Beitrag wurde von der Gruppe mit dem Thema Datenbanken vorgestellt. DieGruppe hat im Vorfeld eine Tabelle zu bekannten Youtubern erstellt (siehe Abb.4). DieTabelle beinhaltete die Kategorien Kanalname, Genre, Videoanzahl, Abonnenten, Aufrufe,Sprache, Beitrittsjahr, Vorund Nachname. Es wurden verschiedene Kanäle vom simpleclubaufgelistet. Bei der Erstellung der Tabelle hat die Gruppe absichtlich den Namen dersimpleclub-Youtuber falsch aufgelistet. Ein Kandidat aus dem Publikum sollte diesen Fehlerbeheben. Da das Au nden, Löschen und Ersetzen sehr aufwendig ist, wurde diese Tabellezu einer normalisierten Datenbank umgewandelt. Mit diesem Modell werden Redundanzenbeseitigt, Inkonsistenzen vermieden und das Modiﬁzieren von Daten vereinfacht. Abb. 4: Ausschnitt der Tabelle zu bekannten YoutubernDer folgende Beitrag wurde unter dem Motto „Maschinen sind einfach“ präsentiert. DieGruppe hat eine Geschichte verfasst, in der ein Automat entwickelt wurde (Idee aus[BWF15]). Der Tolper-Troll Willi lebte in Fairytail Junction (siehe Abb.5) und ist aufder Suche nach dem Zimtberg. Es gibt keinen direkten Weg, um von Willis StandpunktInformatik spannend präsentieren 19516 Lisa Göbel, Lutz Hellmigzum Zimtberg zu kommen. Daher muss er von Ort zu Ort wandern. Von jedem Ort ausgehen zwei Wege ab. Während die Geschichte vorgetragen wurde, entschied das Publikum,welchen Weg Willi als nächstes wählt. Die entstandene Landkarte wurde während derGeschichte mit Hilfe der Dokumentenkamera gezeigt. Nachdem die Geschichte beendetwar, hat die Gruppe einen komplizierten Automaten gezeigt, welcher zu einem einfachen,aber gleichmächtigen Automaten reduziert wurde. Abb. 5: Fairytail Junction„Das Genie beherrscht das Chaos.“ Unter diesem Motto stand der dritte Beitrag. Zunächstsollten zwei Personen des Publikums ein unsortiertes Kartenspiel nach einer vorgegebenenReihenfolge der Karten sortieren. Dabei wurde die schnellere Person nach ihrer Vorge-hensweise befragt. Anschließend wurde ein Wettstreit zwischen zwei Gruppenmitgliedernpräsentiert. Es wurde behauptet, dass Bubblesort ein schnelleres Sortierverfahren alsQuicksort sei. Um diese Behauptung zu beweisen oder zu wiederlegen, wurden jeweilssieben Personen des Publikums aufgefordert, die Algorithmen durchzuspielen. Es wurdenverschiedene Getränke nach ihrem Alkoholgehalt aufsteigend sortiert. Die Anzahl dereinzelnen Schritte wurden jeweils gezählt. Dadurch hat sich herausgestellt, dass Quicksortdas schnellere Sortierverfahren ist.Der folgende Beitrag knüpfte an das Sortieren an, denn in vorsortierten Listen kann schnel-ler gesucht werden. Zunächst wurden zahlreiche Beispiele aus dem Alltag zum ThemaSuchen präsentiert. Anschließend wurden die lineare sowie die binäre Suche anhand derSuche nach einem Filmtitel durchgeführt. Im Internet werden sehr viele Suchanfragenin kürzester Zeit ausgewertet. Doch wie funktioniert das? Dazu hatte die Gruppe einCrawler-Spiel vorbereitet. Es wurde nach einem bestimmten Kuchenrezept gesucht. Dieeinzelnen Rezeptseiten waren als „Webseite auf Papier“ im Raum verteilt. Die Stichwörter196 Lisa Göbel, Lutz HellmigInformatik spannend präsentieren 17waren bereits farbig markiert. Am Ende der Seite gab es Abreißzettel mit der URL derSeite. Für jedes Stichwort stand ein Korb auf der Bühne zur Verfügung. In diesem Korbwurden die jeweiligen URL eingeworfen. Nach der Sortierung kann je nach Suchanfrage derentsprechende Korb ausgeschüttet werden. Dieses Crawler-Spiel wurde von sieben Personendes Publikums durchgeführt. Währenddessen wurde Musik eingespielt, in deren Text dasThema Suchen eine Rolle spielte.Der Abschluss der Vorstellung wurde durch die Datenkomprimierung gebildet. Die Gruppehatte ein Faxgerät als Anschauungsmaterial. Damit sollte eine Geburtstagseinladung ver-sendet werden. Doch wie funktioniert dieses Gerät? Mit Hilfe der Lauﬂängenkodierungwurde am Beispiel eines Buchstabens (siehe Abb.6) die Übertragung enaktiv präsentiert.Zwei Personen des Publikums haben die Übertragung durchgespielt. Eine Person musstedie Zeichen kodieren und die andere Person war für die Übertragung zuständig. Zunächstdurften nur die Worte schwarz und weiß übertragen werden. Diese Übertragung hat sehrlange gedauert. Aufgrund dessen wurde eine andere Übertragung festgelegt. Nun durftenZahlen übertragen werden. Es wurde vereinbart, dass jede neue Zeile zuerst die Anzahl derschwarzen Pixel überträgt (Idee von [BWF15]). Abschließend wurde besprochen, durchwelche Möglichkeit die Buchstaben c und e schnell hintereinander übertragen werdenkönnen. Dabei wurde herauskristallisiert, dass lediglich die Veränderung übertragen wird. Abb. 6: Mit Lauﬂängenkodierung zu übertragender BuchstabeAus den besten drei Beiträgen – Automaten, Sortierund Suchverfahren – wurde zu Beginndes neuen Semesters eine gemeinsame Präsentation als Schauvorlesung für die Lange Nachtder Wissenschaften erstellt. In fünf Konsultationen wurden die Beiträge auf insgesamt 30Minuten reduziert. Bei der Modiﬁkation der Präsentationen ist aufgefallen, dass einigeGruppen die Themen und die Idee der Minimalisierung nach wie vor nicht vollständigdurchdrungen haben. Daher wurden die fachlichen Grundlagen nochmals grundlegendbesprochen.Die Schauvorlesung auf der Langen Nacht der Wissenschaften wurde vom Publikum sehrgut angenommen. Das Publikum bestand vorwiegend aus Kindern mit ihren Eltern sowieinteressierte Schülerinnen und Schüler.4 EvaluationDas Projekt wurde mit Hilfe von zwei Fragebögen evaluiert. Der erste Fragebogen wurdeim ersten Seminar von 13 Studierenden ausgefüllt und beinhaltete ausschließlich o eneFragen. Die Ergebnisse geben Aufschluss über die Motivation und die Ziele der Teilnehmer.Die Resultate zeigen, dass 7 von 13 Studierenden aufgrund der Werbeveranstaltung in derInformatik spannend präsentieren 19718 Lisa Göbel, Lutz HellmigEinführungswoche teilgenommen haben. Obwohl dieses Seminar zuvor noch nicht angebotenwurde, wurde den Erstsemstern die Teilnahme an so einer Veranstaltung von älterenSemestern empfohlen. Das Seminar wurde besucht, da der Fokus auf die Lehramtstätigkeitausgerichtet ist. Das Knüpfen von sozialen Kontakten ist ein wichtiger Punkt für dieTeilnehmer. Als weiteren Grund führen einige Teilnehmer den Erhalt von Leistungspunkten,das Sprechen vor Publikum und den Versuch, Informatik ansprechend zu vermitteln, an.Die zweite Frage des Fragebogens zielte auf die Erwartungen und die Bedenken ab. Diemeisten Befragten gaben an, keine Bedenken zu haben. Einige äußerten die Befürchtungmöglicher Ideenlosigkeit, kreativer Überforderung oder zu hoher fachlicher Anforderungen.Die Studierenden erwarteten einen kreativen Austausch von Fachwissen, didaktischen undmethodischen Aspekten. Die Teilnehmer erho ten ein lockeres Umfeld und eine positiveZusammenarbeit mit den Dozenten. Von den Dozenten wurde erwartet, dass sie selbst dasSeminar spannend präsentieren.Der zweite Fragebogen untersuchte sechs Kategorien. Die erste Frage war o en gestelltund lieferte Auskunft über die Erfüllung der Erwartungen. Die zweite und dritte Frage warsiebenstuﬁge Single-Choice-Fragen. Hier wurden die Komponenten der Lehrveranstaltungsowie die Seitene ekte evaluiert. Die vierte Frage war o en formuliert und gibt Aufschlussüber eine Weiterempfehlung des Seminars. Die folgende o ene Frage erhebte Anregungenund einen Verbesserungshinweise für eine weitere Durchführung des Seminars. Im letztenBereich hatten die Studierenden die Möglichkeit aufzuschreiben, was sie unbedingt nochsagen möchten.Dieser Fragebogen gibt Aufschluss über die Entwicklung von professioneller Kompetenz[BK11]. Es werden die Aspekte motivationale Orientierung, Selbstregulation, Ziele sowieProfessionswissen, vor allem Fachwissen und fachdidaktisches Wissen der Teilnehmeruntersucht.Dieser Fragebogen wurde von 11 Teilnehmern ausgefüllt. Die Studierenden waren währenddes Projektes sehr motiviert. Die Einstellung zur Berufsmotivation hat sich positiv entwickelt.Das selbstständige Arbeiten wurde von zehn Studierenden positiv bewertet, obwohl dieseseinen zusätzlichen Zeitaufwand darstellte. Die Inhalte der Präsenzveranstaltung sowie derKonsultationen waren für zehn von elf Studierenden hilfreich. Sie haben dadurch fachlicheKompetenzen erworben. Der methodische Wechsel zwischen den Präsenzveranstaltungenund den Konsultationen wurde von allen Teilnehmern positiv bewertet. Die Studierendenhaben durch das Seminar soziale Bindungen zu ihren Kommilitonen aufgebaut. AchtTeilnehmer lobten die lockere und freundliche Atmosphäre.Zwei Studierende wünschten mehr Austauschmöglichkeiten mit allen Teilnehmern undvier Studierende eine zeitliche Vorverlegung der Präsenzveranstaltung. Ein Student sahVerbesserungsbedarf im Zeitplan vor Weihnachten. Zwei Studierende wollten mehr Probenim Hörsaal, wo die Abschlussveranstaltung stattﬁndet. Ein Teilnehmer würde sich überein größeres Publikum freuen. Des Weiteren würden einige Teilnehmer dieses Seminarfür Studierende jeden Semesters empfehlen. Ein Teilnehmer hätte sich Tipps für das freieSprechen sowie einen engeren thematischen Rahmen gewünscht.198 Lisa Göbel, Lutz HellmigInformatik spannend präsentieren 195 Schlussfolgerungen und AusblickDie Evaluationsergebnisse lassen erkennen, dass die Studierenden diese Form der didakti-schen Praxis positiv beurteilen. Angesichts der überschaubaren Zahl der Teilnehmer desModuls lassen sich aus den gewonnenen Daten selbstverständlich noch keine gesichertenErkenntnisse ableiten. Die Erhebung liefert allenfalls Anhaltspunkte für die Formulierungvon Hypothesen, die in weiteren Untersuchungen speziﬁsch untersucht werden sollten.Die Studierenden waren im Seminar stets interessiert und engagiert. Aufgrund der hohenZufriedenheit der Studierenden wird das Seminar im nächsten Wintersemester zum zweitenMal angeboten. Weiterhin bleibt zu untersuchen, ob die teilnehmenden Studierende dasInformatik Studium fortsetzen und erfolgreich beenden.Beim nächsten Durchlauf des Projektes werden Modiﬁkationen vorgenommen. Es wird einePräsenzveranstaltung eingefügt, die Tipps zum freien Sprechen liefert. Die Präsenzveranstal-tung wird in den ersten Wochen wöchentlich stattﬁnden. Dadurch können die Studierendenzeitiger konkret an ihren Themen arbeiten. Proben zur Präsentation werden früher geplant.Die Studierenden werden dadurch sicherer im Präsentieren und gewinnen Selbstbewusstheitim eigenen Handeln. Weiterhin wird das Seminar auch für Studierende höherer Semestergeö net, wenngleich der Fokus auch weiterhin auf Studierende des ersten Semesters gelegtwerden soll. Somit können erfahrene Studierende mit Studienanfängern zusammenarbeiten.Die Studierenden können auf diese Weise viel voneinander lernen und sich gegenseitigmotivieren, gute Informatiklehrerinnen und -lehrer zu werden.Dieses Pilotprojekt hat den Studierenden einen ersten Praxisbezug gegeben. Dabei hattendie Studierenden die Möglichkeit, ihre Kommilitonen kennenzulernen. Diese Methodedes Praxisbezugs hat sich gut für die Informatik geeignet. Dank der Anwendung derfundamentalen Ideen der Informatik haben die Studierenden bemerkt, dass die Informatikein großes Anwendungsfeld hat und trotz des ständigen Wandels in der Informatik dieGrundideen beibehalten bleiben.Diese Möglichkeit des Studieneinstieges bietet sich vor allem für Fächer mit einem sehrhohen Anteil an Fachwissenschaften in der Anfangsphase des Studiums an. Sofern diefundamentalen Ideen des jeweiligen Faches thematisiert werden, erhalten die Studierendeneinen umfassenden Einblick in das Fach. Somit wäre eine Übertragung des Projektes aufandere Fächer möglich.Literaturverzeichnis[BK11]Baumert, Jürgen; Kunter, Mareike, Hrsg. Das Kompetenzmodell von COACTIV. Profes-sionelle Kompetenz von Lehrkräften: Ergebnisse des Forschungsprogramms COACTIV.2011.[Br60]Bruner, J. S., Hrsg. The process of education. Havard University Press, Cambridge, 1960.[BWF15]Bell, Tim; Witten, Ian H.; Fellows, Mike, Hrsg. CS unplugged. An enrichment andextension programme for primary-aged students. 2015.Informatik spannend präsentieren 19920 Lisa Göbel, Lutz Hellmig[Ga17]Gallenbacher, Jens, Hrsg. Abenteuer Informatik. IT zum Anfassen für alle von 9 bis 99 –vom Navi bis Social Media. Springer, Heidelberg, 4. Auﬂage, 2017.[HNR06]Hartmann, Werner; Näf, Michael; Reichert, Raimond, Hrsg. Informatikunterricht planenund durchführen. eXamen.press, Springer-Verlag Berlin Heidelberg, 2006.[Ra98]Ramm, M.; Kolbert-Ramm, C.; Bargel, T.; Lind, G., Hrsg. Praxisbezug im Lehramtsstudium.Erfahrungen und Beurteilungen der Lehramtsstudierenden. Konstanz: Universität Konstanz,Arbeitsgruppe Hochschulforschung, 1998.[Ra18]Radisch, Falk; Driesner, Ivonne; Arndt, Mona; Güldener, Torben; Czapowski, Janek; Petry,Martin; Seeber, Anne-Marie, Hrsg. Abschlussbericht Studienerfolg und -misserfolg imLehramtsstudium. Rostock: Universität Rostock, 2018.[Sc93]Schwill, A, Hrsg. Fundamentale Ideen der Informatik. Zentralblatt für Didaktik derMathematik, 25(1), 1993.200 Lisa Göbel, Lutz HellmigcbaArno Pasternak (Hrsg.): INFOS 2019,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Fit für den Lehrplan 21 – Wie Klassenlehrpersonen auf denInformatikunterricht vorbereitet werden (können)Im Dialog lernen mit kompetenzorientierten AufgabensetsAndrea Gumpert1, Pascal Zaugg2Abstract:Informatik ist in der Schweizer Primarschule angekommen! Studierende werden an Pädago-gischen Hochschulen darauf vorbereitet, Informatik zu unterrichten und in die Fächer zu integrieren.Keine leichte Aufgabe, denn häuﬁg haben sie selbst keinen Informatikunterricht erlebt, was bedeutet,dass die Vorerfahrungen in dem Bereich sehr heterogen sind. Eine etablierte Fachdidaktik für das neueModul Medien und Informatik gibt es darüber hinaus noch nicht. Um diese Herausforderungen zumeistern, werden Räume für individuelles Lernen und Vertiefen gescha en. Anhand von kompetenzori-entierten Aufgabensets lernen die Studierenden selbstgesteuert, aber begleitet und dialogisch, das, wassie an fachlichem und fachdidaktischem Handwerkszeug für den Medien-und-Informatik-Unterrichtbrauchen. Durch die individualisierbaren Aufgabensets, welche sich auf das Konzept des DialogischenLernens (vgl. u.a. [RG14a]) abstützen, wird das selbstbestimmte, freie Lernen im Präsenzunterrichtan der Hochschule unterstützt. Kooperatives und selbstreﬂexives Lernen an schulpraxisorientiertenAufgaben ermöglicht es den Studierenden zum einen, fachwissenschaftliche Konzepte aufzubauenund zum anderen, fachdidaktische Erfahrungen für das Lehren im Fach Medien und Informatik zunutzen (didaktischer Doppeldecker).Keywords:Medien und Informatik; Lehrpersonenbildung; E-Portfolio; Dialogisches Lernen; Kom-petenzorientierung1 Einleitung und RahmenbedingungenSeit 2014 ist der Lehrplan 213, welcher für alle 21 Deutschschweizer Kantone Gültigkeit hat,verabschiedet. Eine Neuerung ist das im Kanton Bern seit 2018 ﬂächendeckend unterrichteteModul „Medien und Informatik“ (im Folgenden MI). Medienbildung und informatischeBildung werden sowohl integriert in die Fächer (bereits ab der Kindergartenstufe) als auchin eigenen Lektionengefäßen vermittelt.Im Studium an der Pädagogischen Hochschule Bern werden fachwissenschaftliche, fachdi-daktische, erziehungswissenschaftliche und berufsbezogene Kompetenzen aufgebaut. MI1Pädagogische Hochschule Bern, Institut Vorschulstufe und Primarstufe, Fabrikstrasse 8, 3012 Bern, Schweizandrea.gumpert@phbern.ch2Pädagogische Hochschule Bern, Institut Vorschulstufe und Primarstufe, Fabrikstrasse 8, 3012 Bern, Schweizpascal.zaugg@phbern.ch3https://be.lehrplan.ch/index.php cba doi:10.18420/infos2019-20Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 2012 Fit für den Lehrplan21ist für alle Studierenden der Vorschulund Primarstufe obligatorisch und wird in den zweiModulen „MI1“ und „MI2“ (gemeinsam 5 ECTS) unterrichtet. Die Studierenden erarbeitenin diesen Gefäßen Kompetenzen aus den Bereichen der Medienpädagogik, Mediendidaktikund Informatik sowie der Informatikdidaktik. Während im MI1 die Medienbildung imVordergrund steht, fokussiert MI2 auf die Informatik.Aufgrund des heterogenen Vorwissens der Studierenden sind neben fachdidaktischenFragestellungen besonders auch Fachinhalte Gegenstand der Lehrveranstaltungen. Diesist aufgrund des verhältnismäßig geringen Workloads eine große Herausforderung. Dieim Folgenden beschriebenen kompetenzorientierten Aufgabensets wurden entwickelt, umZeit und Raum für individuelles, exemplarisches Lernen und Vertiefen zu scha en undﬂexibel auf das eingehen zu können, was die Studierenden an didaktischem und fachlichemHandwerkszeug brauchen. Insbesondere der Aufarbeitung, Überarbeitung und Reﬂexionvon Präkonzepten und des eigenen Lernfortschritts wird ein großer Stellenwert eingeräumt.Ziel ist, dass die Studierenden Gestaltungsaspekte für ihr eigenes Lernen identiﬁzierenund diese Erfahrungen für das Lehren nutzen (didaktischer Doppeldecker). Durch dieEinbettung der Aufgabensets in o ene Unterrichtssettings wird der Heterogenität derStudierenden, dem großen und dynamischen Sto umfang und der Kürze der zur Verfügungstehenden Seminarzeit Rechnung getragen. Das zugrundeliegende didaktische Konzeptdes Dialogischen Lernens (vgl. [RG14a], [RG14b], [RKW08], [RG95] ) bietet sich fürﬂexibilisierte Arbeit an und bildet einen Rahmen für die bereits institutionalisierte E-Portfolioarbeit.2Theoretische Grundlagen zur Konzeption der kompetenzorientiertenAufgabenIn den konzipierten Aufgaben werden drei didaktische Wirkungslinien verknüpft: Lernen ino enen Kontexten (dialogisch), Kompetenzorientierung und Selbstreﬂexion im eigenenE-Portfolio. Ziel ist es, diesen drei Ansprüchen nicht nur gerecht zu werden, sondern sieauch so umzusetzen, dass sie sich gegenseitig positiv beeinﬂussen und ergänzen.2.1 Dialogisches LernenDas Dialogische Lernen stellt ein praxisorientiertes Konzept zur Gestaltung einer neuenLernkultur dar, welches den gesellschaftlichen Herausforderungen der Individualisierungund Flexibilisierung Rechnung tragen kann. Charakteristisch für diese sogenannte neueLernkultur [Wi16] ist die Betonung des Lernens vor dem Lehren, die Fokussierung aufden Lernenden statt auf die Inhalte, die Eigenverantwortung sowie die Partizipation desLernenden im Unterricht und die Verschiebung von der Produktorientierung hin zu einerOrientierung und lernfördernden Beurteilung des Lernprozesses.202 Andrea Gumpert, Pascal Zaugg3Im dialogischen Unterricht steht die o ene Auseinandersetzung mit den eigenen Prä-konzepten und den Angeboten des Unterrichts im Vordergrund. Studierende bauen aufVorerfahrungen, Kognitionen und Gefühlen auf und bekommen so einen individuellen,singulären Zugang zur Sache. Lernen wird als Prozess aus drei Elementen beschrieben:Das Bewusstmachen des eigenen Vorwissens („Ich mache das so.“), der Austausch mit denPeers („Wie machst Du es?“) und das Erfahren und die Erarbeitung des „Regulären“ imDialog mit der Lehrperson und dem Material („Das machen wir ab.“) [RG95].Zentrales Instrument des Dialogischen Lernens ist die Kernidee, welche das Thema bzw. dieInhalte beschreibt und das repräsentiert, was den „Witz der Sache“ ausmacht. Die Kernideeist persönlich und individuell und transportiert die Vorstellungen der Lehrperson, die esermöglichen sollen, den Lernenden Zugang zu einem Inhalt zu verscha en. Die Kernideewird von den Studierenden als Ergebnis der Auseinandersetzung mit Inhalten und Methodenformuliert und für den zukünftigen Unterricht an der Schule genutzt. Als solches soll dieKernidee als Brücke zwischen Lehrpersonenbildung und Schule fungieren.Den Einstieg in eine Thematik bildet ein o ener Auftrag, im Rahmen dessen Präkonzepte miteinem Thema schriftlich im E-Portfolio bzw. Lernjournal festhalten werden. Die Lehrpersonwählt besonders gelungene, spannende oder interessante und diskutierenswerte Konzepteaus, kommentiert, gibt eine Rückmeldung und spielt diese sogenannten Autographen[RKW08] in den Unterricht zurück. Sie dienen gewissermaßen als Unterrichtsmaterial.Die Rückmeldungen, welche die Lehrpersonen in regelmäßigen Abständen in den E-Portfolios hinterlässt, würdigen die Arbeiten der Lernenden und heben das Gelungenehervor. Fehlkonzepte werden identiﬁziert und für das Weiterlernen genutzt. Mit Hilfe derKommentare oder in Gesprächen erarbeiten die Lernenden die fachlich regulären Konzepte(„Das machen wir ab“). Damit schließt sich der Kreislauf wieder zur Kernidee.2.2 KompetenzorientierungDie Zieldimensionen von Unterricht – ob Schule oder Hochschule – werden als Kompetenzenformuliert. Nach Weinert sind Kompetenzen wie folgt deﬁniert: „Kompetenzen sind die beiIndividuen verfügbaren oder durch sie erlernbaren kognitiven Fähigkeiten und Fertigkeiten,um bestimmte Probleme zu lösen, sowie die damit verbundenen motivationalen, volitionalen(Anm: d.h. absichtsund willensbezogenen) und sozialen Bereitschaften und Fähigkeiten,um die Problemlösungen in variablen Situationen erfolgreich und verantwortungsvoll zunutzen.“ [We01]. Doch wie lassen sich Kompetenzen fördern? Wie muss eine Aufgabegestaltet werden, die nicht nur Wissen und Können fördert, sondern auch eine Lernumgebungscha t in der die Lernenden die Bereitschaft, ein Problem zu lösen, entwickeln können?Kalcsics und Wilhelm [KW17] konkretisieren die weinertsche Deﬁnition und bauen daraufihr Prozessmodell für Kompetenzorientierte Aufgaben (Abb. 1) auf. Sie beschreiben einekompetente Person als fähig, „in bestimmten Situationen einen Auftrag zu bearbeiten, eineHerausforderung zu meistern, eine Aufgabe zu lösen“ [KW17] und die Bereitschaft zuFit für den Lehrplan 21 2034 Fit für den Lehrplan21haben, dies auch zu tun. Aufgaben sollen Motivationen und Handlungsbereitschaften – alsodie Persönlichkeit [Wi18] und die Lebenswelt eines Menschen – produktiv einbeziehen. Dieswird durch Lernumgebungen ermöglicht, „welche die Lernenden in eine intensive, aktive,selbst gesteuerte kooperative Auseinandersetzung mit dem Lerngegenstand bringen“ [Le11],das Vorwissen berücksichtigen, authentisch und individualisierbar sind. In einer produktiven,kooperativen und diskursiven Art und Weise werden Lernprodukte selbstständig erarbeitet[Le11] und das eigene Lernen reﬂektiert. Hierbei werden die zu entwickelnden Kompetenzendirekt genutzt, sind somit relevant und in einen Anwendungskontext eingebunden. Abb. 1: Prozessmodell kompetenzfördernder Aufgabensets (in Anlehnung an [WLS16])Iterativ werden Teilkompetenzen bzw. Kompetenzaspekte zu komplexeren Kompetenzenweiterentwickelt. Dabei sollen die Lernaufgaben die notwendigen Impulse geben, ohne denLernprozess zu stark vorzustrukturieren [KW17].2.3 E-Portfolioarbeit und reﬂexives LernenBeim Schreiben wird das Denken verlangsamt und Lernen wird bewusst wahrgenommen. Diepositive Beeinﬂussung der Kompetenzentwicklung durch (selbst-) reﬂexives Lernen [Je08]wird sowohl im dialogischen Lernen als auch im Prozessmodell für kompetenzorientierteAufgaben gezielt betont. O ermanns deﬁniert Selbstreﬂexion als „das Auseinandersetzenmit den für einen selbst wichtigen eigenen subjektiven Deutungen (z. B. Gedanken oderMotive), den damit verbundenen Gefühlen sowie den daraus resultierenden Handlungen undderen Konsequenzen unter Berücksichtigung des Verhaltens und der subjektiven Deutungenanderer Personen sowie der bestehenden Strukturen (Regeln, Aufgaben, Umweltbedin-gungen), die einen umgeben.“ [Of04]. Will man die Potenziale der Selbstreﬂexion inseiner Komplexität lernfördernd ausnutzen, so muss das Anfertigen eines Lernjournalsim E-Portfolio so begleitet und gerahmt werden, dass Schreiben nicht zur Alibiübungwird, welche die Studierenden nur zum Selbstzweck machen. Sowohl die Formulierung204 Andrea Gumpert, Pascal Zaugg5der Aufträge als auch die didaktische Konzeption des dialogischen Unterrichts motivierenLernende, sich mit ihren subjektiven Deutungen, den Gedanken und Gefühlen hinsichtlichihrer eigenen Konzepte auseinanderzusetzen.3Konzeption der kompetenzorientierten Aufgaben und vorliegendeErfahrungen3.1 Aufgabenkonzeption und StrukturZu sechs relevanten Themen der Informatik werden Aufgabensets konzipiert, welche ausfünf o enen Einzelaufträgen bestehen. Nach dem Prozessmodell für kompetenzförderndeAufgabensets gliedern sich die Aufgabenabschnitte in Aufträge zum Explorieren (Prä-konzepterhebung, Überfachliches), Erarbeiten (Wissensaneignung), Üben und Vertiefen(methodische Vertiefung), Anwenden (produktives Arbeiten) und zum Reﬂektieren. Ab-schließend erfolgt ein Peer-to-Peer-Feedback auf das Lerntagebuch des Partners oder derPartnerin.Alle Aufträge sind gleich strukturiert, wie Abb. 2 zeigt. Klare Zielformulierungen („Wasist Ziel des Auftrages?“) und konkrete Kriterien („Worauf kommt es an?“) helfen denStudierenden, sich zu orientieren. Mit dem fachdidaktischen Hinweis wird erreicht, dass dieStudierenden sich nicht nur als Lernende der Fachinhalte sehen, sondern auch die Schuleund die Anwendung ihres Wissens im Unterricht vor Augen haben. Abb. 2: Screenshot der Ansicht eines Auftrages (zur besseren Lesbarkeit leicht manipuliert)Im SWITCHportfolio werden die Aufgabenkomplexe als Sammlung umgesetzt, wobei sichdie Einzelaufträge auf Ansichten beﬁnden. Diese Anordnung ermöglicht aber auch, dieReihenfolge der Bearbeitung zu ändern oder Arbeitsschritte zu überspringen, etwa wennzu Themen oder Methoden bereits Kompetenzen in anderen Modulen erarbeitet wurden.Im Präsenzunterricht wird dies durch den Dialog mit der Lehrperson begleitet. Da dieAufgaben das benötigte Material enthalten und unabhängig vom Präsenzunterricht sind,Fit für den Lehrplan 21 2056 Fit für den Lehrplan21können sie auch im Selbststudium erarbeitet werden. Es ist allerdings im Sinne des Lernensals sozialen Prozess empfehlenswert und sinnvoll, kooperativ zu arbeiten.3.2 ThemenübersichtAuf Basis des Lehrplans 21 wurden sechs inhaltliche Schwerpunkte deﬁniert. Der Bereichder Algorithmen erhält dabei ein leichtes Übergewicht. Computational Thinking wirdals fachdidaktisches Konzept häuﬁg aufgegri en und der allgemeinbildende Stellenwertder Informatik betont. Weiterhin wurde darauf Wert gelegt, dass die drei Schwerpunkte„Datenstrukturen“, „Algorithmen“ und „Informatiksysteme“, wie sie im Lehrplan 21formuliert sind, nicht isoliert voneinander behandelt werden, sondern die Verbindungenzwischen den Kompetenzbereichen lebensweltnah aufgezeigt werden.Es wurden folgende Aufgaben entwickelt:Digitalisieren Vom Analogen zum Digitalen und zurück4:Zuerst zeichnen undbeschreiben die Studierenden wie sie sich das Digitalisieren von Ton vorstellen unddiskutieren dies mit einer Partnerin bzw. einem Partner. Nachdem sie einen Lernﬁlm zumThema rezipiert haben, überarbeiten sie ihre Zeichnung. Nun stellen sie ihren Namen imASCII Code dar und beschäftigen sich mit der Umwandlung eines Bildes in Binärcode beimScannen. Reﬂexion und Kernidee bildet den Abschluss der Aufgabe.Suchen, Finden, Sortieren, Ordnen So macht’s der Computer5:Um an ihre eigenen Er-fahrungen anzuknüpfen, sollen die Studierenden beschreiben, wann, wo und wie sie sortieren.Mittels Scratch wird der Bubble-Sort-Algorithmus visualisiert und die Studierenden sollendies in ein Flussdiagramm übersetzen. Anschließend entwickeln sie eine Unterrichtseinheitzum Sortieren und reﬂektieren das Thema und ihren Lernprozess wiederum anhand vonAlltagsphänomenen (Suchmaschinen / Onlinehandel).Mensch und Maschine Arbeitsteilung durch Automatisierung6:Einführend setzensich die Studierenden mit den gesellschaftlichen Folgen der Automatisierung auseinander.Nach einigen anwendungskompetenzaufbauenden Übungen mit Scratch programmierensie einen Rasenmäherroboter, optional nutzen sie dafür das LEIS7. Abschließend erfolgtwiederum ein Transfer in Form eines Gedankenexperiments.Internet Wo sind meine Daten?8:Zu Beginn wird das Vorwissen zum Internet erhobenund Materialien zur Recherche bereitgestellt. Es wird wieder auf das Präkonzept Bezug4https://tinyurl.com/MI-KoA-digitalisierung5https://tinyurl.com/MI-KoA-sortieren6https://tinyurl.com/MI-KoA-menschmaschine7Lego Education Innovation Center an der PH Bern8https://tinyurl.com/MI-KoA-internet206 Andrea Gumpert, Pascal Zaugg7genommen und das Wissen im Bereich der Netzwerktopologien vertieft. Als Anwen-dungsaufgabe sollen die Studierenden eine Unterrichtseinheit zum Internet beurteilen undanschließend fachinhaltlich und fachdidaktisch reﬂektieren.Mein Computer funktioniert nicht mehr! Woran liegt’s, was kann ich tun9:Zunächstnotieren die Studierenden ihre Vorstellungen vom Weg des Buchstabens A auf den Bild-schirm. Mit Material und einem aufgeschraubten PC vertiefen sie ihr Wissen rund umInformatiksysteme und entwerfen eine eigene Kurzgeschichte für Kinder. Mit der SoftwareCalligraphr10entwerfen sie ihre eigene Schriftart, vertauschen bewusst das A und das Bund überdenken so die Funktionsweise und das Zusammenspiel von Betriebssystem undAnwendungssoftware bei der Übermittlung eines Buchstabens auf den Bildschirm. Weiterhinbeschäftigen sie sich mit der Prozessorauslastung ihres eigenen PC und überlegen, wannund ob sich die Anscha ung eines neuen Gerätes lohnen würde und warum. Reﬂektierendfassen sie die Inhalte zusammen und stellen einen Schulbezug her.xLOGO unterrichten11:Ausgehend von der eigenen Vorstellung von gutem Unterrichterarbeiten die Studierenden didaktische Prinzipien zum Einsatz der ProgrammierspracheLogo im Programmierunterricht. Dazu bauen sie zunächst Erfahrungen mit der Spracheauf und setzen sich dann vertieft mit dem Konzept des Computational Thinking und denfachdidaktischen Wirkungslinien für alle Bereiche der Informatik auseinander.3.3 Erfahrungen am Beispiel des Aufgabensets zum Thema DigitalisierungDas Aufgabenset zum Thema „Digitalisieren Vom Analogen zum Digitalen und zurück“konnte bereits erprobt werden. Die Studierenden arbeiteten weitestgehend selbstgesteuert,während die Lehrperson die Zeit für individuelle Portfoliogespräche oder andere fachlicheAbklärungen nutzen konnte.Eine kurze Hinführung zum Thema, als Kernidee der Lehrenden zu verstehen, ist wie folgtformuliert:In meiner Umwelt ﬁnde ich analoge und digitale Daten, die ich ineinander umwan-deln kann. Der Computer hilft mir dabei. Als Mensch kann ich Lichtwellen undSchallwellen, also zeitlich kontinuierliche Signale, wahrnehmen.Digitale Daten bestehen aus einer Abfolge von 0en und 1sen, sind also nichtkontinuierlich, sondern zeitlich diskret. Sie können durch einen Computer kopiert,verarbeitet und gespeichert werden. Dies kann Folgen für mich und meine Mitwelthaben.9https://tinyurl.com/MI-KoA-informatiksysteme10https://www.calligraphr.com/11https://tinyurl.com/MI-KoA-logoFit für den Lehrplan 21 2078 Fit für den Lehrplan21Die Studierenden zeichnen und beschreiben „den Weg“ des Tones in den Computer hineinund wieder heraus. Diese Zeichnung wird mit einem Partner diskutiert und mit Hilfeeines Lernﬁlms über Schallwellen, Abtastrate, Binärumwandlung, binäres Rechnen undProzessorverarbeitung ergänzt (Abb. 3). Diese Übung, hier als didaktischer Selbstversuchdurchgeführt, kann auch in der Schule so umgesetzt werden. Abb. 3: Screenshot der Ansicht eines Auftrages (zur besseren Lesbarkeit leicht manipuliert)Das Beispiel und die dazugehörige, hier nicht dargestellte Beschreibung der Zeichnungzeigt, dass Wellen und die Umwandlung in 0 und 1 durchaus bekannte Konzepte sind.Die Aufgabe der Dozentin bzw. des Materials ist es nun im Plenum und in Form einerRückmeldung zu klären, was genau bei der Umwandlung von der Welle in ein elektrischesSignal passiert und Hinweise zu geben, wie sich Kinder der 5. oder 6. Klasse solch komplexeVorgänge vorstellen können.Es folgen Übungen zum ASCII-Code und zur Digitalisierung von Bildern, welche aber in denReﬂexionen kaum erwähnt werden. Es ist daher davon auszugehen, dass die Digitalisierungdes Tones ein anschauliches Phänomen darstellt.Abschließend formulieren die Studierenden Kernideen zum Thema. Eine Studentin um-schreibt sowohl ihre Entwicklung als auch ihre Vorhaben für den eigenen MI-Unterrichtwie folgt: „Digitalisierung ist keine Zauberei, sondern wenn man weiß, wie es funktioniert,ist es erklärbar.“Im Präsenzseminar wurde anschließend die Audiobearbeitung mit Audacity geübt und dieStudierenden konnten so die erarbeiteten informatischen Konzepte sofort aktiv anwenden.208 Andrea Gumpert, Pascal Zaugg93.4 Fazit und AusblickEs konnte gezeigt werden, dass Dialogisches Lernen an der Hochschule dann besonderszielgerichtet umgesetzt werden kann, wenn o ene, individuell bearbeitbare Aufträge Raumund Zeit scha en, in einen Dialog mit den Studierenden zu treten. In Gesprächen undmit Hilfe von Kommentaren konnten die Facetten der Informatik, Verbindungen zurMedienbildung und fächerverbindende Potenziale diskutiert werden und die Arbeiten derStudierenden erhielten so einen Platz in der Lehrveranstaltung.Die Aufgaben werden zunehmend in der Ausbildung von Primarlehrpersonen eingesetztund werden zukünftig eine wachsende Bedeutung im Sinne einer Individualisierung undFlexibilisierung des Studiums erlangen.Eine Entwicklungsaufgabe ist derzeit, die Aufgaben o en zur Verfügung zu stellen, sodasssie Lehrpersonen und Studierenden im gesamten deutschsprachigen (insb. Deutschschwei-zer) Raum zur Bearbeitung bereitstehen. Hier sind vorgängig Lizenzabklärungen notwendig,welche in Kürze abschlossen sein werden. Ebenso sind Kooperationen mit anderen, hoch-schulübergreifenden Projekten geplant und beﬁnden sich derzeit in Abklärung.Wünschenswert wäre eine Weiterentwicklung und Ergänzung der bestehenden Aufgabensetsdurch Studierende im Rahmen von Bachelorarbeiten. Entwicklungsarbeiten erfreuen sichimmer größerer Beliebtheit und mit Hilfe der Studierenden lassen sich weitere spannendeThemengebiete erschließen. Perspektivisch sind auch in der Schullandschaft solche o e-nen Aufgaben von Bedeutung, natürlich in Ergänzung bzw. unter Einbezug bestehenderLehrmittel.Literatur[Je08]Jenert, T.: Ganzheitliche Reﬂexion auf dem Weg zu Selbstorganisiertem Lernen.In (Häcker, T.; Hilzensauer, W.; Reinmann, G., Hrsg.): Schwerpunkt "ReﬂexivesLernen". Bd. 2, 5, Bildungsforschung, S. 1–18, 2008.[KW17]Kalcsics, K.; Wilhelm, M.: Lernaufgaben gestalten. In (Kalcsics, K.; Wil-helm, M., Hrsg.): LERNWELTEN Natur Mensch Gesellschaft AUSBIL-DUNG. Schulverlag plus, Bern, Kap. 8, S. 81–89, 2017.[Le11]Leisen, J.: Kompetenzorientiert unterrichten. Unterricht Physik 123/124/100,S. 100–110, 2011.[Of04]O ermans, M.: Braucht Coaching einen Coach. Eine evaluative Pilotstudie.ibidem-Verlag, Stuttgart, 2004.[RG14a]Ruf, U.; Gallin, P.: Dialogisches Lernen in Sprache und Mathematik. Bd. 1:Austausch unter Ungleichen. Grundzüge einer interaktiven und fächerübergrei-fenden Didaktik. Klett, Seelze, 2014.Fit für den Lehrplan 21 20910 Fit für den Lehrplan21[RG14b]Ruf, U.; Gallin, P.: Dialogisches Lernen in Sprache und Mathematik. Bd. 2:Spuren legen Spuren lesen. Unterricht mit Kernideen und Reisetagebüchern.Klett, Seelze, 2014.[RG95]Ruf, U.; Gallin, P.: Ich mache das so! Wie machst du es? Das machen wir ab.Sprache und Mathematik, 1.-3. Schuljahr. Interkantonale Lehrmittelzentrale,Zürich, 1995.[RKW08]Ruf, U.; Keller, S.; Winter, F.: Besser lernen im Dialog. Dialogisches Lernenin der Unterrichtspraxis. Klett, Seelze-Velber, 2008.[We01]Weinert, F. E.: Vergleichende Leistungsmessung in SchulenEine umstritteneSelbstverständlichkeit. Leistungsmessungen in Schulen/, S. 17–31, 2001.[Wi16]Winter, F.: Leistungsbewertung. Schneider Verlag Hohengehren GmbH, Balt-mannsweiler, 2016.[Wi18]Winter, F.: Lerndialog statt Noten. Neue Formen der Leistungsbeurteilung.Beltz, Weinheim und Basel, 2018.[WLS16]Wilhelm, M.; Luthiger, H.; Schweizer, G.: Prozessmodell kompetenzfördernderAufgabensets. Ein Beispiel für den NMG-Unterricht aus biologischer Perspek-tive. In (Keller, S.; Reintjes, C., Hrsg.): Aufgaben als Schlüssel zur Kompetenz.Waxmann, Münster, S. 345–356, 2016.210 Andrea Gumpert, Pascal ZauggMichael Hielscher, Christian Wagenknecht: < book title>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <year>    15 FLACI – Eine Lernumgebung für theoretische Informatik  Michael Hielscher1, Christian Wagenknecht2 Abstract: FLACI (www.flaci.com) steht für Formal Languages and Compilers and Interpreters und ist eine modular aufgebaute, webbasierte Lernumgebung für grundlegende Inhalte der theoretischen Informatik. Die Theorie formaler Sprachen und Automaten befasst sich mit potentiell unendlichen Mengen. Die damit verbundene Begrifflichkeit in FLACI adäquat abzubilden, ist die besondere Her-ausforderung. Die Lernumgebung bringt deklaratives, konzeptionelles und prozedurales Wissen mit, um Definitionen, Simulationen, Transformationen und Konvertierungen für formale Grammatiken, reguläre Ausdrücke und abstrakte Automaten vornehmen zu können. Die Webapplikation FLACI stellt eine konsequente Weiterentwicklung der Lernumgebung AtoCC aus dem Jahr 2006 dar. Eine lokale Installation entfällt, wodurch diverse softwaretechnische und betriebssystemspezifische Prob-leme vermieden werden können. Dadurch ist der Einsatz von FLACI, neben dem akademischen Bereich, auch für den Informatikunterricht in der Schule (vorwiegend Sekundarstufe II) attraktiv. Die Applikation ist sowohl im Unterricht als auch außerhalb zeitlich und örtlich unabhängig verfüg-bar, speichert alle erarbeiteten Inhalte auf Wunsch automatisch und regelmäßig in der FLACI-Cloud und bietet damit Potential zur kollaborativen Arbeit. Als offene Lernumgebung bietet FLACI einen Konstruktionsraum für einfache Compiler und Interpreter als praxisrelevante Motivation für die An-wendung von Theoriekenntnissen. Hierfür bietet die Umgebung spezielle kontextfreie Sprachklas-sen und Transformationen an, die die Herstellung von Compilern konzeptionell unterstützen. Die Verzahnung von Theorie und praktischer Anwendung wird seit vielen Jahren im Informatikstudium umgesetzt. Im Beitrag wird FLACI im Überblick vorgestellt und zu den GI-Bildungsstandards “In-formatik für die Sekundarstufe II” in Beziehung gebracht. Keywords: Theoretische Informatik, Formale Sprachen, Abstrakte Automaten, Lernumgebung 1 Einleitung Die theoretische Informatik (TI) ist an Universitäten und Hochschulen ein fester Bestand-teil des Informatikstudiums. Zunehmend werden ausgewählte Konzepte dieses Gebietes in den Schulunterricht integriert. Die GI-Bildungsstandards für Informatik in der Sekun-darstufe II [RBD16] weisen Sprachen und Automaten als einen zentralen Inhaltsbereich aus und definieren konkrete Themen, an denen sich die Lehrpläne orientieren können. Im gymnasialen Informatikunterricht ist die TI je nach Bundesland und Lehrplan bereits ein obligatorischer oder wenigstens ein möglicher Wahlbereich, s. z. B. [FPA07]. Auf die be-sonderen Anforderungen einer stufengerechten fachund mediendidaktischen Konzeption für diesen Inhaltsbereich wurde hingewiesen, s. z. B. [MHL16].                                                          1 Medien und Schule, Pädagogische Hochschule Schwyz, Forschung, Zaystrasse 42, Goldau, CH-6410,  michael.hielscher@phsz.ch   2 Fakultät Elektrotechnik und Informatik, Hochschule Zittau/Görlitz, FB Informatik, Brückenstr. 1, Görlitz, 02826, c.wagenknecht@hszg.de  cba doi:10.18420/infos2019-21Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 211 16    Michael Hielscher, Christian Wagenknecht  In den vergangenen Jahrzehnten entstanden zahlreiche Lernumgebungen für TI: JFLAP [RF06], Kara [BHN03], Exorciser [Ts04], AtoCC [HW06], [HW07] und [WH14]. Im Fol-genden beschränken wir unseren Betrachtungsrahmen auf die TI-Teilgebiete “Theorie der formalen Sprachen” und die “Automatentheorie”. Diese Lernumgebungen decken jeweils einen Teil der geforderten Kompetenzen (in unterschiedlicher Ausprägung) ab und sind mehrheitlich für das universitäre Studium konzipiert. Mit AtoCC wurde ein Weg gefun-den, die begriffliche Arbeit durch Definition von Instanzen und Anwendung algorithmi-scher Zusammenhänge zu betonen [WH14]. Dabei wird die Aktivität des Lernenden nicht nur auf das seit über 50 Jahren ausgearbeitete Gebiet der Automatensimulationen, s. [CSK11], reduziert.  Die mit AtoCC gewonnenen fachdidaktischen Erfahrungen (Studium und Sekundarstufe II) sind in die Entwicklung von FLACI eingeflossen, s. Kap. 2. Darüber hinaus wurden moderne mediendidaktische Aspekte beachtet: Der überwiegende Teil der im Einsatz be-findlichen Lernumgebungen, einschl. AtoCC, basiert auf Technologien, die von mobilen Geräten (z. B. Tablets) nicht mehr unterstützt werden. Als Reaktion auf die zunehmende Verbreitung solcher Geräte in der Hand von Lernenden und Lehrpersonen wurde AtoCC grundlegend überarbeitet und FLACI als moderne Webapplikation entwickelt. Ein ähnli-ches Ziel wird auch in [PT18] verfolgt. Unter Berücksichtigung der Bildungsstandards ist ein didaktisches Werkzeug entstanden, das sowohl im Informatikstudium als auch im In-formatikunterricht (vorwiegend Sekundarstufe II) eingesetzt werden kann. Darüber hinaus eignet sich FLACI als praxistaugliche Entwicklungsumgebung für Compiler und Interpre-ter, wie sie in modernen Webapplikationen Verwendung finden. 2 Struktur der Lernumgebung FLACI Der Einsatz von FLACI ist darauf gerichtet, den Informatikunterricht durch Experimen-tiergelegenheiten zu ergänzen. Automatisiertes Feedback unterstützt die Lernenden etwa bei der Konstruktion von Automatenmodellen und formalen Grammatiken und weist auf allfällige Fehler oder Unvollständigkeiten hin. Die Simulation von Ableitungen, von Ar-beitsschritten abstrakter Automaten und von Compilationsprozessen ist dynamischer Na-tur und wird in FLACI mediendidaktisch passender repräsentiert als durch die Darstellung einzelner Visualisierungsschritte in gedruckten Unterrichtsmaterialien. FLACI stellt eine umfangreiche Palette an Transformationsund Konvertierungsverfahren bereit, die im Un-terricht erarbeitet und von den Lernenden aufgabengeleitet und ergebnisorientiert ange-wandt werden. Außerdem bietet die Lernumgebung unmittelbare Hilfe zur Selbsteinschät-zung vorgelegter Lösungen.  FLACI besteht aus fünf eigenständigen, aufeinander aufbauenden Modulen, die in der vorgegebenen Folge aber auch einzeln, verflochten oder unabhängig voneinander verwen-det werden können. Im Folgenden werden die einzelnen Module kurz beschrieben. 212 Michael Hielscher, Christian Wagenknecht FLACI – Eine Lernumgebung für theoretische Informatik  17 2.1 Formale Sprachen Das Theoriemodul bietet eine einfache, interaktive Umgebung, um zentrale Begriffe for-maler Sprachen, wie Alphabet, Zeichen, Wort, Wortmenge und Sprache, zu explorieren. Es stehen vordefinierte Alphabete zur Auswahl. Zeichen, die aus mehreren Tastaturzei-chen bestehen, bergen die große Gefahr einer typischen Fehlvorstellung vom Zeichenbe-griff. Sie werden als atomare Blättchen dargestellt und verwendet. Die Lernenden können zudem eigene Alphabete definieren, s. Abbildung 1.    Abbildung 1: Alphabetund Zeichenbegriff (links) und Wortbegriff (rechts) Die mögliche Eigenschaft von Wortmengen und Sprachen abzählbar unendliche Mengen zu sein, wird durch eine „aufklappbare“ Punktnotion, für beliebig viele weitere Elemente der betrachteten Mengen, erfahrbar. Die in FLACI eingebauten Definitionen der o. g. Be-griffe dienen als verbindliche Implementierung der durch die Lehrperson eingeführten Be-grifflichkeit, s. Abbildung 1.   2.2 Reguläre Ausdrücke Sprachen durch manuelle Auswahl einzelner Wörter aus der jeweils zugrunde liegenden Wortmenge zu definieren erschöpft sich schnell und führt zur Notwendigkeit geeigneter Beschreibungsmittel für potenziell unendliche Mengen. Reguläre Ausdrücke sind eine kompakte und mächtige Definitionsform regulärer Sprachen. Die Syntax regulärer Aus-drücke wird in FLACI an konkreten Beispielen im Dialog illustriert. Zu jedem angegebe-nen regulären Ausdruck wird ein entsprechendes Syntaxdiagramm generiert. Die BetrachFLACI – Eine Lernumgebung für theoretische Informatik 213 18    Michael Hielscher, Christian Wagenknecht  tung von Kfz-Kennzeichen und E-Mail-Adressen werden zur abschließenden selbststän-digen Übung angeboten. In einem Experimentierbereich lassen sich beliebige reguläre Ausdrücke und Suchtexte eingeben, Zufallswörter aus der beschriebenen Sprache erzeu-gen, äquivalente Grammatiken und endliche Automaten generieren, s. Abbildung 2.       Abbildung 2: Reguläre Ausdrücke mit interaktiven Erklärungen (links) und  Beispielaufgaben (rechts) Ergänzend kann die praktische Bedeutung regulärer Ausdrücke etwa bei Suchund Erset-zungsaufgaben in gängigen Texteditoren oder Werkzeuge wie grep auf der Kommando-zeile thematisiert werden. Deshalb wurde in FLACI eine praxisrelevante Notation regulä-rer Ausdrücke gewählt und auf die formale Betrachtung regulärer Mengen und deren Überführung in zugehörige Sprachen verzichtet, was im Unterricht jedoch thematisiert werden muss, s. [WH14]. 2.3 Kontextfreie Grammatiken Schnell stößt man an die Grenzen regulärer Sprachen. Praktische Einsatzzwecke motivie-ren die Betrachtung formaler Sprachen, die nicht mit regulären Ausdrücken definiert wer-den können. Folglich stellt sich die Frage nach der Definition und passenden Beschrei-bungsmitteln für Sprachklassen, die über reguläre Sprachen hinausgehen.  Abstrakte Automaten und formale Grammatiken leisten das Gewünschte. Das Grammatik-Modul in FLACI erlaubt sowohl eine textuelle (BNF: Backus-Naur-Form) als auch visu-elle Eingabe (Syntax-Diagramm) von Grammatiken, s. Abbildungen 3.  Für beliebige Eingabewörter, die zur Sprache gehören, können Ableitungen als Ablei-tungsbäume und tabellarische Satzformlisten dargestellt werden. Der Ableitungsprozess lässt sich schrittweise animieren und zwischen Linksund Rechtsableitung umschalten. Bei Mehrdeutigkeiten werden für ein betrachtetes Wort mehrere Ableitungsbäume zur  214 Michael Hielscher, Christian Wagenknecht FLACI – Eine Lernumgebung für theoretische Informatik  19 Auswahl angeboten. Das Modul stellt Algorithmen bereit, die Grammatiken z. B. zum Zwecke der Vereinfachung umformen oder beispielsweise überprüfen, ob die grammati-kalischen Regeln syntaktisch denen einer regulären Grammatik entsprechen oder ob es sich um eine LL(1)-Sprache handelt. Außerdem lassen sich reguläre Grammatiken in re-guläre Ausdrücke oder endliche Automaten konvertieren. Kontextfreie Grammatiken (kfG) können in Kellerautomaten (s. Abschnitt 2.4) konvertiert werden.    Abbildung 3: Formale Grammatiken in BNF (links) und Ableitungsbaum (rechts) 2.4 Abstrakte Automaten Als äquivalente Beschreibungsmittel formaler Grammatiken können abstrakte Automaten mit Hilfe des entsprechenden Moduls in FLACI eingeführt werden. Das Modul umfasst deterministische und nichtdeterministische endliche Automaten (DEA, NEA), Kellerau-tomaten (DKA, NKA) und deterministische Turingmaschinen (DTM), s. Abbildung 4. Die Konstruktion erfolgt primär grafisch mittels Übergangsgraph des Automaten und einer vorherigen Definition der verwendeten Alphabete. Endliche Automaten lassen sich zu-sätzlich über eine editierbare Übergangstabelle erstellen und bearbeiten. Die Arbeitsweise der Automaten lässt sich für beliebige Eingabewörter simulieren und bietet die Möglich-keit einzelne Schritte animiert nachvollziehen. Nichtdeterminismus wird in Form geklon-ter Maschinen, deren Arbeitsweise einzeln beobachtet werden kann, erkennbar. Es stehen Verfahren bereit, mit denen endliche Automaten in äquivalente reguläre Ausdrücke oder reguläre Grammatiken, Kellerautomaten in kontextfreie Grammatiken konvertiert werden können. Zu jedem endlichen Automaten kann der äquivalente Minimal-Automat erzeugt werden. Auch dieses Modul bietet einen fließenden Übergang zu den Themen eines Infor-matikstudiums. Vielfältige Assistenzsysteme unterstützen bei der Konstruktion von Auto-maten (z. B. automatische Vervollständigung bei endlichen Automaten und farbliche Her-vorhebungen bei fehlenden Übergängen).   FLACI – Eine Lernumgebung für theoretische Informatik 215 20    Michael Hielscher, Christian Wagenknecht    Abbildung 4: Simulation einer deterministischen Turingmaschine in FLACI 2.5 Compiler und Interpreter Als Motivation für die Behandlung formaler Sprachen, abstrakter Automaten und zuge-höriger Konzepte haben sich praktische Anwendungen im Compilerbau als tragfähig er-wiesen. FLACI bietet in diesem Modul einen Editor zur Modellierung von Übersetzungs-prozessen mit Hilfe von T-Diagrammen, s. Abbildung 5, sowie einen Editor zur Entwick-lung von Compilern und Interpretern mit Hilfe einer formalen Beschreibungssprache (TDL: Translator Description Language). Compiler werden dabei nicht per Hand codiert, sondern mit Compilergeneratoren (Compiler Compiler) aus der formalen Definition auto-matisiert generiert. Als Ausgangspunkt kann modulübergreifend eine bereits erstellte for-male Grammatik direkt verwendet werden, wobei automatisch passende Tokenklassen für den Scanner und Regeln für den Parser generiert werden. Für die Lernenden bleibt die Aufgabe, synthetische Attribute (S-Attribute) für jede Regel des Parsers als JavaScript-Code zu definieren, s. Abbildung 6. Der Scanner arbeitet mit regulären Ausdrücken, die zuvor erarbeitet werden müssen. Der Parser verwendet die gleiche Darstellung editierbarer Syntaxdiagramme wie das Grammatik-Modul von FLACI. Sowohl Scanner als auch Par-ser können simuliert und Zustandstabellen des generierten Compilers angezeigt werden. Enthält die Grammatik Mehrdeutigkeiten wird durch entsprechende Meldungen darauf hingewiesen. Alle erstellten Compiler und Interpreter lassen sich über eine URL als ei-genständiges JavaScript-Programm in beliebige Web-Applikationen einbinden.  216 Michael Hielscher, Christian Wagenknecht FLACI – Eine Lernumgebung für theoretische Informatik  21   Abbildung 5: T-Diagramm für einen Übersetzungsprozess über mehrere Teilschritte und  Ausführung (rechts)    Abbildung 6: Compilerdefinition mit Scanner und Parser inklusive S-Attribute (unten) 2.6 Zusammenwirken der Module Die erarbeiteten Grammatiken, Automaten und Compiler werden wahlweise mit Hilfe des lokalen Webbrowsers oder über den FLACI-Server (bei vorheriger Anmeldung) gespei-chert. Die erstellten Produkte können auch als JSON-Dateien heruntergeladen, über Web-links auf dem FLACI-Server mit anderen Lernenden ausgetauscht oder von Lehrpersonen  FLACI – Eine Lernumgebung für theoretische Informatik 217 22    Michael Hielscher, Christian Wagenknecht  für Lernende bereitgestellt werden. Auf diese Weise können auch Übungsmaterialien vor-gegeben werden. Für viele Darstellungen innerhalb der Module (Automatengraphen, Ab-leitungsbäume usw.) lassen sich Grafiken für gedruckte Materialien in verschiedenen For-maten exportieren. Zwischen den einzelnen Modulen bestehen vielfältige Wechselwirkun-gen, die es ermöglichen, das Produkt des einen Moduls in einem anderen weiterzuverar-beiten. Abbildung 8 illustriert Konvertierungsmöglichkeiten zwischen den Modulen im Überblick.  Abbildung 8: Die fünf Module von FLACI und Konvertierungsmöglichkeiten 3 Berücksichtigung der GI-Bildungsstandards  Die Lernumgebung FLACI deckt den Kompetenzbereich „Formale Sprachen und Auto-maten“ aus den GI-Bildungsstandards für die Sekundarstufe II, s. Tabelle 1, weitgehend ab und bietet darüber hinaus praktische Anwendungsgebiete im Compilerbau. Die in den Standards vorgeschlagene Niveaudifferenzierung lässt sich fließend mit FLACI abbilden: Anfangs werden nur reguläre Sprachen und endliche Automaten thematisiert und erst in einem zweiten Schritt kommen weitere Sprachklassen bedarfsgemäß hinzu. Bereits die FLACI-Module zu regulären Sprachen und Ausdrücken können die wichtigsten Teile der Grundanforderungen zur Unterscheidung formaler und natürlicher Sprachen sowie die Verwendung von Sprachdefinitionen zur Analyse, Beschreibung und Entwicklung forma-ler Sprachen abdecken. Die Ergebnisse der FLACI-Konvertierungen in Grammatiken bzw. Automaten in Verbindung mit Äquivalenzbetrachtungen werden auch für Konstruk-tions-, Kontrollund Vergleichszwecke herangezogen. Der Übergang von regulären zu kontextfreien Sprachen und Themen des Informatikstudi-ums ist ohne deren zwingende Thematisierung fließend möglich. Der modulare Aufbau der Lernumgebung ermöglicht einen selektiven Einsatz für einzelne Themenbereiche und unterstützt deren Struktur und Abfolge, wie sie in den Bildungsstandards angegeben sind.  218 Michael Hielscher, Christian Wagenknecht FLACI – Eine Lernumgebung für theoretische Informatik  23 Tabelle 1: Auszug aus Bildungsstandards für die Sek. II und passende Module aus FLACI  Grundlegendes und erhöhtes Anforderungsniveau Die Schülerinnen und Schüler ● vergleichen formale mit natürlichen Spra-chen, ● untersuchen den Zusammenhang zwischen einer Grammatik und ihrer Sprache, leiten Wörter einer Sprache ab und stellen Ablei-tungsbäume dar, ● verwenden Sprachdefinitionen (z. B. Gram-matiken, Syntaxdiagramme) zur Analyse, Beschreibung und Entwicklung formaler Sprachen, ● überführen Grammatiken in endliche Auto-maten und umgekehrt. Modul in FLACI  “Formale Sprachen”  “Formale Grammatiken”    “Reguläre Ausdrücke” “Formale Grammatiken”   “Formale Grammatiken” “Abstrakte Automaten” Erhöhtes Anforderungsniveau Die Schülerinnen und Schüler ● erläutern den Zusammenhang zwischen Grammatiken, Sprachen und Automaten, ● analysieren und implementieren Programme zu Problemstellungen auf Kellerautomaten, Turingmaschinen oder Registermaschinen, ● erläutern prinzipielle und praktische Gren-zen der Berechenbarkeit.   “Formale Grammatiken” “Abstrakte Automaten” “Abstrakte Automaten” “Compiler und Interpreter”  4 Fazit Beim Einsatz der Lernumgebung AtoCC wurden in mehr als 10 Jahren im Informatikstu-dium und -unterricht (Sekundarstufe II) positive didaktische Erfahrungen gemacht. Mehr als 25’000 Downloads der AtoCC-Software von Lehrenden und Lernenden an Schulen und Hochschulen lassen ein beachtliches Interesse erkennen. Die Weiterentwicklung zu FLACI als Webapplikation stellt einen wichtigen Schritt zur Fortführung des Ansatzes dar: FLACI berücksichtigt zukunftsfähige mobile Geräte und reduziert den Installations-aufwand in Schulen sowie auf privaten Geräten der Lernenden und der Lehrpersonen. Nach den überaus positiven Erfahrungen mit FLACI im Informatikstudium ermöglicht die Passfähigkeit mit den Rahmenvorgaben für den Informatikunterricht den Einsatz dieser FLACI – Eine Lernumgebung für theoretische Informatik 219 24    Michael Hielscher, Christian Wagenknecht  Lernumgebung auch im Schulkontext. Zu einer wissenschaftlichen Evaluation wird auf-gerufen. FLACI steht unter www.flaci.com zur kostenlosen Nutzung zur Verfügung. Der gesamte Quellcode des Projekts wurde unter einer MIT-Lizenz auf github veröffentlicht. 5 Literatur [BHN03] Brändle, M.; Hartmann, W.; Nievergelt, J.; Reichert, R.; Schlatter, T.: Kara: Ein theoriebasierter Ansatz für Lernumgebungen zu fundamentalen Kon-zepten der Informatik. In INFOS 2003 (S. 201-210). [CSK11] Chakraborty, P.; Saxena, P. C.; Katti, C. P.: Fifty Years of Automata Simu-lation: A Review. In: acm inroads, 2011, Vol. 2, No. 4. [FPA07] Friedrich, S., Puhlmann, H., Altdorf, L. G.: Bildungsstandards Informatik von Wünschen zu Maßstäben für eine informatische Bildung. In: INFOS 2007, S. 21-32. [HW06] Hielscher, M., Wagenknecht, C.: AtoCC: learning environment for teaching theory of automata and formal languages. In ITiCSE 2006, Vol. 6, pp. 26-28. [HW07]  Hielscher, M., Wagenknecht, C.: AtoCC-didaktischer Ort und erste Erfah-rungen. In INFOS 2007, S. 159-170. [MHL16] Mane, D. T.; Howal, S. S.; Lokare, V. T.: Problem-based Learning using Simulation Tools for Automata Theory. In: Journal of Engineering Educa-tion Transformations, Special Issue, 2016. [PT18] Pereira, C. H., Terra, R.: A Mobile App For Teaching Formal Languages and Automata. In Wiley Online Library, Special Issue Article, 2018. [RBD16] Röhner, G.; Brinda, T.; Denke, V. u.a.: Bildungsstandards Informatik für die Sekundarstufe II. Beilage zu LOG IN, 36. Jg. 2016, Heft Nr. 183/184. [RF06] Rodger, S. H., Finley, T. W.: JFLAP: An Interactive Formal Languages and Automata Package. Jones & Bartlett Learning, 2006. [Ts04] Exorciser: Automatic Generation and Interactive Grading of Structured Ex-cercises in the Theory of Computation. Doctoral dissertation, ETH Zurich, 2004. [WH14] Wagenknecht, C., Hielscher, M.: Formale Sprachen, abstrakte Automaten und Compiler. 2. Aufl., 2014, Springer Fachmedien Wiesbaden. 220 Michael Hielscher, Christian Wagenknecht<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 1   Innovative Gestaltung und Einsatz von Erklärvideos im Informatikunterricht Tamara Hochthurn, Jens Gallenbacher Abstract: Erklärvideos bieten eine Möglichkeit, zeitund ortsungebunden individuell im eigenen Tempo Inhalte zu erlernen. Ein Nachteil ist die oft passive Konsumentenhaltung von Schülerinnen und Schülern, die das Erklärvideo nur oberflächlich betrachten. Dieser Beitrag stellt einen Unterrichtsverlauf mit selbstentwickelten Erklärvideos zum Thema Binärsystem sowie Nutzung verschiedener Bastelkärtchen als Artefakte vor. Die Idee ist, dass die Lernenden durch den haptischen Einsatz der Bastelkärtchen während des Erklärvideos in eine aktive Rolle schlüpfen. In einer Vorstudie mit wenigen Schulklassen wurde der Unterschied der Kompetenzentwicklung mit und ohne Artefakte untersucht. Dazu wurde die Methode „Flipped Classroom“ in zweierlei Form angewandt. Zum einen als klassische Inverted Classroom Variante, bei der die Schülerinnen und Schüler als vorbereitende Hausaufgabe das Erklärvideo bearbeiteten. Zum anderen als In-Class-Flip, bei dem das Erklärvideo im Unterricht betrachtetet wird. Die Artefakte hatten in den vorliegenden Ergebnissen einen kurzfristigen leicht positiven Effekt. Die Methode des klassischen Flipped Classrooms hatte einen leicht positiven Einfluss auf Nachhaltigkeit. Keywords: Erklärvideo, Artefakte, Flipped Classroom, Inverted Classroom, In-Class-Flip 1 Einleitung „Informatik für alle“ ist das Motto der diesjährigen INFOS. In der Schulpraxis ist dieses „für alle“ jedoch gar nicht so leicht umzusetzen. Ständig finden Sport-, Musikevents oder Exkursionen statt, weshalb einige Schülerinnen und Schüler im Informatikunterricht nicht anwesend sind. Einige sind zudem schlichtweg krank, sodass sie den Unterricht versäumen. Jene Lernende verpassen somit die neuen Inhalte und Informatikunterricht ist an diesem Punkt nicht „für alle“. Um zu gewährleisten, dass abwesende Schülerinnen und Schüler neuen Unterrichtsstoff begreifen und zu einer ihnen beliebigen Zeit selbstständig nacharbeiten können, bieten sich Erklärvideos an.  Neben diesem mehr strukturellen Problem haben wir es im Informatikunterricht mit meistens sehr heterogenen Lerngruppen zu tun. Auch hier bietet sich an, einerseits durch selbstgesteuertes Lernen „im eigenen Tempo“, andererseits durch individuelle Förderung mit zusätzlichen Einheiten per Video eine zusätzliche Form der Differenzierung durchführen zu können. In einer empirischen Untersuchung an einem Gymnasium wurden Erklärvideos zum Thema Binärsystem für den Informatikunterricht einer zehnten Klasse entwickelt. Als Nachteil von Erklärvideos ist die passive Rolle der Schülerinnen und Schüler zu nennen, welche in einer Art Konsumentenhaltung nicht unbedingt aufmerksam das Erklärvideo schauen und mitdenken. Deshalb wurde die innovative Idee umgesetzt, mit Artefakten zu cba doi:10.18420/infos2019-22Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 221 Innovative Erklärvideos 2   arbeiten. Diese Artefakte waren die Punktekärtchen aus der Abenteuer Informatik Ausstellung sowie an die binäre Uhr der Ausstellung angelehnte Lämpchenkarten [Ga17]. Eine wichtige Frage ist, ob dieser aktive Einsatz von Artefakten während des Schauens des Erklärvideos einen Effekt auf die Kompetenzentwicklung der Schülerinnen und Schüler hat. Des Weiteren wurde untersucht, ob jene erfolgreicher sind, wenn sie die Erklärvideos als klassischen Flipped Classroom zu Hause anschauen, oder wenn sie an einem In-Class-Flip teilnehmen.  Aufgrund der geringen Teilnehmerzahl handelt es sich nur um eine Vorstudie und es lassen sich aus der Untersuchung noch keine allgemeingültigen Aussagen schließen.  2 Theoretischer Hintergrund 2.1 Erklärvideos  Erklärvideos sind im Sinne von [Wo15] „eigenproduzierte Filme, in denen erläutert wird, wie man etwas macht oder wie etwas funktioniert bzw. in denen abstrakte Konzepte erklärt werden.“ Diese Definition ist sehr offen, sodass es nicht verwunderlich ist, dass eine Fülle und Vielzahl von unterschiedlichen Erklärvideos beispielsweise auf YouTube zu finden sind. Diese lassen sich in unterschiedliche Typen einteilen. Es gibt zum Beispiel Screencasts, in denen ein Bildschirm aufgenommen wird, oder Erklärvideos, in denen eine Sprecherin oder ein Sprecher einen Vortrag hält [Br17; Sc16; Sc13b]. Für diesen Unterrichtsentwurf wurden Videos nach Art der Legetechnik [Fi18; Sc16; Sc13b; Sc13a] produziert. Die Charakteristik eines Legevideos ist, dass auf einem neutralen Hintergrund Bilder und Textbausteine bewegt und real gefilmt werden. Alternativ beziehungsweise ergänzend kann auch mit einem Stift etwas geschrieben werden. Ein Merkmal sind die sichtbaren Hände, die die Elemente bewegen, während eine Stimme aus dem Off passend dazu den Inhalt erklärt. Sogenanntes Storytelling bettet die Erklärungen in eine fiktive Rahmenhandlung ein [Sc16; Sc13b]. Ein entscheidender Vorteil von Erklärvideos ist die Selbststeuerung des Lernprozesses durch die Schülerinnen und Schüler. Diese haben die Möglichkeit das Erklärvideo anzuschauen wo und wann sie möchten. Außerdem kann dabei jeder in seinem eigenen Tempo vorgehen und gegebenenfalls voroder zurückspulen, wodurch eine gewisse Differenzierung unterstützt wird [Ab18; Br17; Ha17; St10].  Aus Sicht der Lehrkraft ist ein Nachteil hingegen der erhöhte Arbeitsaufwand für die Produktion von Erklärvideos [Fr16; St10]. Dieser relativiert sich allerdings dadurch, dass mit der Zeit auf einen Fundus auf öffentlichen Plattformen zugegriffen werden kann. Des Weiteren besteht die Gefahr, dass Schülerinnen und Schüler Erklärvideos als Freizeitfilme ansehen und in eine passive Haltung verfallen [Bü18; Fi18; We12]. 222 Tamara Hochthurn, Jens Gallenbacher Innovative Erklärvideos 3   2.2 Flipped Classroom Um Erklärvideos im Unterricht einzusetzen, bietet sich die Methode des Flipped Classrooms, oder auch Inverted Classrooms, an. Dabei werden die gewöhnlichen Phasen der Stoffvermittlung durch die Lehrkraft im Unterricht und die anschließende Übungsphase, welche in der Regel als Hausaufgabe zu Hause von den Schülerinnen und Schülern bearbeitet wird, „vertauscht“ [Be12; Bü18; Fä16; Ha12b; Sc12]. Konkret eignen sich die Lernenden in der ersten Phase der sogenannten Inputphase beziehungsweise Selbststudienphase selbstständig neues Wissen an. Dies geschieht zum Beispiel mit Hilfe eines Erklärvideos. Anschließend findet in der Präsenzphase im Unterricht ein Üben und Vertiefen der neuen Inhalte statt [Be12; Bü18; Fä16; Fi17; Ha18; Ha12a; Ha12b; Sa12]. Ein zentraler Punkt im Flipped Classroom ist die Schülerzentrierung. In der Inputphase sind die Schülerinnen und Schüler selbst verantwortlich, sich den neuen Stoff anzueignen. Die Schülerzentrierung in der Präsenzphase variiert jedoch in ihrer Ausprägung in der Praxis stark. So sprechen einige Autorinnen und Autoren lediglich von einer eigenständigen Auswahl aus mehreren Aufgaben. Andere wiederum deuten die Schülerzentrierung im strengeren Sinne, sodass die Schülerinnen und Schüler den Unterricht in der Präsenzphase auch inhaltlich selbstständig gestalten, nachdem sie das Erklärvideo in der Inputphase betrachtet haben [Ab18; Be12; Fä16; Fi17; Go14; Sa12; Sc12]. Ein weiterer Vorteil der Flipped Classroom Methode ist ein effektiver Zeitgewinn im Unterricht, der sinnvolles Vertiefen, Üben, Anwenden oder individuelles Differenzieren ermöglicht [Bü18; Fä16; Fi17; Ha18; Ha12a; Sa12; Sc12; We12]. Problematisch ist, wenn Schülerinnen und Schüler in der Inputphase das Erklärvideo nicht angeschaut haben und somit in der Präsenzphase ohne nötiges Vorwissen auftauchen. [Fi17; Go14; Ha12b; Sa12]. 2.3 In-Class-Flip Um diesen entscheidenden Nachteil zu umgehen, gibt es die Variante des In-Class-Flips. Bei diesem findet die erste Phase des Inverted Classrooms nicht zu Hause bei den Lernenden statt, sondern im Unterricht. Die Erarbeitung bleibt dennoch individuell in eigenem Tempo und nicht als von der Lehrkraft vorgegebener Inputvortrag [Bü18; Go14]. Ein Vorteil dieser Variante ist, dass die Schülerinnen und Schüler bei schwerwiegenden Problemen die Lehrkraft direkt fragen können. Zudem hat die Lehrkraft die Sicherheit, dass die Schülerinnen und Schüler das Erklärvideo wirklich anschauen und bearbeiten [Go14]. Andererseits verliert man den Vorteil des Zeitgewinns des klassischen Inverted Classrooms [Go14]. Innovative Gestaltung und Einsatz von Erklärvideos im Informatikunterricht 223 Innovative Erklärvideos 4   3 Unterrichtsablauf und Material 3.1 Kompetenzen Die durch die Unterrichtseinheit zu erwerbenden Kompetenzen wurden aus dem Lehrplan abgeleitet, in dem die grundlegende Kompetenz „Binäre Darstellung von Daten erläutern“ gefordert wird [Rh19]. Zur Überprüfung und Messung dieser Kompetenz wurden die folgenden spezifischen Kompetenzen gewählt: Die Schülerinnen und Schüler können …   • … eine mindestens sechsstellige Binärzahl in eine Dezimalzahl umwandeln.  • … eine Dezimalzahl (mindestens bis 100) in eine Binärzahl umwandeln. • … ohne Hilfsmittel erklären, was eine Binärzahl ist und wie diese aufgebaut ist. 3.2 Erklärvideoproduktion Um diese Kompetenzen zu erreichen, wurden zunächst zwei Erklärvideos produziert. Dazu galt es zuerst die Artefakte auszuwählen. Die Wahl fiel auf die Punktekarten der Abenteuer Informatik Ausstellung sowie auf Lämpchenkarten, welche an die binäre Uhr der Ausstellung angelehnt sind [Ga17]. Zudem wurden Stift und Papier als Artefakte angesehen. Aufgrund des gewünschten Einsatzes der Artefakte bot sich die Erklärvideo Art der Legetechnik an, da so die Artefakte wirklich eingesetzt und verwendet werden konnten. Zuerst wurde dazu ein Storyboard geschrieben, welches für jede Szene den Sprechtext und die dazugehörigen Bilder und Aktionen beschreibt. Für das charakteristische Merkmal des Storytellings von Erklärvideos wurde eine fiktive Rahmengeschichte erfunden. Diese handelt von zwei Freunden, Anna und Ben, welche mit den Artefakten die binäre Uhr der Abenteuer Informatik Ausstellung erforschen.  Der Grundablauf ist bei beiden Erklärvideos identisch. Dadurch liegt der Unterschied lediglich im Einsatz der Artefakte. Dies bedeutet, dass in dem Erklärvideo mit Einsatz von Artefakten an einigen Stellen konkrete Handlungsanweisungen für die Schülerinnen und Schüler gegeben werden. Diese sind beispielsweise die benötigten Karten auszuschneiden, mit diesen Aufgaben zu lösen, sowie mit Stift und Papier die Stellenwerttabelle zu erstellen und sich zu überlegen, wie diese gebildet wird. Im Erklärvideo ohne Artefakte fallen diese Szenen weg, sodass die Schülerinnen und Schüler nicht aktiv am Erklärvideo teilnehmen. Damit jedoch die Lernenden ohne Artefakte nicht per se weniger Übungsaufgaben bekommen, rechnen sie im Anschluss an das Erklärvideo die gleichen Aufgaben als „Check-Up Aufgaben“.  Die beiden Erklärvideos findet man unter http://www.abenteuer-informatik.de/video/binaer_mit.mp4 und http://www.abenteuer-informatik.de/video/binaer_ohne.mp4. 224 Tamara Hochthurn, Jens Gallenbacher Innovative Erklärvideos 5   3.3 Unterrichtsablauf Im Unterricht werden die Videos mit Flipped Classroom eingesetzt. In der Selbststudienphase betrachten dabei die Schülerinnen und Schüler das jeweilige Erklärvideo entweder mit oder ohne Artefakte. In der anschließenden Präsenzphase findet dann eine identische Stationenarbeit statt. Es sei angemerkt, dass dabei inhaltlich wenig Schülerzentrierung vorhanden ist, da die Stationen vorgegeben sind. Es gibt sieben Stationen, bei denen zwei Pflicht sind, um die grundlegenden Umrechenarten zu üben. Danach haben die Lernenden die Möglichkeit frei aus den Stationen auszuwählen. Es wird darauf geachtet, dass die Stationen möglichst unterschiedliche Lerntypen ansprechen. So ist die dritte Station spielerisch angelegt, da es sich um zwei verschieden schwere Memorys aus Binärzahl-Dezimalzahl Paaren handelt. Die Schülerinnen und Schüler können also ihrem geschätzten Leistungsstand entsprechend auswählen, welche Variante sie zum Üben verwenden. Für die vierte Station wurde ein weiteres kurzes Erklärvideo zum „Finger Binärsystem“ produziert, welches auf http://www.abenteuer-informatik.de/video/finger_binaer.mp4 zu finden ist. Jeder Finger stellt bei diesem eine andere Zweierpotenz dar, was in dem Erklärvideo veranschaulicht wurde. Die zwei Zustände Eins und Null werden durch einen ausgestreckten oder nicht ausgestreckten Finger dargestellt. Hierbei werden haptisch lernende Schülerinnen und Schüler angesprochen, da sie mit den eigenen Fingern binär zählen lernen. Dieses Zählen wird in Station fünf noch näher beleuchtet. Dazu wurde eine Stellenwerttabelle als Arbeitsblatt erstellt, in die die Schülerinnen und Schüler die Binärzahlen zu den Dezimalzahlen eins bis 20 schreiben und Regelmäßigkeiten erforschen sollen. Wieder eher spielerisch ist die sechste Station. Dabei geht es um einen Zaubertrick, der sich das Binärsystem zu Nutze macht. Die Lernenden erhalten dazu ebenfalls aus der Abenteuer Informatik Ausstellung die passenden Zauberkarten und erfahren das, was eine Freiwillige oder ein Freiwilliger beim Zaubertrick auch gesagt bekommt [Ga17]. Anschließend sollen sie knobeln und gemeinsam ausprobieren, wie der Trick funktioniert. In der letzten Station schließlich geht es um die Addition von Binärzahlen, die die Schülerinnen und Schüler herleiten sollen.  Während der Stationenarbeit liegen die Lösungen am Pult, sodass die Schülerinnen und Schüler selbstverantwortlich ihre eigenen Ergebnisse kontrollieren. Ebenso gibt es bei einigen Stationen gestaffelte Tippkarten, die schrittweise helfen. Diese Elemente dienen der Selbstverantwortlichkeit und Eigenständigkeit der Schülerinnen und Schüler.  Gegen Ende der Präsenzphase sind zehn Minuten zur Besprechung im Plenum eingeplant. An zwei Beispielen werden die grundlegenden Umrechenarten gemeinsam zusammengefasst, sowie allgemein beschrieben, was eine Binärzahl ist. Dazu wird parallel ein Tafelbild mit den beiden Musterlösungen erstellt.  Neben der klassischen Inverted Classroom Methode wird ebenfalls ein In-Class-Flip verwendet. Dazu bekommen alle Lernenden einen Computer und Kopfhörer, damit ein individuelles Lernen möglich ist. Die Präsenzphase findet direkt im Anschluss an die Selbststudienphase statt. Die beiden Durchführungen unterscheiden sich lediglich in der Inputphase, die anschließende Stationenarbeit in der Präsenzphase ist identisch. Es wurde Innovative Gestaltung und Einsatz von Erklärvideos im Informatikunterricht 225 Innovative Erklärvideos 6   darauf geachtet, dass beide Gruppen in der Präsenzphase eine identische Zeitspanne für die Stationen zur Verfügung hatten, um sonst entstehende Vorteile einer längeren Übungszeit auszuschließen.  Alle Materialien der Stationenarbeit und die genauen Unterrichtsabläufe sind unter http://www.abenteuer-informatik.de/download/flippedclassroom_binaersystem.zip zur Nutzung im eigenen Unterricht zu finden. 3.4 Empirische Untersuchung Untersucht wurde, ob sich der Einsatz von Artefakten im Vergleich ohne Artefakte positiv auf die Kompetenzentwicklung der Lernenden auswirkt. Außerdem war die Frage, ob das Schauen des Erklärvideos als Hausaufgabe beim klassischen Flipped Classroom erfolgsversprechender ist oder das Schauen im Unterricht beim In-Class-Flip.  Dazu wurden vier Parallelkursen eines städtischen Gymnasiums die unterschiedlichen Varianten zugewiesen. Es gab also jeweils einen Kurs mit dem klassischen Inverted Classroom mit Einsatz von Artefakten und ohne Artefakte, sowie jeweils einen In-Class-Flip Kurs mit und ohne Artefakte.  Um zu überprüfen, ob die Schülerinnen und Schüler bereits das Binärsystem kennen wurde ein Vortest durchgeführt. Neun Wochen später fand dann die eigentliche Doppelstunde mit der Stationenarbeit statt und in der Stunde darauf ein angekündigter erster Nachtest. Dieser war von den Aufgabentypen identisch mit denen des Vortests. Die erste Aufgabe bestand aus jeweils zwei Umrechenaufgaben einer Binärzahl in eine Dezimalzahl, während die zweite Aufgabe die Umrechnung zweier Dezimalzahlen in Binärzahlen war. Die dritte Aufgabe fragte nach einer möglichst genauen Beschreibung was eine Binärzahl ist und wie diese aufgebaut ist. Zwei Wochen nach dem ersten Nachtest fand die Kursarbeit der Schülerinnen und Schüler statt. Dabei wurde jeweils eine Umrechenart gestellt sowie die Transferaufgabe ein neues Stellenwertsystem zu einer anderen Basis zu beschreiben und eine Dezimalzahl darin darzustellen. Fünf Wochen nach dieser Kursarbeit, also insgesamt sieben Wochen nach dem ersten Nachtest, wurde ein zweiter unangekündigter Nachtest durchgeführt.  4 Ergebnisse Trotz der geringen Teilnehmerzahl von 53 Schülerinnen und Schülern mit dementsprechend kleiner statistischer Relevanz, lassen sich folgende Tendenzen ablesen: Das Fazit des Vortests war, dass keine Schülerin und kein Schüler die Aufgaben absolut richtig lösen konnte. Es gab insgesamt fünf Schülerinnen und Schüler in allen Kursen, die jedoch ein gewisses Vorwissen zeigten. Dadurch ergab sich für den Kurs mit dem 226 Tamara Hochthurn, Jens Gallenbacher Innovative Erklärvideos 7   klassischen Flipped Classroom ohne Artefakte1 von zwölf möglichen Punkten eine durchschnittliche Gesamtpunktzahl von 0,83. Beim In-Class-Flip ohne Artefakte2 wurden im Durchschnitt 0,85 Punkte erzielt, beim In-Class-Flip mit Artefakten3 0,53 sowie beim klassischen Flipped Classroom mit Artefakten4 0 Punkte.  Im folgenden Diagramm ist die anschließende Entwicklung der Schülerinnen und Schüler zwischen dem ersten und dem zweiten Nachtest dargestellt.   Abb. 1: Entwicklung der durchschnittlichen Punktzahl zwischen dem ersten und zweiten Nachtest Bereits beim ersten Nachtest erzielten die Lernenden mit dem klassischen Flipped Classroom ein leicht besseres Ergebnis als jene mit dem In-Class-Flip. Außerdem gab es die Tendenz, dass innerhalb einer Flipped Classroom Variante der Kurs mit Artefakten eine leicht höhere Punktzahl erreichte. Jedoch gilt nicht pauschal die Aussage, dass Lernende mit Artefakten ein besseres Ergebnis erzielten als Lernende ohne Artefakte. Im Vergleich dazu schnitten alle Kurse im zweiten Nachtest im Durchschnitt etwas schlechter ab als im Ersten. Die Ergebnisse befinden sich aber auf etwa einem Niveau zwischen 9,6 und 10,2. Dennoch waren die Kurse mit dem klassischen Inverted Classroom auch beim zweiten Nachtest noch leicht besser als die In-Class-Flip Kurse. Allerdings gilt nicht mehr pauschal die Tendenz, dass innerhalb der einzelnen Flips die Kurse mit Artefakten besser waren.                                                             1 Dieser Kurs wird im Folgenden Kurs FO benannt. 2 Dieser Kurs wird im Folgenden Kurs ICO benannt. 3 Dieser Kurs wird im Folgenden Kurs ICA benannt. 4 Dieser Kurs wird im Folgenden Kurs FA benannt. Nachtest 1Nachtest 2Kurs FO10,9210,25Kurs ICO9,859,69Kurs ICA10,59,88Kurs FA11,0910,098,599,51010,51111,5Durchschnittspunktzahl Kurs FOKurs ICOKurs ICAKurs FAInnovative Gestaltung und Einsatz von Erklärvideos im Informatikunterricht 227 Innovative Erklärvideos 8   Die Ergebnisse der Kursarbeit unterstützen das Ergebnis des ersten Nachtests und weisen darauf hin, dass die beim ersten Nachtest erzielten Ergebnisse kein Zufall waren. So sind auch dort die identischen Tendenzen erkennbar wie beim ersten Nachtest. Der Vorsprung der Kurse mit Artefakten im Vergleich zu der direkten Flip Variante ohne Artefakte ist jedoch nicht bei allen Teilaufgaben so deutlich wie beim ersten Nachtest. Bei der Transferaufgabe ist diese Tendenz am meisten ausgeprägt. Besonders hervorzuheben ist, dass die Transferaufgabe von dem Kurs FA mit 2,18 von 4 Punkten am besten gelöst wurde, während danach der Kurs FO mit 1,79 auf gleicher Höhe mit dem Kurs ICA mit 1,71 Punkten folgt. Der Kurs ICO schließlich erzielte lediglich 1 von 4 Punkten.  5 Interpretation der Ergebnisse Zuerst lässt sich festhalten, dass alle Schülerinnen und Schüler im Vergleich zum Vortest eine deutliche Kompetenzentwicklung gezeigt haben. Sowohl beim ersten Nachtest als auch beim Zweiten wurde im Durchschnitt eine erfreulich hohe Punktzahl erreicht. Dennoch gab es wohl den Effekt des Vergessens, da der zweite Nachtest in allen Kursen etwas schlechter war als der erste Nachtest. Interessant ist die Abstufung der Ergebnisse im ersten Nachtest. Diese sind ein Indiz dafür, dass sich die Schülerinnen und Schüler mit dem klassischen Flipped Classroom zu Hause intensiver mit den Erklärvideos befasst haben als jene im In-Class-Flip, wodurch sie ein besseres Ergebnis erzielten. Diese Tendenz ist in allen drei Überprüfungen vorhanden.  Die Hypothese, dass die Nutzung von Artefakten eine bessere Kompetenzentwicklung begünstigen, lässt sich so jedoch in den vorliegenden Ergebnissen nicht bestätigen. Allerdings war beim ersten Nachtest die Tendenz vorhanden, dass immerhin im direkten Vergleich der Kurs ICA besser war als ICO und der Kurs FA besser war als der Kurs FO.  Dass der Kurs FA bei der Kursarbeit das beste Ergebnis erzielte, deutet zudem darauf hin, dass es möglich ist, dass die Verbindung von klassischem Flipped Classroom und Einsatz von Artefakten ein tieferes Verständnis bei den Schülerinnen und Schülern fördert. 6 Fazit Auch wenn in den vorliegenden Ergebnissen der empirischen Untersuchung keine bahnbrechenden Effekte beim Einsatz mit Artefakten feststellbar waren, hat das vorgestellte Konzept dennoch seine Berechtigung. Die Methode des Flipped Classrooms bzw. In-Class-Flips in Verbindung mit den Erklärvideos und Artefakten ist eine gelungene Methode, die auf überwiegend große Begeisterung der Lernenden gestoßen ist.  Konkret die Nutzung der Artefakte spricht besonders die haptisch, enaktiv lernenden Schülerinnen und Schüler an, welche oft im alltäglichen Unterricht eher zu kurz kommen. Denkbar ist es, dass man den Lernenden beide Erklärvideos als Optionen zur Verfügung 228 Tamara Hochthurn, Jens Gallenbacher Innovative Erklärvideos 9   stellt, sodass noch mehr der Forderung nach Eigenständigkeit nachgegangen wird. Dann haben die Schülerinnen und Schüler die Möglichkeit sich bewusst auszusuchen, ob sie lieber aktiv oder lieber passiv ein Erklärvideo betrachten.  Zusammenfassend lässt sich sagen, dass es für ein signifikant relevantes Ergebnis wünschenswert wäre, wenn an mehreren Schulen die Unterrichtssequenzen in der beschriebenen Form eingesetzt werden, um eine größere Stichprobe zu erhalten. Zudem wäre es sehr spannend zu sehen, welche Kompetenzen die Lernenden nach einem wesentlich längeren Zeitraum noch vorzeigen können und ob dann die Artefakte oder die Flip-Varianten vielleicht deutlichere Effekte erzielen. Es besteht also noch Forschungsbedarf. Die Pilotstudie hat aber dennoch ergeben, dass es sich um eine innovative, schüleraktivierende Methode handelt, die sinnvoll im Unterricht eingesetzt werden kann.  Literaturverzeichnis [Ab18] Abila, C.; Schallert, S.: SchülerInnenaktivierende Methoden in der Präsenzphase. In (Buchner, J. et al. Hrsg.): Inverted Classroom. Vielfältiges Lernen  Begleitband zur 7. Konferenz Inverted Classroom and Beyond 2018  FH St. Pölten, 20. & 21. Februar 2018, 2018; 15-19. [Be12] Bergmann, J.; Sams, A.: Flip your classroom. Reach every student in every class every day. International Society for Technology in Education, Eugene, Or, Alexandria, Va, 2012. [Br17] Brehmer, J.; Becker, S.: "Erklärvideos". … als eine andere und/oder unterstützende Form der Lehre. Georg-August-Universität Göttingen, 2017. [Bü18] Bülles, O.; Freisleben-Teutscher, C.; Buchner, J.: Potentiale interaktiver Videos für das Inverted Classroom Model. In (Buchner, J. et al. Hrsg.): Inverted Classroom. Vielfältiges Lernen  Begleitband zur 7. Konferenz Inverted Classroom and Beyond 2018  FH St. Pölten, 20. & 21. Februar 2018, 2018. [Fä16] Fähnrich; Thein: Differenzieren mit Erklärvideos. Mehr Zeit im Unterricht, 2016. [Fi18] Finger, A.; Wiegelmann, J.: Biodiversität vor der Haustür: Einsatz von Simpleshows im Biologieunterricht. In (Meßinger-Koppelt, J.; Maxton-Küchenmeister, J. Hrsg.): Naturwissenschaften digital. Toolbox für den Unterricht. Joachim Herz Stiftung Verlag, Hamburg, 2018; S. 60–63. [Fi17] Finkenberg, F.; Trefzger, T.: Flipped Classroom im Physikunterricht in der Oberstufe, Dresden, 2017. [Fr16] Frank, C.: Handlungsorientierung im besten Sinne. Erklärvideos im Unterricht. In Pädagogik, 2016; S. 23–25. [Ga17] Gallenbacher, J.: Abenteuer Informatik. IT zum Anfassen für alle von 9 bis 99 vom Navi bis Social Media. Springer, Berlin, 2017. Innovative Gestaltung und Einsatz von Erklärvideos im Informatikunterricht 229 Innovative Erklärvideos 10   [Go14] Gonzalez, J.: Modifying the Flipped Classroom: The "In-Class" Version. https://www.edutopia.org/blog/flipped-classroom-in-class-version-jennifer-gonzalez, 2014. 13.10.2018. [Ha12a]  Handke, J.: ICM-Effekte in der Hochschullehre. In (Handke, J.; Sperl, A. Hrsg.): Das Inverted Classroom Model. Begleitband zur ersten deutschen ICM-Konferenz. De Gruyter, Berlin/Boston, 2012; S. 139–148. [Ha12b] Handke, J.: Voraussetzungen für das ICM. In (Handke, J.; Sperl, A. Hrsg.): Das Inverted Classroom Model. Begleitband zur ersten deutschen ICM-Konferenz. De Gruyter, Berlin/Boston, 2012; 39-52. [Ha17] Handke, J.: Handbuch Hochschullehre Digital. Leitfaden für eine moderne und mediengerechte Lehre. Tectum Verlag, Baden-Baden, 2017. [Ha18]  Hahn, H.; Puschner, N.: Von der Präsenzvorlesung zu "Mini-Lectures" Umsetzung eines Inverted-Classroom-Szenarios. In (Kortenkamp, U.; Kuzle, A. Hrsg.): Beiträge zum Mathematikunterricht 2017. Vorträge auf der 51. Tagung für Didaktik der Mathematik vom 27.02.2017 bis 02.03.2017 in Potsdam, 2018; S. 369–372. [Rh19]   Rheinland-Pfalz Ministerium für Bildung, Wissenschaft, Jugend und Kultur. Lehrplan Informatik Grundund Leistungsfach, ohne Jahresangabe. Zugriff über: http://lehrplaene.bildung-rp.de/gehezu/startseite.html?keyword=informatik, Stand 10.05.2019. [Sa12] Sams, A.: Der "Flipped" Classroom. In (Handke, J.; Sperl, A. Hrsg.): Das Inverted Classroom Model. Begleitband zur ersten deutschen ICM-Konferenz. De Gruyter, Berlin/Boston, 2012; S. 13–23 [Sc12] Schäfer, A. M.: Das Inverted Classroom Model. In (Handke, J.; Sperl, A. Hrsg.): Das Inverted Classroom Model. Begleitband zur ersten deutschen ICM-Konferenz. De Gruyter, Berlin/Boston, 2012; S. 3–11. [Sc13a] Schön, S.; Ebner, M.: Gute Lernvideos. … so gelingen Web-Videos zum Lernen! Books on Demand, Norderstedt, 2013. [Sc13b] Schön, S.: Klappe zu! Film ab! Gute Lernvideos kinderleicht erstellen. In (Pauschenwein, J. Hrsg.): Lernen mit Videos und Spielen. Tagungsband zum 12. E-Learning-Tag der FH Joanneum am 18.9.2013. Graz, 2013; S. 3–9. [Sc16] Schlegel, F. Schlegel, F.: Erklärvideos im Unterricht. Einstieg in die Filmbildung mit YouTube-Formaten. Workshop für Lehrkräfte und MedienberaterInnen -. Film + Schule NRW, Münster, 2016. [St10] Stelmes, C.; Linckels, S.; Meinel, C.: Digitale Videos im Unterricht. Die "YouTube-Generation" lernt Judo mit E-Videos. In LOG IN, 2010; S. 22–28. [We12] Weidmann, D.: Das ICM als Chance für die individuelle Förderung von Schülern? In (Handke, J.; Sperl, A. Hrsg.): Das Inverted Classroom Model. Begleitband zur ersten deutschen ICM-Konferenz. De Gruyter, Berlin/Boston, 2012; 53-70. [Wo15] Wolf, K. D.: Video-Tutorials und Erklärvideos als Gegenstand, Methode und Ziel der Medienund Filmbildung. In (Hartung, A. et al. Hrsg.): Filmbildung im Wandel. new academic press, Wien, 2015; S. 121–131. 230 Tamara Hochthurn, Jens Gallenbacher<First name last name [et. al.]>(ed.): < book title>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <year>    15 Zur Entwicklung des Masterstudiengangs «Medien und Informatik» Beat Döbeli Honegger1, Martin Hermida2, Regina Schmid3 Abstract: Seit 2017 wird nach und nach in allen 21 deutschsprachigen Kantonen der Schweiz der Lehrplan 21 eingeführt. Mit dem darin enthaltenen Modul «Medien und Informatik» betritt die Schweiz im deutschsprachigen Raum Neuland. Doch fehlen derzeit nicht nur Lehrpersonen mit den notwendigen Kompetenzen, sondern auch entsprechend ausgebildete Expertinnen und Experten zur Ausund Weiterbildung dieser Lehrpersonen sowie zum Aufbau einer Fachdidaktik «Medien und Informatik». Mit dem «Joint Degree Masterstudiengang in Fachdidaktik Medien und Informatik» versuchen die Pädagogische Hochschule Schwyz, die Universität Zürich, die Fach-hochschule Luzern und die Pädagogische Hochschule Luzern diesem Mangel zu begegnen und die Grundlagen einer entsprechenden Fachdidaktik aufzubauen. Der vorliegende Beitrag beschreibt die Konzeption des Masterstudiengangs und die Herausforderungen anlässlich der ersten Durch-führung Keywords: Medien und Informatik, Fachdidaktik, Lehrplan 21, LehrerInnen-Bildung 1 Der Themenbereich «Medien und Informatik» im Lehrplan 21 Am 31.10.2014 hat die Deutschschweizer Erziehungsdirektorenkonferenz (D-EDK) den Lehrplan 21, der vom Kindergarten bis zum Ende der obligatorischen Schulzeit alle Fächer umfasst, zuhanden der Kantone verabschiedet [DEDK15a]. Unter anderem enthält der Lehrplan 21 auch das Modul «Medien und Informatik» [DEDK15b], das sich aus verschiedenen Perspektiven mit digitalen Phänomenen beschäftigt. Ähnlich wie die Dagstuhl-Erklärung [Br16], die eine technologische, eine gesellschaftlich-kulturelle und eine Anwendungsperspektive vorsieht, sind es im Lehrplan 21 die drei Bereiche Medien, Informatik und Anwendung. Der Lehrplan sieht dabei vor, dass die Bereiche Medien und Informatik in einem eigenen Gefäss vermittelt werden, Anwendungskompetenzen hingegen vorwiegend in anderen Fächern. Obwohl der Lehrplan 21 ausschliesslich eine Empfehlung an die Kantone ist, haben alle 21 mindestens teilweise deutschsprachigen Kantone beschlossen, den Lehrplan 21 einzuführen. Gewisse Kantone sehen dabei für «Medien und Informatik» bereits ab der 5. Klasse ein eigenes Zeitgefäss (meist im Um-fang einer Wochenlektion) vor. Andere Kantone integrieren die Themen in der 5. und 6. Klasse in bestehende Fächer und beginnen erst ab der 7. Klasse mit einem Zeitgefäss für Medien und Informatik (meist 2 Jahreslektionen verteilt auf die Klassenstufen 7-9).                                                            1 Pädagogische Hochschule Schwyz, IMS, Zaystrasse 42, CH-6410 Goldau, beat.doebeli@phsz.ch  2 Pädagogische Hochschule Schwyz, IMS, Zaystrasse 42, CH-6410 Goldau, martin.hermida@phsz.ch 3 Pädagogische Hochschule Schwyz, IMS, Zaystrasse 42, CH-6410 Goldau, regina.schmid@phsz.ch c b e   doi:18.18420/provided-by-editor-02 cba doi:10.18420/infos2019-23Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 231 16    Beat Döbeli Honegger, Martin Hermida, Regina Schmid  2 Ausund Weiterbildungsbedarf an Pädagogischen Hochschulen Unabhängig davon, ob die Kompetenzen von «Medien und Informatik» in einem eigenen Zeitgefäss oder integriert in bisherigen Fächern vermittelt werden sollen, benötigen Lehrerinnen und Lehrer in allen drei Bereichen Kompetenzen, über die sie jedoch häufig noch nicht verfügen. Im Gegensatz zu den letzten Einführungen von neuen Fächern in der Schweizer Volksschule (Frühfranzösisch und Frühenglisch) fehlen den Lehrpersonen meist nicht nur die entsprechenden didaktischen Kompetenzen, sondern auch die zugrunde liegenden fachlichen Kompetenzen. Ferner fehlen ihnen Unterrichts-erfahrungen aus der eigenen Schulzeit [Dö15]. Abbildung 1 zeigt die erforderlichen Kompetenzbereiche, wobei die ebenfalls notwendigen mediendidaktischen Kompe-tenzen in allen Fächern und nicht nur bei «Medien und Informatik» eine Rolle spielen.   Fig. 1: Notwendige digitale Kompetenzen von Lehrpersonen [Dö15] Die meisten Kantone haben unterdessen entschieden, wie und ab wann der Lehrplan 21 und damit auch «Medien und Informatik» eingeführt werden soll [Hä18]. Die Pädagogi-schen Hochschulen der deutschsprachigen Schweiz wiederum haben mit der Ausbildung künftiger und der Weiterbildung bestehender Lehrpersonen begonnen (erste Berichte siehe [DH17] und [LR18]). 232 Beat Döbeli Honegger et al. Zur Entwicklung des Masterstudiengangs «Medien und Informatik»    17 Pädagogische Hochschulen in der Deutschschweiz sind derzeit stark gefordert und können insbesondere die Weiterbildungsnachfrage nicht immer vollständig befriedigen. Zudem zeigt sich, dass auch viele im Bereich «Medien und Informatik» tätige Mitarbeitende Kompetenzdefizite aufweisen. Darüber hinaus handelt es sich bei Medien und Informatik um bisher eher getrennt agierende Bereiche, deren Zusammenlegung zwar einerseits Synergien, andererseits aber auch Reibungsflächen bietet. Eine gemein-same Fachdidaktik mit einem geteilten Fachverständnis fehlt bisher weitgehend [DM15]. 3 Der «Master of Arts in Fachdidaktik Medien und Informatik» Ausgehend vom geschilderten Bedarf nach einer Qualifizierung von Mitarbeitenden pädagogischer Hochschulen im Bereich «Medien und Informatik» hat die Pädagogische Hochschule Schwyz als Leading House zusammen mit der Universität Zürich, der Fachhochschule Luzern und der Pädagogischen Hochschule Luzern im Rahmen des Bundesprogramms zum «Aufbau der wissenschaftlichen Kompetenzen in den Fach-didaktiken 2017-2020» [Sw17] einen entsprechenden Masterstudiengang konzipiert. 3.1 Studienumfang und Berufsmöglichkeiten Der «Master of Arts in Fachdidaktik Medien und Informatik» umfasst mindestens 90 ECTS-Punkte und dauert in der Regel drei Jahre. Studierende mit einer Vorbildung in Medienund Kommunikationswissenschaft, Informatik, Erziehungswissenschaften oder einem Lehrdiplom auf Primarund Sekundarschulstufe I können sich für den Master-studiengang bewerben. Weisen Sie nicht alle erforderlichen Qualifikationen zur Aufnahme eines Masterstudiengangs auf, so müssen sie zusätzliche vorbereitende oder ergänzende Leistungen erbringen. Der Masterstudiengang qualifiziert zur Dozierenden-tätigkeit in Ausund Weiterbildung an Pädagogischen Hochschulen, zur Beratung von Schulleitungen und Lehrpersonen, zur Entwicklung von Lehrmitteln und zur For-schungstätigkeit. Der Studiengang ist jedoch kein Lehramtsstudium, d.h. er ist weder auf die Tätigkeit als Lehrperson ausgerichtet, noch ist mit ihm eine formale Unterrichts-berechtigung auf der Zielstufe verbunden. 3.2 Studienstruktur Das Studium setzt sich aus den drei Bereichen «Fachwissenschaftliche Studien», «Fach-didaktische Studien» und «Erziehungswissenschaftliche Studien» zusammen und widerspiegelt damit den oben beschriebenen Bedarf nach sowohl fachlichen als auch fachdidaktischen Kompetenzen. Abbildung 2 zeigt eine vereinfachte Darstellung der Studienstruktur.  Zur Entwicklung des Masterstudiengangs "Medien und Informatik" 233 18    Beat Döbeli Honegger, Martin Hermida, Regina Schmid     Fig. 2: Studienstruktur des Fachdidaktikmasters «Medien und Informatik» 3.3 Erstmalige Durchführung Nach einer sehr kurzen Aufbauphase konnte der Masterstudiengang im September 2018 mit rund 30 Studierenden in einer ersten Durchführung starten. Für die im September 2019 startende zweite Durchführung liegen 20 Anmeldungen vor. Nach Abschluss des ersten Studienjahres lassen sich Herausforderungen in drei Bereichen beschreiben. Inhaltlich sind insbesondere die Anbieterinnen und Anbieter dieses Masterstudiengangs gefordert, inhaltliche Kohärenz in diesem neuen Fachgebiet herzustellen. Für die Studierenden zeigt sich die Multidisziplinarität als eine der Herausforderungen in ihrem Studium. Weiter gilt es, im Zusammenspiel von Hochschulen und Studierenden, unterschiedliche organisatorische Strukturen in Einklang zu bringen. 3.3.1 Inhaltliche Herausforderungen Obwohl die Themen Medien und Informatik künftig fester Bestandteil der obligatorischen Volksschule sein werden, ist die Fachdidaktik Medien und Informatik erst im Aufbau [DM15]. Dieser Aufbauprozess muss auf drei Ebenen stattfinden. Auf einer ersten inhaltlichen Ebene muss festgelegt werden, welche Themen aus den Fachwissenschaften im Unterricht behandelt werden sollen und inwiefern diese Themen aus den beiden Fachwissenschaften Berührungspunkte aufweisen. Darauf aufbauend müssen auf einer zweiten Ebene anerkannte Bildungsstandards definiert werden, damit Unterricht auf diese ausgerichtet und evaluiert werden kann. Auf der dritten Ebene muss schliesslich das eigentliche fachdidaktische Handwerk erarbeitet werden, um die definierten Bildungsstandards im Unterricht zu erreichen. Die Herausforderung besteht nun darin, dass zwar mit dem Lehrplan «Medien und Informatik» eine erste, mindestens teilweise bildungspolitisch beeinflusste Setzung auf der ersten Ebene erfolgt ist, die anderen beiden Ebenen sich aber erst entwickeln 234 Beat Döbeli Honegger et al. Zur Entwicklung des Masterstudiengangs «Medien und Informatik»    19 müssen. Der Fachdidaktikmaster steht somit vor der Aufgabe, Elemente zu vermitteln, die teilweise erst erarbeitet werden. Im besten Fall ist der Fachdidaktikmaster eine hilfreiche Plattform zur Entwicklung und Etablierung dieser Ebenen. 3.3.2 Herausforderungen aus Studierendenperspektive Bevor sich die Studierenden mit der eigentlichen Fachdidaktik auseinandersetzen kön-nen, müssen sie sich die Grundlagen in den beiden Fachwissenschaften aneignen. Sie steigen damit in ein fachdidaktisches Studium ein, befassen sich aber vorerst mit rein fachwissenschaftlichen Inhalten ohne konkreten Bezug zur didaktischen Umsetzung und zur Zielstufe. Diese Vertiefung in die Fachwissenschaften ist für die professionelle Reife zentral, erfordert aber auch Ausdauer seitens der Studierenden. Zudem arbeiten einige Studierende bereits im Berufsfeld, jedoch ohne passende formale Qualifikation. Sie müs-sen nun ihre Tätigkeit notgedrungen auch aus anderer Perspektive betrachten, da die zunehmende Standardisierung und stärkere Anbindung an die Fachwissenschaften neue Massstäbe und Schwerpunkte setzen. Noch mehr Studierende des ersten Jahrganges sind mit dem Anspruch der modernen Hochschullehre konfrontiert, dass Forschung und Ent-wicklung in engem Bezug zueinander stehen sollen. Diese Studierenden müssen sich nun zusätzlich Kompetenzen in den sozialwissenschaftlichen Forschungsmethoden aneignen. 3.3.3 Organisatorische Herausforderungen Der Fachdidaktikmaster «Medien und Informatik» wird von vier Hochschulen getragen und hat in der ersten Durchführung Studierende mit sehr unterschiedlicher fachlicher Herkunft und Vorwissen angezogen. Dadurch war ein überdurchschnittlicher Koordina-tionsaufwand zum Abgleich aller Studienanforderungen und Reglemente der vier betei-ligten Hochschulen notwendig. Die grosse Heterogenität der Studierenden erforderte oft individuelle Abklärungen sur dossier mit entsprechendem Aufwand. Als weitere organi-satorische Herausforderung zeigt sich die terminliche Koordination der Lehrveranstal-tungen zwischen vier Hochschulen. Es musste sichergestellt werden, dass die Module innerhalb zweieinhalb Präsenztage pro Woche stattfinden, damit das Studium auch als Teilzeitstudium berufsund/oder familienbegleitend absolviert werden kann. 4 Erstes Zwischenfazit Trotz den beschriebenen Herausforderungen ist ein erfolgreicher Start des Fachdidaktik-masters «Medien und Informatik» gelungen. Somit zeigt sich an einem kleinen Beispiel, dass neue Fächer nicht zwingend an fehlenden Kompetenzen in den Institutionen der Lehrerinnenund Lehrerbildung scheitern müssen, sondern ein rascher Aufbau ent-sprechender Qualifikationsmassnahmen möglich ist. Es ist zu hoffen, dass dieser Fach-didaktikmaster mithelfen kann, eine inhaltlich und methodisch kohärente Fachdidaktik «Medien und Informatik» aufzubauen. Zur Entwicklung des Masterstudiengangs "Medien und Informatik" 235 20    Beat Döbeli Honegger, Martin Hermida, Regina Schmid  Literaturverzeichnis [Br16] Brinda, T. et al: Bildung in der digitalen vernetzten Welt – Dagstuhl-Erklärung. Deutsche Gesellschaft für Informatik, 2016. http://tinyurl.com/dagstuhl3eck https://doebe.li/t18567  [DEDK15a] Deutschschweizer Erziehungsdirektorenkonferenz (D-EDK): Lehrplan 21. Bereinigte Fassung, 2015. https://www.lehrplan.ch  https://doebe.li/b5500  [DEDK15b] Deutschschweizer Erziehungsdirektorenkonferenz (D-EDK): Medien und Informatik. In: D-EDK: Lehrplan 21. Bereinigte Fassung, 2015. https://projekt.lehrplan.ch/lehrplan/V5/ablage/FS1E_Modul_MI.pdf https://doebe.li/t17600  [DM15] Döbeli Honegger, B. & Merz, T.: Fachdidaktik Medien und Informatik Ein Beitrag zur Standortbestimmung. In: Beiträge zur Lehrerinnenund Lehrerbildung 33 (2015) 2, S. 256-263 https://doebe.li/t18200  [Dö15] Döbeli Honegger, B.: Digitale Kompetenzen von Lehrpersonen für den Lehrplan 21, 2015. https://doebe.li/t17550  [Dö16] Döbeli Honegger, B.: Mehr als 0 und 1. bern: hep Verlag, 2016. https://doebe.li/b6000  [DH17] Döbeli Honegger, B. & Hielscher, M.: Vom Lehrplan zur Lehrerinnenbildung. Erste Erfahrungen mit obligatorischer Informatikdidaktik für angehende Schweizer PrimarlehrerInnen. In: INFOS 2017, Lecture Notes in Infomatics (LN) Proceedings Series der Gesellschaft für Informatik (GI) Volume P-274, S. 97-107 https://doebe.li/t16600  [HLF18] Hänggli, R.; Lenz, F. & Frey, T.: Umsetzung mediale und digitale Bildung in den Kantonen. Universität Freiburg, 2018. https://doebe.li/t20968  [LR18] Lamprou, A. & Repenning, A.: Teaching How to Teach Computational Thinking. In: ITiCSE 2018 Proceedings of the 23rd Annual ACM Conference on Innovation and Technology in Computer Science Education Pages 69-74 https://doebe.li/t20894  [Sw17] swissuniversities: P-9: Aufbau der wissenschaftlichen Kompetenzen in den Fachdidaktiken 2017-2020. https://www.swissuniversities.ch/de/organisation/projekte-und-programme/p-9/   236 Beat Döbeli Honegger et al.cbaArno Pasternak (Hrsg.): INFOS 2019,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Empfehlungen der GI – Kompetenzen für informatischeBildung im PrimarbereichAusgestaltung der Empfehlungen der Gesellschaft für InformatikLudger Humbert1, Henry Herper, Alexander Best, Christian Borowski, RitaFreudenberg, Martin Fricke, Kathrin Haselmeier, Volkmar Hinz, Dorothee Müller,Andreas Schwill, Marco ThomasAbstract:Vorstellung der Ergebnisse des Arbeitskreises »Bildungsstandards Informatik für denPrimarbereich«. Darstellung und Diskussion der Motivation und der Restriktionen, die die »Standards«enthalten. Vorstellung und Besprechung von Unterrichtsbeispielen zur Umsetzung von Aspekten, diedie Kompetenzentwicklung der Schülerinnen und Schüler befördern.2Keywords:Primarbereich; Primarstufe; Grundschule; Informatikkompetenzen; informatische Allge-meinbildung; Phänomene, informatisch betrachtet; Informatikglossar; Unterrichtsbeispiele; digitaleBildung1 MotivationInformatische Bildung muss Eingang in die allgemeine Bildung ﬁnden, um dem gesell-schaftlichen Bedarf nach einer fundierten, fachbezogenen Grundlage für die zunehmend vonInformatik durchdrungene Welt einzulösen. Dass es dazu verpﬂichtende Informatikelementein jeder Schule braucht, ﬁndet zunehmend breitere Zustimmung und führt(e) in einigenLändern zur Einrichtung eines eigenen, neuen Schulfachs in der Grundschule [Be18; Ga13].Im Jahr 2000 wurde die vom Fachausschuss »Informatische Bildung an Schulen (IBS)«erarbeitete »Empfehlung für ein Gesamtkonzept zur informatischen Bildung an allgemeinbildenden Schulen« [GI00] vorgelegt. Folgend wurden für alle weiterbildenden SchulendieGrundsätze und Standards für die Informatik in der Schule – BildungsstandardsInformatik für die Sekundarstufe I[GI08] ausgearbeitet und 2008 als Empfehlungen der GIverabschiedet. Die Empfehlungen fürGrundsätze und Standards für die Informatik in derSchule – Bildungsstandards Informatik für die Sekundarstufe II[GI16] führten die durchdas Gesamtkonzept implizierte Linie fort und gestalteten sie so weiter aus.1Didaktik der Informatik, Wuppertalhumbert@uni-wuppertal.de2Dieser Beitrag enthält Elemente aus dem Projekt »Informatik an Grundschulen (IaG)«, die durch Unterstützungdes Ministeriums für Schule und Bildung des Landes Nordrhein-Westfalen (MSB) realisiert werden konnten[MS17]. cba doi:10.18420/infos2019-24Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 2372 Ludger Humbert, Henry Herper, Alexander BestMit denKompetenzen für informatische Bildung im Primarbereich[GI19b] liegen numehrverabschiedete Empfehlungen auch für Anforderungen an die informatische Bildung fürden Primarbereich bis zum Ende der Grundschule (4. Klasse) vor.2 EinordnungInformatik trägt wesentlich zur Allgemeinbildung bei. Es ist Aufgabe der Grundschule,die Fähigkeiten, Interessen und Neigungen von Kindern aufzugreifen und sie mit denAnforderungen fachlichen und fachübergreifenden Lernens zu verbinden. Eine bewussteTeilnahme am Leben in unserer Gesellschaft, aber auch die konstruktive Mitgestaltungder Lebenswelt setzen zunehmend informatische Kompetenzen voraus. Um Informatik fürKinder als kreativen Gestaltungsbereich fürs Problemlösen zugänglich zu machen, bedarf eseiner altersgerechten Einbettung in den Primarbereich. Dies muss durch didaktisch gestalteteFachkonzepte zur Erläuterung »informatischer Phänomene« erfolgen.Die Empfehlungen für dieKompetenzen für informatische Bildung im Primarbereichstelleneinen weiteren Baustein zur informatischen Bildung bereit. Alle drei Empfehlungen derGI detaillieren Kompetenzen für die fünf Prozessund Inhaltsbereiche, die in Abbildung1dargestellt werden.Inhaltsbereiche ProzessbereicheInformation und DatenAlgorithmenSprachen und AutomatenInformatiksystemeInformatik, Mensch und GesellschaftModellieren und ImplementierenBegründen und BewertenStrukturieren und VernetzenKommunizieren und KooperierenDarstellen und InterpretierenAbb. 1: Kompetenzstrukturmodell: Prozessund InhaltsbereicheDamit liegt ein vollständiges Konzept für eine zeitgemäße und fachlich fundierte informa-tische Bildung für die formale Bildung vom Primarbereich bis zum allgemeinbildendenAbitur vor [vgl. GI19a].238 Ludger Humbert et al.Primarbereich – Bildungsstandards 33 GestaltungsherausforderungenDie für den Primarbereich vorliegenden Empfehlungen gilt es in der Grundschule umzusetzen.Dazu wurden während der Erarbeitungsphase Vorschläge diskutiert, allerdings muss –im Unterschied zur weiterführenden Schule und zur gymnasialen Oberstufe – davonausgegangen werden, dass absehbar in Deutschland kein eigenes Schulfach Informatikin der Grundschule eingerichtet wird. Damit fehlen für den Informatikunterricht in derGrundschule – voraussichtlich auch in der Zukunft – primär qualiﬁzierte Lehrkräfte.Ebenfalls fehlen Unterrichtserfahrungen, die – in der Breite vorhanden – Grundlage fürEntwicklung und Gestaltung des Informatikunterrichts in der Grundschule darstellen undso einen wesentlichen Beitrag für die Unterrichtspraxis liefern würden. Umso wichtiger istes, dass Elemente gestaltet, erprobt und evaluiert werden, die auf einer fachdidaktischenBasis zum Gelingen informatischer Bildung in der Grundschule beitragen.Es ist unabdingbar, dass für die Gestaltung von Unterrichtselementen die Expertise vonGrundschullehrkräften berücksichtigt wird und die Umsetzung in verschiedenen Kontextenerprobt wird, damit vermieden werden kann, dass unterrichtliche Ideen zwar fachlichenAnforderungen genügen, nicht aber in den Grundschulen umgesetzt werden (können). Daherstellen wir Elemente vor, die Zugänge zur Informatik bereitstellen, die in verschiedenenunterrichtlichen Kontexten erprobt wurden und es erlauben, informatische Kompetenzenbei den Kindern in der Grundschule zu entwickeln.Beispiele3Um die Erreichung der Kompetenzen zu befördern, bedarf es konkreter, erprobter Beispiele.Mit der Verö entlichung der Entwurfsfassung der Kompetenzen in der LOG IN wurdenexemplarisch Elemente und Ideen für die Umsetzung vorgestellt [HK18]. In dem Projekt»Informatik an Grundschulen (IaG)« des nordrhein-westfälischen Schulministeriums wurdendarüber hinaus drei Module zur Umsetzung der Kompetenzen entwickelt, an Grundschulenerprobt und evaluiert [Ma18]. Dabei wurde insbesondere die Randbedingung, dass in diesemProjekt keine Informatiksysteme eingesetzt werden, berücksichtigt.Damit diese Rahmenbedingung konstruktiv eingelöst werden kann, wurde mit [Hu18]eine pointierte Sicht auf die Kompetenzentwicklung ohne Informatiksysteme sowohl inden historischen Kontext eingeordnet als auch beispielhaft dargestellt. Zu dem ProjektIaG [MS17] wurden vom Schulministerium des Landes Nordrhein-Westfalen Lehrerhand-reichungen, Hinweise zur Konzeption von Fortbildungsmaßnahmen sowie Materialienfür die Schülerinnen und Schüler ö entlich bereitgestellt [Hu19b]. Darüber hinaus wur-den von Teilnehmenden an der Erarbeitung der Kompetenzen parallel ForschungsundEntwicklungsprozesse angestoßen, die zu weiteren Unterrichtsbeispielen führten [Ar16].3Teile dieses Abschnitts wurden ebenfalls in »Informatik – Kompetenzentwicklung bei Kindern« [Hu19a]verö entlicht.Empfehlungen der GI – Kompetenzen für informatische Bildung im Primarbereich 2394 Ludger Humbert, Henry Herper, Alexander BestNachfolgend werden Beispiele für den Primarbereich zu Automatenmodellen (Inhaltsbereich»Sprachen und Automaten«) und zur Kryptologie (Inhaltsbereich »Information und Daten«)skizziert. Während Automatenmodelle bislang nicht in der Grundschule thematisiert werdenund Grundschullehrpersonen unbekannt sind, werden Themen zur Kryptologie bereitsrudimentär im Sach-, Deutschund/oder Mathematikunterricht behandelt. Die Beispielewurden mit (angehenden) Grundschullehrpersonen entwickelt und teilweise im Unterrichterprobt sowie evaluiert.AutomatenmodelleDie Automatentheorie zeichnet sich durch einen starken Abstraktionsgrad aus, was wiederumhohe Anforderungen an die didaktische Aufbereitung entsprechender Themen für dieGrundschule stellt. Schülerinnen und Schüler begegnen Automaten regelmäßig in ihremAlltag, etwa über Getränkeautomaten [GI19b, S. 10]. Dass sich deren Abläufe formalisieren,über Automatenmodelle modellieren und mittels Zustandsübergangsdiagrammen oder-tabellen darstellen lassen, ist ihnen hingegen nicht bewusst. Alltagsautomaten stellen fürdie Schülerinnen und Schüler somit eineBlack-Boxdar, mit der sie interagieren, derenFunktionsweise sie jedoch nicht nachvollziehen können.Ein schülerorientierter Kontext istPasswortsicherheit. Der Sicherheitsgrad eines Passwortskann anhand der Anzahl umgesetzter Kriterien deﬁniert werden. Der Sicherheitsgradsei über die Zuständerot,gelbundgründeﬁniert. Die Anzahl erfüllter Kriterien stelltdie Zustandsübergänge dar. Kriterien könntenZi ernoderKlein-undGroßbuchstabensein. Neben der Bewertung des Sicherheitsgrads stellen die Schülerinnen und Schülerden Bewertungsvorgang auch in einem Zustandübergangsdiagramm dar, um erstens dieAutomatisierbarkeit der Bewertung zu verstehen, zweitens den Bewertungsvorgang zuverinnerlichen und drittens das Zustandsmodell als kommunikationsstützende Notation zuerfahren.Die Schülerinnen und Schüler werden in die Lage versetzt, das Zustandsübergangsdiagrammin ein mentales Modell und ihr mentales Modell in ein entsprechendes Zustandsübergangs-diagramm zu überführen. Zunächst wird das vorgestellte Automatenmodell als Akzeptoraufgefasst, mit dem die Schülerinnen und Schüler exemplarisch Passwörter auf ihrenSicherheitsgrad, also die Anzahl erfüllter Kriterien, prüfen. Anschließend erweitern sie dasAutomatenmodell um selbstgewählte Kriterien sowie Zustände und modellieren diese imbestehenden Zustandsübergangsdiagramm. Dies könnte etwa über den Zustandorangeunddas KriteriumWortlänge > 7 Zeichenerfolgen.240 Ludger Humbert et al.Primarbereich – Bildungsstandards 5 sehrunsicherunsicher sichersehrsicherKriteriumerfüllt KeinKriteriumerfülltWeiteresKriteriumerfülltKeinweiteresKriteriumerfüllt WeiteresKriteriumerfülltKeinweiteresKriteriumerfülltAbb. 2: Zustandsübergangsdiagramm für die Bewertung eines Passworts über drei SicherheitskriterienKryptologieKinder im Grundschulalter nutzen bereits einfache kryptologische Verfahren, um geheimeBotschaften untereinander auszutauschen. Dazu zählen sowohl Transpositionsals auchSubstitutionsverfahren. Anknüpfend an diese Vorerfahrungen können zunächst zwei einfachesymmetrische Verfahren eingeführt werden: Caesar-Chi re und Skytalen. Inbesondere derhandlungsbasierte (enaktive) Zugang [Br64, S. 2] bietet sich für die Grundschule an, um andas entwicklungspsychologische Stadium der Schülerinnen und Schüler anzuknüpfen (sieheJean PiagetsModell der kognitiven Entwicklung[Pi74]). Über die Gegenstände Kästchen,Schlüssel (privater Schlüssel) und Schloss (ö entlicher Schlüssel) kann ein kontrastierendesasynchrones Verfahren eingeführt werden.Verschiedene kryptologische Verfahren, neben den genannten u. a. Vigenère-Chi re,wurden bereits erfolgreich an Grundschulen umgesetzt [Ar16; MS17]. Die Notwendigkeitverschlüsselter Kommunikation ergibt sich für die Schülerinnen und Schüler intuitiv aus ihrerLebenswelt. Sowohl das Verständnis für einfache Verfahren als auch deren Anwendung, dieEinführung fachsprachlicher Elemente wieVerschlüsseln,ÜbermittelnoderEntschlüsselnsowie die Reﬂexion eingesetzter Verfahren ist in den Klassen 3-4 möglich und führt zuhoher Motivation der Schülerinnen und Schüler. Erfahrungen zur Thematisierung vonAutomatenmodellen in der Grundschule liegen bislang nur sporadisch vor. Es existierenverschiedene Kontexte, die speziﬁsch für den Primarbereich entwickelt wurden. Dazuzählen die Kontexte »Farbmischung« [Se17] oder »Schatzinsel« [BFW06]. Erfahrungen zurVermittlung von Themen der Automatentheorie aus der ersten (Hochschule) und dritten(Fortbildungen) Lehrerbildungsphase liegen vor und deuten darauf hin, dass (angehende)Empfehlungen der GI – Kompetenzen für informatische Bildung im Primarbereich 2416 Ludger Humbert, Henry Herper, Alexander BestLehrpersonen sich in entsprechend aufbereitete Kontexte einﬁnden können. Ansätze vonStudierenden liegen in Form schriftlicher Unterrichtsentwürfe vor [Ar16].4 PerspektivenDie Arbeit muss fortgeführt werden, wollen wir nicht auf der Beispielebene verharren.Es gilt, Modelle zur Umsetzung der Empfehlungen in der Grundschule zu entwickeln,die nachhaltig informatische Bildung befördern. Dabei stellt sich die Frage nach derVerankerung der informatischen Bildung in der Grundschule in anderer Form als in denweiterführenden Schulen, da der Widerstand gegen die Einführung eines eigenständigenSchulfachs Informatik zur Zeit noch breit aufgestellt ist.Es ist daher dringend auch zu diskutieren, ob Informatik als weitere Perspektive inden existierendenPerspektivrahmen Sachunterrichtder GDSU für den Sachunterrichtaufgenommen wird, ob die von den Schülerinnen und Schülern zu erreichenden Kompetenzenim Zusammenhang in die Schulfächer Deutsch und/oder Mathematik eingegliedert werdenkönnen oder weitere/andere Möglichkeiten zu entwickeln oder zu erproben sind, uminformatische Bildung in der Grundschule für alle Schülerinnen und Schüler zu ermöglichen.Für jede der zu diskutierenden Varianten ist allerdings unabdingbar, dass die Lehrkräfte,die die Umsetzung realisieren, fachlich und fachdidaktisch auf diese Herausforderungbestens vorbereitet werden. Dazu müssen sie in der ersten Phase ihrer Lehrerbildung diefachlichen und fachdidaktischen Dimensionen der Informatik erfahren. Andere Variantenwerden scheitern, wie am Beispiel der informationstechnischen Grundbildung abgelesenwerden kann, die zwar seit 30 Jahren in den Bildungsplänen der weiterführenden Schulenvorgesehen ist, aber nicht stattﬁndet, wie z. B. in [Be19] ausgeführt wird.Erste Informatikveranstaltungen für zukünftige Grundschullehrkräfte zeigen, dass der Auf-wand und die Gestaltungsanforderungen durchaus eine Herausforderung für die Universitätendarstellen, wenn erreicht werden soll, dass nicht nur grundlegende Konzepte entwickeltwerden sollen, sondern auch mögliche Optionen für die eigene Unterrichtsgestaltung alsZiel ausgewiesen wird, wie in »Informatik an Grundschulen – Stellschraube Lehrerbildung«[Ha19] deutlich wird. Die in einem anderen, parallelen Veranstaltungskontext entwickelten –universitären Ansprüchen genügenden – Kompetenzen verdeutlichen die mit der Informatikverbundenen Herausforderungen für die Lehrerbildung »Informatische Bildung für alleLehramtsstudierenden – Reformprozess einer allgemeinbildenden Informatikveranstaltungin der universitären Lehrerbildung« [LH19]. Ho nung ergibt sich, wenn wir betrachten,dass die Schülerinnen und Schüler, nachdem sie Informatikunterricht in der Grundschuleerfahren haben, in der weiterführenden Schule eine höhere Selbstkompetenz in Informatikzum Ausdruck bringen, wie in »Interesse an Informatik und Informatikselbstkonzept beiSchülerinnen und Schülern zu Beginn der fünften Jahrgangsstufe des Gymnasiums – Eineempirische Untersuchung« [Mü19] deutlich wird.242 Ludger Humbert et al.Primarbereich – Bildungsstandards 7Literatur[Ar16]Arbeitsbereich Didaktik der Informatik der WWU Münster, Hrsg.: ProjektInformatik in der Grundschule, Mai 2016,   :https://t1p.de/qhab, Stand:10. 05. 2019.[Be18]Berry, M.: »Computing« als neues Schulfach. Umsetzung des landesweitenCurriculums für das Fach Computing in England. LOG IN, Thema 38/189/190,hrsg. von Humbert, L.; Koerber, B., S. 20–26, 2018,    : 0720-8642.[Be19]Bernewasser, J.: Informatik für alle, Digitalisierung an Schulen. Zeit online/,9. Mai 2019,   :https://t1p.de/spl5, Stand: 10. 05. 2019.[BFW06]Bell, T.; Fellows, M.; Witten, I. H.: Computer Science Unplugged, 2006,   :https://classic.csunplugged.org/, Stand: 24. 03. 2019.[Br64]Bruner, J. S.: The course of cognitive growth. American Psychologist 19/1,S. 1–15, 1964.[Ga13]Gander, W.; Petit, A.; Berry, G.; Demo, B.; Vahrenhold, J.; McGettrick, A.;Boyle, R.; Drechsler, M.; Mendelson, A.; Stephenson, C.; Ghezzi, C.; Meyer, B.:Informatics education: Europe cannot a ord to miss the boat, Apr. 2013,   :https://t1p.de/6jvf, Stand: 23. 04. 2019.[GD13]GDSU, Hrsg.: Perspektivrahmen Sachunterricht. GDSU – Gesellschaft fürDidaktik des Sachunterrichts, Julius Klinkhardt, Bad Heilbrunn, 2013,    :9783781519923.[GI00]Gesellschaft für Informatik e. V.: Empfehlung für ein Gesamtkonzept zurinformatischen Bildung an allgemein bildenden Schulen. Informatik Spektrum23/6, Beilage LOG IN 20 (2000) Heft 2, S. I-VII, S. 378–382, Dez. 2000,    :0170-6012,   :https://t1p.de/ntpf, Stand: 19. 03. 2019.[GI08]Gesellschaft für Informatik e. V.: Grundsätze und Standards für die Informatikin der Schule – Bildungsstandards Informatik für die Sekundarstufe I, Erarbeitetvom Arbeitskreis »Bildungsstandards« – Beschluss des  -Präsidiums vom24. Januar 2008 – verö entlicht als Beilage zur LOG IN 28 (2008) Heft 150/151,Apr. 2008,   :https://t1p.de/xb2w, Stand: 30. 04. 2019.[GI16]Gesellschaft für Informatik e. V.: Grundsätze und Standards für die Informatik inder Schule – Bildungsstandards Informatik für die Sekundarstufe II, Erarbeitetvom Arbeitskreis »Bildungsstandards SII« – Beschluss des  -Präsidiums vom29. Januar 2016 – verö entlicht als Beilage zur LOG IN 36 (2016) Heft 183/184,Apr. 2016,   :https://t1p.de/vxhy, Stand: 30. 04. 2019.[GI19a]Gesellschaft für Informatik e. V.: GI-Radar 233: Informatik im Primarbereich,2019,   :https://t1p.de/p129, Stand: 22. 04. 2019.Empfehlungen der GI – Kompetenzen für informatische Bildung im Primarbereich 2438 Ludger Humbert, Henry Herper, Alexander Best[GI19b]Gesellschaft für Informatik e. V., Hrsg.: Kompetenzen für informatische Bildungim Primarbereich, Empfehlungen der Gesellschaft für Informatik e. V. Erarbeitetvom Arbeitskreis »Bildungsstandards Primarbereich« – Beschluss des  -Präsidiums vom 31. Januar 2019 – wird in gedruckter Form der LOG IN 39(2019) Heft 191/192 beigefügt, 7. Feb. 2019,   :http://uni-w.de/1gm,Stand: 09. 03. 2019.[Ha19]Haselmeier, K.: Informatik an Grundschulen – Stellschraube Lehrerbildung. In(Pasternak, A., Hrsg.): Informatik für alle, INFOS 2019, 18. GI-Fachtagung In-formatik und Schule, 16.–18. September 2019, Dortmund, Germany. Bd. P288.LectureNotes in Informatics (LNI)-Proceedings, n. n. e., Gesellschaft für Infor-matik e. V. (GI), Bonn, xx–yy, 2019,    : 978-3-88579-682-4.[HK18]Humbert, L.; Koerber, B., Hrsg.: Informatische Bildung im Primarbereich.Themenheft der Zeitschrift LOG IN, Bd. 38, 189/190, Aug. 2018.[Hu18]Humbert, L.; Müller, D.; Fricke, M.; Haselmeier, K.; Siebrecht, D.: »Be-cause the music is not inside the piano«, Ist informatische Bildung ohneInformatiksysteme wünschenswert? LOG IN, Praxis & Methodik 38/189/190,hrsg. von Humbert, L.; Koerber, B., S. 67–72, 2018,    : 0720-8642,   :http://uni-w.de/1aq, Stand: 08. 02. 2019.[Hu19a]Humbert, L.; Best, A.; Micheuz, P.; Hellmig, L.: Informatik – Kompetenzent-wicklung bei Kindern. Informatik Spektrum 42/, n. n. e. – Preprint, rs–tu, 2019,    : 0170-6012,   :https://t1p.de/qhn7, Stand: 10. 05. 2019.[Hu19b]Humbert, L.; Magenheim, J.; Schroeder, U.; Fricke, M.; Bergner, N.: Handrei-chung für Lehrkräfte, Handreichungen und Unterrichtsmaterial. Hinweise zurSchulung/Fortbildung, hrsg. von Informatik an Grundschulen (IaG), 21. März2019,   :https://t1p.de/iu9z, Stand: 19. 04. 2019.[LH19]Losch, D.; Humbert, L.: Informatische Bildung für alle Lehramtsstudierenden –Reformprozess einer allgemeinbildenden Informatikveranstaltung in der univer-sitären Lehrerbildung. In (Pasternak, A., Hrsg.): Informatik für alle, INFOS2019, 18. GI-Fachtagung Informatik und Schule, 16.–18. September 2019, Dort-mund, Germany. Bd. P288. LectureNotes in Informatics (LNI)-Proceedings,n. n. e.; Preprint-Version, die die eingereichte und angenommene Fassung dar-stellt und bis zur Verö entlichung noch überarbeitet wird, Gesellschaft fürInformatik e. V. (GI), Bonn, 1. Feb. 2019,    : 978-3-88579-682-4,   :https://uni-w.de/1lj, Stand: 04. 05. 2019.[Ma18]Magenheim, J.; Müller, K.; Schulte, C.; Bergner, N.; Haselmeier, K.; Hum-bert, L.; Müller, D.; Schroeder, U.: Evaluation of Learning Informatics inPrimary Education. In (Pozdniakov, S. N.; Dagien˙e, V., Hrsg.): Informatics inSchools, Fundamentals of Computer Science and Software Engineering. 11thInternational Conference on Informatics in Schools: Situation, Evolution, andPerspectives, ISSEP 2018, Springer Verlag, St. Petersburg, Russia, S. 339–354,Okt. 2018,    : 978-3-030-02749-0.244 Ludger Humbert et al.Primarbereich – Bildungsstandards 9[MS17]MSB NRW, Hrsg.: Informatik an Grundschulen – Ziele, Pilotprojekt zurErprobung von Konzepten zur informatischen Bildung im Rahmen des Sachun-terrichts an Grundschulen, MSB NRW – Ministerium für Schule und Bildungdes Landes Nordrhein-Westfalen, Juli 2017,   :https://t1p.de/pods, Stand:25. 01. 2019.[Mü19]Müller, D.; Haselmeier, K.; Humbert, L.; Killich, K.: Interesse an Informatikund Informatikselbstkonzept bei Schülerinnen und Schülern zu Beginn derfünften Jahrgangsstufe des Gymnasiums – Eine empirische Untersuchung. In(Pasternak, A., Hrsg.): Informatik für alle, INFOS 2019, 18. GI-Fachtagung In-formatik und Schule, 16.–18. September 2019, Dortmund, Germany. Bd. P288.LectureNotes in Informatics (LNI)-Proceedings, n. n. e.; Preprint-Version, diedie eingereichte und angenommene Fassung darstellt und bis zur Verö ent-lichung noch überarbeitet wird, Gesellschaft für Informatik e. V. (GI), Bonn,xx–yy, 2019,    : 978-3-88579-682-4,   :http://uni-w.de/1lt, Stand:04. 05. 2019.[Pa]Pasternak, A., Hrsg.: Informatik für alle, INFOS 2019, 18. GI-FachtagungInformatik und Schule, 16.–18. September 2019, Dortmund, Germany, Bd. P288,LectureNotes in Informatics (LNI)-Proceedings, n. n. e., Bonn: Gesellschaft fürInformatik e. V. (GI),    : 978-3-88579-682-4.[Pi74]Piaget, J.: Der Aufbau der Wirklichkeit beim Kinde. Klett, Stuttgart, 1974.[Se17]Sellin, L.: Ausgewählte Elemente der theoretischen Informatik als Elementder informatischen Bildung im Primarbereich, PDF:https://uni-w.de/161,Bachelorthesis, Wuppertal: Fachgebiet Didaktik der Informatik – BergischeUniversität, 29. März 2017,   :https://uni-w.de/130, Stand: 10. 05. 2019.Empfehlungen der GI – Kompetenzen für informatische Bildung im Primarbereich 245cbaArno Pasternak [et. al.] (Hrsg.): INFOS 2019 Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Einsatz von Jupyter Notebooks am Beispiel eines ﬁktivenKriminalfallsFlorian Kapp1, Carsten Schulte2Abstract:In diesem Praxisbeitrag wird anhand eines Unterrichtsvorhabens zum Thema geographischeDaten der Einsatz von Jupyter Notebooks beschrieben und reﬂektiert. Schülerinnen und Schülerlösen einen ﬁktiven Kriminalfall, indem sie geographische Daten auf einer Karte visualisieren, dieseanschließend analysieren und abschließend Aspekte des Datenschutzes in Bezug auf geographischeDaten diskutieren. Das Unterrichtsvorhaben verfolgt das Ziel, die Schülerinnen und Schüler für dasThema „Umgang mit geographischen Daten“ zu sensibilisieren. Anhand des Unterrichtsvorhabensmöchten wir Besonderheiten und didaktische Möglichkeiten der Jupyter Notebooks erläutern unddarlegen, dass Jupyter Notebooks eine geeignete Programmierumgebung für den Informatikunterrichtin der Schule darstellen.Keywords:Interaktion und Exploration; Kompetenzen; Explorieren1 EinleitungIn der heutigen Zeit existieren neben zahlreichen unterschiedlichen Programmiersprachenauch diverse Programmierumgebungen. Doch welche sind für den Unterricht geeignet? DieGesellschaft für Informatik (GI) formuliert dazu folgendes: „Die Wahl der Programmierum-gebung bzw. der Programmiersprache orientiert sich dann an Kriterien wie Anschaulichkeit,einfachem Einstieg und vielfältigen Einsatzmöglichkeiten.“ [Pea08, S. 33]Neben Anschaulichkeit und einem einfachen Einstieg sind also vielfältige Einsatzmöglich-keiten die Kriterien, die eine Programmierumgebung erfüllen sollte [Pea08]. In diesemPraxisbeitrag möchten wir anhand eines Beispiels darlegen, dass Jupyter Notebooks ebendiese Kriterien erfüllen und somit eine geeignete Programmierumgebung für die Schuledarstellen.Im ersten Schritt werden wir erläutern, wie Jupyter Notebooks aufgebaut sind und wie sieals Entwicklungsumgebung installiert werden können. Anschließend beschreiben wir einUnterrichtsvorhaben zum Thema geographische Daten, gehen auf unsere Erfahrungen beider Erprobung des Unterrichtsvorhabens ein und beschreiben die Einsatzmöglichkeiten1Universität Paderborn, Didaktik der Informatik, Fürstenallee 11, 33102 Paderborn, DeutschlandFlorianKapp@uni-paderborn.de2Universität Paderborn, Didaktik der Informatik, Fürstenallee 11, 33102 Paderborn, Deutschlandcarsten.schulte@uni-paderborn.de cba doi:10.18420/infos2019-25Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 2472 Florian Kapp, Carsten Schulteder Jupyter Notebooks. Abschließend ziehen wir ein Resümee und reﬂektieren, inwiefernJupyter Notebooks die oben erwähnten Kriterien für eine geeignete Programmierumgebungerfüllen.2 Die Entwicklungsumgebung Jupyter NotebookJupyter Notebooks wurden ursprünglich entwickelt, um den Arbeitsablauf des wissenschaft-lichen Rechnens und der Analyse von Daten zu unterstützen [Kl16]. Das Projekt Jupyterentstand aus dem IPython-Projekt [Kl16] und versucht, Jupyter Notebooks einem größerenAnwenderkreis zugänglich zu machen [Kl16]. Jupyter verfolgt das Ziel, Open-Source-Tools für interaktives wissenschaftliches Rechnen und Datenwissenschaft in Forschung,Bildung und Industrie zu entwickeln, wobei der Schwerpunkt auf Benutzerfreundlichkeit,Kollaboration und Reproduzierbarkeit liegt [PG15].Aufbau eines Jupyter NotebooksEin Jupyter Notebook besteht aus Zellen, die individuell modiﬁziert und ausgeführt werdenkönnen [Kl16]. Dabei wird zwischen Markdown-Zellen und Code-Zellen unterschieden.Abbildung 1zeigt den Aufbau eines Jupyter Notebooks. Abb. 1: Aufbau eines Jupyter NotebooksMarkdown-Zellen können unter anderem Text-Elemente, Graﬁken und Videos enthaltenund eignen sich besonders gut für erklärende Texte und Aufgabenstellungen. Code-Zellenhingegen beinhalten den Programmcode, wobei die Ausgabe jeder Code-Zelle direktdarunter erscheint und als Teil des Dokuments gespeichert wird [Kl16]. Die Ausgabekann dabei neben Text auch umfangreiche Elemente wie Diagramme, mathematischeGleichungen oder interaktive Elemente und Graﬁken enthalten [Kl16].248 Florian Kapp, Carsten SchulteJupyter Notebooks Kriminalfall 3Installation von Jupyter NotebooksDer Zugri  auf Jupyter Notebooks funktioniert über einen Webbrowser. [Kl16] Sie könnenlokal über eine Desktop Anwendung (z.B. Anaconda, weitere Hinweise zur Installation undVerwendung in [Ro18]) oder auf einem Remote Server ausgeführt werden [Kl16]. Abb. 2: Graﬁsche Darstellung der ServerarchitekturInAbbildung 2ist die Serverarchitektur graﬁsch dargestellt, welche wir bei der Erprobungdes Unterrichtsvorhabens genutzt haben. Den Schülerinnen und Schülern musste nur nochZugri  auf unsere GitLab Instanz gewährt werden, welche die Autorisierung verwaltet.Anschließend konnten sie die Jupyter Notebooks in einem Webbrowser bearbeiten.3 Unterrichtsvorhaben Dem Täter auf den FersenDas Unterrichtsvorhaben beschreibt eine Möglichkeit, Jupyter Notebooks gewinnbringendim Informatikunterricht einzusetzen. Die Schülerinnen und Schüler lösen einen ﬁktivenKriminalfall, indem sie programmieren, analysieren und mit den Jupyter Notebooksinteragieren. Anhand von diesem Anwendungsfall diskutieren sie anschließend Aspekte desDatenschutzes in Zusammenhang mit geographischen Daten.ZielsetzungDas Ziel des Unterrichtsvorhabens ist es, Schülerinnen und Schüler für das Thema „Umgangmit geographischen Daten“ zu sensibilisieren. Sie sollen verstehen, dass es wichtig ist,auf seine eigenen Daten zu achten und ziehen eventuelle Rückschlüsse für ihren eigenenUmgang mit Daten. Zur Erreichung des Ziels nutzen die Schülerinnen und Schüler JupyterNotebooks zur Auswertung und Analyse von geographischen Daten und lernen an einemBeispiel, dass ein verantwortungsbewusster Umgang mit Daten notwendig ist.Einsatz von Jupyter Notebooks am Beispiel eines ﬁktiven Kriminalfalls 2494 Florian Kapp, Carsten SchulteVoraussetzungen und ZielgruppeDie Schülerinnen und Schüler arbeiten in dem Unterrichtsvorhaben mit der Programmier-sprache Python. Diese bietet viele Möglichkeiten zur Datenauswertung und ist deshalbgut geeignet. Die Schülerinnen und Schüler sollten bereits Kenntnisse im Bereich des Pro-grammierens in einer textuellen Programmiersprache besitzen und vor allem die KonzepteSchleifen, Objekte und Klassen kennen.Anknüpfend an die Voraussetzungen richtet sich das Unterrichtsvorhaben vorrangig anSchülerinnen und Schüler der Sekundarstufe II. Falls Schülerinnen und Schüler der Se-kundarstufe I die erforderlichen Vorkenntnisse besitzen, so kann das Unterrichtsvorhabenebenfalls mit ihnen durchgeführt werden. Alternativ kann das Unterrichtsvorhaben mitSchülerinnen und Schülern der Sekundarstufe I ohne die Programmierphase durchgeführtwerden, wenn ihnen das Ergebnis der Programmierphase eine interaktive Karte (vergleicheAbbildung 3) zusätzlich zur Verfügung gestellt wird.Einordnung des UnterrichtsvorhabensZur Einordnung des Unterrichtsvorhabens orientieren wir uns an den Bildungsstandardsder GI (vergleiche [Rea16]). In den Bildungsstandards sind verschiedene InhaltsundProzessbereiche formuliert. Das Unterrichtsvorhaben ist hauptsächlich in den Inhaltsbereich„Informatik, Mensch und Gesellschaft“ einzuordnen. Darüber hinaus kann das Unterrichts-vorhaben aufgrund der Programmierphase anteilig den Inhaltsbereich „Algorithmen“undden Prozessbereich „Modellieren und Implementieren“ abdecken. Durch die didaktischeAusgestaltung des Unterrichtsvorhabens lässt sich das Unterrichtsvorhaben zudem in dieProzessbereiche „Kommunizieren und Kooperieren“, „Darstellen und Interpretieren“ und„Begründen und Bewerten“ einordnen.Kurzbeschreibung des UnterrichtsvorhabensDas Unterrichtsvorhaben besteht aus vier Unterrichtssequenzen, deren Durchführungsdauerin der Praxis variieren kann. Dies ist von den Vorkenntnissen der Schülerinnen und Schülerabhängig.Die erste Unterrichtssequenz dient als thematischer Einstieg. Die Schülerinnen und Schülersammeln zum Thema geographische Daten Stichpunkte auf Karteikarten, erläutern dieseund gruppieren sie an der Tafel. Anschließend werden Oberbegri e für die Gruppen vonKategorien erarbeitet. Daraufhin erklärt der Lehrende den Aufbau von geographischenDaten und zeigt den Schülerinnen und Schülern ein Video, welches eine Einführung inden Kriminalfall darstellt. Abschließend wird den Schülerinnen und Schülern das weitereVorgehen erläutert.Amanda Weber war Filialleiterin eines Lidls und wurde am Hauptbahnhof ermordet. DiePolizei hat die geographischen Daten des Tattages der Verdächtigen gesammelt und möchte250 Florian Kapp, Carsten SchulteJupyter Notebooks Kriminalfall 5diese nun untersuchen, um den Täter oder die Täterin zu überführen. Leider haben sie bei derÜbermittlung der Daten einen Fehler gemacht und die Daten sind nicht mehr zuzuordnen.In der zweiten Unterrichtssequenz geht es um die Auswertung der geographischen Da-ten. Die Schülerinnen und Schüler bearbeiten ein Jupyter Notebook mit verschiedenenProgrammierund Analyseaufgaben. Das Ziel der Aufgaben ist es, die geographischenDaten den Verdächtigen zuzuordnen. Zunächst nutzen die Schülerinnen und Schüler von unszuvor programmierte Klassen, um damit eigene Karten zu programmieren. Diese werdenzur Visualisierung der geographischen Daten verwendet. Im nächsten Schritt werden dieseKarten analysiert, um anhand von Steckbriefen die geographischen Daten den Verdächtigenzuzuordnen.Die dritte Unterrichtssequenz beschäftigt sich mit der Tätersuche. In der ersten Phasebearbeiten die Schülerinnen und Schüler ein Jupyter Notebook mit dem Ziel den Täter oderdie Täterin zu überführen. Dazu erhalten sie Hinweise in Form von Informationstexten(vergleicheAbbildung 5) und müssen diese mit Hilfe einer Karte (vergleicheAbbildung 3)bearbeiten. Abb. 3: Interaktive Karte zur Analyse der geographischen DatenIn der zweiten Phase sollen die Schülerinnen und Schüler in Gruppenarbeit auf einem Plakatbegründet darstellen, wer der Täter oder die Täterin ist. Dabei ist zu beachten, dass auf Basisder geographischen Daten zwei mögliche Täter in Frage kommen, damit die Schülerinnenund Schüler erkennen, dass Daten nicht eindeutig sind.In der letzten Unterrichtssequenz diskutieren die Schülerinnen und Schüler auf Basisder bisherigen Ergebnisse Aspekte des Datenschutzes in Bezug auf geographische Daten.Dabei werden, ausgehend von der Frage, wo geographische Daten gesammelt werden,Einsatz von Jupyter Notebooks am Beispiel eines ﬁktiven Kriminalfalls 2516 Florian Kapp, Carsten Schultefolgende Aspekte angesprochen: a) Chancen, Risiken und Missbrauchsmöglichkeiten, b)gesellschaftliche Folgen, c) Rückschlüsse für das eigene Verhalten.ErfahrungsberichtIm Rahmen eines Seminars wurde das Unterrichtsvorhaben mit Kursen verschiedenerJahrgangsstufen der Sekundarstufe II erprobt und reﬂektiert. Dabei konnten wir einigeErfahrungen sammeln, die wir im Folgenden darstellen möchten.Die meisten Schülerinnen und Schüler haben während der gesamten Durchführung sehrkonzentriert und ruhig gearbeitet. Gerade bei der Bearbeitung der Jupyter Notebooks warensie sehr motiviert. Trotz begrenzter Zeit waren alle Lernenden an der Weiterarbeit amJupyter Notebook interessiert.Die Phase der Programmierung hat häuﬁg sehr lange gedauert und den Schülerinnen undSchülern bei der Durchführung die meisten Probleme bereitet. Dies lag zum einen daran,dass die Schülerinnen und Schüler weniger Vorkenntnisse hatten als erwartet und zumanderen an der geforderten selbstständigen Arbeit.Die Phase der Tätersuche hat allen Schülerinnen und Schülern viel Spaß gemacht. Währendder Bearbeitung des Jupyter Notebooks konnte man ausgiebige Diskussionen beobachten,die bei der Präsentation der Ergebnisse neu entfacht sind. Allerdings muss man als Lehrenderebenfalls den Fall bedenken, dass alle Gruppen den gleichen Täter vermuten, sodass manselbst die entgegengesetzte Meinung einnehmen muss, damit eine Diskussion entsteht.Die abschließende Diskussion verlief in den meisten Fällen sehr schleppend. Dies lagdaran, dass die Schülerinnen und Schüler zwar eingesehen haben, dass der Umgang mit deneigenen Daten wichtig ist. Sie waren allerdings auch häuﬁg der Meinung, dass sie nichts zuverstecken haben und Unternehmen ihre Daten sowieso bekommen würden, wenn sie dieDaten haben wollen.Den Rückmeldungen der Schülerinnen und Schüler konnten wir entnehmen, dass ihnen dieArbeit mit den Jupyter Notebooks Spaß gemacht hat und sie gerne häuﬁger damit arbeitenwürden. Nach einer kurzen Eingewöhnungsphase haben sich die Schülerinnen und Schülergut mit den Jupyter Notebooks zurecht gefunden. Gerade die interaktiven Elemente, welchesie nutzen konnten, waren sehr beliebt und wurden häuﬁg genutzt. Bei der Arbeit mit demServer sind allerdings zunächst Probleme aufgetreten. Es ist daher darauf zu achten, wieviele Ressourcen die Arbeit in den Jupyter Notebooks benötigt, um den Server nicht zuüberlasten.Die Programmiersprache Python war für die Schülerinnen und Schüler zunächst sehrungewohnt. Jedoch nach einigen Tipps und Hinweisen zum Einstieg wurden die anfänglichenProbelme schnell überwunden, sodass sich die Schülerinnen und Schüler anschließend rechtgut damit zurechtfanden und hinterher zurückmeldeten, dass Python „besser“ als Java sei,da die Syntax weniger komplex ist.252 Florian Kapp, Carsten SchulteJupyter Notebooks Kriminalfall 74 Einsatzmöglichkeiten von Jupyter NotebooksJupyter Notebooks besitzen eine Vielzahl von Einsatzmöglichkeiten im Informatikunterricht.Im Folgenden möchten wir vorstellen, welche der Möglichkeiten wir in dem beschriebenenUnterrichtsvorhaben genutzt haben und wie diese umgesetzt sind.EntwicklungsumgebungWie bereits beschrieben sind Jupyter Notebooks so aufgebaut, dass die Schülerinnenund Schüler ihren Programmcode in Code-Zellen schreiben, diesen ausführen und direktdarunter Rückmeldung erhalten. Der entscheidende Vorteil von Jupyter Notebooks ist, dassein komplexes Programm durch den zellenweisen Aufbau leicht in kleinere Teilproblemeaufgeteilt werden kann. Für die Schülerinnen und Schüler ist es dann möglich dieseTeilprobleme schrittweise zu lösen, um ein in sich geschlossenes Programm zu erhalten.Diese Herangehensweise fördert die Interaktion der Schülerinnen und Schüler mit derEntwicklungsumgebung.ArbeitsblattJupyter Notebooks können ebenfalls als Arbeitsblatt genutzt werden. Dazu werden Ar-beitsanweisungen und erklärende Texte einfach in eine Markdown-Zelle geschrieben undausgeführt. InAbbildung 4ist eine Aufgabe aus dem Jupyter Notebook zur Datenauswertungdargestellt. Abb. 4: Beispielaufgabe aus dem Jupyter Notebook zur DatenauswertungWie auf einem herkömmlichen Arbeitsblatt gibt es zunächst einen erklärenden Text,gefolgt von einer konkreten Arbeitsanweisung. Jupyter Notebooks bieten die Möglichkeit,im Anschluss an eine Arbeitsanweisung eine Code-Zelle oder eine Markdown-Zelle zuerstellen, um die Ergebnisse direkt unter der Aufgabe festzuhalten. Jupyter Notebooks bietenEinsatz von Jupyter Notebooks am Beispiel eines ﬁktiven Kriminalfalls 2538 Florian Kapp, Carsten Schulteso die Möglichkeit, den Programmcode auszuführen und die Aufgaben experimentell inkleineren Aufgaben zu bearbeiten.KontrollmethodeAls Lehrender kennt man die Situation, wenn ein Schüler oder eine Schülerin in einerArbeitsphase nur aufzeigt, um zu fragen, ob die Lösung richtig ist. Gerade in Programmier-phasen ist dies schwierig zu beantworten und mit einem erhöhten Aufwand verbunden, daes nicht die eine richtige Lösung gibt. Jupyter Notebooks können hier Abhilfe scha en undbieten die Möglichkeit, dass Schülerinnen und Schüler selbst kontrollieren können, ob ihreLösung richtig ist. Im Gegensatz zu einem Compiler kann ebenfalls die Korrektheit derLösung überprüft werden. Abb. 5: Ausschnitt aus dem Jupyter Notebook zur TätersucheInAbbildung 5ist ein Ausschnitt aus dem Jupyter Notebook zur Tätersuche dargestellt.Am unteren Rand kann man einen Button „Hinweis 3 anzeigen“ und ein Textfeld erkennen.Die Schülerinnen und Schüler müssen in das Textfeld den Namen des Verdächtigeneintragen, der ausgeschlossen werden kann, damit sie den nächsten Hinweis erhalten. Dieserwird anschließend in der gleichen Form wie Hinweis 2 (vergleicheAbbildung 5oben)eingeblendet.Button und Textfeld sind von uns programmiert worden und der dazugehörige Programmcodewurde mit einer Erweiterung3für das Jupyter Notebook versteckt, damit die Schülerinnenund Schüler den Namen nicht dem Programmcode entnehmen können. Beim Klick auf denButton wird zunächst abgefragt, ob der vorherige Hinweis bearbeitet wurde und ob der3vergleichehttps://github.com/kirbs-/hide_code254 Florian Kapp, Carsten SchulteJupyter Notebooks Kriminalfall 9eingetragene Name richtig ist. Ist dies der Fall, wird eine Textdatei ausgegeben, welcheden nächsten Hinweis enthält. Ansonsten wird eine Fehlermeldung ausgegeben. DiesesVorgehen ermöglicht es, dass die Schülerinnen und Schüler die Hinweise erst bekommen,wenn es an der Zeit ist. Ansonsten könnten sie direkt den letzten Hinweis durchlesen undwären fertig.Hilfe zur SelbsthilfeIn der heutigen Gesellschaft spielt Selbstständigkeit eine große Rolle. Schülerinnen undSchüler müssen demnach auch in der Lage sein, sich selbst zu helfen und selbstständig zuarbeiten. Die Nutzung der Jupyter Notebooks erlaubt es dem Lehrenden, seine Schülerinnenund Schüler dabei zu unterstützen, selbstständiger zu werden.Die eben angesprochene Methode zur Selbstkontrolle ist ein Beispiel, allerdings bietenJupyter Notebooks noch mehr Möglichkeiten. InAbbildung 4kann man neben den bereitsangesprochenen erklärenden Texten, den Arbeitsanweisungen und dem Programmcode nochdrei Buttons erkennen. Diese Buttons ermöglichen es, dass sich die Schülerinnen und Schülerdrei gestufte Hilfestellungen einund ausblenden können. Sie können die Hilfestellungenselbstständig durchlesen und bearbeiten und werden so immer selbstständiger. Der Vorteil,den die Jupyter Notebooks hierbei bieten, ist, dass Aufgaben und Hilfestellungen in einerUmgebung sind und so keine Medienbrüche entstehen.Die Umsetzung der Buttons funktioniert im Grunde wie die Umsetzung der Kontrollmethode.Beim Klick auf einen der Buttons wird eine entsprechende Textdatei als Ausgabe eingeblen-det. Buttons und Button Events sind von uns programmiert und der Programmcode wurdemit einer Erweiterung versteckt. Dies wurde ergänzt durch Abfragen, die überprüfen, obeine Hilfestellung angezeigt wird, damit nicht zwei Hilfestellungen gleichzeitig eingeblendetwerden.5 Fazit & AusblickAm Anfang des Praxisbeitrags haben wir uns die Frage gestellt, ob Jupyter Notebooks einegeeignete Programmierumgebung für den Einsatz in der Schule sind. Laut GI müssen Pro-grammierumgebungen Kriterien wie Anschaulichkeit, einfachem Einstieg und vielfältigenEinsatzmöglichkeiten erfüllen [Pea08].Nach einer kurzen Eingewöhnungsphase sind die Schülerinnen und Schüler sehr gut mitden Jupyter Notebooks zurecht gekommen. Außerdem ist es sehr hilfreich, dass für dieNutzung der Jupyter Notebooks lediglich ein Webbrowser nötig ist, falls die entsprechendeServerfunktionalität gegeben ist. Die Schülerinnen und Schüler müssen sich demnach auchzuhause keine zusätzliche Software installieren.Einsatz von Jupyter Notebooks am Beispiel eines ﬁktiven Kriminalfalls 25510 Florian Kapp, Carsten SchulteDurch die Möglichkeit Bilder, Videos oder interaktive Elemente in ein Jupyter Notebook zuintegrieren ist ebenfalls das Kriterium der Anschaulichkeit erfüllt. Mit diesen Möglichkeitenkönnten Schülerinnen und Schüler auch ihre eigene Benutzeroberﬂäche erstellen.Weiter haben wir am Beispiel des beschriebenen Unterrichtsvorhabens viele verschiedeneEinsatzmöglichkeiten von Jupyter Notebooks aufgezeigt. Gerade die sequenzielle Aus-führung der Code-Zellen, die Minimierung der Medienbrüche, der Zugri  über einenWebbrowser und die interaktive Auseinandersetzung mit der Entwicklungsumgebung sindwesentliche Vorteile der Jupyter Notebooks.Mit den in diesem Praxisbeitrag beschriebenen Einsatzmöglichkeiten sind diese noch nichterschöpft. Jupyter Notebooks könnten ebenfalls zur Di erenzierung genutzt werden, indemButtons Aufgaben mit unterschiedlichem Schwierigkeitsgrad einblenden. Außerdem gibt eseinige Erweiterungen für Jupyter Notebooks, die z.B. die Einbindung von LaTeX oder eineNutzung zur Präsentation ermöglichen.Bei allen Vorteilen und Einsatzmöglichkeiten besitzen Jupyter Notebooks auch einenwesentlichen Nachteil. Die Einrichtung des Servers ist eine große Herausforderung undhat uns viele Probleme bereitet. Mit der oben dargestellten Struktur kann dieses Problemallerdings gelöst werden.Zusammenfassend kann man also sagen, dass Jupyter Notebooks die geforderten Kriterienin vollem Maße erfüllen und für den Einsatz in der Schule geeignet sind. Sobald dieEinrichtung des Servers abgeschlossen ist, erhalten Lehrerinnen und Lehrer ein Werkzeug,welches das Lernen der Schülerinnen und Schüler sehr gut unterstützen kann.Literaturverzeichnis[Kl16]Kluyver, Thomas; Ragan-Kelley, Benjamin; Pérez, Fernando; Granger, Brian E.; Bussonnier,Matthias; Frederic, Jonathan; Kelley, Kyle; Hamrick, Jessica B.; Grout, Jason; Corlay, Sylvain;Ivanov, Paul; Avila, Damián; Abdalla, Saﬁa; Willing, Carol; et al.: Jupyter Notebooks apublishing format for reproducible computational workﬂows. In: Positioning and Powerin Academic Publishing: Players, Agents and Agendas, 20th International Conference onElectronic Publishing, Göttingen, Germany, June 7-9, 2016. S. 87–90, 2016.[Pea08]Puhlmann, Hermann; et al.: , Grundsätze und Standards für die Informatik in der Schule.Bildungsstandards Informatik für die Sekundarstufe I, 2008.[PG15]Pérez, Fernando; Granger, Brian E.: Project Jupyter: Computational narratives as the engineof collaborative data science. Retrieved September, 11, 2015.[Rea16]Röhner, Gerhard; et al.: , Bildungsstandards Informatik für die Sekundarstufe II, 2016.[Ro18]Rossant, C.: IPython Interactive Computing and Visualization Cookbook: Over 100 hands-onrecipes to sharpen your skills in high-performance numerical computing and data science inthe Jupyter Notebook, 2nd Edition. Packt Publishing, 2018.256 Florian Kapp, Carsten SchulteArno Pasternak [et. al.] (Hrsg.): INFOS 2019 – Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 15 Informatikunterricht in Baden-Württemberg Entwicklung an allgemein-bildendenden Gymnasien Andreas Koch1, Alexander Mittag2 Abstract: In den beiden vergangenen Jahren wurde der Informatikunterricht in der Sekundarstufe I an allgemein-bildenden Gymnasien in Baden-Württemberg durch Einführung des Pflichtfachs „Aufbaukurs Informatik“ und des Profilfachs „IMP“ verstärkt. Auch die Kursstufe wird in den kommenden Jahren weiterentwickelt werden. Keywords: Aufbaukurs Informatik, Baden-Württemberg, Entwicklung, IMP, Informatik, Kursstufe 1 Einführung Der Informatikunterricht ist in den beiden vergangenen Jahren in der Sekundarstufe I an allgemein-bildenden Gymnasien in Baden-Württemberg deutlich ausgebaut worden. Die Erweiterungen sind in Tab. 1 grau hinterlegt dargestellt. Klassenstufe 7 8 9 10 KS1 KS2 Aufbaukurs Informatik 1      Profilfach IMP  2 1 1   AG    2   Wahlfach 2-stündig     2 2 Wahlfach 4-stündig     4 4 Tab. 1: Wochenstundenverteilung im Fach Informatik seit dem Schuljahr 2018/19                                                         1 Seminar für Ausbildung und Fortbildung der Lehrkräfte Tübingen (Gymnasium), Mathildenstr. 32, 72072 Tübingen, Deutschland, andreas.koch@seminar-tuebingen.de 2 Zentrum für Schulqualität und Lehrerbildung, Fasanenweg 11, 70771 Leinfelden-Echterdingen, Deutschland, alexander.mittag@zsl.kv.bwl.de  cba doi:10.18420/infos2019-26Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 257 16 Andreas Koch und Alexander Mittag 2 Informatikunterricht in Sekundarstufe I 2.1 Aufbaukurs Informatik Seit dem Schuljahr 2017/18 findet erstmals verpflichtender, versetzungsrelevanter Informatikunterricht für alle Schülerinnen und Schüler an allgemein-bildenden Gymnasien in Baden-Württemberg statt. Das fächerintegrative Fach „Informationstech-nische Grundbildung (ITG)“ gibt es nicht mehr. Die Kontingentstundentafel weist nun eine Stunde für den „Aufbaukurs Informatik“ aus. Der Namensteil „Aufbaukurs“ suggeriert, dass die Schülerinnen und Schüler in den Klassenstufen 5 und 6 bereits Kompetenzen im Bereich der Informatik erworben haben. Allerdings findet in diesen beiden Klassenstufen kein Informatikunterricht statt. Der insgesamt 35 Schulstunden umfassende „Basiskurs Medienbildung“ in Klassenstufe 5 definiert im zugrundeliegenden Bildungsplan [Mi16-2] keine Kompetenzen, die dem Fach Informatik explizit zuzuordnen sind. Der Bildungsplan des Aufbaukurses Informatik [Mi16-1] besitzt auch für Haupt-/Werk-realschulen, Realschulen und Gemeinschaftsschulen Gültigkeit. Die inhaltsbezogenen Kompetenzen gliedern sich in vier Bereiche, die in Tab. 2 dargestellt werden. Bereich Auswahl der Inhalte3 1 Daten und Codierung Alltägliche Codierungen (z.B. Morse-Code) Codierungen von Bild und Text Umrechnung von Binärund Dezimalzahlen 2 Algorithmen Programmierung mithilfe von Anweisungen,  Bedingungen, Sequenzen, Schleifen, Variablen und Verzweigungen Visuelle Entwicklungsumgebung wie „Scratch“ wird empfohlen [Le16] 3 Rechner und Netze Grundlegende Struktur lokaler Netze und des Internets Grundlegender Ablauf der Internetkommunikation Möglichkeiten der Datenspeicherung 4 Informations-gesellschaft und Datensicherheit Einfache Verschlüsselungsverfahren (z.B. Cäsar-Verfahren) Angriffe auf einfache Verschlüsselungsverfahren Umgang mit (digitalen) Daten an gegebenen Fallbeispielen Tab. 2: Inhaltsbezogene Kompetenzbereiche des Bildungsplans des Profilfachs IMP in Informatik Einige der Inhalte aus den Bereichen (1) und (4) wie „Codierungen von Bild und Text“ bzw. (2) und (3) wie „Programmierung“ und „Verschlüsselungsverfahren“ sind im vormals gültigen Bildungsplan für ITG [Mi04, S. 309-313] bzw. im aktuell noch gültigen Bildungsplan für die Kursstufe [Mi04, S. 437-443] enthalten und sind im Rahmen eines                                                         3 Aus Gründen der besseren Lesbarkeit werden die Kompetenzformulierungen in Tabellen stets als Inhaltsstichpunkte wiedergegeben. 258 Andreas Koch, Alexander Mittag Informatikunterricht in Baden-Württemberg 17 spiralcurricularen Unterrichts vorgezogen worden. Diese Bildungspläne befinden sich momentan auch deshalb in der Überarbeitung. 2.2 Profilfach IMP Seit dem Schuljahr 2018/19 können zugelassene allgemein-bildende Gymnasien das Profilfach „Informatik Mathematik Physik (IMP)“ für die Klassenstufen 8 bis 10 anbieten. Aktuell bieten 56 Gymnasien IMP an [Mi18-4]. Der Unterricht findet in Informatik, Mathematik und Physik separat und gemäß der Stundenverteilung in Tab. 3 statt. Am Schuljahresende wird eine einzelne Note für IMP ausgewiesen [Mi18-3]. Klassenstufe 8 9 10 Informatik 2 1 1 Mathematik 1 1 2 Physik 1 2 1 Tab. 3: Wochenstundenverteilung im Profilfach IMP Der Bildungsplan für IMP [Mi18-2] definiert für jedes der drei Fächer separate inhaltsbezogene Kompetenzen, wobei Verschränkungen bestehen, z.B. zwischen der Graphentheorie in Mathematik und Algorithmen in Informatik. Die inhaltsbezogenen Kompetenzen knüpfen an denen des Aufbaukurses Informatik bzw. denen des Vorjahresunterrichts in IMP an (vgl. Tab. 4), vertiefen und erweitern diese. Bereich Auswahl der Inhalte Klassenstufe 8 Klassenstufe 9 Klassenstufe 10 1 Daten und Codierung Fehlerkorrektur Graphen Datenkompression Dijkstra-Algorithmus   2 Algorithmen Datenstrukturen Softwareprojekt Algorithmen-Entwurf Unterprogramme GUI-Erstellung Mehrdim. Arrays 3 Rechner und Netze Adressierung Namensauflösung  Routing Schaltnetze 4 Informations-gesellschaft und Datensicherheit Vigenère-Verfahren Umgang mit personen-bezogenen Daten Backupstrategien Datensicherheit Asymmetrische Verschlüsselung Zertifizierung Tab. 4: Inhaltsbezogene Kompetenzbereiche des Bildungsplans des Aufbaukurses Informatik In Bereich (2) ist ab Klassenstufe 9 die Verwendung einer textuellen Programmiersprache vorschrieben [Mi18-2, 3.2.1.2]. Informatikunterricht in Baden-Württemberg 259 18 Andreas Koch und Alexander Mittag 3 Informatikunterricht in der Kursstufe In der Kursstufe werden derzeit ein zweistündiger Wahlkurs, der von allen Schülerinnen und Schülern gewählt werden kann, und ein vierstündiger Wahlkurs, dessen Wahlvoraussetzung die Teilnahme an der zweistündigen AG in Klassenstufe 10 ist, angeboten. Der vierstündige Wahlkurs findet im Rahmen eines Schulversuchs statt und ermöglicht seit dem Schuljahr 2016/17 eine schriftliche Abiturprüfung. Die Schulverwal-tung macht hierzu folgende statistische Angaben: Aktuell nehmen 33 Gymnasien am Schulversuch teil. Im Jahr 2018 haben 77 Schülerinnen und Schüler die Prüfung abgelegt, 15 mehr als im Vorjahr. Zum Schuljahr 2019/20 tritt eine Reform der Kursstufe in Kraft [Mi18-1], in deren Rahmen auch die Informatikangebote der gymnasialen Kursstufe überarbeitet werden. Mit Beginn des Schuljahres 2021/22 wird sich so in Kombination mit den bereits implementierten Informatikangeboten der Sekundarstufe I voraussichtlich die in Abb.1 dargestellte Gesamtstruktur des Informatikunterrichts in Baden-Württemberg ergeben. Allgemein-bildende Gymnasien können weiterhin ein zweistündiges Wahlfach anbieten, das allen Schülerinnen und Schülern offen steht. Zugelassene Gymnasien können darüber hinaus ein dreistündiges Basisfach und ein fünfstündiges Leistungsfach anbieten, deren Wahlvoraussetzung die Belegung von IMP oder die Teilnahme an der AG ist. Die zweistündige AG kann zukünftig auch jeweils einstündig in den Klassenstufen 9 und 10 angeboten werden. Schülerinnen und Schüler, die das Wahlfach belegen, können sich nur dann für eine mündliche Abiturprüfung entscheiden, wenn sie vorab die AG oder IMP besucht haben. 260 Andreas Koch, Alexander Mittag Informatikunterricht in Baden-Württemberg 19   Abb. 1: Struktur des Informatikunterrichts in Baden-Württemberg mit der geplanten neuen Kursstufe ab dem Schuljahr 2021/22 Die Bildungspläne für die zukünftige AG und die drei neuen Fächer der Kursstufe befinden sich aktuell in der Entwicklung. Der momentan gültige Bildungsplan für die zweistündige Kursstufe [Mi04] enthält die Kompetenzbereiche „Information und Daten“, „Algorithmen und Daten“, „Problemlösen und Modellieren“, „Wirkprinzipien von Informatik-Systemen“ und „Informatik und Gesellschaft“. Der Bildungsplan für die vierstündige Kursstufe [Mi14] ist um den Bereich „Sprachen und Automaten“ ergänzt worden. Die Kompetenzen berücksichtigen die Bildungsstandards der Gesellschaft für Informatik [GI16] und umfassen u.a. die Themen „Datenbanksysteme“ und „Objektorientierte Modellierung und Programmierung“.  Informatikunterricht in Baden-Württemberg 261 20 Andreas Koch und Alexander Mittag 4 Ausblick Die kommenden Jahre werden zeigen, ob sich IMP an den Schulen etablieren wird. Langfristig ist ein Übergang dieses Profilfachs in ein Pflichtfach wünschenswert, damit alle Schülerinnen und Schüler durchgängigen Informatikunterricht ab Klassenstufe 7 erhalten. Das Vorziehen von inhaltsbezogenen Kompetenzen aus den aktuellen Bildungsplänen der Kursstufe in die der Sekundarstufe I bietet die Gelegenheit, bei der Überarbeitung der Kursstufenpläne Erweiterungen und Vertiefungen, z.B. in den Bereichen „Automaten und Sprachen“ und „Algorithmen“, vorzunehmen. Eine Ergänzung um einen neuen Teilkom-petenzbereich „Projektmanagement“ wäre sinnvoll, um verschiedene inhaltsund prozess-bezogene Kompetenzen der Schülerinnen und Schüler zusammenzuführen, zu erweitern und zu vertiefen. Durch den erfolgten und geplanten Ausbau des Informatikunterrichts werden zusätzliche Fachlehrkräfte benötigt. Das Land Baden-Württemberg trägt diesem Ausbau mit Fort-bildungsmaßnahmen wie dem „Kontaktstudium IMP“ und dem zweijährigen „Jahreskurs Informatik SII“ Rechnung und wird auf diese Weise auch in den kommenden Jahren weitere Lehrkräfte für den Informatikunterricht qualifizieren [Re19]. Abzuwarten bleibt, welche Rolle das neu gegründete Zentrum für Schulqualität und Lehrerbildung [Mi19] bei der Implementierung zukünftiger Fortbildungsmaßnahmen im Bereich der Informatik spielen wird. Quellenverzeichnis [GI16] Gesellschaft für Informatik (GI) e.V.: Bildungsstandards Informatik für die Sekundar-stufe II, 2016. https://www.informatikstandards.de/docs/Bildungsstandards_SII.pdf. Abruf am 11.10.2018. [Le16] Lehrerinnenfortbildung Baden-Württemberg: Programmieren mit Scratch. https://lehrerfortbildung-bw.de/u_matnatech/informatik/gym/bp2016/fb1/ 2_algorithmen/1_hintergrund/2_hintergrund/2_scratch/. Abruf am 11.10.2018. [Mi04] Ministerium für Kultus, Jugend und Sport Baden-Württemberg: Bildungsplan 2004. Allgemein-bildendes Gymnasium, 2004. http://www.bildungsplaene-bw.de/site/ bildungsplan/get/documents/lsbw/Bildungsplaene/Bildungsplaene-2004/Bildungs standards/Gymnasium_Bildungsplan_Gesamt.pdf, Abruf am 11.10.2018. [Mi14] Ministerium für Kultus, Jugend und Sport Baden-Württemberg: Bildungsplan Informatik Baden-Württemberg (vierstündige Kursstufe), 2014. http://www.bildungs plaene-bw.de/site/bildungsplan/get/documents/lsbw/Bildungsplaene/Bildungsplaene-2004/Bildungsstandards/Schulversuch%20INF-4-std/Gym_Inf_wb_Schulversuch_bs. pdf. Abruf am 11.10.2018. [Mi16-1] Ministerium für Kultus, Jugend und Sport Baden-Württemberg: Bildungsplan 2016, Gemeinsamer Bildungsplan für die Sekundarstufe I, Aufbaukurs Informatik, 2016. http://www.bildungsplaene-bw.de/,Lde/LS/BP2016BW/ALLG/SEK1/INF7. Abruf am 11.10.2018. 262 Andreas Koch, Alexander Mittag Informatikunterricht in Baden-Württemberg 21 [Mi16-2] Ministerium für Kultus, Jugend und Sport Baden-Württemberg: Bildungsplan 2016, Gemeinsamer Bildungsplan für die Sekundarstufe I, Basiskurs Medienbildung, 2016. http://www.bildungsplaene-bw.de/,Lde/LS/BP2016BW/ALLG/SEK1/BMB. Abruf am 11.10.2018. [Mi18-1] Ministerium für Kultus, Jugend und Sport Baden-Württemberg: Anpassung des Schulversuchserlasses „Informatik 4-stündig“ in den Jahrgangstufen an die neue AGVO ab dem Schuljahr 2019/2020, 01.10.2018. AZ 37-6521.-15-INF/100/1. [Mi18-2] Ministerium für Kultus, Jugend und Sport Baden-Württemberg: Bildungsplan 2016 Gymnasium, Endfassung, Profilfach Informatik Mathematik Physik (IMP), 2018. http://www.bildungsplaene-bw.de/,Lde/LS/BP2016BW/ALLG/GYM/IMP. Abruf am 11.10.2018. [Mi18-3] Ministerium für Kultus, Jugend und Sport Baden-Württemberg: Bildungsplanreform,  Häufig gestellte Fragen hierauf, Einführung des Profilfachs Informatik, Mathematik, Physik (IMP). http://www.km-bw.de/,Lde/Startseite/Schule/Haeufig+gestellte+Fragen, Abruf am 11.10.2018. [Mi18-4] Ministerium für Kultus, Jugend und Sport Baden-Württemberg: Pressemitteilung, Neues Profilfach IMP, 14.08.2018. https://www.km-bw.de/,Len/Startseite/Service/2018+08+ 14+Neues+Profilfach+IMP, Abruf am 11.10.2018. [Mi19] Ministerium für Kultus, Jugend und Sport Baden-Württemberg: Neue Wege für mehr Bildungschancen: Landtag beschließt Qualitätskonzept. https://km-bw.de/,Lde_DE/Startseite/Service/2019+02+13+Landtag+beschliesst+Qualitaetskonzept+fuer+Schulen. Abruf am 01.06.2019. [Re19] Regierungspräsidium Stuttgart: Informatik – Fortbildungen. https://rp.baden-wuerttemberg.de/rps/Abt7/Ref75/Fachberater/Seiten/Informatik.aspx. Abruf am 01.06.2019. Informatikunterricht in Baden-Württemberg 263<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 TPA-Modell Vom Denken zum Handeln in der informatischen Bildung  Urs Leo Meier1 Abstract: Durch die Einführung des neuen Fachs Medien und Informatik im Rahmen des Lehrplans 21 an Deutschschweizer Volksschulen halten u.a. informatische und medienpädagogische Inhalte Einzug in den Unterricht ab Kindergartenstufe. Lehrpersonen aller Schulstufen sind daher gefordert, ihre eigenen Kompetenzen weiterzuentwickeln, um ihre Schüler*innen im Lernprozess zu unterstützen. Insbesondere der Programmierunterricht benötigt viele Fertigkeiten auf verschiedenen Ebenen. Um die Abläufe eines Problemprozesses beim Programmieren für Lehrpersonen verständlich aufzuzeigen, hat der Autor ein Modell entwickelt. Das sogenannte TPA-Modell (Thinking, Processing, Acting) zeigt die grundlegenden Arbeitsschritte beim Lösen eines Problems aus dem Alltag bis hin zur Verwirklichung in einem physikalischen Modell wie z.B. einem Roboter oder Microboard. Nach der Entwicklung des TPA-Modells wurde es in der Praxis eingesetzt, um problembasierte Aufgaben zu reduzieren und die grundlegenden Programmierkonzepte zu vermitteln.  Keywords: Computational Thinking, CS unplugged, Algorithmen, Programmieren, Physical Computing, Problembasierte Aufgaben 1 Einleitung Aktuell wird an Deutschschweizer Volksschulen mit Inkraftsetzung des Lehrplans 21 das Fach Medien und Informatik ab Kindergartenstufe eingeführt. Inhaltlich wird dabei zwischen medienpädagogischen und informatischen Inhalten sowie Anwendungen unterschieden. Im Bereich Informatik sind Begriffe wie Computer Science Unplugged (folgend als „unplugged“ bezeichnet), Algorithmen, Programmieren etc. neu. In Weiterbildungen bei Lehrpersonen hat der Autor festgestellt, dass die genannten Begrifflichkeiten oft nicht verstanden sowie falsch angewendet werden. Aus diesem Grund hat der Autor ein Modell entwickelt, welches die Begriffe richtig verortet und einen Überblick vermittelt. Das Modell zeigt erstens das Denken (Thinking oder Computational Thinking) auf, welches anschliessend zu einem Programm (Processing) führt und in einem dritten Schritt im Physikalischen (Acting) umgesetzt wird. Das TPA-Modell zeigt im Überblick die grundlegenden Arbeitsschritte beim Lösen eines Problems aus dem Alltag bis hin zum Verwirklichen in einem physikalischen Modell wie einem Roboter oder Microboard.                                                               1 Pädagogische Hochschule Luzern, Dozent Medien und Informatik, Sentimatt 1, 6003 Luzern, urs.meier@phlu.ch  cba doi:10.18420/infos2019-27Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 265 16  Urs L. Meier 2 TPA-Modell 2.1 Thinking Das Denken steht im Modell an erster Stelle. Ein Problem aus der analogen Welt soll so modelliert werden, damit es von einem Computer gelöst werden kann. Im Paper New frameworks for studying and assessing the development of computational thinking haben Brennan und Resnik (2012) folgendes Zitat für Computational Thinking verwendet: “the thought processes involved in formulating problems and their solutions so that the solutions are represented in a form that can be effectively carried out by an information-processing agent”. [BR12, p. 2] Das Zitat setzt den Schwerpunkt auf einen Denkprozess, der vorrangig ein Problem analysiert und aufbereitet, damit das Problem von einem Computer verarbeitet werden kann. Das vorliegende TPA-Modell stützt sich bildlich wie inhaltlich auf das Computational-Thinking-Modell aus England, das nach der Bildungsinitiative im Jahre 2014 von BBC [BBC14] veröffentlicht wurde. Das Computational-Thinking-Modell der BBC ist heute weit verbreitet und wird unter anderem auch bei Google im Education-Programm [CT15] eingesetzt und basiert auf folgenden vier Begriffen.   • Decomposition:  Grosse Problemstellungen auf kleinere lösbare reduzieren. • Pattern Recognition: Erkennen von Mustern und Regelmässigkeiten in Daten. • Abstraction: Unnötige Informationen finden, sie eliminieren und somit Informationen auf Wichtiges reduzieren. • Algorithm: Entwickeln von Anweisungen, die das Problem oder ähnliche Probleme Schritt für Schritt lösen.  266 Urs Meier TPA-Modell 17   Abbildung 1 TPA-Modell: Thinking Im ersten Teil Thinking wird ein Problem so analysiert und aufbereitet, damit als Ziel eine Abfolge von Anweisungen (Algorithmen) ausgearbeitet wird, die einem Computer übergeben werden können. Als symbolische Darstellung für den Algorithmus eignet sich ein Flussdiagramm oder Pseudocode.     TPA-Modell 267 18  Urs L. Meier 2.2 Processing Die Erkenntnisse aus dem Denkprozess können nun an einen Computer übergeben werden, der sie ausführen kann. Die Kommunikation vom Menschen mit dem Computer wird Programmieren genannt. Hromkovič (2009) [Hr09, p. 34] bezeichnet das Programmieren als eine Sprache zur Kommunikation mit dem Rechner.    Abbildung 2 TPA-Modell – Processing Das TPA-Modell zeigt einen Überblick der Tätigkeiten ohne Computer (unplugged) und mit dem Computer (plugged) auf. Des Weiteren wird die Unterscheidung von Algorithmen und Programmen deutlich und verständlich. Je nach Aufgabe und Unterrichtsziel eignet sich eine textbasierte beziehungsweise eine visuelle Programmiersprache besser für die Anweisungen an den Computer.    268 Urs Meier TPA-Modell 19 Um die Arbeitsweise von Computern zu verdeutlichen, wird im TPA-Modell in Abbildung 3 eine zusätzliche kommunikative und technische Ebene eingeführt. Sie zeigt das Zusammenspiel von Software und Hardware. Die Anweisung der menschlichen Sprache führt über die Programmiersprache zu den Anweisungen in Maschinensprache, die das Ausführen eines Programmes mit der Recheneinheit ermöglicht. Auf die Unterscheidung von Interpreter und Compiler sowie JiT (Just in Time) -Compiler wird bewusst nicht eingegangen, sondern der Vorgang wird einfachheitshalber als Kompilieren dargestellt. Wichtig ist hier die Information, dass der Programmcode nochmals in einen Maschinencode übersetzt wird, der anschliessend von der Recheneinheit ausgeführt werden kann. Die Recheneinheit wird zusätzlich mit einem Transitor als kleinste Schalteinheit abgebildet.   Abbildung 3 TPA-Modell Processing and Compiling    TPA-Modell 269 20  Urs L. Meier 2.3 Acting Das Acting zeigt das Programm in Aktion bzw. Handlung und dient als Rückmeldung, ob das eingangs gestellte Problem gelöst wird. Das EVA-Prinzip [RE17] wird hier vertikal dargestellt und zeigt die physikalische Eingabe mit Tastatur oder Sensor, deren Verarbeitung in einem Prozessor sowie die Ausgabe auf einem Bildschirm bzw. einem Aktor.    Abbildung 4 TPA-Modell – Acting Das TPA-Modell zeigt im Überblick auf, wie vom Denkprozess bis hin zur Anzeige auf dem Bildschirm viele kleine Schritte nötig sind. Daraus resultierend kann aufgezeigt werden, wie und wo Fehler bei der Entwicklung von Software entstehen können. Besonders wertvoll ist die Sichtweise für Lehrpersonen, die zukünftig Algorithmen und Programmieren unterrichten. Der Überblick zeigt auf, wo bei Projekten von Schüler*innen nach möglichen Fehlern gesucht werden kann. Fehlt beispielsweise eine physikalische Verbindung beim Input, habe ich mich vertippt (plus/minus) im Programmcode oder ist meine Überlegung im Flussdiagramm falsch? Für die Fachdidaktik bietet das TPA-Modell die Möglichkeit, einzelne Aspekte aufzunehmen und auf diese im Unterricht einzugehen.     270 Urs Meier TPA-Modell 21 3 Umsetzung Das TPA-Modell wird in der Ausund Weiterbildung im Rahmen von Semestermodulen oder CAS Medien und Informatik für Lehrpersonen eingesetzt. Es hilft den Teilnehmenden, Begriffe richtig zu verorten und einen Überblick zu gewinnen. Als Schwerpunkt wird das TPA-Modell bei problembasierten Aufgaben eingesetzt. Es wird bewusst bei kleinen und einfachen Problemen angewendet. Die grundlegenden Programmierkonzepte können dadurch vermittelt werden.  Im konkreten Einsatz bei problembasierten Aufgaben werden folgende Ziele verfolgt: • Algorithmisches Denken fördern • Ein Problem in kleine lösbare Probleme reduzieren  • Lösungen für Probleme in Worten und mit Diagrammen darstellen • Umsetzung von Algorithmen in Programmen • Testen der angedachten Lösungsstrategien in Programmen 3.1 Ausund Weiterbildung Das TPA-Modell eignet sich sehr gut, damit die Begriffe der Informatik korrekt eingesetzt und verwendet werden. Das TPA-Modell zeigt den Lehrpersonen einerseits die Komplexität des Informatikbzw. Programmierunterrichts, hilft aber andererseits mit dem Überblick, auch Ängste und Unsicherheiten abzubauen sowie Vertrauen zu schaffen. Weiter soll das TPA-Modell aufzeigen, wie fachdidaktische Begriffe erklärt und richtig verortet werden können. Es wird unter anderem dargelegt, wie man Programmieren in Schritten vermitteln kann. Ein Schwerpunkt ist die Förderung des algorithmischen Denkens und das Lösen von Problemen. Konkret wird das TPA-Modell in Ausund Weiterbildungen herangezogen, um aus einer Problemstellung kleine Teilprobleme herauszuschälen und zu vermitteln.   TPA-Modell 271 22  Urs L. Meier Sollen Schülerinnen und Schüler beispielsweise ein Rennspiel programmieren, könnten sie folgende Teilproblemstellungen ermitteln: • Steuerung eines Autos mit Tasten  • Das Auto so steuern, damit es immer auf der Bahn bleibt • Runden zählen • Tempo messen • Akkustand bei Elektro-Formel 1 anzeigen • Hindernisse einbauen • … Für eine konkrete Umsetzung wird hier das Teilproblem eines Akkustands dargelegt. Das Teilproblem wird reduziert auf das Zählen mit einer Variablen. Damit das Problem analysiert werden kann, müssen in einem ersten Schritt Fragen gestellt werden. • Welche Informationen benötige ich? • Wie zähle ich zurück? • Wo starte ich? • Welche Schritte nehme ich? • Wie benenne ich die Variable? • … In den nächsten Schritten wird das Teilproblem in Worten (Pseudo-Code), als Flussdiagramm und als blockbasiertes Programm dargestellt.   Abbildung 5 Problembasierte Aufgaben Teilschritte  272 Urs Meier TPA-Modell 23 Das so analysierte Teilproblem zeigt die verschiedenen Darstellungsformen mit entsprechender Abstraktionsebene gut auf und hilft, die erwähnten Ziele zu verfolgen. 3.2 Beispiel-Umsetzung Das vorgestellte TPA-Modell wurde für problembasierte Aufgabenstellungen in der Ausbildung angehender Lehrer*innen für die Sekundarstufe 1 während eines Semestermoduls eingesetzt. Exemplarisch wird folgend eine gelungene Semesterarbeit von Berger [Be18] aufgezeigt. Der vorliegende Ausschnitt zeigt auf, wie bei einem Spiel das Teil-Problem «zufälliges Auftauchen eines Käfers» analysiert und schrittweise in einem Programm umgesetzt wird.   Abbildung 6: Modul problembasierte Aufgaben – Ausschnitt Semesterarbeit Berger  3.3 Unterricht SEK I (7-9 Schuljahr) Das TPA-Modell mit dem Schwerpunkt der problembasierten Aufgaben wird im Frühjahr 2019 an zwei Klassen des 9. Schuljahres an einem Gymnasium umgesetzt. Relevante Erkenntnisse können an der GI-Fachtagung Informatik und Schule "Informatik für alle" im Rahmen des Workshops präsentiert werden.  TPA-Modell 273 24  Urs L. Meier 4 Fazit und Ausblick Als erstes Fazit lässt sich auf Grund der Semesterarbeiten der Studierenden feststellen, dass die Fokussierung auf das Problemlösen in kleinen Teilschritten für den Lernprozess unterstützend war und die Programmierkonzepte so besser vermittelt werden konnten. Bei der Weiterbildung von Lehrpersonen konnte mit dem TPA-Modell der Bereich Informatik des Dag-Stuhl-Dreiecks [GI16] klarer vermittelt und vor allem die Begriffe Algorithmen und Programmieren deutlicher verortet werden. Weiter wird mit der Unterscheidung von unplugged und plugged die Denkweise vermittelt, dass Informatikunterricht auch ohne Computer stattfinden kann. Die praktische Umsetzung auf der Zielstufe wird zeigen, wie nachhaltig die Art und Weise des Programmierunterrichts gestaltet werden kann. 5 Literaturverzeichnis  [BR12]  K. Brennan und M. Resnick, „harvard.edu,“ 2012. [Online]. Available: http://scratched.gse.harvard.edu/ct/files/AERA2012.pdf. [Zugriff am 26 01 2019]. [BBC14]  BBC, „https://www.bbc.com/bitesize/guides/zp92mp3/revision/1,“ 2014. [Online]. Available: https://www.bbc.com/bitesize/guides/zp92mp3/revision/1. [Zugriff am 26 01 2019]. [CT15]  computationalthinkingcourse, „computationalthinkingcourse.withgoogle.com,“ google.com, 2015. [Online]. Available: https://computationalthinkingcourse.withgoogle.com/unit?lesson=8&unit=1. [Zugriff am 26 01 2019]. [Hr09]  J. Hromkovič, Sieben Wunder der Informatik, Wiesbaden: Vieweg+Teubner, 2009.  [RE17]  P. D. M. Rieger, P. Eisoldt, D. Schlichtenberger und T. Scheible, Applied Computer Systems, Hochschule Albstadt-Sigmaringen: Institut für wissenschaftliche Weiterbildung, 2017.  [Be18]  J. Berger, „Leistungsnachweis Modul pbA 3. Semester Medien und Informatik,“ PHLU, Luzern, 2018. [GI16]  I. (GI), „gi.de Website,“ 2016. [Online]. Available: https://gi.de/themen/beitrag/dagstuhl-erklaerung-bildung-in-der-digital-vernetzten-welt-1/. [Zugriff am 02 02 2019].  274 Urs Meier<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 Mischen possible. Didaktische und unterrichtspraktische Überlegungen zum Mischen im Informatikunterricht. Peter Micheuz1  Abstract: In diesem Praxisbericht geht es exemplarisch um Zugänge, Werkzeuge und Methoden zum Thema Mischen. Verglichen mit der Vielfalt an Sortieralgorithmen, wird dieses Thema im Be-reich digitaler Datenverarbeitung kaum explizit gemacht. Aber warum eigentlich? Dieser Beitrag befasst sich mit der Didaktik des „Anordnens“ von digitalen Objekten als Teil eines zeitgemäßen Informatikunterrichts, in dem unterrichtspraktische Überlegungen und Konzepte mit unterschiedli-chen Softwarewerkzeugen und Entwicklungsumgebungen demonstriert und implementiert werden. Keywords: Algorithmen, Computational Thinking, Programmierung, Sortieren und Mischen,  1 Einleitung Es begab sich kürzlich im Informatikunterricht einer 5. Klasse (9. Jahrgangsstufe), in dem das „Schweizer Messer“ unter den Softwarewerkzeugen, nämlich Excel, als Vehikel für informatische Aktivitäten behandelt wurde: Der Autor fragt die Schüler, wie eine nach den Punkten des Biberbewerbs an der Schule absteigend sortierte Liste mit Schülernamen und Klasse wieder schnell „durchmischt“ werden kann, um die Sortierung nach Klasse und Punkten als Übungsaufgabe erneut stellen zu können.     Abbildung 1: Von der Ordnung zur Unordnung                                                          1 Alpen-Adria Gymnasium Völkermarkt, Pestalozzistraße 1, A-9100 Völkermarkt, peter.micheuz@aon.at    cba doi:10.18420/infos2019-28Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 275 16 Vorname1 Nachname1 und Vorname2 Nachname2 Ich habe nicht schlecht gestaunt, als mir gleich mehrere Schüler, ohne lange überlegt zu haben, folgende Lösung vorschlugen: „Eine leere angrenzende Spalte mit Zufallszahlen befüllen,  die Daten nach diesen Zufallszahlen sortieren und anschließend die Spalte mit den Zufallszahlen wieder löschen“. Auf meine Frage, wie sie so schnell draufgekommen sind, gab es eine überraschende Antwort: „Sie haben es uns vor einiger Zeit einmal so nebenbei gezeigt …“. Auf meine weitere Frage, warum die Ent-wickler von Microsoft nicht an einen „Mischbutton“ neben den Sortieroptionen in den komplexen Menübändern gedacht ha-ben, gab es noch keine schlüssigen Antwor-ten. Diese gab es (auch noch) nicht auf die Fragen, wie im Computer Pseudozufallszah-len erzeugt werden, und wie die Inhalte der Zellen so angeordnet bzw. zielgerichtet vertauscht werden, dass die Werte in den Zellen aufoder absteigend sortiert sind. Im Fokus der weiteren Überlegungen liegt in diesem Beitrag, bis auf die Erwähnung des  Mergesort, nicht das zielgerichtete Sortieren, sondern die zufallsgesteuerte Produktion von Unordnung.   2 Lottozahlen Wenn von Zufall und unsortierten Zahlen die Rede ist, kommen einem fast unweigerlich Lottozahlen in den Sinn. Die offene Aufgabe, wie einem Computer beizubringen ist, Lot-tozahlen zu erzeugen, wurde im Informatikunterricht mit Sicherheit schon tausende Male gestellt und mit verschiedenen Werkzeugen, Entwicklungsumgebungen, Bibliotheken, un-terschiedlichen Algorithmen und Datenstrukturen, und mehreren Programmierparadig-men sowie auf diversen Abstraktionsebenen behandelt und realisiert. Eine auch nur annä-hernd erschöpfende Behandlung all dieser Zugänge ist an dieser Stelle nicht möglich, aber ein Anknüpfungspunkt und eine Analogie zum Verfahren in der Einleitung soll näher be-schrieben werden. Warum nicht die Lottozahlen nach der „Katalysatormethode“ (tempo-rär angelegtes Feld mit Zufallszahlen, siehe Einleitung) als Mischung von sechs unter-schiedlichen Zahlen in einem bestimmten Zahlenbereich (in Deutschland 1-49, in Öster-reich 1-45) erzeugen?   Abb. 2 zeigt die spaltenmäßige Anordnung (Spalte A: Lottozahlen, Spalte B: Zufallszah-len) des „einfachen“ Lottozahlengenerators, der mittels der Neuberechnungstaste F9, dem Selektieren der beiden Spalten und der richtigen Anwendung des Sortierassistenten die Lottozahlen in den Zellen B2:B7 anzeigt. Auf die Möglichkeit der Automatisierung dieser wenigen linearen Handlungsschritte in Form eines „Excel-Makros“ soll an dieser Stelle nicht eingegangen werden, obschon „Makroprogrammierung“ eine empfehlenswerte  276 Peter Micheuz Der Kurztitel des Beitrags 17 Möglichkeit darstellt, einen Grundpfeiler der Informatik, nämlich die Automatisierung, schrittweise erfahrbar zu machen.    Abbildung 2: Varianten von Lottozahlengeneratoren in MS-Excel Einen vertieften und lohnenden Ausblick auf den „Zauber“ [FL15] funktionaler Modellie-rung und deklarativer Programmierung, die allein mit der zielgerichteten und kompetenten Anwendung der Bibliotheksfunktionen von MS-Excel (oder ähnlicher Tabellenkalkulati-onssoftware) möglich sind, bieten die beiden anderen Varianten der Lottozahlenerzeugung (siehe Abb. 2 rechts) mittels der verketteten Funktionen VERGLEICH, KKLEINSTE, ZEILE sowie der Verwendung der algorithmisch interessantent Funktion RANG.   3 Mischen in der Praxis – „Real World“-Anwendungen  Bevor wir uns mit den für das Mischen notwendigen Elementaralgorithmen und Da-ten(strukturen) beschäftigen, sei hier eine weitere möglicherweise unter Informatikleh-renden wenig bekannte und daher möglicherweise exotische – (My)SQL-Anweisung zur Produktion von sechs Lottozahlen angeführt:  select zahlen limit 6   from lottozahlen order by rand() Die Beschreibung dieses Mischbefehls in einem MySQL-Tutorial im Web [MY19] in Abb. 3 führt uns wieder zum Konzept und die Methode der Sortierung nach Zufallswer-ten zurück und demystifiziert diesen scheinbar widersprüchlichen Befehl „order by rand()“. Diese Widersprüchlichkeit gibt es vordergründig auch beim Mergesort („Sortie-ren durch Verschmelzen/Mischen“).  Mischen possible 277 18 Vorname1 Nachname1 und Vorname2 Nachname2  Abbildung 3: Beschreibung der ORDER BY RAND()Anweisung im Web An dieser Stelle darf nicht verschwiegen werden, dass dieser SQL-Befehl ein bestimmtes Maß an wohlvorbereitem „Umfeldwissen“ in Form von konkreten Werkzeugkenntnissen voraussetzt, wenn er sinnvoll z.B. in einem zeitgemäßen Web-User-Interface eingesetzt werden soll. Das V (Verarbeitung) im EVA-Prinzip ist mit dem obigen SQL-Befehl der leichtere Teil der Übung, weil er als Blackbox verwendet wird und die Realisierung des zugrundeliegenden Misch-Algorithmus bisher noch kein Thema war. Sowohl die Eingabe der Daten als auch die Ausgabe der Daten setzen viel Unterrichtsarbeit voraus, wenn von den Schülern aktive Entwickerleistungen in Form von Modellierung, Programmierung und dem Gestalten von bereits einfachen Benutzerschnittstellen eingefordert werden.     Anhand von drei verschiedenen Zufallsfragen, die aus einem größeren Fragepool auf ei-nem Webportal nach jedem Seitenaufruf neu generiert werden, soll dies illustriert werden.  Für diese Ausgabe ist das folgende „Codeschnipsel“ auf einem Webserver als „Mischung“ von HTML, PHP und (My)SQL verantwortlich:   mysql_select_db("unterstufe");  $abfrage=mysql_query("select frage                        from basisfragen                        order by rand()");  for ($i=0;$i<3;$i++) {      $row = mysql_fetch_row($abfrage);      echo("<center><b><img src='pfeil.gif'>".$row[0]."     </b></center>");   } Auf der gleichen Portalseite [SI19] werden nicht nur Texte durchmischt, sondern nach jedem Seitenaufruf drei verschiedene Hardwarebausteine angezeigt (siehe Abb. 4). Diese Anzeige wird aus didaktischen Gründen unter Ausnutzung einer der vielen Bibliotheks-funktionen und der Datenstruktur ARRAY der serverseitigen und weitverbreiteten Pro-grammiersprache PHP realisiert.   278 Peter Micheuz Der Kurztitel des Beitrags 19   Abbildung 4: Zufällige Anordnung von Bildern       Im folgenden kurzen, aber gehaltvollen und leistungsfähigen serverseitigen HTML-PHP-Skript ist der SHUFFLE-Befehl als PHP-Bibliotheksfunktion nicht zu übersehen: echo("<p><h2>... viele Hardwarebasteine</h2>");            $zz = range(0,18);    shuffle($zz);    $bild1="bilder/".$zz[0].".gif";  $bild2="bilder/".$zz[1].".gif";  $bild3="bilder/".$zz[2].".gif";  echo("<p><center><img src='$bild1'>                  <img src='$bild2'>                   <img src='$bild3'>       </center></p>"); Puristen und Dogmatiker unter den Informatikern werden einwenden, dass Skriptsprachen wie PHP, mit ihrer schlampigen Art mit Datentypen umzugehen, zu einem schlechten Pro-grammierstil verleiten. Ich lasse das unkommentiert stehen. Der geneigte Leser möge sich dazu selbst ein Urteil bilden, sich an Expertenforen wie z.B. quora.com beteiligen und daraus die Konsequenzen für den (eigenen) Informatikunterricht ableiten.   Die Anweisung $zz = range(0,18) legt ein Array $zz[0]=0, $zz[1]=1, … $zz[18]=18 an, der Befehl shuffle($zz) durchmischt zufällig die Inhalte der Felder, so einfach ist das! Die hier nicht offensichtlichen Tücken des Skripts liegen weniger darin, die Wirkung des Shuffle-Befehls zu verstehen. Probleme bereiten da schon eher die kunstvolle Anwendung („Maskierung“) der Anführungszeichen und das Konzept von externen, auf dem Server im Ordner „bilder“ gespeicherten Hardware-Bildern im GIF-Format (0.gif, 1.gif, …18.gif) sowie das Konzept ihrer internen Anbindung an das Array $zz.  Nach diesem kurzen Ausflug in die Webprogrammierung inklusive werkzeugabhängiger Zugänge zum Mischen von Zahlen, Text und Bildern mit der „Katalysatormethode“ (siehe oben), der (My)SQL-Anweisung „order by rand()“ und dem Shuffle-Befehl aus der PHP-Funktionsbibliothek, verlassen wir die Komfortzone der beschreibenden Methode und be-treten die prozedurale Welt elementarer Algorithmen.  Mischen possible 279 20 Vorname1 Nachname1 und Vorname2 Nachname2 4 Mischen als zufälliges Tauschen von Variableninhalten  Dieser Beitrag darf auch als späte und logische Fortsetzung eines INFOS-Beitrages „Ein kleiner Schritt für LehrerInnen, ein großer Schritt für SchülerInnen“ aus dem Jahr 2005 gesehen werden [MI05], in dem es im 6. Kapitel „Ringtausch und Umfüllaufgabe“ hieß: „In diesem Kapitel ist nur angedeutet worden, welch reichhaltiges, didaktisch wertvolles Potential bereits in (einfachen) Aufgabenstellungen wie etwa dem Tausch der Inhalte zweier Variablen steckt. Die Legitimation, den "Platztausch" im Informatikunterricht zu thematisieren, ist aber auch durch unzählige lebensweltliche Anwendungen und die Tat-sache gegeben, dass er das Fundament vieler Algorithmen darstellt, in denen es um Mischsowie Sortierverfahren geht.“  Beginnen wir mit einer konkreten Programmieraufgabe, diesmal in Javascript, einer Spra-che, die derzeit einen wahrhaftigen Boom erlebt und an der man nicht vorbeikommt, wenn es um die Entwicklung von Frontend-Anwendungen im Web geht. Unsere Aufgabenstel-lung lautet so: „Eine bestimmte Anzahl an Schülerbildern sind auf einer Schulwebsite in tabellarischer Form nach jedem Seitenaufruf durch-mischt anzuordnen.“ Anmerkung: Die vier Menschen links existieren in Wirklichkeit nicht. Sie sind der auf Artificial Intelli-gence und Deep Learning-Algorithmen beruhenden Website „thispersondoesnotexist.com“ entnommen.  Im Unterschied zur serverbasierten Skriptsprache PHP verfügt die Programmiersprache Javascript zwar über eine Methode „sort“ der Objektklasse „array“, aber lei-der (oder aus didaktischer Sicht Gottseidank) keine Me-thode „shuffle“, die es mit einer Anweisung gestatten würde, die Bildnummern zu durchmischen. Es wird an dieser Stelle auch von der Methode des „Katalysatorfelds“ (Sortierung eines temporären Zufallsfeldes) Abstand genommen. Der Leser ist eingeladen auszuprobieren, ob dieser Workaround einfach zu realisieren ist. Stattdessen bewegen wir uns (notgedrungen) auf die Ebene des „Dreiecksbzw. Ringtau-sches“ und realisieren den Mischvorgang durch wiederholtes Tauschen der Array-Inhalte. Wenn es in einer Entwicklungsumgebung keine (Bibliotheks)Funktion oder keine entspre-chende Methode gibt, steht es jedem frei, sich im algorithmischen Denken und in der Im-plementierung derselben zu versuchen. Das Kernstück des folgenden HTML-Files, das vollständig in Javascript codiert und lauffähig ist, wenn die Fotos im gleichen Ordner wie das HTML-Skript zur Verfügung stehen, ist die Funktion „shuffle“ mit dem Array „fotos“. Dieses dient sowohl als Eingabeparameter als auch als Ausgabefeld.     <script> function shuffle(fotos) {     var laenge = fotos.length, temp, index;  280 Peter Micheuz Der Kurztitel des Beitrags 21     while (laenge > 0) {         index = Math.floor(Math.random() * laenge);         laenge = laenge 1;         temp = fotos[laenge];         fotos[laenge] = fotos[index];         fotos[index] = temp;     }     return fotos; }  var bilder = new Array()  bilder[0] = 'name_a.jpg' bilder[1] = 'name_b.jpg' bilder[2] = 'name_c.jpg' bilder[3] = 'name_d.jpg' shuffle(bilder); var p = bilder.length; for (var i = 0; i <= 3; i++)   { var bildnummer = i;             document.write('<img src="'+bilder[bildnummer]);+'">');     if (i % 2 == 1) {         document.write('<br>');      }               } </script>  Der in der Funktion „SHUFFLE“ implementierte Algorithmus ist optimal mit einer Kom-plexität von O(n) und wird auch als Fisher-Yates-Shuffle bezeichnet.   Abbildung 5: Pseudocode, Quelle: https://de.wikipedia.org/wiki/Zufällige_Permutation Ronald Aylmer Fisher (1890-1962) und Frank Yates (1902-1994) waren bedeutende Sta-tistiker des 20. Jahrhunderts. Dass das optimale Mischen nach ihnen benannt ist, ist kein Zufall. Zufallsanordnungen, mathematisch ausgedrückt zufällige Permutationen, werden unter anderem bei der Analyse von Sortierverfahren, in der Kryptographie, bei  randomi-sierten Algorithmen und vor allem bei Simulationen benötigt.      Mischen possible 281 22 Vorname1 Nachname1 und Vorname2 Nachname2 Übrigens eignet sich der Fisher-Yates-Algorithmus auch vorzüglich für die (optimale) Er-zeugung von Lottozahlen, wenn diese mit der Datenstruktur Array realisiert wird. Dies passiert weltweit in tausenden Lottoannahmestellen beim Kauf von computergenerierten Zufallstipps. 5 Simulationen und weitere Unterrichtsbeispiele  Interessante Anmerkungen zum Bildungswert der Informatik finden sich bei Rechenberg [RE94], der im Kapitel „Informatik und Kultur“ vier wesentliche Bereiche der Informatik herausstreicht. Erstens das algorithmische Denken, das beim Verstehen von Konzepten jeder Art hilft [vgl. KN74], aber „keinem auf Anhieb gelingt, und mühsam mit großer Geduld erworben werden muß“, zweitens das Studium und die Meisterung komplexer Zu-sammenhänge, und drittens, dass der Computer „ein so vielseitiges Instrument zur Si-mulation und zum Ausführen von Gedankenexperimenten ist“. Der vierte Bildungs-wert der Informatik besteht für Rechenberg darin, zu zeigen, was man mit Computern vor allem nicht automatisieren kann. Damit hat er nicht zuletzt die aktuelle Diskussion um die (Auswirkungen der) Artificial Intelligence bereits vor 25 Jahren vorausgesehen.        Im Folgenden werden Aufgaben und Anregungen zum Thema Mischen im Zusammen-hang mit einfachen Simulationen und unterrichtspraktischen Anregungen gestellt. Sitzanordnungen und BOGO-Sort Die Antwort auf die Frage, wie viele Sitzanordnungen es in einer Klasse mit z.B. 25 Stüh-len gibt, verblüfft nicht nur die SchülerInnen, die sich das erste Mal mit dieser Frage konfrontiert erfahrungsgemäß extrem verschätzen.    Abbildung 6: Permutation von 25 Buchstaben  Die Zahl 25! = 15.511.210.043.330.985.984.000.000 sprengt das menschliche Vorstel-lungsvermögen und sollte einen ambitionierten Klassenlehrer davor bewahren, in einem Schuljahr alle Mischvarianten physisch ausprobieren zu wollen, und wohl auch den Infor-matiklehrer, alle Permutationen digital anzeigen, geschweige denn ausdrucken zu wollen. Sehr wohl können die Computer im Informatikraum damit beschäftigt werden, alle(!) Buchstaben-Mischungen zu produzieren und darauf zu warten, bis der Buchstabensalat wieder sortiert ist. Dieses Sortierverfahren solange zufällig mischen, bis alle Objekte sortiert sind – führt laut Wikipedia (https://de.wikipedia.org/wiki/Bogosort) die Bezeich-nungen Bogosort, Alexsort, Monkeysort oder Stupidsort. Im krassen Unterschied dazu sei  282 Peter Micheuz Der Kurztitel des Beitrags 23 hier das hocheffiziente Mergesort (Sortieren nach dem Prinzip Teile und Herrsche mit anschließendem Verschmelzen/Mischen) angeführt, zu dem es mit Stand 10.2.2019 über eine Million Google-Treffer mit unzähligen guten Beschreibungen und Erklärvideos gibt.    Magisches Quadrat und eine Biber-Aufgabe Fachdidaktisch und methodisch interessant im Zusammenhang mit dem Mischen ist auch die Suche nach dem „Magischen Quadrat“ in allen Varianten (siehe Abb. 7).    Abbildung 7: Magisches Quadrat und Biber Aufgabe Die Abbildung links zeigt eine von unzähligen Implementationen des Magischen Quadrats (hier in Excel). Die Benutzerschnittstelle mit vier Buttons und einigen berechneten Fel-dern weist auf eine interessanten didaktischen Zugang zur Lösung dieser Aufgabe hin. Es handelt sich hier um eine Mischform der von Excel bereitgestellten Funktionen (verdeckte Algorithmen:  Summen, Minimum und Maximum) und in VBA (Visual Basic for Appli-cations) codierten Tauschund Mischalgorithmen, die im Hintergrund arbeiten.   Biber-Aufgaben bieten vielfältige Anknüpfungspunkte für informatisches Denken und Handeln, so auch exemplarisch die in Abb. 6 dargestellte originelle „Sortieraufgabe“. In der Grundschule sollten die Balken/Stäbe haptisch (aus)sortiert werden, in der Sekundar-stufe I bietet sich funktionale Modellierung an, und in der Sekundarstufe II ist eine Simu-lation inklusive Programmierung und Codierung empfehlenswert. Was hat das mit dem Mischen zu tun? Sehr viel. Warum nicht computergestützte Experi-mente automatisiert durchführen, die den Zusammenhang zwischen der Anzahl von Dach-hölzern und allen(!) 11! = 39.916.800 möglichen Anordungen herstellen?          6 Schlussanmerkungen Dem aufmerksamen Leser wird sicher aufgefallen sein, dass bisher ein weitverbreiteter lebensweltlicher Aspekt des Mischens ausgespart wurde. Es geht um die Kultur der Kar-tenspiele, bei denen der Zufall und das Karten mischen eine erhebliche Rolle spielen. Bei dieser haptischen Erfahrung ist die wohl weitverbreitetste Methode jene des „Packelns“  Mischen possible 283 24 Vorname1 Nachname1 und Vorname2 Nachname2 (enspricht dem mehrmaligen Abheben), bei dem mit beiden Händen öfters jeweils zwei nach Gefühl unterschiedliche Stapel vertauscht werden. Dabei soll es schon vorgekom-men, dass nicht ordentlich gemischt und getrickst wird. In diesem Zusammenhang sei auf eine ausführliche Quelle für Kartentricks mit informatischem Background „Die Magie der Informatik: Kartentricks“ [CS19] verwiesen, in der u.a. auch der Trick „Perfektes Mi-schen“ vorgestellt wird.      Kartenspielen und haptisches Kartenmischen sollten im Unterricht der Primarstufe einen Fixplatz haben. Später in der Sekundarstufe I kann die Haptik z.B. in einer Tabellenkal-kulation als Teil einer Bedienerschulung (Verschieben, Kopieren, siehe Abb. 8) simuliert  Abbildung 8: Simulation des Abhebens und dabei versucht werden, mit möglichst wenig Mischungsvorgängen eine gute Durch-mischung zu erreichen. Die programmiertechnische Realisierung und die Diskussion, was „gut durchmischt“ heißt, kann in der Sekundarstufe II weitergeführt werden.  Literaturverzeichnis [CS19] Die Magie der Informatik: Kartentricks im Rahmen des CS4FN-Projekts (Computer Sci-ence for Fun), online unter: http://www.cs4fn.org/magie,  Stand 10.2.2019 [FL15] Fleckenstein J. u.a.: Excel – Das Zauberbuch. Markt&Technik, 2015. [KN74] Knuth D.E: Computer Science and its Relation to Mathematics. American Mathematical Monthly 1974. [MI05] Micheuz P.: Ein kleiner Schritt für LehrerInnen, ein großer Schritt für Schüler. In. Stef-fen F.: Unterrichtskonzepte für informatische Bildung, INFOS-Tagungsband, 11. GI-Fachtagung Informatik und Schule, 28.-30. September 2005. [MY19] MySQL-Tutorial: http://www.mysqltutorial.org/select-random-records-database-table.aspx, Stand: 10.2.2019 [RE94] Rechenberg P.: Was ist Informatik? Hanser-Verlag, 2. Auflage, 1994. [SI19] Portal Schulinformatik: https://www.gym1.at/schulinformatik/unterstufe,  Stand 10.2.2019   284 Peter MicheuzcbaArno Pasternak et al. (Hrsg.): INFOS 2019 Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Entwicklung und Reﬂexion einer Unterrichtssequenz zumMaschinellen Lernen als Aspekt von Data Science in derSekundarstufe IISimone Opel, Michael Schlichtig, Carsten Schulte1, Rolf Biehler, Daniel Frischemeier,Susanne Podworny, Thomas Wassong2Abstract:Die Bereiche „Data Science“ und „Big Data“ sowie ihre technischen, ethischen undgesellschaftlichen Auswirkungen werden zunehmend nicht nur in der Wissenschaft, sondern auchin diversen Medien diskutiert und somit verstärkt auch zu einem wichtigen Thema für alle. Umden Schülerinnen und Schülern der Sekundarstufe II einen theoretisch und fachwissenschaftlichfundierten Einstieg in diesen Themenbereich zu ermöglichen, wurde ein erster Entwurf einesinterdisziplinären Curriculums entwickelt, das neben fachlichen Aspekten von Data Science einenFokus auf sich hieraus ergebende gesellschaftliche Fragestellungen legt. Es werden neben derKonzeption des Kurses die bisherigen Erfahrungen aus der Durchführung – insbesondere in Hinsichtder darin enthaltenen Unterrichtseinheit zum Maschinellen Lernen berichtet, sowie die sich hierausergebenden Implikationen für die Weiterentwicklung dargestellt und diskutiert.Keywords:Data Science; Maschinelles Lernen; KI; Künstliche Neuronale Netze; Entscheidungsbäu-me; Big Data; Curriculum1 EinleitungData Sciencesowie Fragen zu Maschinellem Lernen (ML) und Künstlicher Intelligenz (KI)sind inzwischen in großem Maß in verschiedene Systeme implementiert und werden in allenBereichen intensiv diskutiert. Auch die gesellschaftliche Diskussion über Funktion, Nutzenund Gefahren dieser Systeme nimmt inzwischen viel Raum ein. Es erscheint uns wichtig,dass diese Fragestellungen in den Unterricht integriert werden. Daher entwickelten wir aufBasis curricularer Ideen aus der Informatik und Mathematik einen ersten Entwurf einesCurriculums für die Sekundarstufe II und führten dies in ein konkretes Unterrichtskonzeptüber, das im Rahmen des durch die Deutsche Telekom Stiftung ermöglichten Projekts„ProDaBi3“mit einem Oberstufenkurs erprobt wird. Im Rahmen dieses Artikels stellen wirneben diesem Kurs auch erste Erfahrungen der Umsetzung – insbesondere der Einheitenaus KI und ML – sowie die hinter dem Entwicklungsprozess liegenden Ideen vor.1Universität Paderborn, Didaktik der Informatik, Fürstenallee 11, 33102 Paderborn, vorname.nachname@uni-paderborn.de2Universität Paderborn, Didaktik der Mathematik, Warburger Str. 100, 33098 Paderborn, nachname@math.uni-paderborn.de3ProDaBi – Projekt Data Science und Big Data in der Schule, Projektwebseite: https://www.prodabi.de cba doi:10.18420/infos2019-29Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 2852 Simone Opel, Michael Schlichtig, Carsten Schulte2 Data Science und Maschinelles Lernen – Aspekte für die BildungData Science, ML und der Umgang mit Big Data geht weit über technische und wissenschaft-liche Aspekte unterschiedlicher Disziplinen hinaus und trägt auch ethische, gesellschaftlicheund soziale Auswirkungen in sich – daher werden hier nicht umsonst sehr verschiedeneKontexte diskutiert. Um möglichst viele Aspekte zu verstehen und ein gemeinsames Ver-ständnis vonData Sciencezu entwickeln, wurden im Rahmen eines interdisziplinären,internationalen Symposiums4[Pa18] diese Aspekte diskutiert und zwei für uns curricularrelevante Bereiche wurden auf Basis der dort geführten Diskussionen identiﬁziert: Für dieInformatikdidaktiksind das neben der Entwicklung von Computational Thinking [TD16]insbesondere die Auswirkungen verschiedener Bereiche der Mensch-Maschine-Interaktionauf die Gesellschaft – und damit auch unser Umgang mit Big Data sowie den Methoden undAuswirkungen von Data Science [SBS18]. Im Bereich derStatistikdidaktiksollten die fun-damentalen Ideen der Statistik um verschiedene Aspekte derstatistischen Kompetenz[Ri16]erweitert werden. Daher stehen diese Ideen und Aspekte im Zentrum der Entwicklungen.2.1 Daten und Datenprozesse als strukturgebende KomponentenIm Gegensatz zur praktischen Informatik stehen im Bereich derData Sciencenicht dieEntwicklung von algorithmischen Strukturen sowie deren (algorithmische) Modellierungund Implementierung im Vordergrund, sondern der Umgang mitDaten. Das heißt, dieKomplexität der Fragestellungen wird nicht nur durch die eingesetzten Algorithmenbestimmt, sondern wird in hohem Maße durch die Daten und die in ihnen implizit undexplizit enthaltenen Informationen beschrieben. Nach der Deﬁnition der EmpfehlungenGI zu den Bildungsstandards in der Sekundarstufe sind „Daten eine Darstellung vonInformation in formalisierter Art [...]. Daten werden wieder zu Information, wenn siein einem Bedeutungskontext interpretiert werden“ ([Rö16], S. 9). Ein Informatiksystemverarbeitet somit nur Daten, die darin enthaltene Information wird durch Interpretationdurch den Menschen gewonnen. Daten sind also „nicht nur Zahlen, sie sind Zahlenmit einem Kontext“ [CM97]. Es stellt sich die Frage, wie Schülerinnen und SchülerDatenkompetenzerwerben können, die Voraussetzung für einen kompetenten Umgang mitfehlerbehafteten oder unterschiedlich strukturierten Daten innerhalb eines Kontextes ist.Ridsdale et al. deﬁnierenDatenkompetenzals die prozessorientierte „Fähigkeit, Datenkritisch zu sammeln, zu analysieren, zu bewerten und anzuwenden“ ([Ri15], S. 3). Damitliegt der Schwerpunkt der Handlungen der Lernenden im Umgang mit verschiedenenDaten, so dass „Prozessmodelle zur Datenanalyse“ einen sinnvollen Ausgangspunkt zurPlanung von unterrichtlichem Handeln bieten. Der Deﬁnition von Ridsdale et al. ähneltdas CRISP-DM-Modell5[Ch00], das ein vollständiges Verfahren zum Umgang mit Daten4„Perspectives for data science education at school level – Educational contributions from statistics, computerscience and sociocultural studies“;http://go.upb.de/SymposiumProDaBi5CRISP-DM =Cross-Industry StandardProcess forData Mining, Phasen: Verstehen der Fragestellung –Verstehen der Daten – Aufbereitung der Daten – Modellbildung – Bewertung des Modells – Einsatz286 Simone Opel et al.Entwicklung einer Unterrichtssequenz zum Maschinellen Lernen 3 Abb. 1: Das CRISP-DM-Modell als Standardprozessmodell für Data Miningbeschreibt (vgl. Abb.1). Dieses Prozessmodell erscheint uns einen sinnvollen Rahmen zurErarbeitung eines Curriculums und entsprechenden Unterrichtsmaterials zu bieten, so dassentschieden wurde, das CRISP-DM-Modell als Basis weiterer Entwicklungen zu verwenden,da dieses Modell den Datenprozess umfassender darstellt als zum Beispiel der ebenfallshäuﬁg verwendete PPDAC-Zyklus6.2.2 Relevanz sozialer und gesellschaftlicher AspekteGesellschaftliche und soziale Implikationen besitzen eine große Relevanz im Bereich derData Science(vgl. Kapitel1). Diskussionen über gesellschaftliche Aspekte im Informatik-unterricht werden – wenn überhaupt – meist nur entkoppelt von technologischen Fragender Unterrichtsinhalte geführt und sind nicht fest in die Arbeit in Softwareprojekten undLernaufgaben integriert. Auch eines der wenigen Data Science-Curricula und Kompe-tenzmodell für das schulische Umfeld [GR] stellt die verschiedenen Aspekte von DataScience zwar umfassend, aber im Wesentlichen aus fachwissenschaftlicher Sicht dar. Daherstellt die Frage, wie diese Aspekte integraler Bestandteil des Unterrichtsmaterials und desCurriculums werden können, eine wichtige, schrittweise zu lösende Herausforderung dar.2.3 Auf dem Weg zum Data Science-Kurs – Didaktische AnsätzeEine wichtige Erkenntnis der Vorarbeiten war, dass – mehr als in der praktischen Informatik– eine gemeinsame Sicht auf Daten sowie die Entwicklung eines gemeinsamen Grundver-ständnisses aller Begri e und Verfahrennotwendig ist (vgl. [Tv09]) – ein auch während derersten Durchführung des Projektkurses nicht abgeschlossener Schritt. Weiterhin wurdenschon existierende Materialien und Curricula auf ihre Einsatzmöglichkeit hin evaluiert.Allerdings sind sämtliche, meist hochschulische Curricula gut strukturiert, aber nur auftechnologische Aspekte fokussiert. Daher ergibt sich die Notwendigkeit, diese Materialienselbst zu entwickeln und die relevanten Inhalte aus den Beiträgen des in Kap.1erwähntenSymposiums zu generieren. Das Au nden relevanter Information aus Data Mining undStatistik auf der einen Seite, sowie die notwendigen Kompetenzen aus dem Bereich des ML6PPDAC =Problem –Plan –Daten –Analyse – K(C)onclusionEine Unterrichtssequenz zum Maschinellen Lernen als Aspekt von Data Science 2874 Simone Opel, Michael Schlichtig, Carsten Schultesowie dem Design Künstlicher Neuronaler Netzwerke (KNN) auf der anderen Seite, ist dankder breiten Basis aller analysierten Unterlagen relativ einfach. Schwieriger gestaltet sichdas Einbinden der gesellschaftlichen, sozialen und interdisziplinären Fragestellungen (vgl.Abschnitt2.2). Daher entschieden wir uns, in diesem Projekt den Ansatz des „Design-BasedResearch“ (DBR) [Co03] zu verfolgen: Ausgehend von einem ersten Entwurf eines DataScience-Curriculums wird ein hierauf basierender Kurs entwickelt, durchgeführt und evalu-iert. Aus den Erkenntnissen der Durchführung wird der Kurs und damit auch das anfangsnoch sehr skizzenhafte Curriculum in mehreren Zyklen weiterentwickelt. Die im folgendenbeschriebene Version des Data Science-Kurses wurde unter Verwendung dieses Ansatzesentwickelt und wird als sog. „Projektkurs“ in Kooperation mit einem Gymnasium vor Ortwährend des SJ 2018/19 erprobt und evaluiert.3 Der Data Science-KursDer so entstandene Kurs ist modular angelegt, wobei die beiden Bereiche „Data Miningund Statistik“ sowie „Künstliche Intelligenz und Maschinelles Lernen“ klar abgegrenzt sindund dem CRISP-DM-Modell (vgl. Abschnitt2.1) folgend aufeinander aufbauend gestaltetwerden. Zum Erwerben von Kompetenz, zumindest einfache Data Science Projekte selbstdurchzuführen, wird als drittes Modul ein Projektmodul entwickelt und durchgeführt, sodass der Kurs in seiner ersten Version aus drei Modulen besteht:1.Von Daten zu Informationen:Dieses Modul ist eine Einführung in Data Science undden Umgang mit Big Data und zielt darauf ab, das statistische Denken zu verbessern undDatenkompetenz zu entwickeln. Es werden dabei statistische Methoden auf Daten zurInformationsgewinnung angewendet, die Erkenntnisse reﬂektiert und ihre Aussagekraftkriterial diskutiert.2.Künstliche Intelligenz und Maschinelles Lernen:Im Rahmen dieses Moduls lernen dieSchülerinnen und Schüler zwei unterschiedliche Methoden kennen, Erkenntnisse aus Datenzu gewinnen, indem sie exemplarisch Entscheidungsbäume als Vertreter einer SymbolischenKI und KNN (hier Back-Probagation-Netze) als typischen Vertreter überwachten Lernenskennenlernen, analysieren und auf eigene Beispiele anwenden. Ziel ist, nicht nur dieinformatischen Aspekte von KI kennenzulernen, sondern auch ihre Erkenntnisse aufvorhandene Systeme anzuwenden und deren Grenzen, Chancen und Risiken zu diskutieren.3.Datenprojekte:Im Rahmen der Durchführung von Datenprojekten können die Schüle-rinnen und Schüler ihre Kompetenzen einsetzen, um reale Fragestellungen zu bearbeiten.Dabei werden sie motiviert, ihr Vorgehen im Sinne des CRISP-DM-Modells zu planen,um so zu für sie optimalen Ergebnissen kommen zu können und diese auch am Ende zupräsentieren und deren gesellschaftlichen Implikationen diskutieren zu können.Es wurde bei der Entwicklung und Umsetzung immer auf eine enge Verﬂechtung derfachlichen Inhalte mit gesellschaftlichen und sozialen Aspekten geachtet, um eine mehrdi-mensionale und interdisziplinäre Sicht auf alle Aspekte der Themen zu erhalten.288 Simone Opel et al.Entwicklung einer Unterrichtssequenz zum Maschinellen Lernen 53.1 Modul 1: Von Daten zu Informationen – DatendetektiveFolgend dem in Abschnitt2.1beschriebenen CRISP-DM-Modell ist für ein Vorhaben ausdem Bereich Data Science zunächst wichtig, die Fragestellung zu verstehen („BusinessUnderstanding“), entweder sinnvolle Daten zu erheben oder schon gesammelte Daten zuverstehen („Data Understanding“), und diese anschließend zu analysieren und aufzubereiten(„Data Preparation“). Inspiriert von diesem Zyklus wird in diesem Modul (insg. 7 Wo.) imersten Baustein zunächst die Verwendung von großen und o en verfügbaren Datenmengendiskutiert und anschließend an Hand von „Lärmdaten“ (vgl. Abb.2) erprobt, derartigeDaten selbst zu analysieren, unter Verwendung von Jupyter Notebooks7aufzubereiten undzu visualisieren. Im zweiten Baustein führen die Schülerinnen und Schüler explorativeDatenanalysen unter Verwendung des multivariaten JIM-Datensatzes mit Hilfe des Online-Tools CODAP8durch und präsentieren und diskutieren ihre Erkenntnisse. Abb. 2: Von den Schülerinnen und Schülern unter Verwendung von Python aufgearbeitete undverschiedenen Orten zugeordnete Lärmproﬁle3.2 Modul 2: Künstliche Intelligenz und Maschinelles LernenBetrachtet man den CRISP-DM-Zyklus weiter, so folgt als nächster Schritt das Entwickelneines Modells („Modeling“). Hier erkennen die Lernenden die Unterschiede zwischenklassischen algorithmischen Problemlösungsverfahren und datengetriebenen Prozessab-läufen am Beispiel des ML (vgl. Abb.3) und können die damit verbundene Rolle desMenschen innerhalb dieser Mensch-Maschine-Interaktion diskutieren und reﬂektieren(insg. 7 Wo.). Aus der Menge von Verfahren wurden im Vorfeld wichtige exemplarischausgewählt und in zwei Bausteinen mit den Schülerinnen und Schülern bearbeitet. Imersten Baustein erwerben die Schülerinnen und Schüler unter Verwendung des „SweetLearning Computers“ [Cu16b], einer Unplugged-Aktivität, ein grundsätzliches Verständ-nis von ML und diskutieren auf Basis dieses so erarbeiteten Wissens über aktuelle undzukünftige Chancen und Risiken dieser Technologien sowie ihren vielfältigen Einsatz. Dieswird vertieft durch die Einführung vonEntscheidungsbäumen, die in relativ kurzer Zeitverstehbar sind und bei denen die wesentlichen Verfahren und Parameter zumindest imGrundsatz für die Lernenden transparent und erkennbar sind. Als Werkzeug wird hierwieder CODAP mit einem zusätzlichen Plug-In zum Darstellen von Entscheidungsbäumen7Jupyter Notebook = interaktive, browserbasierte Umgebung zur Programmierung;https://jupyter.org/8CODAP = Didaktisches Onlinetool zur Datenanalyse;https://codap.concord.orgEine Unterrichtssequenz zum Maschinellen Lernen als Aspekt von Data Science 2896 Simone Opel, Michael Schlichtig, Carsten Schulte Abb. 3: Im Projektkurs erarbeitete Graﬁk zum Vorgehen zur Erstellung von KI-Modellen mittels MLverwendet, das keine explizite Programmierung erfordert, sondern einen WYSIWYG-Editorbereitstellt. Allerdings stößt dieses Tool sehr bald an seine Grenzen. Insbesondere durchdas manuelle Aufbauen des Entscheidungsbaumes kann kein tieferes Verständnis darübererworben werden, wie Entscheidungsbäume algorithmisch erzeugt und zum automatischenKlassiﬁzieren eingesetzt werden können. Daher werden im Anschluss mit Jupyter Notebookeigene Bäume zum schon bekannten JIM-Datensatz berechnet, wobei die Möglichkeitbesteht, die Passung des entwickelten Baumes durch die Hinzunahme von Validierungs-daten („Evaluation“) zu überprüfen und anschließend zu optimieren. Während beim reinalgorithmischen Problemlösen die Entwicklung eines stabilen und e zienten Algorithmusim Mittelpunkt stünde, ist hier die passende Wahl von Daten, Parametern und Optimie-rungsverfahren die größte Herausforderung für die Schülerinnen und Schüler, während diealgorithmische Umsetzung der Bäume an sich durch die passende Wahl von Bibliothekenkeine größere Herausforderung darstellt. Im folgenden zweiten Baustein werden zunächst(in Analogie zur Funktionsweise des Gehirns) durch die Unplugged-Aktivität „Brain in aBag“ [Cu16a] die Grundbegri e vonKNNzusammen mit den Schülerinnen und Schülernerarbeitet. Anhand dieses durch weitere Erläuterungen und theoretische Inhalte ergänzteSpiel erkennen die Lernenden die grundlegenden Eigenschaften und Parameter von KNNohne die Hürde eigener Programmierung. Um diese Erkenntnisse praktisch zu erprobenund ein Gefühl für den Einﬂuss der verschiedenen Parameter zu erhalten, trainieren sieunter Verwendung des Online-Tools „Playground Tensorﬂow“9unterschiedliche Netze undbeobachten und erfassen dabei direkt die Auswirkungen ihrer Änderungen. Für ein tieferesVerständnis modellieren, trainieren und validieren sie selbst unter Verwendung von JupyterNotebook eigene KNN. Hier kommt der freie Datensatz mit handschriftlichen Zi ern aus derMNIST-Datenbank [LCB98] zum Einsatz. Da die Zi ern der amerikanischen Schreibweiseentsprechen, führt eine Validierung durch handgeschriebene Zahlen der Schülerinnen undSchüler zu schlechten Ergebnissen, so dass hier ein Anlass gescha en wird, die Grenzenund Möglichkeiten von verschiedenen Ansätzen von ML zu diskutieren. Auch kommen hiertagesaktuelle Artikel und Berichte zum Einsatz, die auch problematische oder kontroversdiskutierte Einsatzgebiete von KI und KNN zum Thema haben, so dass hier verstärktgesellschaftliche Fragestellungen bearbeitet werden.9Playground Tensorﬂow: Frei explorierbare Onlinevisualisierung von KNN;https://playground.tensorflow.org290 Simone Opel et al.Entwicklung einer Unterrichtssequenz zum Maschinellen Lernen 73.3 Modul 3: DatenprojekteWährend in den ersten beiden Modulen die Erarbeitung neuen Wissens im Mittelpunktstand, wird im dritten Modul ein gemeinsames Datenprojekt mit „realen“ Daten undProjektpartnern durchgeführt (insg. 10 Sitzungen). Dabei werden die in den vorherigenModulen erworbenen Kompetenzen vertieft. Die Schülerinnen und Schüler erhalten denProjektauftrag, aus den Daten des örtlichen Parkleitsystems sowie aus den Bezahlsystemeneines Parkplatzes (Parkscheinautomat) und eines Parkhauses Vorhersagemodelle für diejeweilige Auslastung zu einem zukünftigen Zeitpunkt zu entwickeln und sich hierbei amProjektablauf des CRISP-DM zu orientieren. Zur Organisation und zur Unterstützung derarbeitsteiligen Arbeit an den Daten steht den Schülerinnen und Schülern ein Gitlab zurVerfügung, das sowohl zur Datenals auch zur Aufgabenorganisation genutzt werden kann.Die betreuenden Personen fungieren im Rahmen dieses Projekts als Lernbegleiter undkümmern sich um den Kontakt mit den Projektpartnern sowie die interne Kommunikationund Organisation.4 Erfahrungen der ersten KursdurchführungDer Projektkurs ﬁndet dreistündig mit 2 Schülerinnen und 17 Schülern der Jgst. 12, die alleInformatik belegt haben und daher über grundlegende Kenntnisse von Java verfügen, ineiner Laborumgebung statt (insg. 24 Wo.). Die verwendete Programmiersprache Pythonsowie Jupyter Notebook waren für sie neu – der Einstieg war aber mit etwas Unterstützunggut zu bewältigen. Durch die Größe der Gruppe können die im Folgenden präsentiertenErkenntnisse nicht generalisiert werden, zeigen jedoch erste Hinweise, ob der Kurs an sichauch für andere Gruppen umsetzbar ist.4.1 Erkenntnisse aus Modul 1: Daten und Informationen – DatendetektiveDas erste Modul dient zur Vermittlung von Kompetenzen zu statistischen Exploration, Verar-beitung und Darstellung von Daten (vgl. Abschnitt3.1). Die Modulabschlusspräsentationender Schülerinnen und Schüler zur statistischen Untersuchung von eigenen Fragestellungenanhand des JIM-Datensatzes zeigen ebenso wie verschiedene Diskussionsrunden, dass esihnen gelungen ist, ein kritisches Verständnis zu Daten, Information und ihrer Visualisierungzu entwickeln. So wurde beispielsweise in den Präsentationen häuﬁg die Größe des verwen-deten JIM-Datensatzes kritisch gewürdigt und die damit verbundene geringe Aussagekraftder sich ergebenden kleinen Teilmengen eingeordnet. Im Rahmen der Feedbackrunde amEnde des Moduls wurde berichtetet, dass einerseits die Auswertung der Lärmdaten mitPython spannender als das Arbeiten mit dem JIM-Datensatz angesehen wurde, aber beideBausteine wurden von den Lernenden nicht als besonders persönlich relevant befunden.Daher ist zu überlegen, wie im nächsten Durchlauf die subjektiv empfundene Relevanz unddamit Motivation noch erhöht werden können.Eine Unterrichtssequenz zum Maschinellen Lernen als Aspekt von Data Science 2918 Simone Opel, Michael Schlichtig, Carsten Schulte4.2 Erkenntnisse aus Modul 2: Künstliche Intelligenz und Maschinelles LernenIn Modul 2 liegt der Schwerpunkt auf der Vermittlung der Grundideen von ML und KI sowiedem Erwerb der Kompetenz zum eigenständigen Programmierung von KI-Modellen (vgl.Abschnitt3.2). Die beiden Unplugged-Einheiten haben sich als guter thematischer Einstiegin den jeweiligen Baustein erwiesen und waren für die Lernenden hilfreich zur Bildungeines ersten Verständnisses des Themenbereichs. Das Feedback zeigt, dass das angemesseneschrittweise Anheben des Schwierigkeitsniveaus bei dem komplexen Themenfeld von MLund KI eine Herausforderung darstellt: Während der „Sweet Learning Computer“durchwegpositiv bewertet wurde, wurden die darauf folgenden Beispiele zum manuellen Erstellen vonEntscheidungsbäumen mittels CODAP teils als monoton und wenig motivierend empfunden.Für die Erarbeitung der algorithmischen Darstellung von Entscheidungsbäumen wirdder Begri  der Entropie nach Shannon benötigt. Die hierfür gestaltete Selbstlerneinhaltmit den zugehörigen Aspekten der Informationstheorie in Jupyter Notebook hat sichals zu schwierig selbst für diese sehr leistungsstarke Lerngruppe erwiesen, so dass diesstattdessen gemeinsam im Plenum erarbeitet wurde. Beim Feedback zu diesem Bausteinbemängelten die Schülerinnen und Schüler, dass – ebenso wie in Modul 1 – in diesemBaustein aus didaktischen Gründen nur kleine Datensätze mit nur begrenzter Aussagekraftzum Einsatz kamen. Die den zweiten Baustein erö nende Unplugged-Einheit „Brain in aBag“ sowie die im ersten Baustein erarbeitete Darstellung (vgl. Abb.3) zum datengetriebenenProblemlösen ermöglichte den Lernenden bereits eine sachlich fundierte Diskussion zurgesellschaftlichen Bedeutung der Verwendung von KI-Systemen, in der Probleme wieVorurteile in Trainingsdaten („Diskriminierende Algorithmen“) divers betrachtet unddiskutiert wurden. Im weiteren Verlauf des Moduls erarbeiteten sich die Schülerinnen undSchüler das eigene Erstellen, Trainieren und Validieren von KNN unter Verwendung vonPython und Jupyter Notebook mit dem MNIST-Datensatz zur Zi ernerkennung. Dass esden Schülerinnen und Schülern damit gelang, ein grundlegendes Verständnis zu ML und KIsowie der Programmierung eines passendes Netzes zu entwickeln, zeigte sich auch in derModulabschlusspräsentation, in der sie für den schon bekannten JIM-Datensatz Modellezur Vorhersage des Geschlechts der Studienteilnehmer implementierten und optimierten.Sie haben damit wichtige Kompetenzen entwickelt, die im anschließenden Projektmodul(vgl. Abschnitt3.3) gefestigt und weiterentwickelt wurden.4.3 Erkenntnisse aus Modul 3: DatenprojektIm Rahmen einer Kooperation mit zwei lokalen Unternehmen (RTB, Bad Lippspringesowie ASP, Paderborn10) erhielten die Schülerinnen und Schüler den Auftrag, aus Datendes örtlichen Parkleitsystems sowie aus den Bezahlsystemen eines Parkplatzes (Parkschein-automat) und eines Parkhauses Vorhersagemodelle für die jeweilige Auslastung zu einemzukünftigen Zeitpunkt zu entwickeln. Da sich die Daten von Parkhäusern und Parkplätzen10https://www.rtb-bl.deundhttps://www.paderborn.de/microsite/asp/292 Simone Opel et al.Entwicklung einer Unterrichtssequenz zum Maschinellen Lernen 9grundlegend unterscheiden, wurde die Aufgabe in zwei parallel bearbeitete Projekte aufge-teilt. Alle Daten lagen entweder als unbearbeitete Text-Dateien vor oder wurden direkt auseiner Datenschnittstelle entnommen. Die Schülerinnen und Schüler benötigten die erstenWochen, um – folgend dem CRISP-DM-Prozess – die großen Datenmengen zu sichten, zuverstehen und aufzuarbeiten. Dazu wurden von den Gruppen Jupyter Notebooks entwickelt,die sie anschließend um die gewünschten Lerner zu erweiterten, wobei es den Gruppenfreigestellt war, ob sie zur Modellierung Entscheidungsbäume oder KNN verwenden. Diegrößte Herausforderung stellte hier nicht die Implementierung der ML-Algorithmen dar,sondern die strategisch günstige Vorbereitung der Daten und die optimale Auswahl derKonﬁguration des Lerners. Bei der Abschlusspräsentation konnten beide Gruppen abernicht nur funktionierende Vorhersagemodelle einschließlich einer sinnvollen Web-GUI fürihre jeweiligen Parkmöglichkeiten an die Projektpartner übergeben, sondern überzeugtenauch in der abschließenden Diskussion mit ihrem grundlegendes Verständnis nicht nur überfachliche Problemstellungen, sondern auch durch ihre Fähigkeit, die hierzu gehörendengesellschaftlichen Fragen fundiert erörtern können.5 Ausblick und FazitIm Rahmens dieses Artikels beschreiben wir die Entwicklung eines Data Science-Kurses,der in der Sek II als Projektkurs unterrichtet werden kann. Nicht jede Lehrkraft, diegerne dieses Thema in den Unterricht einbinden möchte, hat diese Zeitressource. Daherplanen wir, die Module auf Basis unserer bisherigen Erfahrungen weiterzuentwickeln,so dass es möglich wird, nur ausgewählte Teile durchzuführen. Im Moment werden dieErkenntnisse der aktuellen Durchführung sowie der Erprobungen einzelner Komponentenin die Kursmaterialien eingearbeitet. Im Anschluss daran werden die Materialien interes-sierten Lehrkräften unterschiedlicher Schularten zur Erprobung und Weiterentwicklungzur Verfügung gestellt. Zur Weiterentwicklung des Gesamtkurses im Sinne des DBRwird dieser im nächsten Schuljahr mit der bisherigen Partnerschule in modiﬁzierter Formdurchgeführt. Da die Schülerinnen und Schüler einerseits das durch die Modulstrukturbedingte „Vorratslernen“ bemängelten und andererseits an einigen Stellen Schwierigkeitenhatten, die erlernten Inhalte zielgerichtet auf die Projektfragestellungen anzuwenden, istgeplant, die Theoriephasen so mit der Arbeit an einem Datenprojekt zu verzahnen, dass dietheoretischen Inhalte gezielt während des Projektablaufs eingebaut werden. Zudem werdendie in den verschiedenen Modulen enthaltenen gesellschaftlichen, sozialen und ethischenFragestellungen nochmals gebündelt in einem zusätzlichen Modul diskutiert und bearbeitet,um die Schülerinnen und Schüler noch tiefer mit den darin enthaltenen Fragestellungenvertraut zu machen. Dies alles erfordert noch einiges an konzeptioneller Arbeit, die sichjedoch durch einen höheren Kompetenzgewinn seitens der Lernenden bemerkbar machenwird. Zusammengefasst sind wir trotz aller noch zu leistenden Entwicklungsarbeit überzeugt,durch den vorgestelltenData Science-Kurseinen großen Schritt hin zu einem umfassendenCurriculum für diesen sehr komplexen Bereich getan zu haben, so dass wir gespannt auf dienächsten Durchführungen des Kurses und seiner Module sind.Eine Unterrichtssequenz zum Maschinellen Lernen als Aspekt von Data Science 29310 Simone Opel, Michael Schlichtig, Carsten SchulteLiteraturverzeichnis[Ch00]Chapman, P.; Clinton, J.; Kerber, R.; Khabaza, T.; Reinartz, T.; Shearer, C.; Wirth, R.:Cross Industry Standard Process for Data Mining 1.0, Step-by-step Data Mining Guide.2000.[CM97]Cobb, George W.; Moore, David S.: Mathematics, statistics, and teaching. The AmericanMathematical Monthly, 104(9):801–823, 1997.[Co03]Cobb, Paul; Confrey, Jere; diSessa, Andrea; Lehrer, Richard; Schauble, Leona: DesignExperiments in Educational Research. Educational Researcher, 32(1):9–13, 2003.[Cu16a]Curzon, Paul: , Brain in a Bag, A CS4FN Computing Activity.https://www.youtube.com/watch?v=lux_ybamClU, 2016. Accessed: 2018-06-15.[Cu16b]Curzon, Paul: , The Sweet Learning Computer, A CS4FN Computing Activity.www.cs4fn.org/machinelearning, 2016. Accessed: 2019-02-10.[GR]Grillenberger, Andreas; Romeike, Ralf: In: Proceedings of the 17th Koli Calling Conferenceon Computing Education Research. New York.[LCB98]LeCun, Yann; Cortes, Corinna; Burges, Christopher J.C.: , MNIST handwritten digitdatabase.http://yann.lecun.com/exdb/mnist/, 1998. Accessed: 2018-06-15.[Pa18]Paderborn Symposium on Data Science Education at School Level 2017: The CollectedExtended Abstracts, 2018.[Ri15]Ridsdale, Chantel; Rothwell, James; Smit, Michael; Ali-Hassan, Hossam; Bliemel, Michael;Irvine, Dean; Kelley, Daniel; Matwin, Stan; Wuetherick, Bradley: Strategies and bestpractices for data literacy education: knowledge synthesis report. 2015.[Ri16]Ridgway, Jim: Implications of the Data Revolution for Statistics Education. InternationalStatistical Review, 84(3):528–549, 2016.[Rö16]Röhner, Gerhard; Brinda, Torsten; Denke, Volker; Hellmig, Lutz; Heußer, Theo; Pas-ternak, Arno; Schwill, Andreas; Sei ert, Monika: Bildungsstandards Informatik für dieSekundarstufe II. Beilage zu LOG IN, Heft, (183/184), 2016.[SBS18]Sentance, Sue; Barendsen, Erik; Schulte, Carsten: Computer Science Educ.: Perspectiveson Teaching + Learning in School. Bloomsbury Academic, London, 3 2018.[TD16]Tedre, Matti; Denning, Peter J.: The Long Quest for Computational Thinking. In: Procee-dings of the 16th Koli Calling International Conference on Computing Education Research.Koli Calling ’16, ACM, New York, NY, USA, S. 120–129, 2016.[Tv09]Thijs, Annette; van den Akker, Jan: Curriculum in development. SLO NetherlandsInstitute for curriculum development, 2009.294 Simone Opel et al.cbaA. Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Blöcke, Blumen, Mikrocontroller und das Internet of ThingsEin Konzept zum kontextorientierten Einsatz von Parametric Design und PhysicalComputing in Mädchen-FörderworkshopsNils Pancratz1, Anatolij Fandrich1, Christos Chytas1, Mareike Daeglau1, Ira Diethelm1Abstract:Die Art und Weise, mit der Informatik über die letzten Jahrzehnte von der Industrie, denMedien und teils sogar (ö entlichen) Bildungseinrichtungen vermarktet wurde, führte in westlichenKulturen zu einer deutlichen Geschlechterkluft in informatischen Berufen wie auch Studiengängen.Studien zu diesem aus diversen Gründen anzugehenden Missstand lieferten in den letzten Jahren gehäuftBelege dafür, dass sich Mädchen und junge Frauen eher für Informatik begeistern lassen, wenn ihnendiese faszinierende Wissenschaft in Kreativität, Kollaboration und Kommunikation fordernden undfördernden Kontexten präsentiert wird. So führten diese Erkenntnisse zuletzt vermehrt zu Bemühungen,Mädchen über spezielle außerschulische Workshopformate anzusprechen. Um in solchen FormatenProgrammieranfängerinnen und -anfängern zugleich grundlegende Programmierkenntnisse (bspw.über Schleifen, Variablen, Verzweigungen und Methodenaufrufe) zu vermitteln und trotzdem schnellmotivierende Ergebnisse zu erzielen, wird zuletzt vermehrt auf das Konzept desComputationalDesignzurückgegri en. Dies ermöglicht über die Idee derDigital Fabricationebenso wie das inaußerschulischen Workshops bereits etabliertePhysical Computing, Informatik im wahrsten Sinne desWortes begreifbar zu machen. Dieser Praxisbeitrag stellt ein Workshopkonzept vor, in dem über denKontext desInternet of Thingsdie Ideen hinterParametric DesignundPhysical Computingmiteinanderkombiniert werden – und dabei beide Geschlechter gleichermaßen ansprechen kann und soll! DasZiel ist, am Ende des Workshops, der bereits mehrmals erfolgreich sowohl in außerschulischen wieauch schulischen Formaten durchgeführt wurde, eine selbstgestaltete Lampe – bspw. in Blumenform– fabriziert zu haben, die in Abhängigkeit der über das Internet bezogenen Wetterdaten in eigenskreierten Lichte ekten strahlt.Keywords:Gendersensitive Informatikdidaktik; Parametric Design; Physical Computing; Internet ofThings; Informatik im Kontext1 Einleitung„Informatik für alle“ – bei einem Blick auf aktuelle Statistiken zu Studierendenzahlen wirktder Titel dieses Tagungsbandes nahezu utopisch und unerreichbar: Schließlich war derohnehin schon beklagenswert niedrige Frauen-Anteil unter denjenigen, die sich deutsch-landweit für eine Neueinschreibung in einen Informatikstudiengang entschieden haben,zuletzt wieder rückläuﬁg und lag zu Beginn des Wintersemesters 2018/2019 bei nur1Carl von Ossietzky Universität Oldenburg, Didaktik der Informatik, Uhlhornsweg 84, 26129 Oldenburg,vorname.nachname@uni-oldenburg.de cba doi:10.18420/infos2019-30Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 2952 Nils Pancratz et al.22,5%2. Die wenigen Frauen, die sich für ein Informatikstudium entscheiden, wählendabei häuﬁg „Bindestrich-Studiengänge“ wie bspw. Bioinformatik, Medizinische Informatikoder auch Medieninformatik [Kl16], was als Indiz dafür gelten könnte, dass ein stärkererKontextbezug (vgl. Abs.2.2) besonders förderlich für das Interesse und die Begeiste-rung von Mädchen und jungen Frauen an der Informatik ist. Auch bei den geschlossenenAusbildungsverträgen liegt der Frauenanteil je nach Ausbildungsberuf aktuell nur zwi-schen knapp 5% (Fachinformatiker/-in Systemintegration) und 15% (Informatikkauﬂeute)3. Abb. 1: Die Teilnehmerin einesdieser Workshops beim Zusam-menstecken der Komponentenihrer eigenständig gestalteten in-ternetfähigen Lampe.Der Nährboden für diese Geschlechterkluft ist zweifelsfreibereits in der Schulinformatik zu suchen: In den zahlreichenBundesländern, in denen Informatik ein Schattendasein alsWahlpﬂichtfach fristet, entscheiden sich erfahrungsgemäßnur wenige Mädchen, es zu belegen; in den Ländern mit ver-pﬂichtendem Informatikunterricht (IU) hingegen sind es imVergleich zu ihren Geschlechtergenossen überproportionalviele junge Frauen, die sich im Laufe ihrer Schulzeit gegeneine weitere Belegung entscheiden. So ruft diese o ensicht-liche Geschlechterkluft seit Jahren zahlreiche Studien zumöglichen Ursachen (vgl. Abs.2.1) auf die Programme(inter-)nationaler Informatikdidaktik-Tagungen. Der vorherr-schende Fachkräfte-Mangel im IT-Sektor ist hierzu sicherlichgenauso als Ansporn zu begreifen wie der Anspruch,allenSchülerinnen und Schülern (SuS) die Vielfalt informatischerBildung zu bieten. Da nicht nur im schulischen Informatikun-terricht, sondern auch in entsprechenden außerschulischenLernangeboten vorwiegend Jungen und junge Männer anzu-tre en sind, wird zuletzt vermehrt auf außerschulische Formate gesetzt, die gezielt Mädchenansprechen und ihnen so die klischeebehaftete Informatik aus einer anderen Perspektiveaufzeigen sollen, um langfristig mehr Schülerinnen an die faszinierende Wissenschaft der In-formatik heranzuführen. In diese Angebote reiht sich auch dieser Workshop ein, wenngleichdie von den Autorinnen und Autoren dieses Beitrags umgesetzten Ideen ihrer Ansicht nachausdrücklich für beide Geschlechter gleichermaßen förderlich sind. So berücksichtigt das indiesem Praxisbeitrag vorgestellte Workshopkonzept gezielt grundlegende Ansprüche aneine gendersensitive Informatikdidaktik (Abs.2.1) und bedient sich innerhalb des KontextesdesInternet of Things(Abs.2.2) den Ideen hinterDigital Fabrication(Abs.2.3) undPhysical Computing(Abs.2.4). Am Ende des (in Abs.3beschriebenen) Workshopablaufssteht dabei eine internetfähige, selbstgestaltete und mithilfe von 3D-Druckern konstruierteLampe (Abb.1), die in Abhängigkeit der jeweiligen Wetterlage, die von dem verwendetenMikrocontroller über einen Webservice abgerufen wird (Abs.3), in unterschiedlichenLichte ekten leuchtet.2Quelle:Statistisches Bundesamt: „Bildung und Kultur (2018): Schnellmeldungsergebnisse der Hochschulstatistikzu Studierenden und Studienanfänger/-innen (vorläuﬁge Ergebnisse) Wintersemester 2018/2019“3Quelle:Deutscher Industrieund Handelskammertag (2017): „Statistik Ausbildung 2017“296 Nils Pancratz et al.Blöcke, Blumen, Mikrocontroller und das Internet of Things 32 Didaktische Relevanz des WorkshopkonzeptsIm Folgenden sollen die didaktischen Überlegungen, die bei der Konzeption dieses Work-shops (WS) zum Tragen kamen, von den grundlegenden Aspekten gendersensitiver Informa-tikdidaktik (Abs.2.14) und Kontextorientierung (Abs.2.2) über die gewählten ParadigmendesParametric Design(Abs.2.3) undPhysical Computing(Abs.2.4) dargelegt werden.2.1 Aspekte gendersensitiver InformatikdidaktikAuf der Suche nach Ursachen für die unverkennbare Geschlechterkluft in der Informatik (vgl.Abs.1) begnügen sich nur wenige Studien mit der platten Erkenntnis, dass Mädchen und jungeFrauen schlichtweg weniger Interesse an entsprechenden Themen hätten [An08,SM11].Tiefgreifendere Untersuchungen hingegen kommen zu dem Ergebnis, dass sie die Informatikals attraktiveres Umfeld betrachten, sobald•die behandelten Technologien insoziale Kontexteeingebettet sind, in denen sie selbstinvolviert sind bzw. sich selbst wiedersehen können [FMM97],•Informationstechnologien verwendet werden, umMenschenin ihrenalltäglichenSituationenzu unterstützen [ZS08],•sie zu einemübergeordneten Zieleingesetzt wird [FM02] und•Informatik alskreativer[DKW14] undkollaborativer[ZS08,Eg16,MNS08] Prozessaufgezeigt wird, in dem den Mädchen die Möglichkeit gegeben wird,sich miteinanderauszutauschenundzusammenzuarbeiten[ZS08].Sowohlschulischeals auchaußerschulischeLernumgebungen bieten ausreichend Spielraum,diesen „besonderen“ Anforderungen an eine gendersensitive Informatikdidaktik gerecht zuwerden und so situatives Interesse zu wecken, das sich bestenfalls zu langfristig anhaltenderMotivation entwickeln kann [Ma17]. Vor allem letztere bieten die Möglichkeit, den zahlrei-chen vorherrschenden Klischees und Stereotypen, die noch immer über den Berufsalltag vonInformatikern5existieren, entgegenzuwirken. Doch dazu sollten sich diese Angebote explixitund ausschließlich an Mädchen und junge Frauen richten, denn außerschulische Angeboterund um die Informatik werden ansonsten leider immer noch grundsätzlich von Jungenwahrgenommen [SM11,Wi16]. So richtet sich auch das BMBF-geförderte Projektsmile(https://www.smile-smart-it.de), im Rahmen dessen dieses WS-Konzept entwickeltund durchgeführt wurde und wird, über ein Angebot an (außerschulischen) WS explixitan Mädchen und junge Frauen, um das übergeordnete Ziel zu verfolgen, langfristig undnachhaltig den Anteil an Frauen in informatischen Studiengängen und Berufen zu erhöhen.4Ausschnitte aus diesem Abs.2.1wurden bereits in [PD18] verö entlicht.5Hier wird bewusst nur die männliche Form verwendet. Schließlich ist das Bild eines typischen Informatikersmännlich, unattraktiv und sozial wenig kompetent [Ch13].Blöcke, Blumen, Mikrocontroller und das Internet of Things 2974 Nils Pancratz et al.2.2 Informatik im Kontext und das „Internet of Things“ImInternet of Things (IoT)unterstützen immer kleiner werdende Computer, die in immermehr alltägliche Gegenstände wie Lampen, Kühlschränke, Rasierapparate, Staubsaugeroder Autos eingebettet werden, den Menschen in unterschiedlichsten Situationen. Um genaudiese „Bewältigung lebensweltlicher Herausforderungen in Verbindung mit Informatiksys-temen“ [DKW11, 97] geht es in dem KonzeptInformatik im Kontext (IniK)zur Planung,Durchführung und Auswertung von IU, in dem über eine Ausrichtung an der Lebensweltder SuS eine zusätzliche Motivation verfolgt wird. Das IoT erfüllt zweifelsohne die von[DKW11] gestellten Anforderungen an einen guten Kontext im Sinne einer IniK-Reihe. Sobewegen sich die Schülerinnen in dem in diesem Beitrag vorgestellten WS im Rahmendieses Kontextes – wenn auch nicht stringent in den einzelnen Phasen, für die [DKW11]plädieren. Sie begreifen die Technologien, an die sie herangeführt werden, so im Sinneeiner Gendersensitivität (vgl. Abs.2.1) in soziale, lebensweltliche Kontexte eingebettet.2.3 Parametric DesignComputational Design (CD)ist ein Prozess, der Merkmale der Programmierung zur Er-zeugung und Modiﬁkation von 2Dund 3D-Visualisierungen beinhaltet. Ein typischesKonstruktionsparadigma im Sinne von CD istParametric Design(PD), das oft mit derArchitektur und der Verwendung von Parametern zur Steuerung der Eigenschaften von 2D-oder 3D-Modellen zusammenhängt. Obwohl es einen anhaltenden Trend zum Einsatz vonDigital Fabrication (DF)und insbesondere 3D-Druck in Bildungskontexten gibt, ist ihrPotenzial für den Anfangsprogrammierunterricht für viele Lehrerinnen und Lehrer immernoch etwas Neues. Schließlich lassen sich sowohl schulische als auch außerschulischeprogrammierlastige Lernaktivitäten über CD und DF auﬂockern und so Lernprozesse überdas Herstellen von eigens kreierten Artefakten unterstützen [CDT18]. Zusätzlich schärft dieVerbindung der Gestaltung von 2Dund 3D-Formen mit grundlegenden Programmierkon-zepten wie Schleifen, (konditionalen) Verzweigungen und Methodenaufrufen FähigkeitendesComputational Thinkingwie Zerlegung und Mustererkennung [CTD19] . ParametrischeEntwurfswerkzeuge gehen also deutlich über die Möglichkeiten von nicht programmierbarenCAD-Werkzeugen hinaus und ermöglichen die Erstellung komplexer Formen und Geometri-en wie Fraktale oder Bäume mit Zweigen, die rekursive oder repetitive Elemente beinhaltenkönnen [CDT18]. CD ﬁndet vereinzelt bereits Einsatz in Lernaktivitäten: So konzentrierensich bspw. [DKW14] und [JB13] auf die Verwendung der ProgrammierspracheProcessingzur Erzeugung von 2D-Formen, die mit Lasercuttern hergestellt werden können, und ihreAuswirkungen; in dem Ansatz von [KKR17] werdenTurtle Graphicserzeugt und mithilfevon 3D-Druckern als motivierende Unterstützung genutzt. Der Einsatz von PD-Tools wieBlocksCAD(vgl. Abs.3) ist bislang jedoch noch deutlich seltener. So darf und soll dieserPraxisbeitrag auch als Plädoyer für einen verstärkten Einsatz von PD verstanden werden.298 Nils Pancratz et al.Blöcke, Blumen, Mikrocontroller und das Internet of Things 52.4 Physical ComputingEingebettete Systeme bieten durch das Zusammenspiel von Hardwareund Softwaresystemenund den damit verbundenen Möglichkeiten zur Interaktion zwischen Mensch und Maschineeine Vielzahl von Chancen, Informatik in einem praktischen Kontext zu vermitteln.PhysicalComputing (PC)beschreibt dabei den Prozess, ein solches System zu erscha en. Nebenden bekannten, positiven E ekten der Kontextualisierung und dem Einsatz von Fallstudienin Ingenieurwissenschaften [YAM19], wirkt sich auch die Entwicklung solcher physischerSysteme positiv auf Lerngruppen aus. Sentence et al. fassen diese E ekte folgendermaßenzusammen: Die Motivation steigt, da die Lernergebnisse nicht virtuell existieren, sondernin Form eines praktischen Produktes sichtbar werden. Zudem hilft die Greifbarkeit dieserSysteme den Lerngruppen beim Debuggen und Optimieren, Programmierkonzepte besserzu verstehen. Die Arbeit lässt sich außerdem sinnvoll auf mehrere Personen aufteilen, z. B.kümmert sich eine Person um Schnittstellen und Algorithmen, während eine andere einGehäuse zum 3D-Druck modelliert. So wird das Arbeiten im Team geschult. Zudem bietetdas PC die Möglichkeit, sich kreativ zu entfalten [Se17]. Speziell Mädchen proﬁtieren vondem Einsatz solcher Systeme im schulischen Kontext. So gaben Mädchen, die sich mit PCbeschäftigt haben, an, dass sie Spaß am Programmieren gefunden haben und sich außerdemselbstbewusster fühlen [Se17].3 Workshoptools und -ablaufUm eine günstige IoT-Anwendung zu entwickeln, wurde das EntwicklungsboardD1 minivom HerstellerWEMOS Electronicsgewählt. Dieses basiert auf den 32-Bit MikrocontrollerESP8266EXvonEspressifund zeichnet sich unter anderem durch die native Unterstützungder 801.11 b/g/n Funknetzwerkstandards und der Netzwerkprotokolle TCP, UDP und HTTPaus. Darüber hinaus bietet der Hersteller zahlreiche pin-kompatible Erweiterungen fürdie Boards der D1-Reihe an, welche unkompliziert auf das Entwicklungsboard gestecktwerden können. Dadurch entfallen potentielle Fehlerquellen beim Anschließen neuerSensoren bzw. Aktoren durch Wackelkontakte oder fehlerhafte Verkabelungen. Um dieüber das Internet gewonnene (s. u.) Außentemperatur auch optisch anzuzeigen, wurdeein 0.66 Zoll großes OLED-Display mit einer Auﬂösung von 64x48 Pixel, ebenfallsvom Hersteller WEMOS, verwendet. Nachdem man zwei Reihen von Stiftleisten an dieOLED-Display Erweiterung gelötet hat, kann man dieses auf das Entwicklungsboardstecken. Zusätzlich wurde zur visuellen Darstellung des aktuellen Wetters eine WS2812BRGB-LED verwendet. Der Vorteil gegenüber konventionellen RGB-LEDs, welche dreiKathoden bzw. Anoden zur Darstellung der verschiedenen Farben benötigen, ist dieﬂexible Programmierbarkeit. Während zur Darstellung der Farben an drei Pins verschiedeneSpannungspegel mittels PWM gesetzt werden müssten, kann die WS2812B LED die Farbenmit Hilfe der Arduino kompatiblen FastLED Bibliothek über eine einzige Datenleitungund in verschiedenen Farbräumen darstellen. Dies erleichtert auch die Erstellung voneigenen Animationen deutlich. Um die LED mit dem Entwicklungsboard zu verbinden,Blöcke, Blumen, Mikrocontroller und das Internet of Things 2996 Nils Pancratz et al.wurde ein Steckbrett verwendet. Die aktuellen Wetterdaten werden über die kostenfreieOpenweathermap(https://openweathermap.org/) API aus dem Internet bezogen. MitHilfe der HTTP-Methode GET wird das Wetter für den entsprechenden Standort angefragtund die Antwort des Servers vom Mikrocontroller empfangen, geparst und anschließendmit einer vorher festgelegten Farbe oder Animation dargestellt. Ein Plexiglasstab, welchermittels einer Halterung aus einem 3D-Drucker unmittelbar über der LED befestigt ist,leitet das Licht in eine von den Teilnehmerinnen selbst modellierten Blume (siehe Abb.1),welche ebenfalls mit einem 3D-Drucker gefertigt wurde. In beiden Fällen wurde PLAals Druckmaterial verwendet. Die Firmware für den Mikrocontroller wurde innerhalb derArduinoIDE(https://www.arduino.cc/en/main/software) geschrieben. Zusätzlich habendie Workshopteilnehmerinnen ihre Animationen mit dem blockbasierten WerkzeugmBlock3(http://www.mblock.cc/mblock-software/) erstellt. Die darin verwendeten Blöcke wurdeneigens für den Workshop entwickelt und zur Verfügung gestellt. Die Modellierung derBlumen erfolgte parametrisch mit dem ToolBlocksCAD(https://www.blockscad3d.com/),welches spielerisch Programmierkonzepte durch die Visualisierung von Formen vermittelt. Erfahrung der SchülerInnen /Grad der AnleitungTeil 3: Basteln und PräsentierenTeil 2: Physical ComputingTeil 1:Parametrisches Design geringhochWorkshop-dauerkurz6 h 6 h9 h15 hlang 6 h6 hAbb. 2: Überblick über das zeitliche Verhältnisder einzelnen WS-AbschnitteDerAblaufdes in diesem Praxisbeitrag vor-gestellten WS6,7gliedert sich in drei Teile:An den Programmiereinstieg über PD (Teil 1)schließt sich die Phase zum PC (Teil 2) an, be-vor die einzelnen Komponenten abschließendzur fertigen Blume zusammengesteckt werdenund eine Präsentation ihres Entstehungsprozessvorbereitet wird (Teil 3). In Abhängigkeit derVorerfahrung der SuS bzw. des gewünschtenGrads an Anleitung lässt sich die Gestaltungder Teile 1 und 2 bzgl. der einzuplanenden Zeitanpassen (vgl. Abb.2), sodass sich der WSinsgesamt auf 18 bis 30 (Zeit-)Stunden beläuft und so sowohl für den außerschulischen(bspw. für die Durchführung in einwöchigen WS oder Projektwochen) als auch schulischen(bspw. als Unterrichtsreihe zum Programmier-Anfangsunterricht) Einsatz eignet.Imersten Teildes WS lernen die Teilnehmenden nach einer Einführung in die Oberﬂächedes verwendeten ToolsBlocksCAD(vgl. Abs.3), wie man grundlegende geometrischeFormen (Würfel, Kugeln und Zylinder) überParameteroder ein Anwenden vonOperationenwie bspw. Skalierungen anpassen kann. Im Anschluss daran begreifen sie, dass sich dieseGrundkörper durchMengenoperationenwie bspw. Vereinigungen oder Di erenzen zunahezu jeder vorstellbaren Gestalt formen lassen. Über eine Verkettung mehrerer solcherOperationen wird dann mit einem Arbeitsblatt dazu angeleitet, die Grundform eines6(Stunden-)Verlaufspläne, Arbeitsblätter, verwendete Libraries und Code-Beispiele ﬁnden sich im Git-Repositorydes Projekts (https://github.com/projekt-smile/bloecke-blumen-mikrocontroller-und-das-internet-of-things) oder über den Download-Bereich der Projekt-Webseite (https://www.smile-smart-it.de).7Dieser WS wurde als Anschluss an den in [PD18] beschriebenen Einstieg in Sensorik und Aktorik mithilfe vonlittleBitskonzipiert und auch mehrmals im Anschluss daran durchgeführt.300 Nils Pancratz et al.Blöcke, Blumen, Mikrocontroller und das Internet of Things 7Blattes zu modellieren sowie den entstehendenCodeüber die Deklaration einerMethodeauszulagern und so an mehreren Stellen desProgrammsaufrufbar zu machen (vgl. Abb.3,links). Anschließend lernen die SuS das Prinzip hinterSchleifenkennen und können sobspw. Blüten statt über repetitive Methodenaufrufe durch Verwendung eines einzigenzusätzlichen Blocks aus den zuvor modellierten Blättern kreieren (vgl. Abb.3,rechts). Überdie zusätzliche Ergänzung einerVerzweigung(falls i ist gerade)lässt sich optionalan dieser Stelle ein weiteres Programmierkonzept einführen und so bspw. jedes zweiteBlatt in der Reihe länglicher gestalten. Um die Blume 3D-druckbar zu gestalten, musssie nach einer individuellen Anpassung (optional nach einer Online-Recherche) durch dieS(uS) mit Hilfe der Di erenz-Funktion von unten abgeﬂacht werden. Außerdem sollte eineKnospe, die von einem Zylinder ausgepart ist und in die sich so später ein Acrylglasstabstecken lässt (vgl. Abb.1), ergänzt werden. Nach dieser (verhältnismäßig) angeleitetenEinstiegsphase lässt sich optionalerweise der Arbeitsauftrag geben, weitere parametrischeDesigns zu recherchieren und mitBlocksCADzu modellieren, um sie anschließend fürdie personalisierten Lampen zu verwenden. Für den gesamten Prozess des Gestaltens derBlume bzw. einer anderen beliebigen Form empfehlen die Autorinnen und Autoren diesesBeitrags dabei einen zeitlichen Rahmen von 6 bis 9 Zeitstunden (s. o.). Selbstverständlichlässt sich dieser Teil des WS dabei auch isoliert von dem restlichen WS durchführen und soein kreativer Einstieg in die Vermittlung von Programmiergrundlagen ﬁnden. Abb. 3: Methode (links unten) zur Modellierung eines Blattes (links oben) und Methode (rechts oben)zur Modellierung einer Blüte (rechts unten) über die Verwendung einer Schleife inBlocksCADDerzweite Teildes WS behandelt die Programmierung des Mikrocontrollers. Dazuerschließen sich die Teilnehmenden nach einem Einstieg in die verwendete blockbasierteProgrammierumgebungmBlock(vgl. Abs.3) zunächst aus den ihnen ausBlocksCADbekannten Schleifen die Bedeutung derloop-Funktion in Programmen, indem sie dieonboard LED des verwendeten Mikrocontrollers (vgl. Abs.3) über diedelay-Funktion ineinem beliebigen Intervall zum Blinken bringen. Der Bogen zum textuellen Programmierenwird kontinuierlich dadurch gezogen, dassmBlockden blockbasiert einzugebenden CodeBlöcke, Blumen, Mikrocontroller und das Internet of Things 3018 Nils Pancratz et al.on the ﬂy als textuelle Beschreibung in Arduino-Code bereitstellt. Das Anschließen undAnsteuern des OLED-Displays8(vgl. Abs.3) stellt den nächsten Abschnitt im WS dar:So sollen die S(uS) zunächst ihren Namen auf dem Display anzeigen lassen, bevor sie(optional) kleine Bitmap Graﬁken erstellen können, die in Hinblick auf das übergeordneteZiel, eine smarte Wetterlampe zu kreieren, verschiedene Wetterlagen (Sonne, Wolken,Schnee...) symbolisieren. Dieses übergeordnete Ziel ﬁndet sich auch im nächsten Abschnittzur Gestaltung von Lichte ekten (bspw. in Farbübergängen von Gelbzu Rottönen fürsonnigoder Farbverläufe in Blautönen mit kurzen gelbenBlitzenbeiGewitter) wieder, in denen dieanzuschließende externe RGB-LED leuchten soll9. Dazu bietet es sich an, die Gruppe inZweieroder Dreierteams aufzuteilen und jeder Gruppe einen E ekt zuzuordnen. So entstehtgleichzeitig der Nebene ekt, dass die S(uS) (Software-)Entwicklung als kollaborativenProzess (vgl. Abs.2.1und4) begreifen, indem alle etwas zum Endprodukt beitragen.Auch dieser zweite Teil des WS lässt sich zeitlich variieren: Die Autorinnen und Autorenveranschlagen je nach Vorerfahrung der Teilnehmenden, Grad der Anleitung und je nachdem,ob das OLED-Display behandelt wird oder nicht, für diesen Teil 6 bis 15 Zeitstunden.Während die vorangegangenen WS-Abschnitte hinsichtlich ihrer Länge relativ variabel sind,hat die Erfahrung gezeigt (vgl. Abs.4), dass derdritte Teil, in dem die Schülerinnen ihreErgebnisse präsentieren sollen, vergleichsweise konstant 6 Zeitstunden beansprucht. DiePräsentation sollte dabei den Anspruch erfüllen, multimedial (ob in Form eines VLOGs,eines kurzen „Werbe“-Videos o. Ä.) und ansprechend gestaltet zu sein. Projektseitig (vgl.Abs.2.1) wird über diesen Teil das Ziel verfolgt, die Artefakte der WS-Teilnehmerinnen aufVeranstaltungen und Social-Media-Kanälen adressatengerecht zu präsentieren, um so übereinen Multiplikatore ekt weitere WS-Teilnehmerinnen zu akquirieren.4Darstellung der Erfahrungen, Reﬂexion und mögliche AbweichungenWie bereits erwähnt, steht im Fokus dieses Workshops, die Zielgruppe junger Mädchen undFrauen für informatische Inhalte nicht nur temporär zu begeistern, sondern auch nachhaltigesInteresse zu festigen. Während der zweite Aspekt zu diesem Zeitpunkt noch nicht hinrei-chend beantwortet werden kann, soll abschließend eine erste Evaluation hinsichtlich dermotivierend gestalteten Inhalte und insbesondere deren ansprechender Vermittlung gegebenwerden. Ein Kernanliegen dieses Konzepts ist es, die Artefakte möglichst preisgünstig zurealisieren, damit die Teilnehmerinnen diese nach Ende des Workshops ohne Zuzahlung mitnach Hause nehmen können. Hintergrund dafür ist die Annahme, dass die Schülerinnen sichstärker mit ihren Projekten identiﬁzieren und somit das persönliche Engagement adressiertwird. Die Wetterblume soll hierbei einen kreativ gestalteten Alltagsgegenstand darstellen,der zudem noch den praktischen Anwendungsfall der Wettervorhersage miteinbezieht. Einweiterer E ekt der Artefaktbildung ist die Möglichkeit, informatische Inhalte eng an kreative8Um die Kosten der einzelnen Lampen zu reduzieren, lässt sich alternativ auch auf das Display verzichten.9mBlock-Libraries, die die Ansteuerung der in Abs.3beschriebenen Hardwarekomponenten ermöglichen und u. a.die E ektgestaltung stark vereinfachen, ﬁnden sich in dem Git-Repository des Projekts (s. Fußnote6).302 Nils Pancratz et al.Blöcke, Blumen, Mikrocontroller und das Internet of Things 9Prozesse zu binden und somit den Einstieg in diese zu erleichtern. Das blockbasierte DesignvonBlocksCADführt die Schülerinnen bereits an die spätere Programmierung heran unddie Funktionsweise der Blöcke wird direkt sichtbar im Editor. In einer früheren Version desWorkshopangebots wurde die Programmierung der Lichte ekte textuell mit derArduino IDErealisiert. Insbesondere bei jüngeren Schülerinnen stieß diese auf Ablehnung oder war nurschwer umsetzbar. Inspiriert von den deutlich kostenintensiveren, aber attraktiven SystemenwieCalliopeundmicrobitwurde folglich auf eine blockbasierte Form der ProgrammierungmitmBlockumgestiegen. Diese Art der Programmierung löste mehr Begeisterung ausund führte dazu, dass die Schülerinnen deutlich mehr von sich aus ausprobierten. Dieparallele Übersetzung der gesetzten Blöcke in textuelle Prorammiersprache und die Mög-lichkeit, diese direkt auf den Mikrocontroller hochzuladen, ermöglicht gleichzeitig eineBinnendi erenzierung in einer Gruppe mit heterogenen Informatikkenntnissen. Das späteregemeinsame Zusammenführen der individuell gestalteten Lichte ekte für die gewähltenWetterphänomene kennzeichnet einen zentralen Punkt für das Gemeinschaftsgefühl derGruppe; jede einzelne Schülerin trägt einen Teil zum späteren E ektrepertoire bei und istdoch unabhängig in ihren Entscheidungen. Zusammenfassend lässt sich schlussfolgern, dassdie beschriebenen Kriterien an ein gendersensitives Workshopkonzept von diesem Ansatzerfüllt werden. Ob diese Einordnung den gewünschten Motivationse ekt herbeiführenwird, bedarf weiterer Evaluation und Erprobung. In diesem Zusammenhang sei daraufverwiesen, dass der hier beschriebene Ansatz Spielraum für zahlreiche Variationen – sowohlfür eine Verwendung in außerschulischen als auch schulischen Kontexten – lässt: denkbarwäre die Anbindung anderer APIs wieInstagramanstatt deropenweathermapund andereparametrische Formen, wie bspw. Regenschirme, gestalten zu lassen.Abschließende Anmerkung:Dieser Workshop wurde im Rahmen des Projektssmile,das vom Bundesministerium für Bildung und Forschung unter den Förderkennzeichen01FP1611 bis 01FP1615 gefördert wird, konzipiert und mehrmals durchgeführt.Literaturverzeichnis[An08]Anderson, N.; Lankshear, C.; Timms, C.; Courtney, L.: ”Because it’s boring, irrelevantand I don’t like computers”: Why high school girls avoid professionally-oriented ICTsubjects. Computers & Education, 50(4):1304 – 1318, 2008.[CDT18]Chytas, C.; Diethelm, I.; Tsilingiris, A.: Learning programming through design: Ananalysis of parametric design projects in digital fabrication labs and an online makerspace.In: IEEE Global Engineering Education Conference (EDUCON). S. 1978–1987, 2018.[Ch13]Cheryan, S.; Plaut, V. C.; Handron, C.; Hudson, L.: The Stereotypical Computer Scientist:Gendered Media Representations as a Barrier to Inclusion for Women. Sex Roles,69(1):58–71, 2013.[CTD19]Chytas, C.; Tsilingiris, A.; Diethelm, I.: Exploring Computational Thinking Skills in 3DPrinting: A Data Analysis of an Online Makerspace. In: 2019 IEEE Global EngineeringEducation Conference (EDUCON). IEEE, S. 1173–1179, 2019.Blöcke, Blumen, Mikrocontroller und das Internet of Things 30310 Nils Pancratz et al.[DKW11]Diethelm, I.; Koubek, J.; Witten, H.: IniK — Informatik im Kontext. LOG IN, 31(1):97–104, 2011.[DKW14]Dittert, N.; Katterfeldt, E.; Wilske, S.: Programming Jewelry: Revealing Models behindDigital Fabrication. In: FabLearn Europe. June 2014.[Eg16]Eguchi, A.: RoboCupJunior for Promoting STEM Education, 21st Century Skills, and Tech-nological Advancement Through Robotics Competition. Robot. Auton. Syst., 75(PB):692–699, 2016.[FM02]Fisher, A.; Margolis, J.: Unlocking the Clubhouse: The Carnegie Mellon Experience.SIGCSE Bull., 34(2):79–83, 2002.[FMM97]Fisher, A.; Margolis, J.; Miller, F.: Undergraduate Women in Computer Science: Experience,Motivation and Culture. In: Proc. of the Twenty-eighth SIGCSE Technical Symposium onComputer Science Education. SIGCSE ’97, ACM, New York, S. 106–110, 1997.[JB13]Jacobs, J.; Buechley, L.: Codeable objects: computational design and digital fabricationfor novice programmers. In: Proceedings of the SIGCHI Conference on Human Factors inComputing Systems. ACM, S. 1589–1598, 2013.[KKR17]Krisch, O.; Kastl, P.; Romeike, R.: 3D-Druck als Motivation für die Einführung in dieProgrammierung in der Realschule. Informatische Bildung zum Verstehen und Gestaltender digitalen Welt, 2017.[Kl16]Klan, F.: Informatik – reine Männersache? LOG IN, 36(1):35–38, 2016.[Ma17]Master, A.; Cheryan, S.; Moscatelli, A.; Meltzo , A. N.: Programming experiencepromotes higher STEM motivation among ﬁrst-grade girls. Journal of Experimental ChildPsychology, 160:92 – 106, 2017.[MNS08]Mitnik, R.; Nussbaum, M.; Soto, A.: An autonomous educational mobile robot mediator.Autonomous Robots, 25(4):367–382, Nov 2008.[PD18]Pancratz, N.; Diethelm, I.: Including Part-Whole-Thinking in a Girls’ Engineering Coursethrough the Use of littleBits: A Practical Report on Including Part-Whole-Thinking intothe Content of Computer Science Education. In: IEEE Global Engineering EducationConference (EDUCON). S. 1134–1138, 2018.[Se17]Sentance, S.; Waite, J.; Hodges, S.; MacLeod, E.; Yeomans, L. E.: “Creating Cool Stu ”Pupils’ experience of the BBC micro:bit. In: Proceedings of the 48th ACM TechnicalSymposium on Computer Science Education. 2017.[SM11]Stoilescu, D.; McDougall, D.: Gender digital divide and challenges in undergraduatecomputer science programs. Canadian Journal of Education, 34(1):308–333, 2011.[Wi16]Witherspoon, E. B.; Schunn, C. D.; Higashi, R. M.; Baehr, E. C.: Gender, interest, andprior experience shape opportunities to learn programming in robotics competitions.International Journal of STEM Education, 3(1):18, 2016.[YAM19]Yadav, A.; Alexander, V.; Mehta, S.: Case-based Instruction in Undergraduate Enginee-ring: Does Student Conﬁdence Predict Learning? International Journal of EngineeringEducation, 35(1):25–34, 2019.[ZS08]Zimmermann, L.; Sprung, G.: Technology is Female: How Girls Can Be Motivated toLearn Programming and Take up Technical Studies through Adaptations of the Curriculum,Changes in Didactics, and Optimized Interface Design. In: Proc. of ICEE 08, Pécs. 2008.304 Nils Pancratz et al.<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15   Einsatz von Skill Cards und Story Cards für einen kreativitätsfördernden Informatikunterricht auf der Sekundarstufe I Thomas Schmalfeldt1 Abstract: Um die Mittel der Informatik nicht nur gemäß vorgegebenen Routinen und Standardprozessen, sondern auch kreativ nutzen zu können, benötigen Schülerinnen und Schüler gewisse Grundlagen des Programmierens, die ihnen in einer Weise vermittelt werden sollten, die neben den informatischen Basiskompetenzen auch die Kreativität gezielt fördert. Im vorliegenden Beitrag wird im Kontext des Physical Computings mit dem Calliope mini der Kompetenzaufbau im Bereich „Informatik“ mithilfe des Einsatzes sogenannter „Skill Cards“ und „Story Cards“ aufgezeigt, die an der Pädagogischen Hochschule Zürich neu entwickelt wurden. Anhand der Skill Cards werden grundlegende Konzepte des Programmierens erarbeitet, welche die Schülerinnen und Schüler zur Umsetzung eigener Projektideen nutzen können. Der kreative Gestaltungsprozess wird parallel dazu durch eine reduzierte Form der Skill Cards – die Story Cards – unterstützt. Die im Beitrag vorgestellten Materialien sind Teil eines laufenden Forschungsprojekts, in dessen Rahmen das Ziel verfolgt wird, zukunftsweisende Lernmaterialien für den Informatikunterricht zu entwickeln und zu erproben. Keywords: Kreativität, Physical Computing, Calliope mini, Einführung Programmieren, Sekundarstufe I, Skill Cards, Story Cards, Differenzieren im Informatikunterricht 1 Einleitung Angesichts der fortschreitenden Digitalisierung und der damit einhergehenden zunehmenden Bedeutung informatischer Bildung sind innovative Lernumgebungen erforderlich, die es Kindern und Jugendlichen ermöglichen, sich entsprechende Kompetenzen bereits im Schulunterricht anzueignen. Vor diesen Hintergrund wurden die im vorliegenden Beitrag vorzustellenden Skill Cards und Story Cards entwickelt, mit deren Einsatz zwei Hauptziele verfolgt werden: Die Schülerinnen und Schüler sollen bei der Beschäftigung mit dem Calliope mini Programmierkompetenzen aufbauen und dabei gleichzeitig in ihrer Kreativität gefördert werden. Des Weiteren wurde bei der Konzeption der Karten darauf geachtet, dass sie einen differenzierenden Unterricht erlauben und sich fächerübergreifend einsetzen lassen. Die Arbeit mit einem Mikrocontroller wie dem Calliope mini ist in diesem Zusammenhang insofern zweckmäßig, als Mikrocontroller Bestandteil sehr vieler Alltagsgegenstände sind und deshalb auch im täglichen Leben von Relevanz sind. Zudem konnte nachgewiesen werden, dass Physical Computing einen positiven Einfluss auf die Motivation von Schülerinnen und Schülern haben kann [PR18].                                                         1 Pädagogische Hochschule Zürich, Mathematik und Informatik Sekundarstufe I, Lagerstrasse 2, CH-8090 Zürich, thomas.schmalfeldt@phzh.ch  cba doi:10.18420/infos2019-31Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 305 16 Thomas Schmalfeldt   Die angestrebte Förderung der Kreativität wiederum lässt sich mit einer These hinsichtlich der „21st-century skills“ begründen, der zufolge sich zukünftige Probleme im Alltag und im Berufsleben nicht mehr nur durch eingeübte Standardverfahren lösen lassen. Vielmehr werden zu deren Lösung zunehmend auch unkonventionelle Ansätze gefordert sein [TF09]. Dies bedeutet beispielsweise, dass Jugendlichen lernen müssen, größere Projekte gemeinsam anzugehen und dabei ihre jeweiligen Stärken in die Gruppe einzubringen. Ob die Arbeit mit Skill Cards und Story Cards, zum Beispiel in einem Design-Thinking-Prozess, einen Beitrag zur Umsetzung dieses Ziels leisten kann, soll im Rahmen eines laufenden Forschungsprojekts geklärt werden. 2 Materialset für den kreativitätsfördernden Informatikunterricht Die Skill Cards und die Story Cards haben einen klaren Bezug zur Arbeit mit dem Calliope mini und bilden die Basis für einen kreativitätsfördernden Informatikunterricht. Das vollständige Materialset besteht aus den folgenden vier Bestandteilen: • Skill Cards: Aufbau von Fertigkeiten und Kompetenzen für die Arbeit mit dem Calliope mini. Grundlage für das Erlangen der entsprechenden Story Card. • Story Cards: Grundlage für die Ideenfindung zum Verfassen einer eigenen Geschichte und für die Konzeptionierungsphase der Umsetzung dieser Idee mit dem Calliope mini; gewissermaßen eine reduzierte Variante der Skill Cards. • Zubehör-Boxen: Enthalten zusätzliche Komponenten wie zum Beispiel Sensoren und Aktoren, die am Calliope mini angeschlossen werden können und dessen Funktion erweitern. • Challenge Cards: Offene Problemstellungen und Ausgangspunkte für das Erfinden von Geschichten, die sich auch mit anderen Mikrocontrollern umsetzen lassen. Auf den Story Cards und den Zubehör-Boxen ist jeweils ein Icon2 angebracht, das sich auch auf den Skill Cards wiederfindet. Dieses optische Element unterstützt die Orientierung und erlaubt eine einfache Handhabung der einzelnen Bestandteile des Materialsets. Diese werden nachfolgend kurz beschrieben. 2.1 Skill Cards Die Skill Cards bilden die Grundlage des Kompetenzaufbauprozesses. Auf diesen Karten wird aufgezeigt, wie gewisse Hardware-Komponenten an den Calliope mini angeschlossen werden und wie deren Steuerung programmiert wird. Sie sind immer gleich aufgebaut und beginnen mit einer „Ich möchte …“-Formulierung, wie zum Beispiel „Ich möchte einen Motor anschließen und diesen mit dem Calliope steuern“. Auf der                                                         2 Quelle: https://thenounproject.com 306 Thomas Schmalfeldt Einsatz von Skill Cards und Story Cards für einen kreativitätsfördernden Informatikunterricht 17   Vorderseite wird gegebenenfalls benötigtes Zubehör aufgeführt. Außerdem wird beschrieben, was auf der Rückseite erklärt wird, und es finden sich allgemeine Hinweise zur verwendeten Hardware. Auf der Rückseite wird bildlich und sprachlich dargestellt, wie das erforderliche Zubehör angeschlossen werden muss. Des Weiteren werden die dazugehörigen Codeblöcke vorgestellt und erklärt (vgl. Abb. 1). Für die Skill Cards, und somit auch für den Unterricht, wurde die blockbasierte Umgebung MakeCode3 verwendet. Diejenige Version der Skill Cards, die im vorliegenden Beitrag beschrieben wird, zeigt vor allem den Umgang mit Sensoren und Aktoren auf. Die Erläuterungen beziehen sich zum einen auf die bereits auf dem Calliope mini befindlichen Bauteile, zum anderen aber auch auf zusätzliche Komponenten wie Grove-Module, Taster, Regler, LEDs und andere Bauteile. In der ersten Erprobungsphase wurden bereits Skill Cards zu Programmierkonzepten wie Bedingungen und Schleifen erstellt, die in der zweiten Erprobungsphase von Beginn an verwendet werden sollen.   Abb. 1: Rückseite der Skill Card für die Steuerung eines Motors 2.2 Story Cards Die Story Cards stellen in gewisser Weise die Kurzform der Skill Cards dar und bilden den Ausgangspunkt für den Kreativprozess. Wenn eine Schülerin oder ein Schüler die auf einer Skill Card beschriebenen Fertigkeiten aufgebaut hat, erhält sie bzw. er die entsprechende Story Card. Auf der Vorderseite befinden sich das jeweilige Icon (welches sich auch auf der dazugehörigen Skill Card befindet) sowie ein Schlagwort. Auf der                                                         3 https://makecode.calliope.cc  Einsatz von Skill Cards und Story Cards 307 18 Thomas Schmalfeldt   Rückseite sind ein bis zwei QR-Codes aufgeführt, mit denen Erklärvideos abgerufen werden können. Diese Erklärvideos sind als Ergänzung zu den Skill Cards gedacht und ermöglichen es zum einen, die Story Cards kompakt zu halten, während zum anderen zugleich die Option besteht, bei Bedarf eine Repetition der entsprechenden Fertigkeiten anzubieten. Die Verwendung der QR-Codes ist vor allem dann sinnvoll, wenn die Schülerinnen und Schüler die Videos während des Unterrichts mit einem Smartphone oder einem Tablet direkt abrufen dürfen. Sollte dies nicht möglich oder erlaubt sein, können die Story Cards auch ohne QR-Codes ausgedruckt werden. In diesem Fall können die Jugendlichen auf die betreffenden Skill Cards zurückgreifen, wenn sie die erforderlichen Fertigkeiten nicht mehr präsent haben.   Abb. 2: Anhand von Story Cards erzählte Geschichte, inklusive erster technischer Kommentare (reproduziert nach einer Schülerinnenlösung) Mithilfe der Story Cards sollen sich die Schülerinnen und Schüler ihren Fähigkeiten und Fertigkeiten entsprechende Geschichten ausdenken. Die Karten können ausgelegt, mit Pfeilen verbunden und kommentiert werden (vgl. Abb. 2). Das dadurch entstandene Netz dient in einem weiteren Schritt als Unterstützung bei der technischen Umsetzung mit dem Calliope mini. Zu diesem Zweck kann das Netz durch programmierspezifische und technische Bemerkungen ergänzt werden. Je mehr Story Cards die Schülerinnen und Schüler sammeln, desto mehr Möglichkeiten stehen ihnen für das Erfinden ihrer Geschichten und den Bau der darin vorkommenden Charaktere offen. Dieses Konzept  308 Thomas Schmalfeldt Einsatz von Skill Cards und Story Cards für einen kreativitätsfördernden Informatikunterricht 19   kann die Jugendlichen dazu motivieren, möglichst viele Kompetenzen aufzubauen, damit sie die persönliche Sammlung von Story Cards vergrößern können.  Obwohl die Story Cards einen direkten Bezug zu den Skill Cards aufweisen, lassen sie sich auch unabhängig davon verwenden. Dadurch können die den Story Cards zugrunde liegenden Fertigkeiten auch mithilfe anderer Methoden und Unterrichtsformen aufgebaut werden oder es kann direkt mit den Videos gearbeitet werden, die wie bereits ausgeführt mittels der QR-Codes abrufbar sind. Darüber hinaus eignen sich die Story Cards auch sehr gut für einen interdisziplinären Einsatz. So können die selbst erfundenen Geschichten zum Beispiel im Sprachunterricht in einem Aufsatz ausformuliert werden, während im Werkunterricht eine gestalterische Umsetzung der Charaktere der Geschichte stattfinden kann. Auf diese Weise wird aus einem Radroboter wie in Abb. 2 illustriert ein im Wald umherstreunender Tiger, der geschmeidig den einzelnen Bäumen ausweicht und so seinen Weg findet. Wenn der Tiger auf Menschen trifft und diese panisch schreien, bleibt er stehen, faucht und wartet, bis es wieder ruhig geworden ist. Da Tiger wie alle Katzenartigen viel schlafen, bleibt er regelmäßig (und zufällig) stehen und macht eine Schlafpause, um anschließend wieder herumzustreunen. 2.3 Zubehör-Boxen Sind auf den entsprechenden Skill Cards zusätzliche Komponenten aufgeführt, so finden die Schülerinnen und Schüler diese in Zubehör-Boxen mit den entsprechenden Icons. Sofern dies möglich war, wurden Blanko-Streichholzschachteln verwendet (vgl. Abb. 3). Bei den Grove-Modulen wurden die jeweiligen Kabel beigefügt, an gewisse Bauteile wurden Kabel angelötet. In anderen Fällen muss gegebenenfalls auf zusätzliche Kabel mit Krokodilund Pinanschlüssen zurückgegriffen werden.   Abb. 3: Zubehör-Boxen mit Materialien für die Eingabe (grün: Taster und Ultraschalldistanzmesser) und Ausgabe (gelb: DC-Motor und Hubmagnet)  Einsatz von Skill Cards und Story Cards 309 20 Thomas Schmalfeldt   2.4 Challenge Cards Den Challenge Cards kommt eine andere Funktion zu als den zuvor beschriebenen Materialien. Sie lassen sich unabhängig von den Skill Cards und den Story Cards nutzen und können auch bei der Arbeit mit anderen Mikrocontrollern eingesetzt werden. Aus diesem Grund wird dieser Bestandteil des Materialsets im vorliegenden Beitrag nur am Rande erwähnt. Ganz allgemein lässt sich jedoch festhalten, dass es sich dabei um eine Sammlung von möglichen Problemstellungen handelt, welche die Schülerinnen und Schüler mithilfe ihrer bis zum gegebenen Zeitpunkt aufgebauten Kompetenzen bearbeiten können (vgl. Abb. 4). Sie bilden den Ausgangspunkt für die zu erfindenden Geschichten.    Abb. 4: Eine Auswahl an Challenge Cards Der Einsatz der Challenge Cards lässt sich verschiedenartig gestalten. So kann eine bestimmte Karte die Problemstellung für die ganze Klasse bzw. eine Gruppe vorgeben oder die einzelnen Schülerinnen und Schüler ziehen individuell eine Karte. Des Weiteren kann die Arbeit in Projektteams, in Partneroder in Einzelarbeit stattfinden. Die Sammlung der Challenge Cards lässt sich durch die Lehrpersonen, aber auch durch die Schülerinnen und Schüler selbst jederzeit erweitern. 3 Konzeption der Kartensets Die hinter der Entwicklung der Skill Cards und der Story Cards stehende Idee grenzt sich von Konzepten, die in Büchern wie „Das Calliope-Buch“ [Be17] oder „Calliope mini: coden, basteln, entdecken“ [Ki18] vorgeschlagen werden, insofern ab, als diese stark auf Projekten basieren, bei denen die Schülerinnen und Schüler die vorgegebene Lösung schrittweise nachprogrammieren können. Die grundlegenden Konzepte des Programmierens werden bei diesem Ansatz im Zusammenhang mit den jeweiligen Projekten erläutert. Die „Scratch Coding Cards“ [Ru16] wiederum greifen solche Basiskonzepte, die sich die Schülerinnen und Schüler in kurzen Programmsequenzen aneignen sollen, auf einzelnen Karten auf. Diese Sequenzen werden aber ebenfalls an konkreten Beispielen festgemacht. So wird beispielsweise das Konzept der zufälligen  310 Thomas Schmalfeldt Einsatz von Skill Cards und Story Cards für einen kreativitätsfördernden Informatikunterricht 21   Zahlen anhand eines zufällig generierten Songs aufgezeigt. Da am Ende jeweils ein funktionsfähiges Produkt vorliegt, führen solche projektbasierten Ansätze zwar fortlaufend zu Erfolgserlebnissen; es besteht jedoch die Gefahr, dass die Schülerinnen und Schüler die einzelnen Projekte der Reihe nach abarbeiten, ohne danach in der Lage zu sein, ihre Fertigkeiten später auf einen anderen Kontext zu übertragen. Im Gegensatz dazu verfolgen die Skill Cards zunächst einen technischen Ansatz. So wird beispielsweise das Erzeugen von zufälligen Zahlen ohne die Vorgabe einer konkreten Umsetzung vorgestellt. Daher ist darauf zu achten, dass die Schülerinnen und Schüler immer wieder die Gelegenheit erhalten, ihre neu erworbenen Fertigkeiten und Kompetenzen in von der Lehrperson gezielt gewählten Projekten anzuwenden. In den ersten Unterrichtssequenzen können diese Projekte, wie dies in den beiden oben erwähnten Büchern vorgeschlagen wird, eher eng geführt sein, sodass es mit Sicherheit zu Erfolgserlebnissen kommt. Dennoch ist von entscheidender Bedeutung, dass auch die Story Cards bereits in der Anfangsphase eingesetzt werden, weil die kreative Arbeit damit ebenfalls erlernt werden muss. Im weiteren Verlauf des Schuljahres können die Schülerinnen und Schüler mit zunehmender Selbstständigkeit individuelle Projekte verfolgen. Die Entwicklung der Story Cards wurde durch die „Tiles IoT Cards“ [MGD17] inspiriert, wobei Letztere primär den Ideenfindungsprozess fokussieren, während die konkrete Umsetzung dieser Ideen nicht im Zentrum steht. In dieser Hinsicht unterscheiden sich die „Tiles IoT Cards“ denn auch von den neu entwickelten Kartensets, welche durch die Kombination von Skill Cards und Story Cards die praktische Umsetzung der eigenen Projekte nicht nur ermöglichen, sondern dies auch explizit zum Ziel haben. Der Einsatz der beiden Kartensets erfolgt in verschiedenen Phasen des Lernprozesses: Mittels der Skill Cards werden wie erläutert die technischen Grundlagen aufgebaut, während die Story Cards die Funktion haben, die Schülerinnen und Schüler zum Erzählen einer Geschichte anzuregen. Es geht beispielsweise nicht darum, dass die Jugendlichen mit einem Distanzmesser eine LED zum Blinken und eine Melodie zum Erklingen bringen, sondern vielmehr darum, dass sie die Geschichte von einem Wichtel erzählen, der mit seinen Augen funkelt und zu pfeifen beginnt, wenn man in seine Nähe kommt. Oder die Jugendlichen erfinden eine digitale Schatztruhe, in der sie ein Geheimnis aufbewahren können, das nur an spezielle Freundinnen und Freunde weitergegeben wird. Während mit den Skill Cards auf der mittleren Taxonomiestufe nach Anderson und Krathwohl [AK01], das heißt auf der Stufe des Anwendens, gearbeitet werden kann, eignen sich die Story Cards aufgrund des Anspruchs einer kreativen Umsetzung für die Arbeit auf der höchsten Taxonomiestufe, derjenigen des Erschaffens oder Kreierens [Ro08]. Wie die Karten in einer Testklasse probeweise konkret eingesetzt wurden, wird nachfolgend im Sinne eines Praxisberichts kurz dargelegt. Einsatz von Skill Cards und Story Cards 311 22 Thomas Schmalfeldt   4 Einsatz im Unterricht In der Deutschschweiz wird Informatik im neu erarbeiteten gemeinsamen Lehrplan 21 in Kombination mit Medienbildung im 5. bis 7. sowie im 9. Schuljahr mit je einer Wochenlektion aufgeführt. Die Einführung des Lehrplans 21 findet in den verschiedenen Kantonen gestaffelt statt. Im Kanton der Testklasse wird das Schulfach „Medien und Informatik“ auf der Sekundarstufe I (7. bis 9. Klasse) mit Beginn des Schuljahres 2019/2020 eingeführt. Die nachstehenden Ausführungen beziehen sich auf die erste praktische Erprobung der Unterrichtsmaterialien in einer Klasse des 8. Schuljahrs. Im Anschluss daran werden Beobachtungen aus dem Unterricht und erste Rückmeldungen der Schülerinnen und Schüler berichtet. 4.1 Durchführung der Unterrichtssequenzen Der Informatikunterricht in der Testklasse hatte im Sommer 2018 begonnen und erstreckte sich über das ganze Schuljahr. Die 12 Schülerinnen und Schüler (je zur Hälfte Mädchen und Jungen) besaßen zu jenem Zeitpunkt noch keine Informatikvorkenntnisse. Die im Folgenden berichteten Beobachtungen stammen aus dem ersten Schulhalbjahr, in welchem insgesamt 20 Informatik-Unterrichtssequenzen stattfanden. Der Autor des vorliegenden Beitrags fungierte zugleich als unterrichtende Fachlehrperson.  Den Schülerinnen und Schülern standen während des ganzen Schuljahrs sowohl ein persönlicher Laptop als auch je ein Calliope mini zur Verfügung. Obwohl der Calliope mini ursprünglich für die frühen Schuljahre konzipiert wurde, fiel die Wahl auf diesen Mikrocontroller, da er einen auf Physical Computing basierenden Unterricht ermöglicht und verschiedene Programmierumgebungen verfügbar sind. Die elementaren Programmierkonzepte wie Schleifen, bedingte Anweisungen oder Variablen wurden vornehmlich im Klassenunterricht, ergänzt durch Erklärvideos, aufgebaut. Zusätzlich wurden in der ersten Unterrichtssequenz zwei Skill Cards eingeführt: Die erste Skill Card beschrieb das Darstellen von Zahlen, Buchstaben und Symbolen auf der LED-Matrix des Calliope mini, mit der zweiten Karte konnte die Verwendung der beiden auf der Platine verbauten Taster erlernt werden. Dabei zeigte sich bereits eine erste Herausforderung bei der Arbeit mit den Skill Cards: Blockbasierte Programmierumgebungen wie MakeCode bieten jeweils alle verwendbaren Blöcke an, während auf den Skill Cards wegen ihrer beschränkten Größe und zur Erhöhung der Verständlichkeit nur der Umgang mit einer Auswahl der verfügbaren Blöcke vorgezeigt wird. Dies bereitete den Schülerinnen und Schülern jedoch wenig Mühe. Die meisten konzentrierten sich zwar sich hauptsächlich auf die konkret beschriebenen Blöcke, aber es gab auch solche, die andere Blöcke ausprobierten.  Neben der Arbeit mit neuen Skill Cards wurde im Klassenverband auch viel Zeit dafür aufgewendet, Wege aufzuzeigen, wie kreative Geschichten erzählt werden können, ohne dass man sich technisch überfordert. Mithilfe verschiedener Methoden, unter anderem aus dem Design Thinking [ID03], wurde mit den Schülerinnen und Schülern die 312 Thomas Schmalfeldt Einsatz von Skill Cards und Story Cards für einen kreativitätsfördernden Informatikunterricht 23   Herangehensweise im Kreativprozess thematisiert und vielseitig umgesetzt. Sie lernten dabei, ein Projekt zu planen, in Gruppen zusammenzuarbeiten, Prototypen herzustellen, zu testen und zu erweitern, den Prozess zu dokumentieren und ein finales Produkt herzustellen, das anschließend in der Klasse präsentiert wurde. 4.2 Beobachtungen und erste Rückmeldungen zum Unterrichtskonzept Wie in Abschnitt 4.1. bereits erwähnt wurde, hatten die Schülerinnen und Schüler zuvor noch keine Programmiererfahrungen gesammelt. In einer informellen Befragung am Anfang des Schuljahres, in der nach den Einstellungen zur Informatik gefragt wurde, reichten die Antworten über das ganze Spektrum hinweg: Ein Schüler hielt fest, dass er beabsichtige, später eine Lehre als Informatiker zu beginnen, während ein anderer Schüler bereits in der ersten Lektion klarstellte, dass er Informatik „doof“ finde. Obwohl die Einstellungen zur Informatik zu Beginn der Unterrichtsreihe somit sehr unterschiedlich ausgefallen waren, arbeiteten die Schülerinnen und Schüler im Unterricht engagiert mit. Sie waren schnell in der Lage, selbst erste Programme zu erstellen und diese auf dem Calliope mini laufen zu lassen. Entsprechend erhielten die Jugendlichen schon in der zweiten Veranstaltung den Auftrag, eine eigene Projektidee zu entwickeln.   Abb. 5: Prototyp eines mithilfe des Calliope mini gesteuerten Radroboters Da die Schülerinnen und Schüler im Laufe des ersten Schulhalbjahres unterschiedlich viele Story Cards erworben hatten, differenzierten sich die Niveaus im Unterricht fortlaufend aus. Dies ermöglichte es der Lehrperson, kleine Projektteams zusammenzustellen, in denen sich die einzelnen Schülerinnen und Schüler gut ergänzten. Die Jugendlichen organisierten sich aber auch selbst. So berichtete ein Schüler, dass er sehr gern mit einem anderen Schüler zusammenarbeite, weil dieser ein Experte im Umgang mit Hardware sei, während seine eigene Stärke im Programmieren liege (womit er das Entwickeln von geeigneten Algorithmen meinte). Ein anderer Schüler hatte beobachtet, dass eine Mitschülerin für ihr Projekt einen Entfernungsmesser nutzte (vgl. Abb. 5). Er bat sie um Hilfe, konnte sein eigenes Projekt entsprechend erweitern und erhielt nach einem kurzen Gespräch mit der Lehrperson selbst die Story Card mit dem Entfernungsmesser.  Einsatz von Skill Cards und Story Cards 313 24 Thomas Schmalfeldt   5 Fazit und Ausblick  Die im vorliegenden Beitrag vorgestellten Skill Cards und Story Cards wurden probehalber bereits über ein halbes Schuljahr hinweg in einer Klasse des 8. Schuljahrs eingesetzt und dabei fortlaufend weiterentwickelt. Die verschiedenen Materialien haben sich bewährt. Während sich die Skill Cards erwartungsgemäß unkompliziert einsetzen ließen, musste für die Arbeit mit den Story Cards zu Beginn viel Zeit aufgewendet werden. Wie formative Leistungsdiagnosen während des Unterrichts ergaben, scheinen der angestrebte Kompetenzaufbau im Programmieren wie auch die Ziele der Kreativitätsförderung mehrheitlich erreicht worden zu sein. Darüber hinaus konnte eine Verbesserung der Zusammenarbeit in Teams beobachtet werden. Empirisch aussagekräftige Resultate werden jedoch erst am Ende des Forschungsprojekts vorliegen. Für das Schuljahr 2019/2020 ist eine erweiterte Erprobung in etwa drei bis fünf Klassen vorgesehen. Im Schuljahr 2020/2021 werden die Skill Cards und die Story Cards mit einem Mixed-Method-Ansatz umfassend evaluiert. Für die größer angelegte Evaluierungsphase ab 2020 wird das zurzeit noch zweckmäßig gehaltene Erscheinungsbild der Karten vereinheitlicht und ansprechender gestaltet. Sämtliche Materialien werden ab diesem Zeitpunkt öffentlich verfügbar sein. Literaturverzeichnis  [AK01] Anderson, L.; Krathwol, D.: A Taxonomy of Learning, Teaching, and Assessing, Longman, New York, 2001. [Be17] Bergner, N. et al.: Das Calliope-Buch: Spannende Bastelprojekte mit dem Calliope-Mini-Board, dpunkt.verlag, Heidelberg, 2017. [ID03] IDEO: IDEO Method Cards: 51 Ways to Inspire Design. William Stout Architectural Books, San Francisco, 2003. [Ki18] Kiefer, Ph.: Calliope mini: coden, basteln, entdecken, Vierfarben, Bonn, 2018. [MGD17] Mora, S.; Gianni, F.; Divitini, M.: Tiles: A Card-based Ideation Toolkit for the Internet of Things. In: Proceedings of the 2017 Conference on designing interactive systems. ACM, New York, S. 587-598, 2017. [PR18] Przybylla, M.; Romeike, R.: Impact of Physical Computing on Learner Motivation. In: Proceedings of the 18th Koli Calling International Conference on Computing Education Research (Koli Calling ’18). ACM, New York, Article No. 9, 2018. [Ro08] Romeike, R.: Kreativität im Informatikunterricht, Dissertation. Universität Potsdam, Potsdam, 2008. [Ru16] Rusk, N.: Scratch Coding Cards, No Starch Press, 2016. [TF09] Trilling, B., Fadel, C.:  21st century skills: learning for life in our times, Jossey-Bass, San Francisco, 2009. 314 Thomas SchmalfeldtcbaHerausgeber et al. (Hrsg.): Name-der-Konferenz,10 Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019Das RetiBNE CaféEin Konzept für Repair Cafés in der informatischen BildungAnn-Katrin Schmidt1, Carsten Schulte1Abstract:„Reparieren statt wegwerfen“ – eine Einstellung, die sich wachsender Beliebtheit erfreut. Invielen Städten weltweit lassen sich Repair Cafés ﬁnden, die der Ö entlichkeit einen Anlaufpunkt für dieReparatur technischer Geräte, wie z. B. Fahrräder, elektronische Haushaltsgeräte etc., bieten. In diesemArtikel beschreiben wir einen Transfer der Idee in die informatische Bildung. Dabei ergänzen wir dasursprüngliche Konzept um zwei Innovationen: einerseits wird der Reparaturprozess durch integrierteReﬂexionen begleitet und andererseits liegt bei uns der Schwerpunkt auf Software-Reparatur (stattHardware-Reparatur). Das Konzept ist im Zusammenhang mit der Reparatur von Smartphones vonStudierenden entwickelt und mit Schulklassen erprobt worden. Daher werden erste Erfahrungen zurWirkung und Durchführung des Konzepts vorgestellt und ergänzend Möglichkeiten beschrieben, wiedas Konzept in schulischen und außerschulischen Bildungskontexten als Teil einer informatischenBildung integriert werden kann.Keywords:Repair Café; Reparieren; Bildung für nachhaltige Entwicklung (BNE); Software-Reparatur;Software-Upcycling1 EinleitungAm 25. September 2015 hat die Generalversammlung der Vereinten Nationen eine Re-solution mit dem Titel „Transformation unserer Welt: die Agenda 2030 für nachhaltigeEntwicklung“ verabschiedet. Dort werden 17 übergeordnete Ziele für eine nachhaltigeEntwicklung formuliert, für dessen Erreichung sich die Gemeinschaft global einsetzt. Ziel 4stellt dabei den Bereich „Bildung“ in den Mittelpunkt [UN15].„Bildung für nachhaltige Entwicklung (BNE) ermöglicht es dem Individuum, aktiv ander Analyse und Bewertung von nicht nachhaltigen Entwicklungsprozessen teilzunehmen,sich an Kriterien der Nachhaltigkeit im eigenen Leben zu orientieren und nachhaltigeEntwicklungsprozesse gemeinsam mit anderen lokal wie global in Gang zu setzen“ [DH08].Um dies zu erreichen dient BNE der Entwicklung der sogenannten Gestaltungskompetenz.Sie umfasst unterschiedliche Teilkompetenzen, die für die Beurteilung von Entwicklungspro-zessen als wichtig erachtet und bei [Pr08] und [DH08] näher erläutert werden. Dazu gehörenu. a. die Fähigkeiten, interdisziplinär neues Wissen aufzubauen, Risiken und Gefahren zuerkennen und sich selbst aktiv in Entscheidungsprozesse einzubringen.1Universität Paderborn, Didaktik der Informatik, Fürstenallee 11, 33102 Paderborn, Deutschland,vorname.nachname@uni-paderborn.de cba doi:10.18420/infos2019-32Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 315Das RetiBNE Café 11Für einen Großteil der Fächer in Schulen bietet der „Orientierungsrahmen für den Lern-bereich Globale Entwicklung“ Themen und Vorschläge, die die Integrierung von BNEerleichtern und unterstützen sollen [KB16]. Das Fach Informatik ﬁndet in diesem Rahmenjedoch keine Berücksichtigung.Die schnelle technische Entwicklung und Verbreitung digitaler Artefakte im Alltag, machtes nach unserer Ansicht wichtig, sich auch in der informatischen Bildung mit nachhalti-gen Entwicklungsprozessen auseinanderzusetzen. Das RetiBNE Projekt der UniversitätOldenburg versucht, diese Lücke zu schließen, indem es das Ziel verfolgt, „Reparaturwissenund -können als Element einer technischen und informatischen Bildung für nachhaltigeEntwicklung“ (kurz RetiBNE) zu vermitteln [Ar19]. Als Kooperationspartner bei diesemProjekt haben wir ein Konzept entwickelt, welches die Grundidee sogenannter Repair Cafésaufgreift und in die informatische Bildung integrieren will.2 Konzeptentwicklung und KontextUnser Konzept stellt einen neuartigen Ansatz dar, der – soweit wir wissen – bisher nichtim Rahmen von Allgemeinbildung in den entwickelten Ländern getestet worden ist. Esgibt ähnliche Ideen, z.B. im Kontext der Entwicklungsländer [JPK11,AJR15] oder derInformatik im Allgemeinen [ARE15,Ho16]. Unser Ansatz sieht vor, Interessierte aktivin die Reparatur defekter digitaler Artefakte einzubeziehen und die Geräte auf dieseWeise besser zu verstehen. Dafür sind drei verschiedene Quellen zu einem stimmigenKonzept zusammengesetzt worden: Dualitätsrekonstruktion [Sc08], Ideen aus der Bildungfür nachhaltige Entwicklung [DH08] und das Grundkonzept der Repair Cafés.Umfragen zeigen, dass Nachhaltigkeit für 64% der deutschen Teenager ein wichtiges Themaist, jedoch meist in deutlichem Zusammenhang mit Klimawandel, Armut und Welthungerbetrachtet wird. Der Einsatz technischer Geräte in der eigenen Alltagsrealität spielt hingegennur eine Nebenrolle [Bo09]. Die fehlende technischen Perspektive in der BNE greift dasProjekt RetiBNE der Universität Oldenburg auf. In dessen Rahmen sind gemeinsam mitKooperationspartnern eine Vielzahl von Unterrichtseinheiten entwickelt worden, die denAufbau von Reparaturwissen und -können unterstützen.2Im Mittelpunkt unseres Konzepts steht die Idee der Repair Cafés: Die meisten Initiativen inDeutschland sind Teil des „Netzwerk Reparatur-Initiativen“, das niederländische Netzwerk„Stichting Repair Café“ ist auch international tätig.3In der Regel werden die RepairCafés von Freiwilligen konzipiert, vorbereitet und betreut und stellen neben technischenund ressourcenschützenden Aspekten auch soziale Tre punkte für Menschen aus denunterschiedlichsten Kontexten dar.Im Wintersemester 2017/2018 haben sich Lehramtsstudierende der Universität Paderbornintensiv mit dem RetiBNE Projekt beschäftigt. Im Seminar in der Didaktik der Informatik2Zugri  auf Materialien und weitere Informationen zum Projekt ﬁnden sich unterhttp://www.retibne.de/3Für weitere Informationen siehe https://repaircafe.org/de/316 Ann-Katrin Schmidt, Carsten Schulte12 Ann-Katrin Schmidt, Carsten Schultewerden zu ausgewählten Themen Konzepte für Schulklassen erarbeitet, die einen Zyklusaus praktischer Erprobung, Reﬂexion und Überarbeitung durchlaufen. Zusätzlich werdenForschungsfragen im Zusammenhang mit dem Projekt bearbeitet. Damit folgt das Seminarden in [HS11] entwickelten Ideen zur Verbesserung der Lehrerbildung.Für das Konzept ist die Unterrichtsreihe „Smartphone – Herstellung, Nutzung und Ent-sorgung“ aus dem RetiBNE Projekt genutzt und von den Studierenden für ihre Zieleangepasst und ergänzt worden. Die entstandene 3-stündige Lehr-Lerneinheit behandeltThemen wie den persönlichen Handykonsum, Aufbau und enthaltene Rohsto e sowieHerstellung und Produktion von Smartphones, die im Hinblick auf Nachhaltigkeit, (spar-samen) Ressourcenverbrauch und den ökologischen Fußabdruck diskutiert werden. Derinhaltliche Rahmen wird durch einen Praxisteil ergänzt, der die Reparatur von defektenoder alten Handys und Zubehör thematisiert. Neben der üblichen Hardware-Reparaturin Repair Cafés, verfolgt unser RetiBNE Café zusätzlich die Reparatur von veralteterSoftware und dessen Anpassung an die eigenen Bedürfnisse. Teilnehmende sollen nicht nurReparaturwissen erlangen und praktisch anwenden, sondern auch die duale Natur digitalerArtefakte kennenlernen. Wir vermuten, dass tiefergehende Kenntnisse über die duale Naturund Zusammenhänge im digitalen Artefakt zu einem besseren Verständnis beitragen undauf zukünftige Reparaturprobleme vorbereiten können.3 Konzept des RetiBNE Cafés im DetailNachfolgend wird das Konzept und die Inhalte der einzelnen Phasen vorgestellt.•15 min Einführung: persönliche Handynutzung und -konsum, Aufbau eines Handys•15 min Gruppenarbeit: Rohsto e im Handy, Herstellung des Handys•15 min Präsentation und Reﬂexion: Goldwert in Handys•90 min o ene Reparaturphase an Stationen•10 min Reﬂexion der Reparaturphase•25 min Selbsttest und Gruppendiskussion: ökologischer Fußabdruck und Nachhaltig-keit im Alltag•10 min abschließende Reﬂexion inkl. BlitzlichtEinführungsphaseDie Einführungsphase beginnt mit der Frage nach der Anzahl der Handys im Besitz derTeilnehmenden (aktuelle und nicht mehr genutzte Geräte). Die Ergebnisse werden o en ander Tafel gesammelt, sodass sich jeder ein eigenes Urteil über den individuellen Handykon-sum bilden kann. Zusätzlich wird der durchschnittliche Besitz an Handys für die Gruppeberechnet.Als nächstes sollen sich die Teilnehmenden über Materialien in ihren Smartphones informie-ren. Dazu erfolgt eine Gruppenarbeit, in der zu einigen Metallen und Erzen sowie SeltenenErden gezielt Informationen gesammelt werden. Recherchiert wird dabei zum Wert desRohsto s, dem Herkunftsland, den Abbauverfahren, möglichen Folgen für die Region sowiezur Wiederverwendbarkeit und zum Recycling der Materialien. Anschließend werden dieDas RetiBNE Café Ein Konzept für Repair Cafés in der informatischen Bildung 317Das RetiBNE Café 13Ergebnisse im Plenum vorgestellt.Darüber hinaus erfolgt eine Berechnung des Goldwerts: Unter Annahme des durchschnittli-chen Handybesitzes der Gruppe wird eine Hochrechnung auf die Schule und die entspre-chende Region vorgenommen. Das Ergebnis dient als Motivation, um über das Potenzial derEinsparung von Ressourcen durch Recycling zu diskutieren. Diese Aktion stellt sicher, dassder eigene Handykonsum als Teil der wirtschaftlichen Ressourcennutzung berücksichtigtund realisiert wird.ReparaturphaseDie Reparaturphase erfolgt selbstbestimmt durch die Teilnehmer, sodass sie entsprechendihrer Interessen frei wählen können, ob sie in Einzelarbeit oder Kleingruppen reparierenund an welchen der drei Stationen sie arbeiten möchten. Aktuell stehen dafür die Stationen„Kabelbruch“, „Displaybruch“ und „Basteln“ zur Auswahl. Während der gesamten Phasewerden die Teilnehmenden von der Hauptfrage „Warum funktioniert diese Funktion oderdas digitale Artefakt nicht?“ geleitet.Für die einzelnen Stationen stehen Ansprechpartner zur Verfügung, die als Mentorennach dem Prinzip der minimalen Hilfe [Ae83] agieren. Damit wird das Ziel verfolgt, dieTeilnehmenden möglichst autonom handeln und lernen zu lassen und ihnen bei Bedarf durchentsprechenden Input Ideen für die Weiterarbeit mitzugeben. Die Hilfestellungen erfolgen da-bei mit Blick auf die Dualitätsrekonstruktion [Sc08], die eine di erenziertere Formulierungder Hauptfrage „Warum funktioniert es nicht“ anregen soll. Durch dieses Vorgehen könnendie Teilnehmenden die beiden Seiten des digitalen Artefakts, das Architekturverständnisund das Bedeutungsverständnis, selbstständig entdecken4.Darüber hinaus haben wir festgestellt, dass der konkretere und di erenziertere Ansatzzum Verständnis des Problems (und damit des Artefakts) der Zerlegung des Warumsdurch Tinbergen [Ti63] in der Verhaltensbiologie ähnelt. Tinbergen hat vermutet, dass einintegratives Verständnis von Verhalten eine di erenzierte Art der komplexen „Warum“-Frage benötigt. Daher haben wir vier Aspekte des Warum angepasst, um digitale Artefakte(oder deren Dysfunktion) in ihrer Gesamtheit zu erfassen. Um die Bedeutung des Artefaktszu verstehen, können wir fragen „Was ist der Zweck des digitalen Artefakts?“ und „Welchesoziokulturellen Einﬂüsse führen zu diesem Artefakt?“. Mit Blick auf die Architekturkönnen wir fragen: „Durch welche Bestandteile wird das Artefakt ermöglicht?“ und „Wiearbeiten diese Bestandteile zusammen?“. Diese di erenzierten Aspekte ermöglichen dieKategorisierung und Analyse jedes einzelnen Schritts eines freien und selbstbestimmtenReparaturprozesses, der in der Regel zu komplex ist, um ihn zu erfassen.Die Stationen „Displaybruch“ und „Kabelbruch“ laden die Teilnehmenden ein, Handysoder Teile davon in langsamen Schritten zu entdecken. Eine besondere Rolle in unseremKonzept spielt die Station „Basteln“, die keinen klaren Reparaturauftrag besitzt. Einerseitskönnen die Teilnehmenden unterschiedliche alte Mobiltelefone vergleichen und mit Hilfeder adaptierten Formen des „Warum“ den architektonischen Entwicklungspfad als Teil4Wir haben uns dafür entschieden die Begri e Architektur (statt Struktur) und Bedeutung (statt Funktion) zuverwenden, da diese den dualen Charakter nach unserer Erfahrung leichter zu verstehen und zu verwenden macht.318 Ann-Katrin Schmidt, Carsten Schulte14 Ann-Katrin Schmidt, Carsten Schulteder Dualitätsrekonstruktion entdecken. Andererseits bietet sich die Möglichkeit, überdie Begri e „defekt“ und „reparieren“ in Bezug auf Software und damit über Software-Upcycling oder die alternative Nutzung technischer Artefakte nachzudenken. Da diesebeiden Konzepte neu und wichtig für unser Konzept sind, stellen wir sie an dieser Stelle vor:UnterSoftware-Reparaturverstehen wir die Aktualisierung älterer Smartphones, die nichtmehr vom Hersteller unterstützt werden, auf aktuellere Betriebssysteme. Aus praktischenGründen liegt hierbei der Schwerpunkt auf Android-Smartphones. Geplante Obsoleszenzbasiert oft auf Softwareproblemen, genauer gesagt auf dem Betriebssystem, und nicht aufHardware-Gründen. Dies ist auf eine schlechte Update-Politik der Hersteller von Android-Smartphones zurückzuführen. So liefert beispielsweise einer der größten Hersteller Updatesfür sein Flaggschi modell im besten Fall für 2 Jahre, bei Midrange-Smartphones nochkürzer oder gar nicht. Einerseits ist der Sicherheitsaspekt ein Problem, andererseits bedeutetveraltete Software, dass neue Apps irgendwann nicht mehr funktionieren und damit dasSmartphone obsolet machen.UnterSoftware-Upcyclingverstehen wir den Einsatz alter Hardware in anderen Anwen-dungsbereichen, z.B. die Verwendung eines alten Smartphones als Fahrradcomputer oderÜberwachungskamera. In Gesprächen mit Lehrkräften ist die Rolle von Smartphones alsStatussymbol als noch wichtiger identiﬁziert worden, als die Verwendung modernsterSoftware. Deshalb bieten wir die Möglichkeit eigene ROMs zu verwenden, die ständig neueVersionen liefern und eine enorme Vielfalt an Individualität bieten. Nicht nur ältere Gerätekönnen auf diese Weise eine Art zweites Leben erfahren, die durch die Nutzung in neuenKontexten ermöglicht wird.ReﬂexionsphaseIn der abschließenden Reﬂexionsphase werden im Plenum die individuellen Erfahrungenaus der Reparaturphase gesammelt. Die Teilnehmenden sollen dabei auch diskutieren, wieviele ihrer eigenen Handys repariert oder anderweitig wiederverwendet werden könnten.An dieser Stelle soll auch die Software-Reparatur und das Software-Upcycling nochmalin den Blick genommen werden. Durch die Frage, was eine selbstständige Anpassungeines digitalen Artefakts bedeuten könnte, soll über die beiden Konzepte nachgedacht unddiskutiert werden.Diese Phase dient darüber hinaus auch dazu, den Handykonsum und das Reparierenmit dem Themenkomplex der Nachhaltigkeit zu verknüpfen. Die Teilnehmenden lernenden ökologischen Fußabdruck kennen und ermitteln mit Hilfe eines Online-Fragebogensihren persönlichen Fußabdruck. Eine Eigenreﬂexion soll hier durch die Bekanntgabedes nachhaltigen Fußabdrucks und des deutschen Durchschnitts angeregt werden. Damitverfolgen wir das Ziel, dass Fragen der Nachhaltigkeit im Alltag bewusster wahrgenommenwerden und beispielsweise die Einsparung von Ressourcen durch längere Nutzung vondigitalen Artefakten und Maßnahmen wie Reparaturen und Upcycling erreicht werden kann.Das RetiBNE Café Ein Konzept für Repair Cafés in der informatischen Bildung 319Das RetiBNE Café 154 Erste Ergebnisse und Reﬂexionen zum KonzeptDas im vorherigen Abschnitt vorgestellte Konzept zu unserem RetiBNE Café ist bei Schul-klassenbesuchen erprobt und reﬂektiert worden. Dazu sind mehrere Beobachter anwesendgewesen, sodass allgemeine Eindrücke und Feedback aus freien Beobachtungen gesammeltwerden konnten. Ergänzend haben die verantwortlichen Studierenden zu ausgewähltenAspekten Bewertungsinstrumente vorbereitet und ausgewertet. Die hier vorgestellten Er-gebnisse basieren auf Besuchen von drei Klassen von drei verschiedenen Schulen undSchultypen. Insgesamt haben 67 Schüler teilgenommen (26, 23, 18).Zu Beginn präsentieren wir allgemeine Ergebnisse, die auf den Beobachtungen der Studie-renden, der begleitenden Lehrkräfte, des Universitätspersonals und Ergebnissen aus denDurchführungen basieren. Der Gesamteindruck war dabei wie folgt: Alle Kurse sind vonallen Teilnehmenden gut angenommen worden (keine Polarisierung). Wir haben „typischpositive“ Phänomene von Exkursionen/Schülerlabortagen erlebt: die ansonsten ruhigen odergar negativ au allenden Schüler haben nicht nur im Hinblick auf ihr gewohntes Verhalten,sondern auch im Verhältnis zum Rest des Kurses einen guten bis sehr guten Beitrag geleistet.Alle Teilnehmer sind sehr konzentriert oder zumindest ruhig gewesen, sodass es zu keinenStörungen kam. Häuﬁge Aussagen von Schülern während der jeweiligen Repair Caféswaren: „[Tag] war cool“, „Interessant, das Handy von innen zu sehen“, „cool, dass man auchseine eigenen Sachen mitbringen kann [defekte oder alte Geräte]“, „man konnte sich gutversuchen, da man keine Angst hatte, etwas zu beschädigen, weil alles schon kaputt war“.Beobachtungen von Studierenden und Lehrkräften: Die Mini-Statistik über den eigenenHandykonsum faszinierte Schüler und Lehrer gleichermaßen und könnte ein guter Aus-gangspunkt für weitere interessante Unterrichtsstunden sein.Die Suche nach grundlegenden Informationen über die Reparatur von Handys ist mittelsYouTube sehr einfach gewesen, als altersgerecht angesehen und daher gut angenommenworden. Die o ene Reparaturphase ist als „didaktisch aufgeschlossen und methodenfrei“angesehen worden, was die Schüler sehr geschätzt und mit großer Motivation genutzt haben.Diese o ene Phase ist mit den „Warum“-Fragen sinnvoll angereichert worden und hat zumweiteren Nachdenken angeregt.Neben der allgemeinen Beobachtung sind systematische Daten zu drei verschiedenenFragen gesammelt worden. Uns hat u.a. interessiert, welche der Stationen „Kabelbruch“,„Displaybruch“ und „Basteln“ die Schüler am meisten fasziniert hat. Es hat sich herausgestellt,dass alle Stationen als ähnlich faszinierend angesehen worden sind. Wenn die Schülermehrere besucht haben, scheint es keine Tendenz zu geben, welche sie bevorzugen.Ein weiterer Aspekt unserer Beobachtungen ist der Einﬂuss von Gruppenkonstellationenauf den Reparierprozess. Aufgrund des relativ hohen Aufwandes einer Beobachtungsstudiehaben wir uns auf eine exemplarische Beobachtung von Gruppen konzentriert. Für dieBewertung der Gruppenkonstellationen ist ein Beobachtungsbogen erstellt und verwendetworden. Dieser beinhaltet insgesamt neun Verhaltensmuster, die sich in fünf kooperative320 Ann-Katrin Schmidt, Carsten Schulte16 Ann-Katrin Schmidt, Carsten Schulteund vier nicht kooperative Verhaltensweisen unterteilen. In zwei der drei Klassenbesuchekonnten wir vier klar wahrnehmbare Gruppen an insgesamt drei Stationen beobachten.Was das kooperative Verhalten betri t, so lässt unsere Datenerhebung vermuten, dass zweibis drei Personen eine vorteilhafte Gruppengröße darstellen. In einer Gruppe mit vierPersonen hat mindestens eine Person ein „unbeteiligtes Zuhören“ gezeigt und insgesamt isteine geringere aktive Teilnahme an der Aufgabe wahrgenommen worden. Zusätzlich gehenwir davon aus, dass eine ausgewogene Zusammensetzung aus „Experten“ und „Neulingen“dazu beiträgt, alle Beteiligten persönlich einzubeziehen.Bei den nicht kooperativen Aktivitäten haben wir festgestellt, dass 2 von 4 Gruppen zwi-schenzeitlich „nicht aufgabenbezogenes Arbeiten“ gezeigt haben. Weitere nicht kooperativeVerhaltensweisen sind von uns nicht beobachtet worden.Schließlich hat uns interessiert, inwieweit sich die Teilnehmer nach dem Besuch im RetiBNECafé noch mit dem Thema Reparatur beschäftigt haben. Dazu haben die Teilnehmendenzwei Wochen nach dem Besuch unseres Repair Cafés einen Fragebogen mit Aussagenerhalten, die sie bewerten sollten. 49 von 56 ausgefüllten Fragebögen waren gültig und indie Auswertung einbezogen.Wir haben die Elemente des Fragebogens in drei „Aktionsphasen“ zusammengefasst: Expe-rimentieren, Reﬂexion sowie erfolgreicher Abschluss. Wir erachten für einen erfolgreichenAbschluss ein vorheriges Experimentieren und Recherchieren zur Reparatur für notwendig,sodass die Befragten mehreren Aussagen zustimmen konnten. Daher ist es uns möglichgewesen, den Einﬂuss des RetiBNE Cafés zu bewerten:51,0% der Teilnehmer haben das Thema nicht weiter betrachtet (n=25). Insgesamt 37 malstimmen die Befragten Aussagen zu, die sich auf experimentelle Gedanken und Einﬂüssebeziehen. Des weiteren stehen 25 Antworten mit Reﬂexionsaktivitäten in Zusammenhang.Zusätzlich geben 10 von 49 Personen eine erfolgreiche Reparatur eines Handys/Kabels an.Insgesamt haben damit mindestens 15% aller 67 Teilnehmenden erfolgreich ein defektesKabel oder Handy nach dem Besuch im RetiBNE Café repariert.5 Diskussion des Konzepts im Kontext informatischer BildungNach Präsentation des Konzepts und den gewonnenen Ergebnissen werden wir das Konzeptim Kontext der informatischen Bildung diskutieren. Wir glauben, dass das Konzeptbekannte und etablierte Ziele der Informatik, wie z. B. Problemlösen, Verständnis derFunktionsweisen digitaler Artefakte und das Bewusstsein für gesellschaftliche Implikationen,anspricht. Darüber hinaus trägt es dazu bei, ein besseres Verständnis und eine detaillierteretheoretische Untermauerung dieser allgemeinen Ziele in der informatischen Bildung zuentwickeln.Die informatische Bildung und Informatik-Lehrpläne behaupten im Allgemeinen, einenwichtigen Aspekt für die Entwicklung von Fähigkeiten für das Leben in einer technologie-betriebenen Welt, für die Digitalisierung und zukünftige Entwicklungen beizutragen. Bellund Duncan erwähnen zum Beispiel die folgenden Ziele [BD18]:Das RetiBNE Café Ein Konzept für Repair Cafés in der informatischen Bildung 321Das RetiBNE Café 171.„Verständnis dafür wie alles funktioniert“2.„sie befähigen, Schöpfer [nicht nur] Verbraucher zu sein “3.(verstehen, dass) „die gleiche Hardware für die Arbeit mit einer Vielzahl vonInformationen verwendet werden kann“4.„Themen in den Kontext stellen“5.„werden sich bewusst, dass, wenn die Schüler etwas über Programmierung lernen,sie immer den Menschen im Auge behalten müssen“6.„lernen, sich darauf zu konzentrieren, die Bedürfnisse des Endverbrauchers über diedes Programmierer zu stellen“Im Hinblick auf das RetiBNE Café ist es interessant, dass die Studierenden und Teil-nehmenden oft zum ersten Mal in ihrem Leben ein Smartphone geö net und darübernachgedacht haben, wie es funktioniert (1). Die Reparatur und das Upcycling unterscheidensich vom täglichen Gebrauch als Nutzer und haben es ihnen ermöglicht, Schöpfer zu sein(2). Gleichzeitig trägt dies zur Idee bei, dass Geräte für etwas anderes verwendet werdenkönnen (3), z. B. kann ein altes Telefon als Fahrrad-Tacho wiederverwendet werden,Interessant ist auch, dass sich der Blick auf die Technologie (Smartphone) und die Nut-zungsmuster der Involvierten geändert haben: Sie haben begonnen, ihre Gewohnheiten zureﬂektieren und den Kauf eines neuen Telefons in einem breiteren ökologischen Kontext zusehen (4) und ein Bewusstsein dafür entwickelt, dass es nicht nur eine Sache der Nutzung ist,sondern auch Menschen außerhalb des eigenen Umfelds betri t (5,6). In diesem Sinne ist eseine Intention gewesen, durch die Anpassung, Reparatur oder das Upcycling eines Gerätes„Verantwortung zu übernehmen“. Anfangs wird das Reparieren eines alten Smartphones alsnicht wertvoll betrachtet, da diese eine Art Statussymbol sind – je neuer, desto besser. Aberdurch das Upcycling wird das Handy einzigartig, angepasst an die eigenen Handlungen undIdeen – und dann ist es wieder ein wertvolles Statussymbol, auf das die Lernenden stolzsind.Es wäre interessant, in weiteren Studien herauszuﬁnden, ob insbesondere die Station„Basteln“ für Hobby-Bastler von großem Wert sein könnte, wenn es um kollaborativeAspekte der gemeinsamen Reparatur nach den von Houston et al. [Ho16] aufgezeigtenAspekten geht.49% der deutschen Jugendlichen geben deutlich an, dass nicht nur Regierungen, Unternehmenund große Organisationen ihr Verhalten ändern müssen, sondern auch die Bevölkerung[Bo09]. Obwohl der Kontext der Frage in unserem Repair Café für nachhaltiges Verhaltenganz anders ist, haben auch hier 49% der Befragten angegeben, sich nach dem Besuch mitdem Thema beschäftigt zu haben. Darüber hinaus ist das Upcycling in den Kontext der„Wegwerfgesellschaft“ gestellt worden: die Schüler aus unseren Klassenbesuchen habenim Durchschnitt mindestens drei Handys und bis zu 8 Geräte besessen. Hier sind diezwei Wochen später gemessenen E ekte interessant. Nach unseren Erfahrungen und aufGrundlage von Gesprächen mit Anbietern außerschulischer Aktivitäten sind längerfristigeE ekte von einmaligen Angeboten schwer zu erreichen. Die Ergebnisse deuten also aufeine hohe Wirkung des RetiBNE Café hin.322 Ann-Katrin Schmidt, Carsten Schulte18 Ann-Katrin Schmidt, Carsten Schulte6 Mögliche Integration in BildungskontexteNach unseren gewonnen Erkenntnissen sehen wir das RetiBNE Café als gute Möglichkeitan, die informatische Bildung nicht nur in schulischen Bildungskontexten, sondern auchin außerschulischen Bereichen zu stärken. Daher möchten wir unser RetiBNE Café fürSchulklassen, Gruppen und interessierte Einzelpersonen ö nen und ihnen so die Möglichkeitgeben, Reparaturwissen und -können zu erwerben und im Kontext der Nachhaltigkeit zusehen. Wir sehen das RetiBNE Café daher auch als Beitrag zur Verbraucherbildung undwollen eine reﬂektierte Urteilsund Handlungsfähigkeit fördern.Unser Konzept soll daher auf zwei Arten weiter umgesetzt werden: Einerseits gibt es dieMöglichkeit an o enen Repair Café Sitzungen teilzunehmen und eigene defekte Kleingerätewie Handys, Tablets, Laptops o. ä. mitzubringen und mit Unterstützung von erfahrenenAnsprechpartnern zu reparieren. Auch hier soll das Konzept der Reparaturphase mit demGrundgedanken der Dualität als Leitlinie dienen und den Teilnehmenden ermöglichen, ihrtechnisches Gerät nicht nur zu reparieren, sondern auch insgesamt besser zu verstehen.Andererseits wird die Möglichkeit bestehen, den 3-stündigen Kurs in der hier vorgestelltenForm mit Gruppen zu besuchen.Bei der im August 2017 in Kraft getretenen Rahmenvorgabe Verbraucherbildung in Schulenin Nordrhein-Westfalen handelt es sich um eine fächerübergreifende Vorgabe, zu deren Um-setzung Schulen in ihren internen Lehrplänen verpﬂichtet sind. Ziel von Verbraucherbildungist die Entwicklung eines verantwortungsbewussten Verhaltens als Konsument, welchesreﬂektierte und informierte Entscheidungen beinhaltet. In der Rahmenvorgabe wird auchauf die Agenda 2030 der UN verwiesen. Sie sieht eine Entwicklung von konsumbezogenenKompetenzen vor, u. a. Sachkompetenz und Handlungskompetenz, in denen wir Parallelenzu Teilen der Gestaltungskompetenz erkennen.In unseren Augen kann das RetiBNE Café wichtige Beiträge zur Entwicklung dieser Kom-petenzen beitragen und diese um Kenntnisse und Fähigkeiten zur Reparatur von technischenGeräten erweitern. Denkbar wäre etwa, Teile des Konzepts in den Schulunterricht zuverlagern und sich bereits vorher mit Nachhaltigkeit, Rohsto gewinnung und Produktiontechnischer Kleingeräte auseinanderzusetzen. Im Besuch des RetiBNE Cafés kann danneine Vertiefung und Erweiterung um den Reparaturgedanken stattﬁnden und gleichzeitigpraktisch von Schülern erprobt werden. Im Anschluss an den Besuch bieten die neuenErkenntnisse Möglichkeiten zur Weiterarbeit im Unterricht, etwa über eine Diskussion dertechnischen und gesellschaftlichen Wechselwirkungen und Interessen.7 DanksagungUnser Dank geht an die Studierenden Dominik Brett, Jonas Laukötter, Ann-Katrin Schmidtund Dimitri Schneider. Sie haben die Schüler während der drei Repair Café Sitzungenhochmotiviert betreut und die hier vorgestellten Auswertungen durchgeführt. Gleichzeitigbedanken wir uns herzlich bei Jessica Krüger und Andreas Gödecke, die den Studierendenbei der Entwicklung des Konzepts mit Rat und Tat zur Seite standen.Das RetiBNE Café Ein Konzept für Repair Cafés in der informatischen Bildung 323Das RetiBNE Café 19Literaturverzeichnis[Ae83]Aebli, Hans: Zwölf Grundformen des Lehrens. Klett Cotta, Stuttgart, 1983.[AJR15]Ahmed, Syed Ishtiaque; Jackson, Steven J.; Rifat, Md. Rashidujjaman: Learning to Fix:Knowledge, Collaboration and Mobile Phone Repair in Dhaka, Bangladesh. In: Proceedingsof the Seventh International Conference on Information and Communication Technologiesand Development. ICTD ’15, ACM, NY, USA, S. 4:1–4:10, 2015.[Ar19]Arbeitsgruppe Technische Bildung/Carl von Ossietzky Universität Oldenburg: , RETIBNE,2019. Abrufbar überhttp://retibne.de/ueber.[ARE15]Ames, Morgan G.; Rosner, Daniela K.; Erickson, Ingrid: Worship, Faith, and Evangelism:Religion As an Ideological Lens for Engineering Worlds. In: Proceedings of the 18th ACMConference on Computer Supported Cooperative Work &#38; Social Computing. CSCW’15, ACM, New York, NY, USA, S. 69–81, 2015.[BD18]Bell, Tim; Duncan, Caitlin: Teaching Computing in Primary Schools. In (Sentance, Sue;Barendsen, Erik; Schulte, Carsten, Hrsg.): Computer Science Education Perspectives onTeaching and Learning in School. Bloomsbury Academic, S. 132 – 150, 2018.[Bo09]Boecker, Malte Christopher: Ergebnisse einer repräsentativen Umfrage in Deutschland undÖsterreich „Jugend und Nachhaltigkeit“. Aug 2009.[DH08]De Haan, Gerhard: Gestaltungskompetenz als Kompetenzkonzept der Bildung für nachhal-tige Entwicklung. In: Kompetenzen der Bildung für nachhaltige Entwicklung. Springer, S.23–43, 2008.[Ho16]Houston, Lara; Jackson, Steven J.; Rosner, Daniela K.; Ahmed, Syed Ishtiaque; Young,Meg; Kang, Laewoo: Values in Repair. In: Proceedings of the 2016 CHI Conference onHuman Factors in Computing Systems. CHI ’16, ACM, NY, USA, S. 1403–1414, 2016.[HS11]Hornung, Malte; Schulte, Carsten: ProspectiveTeachers@Research: CS Teacher EducationRevised. In: Proceedings of the 11th Koli Calling International Conference on ComputingEducation Research. Koli Calling ’11, ACM, New York, NY, USA, S. 138–143, 2011.[JPK11]Jackson, Steven J.; Pompe, Alex; Krieshok, Gabriel: Things Fall Apart: Maintenance,Repair, and Technology for Education Initiatives in Rural Namibia. In: Proceedings of the2011 iConference. iConference ’11, ACM, New York, NY, USA, S. 83–90, 2011.[KB16]Kultusministerkonferenz; Bundesministerium für wirtschaftliche Zusammenarbeit: Orien-tierungsrahmen für den Lernbereich Globale Entwicklung. Cornelsen, Bonn, 2016.[Pr08]Programm Transfer-21: , Lernen für die Zukunft Deﬁnition von Gestaltungskompetenz undihrer Teilkompetenzen, Jul 2008. Abrufbar überhttp://www.transfer-21.de/indexb4c1.html?p=222.[Sc08]Schulte, Carsten: Duality Reconstruction Teaching Digital Artifacts from a Socio-technicalPerspective. In: Proceedings of the 3rd international conference on Informatics in SecondarySchools Evolution and Perspectives: Informatics Education Supporting ComputationalThinking. Springer-Verlag, S. 110–121, 2008.[Ti63]Tinbergen, Nikolaas: On aims and methods of ethology. Zeitschrift für Tierpsychologie,20(4):410–433, 1963.[UN15]Resolution 70/1 – Transformation unserer Welt: die Agenda 2030 für nachhaltige Entwick-lung. Vereinte Nationen, New York, 2015.324 Ann-Katrin Schmidt, Carsten SchultecbaHerausgeber et al. (Hrsg.): INFOS 2019,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1AI Unplugged – Wir ziehen Künstlicher Intelligenz denSteckerStefan Seegerer1, Annabel Lindner1, Ralf Romeike2Abstract:Aufgrund seiner großen Bedeutung in Medien, StartUp-Welt und der Digitalstrategie derBundesregierung wird das Thema Künstliche Intelligenz (KI) auch für die Schule zunehmend relevant.Bisher sind Ansätze, die KI abseits von Programmierung für Schülerinnen und Schüler erlebbarmachen, rar. Um dem zu begegnen, wurde eine Sammlung verschiedener Unplugged Aktivitäten rundum KI entwickelt, die das Thema greifbar macht und auch als Unterrichtssequenz verwendet werdenkann. Unplugged stellt Aktivitäten bereit, die Ideen und Konzepte der Informatik ohne Computerergründen. Die Aktivitäten beleuchten wichtige Konzepte des Themas KI und ermöglichen, derKünstlichen Intelligenz zugrunde liegende Ideen zielgruppengerecht zu vermitteln. Zudem bietensie Ansatzpunkte, um gesellschaftliche Fragen der KI zu diskutieren. Dieser Beitrag beschreibt dieAktivitäten und deren theoretische Hintergründe, skizziert einen möglichen Unterrichtsverlauf undschildert konkrete Praxiserfahrungen von AI Unplugged.Keywords:Künstliche Intelligenz; CS Unplugged; Maschinelles Lernen; Unterrichtsaktivitäten1 EinleitungVermutlich bestimmt kein anderes informatisches Thema die aktuelle Berichterstattungso stark wie die Künstliche Intelligenz (KI, engl. AI). KI ﬁndet in vielen BereichenAnwendung: Wir sprechen mit Künstlichen Intelligenzen in Form von Siri, Cortana oderAlexa, erhalten „intelligente“ Produktempfehlungen beim Online-Shopping oder lesencomputergenerierte Texte. Immer mehr Softwareprodukte werden als KI-gestützt beworben.Auch die Bundesregierung widmet sich in einem aktuellen Strategiepapier dem Thema KI[Bu18]. Diese gesellschaftliche Bedeutung macht das Thema zukünftig auch für die Schulerelevant, gerade vor dem Hintergrund, dass laut einer aktuellen Umfrage 50 % der Deutschenkeine genaue Vorstellung von KI haben [Pr18]. Aufgrund der Komplexität des Themas istein werkzeugbasierter Zugang jedoch erst, wenn überhaupt, für höhere Altersstufen geeignet.Unplugged Aktivitäten können die Beschäftigung mit dem Thema Künstliche Intelligenzerleichtern und von Lehrerinnen und Lehrern ebenso wie von Schülerinnen und Schülern,auch bei geringerem Alter der Lernenden, als Einstieg in die Thematik verwendet werden.1Friedrich-Alexander-Universität Erlangen-Nürnberg, Didaktik der Informatik, Martensstraße 3, 91058 Erlangen,stefan.seegerer@fau.de,annabel.lindner@fau.de2Freie Universität Berlin, Didaktik der Informatik, Königin-Luise-Str. 24-26, 14195 Berlin,ralf.romeike@fu-berlin.de cba doi:10.18420/infos2019-33Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 3252 Stefan Seegerer, Annabel Lindner, Ralf Romeike2 Künstliche IntelligenzKünstliche Intelligenz existiert als Teilgebiet der Informatik bereits seit 1956 [Mc06],praktische Relevanz hat das Thema jedoch erst durch die Verfügbarkeit entsprechenderRechenkapazitäten bekommen. Der Begri  Künstliche Intelligenz stellt vor allem eineSammelbezeichnung für verschiedene Technologien und Verfahren dar, wobei hier klas-sische Themen der KI und „neuere“ Ansätze unterschieden werden können. Zwischendiesen beiden Richtungen steht insbesondere im Teilbereich des Maschinellen Lernens ein(Paradigmen)Wechsel von symbolischer Repräsentation, wie sie in Regelbasierten Systemenzur Anwendung kommt, hin zu sub-symbolischer Wissensdarstellung, wie sie NeuronaleNetze nutzen und welche keine explizite Darstellung der erlernten Lösung erlaubt [La11].Der Begri  des Maschinellen Lernens steht dabei fast schon synonym für diese „neueren“Ansätze. Er beschreibt die Fähigkeit künstlicher Systeme, aus großen Datenmengen Musterund zugrundeliegende Regeln abzuleiten. Ergebnis dieses Lernprozesses ist dann ein Modell,das für die erfolgreiche Bearbeitung unbekannter Daten oder Probleme eingesetzt werdenkann. Eine Technologie, die derartige Lernprozesse erlaubt, sind künstliche neuronale Netze.Hierbei handelt es sich um Netzwerke aus künstlichen Neuronen, die in ihrer Funktion denbiologischen Neuronen des menschlichen Gehirns nachempfunden sind. Die künstlichenNeuronen sind innerhalb des Netzwerks miteinander über Kanten verbunden. Sie nehmenInformation auf, verarbeiten diese und geben sie anschließend innerhalb des Netzes weiter.In Bezug auf den Lernprozess künstlicher Systeme lassen sich drei grundlegende Typen desLernens unterscheiden, die zum Trainieren eines Modells eingesetzt werden. Einerseits dasÜberwachte Lernen (Supervised Learning), bei dem bereits bekannt ist, welches Ergebnisvon einem Computer auf eine bestimmte Eingabe hin erwartet wird. Die tatsächlicheAusgabe des Computers wird mit dieser Erwartung verglichen und es werden Rückschlüssegezogen, wie das Modell modiﬁziert werden muss, um Erwartung und Ausgabe anzugleichen.Im Gegensatz dazu steht Unüberwachtes Lernen (Unsupervised Learning), bei dem sichdas Modell basierend auf der Ähnlichkeit von Eingaben selbständig verändert. Diese Artdes Lernens kommt insbesondere dann zum Einsatz, wenn keine bereits klassiﬁziertenDaten, die zum Training des KI-Systems verwendet werden können, vorhanden sind. DasVerstärkende Lernen (Reinforcement Learning) stellt den dritten grundlegenden Lerntypdar. Hierbei werden die Reaktionen eines lernenden Agenten auf bestimmte Eingabedatenbewertet. Basierend auf der erhaltenen Bewertung passt das System seine Reaktionen an.In modernen KI-Systemen nutzen diese Ansätze häuﬁg eine sub-symbolische Abbildungvon Wissen, d. h., dass das vom System erworbene Wissen nur implizit repräsentiert wird,z. B. durch unterschiedliche Kantengewichte in einem Neuronalen Netz, und konkreteLösungsmuster nicht ersichtlich sind. Demgegenüber steht die symbolische KI mit einerexpliziten Darstellung des Wissens und der Anwendung von Logik als zentralem Prinzip.Typische Themenbereiche dieser klassischen KI sind beispielsweise Suchverfahren, Planen,Wissensrepräsentation (u. a. mit Entscheidungsbäumen) und Inferenz unter der Verwendungvon Logik. [Er13]326 Stefan Seegerer et al.AI Unplugged 33 Künstliche Intelligenz als Thema informatischer BildungMit der steigenden gesellschaftlichen Relevanz des Themas Künstliche Intelligenz, welchevor allem mit großen Fortschritten im Bereich Maschinelles Lernen zusammenhängt, wird KInun auch vermehrt in Bildungskontexten diskutiert und thematisiert, etwa in CS4All Kursenan Hochschulen [SR18]. Zunehmend gewinnt das Thema aber auch bei der Gestaltungvon Schulcurricula an Bedeutung (z.B. [CS17] oder [In18]), so hat beispielsweise ChinaKI landesweit zum Unterrichtsinhalt in allgemeinbildenden Schulen gemacht [YC18]. Umeine Vereinheitlichung der curricularen Inhalte zu erreichen, wurden zudem in Anlehnungan die Big Ideas of K12 Computing [Be18] bereits Vorschläge für „Big Ideas“ derKünstlichen Intelligenz gemacht [To19]. Auch ein Konzept von Kandlhofer et al., dasmit der Vermittlung von KI Grundlagen bereits im Kindergarten beginnt, zielt auf diezugrundeliegenden Konzepte und eineAI Literacyab [Ka16].Gerade zu Themen der klassischen KI existiert bereits eine Reihe von Lernmaterialien,beispielsweise bietet Informatik im Kontext (IniK) eine Unterrichtsreihe zum ThemaChatbots, welche mit Weizenbaums ELIZA arbeitet [WH08]. Aber auch sub-symbolischenAnsätze werden in verschiedenen Projekten für den Unterricht aufbereitet. Kahn et al.präsentieren z. B. ein Konzept, das es Schülerinnen und Schülern erlaubt, verschiedeneKI-Dienste in der Programmierumgebung Snap!zu verwenden [Ka18], und Google stellteine Sammlung von Experimenten bereit, mit denen Lernende KI ausprobieren können3.AuchMachine Learning for Kidsbietet Online-Demos, in denen Schülerinnen und SchülerKlassiﬁkationsmodelle trainieren und diese im Anschluss in Scratch verwenden können4.Daneben existieren Ansätze, die Roboter zur Vermittlung von KI-Themen einsetzen5.Derartige Angebote decken häuﬁg jedoch nicht das ganze Feld der Künstlichen Intelligenzab, sondern fokussieren einzelne Teilbereiche, sodass es bisher nur wenige Ansätze gibt,wie das Feld der Künstlichen Intelligenz in seiner Breite und mit einem umfassendenUnterrichtskonzept schülernah vermittelt werden kann. Zudem wird in vielen Projekten vorallem eine anwendungsorientierte Perspektive eingenommen, insbesondere wenn moderneAnsätze, wie Neuronale Netze thematisiert werden. Die zugrundeliegenden Konzepteder Künstlichen Intelligenz sind in der reinen Anwendungssituation allerdings schwer zuerfassen, sodass KI-Systeme bei derartigen Vermittlungskonzepten eine Blackbox bleiben.Um auch die technologische und gesellschaftlich-kulturelle Perspektive einzunehmen, istein Blick auf zugrundeliegende Ideen und Konzepte notwendig (vgl. [Br16]).Die entwickelten Unplugged Aktivitäten zielen aus diesem Grund darauf ab, die derKünstlichen Intelligenz zugrundeliegenden Konzepte zugänglich zu machen, ohne dabeidie Breite des Feldes zu vernachlässigen. Gleichzeitig wird auf eine stark formalisierte,mathematische Darstellung verzichtet, welche den Zugang für Schülerinnen und Schülermaßgeblich erschweren würde.3https://experiments.withgoogle.com/4https://machinelearningforkids.co.uk/5z.B. Cozmo Link (https://www.anki.com/de-de/cozmo)AI Unplugged – Wir ziehen Künstlicher Intelligenz den Stecker 3274 Stefan Seegerer, Annabel Lindner, Ralf Romeike4 AI Unplugged AktivitätenCS Unplugged stellt verschiedene Aktivitäten bereit, die Lernenden jeden Alters Ideen undKonzepte der Informatik näher bringen. Es geht darum, Konzepte der Informatik enaktiv zubegreifen. CS Unplugged Aktivitäten werden seit mittlerweile gut 30 Jahren im Kontextinformatischer Bildung verwendet [BRC12], der erfolgreiche Einsatz von Unplugged-Aktivitäten ist dabei in allen Altersstufen möglich. So werden entsprechende Aktivitätenetwa in einer Sequenz für die Einführung in die Programmierung in der Grundschule[GFH17], in außerschulischen Lernlaboren [GGH15] oder in der Erwachsenenbildungeingesetzt [GHS12]. Im Bereich KI gibt es dazu bisher wenig Material, obwohl sichUnplugged Aktivitäten für diesen Bereich aufgrund seiner Komplexität und Vielseitigkeitgut eignen. Im Folgenden werden Ablauf und theoretischer Hintergrund von fünf AIUnplugged Aktivitäten vorgestellt, welche verschiedene elementare Konzepte hinter KI-Systemen verdeutlichen und sich an den Kriterien von Nishida et al. [Ni09] orientieren. Abb. 1: Beispiel einer Aktivität zur Veranschaulichung von KlassiﬁkationstrategienAktivität 1: Klassiﬁkation mit Entscheidungsbäumen – Das Gute-Ä chen-Böse-Ä chen-Spiel.Wie tri t ein Computer selbstständig Entscheidungen? Wie entscheidetein Computer, ob eine Person sportlich ist, einen Kredit erhalten sollte usw.? Solche Klassi-ﬁkationen sind eine häuﬁge Anwendung von KI. In dieser Aktivität haben Schülerinnenund Schüler die Möglichkeit, selbst ein Klassiﬁkationsmodell mithilfe eines Entscheidungs-baumes zu erstellen (siehe Abb.1). Die Schülerinnen und Schüler untersuchen, wie dieZugehörigkeit von Beispielelementen zu einer Kategorie zustande gekommen ist. Dazuentwickeln Sie in Paaren Kriterien, mit denen neue Elemente klassiﬁziert werden können.Im Anschluss werden die entstandenen Modelle mit neuen Beispielen getestet und dieGenauigkeit der Vorhersage bestimmt. Aus den verschiedenen Modellen wird dann dasbeste Modell ausgewählt.Aktivität 2: #deeplearning – Erkennen von Bildern mit Neuronalen Netzen.Wiekann ein Computer eigentlich Dinge erkennen? Wie entscheidet ein Computer, ob aufeinem Foto ein Hund, eine Katze oder eine Maus abgebildet ist? Wie kann er Gebäude vonMenschen unterscheiden? Gegenstände oder Objekte anhand ihrer Form bzw. ihres Äußeren328 Stefan Seegerer et al.AI Unplugged 5zu erkennen ist für Menschen sehr leicht. Für den Computer, der beispielsweise in einemselbstfahrenden Auto die Objekte in seiner Umgebung erkennen muss, stellt dies jedoch einekomplexe Aufgabe dar. In dieser Aktivität haben Kinder und Jugendliche die Möglichkeit,selbst nachzuvollziehen, wie Computer den Inhalt von Bildern erkennen. Zudem wird derBegri  Deep Learning, der den Einsatz von vielschichtigen, komplexen Neuronalen Netzenin KI-Systemen bezeichnet, aufgegri en.Aktivität 3: Reinforcement Learning – Schlag das Krokodil.Computer, die Schachspielen und auch Menschen schlagen können, sind mittlerweile bekannt. Das chinesischeBrettspiel Go galt hingegen lange Zeit als so komplex, dass nur Menschen es meistern können– so lange, bis Google mit AlphaGo menschliche Proﬁ-Spieler das Fürchten lehrte. In dieserAktivität wird beleuchtet, wie Computer selbst Strategien für Spiele entwickeln, obwohl sienur die Spielregeln und somit nur die Liste möglicher Züge kennen. Je zwei Schülerinnenbzw. Schüler spielen eine Partie “Mini-Schach” gegeneinander. Dabei übernimmt eineSchülerin bzw. ein Schüler die Rolle eines “Papier”-Computers. Der Computer wählt seineZüge zunächst zufällig, lernt aber nach und nach mit einem Token-System, welche Zügeihm zum Sieg verhelfen und welche in einer Niederlage enden. Mit Hilfe der Strategie, diesich auf diese Weise entwickelt, wird der Computer mit der Zeit immer besser.Aktivität 4: Back to the Roots – Krokodil-Schach und klassische KI.Die bisherigenÜbungen beschäftigen sich intensiv mit lernenden KI-Systemen. Das ist jedoch noch nichtalles, was die KI zu bieten hat: Die Ursprünge der KI liegen in der Logik und der Idee,Wissen mathematisch zu formalisieren und es auf diese Weise für Maschinen zugänglichzu machen. Welche Unterschiede es zwischen lernender KI und klassischen Ansätzen gibtund wo die Grenzen der Systeme liegen, wird in dieser Aktivität aufgezeigt. Dazu wird dievorangehende Reinforcement Learning Aktivität mit einem Expertensystem umgesetzt undso die stark unterschiedlichen Herangehensweisen verdeutlicht. Wie in Aktivität 3 spielen jezwei Schülerinnen bzw. Schüler eine Partie “Mini-Schach” gegeneinander. Dabei übernimmteine Schülerin bzw. ein Schüler die Rolle eines “Papier”-Computers. Im Gegensatz zurvorherigen Aktivität lernt der Computer hier sein Verhalten jedoch nicht, sondern arbeitetnach Regeln der Logik. Wird die Aktivität direkt mit der vorangehenden ReinforcementLearning-Version kombiniert, bietet es sich an, dass ein Rollentausch stattﬁndet.Aktivität 5: “Ach wie gut, dass niemand weiß, dass ich ein Computer bin!” DerTuring-Test.Welches Verhalten muss eine Maschine zeigen, um als intelligent zu gelten?Was bedeutet Künstliche Intelligenz genau? Diese Fragen beschäftigen Forscher seit denAnfängen der Künstlichen Intelligenz. Alan Turing hat 1950 mit dem Turing-Test einVerfahren entwickelt, wie man feststellen könnte, ob eine Maschine intelligent ist. DieseAktivität, entlehnt aus den ursprünglichen Unplugged Materialien [BWF98], stellt mitSchülerinnen und Schülern den Turing-Test nach und soll zur Diskussion anregen, obAI Unplugged – Wir ziehen Künstlicher Intelligenz den Stecker 3296 Stefan Seegerer, Annabel Lindner, Ralf RomeikeComputer tatsächlich so etwas wie Intelligenz zeigen können. Zudem wird deutlich, wieleicht man durch sorgfältig gewählte Beispiele von “Intelligenz” von einer Maschine in dieIrre geführt werden kann.5 Einbindung in den UnterrichtZiel des Unterrichts ist das Entdecken und Ergründen der zugrundeliegenden Konzepte imBereich Künstlicher Intelligenz. Dabei explorieren die Schülerinnen und Schüler spielerischverschiedene Phänomene rund um das Thema. Denkbar ist sowohl die Integration mehrererAktivitäten in eine Einheit als auch einzelne Unterrichtsstunden zu ausgewählten Aspekten.Im Folgenden wird ein möglicher Ablauf der Sequenz grob skizziert, anschließend eineStunde beispielhaft genauer ausgeführt. Zielgruppe sind insbesondere Schülerinnen undSchüler der Sekundarstufe 1 und 2, obwohl einige Aktivitäten auch (eventuell angepasst) inanderen Lernszenarien eingesetzt werden können.5.1 UnterrichtssequenzDie im Folgenden beschriebene Sequenz adressiert mehrere Kompetenzbereiche, insbeson-dere aus den Inhaltsbereichen Informatiksysteme und Informatik, Mensch und Gesellschaft,sowie den Prozessbereichen Begründen und Bewerten und Modellieren und Implementieren,allerdings kommen auch die anderen Inhaltsund Prozessbereich der BildungsstandardsInformatik in der Sequenz in Ansätzen zum Tragen [Pu08]. Die in Tabelle1überblicksartigdargestellte Sequenz verdeutlicht, dass Künstliche Intelligenz vielfältige Formen annehmenkann und aktuelle KI-Systeme auf stark spezialisierte Anwendungen begrenzt sind. Zudemwerden gesellschaftlich-soziale Auswirkungen von KI-Systemen thematisiert und illustriert,dass Künstliche Intelligenz weniger „magisch“ ist, als man vielleicht zunächst annehmenwürde.Zu Beginn der Sequenz wird das Thema KI anhand der Klassiﬁkation von Objekteneingeführt, welche etwa bei selbstfahrenden Autos von Bedeutung ist. Nach dem Einstiegdient die Bilderkennung als Kontext für Maschinelles Lernen mit neuronalen Netzen, ehediese bisher thematisierten, neueren Ansätze klassischen Ansätzen gegenübergestellt werden.Dazu wird anhand eines Spiels der Unterschied zwischen Lernverfahren und RegelbasiertenSystemen herausgestellt und die Breite des Themenfeldes Künstliche Intelligenz angedeutet.Zum Abschluss wird das Thema reﬂektiert und die Frage in den Mittelpunkt gestellt,inwieweit Computer wirklich intelligent sein können.5.2 UnterrichtsstundeExemplarisch wird die erste Stunde der Sequenz (45 Minuten) geschildert, diese kann aucheigenständig zum Einsatz kommen. Die AktivitätKlassiﬁkation mit Entscheidungsbäumen:330 Stefan Seegerer et al.AI Unplugged 7Stunde Stundenthema Beschreibung AI Unplugged1Einstieg in denThemenbereichKIDie Schülerinnen und Schüler explorieren dasKonzept Maschinellen Lernens und beispiel-hafte Auswirkungen auf die Gesellschaft.Aktivität 12-3Neuronale Net-ze und DeepLearningAnhand der Bildklassiﬁzierung mit Neurona-len Netzen ergründen die Schülerinnen undSchüler ein weiteres bekanntes Gebiet der KIund analysieren die Funktionsweise NeuronalerNetze. Sie lernen außerdem, was hinter demBegri  Deep Learning steckt.Aktivität 24-5MaschinellesLernen undklassische KIAnhand von zwei Strategien für dasselbeSpiel vergleichen die Schülerinnen und Schüler„neue“ und klassische Ansätze der KI.Aktivität 3 und 46Was ist künstli-che Intelligenz?Mithilfe des Turing-Tests gehen Schülerinnenund Schüler der Frage nach, ob Computer wirk-lich Intelligenz zeigen können und reﬂektierenethische Aspekte des Themas KI.Aktivität 5Tab. 1: Exemplarischer UnterrichtsverlaufDas Gute-Ä chen-Böse-Ä chen Spiel, die in dieser Stunde zum Einsatz kommt, erlaubtdas Erstellen von Klassiﬁkationsmodellen unterschiedlicher Komplexität. Schülerinnenund Schüler können nach dieser Stunde zum einen erklären, wie ein Computer anhandeiner bereits klassiﬁzierten Beispielmenge lernt, Elemente erfolgreich zu klassiﬁzieren,zum anderen können sie den Trainingsvorgang eines Klassiﬁkationssystems beschreibenund die Bedeutung von Trainingsund Testdaten herausstellen. Des Weiteren können realeSituationen beschrieben werden, in welchen Entscheidungen von Künstlicher Intelligenzproblematisch sein können. Die Stunde stellt grundlegende Aspekte Maschinellen Lernensvor und beleuchtet gleichzeitig gesellschaftliche Problemstellungen, die aus der Verwendungvon KI-Systemen für Klassiﬁkationsaufgaben entstehen können. Folgende Gliederung derUnterrichtsstunde ist dabei möglich:•Zum Einstieg spielen die Schülerinnen und Schüler zunächst eine einfache Versiondes Ä chen-Spiels, um das Spielprinzip zu verdeutlichen.•Die Ergebnisse des ersten Durchgangs werden ausgewertet und das beste Klassiﬁkati-onsmodell ausgewählt.•In einer weiteren Spielrunde kommt nun eine komplexere Spielversion zum Einsatz.•Auch dieser Durchgang wird ausgewertet und das beste Klassiﬁkationsmodell be-stimmt.•Mithilfe einer Lernaufgabe, die den Abstraktionsprozess vom konkreten Spiel hinAI Unplugged – Wir ziehen Künstlicher Intelligenz den Stecker 3318 Stefan Seegerer, Annabel Lindner, Ralf Romeikezum allgemeinen maschinellen Lernprozess ermöglicht, wird die Aktivität dekontex-tualisiert.•Abschließend werden die Ergebnisse der Lernaufgabe diskutiert und auf das Beispielder Teachable Machine6übertragen.Ebenso wie diese Aktivität eignen sich auch die anderen Aktivitäten der Sequenz, etwaReinforcement Learning: Schlag das KrokodilundBack to the roots: Krokodil-Schach undklassische KIfür den isolierten Einsatz in einzelnen Unterrichtsstunden.6 Resümee und AusblickAI Unplugged wurde in einem Schulversuch mit einer neunten und einer zehnten Klasse derRealschule erprobt. Obgleich die Schülerinnen und Schüler eine rudimentäre Vorstellungdes Begri s Künstliche Intelligenz hatten, verfügten sie doch über keine inhaltlichenVorkenntnisse in diesem Themenbereich. So verbinden viele Schülerinnen und Schüler denBegri  vor allem mit selbstständig agierenden, lernfähigen Robotern.Bei der Durchführung erfassten die Schülerinnen und Schüler die Funktionsprinzipien derAktivitäten schnell und umfassend, bei der Arbeit in Teams waren die Schülerinnen undSchüler konzentriert und mit Spaß bei der Sache. Als es beispielsweise galt, Regeln fürdie Klassiﬁkation von Ä chen aufzustellen (Aktivität 1), entwickelte sich ein Wettbewerbdarum, das beste Klassiﬁkationsmodell zu erstellen. Zudem wurde rege diskutiert, wie fairein derartiges Klassiﬁkationsmodell sein kann. Bei Fragen und Problemen besprachen sichdie Schülerinnen und Schüler mit ihren Mitschülerinnen und Mitschülern und erarbeitetenLösungen im Team ohne die Hilfe der Lehrkraft zu beanspruchen. Auch Schülerinnen undSchüler, die dem Konzept „Informatik ohne Computer“ am Anfang skeptisch gegenüberstanden, konnten durch die Aktivitäten sehr gut motiviert werden und zeigten anschließendgroßes Interesse am Thema.Im Rahmen der anschließenden Dekontextualisierung war bei den Schülerinnen undSchülern ein deutlicher Erkenntniszuwachs feststellbar: Nach der Durchführung von AIUnplugged Aktivitäten waren die Schülerinnen und Schüler in der Lage, den Begri  desMaschinellen Lernens zu erläutern und konnten auf dieser Basis zudem gesellschaftlicheImplikationen Künstlicher Intelligenz diskutieren. Sie erkannten die Zusammenhängezwischen individuellen Aktivitäten und den zugrundeliegenden Konzepten der KünstlichenIntelligenz sehr schnell und konnten Parallelen zu Phänomenen, die sie aus dem Alltagkannten (z. B. Captchas, Google Bildersuche etc.), ziehen. Dies sorgte für Aha-E ekte,teilweise sogar schon während der Aktivitäten, und ermöglichte den Schülerinnen undSchülern die Grenzen solcher Systeme zu erkennen.6https://teachablemachine.withgoogle.com/332 Stefan Seegerer et al.AI Unplugged 9Es zeigt sich, dass die AI Unplugged Aktivitäten gut geeignet sind, um das komplexe ThemaKünstliche Intelligenz umfassend darzustellen. Sie erlauben den handlungsorientiertenZugang zum Thema KI, ohne jedoch auf einen technischen Rahmen angewiesen zusein. Das Thema kann damit in reduzierter Komplexität vermittelt werden und bleibtgleichzeitig anschlussfähig für weitergehende Vertiefungen, die sich unterschiedlichsterSoftwarewerkzeuge bedienen können. Zudem bieten die Unplugged Aktivitäten auchLehrkräften, die KI als Unterrichtsthema aufgrund der thematischen Komplexität und dertechnischen Hürden bei der Einrichtung von Programmbibliotheken usw. bisher kritischgegenüber standen, eine gute Möglichkeit, das Thema in den schulischen Unterrichtzu integrieren. Die Konzeption der Aktivitäten ermöglicht dabei sowohl den Einsatz alszusammenhängende Unterrichtssequenz zu Künstlicher Intelligenz als auch den individuellenEinsatz „zwischendurch“ oder als Ergänzung zu anderen Ansätzen und Zugängen zu KI.Die Materialien sind unter Creative Commons Lizenz online abrufbar.7Im Onlineangebotﬁnden sich zudem weitere Materialien und Links zum Thema, die ebenfalls im Unterrichtzum Einsatz kommen können.Literaturverzeichnis[Be18]Bell, Tim; Tymann, Paul; Yehudai, Amiram et al.: The Big Ideas in Computer Science forK-12 Curricula. Bulletin of EATCS, 1(124), 2018.[Br16]Brinda, Torsten; Diethelm, Ira; Gemulla, Rainer; Romeike, Ralf; Schöning, Johan-nes; Schulte, Carsten: Bildung in der digitalen vernetzten Welt–Dagstuhl-Erklärung.URL:https://www.gi.de/aktuelles/meldungen/detailansicht/article/dagstuhl-erklaerung-bildung-in-der-digitalen-vernetzten-welt.html[15.01. 2019], 2016.[BRC12]Bell, Tim; Rosamond, Frances; Casey, Nancy: Computer Science Unplugged and RelatedProjects in Math and Computer Science Popularization. In: The Multivariate AlgorithmicRevolution and Beyond. Springer, Berlin, Heidelberg, S. 398–456, 2012.[Bu18]Bundesregierung: Strategie Künstliche Intelligenz der Bundesregierung. URL:https://www.bmbf.de/files/Nationale_KI-Strategie.pdf[30.1.2019], 2018.[BWF98]Bell, Tim; Witten, Ian; Fellows, Mike: Computer Science Unplugged: O -line activitiesand games for all ages. Citeseer, 1998.[CS17]CSTA: About the CSTA K-12 Computer Science Standards. URL:https://www.csteachers.org/page/standards[15.01.2019], 2017.[Er13]Ertel, Wolfgang: Grundkurs Künstliche Intelligenz. Springer Fachmedien Wiesbaden,2013.[GFH17]Geldreich, Katharina; Funke, Alexandra; Hubwieser, Peter: Willkommen im Program-mierzirkus Ein Programmierkurs für Grundschulen. In: Informatische Bildung zumVerstehen und Gestalten der digitalen Welt, Proceedings der 17. GI-Fachtagung Informatikund Schule, INFOS 2017, 13.-15. September 2017, Oldenburg. S. 327–334, 2017.7https://ddi.cs.fau.de/schule/ai-unpluggedAI Unplugged – Wir ziehen Künstlicher Intelligenz den Stecker 33310 Stefan Seegerer, Annabel Lindner, Ralf Romeike[GGH15]Gallenbacher, Jens; Gose, Karola; Heun, Dominik: Gestrandet auf der Schatzinsel Schätzeheben mit Informatik in der Grundschule. In: Informatik allgemeinbildend begreifen, INFOS2015, 16. GI-Fachtagung Informatik und Schule, 20.-23. September 2015, Darmstadt,Germany. S. 101–109, 2015.[GHS12]Garcia, Daniel; Harvey, Brian; Segars, Luke: CS principles pilot at University of California,Berkeley. ACM Inroads, 3(2):58–60, 2012.[In18]International Society for Technology in Education (ISTE): Bold New Program HelpsTeachers and Students Explore the Power of AI. URL:https://www.iste.org/explore/articleDetail?articleid=2229[15.01. 2019], 2018.[Ka16]Kandlhofer, Martin; Steinbauer, Gerald; Hirschmugl-Gaisch, Sabine; Huber, Petra: Artiﬁcialintelligence and computer science in education: From kindergarten to university. In: 2016IEEE Frontiers in Education Conference (FIE). IEEE, S. 1–9, 2016.[Ka18]Kahn, Ken; Megasari, Rani; Piantari, Erna; Junaeti, Enjun: AI Programming by Childrenusing Snap! Block Programming in a Developing Country. 2018.[La11]Langley, Pat: The changing science of machine learning. Machine Learning, 82(3):275–279,Feb 2011.[Mc06]McCarthy, John; Minsky, Marvin; Rochester, Nathaniel; Shannon, Claude: A proposalfor the dartmouth summer research project on artiﬁcial intelligence, August 31, 1955. AImagazine, 27(4):12, 2006.[Ni09]Nishida, Tomohiro; Kanemune, Susumu; Idosaka, Yukio; Namiki, Mitaro; Bell, Tim; Kuno,Yasushi: A CS unplugged design pattern. ACM SIGCSE Bulletin, 41(1):231–235, 2009.[Pr18]Preuss, Susanne: Die Hälfte der Deutschen weiß nicht, was KI ist. URL:https://www.faz.net/aktuell/wirtschaft/kuenstliche-intelligenz/die-haelfte-der-deutschen-weiss-nicht-was-ki-ist-15898006.html[15.01. 2019], 2018.[Pu08]Puhlmann, Hermann; Brinda, Torsten; Fothe, Michael; Friedrich, Ste en; Koerber, Bern-hard; Röhner, Gerhard; Schulte, Carsten: Grundsätze und Standards für die Informatik inder Schule. Bildungsstandards Informatik für die Sekundarstufe I. Beilage zu LOG IN,(150/151), 2008.[SR18]Seegerer, Stefan; Romeike, Ralf: Was jeder über Informatik lernen sollte – Eine Analysevon Hochschulkursen für Studierende anderer Fachrichtungen. In: HDI 2018. Potsdam, S.13–28, 2018.[To19]Touretzky, David; Gardner-McCune, Christina; Martin, Fred; Seehorn, Deborah: Envi-sioning AI for K-12: What should every child know about AI? In: „Blue sky talk“ at theThirty-Third AAAI Conference on Artiﬁcial Intelligence (AAAI-19). 2019.[WH08]Witten, Helmut; Hornung, Malte: Chatbots Teil 1: Einführung in eine Unterrichtsreihe zuInformatik im Kontext (IniK). LOG IN, 28(154/155):51–60, 2008.[YC18]Yu, Yanfang; Chen, Yuan: Design and Development of High School Artiﬁcial IntelligenceTextbook Based on Computational Thinking. Open Access Library Journal, 5(09):1, 2018.334 Stefan Seegerer et al.<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 Eine Unterrichtssequenz zum Einstieg in Konzepte des maschinellen Lernens  Kerstin Strecker1, Eckart Modrow2   Abstract: In diesem Beitrag soll ein Weg aufgezeigt werden, um Grundprinzipien maschinellen Lernens so zu reduzieren, dass sie in der Schule praktisch umzusetzen sind. Dafür werden LEGO-NXT-Roboter so programmiert, dass sie „aus Erfahrungen lernen“.  Keywords: LEGO-Roboter, maschinelles Lernen, Entmystifizierung des „schlauen“ Computers, Konditionierung, Hebb-Regel  1 Entmystifizierung des „schlauen“ Computers Grundschüler3, denen ein Computer Rechenaufgaben stellt und ggf. ein positives Feedback gibt, wurden gefragt, weshalb der Computer immer die korrekte Lösung kennt oder ob er sich auch irren kann. Die einvernehmliche Antwort war, dass Computer sich nicht irren, weil sie „schlau“ sind, zumindest schlauer als die Schülerinnen und Schüler. Erfahren sie später in der Sekundarstufe, wenn sie z.B. mit digitaler Elektronik einen Parallel-Addierer im Informatikunterricht gebaut haben, dass sich ein Computer deshalb nicht „verrechnen“ kann, weil die Leitungen starr gesteckt sind und deterministisch immer derselben Funktionalität folgen, dann erscheint ihnen diese Maschine sehr viel weniger „schlau“. Stattdessen könnten sie jetzt einen Schachcomputer für „intelligent“ halten, bis sie lernen, dass in einem Entscheidungsbaum einfach sehr viele Möglichkeiten durchprobiert werden und dass eine der möglichen Aktionen gewählt wird, die zu einem positiven Ergebnis (Gewinn des Spiels) führt. Auch hier folgt der Rechner einem deterministischen Algorithmus. In beiden Beispielen erscheinen die durch einfache Algorithmen gesteuerten Systeme nur deshalb „intelligent“, weil die Nutzer von deren Funktionsweise nichts wissen (vgl. [Br93]). Allerdings können beide Systeme noch nichts „dazulernen“.  Viele Anwendungen auf dem Smartphone der Lernenden scheinen aber zu lernen. Die Wortergänzung passt sich immer mehr den speziellen Ausdrücken der Schülerinnen und Schüler an, ebenso die Autovervollständigung und weitere. Erst wenn Schülerinnen und Schüler im Informatikunterricht mit Datenbanken arbeiten, verstehen sie, dass es sich hier um einfache Erweiterungen der Datenbasis handelt, also um INSERT-Befehle unter                                                         1 Universität Göttingen, Didaktik der Informatik, Goldschmidtstr. 7, 37077 Göttingen, kerstin.strecker@informatik.uni-goettingen.de 2 Universität Göttingen, Didaktik der Informatik, Goldschmidtstr. 7, 37077 Göttingen, emodrow@informatik.uni-goettingen.de 3 Es wurde eine zweite Klasse mit 21 Grundschülern befragt. Aus dem Ergebnis kann keine allgemeingültige Aussage abgeleitet werden.  cba doi:10.18420/infos2019-34Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 335 16 Vorname1 Nachname1 und Vorname2 Nachname2 bestimmten Bedingungen. Der scheinbare Wissenserwerb wird darauf reduziert, dass sich eine Datenbasis durch das Feedback der Benutzer erweitert. Im Informatikunterricht lassen sich also viele scheinbar „intelligente“ Systeme entmystifizieren. Das gilt auch für die künstliche Intelligenz. Dieser viel diskutierte Bereich der Informatik wird über kurz oder lang die Schulinformatik erreichen. Er erscheint sehr viel weniger mystisch, wenn gezeigt wird, dass die aktuellen Feed-Forward-Systeme im Wesentlichen Funktionen anwenden, deren Parameter durch viele Beispiele angepasst werden. Wir beschreiben hier einige Beispiele, in denen die Schülerinnen und Schüler lernen, dass auch „neuronale“ Systeme einfach nur deterministischen, vorgegebenen Regeln folgen. 2 Bestärkendes Lernen durch Zuordnung Wahrnehmung Aktion Bei dem Ansatz des bestärkenden Lernens „lernt“ ein System in einer Lernphase oder Trainingsphase anhand von Beispielen. Dazu ist ein Feedback in der Lernphase notwendig. Wir nutzen folgendes Beispiel dieses Ansatzes dazu, um die Begriffe der Wahrnehmung und Aktion einzuführen. Wir betrachten ein System, welches mit Hilfe von Sensoren Wahrnehmungen als Eingabe erhält. Dabei sei eine Wahrnehmung eine Kombination der aktuellen Werte aller Sensoren. Gibt es beispielsweise einen Sensor, der hell und dunkel unterscheiden kann und einen Sensor, der in drei Abstufungen Lautstärke unterscheiden kann (leise, mittlere_Lautstärke, laut), dann verfügt das System über sechs verschiedene Wahrnehmungen (hell-leise, hell-mittlere_Lautstärke, hell-laut, dunkel-leise, dunkel-mittlere_Lautstärke, dunkel-laut).   In unserem Programmierbeispiel betrachten wir einen kleinen schwarzen Ball, der sich in einem farbigen Gebiet befindet (Abbildung 1). Dabei kann der Benutzer den grünen Balken mit der Maus von links nach rechts bewegen, ähnlich einem Schläger im Spiel „Pong“.     Abbildung 1 : Ball in farbigem Gebiet  336 Kerstin Strecker, Eckart Modrow Der Kurztitel des Beitrags 17 Unser Ball soll vier Wahrnehmungen unterscheiden können, nämlich ob er die Farben Rot (1), Blau (2), Grün (3) oder nur Weiß (4) berührt. Weiterhin kann dieser Ball drei verschiedene Aktionen ausführen: er kann langsam vorwärtsfliegen (1), abprallen (2) oder schnell vorwärtsfliegen (3). Eine Zuordnungsliste zwischen Wahrnehmung (1,2,3,4) und Aktion (1,2,3) ist anfangs leer. Der Ball prüft ständig seine Wahrnehmung und führt die Aktion aus, die er in der Zuordnungsliste für diese Wahrnehmung findet. Findet er keine Zuordnung, führt der Ball Aktion 1 aus und „fragt“ anschließend, ob das richtig war. Verneint der Benutzer, macht der Ball die Aktion rückgängig und führt Aktion 2 aus. Auch jetzt fordert er das Feedback des Benutzers. Wir gehen davon aus, dass eine der ausgeführten Aktionen ein positives Feedback bekommt. Diese Aktion wird in der Zuordnungsliste gespeichert. Am Ende der Trainingsphase hat der Roboterball jeder Wahrnehmung eine Aktion zugeordnet, die er fortan ausführt. Damit ist das Spiel ganz unterschiedlich konfigurierbar. Der Ball könnte bei Grün (am Schläger) abprallen und bei Blau (am Rand) und bei Rot seine Geschwindigkeit erhöhen. Er könnte aber auch so trainiert werden, dass er bei Rot abprallt und bei Grün seine Geschwindigkeit erhöht, usw. 3 Systeme mit „Neuron“ In dem obigen Beispiel „lernte“ unser Ball sein Verhalten durch Feedback von außen. Jetzt wollen wir Systeme betrachten, die ihre Konfiguration selbst so verändern, dass sie in ihrer Umwelt optimal (re-)agieren (vgl. [MP47]). Unser Beispiel entspricht der klassischen Konditionierung des Pawlowschen Hundes [PH19]. Wir modellieren ein Neuronales Netz als gerichteten Graphen, wobei die Knoten Zellkörper repräsentieren und die Kanten die Verbindungen zwischen den Neuronen. Im Inneren eines Knotens wird ein Schwellenwert notiert. Die Kanten sind gewichtet. Es existieren außerdem Neuronen, die Signale aus der Außenwelt erhalten. Wir verwenden nur binäre Signale (Null oder Eins). Die Ausgabefunktion eines Neurons ist folgendermaßen definiert: Ist die Summe aller Eingaben multipliziert mit den zugehörigen Kantengewichten größer oder gleich dem Schwellenwert, so ist die Ausgabe Eins, sonst Null. Abbildung 2-4 veranschaulicht die Modellierung.  Im Folgenden betrachten wir stets nur ein Neuron. Wir können das logische ODER bereits als erste Programmierübung auf dem NXT-Roboter implementieren. In der Schule hilft dies, um sich die Funktionsweise langsam zu erarbeiten, hier können wir den Code aus Platzgründen nicht wiedergeben, er ähnelt aber dem Code im nächsten Kapitel, nur ohne Änderung der Gewichte. Eine Unterrichtssequenz zum Einstieg in Konzepte des maschinellen Lernens 337 18 Vorname1 Nachname1 und Vorname2 Nachname2   Abbildung 2: Beispiel UND    Abbildung 3 : Beispiel ODER    Abbildung 4 : Beispiel XOR   338 Kerstin Strecker, Eckart Modrow Der Kurztitel des Beitrags 19 4 Der Roboter „lernt“ Unser Roboter soll lernen, aber wie lernt ein Neuronales Netz? Prinzipiell durch die Entwicklung neuer Verbindungen, Löschen bestehender Verbindungen, Ändern der Gewichtung (der Gewichte von Neuron i zu Neuron j), Anpassen der Schwellenwerte der Neuronen, Hinzufügen von Neuronen oder Löschen von Neuronen (vgl. [Wö06]). In unserem reduzierten Modell betrachten wir im Folgenden nur die Möglichkeit der Änderung der Kantengewichte. Dafür gibt es viele verschiedene Lernalgorithmen. Wir verwenden hier die Hebb-Regel, die besagt, dass das Gewicht zwischen zwei Neuronen dann erhöht wird, wenn beide Neuronen gleichzeitig aktiv sind, also beide Neuronen eine Eins am Ausgang liefern (vgl. [Ro96]). Die Erhöhung der Gewichte zwischen den Knoten i und j wird mit einem + dargestellt.   Abbildung 5 : Hebb-Regel  Betrachten wir unseren NXT-Roboter mit einem „Neuron“.     Abbildung 6 : unser Roboter mit Sensoren und Aktoren  Der Roboter besitzt zwei Motoren, mit deren Hilfe er fahren kann. Die beiden möglichen Aktionen sind „vorwärts“ oder „umdrehen“:  Eine Unterrichtssequenz zum Einstieg in Konzepte des maschinellen Lernens 339 20 Vorname1 Nachname1 und Vorname2 Nachname2   Abbildung 7 : Roboteraktionen  Unser Roboter fährt geradeaus. Liefert sein Neuron eine Eins, so dreht er um. Das Neuron hat nun drei Eingänge. Eingang 1 liefert Eins, wenn der Geräuschsensor laut registriert, Null sonst. Eingang 2 liefert Eins, wenn der Ultraschallsensor nah registriert, sonst Null. Eingang 3 ist Eins, wenn der Berührsensor gedrückt ist und Null sonst.     Abbildung 8 : Wahrnehmungen des Roboters    Mit unserer Lernregel nach Hebb gilt: liefert eine der Eingaben den Wert Eins (ist also aktiv) und das Neuron liefert ebenfalls den Wert Eins, so erhöht sich das Kantengewicht zwischen Eingabe und Neuron. Für unser Neuron gelten anfangs folgende Kantengewichte:   340 Kerstin Strecker, Eckart Modrow Der Kurztitel des Beitrags 21   Abbildung 9 : Neuron des Roboters  Ist Eingang 3 aktiv (Berührsensor gedrückt), wird bereits der Schwellenwert erreicht und das Neuron feuert, der Roboter dreht um. Das „angeborene“ Verhalten ist also ein Umdrehen, wenn der Roboter z. B. gegen eine Wand fährt. Die anderen Sensoren beeinflussen die Aktivität des Neurons bisher nicht. Setzen wir nun folgenden Algorithmus um:    Abbildung 10 : Lernalgorithmus   Eine Unterrichtssequenz zum Einstieg in Konzepte des maschinellen Lernens 341 22 Vorname1 Nachname1 und Vorname2 Nachname2 Man kann Folgendes beobachten: Der Roboter fährt geradeaus. Wenn er gegen eine Wand fährt (Berührsensor löst aus), dreht er um und fährt wieder geradeaus. Das Ganze passiert mehrmals hintereinander. Nach einigen Kollisionen scheint der Roboter etwas „gelernt“ zu haben, denn er dreht schon um, bevor er die Wand berührt. Jedes Mal, wenn das Neuron aktiv ist, also bedingt durch den Berührsensor umdreht, liefert Eingang 2 auch eine Eins, weil der Ultraschallsensor registriert, dass etwas nah ist. Nach der Lernregel wird dadurch die Gewichtung zwischen Eingang 2 und dem Neuron erhöht. Irgendwann erreicht das Gewicht so den Wert Fünf. Jetzt dreht der Roboter bereits um, wenn Eingang 2 eine Eins liefert (eine Wand nah ist), weil die Summe den Schwellenwert erreicht und das Neuron feuert. Mit den Worten eines Schülers: Nachdem sich der Roboter ein paar Mal die Nase gestoßen hat, fährt er nicht mehr gegen eine Wand, sondern dreht vorher um4. Der Roboter ist konditioniert wie der Pawlowsche Hund.  5 Der „intelligente“ Ball Steht kein Roboter zur Verfügung, kann man auch andere Systeme zum „Lernen“ bringen. Unser Beispiel ist das Spiel „Pong“ mit einem „intelligenten“ Ball. Unser Ball kann zwei verschiedene Aktionen ausführen: fliegen oder abprallen (Der Code ist aus Platzgründen weggelassen, ist aber wenig komplex). Außerdem hat sein Neuron zwei Eingänge. Eingang 1 liefert nur dann eine Eins, wenn die Farbe Schwarz berührt wird, Eingang 2 nur dann eine Eins, wenn die Farbe Rot berührt wird. Auch hier lassen wir aus Platzgründen den Code weg, er ist aber ähnlich zu dem Befehl „checke Wahrnehmung“ des Roboters.  Unser Schläger hat drei verschiedene „Kostüme“. Er kann schwarz sein, rot oder rot-schwarz gestreift.  Abbildung 11 : drei verschiedene Kostüme  Wir implementieren analog zu unserem Roboter folgende Funktionalität (siehe Abbildung 11).                                                         4 Natürlich wachsen die Gewichte immer weiter, was unnötig ist, wenn der Wert Fünf überschritten ist. Auch kann der Roboter nicht wieder „verlernen“. Hier finden die Schüler aber aller Erfahrung nach selbstständig individuelle Lösungen.  342 Kerstin Strecker, Eckart Modrow Der Kurztitel des Beitrags 23 Was passiert? Ist der Schläger schwarz, kann man damit das ganz normale Pong spielen. Ist der Schläger nur rot, fällt der Ball hindurch und prallt nicht am Schläger ab. Wählt der Benutzer den rot-schwarz-gestreiften Schläger, so prallt der Ball ab (der schwarzen Farbe wegen). Er berührt dabei aber gleichzeitig auch rot. Der Ball „lernt“, auch bei Rot abzuprallen, denn wenn der zweifarbige Schläger eine längere Zeit verwendet wird und danach der nur rote Schläger, prallt der Ball auch an diesem Schläger ab.    Abbildung 12 : Lernalgorithmus  6 Fazit In diesem Beitrag haben wir eine mehrfach erprobte Unterrichtssequenz aufgezeigt, die didaktisch sehr reduziert die Grundprinzipien maschinellen Lernens verdeutlicht und die praktisch umsetzbar ist. Dabei wurden NXT-Roboter so programmiert, dass sie scheinbar „aus Erfahrungen“ lernen. Diese Sequenz soll einen ersten Einblick in die Grundprinzipien neuronaler Netze ermöglichen. Hinzu kommt die Erkenntnis der Schülerinnen und Schüler, dass auch diese einfach nur deterministischen Regeln folgen und Algorithmen abarbeiten. Sehr viel größere Netze, die heute durch die hohe Rechenleistung der Rechner zu realisieren sind, verarbeiten auch sehr viel komplexere Situationen, arbeiten aber nicht prinzipiell anders (vgl. [Go16]). Die Frage, ob das  Eine Unterrichtssequenz zum Einstieg in Konzepte des maschinellen Lernens 343 24 Vorname1 Nachname1 und Vorname2 Nachname2 menschliche Gehirn prinzipiell mehr leisten kann oder nicht, bleibt (natürlich) unbeantwortet, erschließt sich den Schülerinnen und Schülern aber als Fragestellung.   Literaturverzeichnis  [Br93] Valentin Braitenberg: “Vehikel – Experimente mit kybernetischen Wesen” Rowohlt-Verlag, 1993 [Go16] Ian Goodfellow, Yoshua Bengio, Aaron Courville : “Deep Learning”, MIT Press, 2016 [MP47] W. McCulloch, W. Pitts: „How We Know Universals: the Perception of Auditory and Visual Forms”, Bulletin of Mathematical Biophysics, Vol. 9, 1947 [PH19] https://de.wikipedia.org/wiki/Pawlowscher_Hund, Zugriff: 30.1.19 [Ro96] Raul Rojas: “Neural Networks. A Systematic Introduction”, Springer-Verlag, 1996 [Wö06]   P. Manoonpong, T. Gend, F.Wörgötter: „Exploring the dynamic walking range of the    biped robot RinBot with an active upper-body component”, IEEE-RAS International     Conference of humanoid robots, 2006      344 Kerstin Strecker, Eckart ModrowKurzbeiträgecbaA. Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 111Was haben Staubsaugerroboter, Spielekonsolen undSmartphones gemeinsam?Schülervorstellungen von Teil-Ganzes-Beziehungen in InformatiksystemenNils Pancratz1, Ira Diethelm1Abstract:In diesem Beitrag wird eine Untersuchung vorgestellt, in der der Frage nachgegangenwird, welche mentalen Teil-Ganzes-Denkstrukturen Schülerinnen und Schüler bei der Erklärungvon Informatiksystemen anwenden. Dazu wird Concept Mapping in leitfadengestützte Interviews,die mittels qualitativer Inhaltsanalyse ausgewertet werden, integriert. Die Ergebnisse einer ersten,pilotierenden Durchführung mit acht Achtklässlerinnen zeigen, dass entsprechende Systeme unterihrer Oberﬂäche häuﬁg als Blackboxes begri en und zu ihrer Erklärung hauptsächlich sichtundinteragierbare Teile herangezogen werden.Keywords:Denken in Teilen von Ganzen; mentale Ordnungssysteme; Wissensrepräsentationen;Schülervorstellungen; Didaktische Rekonstruktion; Concept Mapping1 Motivation und theoretische GrundlagenKognitionswissenschaftliche Untersuchungen belegen2, dass wir – oft unbewusst –mentaleOrdnungssystemeanlegen, um den über unsere Sinnesorgane wahrgenommenen Informati-onsstrom auf uns möglichst e ektiv zu verarbeiten. Die bei der Zuordnung zu mentalenKategoriensystemen (Taxonomien) angewandten Kriterien implizieren dabei, dass wir Ob-jekte unterbewusst danach kategorisieren, aus welchen einzelnen Teilen sie aufgebaut sind[Ro78,TH84]. Die Identiﬁkation einzelner Teile, die ein ganzheitliches System ausmachen,und ihrer wechselseitigen Beziehungen zueinander ist somit als entscheidende Komponentemenschlicher Kognition zu sehen; entsprechend sind die dadurch angelegtenPartonomien(Teil-Ganzes-Hierarchien) zentraler Bestandteil menschlicher Wissensorganisation [Bi98,654]. Zweifelsfrei ist diePartitionierung– also die strukturelle Zerlegung zusammengesetz-ter Systeme – essentiell für ihr allgemeines Verständnis [TZH08]. Die zugehörige Fähigkeitbezeichnen wir in Hinblick auf ihre Relevanz für die Informatikdidaktik alsDenken in Teilenvon Ganzen. Im Sinne jederkonstruktivistischen Au assung von Lernenist es unerlässlich,im Unterricht an die Vorerfahrungen der Schülerinnen und Schüler (SuS) anzuknüpfen[Du07]. Entsprechend wird die hohe Bedeutung der Erforschung von Schülervorstellungen1Carl von Ossietzky Universität Oldenburg, Didaktik der Informatik, Uhlhornsweg 84, 26129 Oldenburg,vorname.nachname@uni-oldenburg.de2Ein umfassender, übersichtlicher Überblick über entsprechende Untersuchungen wird in [La87, 12-57] gegeben. cba doi:10.18420/infos2019-35Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 347112 Nils Pancratz, Ira Diethelmfür die Didaktische Strukturierung von Informatikunterricht (IU) im Modell derDidak-tischen Rekonstruktion(DR) expliziert [Di11]. Da die mentalen Ordnungssysteme, diewir bereits – individuell über unsere Wahrnehmung und Kognition oder kulturell bspw.über die Sprache – gebildet haben, von sich aus bereits einen enormen Einﬂuss auf dieWahrnehmung neuer Situationen und Eigenschaften haben [Ro78, 29] und dadurch auchauf die Art und Weise, wie wir neue, uns unbekannte Objekte verstehen und begreifen,sind auch Lernvoraussetzungsanalysen, die sie zum Forschungsgegenstand nehmen, imSinne der DR von Bedeutung für die Informatikdidaktik3. Besonders stark zum Tragenkommen die Aspekte des Denkens in Teilen von Ganzen in den curricularen Vorgaben zuIU z. B. beim ThemaInformatiksysteme (IS), denn da zu deren Nutzung „ein grundlegendesVerständnis ihres Aufbaus und ihrer Funktionsweise notwendig [ist]“ [GI08, 37] fandenentsprechende Kompetenzanforderungen über die Bildungsstandards der Gesellschaft fürInformatik [GI08] auch Einzug in die Curricula der einzelnen Länder. Im Sinne einerkonstruktivistischen Au assung von Lernen (s. o.) ist es somit unerlässlich, entsprechendeSchülervorstellungen zu erheben. So soll über das in diesemWork-in-Progress-Beitragvorgestellte Forschungsvorhaben den folgenden Forschungsfragen explorativ am Beispiel derdrei ISStaubsaugerroboter (SR),Spielekonsole (SK)undSmartphone (SP)nachgegangenwerden: Welche Vorstellungen haben und entwickeln SuS von der Funktionsweise und vonder Struktur von zusammengesetzten IS? Welche Teile und welche Ganze identiﬁzieren siedabei? Welche Beziehungen der Komponenten untereinander identiﬁzieren sie dabei?2 Methodischer Ansatz und erste ErgebnisseUm die internalisierten, kognitiven Wissensrepräsentationen zu externalisieren, wird indiesem UntersuchungssettingConcept Mappingin leitfadengestützte Interviews integriert.Hierzu wurde ein Leitfaden von zirkulärer Struktur entwickelt, über den in jedem InterviewSP, SK und SR miteinander verglichen werden sollen und die Vorstellungen der Befragtenzum Aufbau der Systeme gemeinsam mit dem Interviewer auf Basis der Schülerinnen-Aussagen in einer (für die drei IS) gemeinsamenConcept Mapexternalisiert werden. DasSample der hier vorgestellten Datenerhebung setzt sich aus acht Teilnehmerinnen (B1 bisB8) an einem Förderprojekt zur Steigerung des Anteils an Mädchen und Frauen in informa-tiknahen Berufen zusammen, die die 8. Klasse einer nds. Oberschule (Zusammenfassung vonHauptund Realschule) besuchten, bis dato keinen formalen IU hatten und zum Zeitpunktder Erhebung 13 bis 14 Jahre alt waren. Die Wahl ﬁel auf vier Einzelinterviews und zweiPartnerinterviews (B3/B4 und B5/B6) von 14 bis 33 Minuten Länge. Zur Auswertungwurden die Interviews transkribiert und anschließend einerinhaltlich-strukturierenden qua-litativen Inhaltsanalyse[Ma02] unterzogen, wobei die Kategorienbildung deduktiv-induktiverfolgte. Da die Anfertigung der Concept Maps während der Interviews zweifelsohne im„Grenzbereich zwischen Erhebung und Auswertung“ [Ma02, 86] liegt und die in ihnen ent-haltenen Informationen größtenteils redundant mit den Transkriptinhalten sind, rückten sie3So befassen sich aktuell bspw. [Br19] oder [RP18] mit der Frage danach, welche Kategorien (Taxonomien)Lernende in ihren mentalen Repräsentationssystemen von digitalen Artefakten bilden.348 Nils Pancratz, Ira DiethelmWas haben Staubsaugerroboter, Spielekonsolen und Smartphones gemeinsam? 113während der Inhaltsanalyse in den Hintergrund. Im Folgenden werden Alltagsvorstellungen,wie sie während der Interviews zum Vorschein kamen, anhand expl. Aussagen dargelegt:Bezogen auf denSRgeht B1 davon aus, dass dieser seinen Weg einprogrammiert bekommenmuss (B1:1954) und „wie so ein Hund“ über einen „Spürsinn“ (B1:187) den Dreck zunächstgezielt aufspürt und dann aufsaugt (B1:191). Andere Schülerinnen hingegen verstehen ihnals System, das den Weg automatisch erkennt (B2:24). Die dazu benötigte Komponentewird von Zweien alsSensoridentiﬁziert (B3:27, B6:37); eine weitere verwendet zwar nichtdiese Bezeichnung, expliziert aber, dass SR „da vorne [etwas] haben“ (B2:12), worübersie an die nötigen Informationen – also „wo er langfahren muss“ (B2:10) – gelangen.Das Umfeld wird nach Ansicht von B1 nicht abgespeichert, weil der SR schließlich auchfunktioniert, wenn man ihn in einer anderen Umgebung platziert (B1:320). Zwar ist derAnsicht einer weiteren Schülerin nach in SR auch eineFestplatteenthalten, jedoch istihre Aufgabe dort lediglich „Signale zu empfangen“ (B5:215). InSKhingegen ist aufden Komponenten, die sie alsFestplatten(also „diesen grünen Platten, wo man wasanlötet“, B5:101) bezeichnet, „allesdrauf gespeichert“ (B5:130). Ihre Beschreibung dieserKomponente ähnelt der, die B2 mit dem Begri  desLaufwerksbeschreibt (B2:46): Währenddiese Komponente, deren Rolle mit der eines „Gehirns“ (B2:100) verglichen wird, im SRdafür verantwortlich gemacht wird, zu steuern, wann sich welche Räder drehen sollen,„damit die den Dreck au egen“ (B2:46), ist Aufgabe desLaufwerksimSP, dass es „anbleibt [...] und dass alles angezeigt wird und so“ (B2:158). In SK wiederum – in denendasLaufwerkaus Platzgründen ebenso wie in SP übrigens nicht so groß ist wie in SR(B2:148) – kann es „auch Sachen in sich speichern“ (B2:150); in SP übernehmenSIM-bzw.SD-Karten(B2:130) – zwei Begri e, die von B3 während des Interviews au allend synonymverwendet werden – bzw. „so etwas wie eine Festplatte“ (B3:124) diese Aufgabe. Währendunter den Interviewteilnehmerinnen Einigkeit darüber herrscht, dassSpeicherplatzeinenötige Voraussetzung dafür ist, „Sachen“ herunterzuladen und speichern zu können (bspw.B1:161, B4:118), herrscht Verwirrung darüber, welche Daten überhaupt gespeichert werdenmüssen („der [SR] kriegt ja Sachen programmiert [...] und muss man das nicht speichern?“,B1:314-316) und wo sie herkommen („Vom Strom? [...] Ne, ähm, naja irgendwo muss es jaherkommen.“, B3:82), wo die Speicherung gewisser Daten physisch zu verorten ist (lokaloder auf „Plattformen“ oder „Apps“ wie bspw. Google, „[das] im Internet gespeichert ist“,B1:307) und ob überhaupt lokal-physische Speicherkomponenten benötigt werden (B8:16)oder Speicherplatz ausschließlich als – vermeintlich web-basierter –Zustandverstandenwird. In Analogie dazu erwecken die Beschreibungen einiger Schülerinnen zumAkkudenEindruck, dass sie diesen Begri  eher als Ladezustand(„Akku ist ja halt Akku, dann hast dudas halt nicht mehr“, B3:154), der bspw. dem SP ermöglicht zu „leben“ (B3:157), begreifenstatt alsphysischeKomponente (bspw. B1:69) in Form einesAkkumulators. So erklärt B4,dass „[Akkus] nicht mehr bei so vielen Handys [drinstecken]“ (B4:126) und „es [das] jaauch noch irgendwie anders [gibt]“ (B4:126). Schließlich würden SP „ja auch immer dünner[werden] und dann passen da ja nicht mehr so fette dicke Akkus rein“ (B4:128), weswegenes jetzt „nicht mehr so viele Handys [gäbe], in denen Akkus drin sind“ (B4:128).4Notation:Befragte:Zeilennummer; die Transkripte werden bei Interesse gerne zur Verfügung gestellt.Was haben Staubsaugerroboter, Spielekonsolen und Smartphones gemeinsam? 349114 Nils Pancratz, Ira Diethelm3 Fazit und AusblickIm Rahmen der bisher durchgeführten Interviews konnte eine Reihe anAlltagsvorstellungenzum Aufbau von IS herausgearbeitet werden, die vor allem über die Verbindungen einzelnerKomponenten untereinander, ablaufende Datenströme sowie Informationsﬂüsse und dieRollen einzelner Komponenten alsFehlvorstellungenaufzufassen sind. Hinsichtlich der Tat-sache, dass die bislang befragten Schülerinnen IS unter ihrer Oberﬂäche häuﬁg als Blackboxbehandeln und zur Erklärung ihrer Wirkprinzipien hauptsächlich sichtund interagierbareTeile identiﬁzieren, kam es dabei über die Interviews hinweg zu einer Stabilisierung. Umentsprechende Schülervorstellungen von Teil-Ganzes-Beziehungen in IS im Sinne der DRfür den IU nutzen zu können, sind jedoch zusätzliche, tiefgreifendere Studien nötig, dieauch über weitere methodische Ansätze (bspw. das Anfertigen von Zeichnungen) angestrebtwerden. In folgenden Interview-Durchläufen nach dem in diesem Beitrag vorgestellten Vor-gehens sollen Teil-Ganzes-Denkstrukturen dabei u. A. über stärkeres Einfordern passenderFormulierungen („ist enthalten in“, „ist Teil von“,) stringenter hinterfragt werden.Literaturverzeichnis[Bi98]Billman, D.: Representations. In (Bechtel, W.; Graham, G., Hrsg.): A Companion toCognitive Science, Kapitel 51, S. 649–659. Blackwell, 1998.[Br19]Brinda, T.; Napierala, S.; Tobinski, D.; Diethelm, I.: Student strategies for categorizingIT-related terms. In: Education and Information Technologies. 2019.[Di11]Diethelm, I.; Dörge, C.; Mesaros, A.; Dünnebier, M.: Die Didaktische Rekonstruktion fürden Informatikunterricht. In (Thomas, M., Hrsg.): Informatik in Bildung und Beruf. Jgg.P-189 in LNI. GI, S. 77–86, 2011.[Du07]Duit, R.: Science Education Research Internationally: Conceptions, Research Methods,Domains of Research. Eurasia Journ. of Math., Science and Tech. Ed., 3(1):3–15, 2007.[GI08]GI, Gesellschaft für Informatik e.V.: Grundsätze und Standards für Informatik in der Schule:Bildungsstandards Informatik für die Sek. I (Beilage zu LOG IN, Heft Nr. 150/151). 2008.[La87]Lako , G.: Women, Fire, and Dangerous Things. Univ. of Chicago Pr., Chicago, 1987.[Ma02]Mayring, P.: Einführung in die qualitative Sozialforschung: Eine Anleitung zum qualitativenDenken. Beltz Verlag, Weinheim und Basel, 6. Auﬂage, 2002.[Ro78]Rosch, E.: Principles of categorization. In (Rosch, E.; Lloyd, B. B., Hrsg.): Cognition andCategorisation, S. 27–48. Lawrence Erbaum Associates, Hillsdale, New Jersey, 1978.[RP18]Rücker, M. T.; Pinkwart, N.: The things that belong: a grounded theory study of studentcategorizations of complex technical artifacts. International Journal of Technology andDesign Education, 28(3):701–720, 2018.[TH84]Tversky, B.; Hemenway, K.: Objects, Parts, and Categories. In: Journal of ExperimentalPsychology: General. Jgg. 113. American Psychological Assoc., Inc., S. 169–193, 1984.[TZH08]Tversky, B.; Zacks, J.; Hard, B.: The Structure of Experience. In: Understanding Events:From Perception to Action, S. 436–464. Shipley, T. F. and Zacks, J. M., 2008.350 Nils Pancratz, Ira Diethelm<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 1 Zur Beliebtheit des Schulfachs Informatik in der Oberstufe nordrhein-westfälischer Schulen Ausgewählte Ergebnisse einer Studie zu Einflüssen auf die Wahl von Informatik in der Oberstufe Niklas Klinge1, Marco Thomas2  Abstract: Im Rahmen des Projekts „Kriterien zum Informatikunterricht von Schülerinnen und Schülern“ (KISS) wurden fast 5000 Schüler in Informatikkursen an gut 150 Schulen vorwiegend quantitativ zur Anund Abwahl, zu Vorerfahrungen, Erwartungen und zur Abiturplanung befragt. Es lassen sich Zusammenhänge zwischen der Belegung von Informatik in der Sekundarstufe I und der Anwahl von Informatik in der Oberstufe aufzeigen. Insbesondere ist eher ein Desinteresse am Informatikunterricht als die Konkurrenz zu anderen Fächern oder die Lehrerkompetenz ein Grund für die Abwahl von Informatik, wobei Unterschiede zwischen Gymnasium und Berufskolleg deutlich werden. Keywords: Informatik, Unterricht, Didaktik, Schule, Oberstufe, Bildung, Standards, MINT 1 Informatische Bildung in der GOSt NRW Seit fast 50 Jahren wird Informatik in der Sekundarstufe I (SI) in Nordrhein-Westfalen (NRW) nicht verpflichtend unterrichtet, was vermutlich Auswirkungen auf die Anwahl von Informatik in der Oberstufe (GOSt) hat. Die fehlende Gleichberechtigung unter den MINT-Fächern wird als eine weitere Ursache für die Entscheidung von Schülern3, Informatik nicht (weiter-)zu belegen, angenommen. Ein hoher Prozentsatz von durchschnittlich 35 % der Schüler wählt Informatik für das zweite Jahr der Oberstufe wieder ab (in den Naturwissenschaften sind es nur 18 %, in Mathematik 22 %) [N18].  Es existieren nur vereinzelt Studien zur Situation des Informatikunterrichts in Deutschland, die das Wahlverhalten von Schülern untersuchen. Seit 2013 besteht das Ziel des Projekts KISS, diese empirische Lücke zu schließen. Nachdem wir uns im Projekt KISS zunächst auf die SI fokussiert hatten und Lehrer, Schüler sowie Schulleiter befragten, wurden in den Schuljahren 2017/18 und 2018/19 Schüler in der GOSt befragt.                                                          1 Westfälische Wilhelms-Universität Münster, Didaktik der Informatik, Corrensstraße 80, 48149 Münster, niklas.klinge@uni-muenster.de  2 Anschrift s. o., marco.thomas@uni-muenster.de 3 Aus Gründen der Lesbarkeit verzichten wir auf die Angabe weiterer Genderformen, soweit dies sachlich nicht erforderlich ist.  cba doi:10.18420/infos2019-36Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 351 2 Niklas Klinge und Marco Thomas 2 Untersuchungsmethodik Die Datenerhebung erfolgte weitestgehend quantitativ mit einem standardisierten Online-Fragebogen. Der Online-Fragebogen umfasst zehn Blöcke zu den Themen „Allgemeine Angaben“, „Vertrautheit mit Anwendungen“, „Berührungen mit Informatik und Programmieren“, „Gründe für das Wahlverhalten“, „Abiturplanung“, „Erwartungen an einen Informatikunterricht“, „Gründe für eine Abwahl“. Die Auswahl der Items orientierte sich an Fragen, die wir bei unseren bisherigen Fragebögen in KISS erfolgreich eingesetzt haben, welche sich wiederum an bewährten Studien orientierten. Gegenstand der Untersuchung sind Schüler an Gesamtschulen, Gymnasien und Berufskollegs in NRW, die in den Schuljahren 2017/18 und 2018/19 einen Informatikkurs in der Oberstufe besuchten. Der Aufruf zur Umfrage wurde ab September 2017 in allen Bezirksregierungen NRWs gestartet. Im Schuljahr 2017/18 wurden insgesamt 903 Schüler an 52 Schulen befragt, im Schuljahr 2018/19 haben sich 4021 Schüler von 131 Schulen beteiligt. Schulform Berufskolleg Gesamtschule Gymnasium Gesamt* 101 246 584 Rückmeldungen (in %) 26,73 5,70 24,14 Tabelle 1: Anzahl Schulen bzgl. intendierter Population nach Schulformen. *Quelle: [N18] 3 Ergebnisse und Auswertung Es können an dieser Stelle aus Platzgründen nur einige Zusammenhänge und Interpretationen der Studie dargestellt werden. Die Zusammenhänge weisen alle eine hohe Signifikanz (Chi-Quadrat höher als 30 und einem p-Wert < 0,005) auf. Sprechen wir von wagen Vermutungen, aufgrund geringer Signifikanz oder schlechter Datenlage, werden diese gekennzeichnet. 3.1 Anwahl von Informatik Wir haben die Schüler in einer Mehrfachauswahl von Möglichkeiten gefragt, warum sie Informatik gewählt haben (ergänzend konnten die Schüler in einem Freitext antworten). Über die Hälfte der Schüler gaben an, Informatik gewählt zu haben, weil sie es interessanter als andere naturwissenschaftliche Fächer finden. Für viele schien der Informatikkurs aber auch eine Alternative zu einer weiteren Fremdsprache zu sein. Zwischen 28 % und 38 % der Schüler hatten schon Vorkenntnisse im Programmieren und zur Informatik. Vergleichbare Aussagen finden sich in unseren Studien zur Anwahl von Informatik in der SI [JT15]. Im näheren Umfeld gab es bei der Hälfte der Schüler Personen, die einen „[…] Beruf mit Bezug zur Informatik ausüben? (z.B. Software-Entwicklung, System-Administration etc.)“. Gut 43 % der Schüler nannten als weiteren Grund, dass ihnen der Unterricht in der Unterund Mittelstufe gefallen hat.  352 Marco Thomas, Niklas Klinge Beliebtheit des Schulfachs Informatik in der Oberstufe in NRW  3 Gut ein Drittel der befragten Schüler hatte keinen Kontakt mit Informatik in der SI. Fast die Hälfte der Schüler gab an, Informatik als Wahlpflichtfach entweder als reines Fach oder als Kombinationskurs in der SI belegt zu haben. Bei einem Fünftel der Schülerschaft hatte auch die gesamte Klasse das Fach in der SI4.  Nur etwa 35 % aller befragten Schüler gaben an, dass sie bei der Anwahl von Informatik für die GOSt wussten, was sie erwartet. Es lassen sich Tendenzen für einen positiven Einfluss der Vorkenntnisse aus der SI auf die spätere Anwahl von Informatik in GOSt finden. 70% der Schüler, die einen Wahlpflichtkurs in der SI besucht hatten, gaben an, Informatik u. a. deswegen gewählt zu haben, weil sie es in der SI hatten und es ihnen gefallen hat. Besuchten die Schüler nur Ergänzungsstunden bzw. AGs lag deren Anteil bei obiger Aussage nur bei circa 26 %, wurde die gesamte Klasse in Informatik unterrichtet bei 40 %. 3.2 Abwahl von Informatik Die Schüler wurden gefragt, ob sie Informatik am Ende der EF oder nach dem ersten Halbjahr abwählen wollen und ob sie Informatik sofort abwählen würden, wenn dies möglich wäre. Über alle Schulformen und -stufen mit GOSt planen 75 % der Schüler Informatik nicht abzuwählen. Wenn die Abwahl sofort möglich wäre, würde ein Fünftel der Schüler Informatik abwählen. Warum die Schüler Informatik abwählen bzw. sofort abwählen wollen, kann verschiedene Gründe haben. Im Folgenden können wir nur zwei Zusammenhänge von erhobenen Parametern darstellen und ansatzweise diskutieren. Interesse an Informatik und dem Programmieren Es wird deutlich, dass bei Interesse an dem Fach Informatik, auch kein Abwahlwunsch besteht. Stimmen die Schüler Aussagen wie „Ich interessiere mich für Computer“ oder „Ich möchte programmieren“ zu, so wollen mehr als 75 % dieser Schüler den Kurs nicht abwählen. Häufig ist Desinteresse ein Grund gegen die Fortführung eines Informatikkurses: Schüler, die Informatik abwählen möchten, wollen nicht programmieren, interessieren sich nicht für Computer oder benötigen aus ihrer Sicht Informatik nicht für ihre Zukunft. Werden andere Wahlpflichtfächer von den Schülern als interessanter angegeben, so wollen über 40% dieser Schüler den Kurs abbrechen. Einigen Schülern sind die Informatik und das Programmieren aber auch zu schwer und möchten deswegen das Fach nicht mehr belegen. Die Zufriedenheit der Schüler mit dem Informatikunterricht ist für die Abwahl von Informatik bedeutend. Je nachdem, ob die Schüler Informatik abwählen möchten oder nicht, stellen sie sich den Unterricht anders vor. Diejenigen, die Informatik nicht mehr belegen möchten, wollen weniger „mathematische Aufgaben lösen“, „Automaten analysieren und modellieren“ oder „über informatische Sachverhalte argumentieren“. Diese Schüler betonen, dass Inhalte langsam und verständlich erläutert werden sollen.                                                          4 Z. B. im Rahmen eines schulinternen Lehrplans mit Pflichtstunden Informatik in der Unterstufe. Aktuell werden in NRW (Modell-)Versuche zur Pflichtstunden Informatik in der SI durchgeführt. Zur Beliebtheit des Schulfach Informatik 353 4 Niklas Klinge und Marco Thomas Schulform/-stufe Die Beliebtheit des Informatikkurses scheint nach Schulform und -stufe zu variieren. Schüler vom Gymnasium führen am ehesten den Informatikkurs weiter: 8 von 10 Schülern geben an, den Kurs nicht abzuwählen. Nur etwa 7 % der Schüler wählen Informatik nach der EF oder zum Halbjahr ab. Beim Berufskolleg ist die Quote mit 15 % mehr als doppelt so hoch und nur 6 von 10 Schülern wollen den Kurs weiterhin belegen. Erklären lässt sich dies vermutlich dadurch, dass Schüler an den befragten Berufskollegs Wirtschafts-informatik verpflichtend5 belegen müssen, sich aber für das Fach bzw. die Inhalte nicht interessieren.  4 Fazit und Ausblick Die Mehrheit der Schüler in den Informatikkursen ist an Informatik interessiert, aber Desinteresse bedingt die Abwahl von Kursteilnehmern. Eine Anwahl von Informatik in der GOSt wird durch Informatik in der Sekundarstufe I begünstigt. Die Untersuchung zeigt, dass eher die Schüler vom Gymnasium Informatik fortführen möchten als die vom Berufskolleg. Literaturverzeichnis [JT15] Janzen, Irina; Thomas, Marco; Angelica Yomayuza (2015): Wahlverhalten zum Schulfach Informatik in der SI. In: Jens Gallenbacher (Hg.): Informatik 2015. Informatik allgemeinbildend begreifen; 16. GI-Fachtagung Informatik und Schule ; Tagung vom 20.-23. September 2015. Bonn. S. 181–190.  [N18] NRW: Das Schulwesen in NRW aus quantitativer Sicht. Amtliche Schuldaten zu den Schuljahren 2014-2018 https://www.schulministerium.nrw.de/docs/bp/Ministerium/Service/Schulstatistik/Amtliche-Schuldaten/index.html                                                          5 https://www.berufsbildung.nrw.de/cms/bildungsgaenge-bildungsplaene/berufliches-gymnasium-anlage-d/stundentafeln/anlage-d-27.html (14.01.2019) 354 Marco Thomas, Niklas Klinge<Name>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 Informatikwissen im Schulalltag sichtbar machen „Wie funktioniert das Internet?“ in Kinderzeichnungen Bettina Waldvogel1 Abstract: Primarschulkinder gehen geschickt mit digitalen Geräten um und erwecken einen kompetenten Eindruck. Diese Anwenderfertigkeiten täuschen nicht selten über die Tatsache hinweg, dass die grundlegenden Konzepte falsch verstanden wurden oder gar nicht bekannt sind. Das stellt die Lehrpersonen vor die Schwierigkeit, auf welchem Vorwissen sie aufbauen können.  Die Forschung kennt verschiedene Methoden zur Erhebung von Präkonzepten. Diese eignen sich aber meist nicht für den Schulalltag sei es, weil die Auswertung der Daten zu aufwändig oder das Erhebungssetting im regulären Klassenunterricht nicht durchführbar ist. Im Unterricht muss die Erhebung von Vorwissen schnell gehen und vor allem muss die Lehrperson auf einen Blick erkennen können, wo Wissenslücken bestehen oder problematische Fehlkonzepte vorliegen. In diesem Beitrag wird gezeigt, wie Kinderzeichnungen im Unterricht genutzt werden können zur schnellen Erhebung der Schülervorstellungen anhand des Beispiels «Wie funktioniert das Internet?». Die im regulären Unterricht entstandenen Zeichnungen liefern gleichzeitig auch wertvolle Anknüpfungspunkte für die Forschung.  Keywords: Präkonzepte, Vorwissen, Kinderzeichnungen.  1 Einleitung Im Rahmen des Moduls Medienund Informatik im Lehrplan 21 [Le16] werden in der deutschsprachigen Schweiz eine Vielzahl von Kompetenzen unterrichtet. Es fehlen Methoden, die der Lehrperson in kurzer Zeit, im Rahmen des regulären Unterrichts das Wissen der Schülerinnen und Schüler sichtbar machen.  In der Wissenschaft gibt es viele Ansätze, wie Alltagswissen und Präkonzepte erhoben und visualisiert werden können. Eine anschauliche Gegenüberstellung von Erhebungsmethoden zum Alltagswissen in der Informatik findet man zum Beispiel bei Rücker [Rü17]. Die präsentierten Methoden basieren hauptsächlich auf Interviews, welche eine hochgradig individualisierte Erfassung des Wissens ermöglichen, deren Durchführung und Auswertung jedoch zeitaufwendig und im Rahmen des regulären Unterrichts kaum realisierbar ist.   Novak und Cañas [NC08] empfehlen Concept Maps anstelle von Interviews unter anderem wegen der effizienten, automatisierten Auswertung. Für die Schülerinnen und                                                         1 Pädagogische Hochschule Schaffhausen, Fachbereich Medien und Informatik, Ebnatstrasse 80, CH-8200 Schaffhausen, bettina.waldvogel@phsh.ch   cba doi:10.18420/infos2019-37Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 355 16 Bettina Waldvogel Schüler, sowie für die Lehrpersonen stellt aber allein schon die Bedienung der Concept Mapping Software eine zeitraubende Hürde dar.  Mit Kinderzeichnungen als Erhebungsmethode, zeigt Neuss [Ne17] eine Möglichkeit, die ohne aufwändige Einführung angewendet werden kann, praktisch auf jeder Schulstufe. Die vorliegende Arbeit beschreibt eine Vorstudie zur Klärung, inwiefern Kinderzeichnungen gleichzeitig für die schnelle, unkomplizierte Erfassung des Vorwissens bzw. zur Dokumentation von Lernfortschritten im Schulalltag, aber auch für weiterführende wissenschaftliche Studien genutzt werden können.  2 Vorgehen und Unterrichtssetting In der folgenden Untersuchung wurden die Schülerinnen und Schüler zum ersten Mal mit dem Internet als eigentliches Unterrichtsthema konfrontiert. Das Internet haben alle schon in der Freizeit benutzt. Dabei haben einige Schülerinnen und Schüler lückenhafte oder falsche Vorstellungen entwickelt.  Der Auftrag an die Schülerinnen und Schüler lautete: „Wie funktioniert das Intenet? – Zeichne alles, was Dir dazu einfällt. Einzelne Teile dürfen beschriftet werden.“ Um das Vorwissen und den anschliessenden Wissenserwerb zu visualisieren wurde folgendes Vorgehen gewählt: 1. Ersterhebung am Anfang der Lektion: Zeichnung, ca. 15 Minuten. 2. Erklärvideo vom Schweizer Schulfernsehen (SRF mySchool [SRF17]) schauen und diskutieren ca. 15 Minuten (Videodauer 5:41 Minuten). 3. Zweiterhebung am Ende der gleichen Lektion: Zeichnung, ca. 15 Minuten.  4. Dritterhebung einen Monat später: Zeichnung, ca. 15 Minuten.  Die Erstund Zweiterhebung wurden mit insgesamt 42 Schülerinnen und Schülern aus zwei Klassen durchgeführt, die Dritterhebung nur an einer Klasse mit 22 Kindern.  3 Resultate Im Erklärvideo wird das Internet als weltumspannendes Netzwerk gezeigt, sowie vier zentrale Elemente des Internets erklärt: Server, Router, Kabel und Endgeräte. Die Zeichnungen wurden in einer ersten rudimentären Auswertung in Hinblick auf das Vorhandensein dieser Elemente untersucht. Weiter wurde darauf geachtet, ob diese Elemente isoliert oder vernetzt dargestellt wurden. Besonders interessante Einblicke entstanden, inwiefern das Vorwissen aus der Ersterhebung in der Zweitund Dritterhebung noch in Erscheinung trat.  356 Bettina Waldvogel Informatikwissen im Schulalltag sichtbar machen 17 In der Ersterhebung wurden im Durchschnitt 0.9 von den vier im Erklärvideo genannten Elementen genannt, meist die Endgeräte. Am Häufigsten wurden jedoch die Logos von Google (24 mal) und YouTube (23 mal) gezeichnet, gefolgt von Spielen und anderen Apps. In der Lebenswelt der Kinder wird das Internet als Dienstleistung rege genutzt. Das Internet als weltumspannende Infrastruktur ist jedoch weitgehend unbekannt.  In der Zweiterhebung (nach dem Erklärvideo) wurden im Durchschnitt 3.5 der vier im Erklärvideo genannten Elemente gezeichnet. Interessanterweise wurden Server, Router und Kabel oft gezeichnet und sogar miteinander vernetzt. Die Endgeräte sind dafür aber in Vergessenheit geraten (Abb. 1).     Abb. 1: In der Zweiterhebung dominieren drei der vier im Erklärvideo genannten Elemente des Internets: Kabel, Server, Router. Die Endgeräte wurden oft vergessen. Hinweise darauf, ob es sich bei der Zweiterhebung nur um eine kurzfristige Konstruktion oder tatsächlich um einen Konzeptualisierungswechsel handelt, gibt eine Dritterhebung, welche einen Monat später stattfand. Im Durchschnitt wurden 3.1 der vier im Erklärvideo genannten Elemente gezeichnet. Also nur geringfügig weniger als in der Zweiterhebung aber deutlich mehr als in der Ersterhebung. Die Schülerinnen und Schüler haben also etwas gelernt. Viele haben ihre Konzeptualisierung nachhaltig verändert, weg vom Endgeräteund App-zentrierter Sichtweise hin zu einem globalen, weltumspannenden Blick auf das Internet.   4 Schlussfolgerungen und Ausblick Zeichnungen und Skizzen erlauben den Lehrpersonen schnell zu erfassen, welche Konzeptualisierungen vorhanden sind. Die oben skizzierte rudimentäre Auswertung eignet sich für den Unterrichtsalltag. Wichtig ist, die Zeichnungen zu diskutieren und reflektieren, damit sich die Kinder ihrer Vorstellungen bewusst werden [HM18, S.51].   Informatikwissen im Schulalltag sichtbar machen 357 18 Bettina Waldvogel Die Tatsache, dass die meisten Zeichnungen zwischen der Zweitund Dritterhebung keine grossen Unterschiede aufweisen, legt nahe, dass mehr als nur eine spontane Ad-hoc Konstruktion, sondern ein nachhaltiges Umlernen stattgefunden hat.  Nicht allen Kindern fällt das Zeichnen leicht. Deshalb schlagen verschiedene Autoren begleitende Interviews vor [Ne17]. Es wäre auch denkbar, Zeichnungen vorzugeben und diese hinterfragen zu lassen im Sinne der von Weigend [2005] vorgeschlagenen Vorgehenswiesen zur Erschliessung der intuitiven Modelle.  Die rudimentäre Vorstudie für den Unterrichtsalltag lässt grosses Potenzial in den Kinderzeichnungen vermuten. Eine Studie mit systematischer Auswertung ist in Planung.   Literaturverzeichnis  [Le16]  Lehrplan 21, Modul Medien und Informatik, Deutschschweizer Erziehungsdirektorenkonferenz, 2016.   [Rü17]  Rücker, M.T., Pancratz, N., Gold-Veerkamp, C., Pinkwart, N., Brinda, T., 2017: Alltagsvorstellungen in der Informatik: Erhebungsmethodik und Implikationen für den Unterricht, I.Diethelm (Hrsg.): Informatische Bildung zum Verstehen und Gestalten der digitalen Welt, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2017, 393-400. [NC08]  Novak, J., and A.J. Cañas, 2008: The Theory Underlying Concept Maps And How to Constuct them. Technical Report IHMC CmapTools 2006-01 Rev 01-2008, Florida Institute for Human and Machine Cognition. [Ne17] Neuss, N., 2017: Kinderzeichnungen als Erhebungsmethode. In: Mikos L. und Wegener C. (Hrsg.), Qualitative Medienforschung. Ein Handbuch, 2. Auflage. UVK Verlagsgesellschaft, Konstanz und München. S. 380 – 388.  [SRF17] Schwiezer Radio und Fernsehen, 2017: Wie funktioniert das Internet? Auf Youtube: https://www.youtube.com/watch?v=e9FJPnFQWi8 (zuletzt besucht: 02.05.2019) [HM18]  Hartinger, A., und L. Murmann, 2018: Schülervorstellungen erschliessen – Methoden, Analyse, Diagnose. In: Adamina M., M. Kübler, K. Kalcsics, S. Bietenhard, E. Engeli (Hrsg.), «Wie ich mir das denke und vorstelle…», Bad Heilbrunn Klinkhardt. S. 51-62.  [We05]  Weigend, M., 2005: Intuitive Modelle in der Informatik. In: Lecture Notes in Informatics. Unterrichtskonzepte für informatische Bildung. Proceedings zur 11. GI-Fachtagung Informatik und Schule. S. 275-284.  358 Bettina WaldvogelPostercba(Hrsg.): 19. GI Fachtagung Informatik und Schule,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Algorithmen im Anfangsunterricht mit RunCodeChristoph Gräßl1An bayerischen Gymnasien wird aktuell in den Jahrgangsstufen 6 und 7 einstündigerAnfangsunterricht in Informatik gehalten. Ein Schwerpunkt liegt im BereichBeschreibungvon Abläufen durch Algorithmen. In den Schulbüchern und Unterrichtsempfehlungen wirddavon ausgegangen, dass der Zugang über altersgerechte Lernumgebungen erfolgt, daherkömmliche Programmiersprachen (wie Pascal, C oder Java) ungeeignet sind. Häuﬁgwird hier eine Anwendung, basierend auf einer Arbeit von Richard E. Pattis, eingesetztin der ein virtueller Roboter in einer schachbrettartig aufgebauten Welt programmiertwerden kann. Durch diese Programme kann der Roboter Aufgaben, wie beispielsweisedas Legen eines Quadrates mit Ziegelsteinen, erledigen. Insgesamt sind die Möglichkeiteneiner abwechslungsreichen Aufgabenstellung recht beschränkt und die Graﬁk ist zwarzweckmäßig, aber dennoch wenig ansprechend und keineswegs zeitgemäß. Infolgedessenist die Schülermotivation, mit diesem System zu arbeiten, nicht von Dauer.RunCode kombiniert den bewährten Ansatz von Pattis mit einer ansprechenderen 3D-Umgebung und zusätzlichen Befehlen, die es erlauben, spannende Aufgaben zu stellen. DieLernumgebung, dargestellt in Abbildung1, benötigt minimale Einarbeitungszeit und istintuitiv bedienbar. Abb. 1: Das Benutzerinterface vonRunCode1Donau-Gymnasium Kelheim, Rennweg 61, 93309 Kelheimc.graessl@donau-gymnasium.decba doi:10.18420/infos2019-38Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 3612 Christoph Gräßl wiederhole solange nicht betretbarwiederhole solange nicht betretbarhinlegen*wiederholeschritt*wiederholeAbb. 2: Links: Roboter hebt einen Teich aus. Rechts: Programm zum Erreichen einer Nachbarinsel.Die graﬁsche Benutzeroberﬂäche besitzt im linken Bereich einen Editor, in dem dasProgramm eingegeben werden kann. Abspeichern und Laden ist ebenfalls möglich. Unterdem Editor beﬁnden sich Knöpfe zum Ausführen, Anhalten und Unterbrechen des Codes.Die Ausführungsgeschwindigkeit kann mit einem Regler eingestellt werden. Zur besserenÜbersicht können benutzerdeﬁnierte Anweisungen in eine Bibliothek verschoben werdenund verschwinden somit aus dem Editor. Außerdem ist es möglich per Knopfdruck alleBefehle, Kontrollstrukturen und Bedingungen mit Beschreibung angezeigt zu bekommen.Während der Programmausführung wird die aktuelle Befehlszeile markiert. Sowohl derProgrammcode, als auch die erzeugteWeltlassen sich abspeichern beziehungsweise laden.RunCodebesitzt noch eine Reihe weiterer Eigenschaften, die aber aufgrund von Platzmangelin diesem Schriftstück nicht präsentiert werden können.Es werden im Folgenden einige Aufgabenbeispiele, die auch bereits im Unterricht getestetwurden, kurz skizziert:•Grabe, beginnend am Meer, einen Bachlauf der Länge 5 Schritt aus. Der Graben füllt sichdann automatisch mit Wasser. Wenn du das gescha t hast, dann schreibe das Programmso, dass am Ende des Grabens ein See entsteht (Abbildung2links).•Grabe einen Tunnel durch den Berg.•Baue eine Brücke bis zur nächsten Insel (mögliche Lösung ist in Abbildung2rechts).•Grabe einen Tunnel unter dem Meer bis zur nächsten Insel. Achte darauf, mindestens 6Schritt tief zu graben, damit kein Wasser in den Tunnel eindringt.•Erstelle einen 6x6 Schritt breiten und 20 Schritt tiefen Schacht. Baue anschließend eineTreppe, die vom Grund des Schachts an die Oberﬂäche zurück führt.Die in dieser Arbeit vorgestellte Lernumgebung wurde im Schuljahr 2018/19 in zweiInformatikklassen der 7. Jahrgangsstufe eingesetzt und evaluiert. Obwohl die verwendetenComputer (unter Windows 7) vom aktuellen Stand der Technik eher als leistungsschwachanzusehen sind, liefRunCodeﬂüssig und ruckelfrei. Die Schüler fanden sich schnell zurechtund die Einarbeitungszeit war sehr gering. Der Lehrplansto  im BereichAlgorithmenkonntemit der Software komplett umgesetzt werden.RunCodeist aufhttp://klassenkarte.dekostenlos erhältlich.362 Christoph Gräßl<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 Identifizierung leistungsstarker Schülerinnen und Schüler in der Informatik Claudia Hildebrandt1, Matthias Matzner1  Abstract: Die schulischen Entwicklungsmöglichkeiten leistungsstarker und potenziell besonders leistungsfähiger Schülerinnen und Schüler in der Schule unabhängig von Herkunft, Geschlecht und sozialem Status im Regelunterricht zu fördern, ist eines der Ziele des BMBF-Projekts LemaS (Leistung macht Schule) bzw. des Teilprojekts MINT-Informatik. Mithilfe einer Literaturrecherche wird ein erster theoretischer Merkmalskatalog aufgestellt, der zur möglichen Identifizierung leistungsstarker und potenziell besonders leistungsfähiger Schülerinnen und Schüler in der Sekundarstufe I beitragen soll. Keywords: Begabung, Leistung, Informatik, Diagnose  1 Einleitung und das Projekt LemaS Mehr Chancengerechtigkeit für alle, unabhängig von Herkunft, Geschlecht und sozialem Status, ist eines der bildungspolitischen Ziele der Initiative „Leistung macht Schule LemaS“, die Bund und Länder gemeinsam unterstützen. Umgesetzt wird LemaS mithilfe von 22 Teilprojekten, von denen sich acht auf den MINT-Bereich beziehen. Deutschlandweit sind 300 Schulen aus dem Primarund Sekundarbereich in die Umsetzung eingebunden. Der offizielle Start für die Bund-Länder-Initiative erfolgte am 30.01.2018 in Berlin [KB18].  Dem LemaS-Verbundprojekt liegt ein mehrdimensionaler Leistungsbegriff zugrunde, der Leistung einerseits als schulbezogene Leistung betrachtet, andererseits aber die Persönlichkeitsentwicklung und gesellschaftliche Verantwortung mit einschließt. Die Begriffe des Leistungspotenzials und der Begabung werden gleichgesetzt. Das Leistungspotenzial ergibt sich dabei als individuelle Konstellation aus Fähigkeiten und (dynamisch sich entwickelnden) Persönlichkeitsmerkmalen. Begabung ist eine Disposition von Leistung, die „durch langfristige systematische Anregung, Begleitung und Förderung das Individuum in die Lage versetzt, sinnorientiert und verantwortungsvoll zu handeln und auf Gebieten, die in der jeweiligen Kultur als wertvoll erachtet werden, anspruchsvolle Tätigkeiten auszuführen“ [Ip09, S. 16]. Für die Entwicklung eines theoretischen Merkmalskatalogs ist die Unterscheidung zwischen leistungsstarken und potenziell besonders leistungsfähigen Schülerinnen und Schüler noch nicht notwendig, so dass im Folgenden vereinfacht von leistungsstarken Schülerinnen und Schülern gesprochen wird.                                                          1 Carl von Ossietzky Universität Oldenburg, Didaktik der Informatik, Uhlhornsweg 84, 26129 Oldenburg, claudia.hildebrandt@uni-oldenburg.de  cba doi:10.18420/infos2019-39Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 363 16 Claudia Hildebrandt und Matthias Matzner  2 Das Konstrukt informatischer Leistungsstärke sowie Ausblick Eine erste Annäherung an die informatikspezifischen Begabungsmerkmale für Kinder in der Sekundarstufe I, die das Fundament der informatischen Leistungsstärke sind, erfolgt mithilfe der Beachtung und Erweiterung der Ergebnisse von Kujath und Schwill [KS11], die die Problemlösefähigkeit von Hochleistern (Endrundenteilnehmer des Bundeswettbewerbs Informatik 2005) im Vergleich zu Niedrigleistern (leistungsschwächere Informatikstudenten vor dem Vordiplom) untersucht haben (siehe „Informatikspezifische Merkmale“, Abb. 1). Weiterhin ist anzunehmen, dass die begabungsstützenden Persönlichkeitseigenschaften, die im Modell der Entwicklung mathematischer Begabungen im Grundschulalter nach Käpnick und Fuchs [Kä13] zu finden sind, ebenfalls für leistungsstarke Schüler-innen und Schüler der Informatik zutreffen. Ergänzt werden sie durch die Kommunikations-fähigkeit sowie die Fähigkeit zum Perspektiv-wechsel (siehe „Stützende Persönlichkeitseigen-schaften“, Abb. 1).                                   Abb. 1: Merkmalsystem angelehnt an [Kä13] sowie [KS11] Die aufgestellten informatikspezifischen Leistungsmerkmale sind mithilfe geeigneter Indikatoraufgaben zu verifizieren oder zu widerlegen bzw. neue Merkmale müssen hinzugefügt werden. Kontraststudien mit Hochund Niedrigleistern werden folgen.  Literaturverzeichnis [Ip09] International Panel of Experts for Gifted Education. (2009). Professionelle Begabtenförderung. Empfehlungen zur Qualifizierung von Fachkräften in der Begabtenförderung. Salzburg: Österreichisches Zentrum für Begabtenförderung und Begabungsforschung (ÖZBF).   [Kä13] Käpnick, F.: Theorieansätze zur Kennzeichnung des Konstruktes „Mathematische Begabung" im Wandel der Zeit. In (Firtzlar, T.; Käpnick, F., Hrsg.): Mathematische Begabungen, 1. Aufl., WTM-Verlag, Münster, 2013, S. 9–40. [KB18] Käpnick, F.; Benölken, R.: „Leistung macht Schule“ (LemaS). Ein BMBF-Projekt zur Förderung leistungsstarker und potenziell besonders leistungsfähiger Schülerinnen und Schüler. Mitteilungen der GDM 105/2018, S. 27-28, 2018.  [KS11] Kujath, B., Schwill, A.: Hochleister bei der Lösung informatischer Probleme Was können Niedrigleister lernen. In (Bayrhuber, H.; Harms, U.; Muszynski, B.; Ralle, B.; Rothgangel, M.; Schön, L.-H.; Vollmer, H. J.; Weigand, H.-G., Hrsg.): Empirische Fundierung in den Fachdidaktiken, S. 147-158, 2011.  364 Claudia Hildebrandt, Matthias Matzner<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 Gratulation! Sie haben die Prüfung bestanden. Ergebnisse einer empirischen Umfrage zum ECDL an österreichischen Schulen. Peter Micheuz1  Abstract: Der ECDL hat seit mehr als 20 Jahren einen nicht zu vernachlässigenden Teil österrei-chischer Schulgeschichte im Kontext digitaler (Aus)Bildung geschrieben. Dieser empirisch ange-legte Beitrag befasst sich mit den Ergebnissen einer repräsentativen Umfrage über dieses internati-onale Zertifikat unter österreichischen Informatiklehrenden.  Keywords: Zertifikat, Syllabus, Qualifikation, IT-Skills, Digitale Grundbildung 1 Einleitung und methodisches Vorgehen  Im Jahr 1997 kam der ECDL (European Computer Driving License) durch die Österrei-chische Computergesellschaft auch nach Österreich. Kurz darauf  wurde der ECDL an österreichischen Schulen angeboten. Der Schwerpunkt des Beitrages liegt in der Darstel-lung der Ergebnisse einer im Jahr 2017 durchgeführten repräsentativen Online-Umfrage unter Experten und Lehrkräften. Er liefert ein differenziertes (Stimmungs)Bild der subjek-tiven Einstellungen und Meinungen zum Angebot des ECDL an österreichischen Schulen.  Im Juni 2017 wurde unter den registrierten Usern des österreichischen Informatik-Portals eine Online-Umfrage durchgeführt. Mit der Erhebung sollte eine Momentaufnahme von Expertenmeinungen einholt werden, um daraus eine Standortbestimmung zum ECDL an österreichischen Schulen ableiten zu können. 140 Rückmeldungen von Experten aus ganz Österreich und aus verschiedenen Schultypen wurden sowohl quantitativ als auch qualita-tiv ausgewertet.   2 Auszüge der Ergebnisse der Umfrage  Beispiele von Freiantworten: • „IT/EDV/Office Wissen geht durch Handy & Co teilweise verloren. Daher ECDL nach wie vor wichtig! (Nach NMS in AHS/BMHS teilweise schon wieder grobe Lücken im Anwendungswissen)“  • „Nachweis von erworbenen Kompetenzen, administrativer Aufwand“                                                          1 Alpen-Adria-Universität Klagenfurt, Institut für Informatik und deren Didaktik, Universitätsstraße 65-67, 9020 Klagenfurt, peter.micheuz@aau.at  cba doi:10.18420/infos2019-40Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 365 16 Vorname1 Nachname1 und Vorname2 Nachname2 • „Produktschulung, microsoftlastig, keine informatischen Konzepte“  • „kein Thema / AHS: zu früh für's Berufleben / Kompetezen können lustvoller er-worben werden“ Kumulierte exemplarische Ergebnisse von quantitativ erfassten Daten:   Auszüge der SWOT-Analyse zu inhaltlichen Aspekten:  Kategorie Stärken – Chancen Schwächen Bedrohungen Inhaltliche Aspekte Klare Stoffabgrenzung, Basis-kompetenzen. Gute Unterla-gen (Portal easy4me). 1x1 der Informatik. Wirt-schaftszertifikat. Abdeckung der Office-Skills. Inhalte z.T. lebensfremd. Nur bedingt für alle von Bedeutung. Informatik ist mehr als ECDL. Hat nichts mit Informatik zu tun. In-formatik kommt zu kurz. Zuviel Produkt-schulung – keine Konzeptschulung. Zu ein-fach: Zuviel wird bei Prüfungen angegeben (z.B. Formeln) 3 Schlussanmerkungen Mit diesem Beitrag wurde versucht, auf Grundlage einer Befragung unter Experten ein möglichst objektives und nicht „schöngefärbtes“ (Stimmungs)Bild des ECDL an österrei-chischen Schulen zu zeichnen. Die Umfrage ergab eine starke Polarisierung, wobei sich die Befürworter und Gegner des ECDL ziemlich die Waage halten.  Die kürzlich ab dem Schuljahr 2018/2019 verordnete Einführung des Faches Digitale Grundbildung für die Sekundarstufe I (5.-8. Schulstufe) mit einem sehr detaillierten Lehr-plan hat auch die Rahmenbedingungen für den ECDL geändert. Derzeit kann noch nie-mand sagen, wie sich das auswirken wird. Die Entwicklungen rund um den ECDL an österreichischen Schulen befinden sich auf jeden Fall in einer sehr interessanten Phase.   366 Peter Micheuz<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 15 Freies Explorieren und Programmieren Erkenntnisse über die Eignung didaktischer Materialien mit informatischem Fokus für offene Unterrichtskonzepte in der Grundschule Philipp Straube1, Martin Brämer2 und Hilde Köster3  Abstract: Innerhalb eines offenen Lernsettings wurde das Interesse an unterschiedlichen Lernmedien mit informatischem Fokus in einer Grundschulklasse evaluiert. Es zeigten sich signifikante Genderdifferenzen. Keywords: Sachunterricht, Computational Thinking, Grundschule  Die fortschreitende Digitalisierung der Lebenswelt führt zu Herausforderungen, die Kompetenzen erfordern, die über eine reine Medienbildung hinausgehen [Dö17]. Dementsprechend ist eine Förderung informatischer Kompetenzen auch in der Grundschule anzustreben [Ge19].  Didaktische Materialien mit informatischem Fokus, die potentiell auch für die Grundschule geeignet scheinen, zeigen zunehmende Verbreitung. Eine systematische Evaluation dieser Materialien stellt aktuell ein Desiderat dar. Diese Studie untersucht das Interesse von Kindern einer 1.-3. Klassenstufe in Bezug zu unterschiedlichen Lernmedien mit informatischem Fokus. Konkret soll untersucht werden, ob sich Unterschiede im Interesse bei Mädchen und Jungen in Relation zu unterschiedlichen Lernmedien mit informatischem Fokus zeigen. Interesse wird hier verstanden als „[…] die Beziehung einer Person zu und die Auseinandersetzung mit erfahrbaren Ausschnitten ihrer Umwelt. Im Hintergrund steht eine Person-Gegenstands-Konzeption“ [Kr99]. Als ein Indikator für Interesse wird hier die maximale Verweildauer an den konkreten Stationen betrachtet. Die hier betrachtete Lernumgebung orientiert sich an der Konzeption des Freien Explorierens und Experimentierens [Kö06] und besteht aus elf verschiedenen Angeboten mit informatischem Fokus, die teilweise hardwarebasiert (z.B. Roboter) und teilweise ausschließlich softwarebasiert (z.B. Online-Spiele) sind. Die Kinder sollten die Materialien selbstbestimmt und selbstorganisiert explorieren bzw. damit arbeiten.                                                         1 Freie Universität Berlin, FB Erziehungswissenschaften und Psychologie, AB Grundschulpädagogik / Sachunterricht, Habelschwerdter Allee 45, 14195 Berlin, philipp.straube@fu-berlin.de 2 siehe 1, martin.braemer@fu-berlin.de 3 siehe 1, hilde.koester@fu-berlin.de  cba doi:10.18420/infos2019-41Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 367 16 Philipp Straube, Martin Brämer & Hilde Köster Die Stichprobe besteht aus einer Berliner Grundschulklasse (N = 28), die jahrgangs-übergreifend (Jül 1.-3. Klasse) lernt. Die Gruppe beinhaltet 14 Jungen und 14 Mädchen (1. Klasse: 8 Schüler*innen; 2. Klasse: 10 Schüler*innen; 3. Klasse: 10 Schüler*innen).  Die Lernumgebung wurde videographiert und die Daten quantitativ im Hinblick auf die maximale Verweildauer an den Stationen ausgewertet. Mögliche Unterschiede wurden mit dem Wilcoxon-Man-Whitney-U-Test geprüft.  Die Analysen zeigen für die drei hier betrachteten Materialien (Scratch Jr., Lego® EV3, Lego® WeDo) Genderdifferenzen in Bezug auf die maximale Verweildauer. Eine statistische Überprüfung zeigt nicht-signifikante Unterschiede an der Station Lego® WeDo (U=17, p= 0.050, d=0.63).  Ein signifikanter Effekt mittlerer Stärke zu Gunsten der Jungen zeigt sich an der Station Lego® EV3 (U = 7, p = 0.041*, d = 0.65). Bei Scratch Junior konnte ein höchst signifikanter Effekt hoher Effektstärke zu Gunsten der Mädchen festgestellt werden. (U = 102, p = 0.000***, d = 1.01).   Die Ergebnisse deuten darauf hin, dass Lego® EV3 eher Jungen zu interessieren scheint, wohingegen die Mädchen eher eine Präferenz für Scratch Junior zeigen. Die Differenz in der Verweildauer zu Gunsten der Jungen an der Station Lego® WeDo verfehlt die Signifikanz knapp.  Folgende Untersuchungen müssen zeigen, inwiefern diese Trends weitere Evidenz finden. Literaturverzeichnis [Dö17] Döbeli Honegger, B.: Mehr als 0 und 1. Schule in einer digitalisierten Welt. Hep Verlag, Bern, 2017. [Ge19] Gesellschaft für Informatik: Kompetenzen für informatische Bildung im Primarbereich. https://dl.gi.de/bitstream/handle/20.500.12116/20121/61-GI-Empfehlung_Kompetenzen_informatische_Bildung_Primarbereich.pdf, 14.02.2019. [Kö06] Köster, H.: Freies Explorieren und Experimentieren. Eine Untersuchung zur selbstbestimmten Gewinnung von Erfahrungen mit physikalischen Phänomenen im Sachunterricht. Logos-Verl., Berlin, 2006. [Kr99] Krapp, A.: Intrinsische Lernmotivation und Interesse. In Zeitschrift für Pädagogik, 1999, 45; S. 387–406.  368 Philipp Straube, Martin Brämer, Hilde Köster<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 Aufhören oder weitermachen? Ursachen des Studienabbruchs im Fach Informatik Juliane Wegner1, Mona Arndt2  Abstract: Der Übergang von der Schule in die Hochschule gestaltet sich für Studenten der Informatik auf vielschichtige Art und Weise problematisch. Wesentliches Ziel der Studie ist die Identifikation von Herausforderungen und Spezifika des Fachbereichs Informatik in Hinblick auf Studierfähigkeit und Studienerfolg sowie die Markierung von Stellschrauben für einen höheren Studienerfolg. Erste Ergebnisse zeigen: Die Ursachen für einen Studienabbruch liegen v. a. in den Leistungsanforderungen und der zu bewältigende Stoffmenge. Keywords: Ursachen Studienabbruch, Informatikstudium, Studierfähigkeit, Belastungen, Herausforderungen 1 Vorbemerkung In Zeiten des Lehrund Fachkräftemangels steht neben der schulischen auch die akademische Bildung im Fokus – nur ein geringer Teil der Informatikstudenten erlangt einen Studienabschluss. Laut Kultusministerkonferenz sind in den kommenden Jahren in den Lehrämtern Einstellungs-bedarfe v. a. in den MINT-Fächern zu erwarten [KK18]. Aber auch in der IT-Branche gab es im vergangenen Jahr knapp 40.000 unbesetzte Stellen [AKP18]. Um dem Mangel an Lehrund Fachkräften entgegenzuwirken, muss der Anteil der Absolventen gesteigert werden. Zur Ent-wicklung entsprechender Maßnahmen und zur effizienten Nutzung von Ressourcen sind gesicherte Kenntnisse über die Ursachen und Bedingungen des Studienabbruchs notwendig [He17]. Die Förderung der Studierfähigkeit scheint essentiell. Sie beschreibt den individuellen Umgang mit Herausforderungen des Studiums auf verschiedenen Ebenen. Bereits während der Schulzeit werden hierfür erste Grundsteine gelegt (Grundkompetenzen Verstehen und Schreiben) und im Rahmen des Studiums erfolgt die Weiterentwicklung (fachspezifische Inhalte und Transfer-leistungen) [Be16]. Ein Studienabbruch ist in der Regel auf eine Vielzahl von Faktoren zurückzuführen. Studienabbrecher scheitern am häufigsten an den hohen Studienanforderungen bzw. an den fehlenden fachlichen Voraussetzungen, aber auch die mangelnde Motivation ist zentral. Der dritthäufigste Abbruchgrund ist die Orientierung auf eine praktische Tätigkeit. Vermisst wird der Praxisund Berufsfeldbezug im Studiengang. Eine Ausbildung erscheint als attraktive Alternative [He17].                                                         1 Universität Rostock, Zentrum für Lehrerbildung und Bildungsforschung, Doberaner Straße 115, 18057 Rostock, juliane.wegner@uni-rostock.de 2 Universität Rostock, Zentrum für Lehrerbildung und Bildungsforschung, Doberaner Straße 115, 18057 Rostock, mona.arndt@uni-rostock.de  cba doi:10.18420/infos2019-42Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 369 16 Juliane Wegner und Mona Arndt 2 Untersuchung und Ergebnisse Im Projektverlauf sollen die folgenden Fragen insbesondere für die Lehramtsstudenten beantwortet werden: Welche Ursachen und Bedingungen führen zum Studienabbruch? Inwieweit können aus diesen Erkenntnissen Maßnahmen abgeleitet werden, um den Studienerfolg im Fach Informatik zu erhöhen?  In der Untersuchung werden Studenten des Faches Informatik der Universität Rostock befragt. Methodisch liegt dem Projekt eine schriftliche Datenerhebung mithilfe eines standardi-sierten Fragebogens zugrunde (Paper-Pencil-Befragung). Dieser beinhaltet sowohl Fragen zur Situation vor und während des Studiums als auch zur Wahrnehmung der Anforderungen, der Lehre und des eigenen Lernund Studierverhaltens. Bisher gibt es drei Erhebungszeiträume, welche jeweils am Ende der Vorlesungszeit der einzelnen Semester liegen. Begonnen wurde im Wintersemester 2017/18 mit der Befragung der Erstsemesterstudierenden. Im Sommersemester 2018 erfolgte die zweite und im Wintersemsesters 2018/19 die dritte Erhebung. Erste Auswertungen der Ergebnisse weisen darauf hin, dass etwa zwei Drittel der Studenten zumindest teilweise Sorge hat, das Studium erfolgreich abzuschließen. Die Leistungs-anforderungen (45 %) und die Komplexität bzw. der Umfang der Lehrinhalte (44 %) wird von ihnen als stark belastend empfunden. Auch bevorstehende Prüfungen (36 %) können zur Über-forderung führen. Weiter werden fehlende Kenntnisse hinsichtlich der universitären Organisation bzw. Strukturen (41 %) und mangelnde Studienmotivation (33 %) angeführt. Es zeigt sich, dass sowohl fachliche als auch überfachliche Kompetenzen und organisatorische Bedingungen des Studiengangs Informatik von den Studenten kritisch betrachtet werden. Die Gründe für einen Studienabbruch gestalten sich auch an der Universität Rostock mannigfaltig [He17]. Maßnahmen, die zur Verbesserung der Studiensituation beitragen, werden im Moment diskutiert. Hierzu zählen u. a. die Streckung eines Moduls von einem auf zwei Semester sowie eine bessere inhaltliche Abstimmung zwischen den Modulen. Nur durch verbesserte Studienbedingungen können die Ressourcen und Potentiale nutzbar gemacht werden. Nicht nur vor dem Hintergrund der zunehmenden Digitalisierung und den daraus resultierenden Veränderungen in den Bereichen Lernen, Leben und Arbeiten steht die universitäre Informatik-Ausbildung vor großen Heraus-forderungen. 3 Literaturverzeichnis [AKP18] Anger, C.; Koppel, O.; Plünnecke, A.: MINT-Frühjahrsreport 2018. MINT – Offen-heit, Chancen, Innovationen. Köln, www.iwkoeln.de/fileadmin/user_upload/Studien/Gutachten/PDF/2018/MINT-Fr%C3%BChjahrsreport_2018neu.pdf, 07.02.2019. [Be16] Berk, I. et al.: Studierfähigkeit. Theoretische Erkenntnisse, empirische Befunde und praktische Perspektiven. Universitätskolleg-Schriften Band 15, Hamburg, 2016. [He17] Heublein, U. et al.: Zwischen Studienerwartungen und Studienwirklichkeit. Forum Hochschule, DZHW, www.dzhw.eu/pdf/pub_fh/fh-201701.pdf, 08.02.2019. [KK18] KK, Kultusministerkonferenz, Lehrereinstellungsbedarf und -angebot in der Bundesrepublik Deutschland 2018 – 2030. Zusammengefasste Modellrechnungen der Länder. www.kmk.org/fileadmin/Dateien/pdf/Statistik/Dokumentationen/Dok_216_Bericht_LEB_LEA_2018.pdf, 08.02.2019. 370 Juliane Wegner, Mona ArndtWorkshopscbaEditor (Hrsg.): INFOS 2019,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 11Informatiksysteme für den Unterricht aufbereitenMike Barkmin1, Torsten Brinda2Abstract:Dem Fach Informatik kommt eine immer größer werdende Bedeutung zu. Als Bezugswis-senschaft für die Digitalisierung kann das Fach den Schüler*innen Kompetenzen vermitteln, um dievon der Digitalisierung geprägten Welt verstehen und mitgestalten zu können. Eine wichtige Facetteim Kompetenzaufbau ist die Förderung eines übergreifenden Verständnisses von Informatiksystemen,sodass sich Schüler*innen auch unbekannte Systeme erschließen können [Ge16]. Ein Informatiksys-tem ist dabei eine Zusammenstellung von Hardware-, und Softwareund Netzwerkkomponenten.Die Herausforderung beim Erschließen von Informatiksystemen besteht darin, dass ein Großteildes Systems nicht direkt sichtbar ist und mit diesem auch nur indirekt agiert wird. Schüler*inneninteragieren in der Regel sogar nur mit der Oberﬂäche eines Informatiksystems, z.B. bei der Benutzungeiner Chat-App. Wichtige Komponenten wie der Transport einer Nachricht durch ein Netzwerk,die Verarbeitung dieser durch mehrere Server oder ihre Speicherung bleiben für Schüler*innen imVerborgenen. Eine Aufgabe von Informatikunterricht besteht darin, den Schüler*innen die nötigenKompetenzen zu vermitteln, um das Verborgene zu verstehen. Stechert [St09] beschreibt zu diesemZweck drei Kompetenzbereiche: (i) Aspekte des nach außen sichtbaren Verhaltens, (ii) Aspekteder inneren Struktur, die auf Strukturmodellen und vernetzten fundamentalen Ideen der Informatikbasieren, (iii) ausgewählte Implementierungsaspekte zur Entwicklung einer konkreten Realisierung.Im Workshop werden die Teilnehmer*innen zunächst ein Vorgehen zur Analyse von Informatiksyste-men kennen lernen. Am Beispiel des Projekts Smartlights werden sie selbst aktiv und nehmen dieRolle der Schüler*innen ein. Die Auswahl der Werkzeuge richtet sich dabei nach den Bedürfnissender Teilnehmer*innen. Anschließend wird gemeinsam über die Grenzen, Schwierigkeiten und Poten-tiale des Ansatzes diskutiert. Zum Abschluss werden dokumentierte reduzierte und rekonstruierteInformatiksysteme von Studierenden präsentiert, um den Teilnehmer*innen weitere Anregungen fürden schulischen Einsatz zu geben.Keywords:Informatiksystem; IOT; Didaktische Reduktion und RekonstruktionLiteratur[Ge16]Gesellschaft für Informatik e. V. (Hrsg.): Bildungsstandards Informatik für dieSekundarstufe II. LOG IN/183/184, Beilage zum Heft, 2016.[St09]Stechert, P.: Fachdidaktische Diskussion von Informatiksystemen und der Kompe-tenzentwicklung im Informatikunterricht. Univ.verlag Potsdam, Potsdam, 2009.1Universität Duisburg-Essen, Didaktik der Informatik,mike.barkmin@uni-due.de2Universität Duisburg-Essen, Didaktik der Informatik,torsten.brinda@uni-due.de cba doi:10.18420/infos2019-43Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 373<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 Agile Schule – Weiterentwicklung des Projektunterrichts in der Informatik und darüber hinaus (Workshop) Peter Brichzin1, Petra Kastl2 und Ralf Romeike3 Abstract: In Start-ups geht heute fast nichts mehr ohne Agile Softwareentwicklung. Auch in der Schule wird Projektunterricht dank agiler Methoden gewinnbringender und kann SchülerInnen zur Selbstorganisation anleiten. Der Workshop Agile Schule beschreibt wie [BRK19] aus der schulprak-tischen Perspektive Hintergründe und Philosophie agiler Methoden, illustriert diese an konkreten Praxisbeispielen und stellt Umsetzungshinweise in Form eines praxiserprobten „Methodenkoffers“ zur Verfügung. Erfahrungen zeigen, dass SchülerInnen in agilen Projekten erworbene Selbstorgani-sationskompetenzen auch in anderen Fächern erfolgreich einsetzen. Anliegen des Workshops ist es, für die TeilnehmerInnen das Potenzial agiler Methoden in schuli-schen Informatikprojekten konkret aufzuzeigen. So werden zu Beginn das iterative Vorgehen und typische agile Werte über ein Spiel erfahrbar gemacht. Danach werden zu ausgewählten grundle-genden agilen Praktiken jeweils der professionelle Hintergrund den Varianten schulischer Umset-zung, möglichen Stolpersteinen sowie Tipps und Tricks gegenübergestellt. Exemplarisch seien hier User-Storys genannt, die Anforderungen an eine Software aus Sicht des Kunden beschreiben. In Form von didaktischen Varianten können User-Storys auch eingesetzt werden, den Lernprozess zu strukturieren, indem diese Varianten über eine entsprechende Priorisierung in den Projektablauf ein-geflochten werden und einen entsprechenden Zeitrahmen innerhalb der Iterationsplanung erhalten. Als Varianten verwenden wir einerseits Modeling-Storys, die einen konkreten Modellierungsauftrag z. B. die Erstellung eines Klassendiagramms enthalten. Modeling-Storys können von den SchülerInnen eines Teams bei Bedarf in ihre Planung aufgenommen werden. Ebenso können sie von der Lehrkraft vorgegeben werden, um eine Reflexion über Strukturen anzustoßen. Eine weitere di-daktische Variante sind Student-Storys, die letztendlich Lernaufgaben darstellen. Der Mehrwert für den Unterricht der vorgestellten Methoden wird anhand praktischer Beispiele illustriert, sodass die TeilnehmerInnen für zukünftige Schulprojekte selbst agile Methoden auswählen und didaktisch an-passen können. Keywords: Agile Methoden, Softwareentwicklung, Pair Programming, Projektunterricht. Literaturverzeichnis [BRK19] Brichzin, P.; Kastl, P.; Romeike, R: Agile Schule, hep-Verlag, Bern 2019.                                                            1 Gymnasium Ottobrunn, Karl-Stieler-Str. 1, 85521 Ottobrunn, peter@brichzin.de 2 Gesamtschule Schenklengsfeld,  Dreienbergstraße 28-36, 36277 Schenklengsfeld, kastl@gesamtschule-schenklengsfeld.de 3 Freie Universität Berlin, Didaktik der Informatik, Königin-Luise-Str. 24-26, 14195 Berlin, ralf.romeike@fu-berlin.de cba doi:10.18420/infos2019-44<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 1InstaHub Datenbanken und Datenschutz mit einem extra für den Unterricht entwickelten sozialen Netzwerk unterrichten.Julian Dorn1 Das Internet ist ein wesentlicher  Bestandteil von Jugendlichen. Nach  der  JIM 2018verbringen diese täglich durchschnittlich 3,5 Stunden online. Obwohl Datenbanken derDatenspeicher  fast jeder Webseite sind, ist kaum ein/e SchülerIn  motiviert sich mitdiesen  zu  beschäftigen.  Nach  endlosen  Skandalen  bei  Facebook  veröffentlicheJugendliche noch immer unbekümmert intimste Informationen in sozialen Netzwerken.InstaHub ändert das! Anstelle nur von Gefahren und Funktionsweisen zu reden, lassensie sich hiermit tatsächlich erleben. Nach acht bundesweiten Workshops und über 300angemeldeten LehrerInnen ist InstaHub.org jetzt auch auf der INFOS. InstaHub.org ist ein voll funktionsfähiges soziales Netzwerk, welches sehr ähnlich derbekannten Plattform Instagram ist. Größter Unterschied ist, dass SchülerInnen hier nichteinfach  nur  Benutzer,  sondern  Administratoren  sind.  So  bietet  schon  die  Webseitedeutlich mehr Funktionen: Benutzer und Fotos können gelöscht oder verändert werdenund Details wie das Geburtsdatum eingesehen werden. Ergänzend dazu ermöglicht eineExtraseite den direkten Zugriff auf die Datenbank. Als Administrator hat der oder dieSchülerIn mithilfe einer intuitiven SQL-Eingabe und einer graphischen Abfragesprachedie volle Gewalt über sein eigenes soziales Netzwerk. InstaHub kann auf Wunsch um ein eigenes Benutzertracking und fiktive personalisierteWerbung erweitert werden. Abb. 1: Beschreibung der Abbildung1 WIssen, Leipzig, dorn@wi-wissen.de cba doi:10.18420/infos2019-45Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 375<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 1JavaScript als ideale textbasierte Programmiersprache im Unterricht anhand von ada7 differenziert und motivierend unterrichten.Julian Dorn1 JavaScript ist eine sehr gut für den Informatikunterricht geeignete Programmiersprache.Mit ihr lassen sich Programme entwickeln, welche zu Beginn motivierende Szenarienabbilden  und  später  in  Form  von  Webseiten,  Apps  oder  Spielen  direkt  derLebenswirklichkeit  der  SchülerInnen  entsprechen.  Dadurch  dass  der  Unterrichtvollständig im Browser durchgeführt werden kann, entfallen Wartungsaufwände in derSchule und alle SchülerInnen können auch zu Hause üben. Zum  Erlernen  von  JavaScript  wird  die  vom  Autor  entwickelte  und  kostenfrei  zurVerfügung stehende Plattform ada7.de vorgestellt: Abb. 1: Beschreibung der AbbildungEs wird Blended Learning als Methode zum Lehren vorgestellt, womit eine individuelleFörderung auch bei heterogenen SchülerInnengruppen möglich ist. Dadurch kann einreibungsloser  Unterricht  gestaltet  werden,  in  welchem  alle  SchülerInnen  einenmaximalen Lernerfolg erreichen können, ohne dass für Einzelne Pausen entstehen. Sowird  vermieden,  dass  SchülerInnen  sich  langweilen  und  so  der  Lernerfolg  und  dieDisziplin gestört wird. Die Lehrkraft behält dank eines Dashboards dennoch immer dieÜbersicht über den Lernfortschritt Einzelner.1 WIssen, Leipzig, dorn@wi-wissen.de cba doi:10.18420/infos2019-46Arno Pasternak (Hrsg.): Informatik für alle. INFOS 2019,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 15 „Wie funktioniert das?“ Informatische Konzepte in der Vorund Grundschule spielerisch begreifen und anwenden Anja Gärtig-Daugs1, Alexander Werner2, Ute Schmid3   Damit Kinder zu souveränen Akteuren in einer zunehmend von Digitalisierung geprägten Welt werden, bedarf es zielgerichteter Bildungsangebote [SG18]. Im Workshop werden die von der Forschungsgruppe Elementarinformatik entwickelten Lehr-Lern-Konzepte der Experimentierkiste Informatik vorgestellt, die anschließend in Kleingruppen erprobt werden können. Die Materialien der Experimentierkiste sind handlungsorientiert gestaltet und regen zum forschenden und entdeckenden Lernen an. Sie ermöglichen Kindern, sich grundlegende Funktionsprinzipien digitaler Medien zu erschließen und diese kreativ zu nutzen [SWK18].  Ausgehend vom kindlichen Interesse und der Erfahrungswelt der Kinder wurden bislang Konzepte zu folgenden Oberthemen entwickelt:  • Digitale Repräsentation (Wie stellt ein Computer Bilder dar?) mit den Lerneinheiten „Pixel“, „Analog und digital“, „TuxPaint – Bilder am Computer malen, speichern, drucken“ • Algorithmen (Was ist ein Algorithmus?) mit den Einheiten „Such-/Sortier-algorithmen“, „Algorithmen im Alltag“, „Programmieren mit ScratchJr/Scratch“ Literaturverzeichnis [SG18] Schmid, U.; Gärtig-Daugs, A.: Notwendigkeit der Integration elementarinformatischer Lerneinheiten in den Vorund Grundschulunterricht. In (Bastian, J. Hrsg.): MedienPädagogik. Zeitschrift für Theorie und Praxis der Medienbildung. Themenheft Nr. 31: Digitale Bildung Medienbezogene Bildungskonzepte für die nächste Gesellschaft, S. 78-106, 2018. [SWG18] Schmid, U.; Weitz, K.; Gärtig-Daugs, A.: (2018). Informatik in der Grundschule. Eine informatisch-pädagogische Perspektive auf informatikdidaktische Konzepte. Informatik-Spektrum 41/3, S. 200-207, 2018.                                                             1 Otto-Friedrich-Universität Bamberg, Forschungsgruppe Elementarinformatik/Kompetenzzentrum für digitales Lehren und Lernen, Luitpoldstraße 19, 96052 Bamberg, anja.gaertig-daugs@uni-bamberg.de 2 Otto-Friedrich-Universität Bamberg, Forschungsgruppe Elementarinformatik/Lehrstuhl für empirische Bildungsforschung, Markusstraße 8a, 96045 Bamberg, alexander.werner@uni-bamberg.de 3 Otto-Friedrich-Universität Bamberg, Forschungsgruppe Elementarinformatik/Professur für Angewandte Informatik, insb. Kognitive Systeme, 96045 Bamberg, ute.schmid@uni-bamberg.de cba doi:10.18420/infos2019-47Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 377cba(Hrsg.): INFOS,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 11Workshop: Internet of Things zum NachbauenLaura Hembrock1, Patrick Tschorn2, Michael Brinkmeier3Abstract:Das Lebensumfeld von Schülerinnen und Schülern wird heutzutage immer mehr vernetzt.Wo früher noch Einkaufslisten per Hand geschrieben werden mussten, kann diese Aufgabe nunAssistenten wie Alexa, Cortana und Siri überlassen werden, oder aber der Kühlschrank sendet einfachselbst ein Bild seines Inhaltes in den Supermarkt.Der Workshop „IoT zum Nachbauen“4bietet eine gute Gelegenheit ein Projekt durchzuführen, beidem die Schülerinnen und Schüler ein Beispiel für die Vernetzung von Informatiksystemen selbererfahren können.Im Laufe des Workshops soll von den Teilnehmenden Stadiontechnik für einen Tischkicker im-plementiert werden. Dazu gehören z.B. Toranzeigen für die beiden gegnerischen Teams und eineAnzeige für die verbleibende Spielzeit. Gesteuert wird die Stadiontechnik von einem Schiedsrichtermithilfe eines Tablets. Von diesem wird ein Calliope Mini mit HTTP-Requests angesteuert, derwiederum ein entsprechendes Signal per Funk an die Mikrocontroller mit den einzelnen Funktionender Stadiontechnik sendet.Der Workshop beginnt mit einer kurzen Einführung zu abbozza! und dem Calliope Mini. Währendder gesamten Zeit wird die Methode des Pair Programming verwendet.Nach der Einführung tre en sich alle Teilnehmenden, um gemeinsam die gewünschten Funktionenzu besprechen. Hier ist eine Variation von Gruppe zu Gruppe möglich, da die Teilnehmenden sehrfrei entscheiden können, was implementiert werden soll. Stehen die umzusetzenden Funktionen fest,wird mit den Teilnehmenden über die Notwendigkeit eines Kommunikationsprotokolls diskutiert. ImAnschluss an die Diskussion wird mit den Teilnehmenden ein Kommunikationsprotokoll entwickelt unddie einzelnen Funktionen der Stadiontechnik auf die Programmier-Teams aufgeteilt. Ein Team bekommtdabei die Aufgabe den Master-Calliope, welcher die HTTP-Requests empfängt, zu programmierenund ein weiteres soll die App für das Tablet des Schiedsrichters mit dem MIT App-Inventor erstellen.Während die Programmier-Teams nach der Besprechung in die Implementierung ihrer Funktionenstarten, bekommt das App-Team zuerst eine Einweisung in die Arbeit mit dem App-Inventor. Sind alleTeams mit ihren Aufgaben fertig, wird die Stadiontechnik mit einem Spiel am Tischkicker getestet.Keywords:Internet of Things; Calliope Mini; graphische Programmierung; Mittelstufe; K-12education1Universität Osnabrück, Institut für Informatik, Wachsbleiche 27, 49090 Osnabrücklhembrock@uos.deDie Autorin wird im Rahmen des PhyCoS-Projektes von der Stiftung Stahlwerk Georgsmarienhütte, der Stiftungder Sparkassen im Landkreis Osnabrück und der Stiftung der Sparkasse Osnabrück gefördert.2Universität Osnabrück, Institut für Informatik, Wachsbleiche 27, 49090 Osnabrückpatschorn@uos.de3Universität Osnabrück, Institut für Informatik, Wachsbleiche 27, 49090 Osnabrückmbrinkmeier@uos.de4Die Materialien sind unterhttps://tinyurl.com/workshopuoszu ﬁnden. cba doi:10.18420/infos2019-48<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 Quadrologik – Modularisierung von Schaltnetzen und Schaltwerken Tobias Jördens1, Jens Gallenbacher2  Abstract: Aufbauend auf dem von uns auf der INFOS2017 vorgestellten System Quadrologik wurde ein Programmiergerät entwickelt, mit dem Schaltnetze und Schaltwerke modularisiert werden können.  Der Grundgedanke für die hier vorgestellte Erweiterung von Quadrologik ist, dass durch Legen erstellte (und als solche getestete) Schaltungen von einem Programmiergerät erfasst werden, um diese dann in ein Logikmodul zu übertragen. Dieses Logikmodul simuliert die gelegte Schaltung und kann von da an in weiteren Schaltungen genutzt werden. Auf diese Weise können auch mehrere identische Module generiert werden, um zum Beispiel komplexere Schaltungen zu realisieren. Im Workshop wird dieses Verfahren vorgestellt und anhand von Beispielen die Möglichkeiten und didaktischen Ideen zur Modularisierung dargestellt. Da die Modularisierungstiefe von Schaltwerken im momentanen Modell noch endlich ist, wollen wir im Workshop über die didaktischen Möglichkeiten und Notwendigkeiten diskutieren. Keywords: Modularisierung, Modellbildung, Technische Informatik, Digitaltechnik, Logikgatter, Logikstecksystem, Logische Schaltungen, Rechnertechnik                                                             1 Schuldorf Bergstraße und Technische Universität Darmstadt, Didaktik der Informatik, Hochschulstraße 10, 64289 Darmstadt, tj@di.tu-darmstadt.de 2 Technische Universität Darmstadt, Didaktik der Informatik, Hochschulstraße 10, 64289 Darmstadt, jg@di.tu-darmstadt.de cba doi:10.18420/infos2019-49Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 379<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 Mehr als Programmieren lernen einen Mikrocontroller-Roboter zum Leben erwecken Zweitägiges Workshopkonzept zur Mädchenförderung mit dem B-O-B-3 Andrea Langer1, Nadine Bergner2 und Ulrik Schroeder1  Abstract: Da die Informatik auch 2019 weit von der gewünschten Frauenquote entfernt ist, bedarf es innovativer Ideen und neuartiger Zugänge, um Mädchen an die Informatik und insbesondere an die Programmierung heranzuführen. Im Rahmen des seit 2008 laufenden Mädchenförderprojektes go4IT!3 der RWTH Aachen wurde ein bereits etablierter Robotik-Workshop mit Lego Mindstorms durch ein Workshop-Programm mit dem Roboter B-O-B-3 ergänzt. Aufbauend auf den Erfahrungen aus über 250 go4IT! [Le15] wurde ein Workshop zum Informatikeinstieg konzipiert, der Themen wie Aufbau eines Informatiksystems, Sensorik und Binärsystem ebenso behandelt wie den Einstieg in die Algorithmik und Programmierung. Durchgeführt wird der neue B-O-B-3-Workshop (wie auch der bisherige Mindstorms-Workshop) mit 12-14 Mädchen der Klassenstufe 6 bis 8 an zwei aufeinanderfolgenden Tagen direkt in den Schulen, um die Einstiegshürde für die Mädchen möglichst gering zu halten. Geleitet werden die Workshops von zwei (hilfs-)wissenschaftlichen Mitarbeiterinnen aus dem MINT-Bereich, die gleichzeitig als Role Models dienen. Das neue Mädchenförderkonzept hat dabei drei besondere Stärken: (1) Die Montage des Roboters durch die Mädchen geschieht mittels Löten der einzelnen Komponenten auf die vorgefertigte Platine, was im Gegensatz zum eher spielerisch wirkenden Aufbau eines Lego Mindstorms ein hohes Maß an Professionalität bewirkt. (2) Durch den kompetenzorientierten Wechsel der Programmiersprachen von der grafischen Sprache Ardublockly zur textuellen Programmierung mittels Arduino gelingt die Kombination aus weichem Einstieg für Novizinnen und dem professionellen Endergebnis. (3) Die Identifikation mit dem Informatiksystem des B-O-B-3 und die Nachhaltigkeit der einmaligen Maßnahme werden durch den Übergang der Roboter in den Besitz der Mädchen verstärkt. Das neue Workshop-Konzept wurde bisher mit 8 Gruppen an verschiedenen Schulen in NRW erprobt. Das Feedback der Mädchen am Ende der Workshops war durchweg gut und nach ihrer eigenen Einschätzung eine Fortführung der Programmierung sehr wahrscheinlich. Insbesondere positiv erwähnt wurde dabei die Löterfahrung und die Durchführung als genderspezifische Maßnahme. Trotz und vielleicht auch gerade wegen einiger Schwierigkeiten und Hürden beim Umstieg auf die textuelle Programmierung, sehen die Mädchen die Bewältigung derselben meist als persönliches Erfolgserlebnis und als durchaus positive Erfahrung. Literaturverzeichnis [Le15] Leonhardt, T.: Etablierung eines begabungsfördernden Lernumfeldes für Mädchen im Bereich der Informatik. RWTH Aachen, Aachen, 2015.                                                            1 RWTH Aachen, Lehrund Forschungsgebiet Informatik 9, Ahornstr. 55, 52074 Aachen, a.langer@informatik.rwth-aachen.de bzw. schroeder@informatik.rwth-aachen.de 2 TU Dresden, Professur für Didaktik der Informatik, Nöthnitzer Str. 46, 01187 Dresden, nadine.bergner@tu-dresden.de 3 http://www.schuelerlabor.informatik.rwth-aachen.de/go4it cba doi:10.18420/infos2019-50cbaA. Pasternak (Hrsg.): Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 11Über Lottofeen zu (mehr) ComputernerdsUndoing Gender im Informatikunterricht durch eine selbstreﬂektierte Konfrontationmit geschlechtsspeziﬁschen StereotypisierungenKris Markussen, Kirsten Alich, Jana Gerdes, Mareike Daeglau, Nils Pancratz, Ira Diethelm1Extended Abstract:Lehrende in der Informatik werden trotz aller Aufgeschlossenheit ggü. Gender-und Diversity-Themen von der in diesem Fachbereich präsenten männlich konnotierten Fachkultur,unreﬂektierten Machtverhältnissen, fachspeziﬁschen Verhaltensmustern und vorherrschenden ge-schlechtsspeziﬁschen Normenund Wertesystemen beeinﬂusst. Diese inhärenten gesellschaftlichenStrukturen erschweren eine gleichberechtigte Teilhabe aller Geschlechter am Informatikunterricht.Eine weitere Rolle spielen die in der jeweiligen Fachkultur herrschenden (männlichen) Selbstverständ-nisse und die im Sinne des „Doing Gender“ hergestellten Geschlechterordnungen. Bath fordert indiesem Kontext eine Auseinandersetzung nicht nur mit Frauen in MINT, sondern v. a. mit GenderStudies in MINT im Sinne der „Gender Science“. Sie schlägt u. a. eine „Reﬂektion des eigenen Anteilsan binären Geschlechterkonstruktionen“ [Ba15, 111] in MINT vor. An dieser Stelle setzen wir mitunserem Workshop an. Mit dem an das Identitätenlotto2angelehnten Spiel soll unter Berücksichtigungder Vorerfahrungen der Teilnehmenden zunächst ein Perspektivwechsel vollzogen werden. Anhandexpl. Fallbeispiele werden wir Perspektiven anderer Identitäten betrachten und uns mit eigenenVorurteilen, Zuschreibungen und Handlungsmustern konfrontieren und unser Unterrichtsverhaltenreﬂektieren. Dazu werden im Workshop folgende Fragen in Bezug auf die betrachteten Identitäten ge-stellt: Welches genderspeziﬁsche Selbstverständnis herrscht in der Fachkultur der Informatik? WelcheExpert*innen repräsentieren auf welcher Grundlage die Fachkultur und welche Einund Ausschlüssesind damit verbunden? Wie werden Hierarchien, Gleichberechtigung und Teilhabe gestaltet? WelcheMitgestaltungsmöglichkeiten haben Lernende? Aus dieser Reﬂexion sollen anschließend konstruktiveLösungsansätze entwickelt werden, die in einem gendersensitiven Informatikunterricht angewandtwerden können.Keywords:Gendersensitiver Informatikunterricht; Diversität; reﬂexives unterrichtliches HandelnAnmerkung:Dieser Workshop wurde im Rahmen des Projektssmile(www.smile-smart-it.de), dasvom BMBF unter den Förderkennzeichen 01FP1611 bis 01FP1615 gefördert wird, konzipiert.Literatur:[Ba15]Bath, C.: Sensibilisierung von Lehrenden, aber wofür? Von „Frauen in MINT“ zu „GenderStudies in MINT“. In (Augustin-Dittmann, S.; Gotzmann, H., Hrsg.): MINT gewinntSchülerinnen. Erfolgsfaktoren von Schülerinnen-Projekten in MINT. VS, Wiesbaden, S.111–126, 2015.1Universität Oldenburg, Didaktik der Informatik, Uhlhornsweg 84, 26129 Oldenburg, vorname.nachname@uol.de2BeimIdentitätenlotto(©spielecht Spieleverlag & Juliette Wedl, www.identitaetenlotto.de) handelt es sich um einLehr-/Lernspiel, das die geschlechtliche Vielfalt und damit verbundene Diskriminierung und Mobbing aufzeigt. cba doi:10.18420/infos2019-51Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 381<Vorname Nachname [et. al.]>(Hrsg.): < Buchtitel>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <Jahr> 15 Pair Programming im Klassenraum Eine Digital Game-based Methode für die Sekundarstufe I Maximilian Marowsky1, Paul Ohm2, Julian Dierker3   Abstract: PearUp ist eine digitale Lernplattform, die im Rahmen eines Studierendenprojekts der Universität Osnabrück entwickelt wird. Die Lernplattform unterstützt Informatiklehrer dabei und befähigt fachfremde Lehrkräfte dazu, qualitativ hochwertigen Informatikunterricht anbieten zu können, um Schülern der Sekundarstufe I spielerisch die Grundlagen der Informatik zu vermitteln. Der Ansatz der Lernplattform PearUp ist der des Digital Game-Based Learning: Im Rahmen einer Spielhandlung gründen Schüler in Zweiergruppen ein virtuelles IT-Start-Up, das sich auf das Lösen gegenwartsnaher Informatikaufgaben spezialisiert hat. Die Aufgaben werden in Form von Aufträgen verschiedener Firmen im Bereich der Jobbörse angeboten. Anhand dieser realitätsnahen Aufträge lernen die Schüler die Grundlagen des Programmierens kennen und erleben zugleich, wie aufregend und vielseitig die Arbeitswelt der Informatik sein kann. Erledigte Aufträge generieren virtuelle Einnahmen wie Geld, Erfahrungspunkte und Auszeichnungen. Mit steigender Kompetenz und Stufe erhöht sich die Anzahl der verfügbaren Aufträge sowie die Möglichkeiten das eigene Startup zu personalisieren, indem z.B. Arbeitsplatz und -ort frei gewählt werden können. Das erwirtschaftete Geld hingegen kann in verschiedene Upgrades investiert werden, um weitere Spielmechaniken freizuschalten, wie Werbung zu schalten, mit Auftraggebern verhandeln oder kollaborative Großaufträge mit anderen Kleingruppen bearbeiten zu können. PearUp setzt dabei auf die Arbeitsmethode des Pair Programming, bei der zwei Schüler zusammen am selben Endgerät arbeiten, um eine höhere Qualität zu erreichen. Der Name der Lernplattform spiegelt also den Kerngedanken des Projekts wider, dass gemeinsames Programmieren sowohl Freude bereitet als auch effektiv und lehrreich ist. Die Lehrkraft behält dabei stets den Überblick über all ihre Klassen und deren Gruppen, kann Aufgabenpakete auswählen oder flexibel zusammenstellen, direkt oder indirekt Hilfestellung leisten und sowohl die Leistungen jeder Gruppe als auch die individuellen Leistungen der einzelnen Schüler nachverfolgen und den Lernprozess so gezielt lenken. Unterstützt wird sie dabei von modernen Algorithmen der Learning Analytics. Das erste Aufgabenpaket “Einstieg in die Algorithmik” kann bereits ausführlich getestet werden. Weitere Aufgabenpakete zu den Themen „Datensicherheit“, „Objektorientiertes Programmieren“ und „Maschinelles Lernen“ befinden sich derzeit im Rahmen von Abschlussarbeiten an der Universität Osnabrück in Entwicklung. Zusätzlich soll die Funktionalität um ein Aufgabenerstellungs-Tool erweitert werden, das Lehrkräften eine Entwicklungsumgebung bietet, mit der sie, ihren Wünschen entsprechend, Aufgaben erstellen können.                                                         1 Universität Witten/Herdecke, Psychologie, Martinistr. 46, 49078 Osnabrück, Maximilian.Marowsky@uni-wh.de 2 Universität Osnabrück, Lehramt, Martinistr. 46, 49078 Osnabrück, pohm@uos.de 3 Universität Osnabrück, Lehramt, Ernst-Sievers-Straße 76a, 49078 Osnabrück, jdierker@uos.de  cba doi:10.18420/infos2019-52cbaHerausgeber et al. (Hrsg.): INFOS,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 11Workshop: Maschinelles Lernen UnpluggedElisaweta Ossovski1, Michael Brinkmeier2Abstract:Künstliche Intelligenz, bei der Maschinelles Lernen als Grundtechnik eine wichtigeRolle spielt, wird immer häuﬁger in den Medien thematisiert und bewertet, ohne auf die konkreteFunktionsweise einzugehen. Dadurch kann gerade bei Schülerinnen und Schülern ein falschesBild davon entstehen. Der bereits mit einigen Gruppen erprobte Workshop3„Maschinelles LernenUnplugged“ stellt dabei einen ersten Versuch dar, wie Schülerinnen und Schülern das TeilgebietMaschinelles Lernen mit einem Unplugged-Konzept näher gebracht werden kann.Im Anschluss an einen kurzen theoretischen Impuls, der eine Motivation für die handlungsorientiertePhase gibt, sollen die Teilnehmenden mithilfe einer Pinnwand, Pinnnadeln sowie einer Holzleisteeine lernende Maschine entwickeln, die zwei Arten von Schrauben klassiﬁzieren kann. Dabei fällt zurDatengenerierung eine zu klassiﬁzierende Schraube zufällig auf eine bewegliche Platte und wird vonoben fotograﬁert. Auf diesem Bild wird eine Bounding Box bestimmt und die Maße dieses Rechtecksstellen mit dem jeweils größeren Wert als erste Vektorkomponente und dem jeweils kleineren Wert alszweite Vektorkomponente die Daten dar.Beim Lernprozess werden 20 zufällige Datenkarten aus dem Datensatz einzeln auf der Pinnwandmarkiert und die Holzleiste entsprechend in Richtung des eingefügten Punktes bewegt, wobeidie Holzleiste, die zu Beginn an einem Punkt an der x-Achse ﬁxiert wurde, um eine immergeringere Distanz gedreht wird. Dies entspricht der graphischen Repräsentation eines Perzeptrons,wobei das Lernverfahren zugunsten der Handhabbarkeit vereinfacht wurde. Danach präsentierendie Teilnehmenden jeweils den anderen Gruppen kurz ihr Ergebnis. Bei der Vorstellung sollendiese auch ihre Gedanken während des Durchführens erläutern und die Fragen beantworten, welcheÜberlegungen zur Wahl der initialen Gerade geführt haben und ob sie eine Fortsetzung des Verfahrensfür sinnvoll halten. Die Intention dabei ist die Erkenntnis der Vorteile eines Rechners, um Präzisiongewährleisten und auch kleine Veränderungen sinnvoll durchführen zu können. Diese Eigenschaftenkann die handlungsorientierte Darstellung nicht erfüllen, da eine Bewegung der Holzleiste um wenigeMillimeter keine bedeutenden Ergebnisse hervorrufen würde. Die unterschiedlichen Ergebnisse derGruppen können gegebenenfalls durch weitere auf Bildern dokumentierte Ergebnisse ergänzt und zumAnlass genommen werden, um die Auswirkungen verschiedener Parameter wie die Wahl der initialenGerade sowie die Auswahl und Anzahl der Datenkarten zu diskutieren. Den Abschluss des Workshopsbildet eine Diskussion über weitere Fälle wie andere Größenverhältnisse der Schraubenarten, nichtlinear separable Daten sowie die Möglichkeiten mehr als nur zwei Arten zu klassiﬁzieren.Keywords:Maschinelles Lernen; Linearer Klassiﬁzierer; Unplugged; Oberstufe; K-12 education1Universität Osnabrück, Institut für Informatik, Wachsbleiche 27, 49090 Osnabrück,eossovski@uni-osnabrueck.deDie Autorin wird im Rahmen eines Promotionsstipendiums vom Ernst Ludwig Ehrlich Studienwerk gefördert.2Universität Osnabrück, Institut für Informatik, Wachsbleiche 27, 49090 Osnabrück,mbrinkmeier@uni-osnabrueck.de3Die Materialien sind unterhttps://tinyurl.com/workshopuoszu ﬁnden. cba doi:10.18420/infos2019-53Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 383<First name last name [et. al.]>(ed.): < book title>,  Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <year>    15 Wie gelingt eine obligatorische Weiterbildung für tausende von Lehrpersonen der Volksschule? Ein Erfahrungsbericht mit erlebbaren Praxisteilen aus dem Grundlagenkurs Medien und Informatik. Tobias M. Schifferle1, Eike Rösch1, Peter Suter1 Keywords: Lehrplan, Informatikdidaktik, Grundschule, Volksschule, Ausbildung, Weiterbildung. 2017 wurden mit dem «Lehrplan 21» Informatik und Medienbildung als obligatorische Inhalte in der Volksschule der deutschsprachigen Kantone der Schweiz verankert. Seitdem werden die Themen ab dem Kindergarten integriert und ab der 5. Klasse als eigenständiges Fach «Medien und Informatik» mit einer Wochenstunde unterrichtet. Damit Lehrerinnen und Lehrer das Fach im Kanton Zürich unterrichten dürfen, müssen sie in ihrer unterrichtsfreien Zeit eine 90-stündige Weiterbildung, den Grundlagenkurs Medien und Informatik» (GMI), an der Pädagogischen Hochschule Zürich besuchen. Bis 2021 werden gut 3’000 Lehrpersonen, getrennt nach Niveau Primaroder Sekundarschule, den GMI absolvieren. Nach Abschluss des ersten Kursjahres wurde evaluiert, wie bereit sich die Lehrpersonen nach dem GMI fühlen, das neue Fach zu unterrichten. Mit n=273 Antwortenden (70% weiblich) betrug die Rücklaufquote 50%. Davon sind 91% der Lehrpersonen (75% davon stark und sehr stark) der Meinung, der GMI habe ihr Interesse, das Fach zu unterrichten, geweckt. 91% trauen sich nach dem Besuch des GMI zu, das Fach Medien und Informatik angemessen zu unterrichten. Knapp die Hälfte der Befragten wünscht sich zurzeit keine zusätzliche Weiterbildung. 39% der Lehrpersonen möchten eine Weiterbildung in 1-2 Jahren, während je 13% entweder gar keine oder möglichst schnell weitere Weiterbildungen wünschen. Wenn Weiterbildungen gewünscht werden, dann sollen sie für eine Mehrheit (88%) kürzer als 8 Stunden sein. Die Resultate der Befragung zeigen, dass das Ziel des GMI, die Lehrpersonen in dieser ersten Phase der Einführung des Faches unterrichtsfähig zu machen, erreicht worden ist. Im Workshop wird berichtet, wie es gelungen ist, diese sehr grosse, heterogene und beim Kursstart meist informatik-unerfahrene Gruppe von Volksschullehrpersonen für den Informatikunterricht zu motivieren und ihnen das nötige Start-Know-How und Vertrauen in die Informatik und -didaktik zu vermitteln. Die Workshopteilnehmenden erleben Activities aus der Weiterbildung und erhalten zusammen mit Hintergrundinformationen zu Aufbau und Didaktik ein Bild dieser handlungsorientierten Weiterbildung, welches anschliessend mit den Teilnehmenden diskutiert wird.                                                         1 Pädagogische Hochschule Zürich, Zentrum Medienbildung und Informatik, Lagerstrasse 2, Zürich, 8090, {tobias.schifferle, eike.roesch, peter.suter}@phzh.ch  cba doi:10.18420/infos2019-54cbaArno Pasternak et al. (Hrsg.): INFOS 2019 Informatik für alle,Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 1Maschinelles Lernen im Unterricht mit Jupyter NotebookMichael Schlichtig, Simone Opel, Carsten Schulte1, Rolf Biehler, Daniel Frischemeier,Susanne Podworny, Thomas Wassong2Keywords:Data Science; Machine Learning; KI; Künstliche Neuronale Netze; Entscheidungsbäume;Decision Trees; Big Data; Workshop; Maschinelles Lernen; Artiﬁcial Neural Networks; Python;Jupyter NotebookData Science und Big Data durchdringt in ihren diversen Facetten unser tägliches Leben– kaum ein Tag, an dem nicht verschiedene Meldungen über technische Innovationen,Einsatzmöglichkeiten von Künstlicher Intelligenz (KI) und Maschinelles Lernen (ML) undihre ethischen sowie gesellschaftlichen Implikationen in den unterschiedlichen Mediendiskutiert werden. Aus diesem Grund erscheint es uns immens wichtig, diese Fragestellungenund Technologien auch in den Unterricht der Sekundarstufe II zu integrieren.Um diesem Anspruch gerecht zu werden, entwickelten wir im Rahmen eines Forschungs-projekts ein Curriculum, welches wir als konkretes Unterrichtskonzept innerhalb einesProjektkurses erprobt, evaluiert weiterentwickelt wird. Bei der Implementierung entschiedenwir uns, zur aktiven Umsetzung von Konzepten von ML als Plattform Jupyter Notebook mitPython zu verwenden, da diese Umgebung durch die Verbindung von Code und Hypertextzur Dokumentation und Erklärung Medienbrüche im Lernprozess verringern kann. Zudemist Python zur Implementierung der Methoden von ML sehr gut geeignet.Im Themenfeld des ML als Teilgebiet der KI legen wir den Fokus auf zwei unterschiedli-che Lernverfahren um verschieden Aspekte von ML, u.A. wie Nachvollziehbarkeit untergesellschaftlichen Gesichtspunkten zu vermitteln. Diese sindKünstliche Neuronale Netze(bei denen die Berechnung und Bedeutung der Kantengewichte zwischen den Neuronen fürden Menschen insbesondere bei komplexeren Netzen kaum nachvollziehbar erschienen)undEntscheidungsbäume(strukturierte und gerichtete Bäume zur Darstellung von Ent-scheidungsregeln, welche auch für Schülerinnen und Schüler meist gut nachvollziehbaresund verständliches KI-Modell darstellen). In diesem Workshop stellen wir konkrete Umset-zungsbeispiele inklusive der Programmierung für beide Verfahren mit Jupyter Notebookund Python als Teil einer Unterrichtssequenz vor und diskutieren diese.1Universität Paderborn, Didaktik der Informatik, Fürstenallee 11, 33102 Paderborn, michael.schlichtig@uni-paderborn.de, simone.opel@uni-paderborn.de, carsten.schulte@uni-paderborn.de2Universität Paderborn, Didaktik der Mathematik, Warburger Str. 100, 33098 Paderborn, biehler@math.uni-paderborn.de, dafr@math.uni-paderborn.de, podworny@math.uni-paderborn.de, wassong@math.uni-paderborn.de cba doi:10.18420/infos2019-55Arno Pasternak (Hrsg.): Informatik für alle, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn 2019 385<First name last name [et. al.]>(ed.): < book title>, Lecture Notes in Informatics (LNI), Gesellschaft für Informatik, Bonn <year>    15Künstliche Intelligenz im Informatikunterricht der Sek II –Unterrichtsmodul “Lernende Algorithmen”Pascal Schmidt1, Stefan Strobel2 Abstract: Der Workshop zeigt einen unterrichtspraktischen Weg auf, wie in das Thema “LernendeAlgorithmen” am Beispiel von Entscheidungsbäumen im Informatikunterricht der Sekundarstufe IIeingeführt werden kann.Keywords: Entscheidungsbäume, allgemeinbildender Informatikunterricht, Sekundarstufe II.  InhaltsüberblickIm unplugged-Teil werden der Ablauf der Klassifikation nachvollzogen und von Hand(unterschiedliche) Entscheidungsbäume konstruiert [Er08]. Die Mehrdeutigkeit dieserKonstruktion leitet schrittweise zu einer rekursiven Baumerzeugung über, bei der eingieriger  Algorithmus  zur  Attributauswahl  und  der  gewichtete  Gini-Index  alsAttributauswahlmaß genutzt werden [BV08], [BK98].Im  plugged-Teil  besteht  die  Möglichkeit,  anhand  bereitgestellter  Codevorlagen  dieMethode  zur  Baumerzeugung  zu  implementieren.  Zudem  kann  der  Einfluss  vonDatenduplikaten  bzw.  widersprüchlichen  Daten  untersucht  und  der  Algorithmusweiterentwickelt werden. Anhand von Beispielen kann zudem Einsicht in die Grenzender gierigen Attributauswahl gewonnen werden [LS19]. Literatur[BV08]Bankhofer, U.; Vogel, J.: Datenanalyse und Statistik. Gabler-Verlag, Wiesbaden, 2008.[BK98]Borgelt,  C.;  Kruse,  R.:  Attributauswahlmaße  für  die  Induktion  vonEntscheidungsbäumen: Ein Überblick. In: Data Mining: Theoretische Aspekte undAnwendungen. Physica-Verlag, Heidelberg, S. 77-98, 1998. [Er08]Ertel,  W.:  Grundkurs  Künstliche  Intelligenz:  Eine  praxisorientierte  Einführung.Vieweg-Verlag, Wiesbaden, 2008. [LS19]Lambert, A.; Schmidt, P.: Algorithmen im Mathematikund Informatikunterricht. In:Der Mathematikunterricht, Heft 65(4). Friedrich-Verlag, Seelze, 2019. 1 Universität des Saarlandes, Campus, Geb. E 2 4, 66123 Saarbrücken, pascal.schmidt@uni-saarland.de2 Gymnasium am Rotenbühl, Neugrabenweg 66, 66123 Saarbrücken, stefan-strobel@posteo.eucba doi:10.18420/infos2019-56Autorenverzeichnis A Alich, Kirsten, 381 Arndt, Mona, 369 B Barkmin, Mike, 373 Baum, Kevin, 49 Berges, Marc, 161 Bergner, Nadine, 380 Best, Alexander, 59,237 Biehler, Rolf, 285,385 Borowski, Christian, 237 Brämer, Martin, 367 Brichzin, Peter, 374 Brinda, Torsten, 25,373 Brinkmeier, Michael, 378,383 Brüggen, Niels, 25 C Capovilla, Dino, 35 Chytas, Christos, 295 D Daeglau, Mareike, 295,381 Dierker, Julian, 382 Diethelm, Ira, 23,25,69,295,347, 381 Dorn, Julian, 375,376 E Ehmann, Matthias, 161 Engbring, Dieter, 171 F Fandrich, Anatolij, 295 Freudenberg, Rita, 237Fricke, Martin, 237 Frischemeier, Daniel, 285,385 G Gall, Rainer, 161 Gallenbacher, Jens, 221,379 Gärtig-Daugs, Anja, 377 Geldreich, Katharina, 181 Gerdes, Jana, 381 Glücks, Sebastian, 69 Göbel, Lisa, 191 Gräßl, Christoph, 361 Greubel, André, 161 Gumpert, Andrea, 201 Günzel-Weinkamm, Nicole, 161 H Hacke, Alexander, 79 Haller, Verena, 161 Haselmeier, Kathrin, 89,99,237 Hausner, Niko, 109 Hellmig, Lutz, 191 Hembrock, Laura, 378 Hennecke, Martin, 161 Hermida, Martin, 231 Herper, Henry, 237 Heuer, Ute, 161 Hielscher, Michael, 211 Hildebrandt, Claudia, 363 Hinz, Volkmar, 237 Hochthurn, Tamara, 221 Honegger, Beat Döbeli, 231 Hubwieser, Peter, 181 Humbert, Ludger, 99,119,237J Jördens, Tobias, 379 K Kaczmarek, Oliver, 21 Kapp, Florian, 247 Kastl, Petra, 374 Killich, Klaus, 99 Kirsch, Nadine, 49 Klinge, Niklas, 351 Knaus, Thomas, 25 Koch, Andreas, 257 Kommer, Sven, 25 Kopf, Christine, 25 Köster, Hilde, 367 Kronawitter, Julia, 161 L Langer, Andrea, 380 Leschke, Rainer, 25 Lindner, Annabel, 161,325 Losch, Daniel, 119 M Magenheim, Johannes, 139 Markussen, Kris, 381 Marowsky, Maximilian, 382 Matzner, Matthias, 363 Meier, Urs, 265 Michaeli, Tilman, 129 Micheuz, Peter, 275,365 Missomelius, Petra, 25 Mittag, Alexander, 257 Modrow, Eckart, 335 Müller, Dorothee, 99,237 Müller, Kathrin, 139 O Ohm, Paul, 382Opel, Simone, 285,385 Ossovski, Elisaweta, 383 P Pancratz, Nils, 295,347,381 Petrenko, Ilona, 149 Podworny, Susanne, 285,385 Pöhner, Nicolai, 161 Przybylla, Mareen, 79 R Reese, Kerstin, 49 Romeike, Ralf, 129,325,374 Rösch, Eike, 384 S Schi erle, Tobias M., 384 Schlichtig, Michael, 285,385 Schmalfeldt, Thomas, 305 Schmid, Regina, 231 Schmid, Ute, 377 Schmidt, Ann-Katrin, 315 Schmidt, Pascal, 49,386 Schroeder, Ulrik, 380 Schulte, Carsten, 139,247,285,315, 385 Schwill, Andreas, 79,237 Seegerer, Stefan, 325 Straube, Philipp, 367 Strecker, Kerstin, 335 Strobel, Stefan, 386 Suter, Peter, 384 T Talbot, Mike, 181 Thomas, Marco, 149,237,351 Tilemann, Friederike, 25 Tschorn, Patrick, 378W Wachter, Lukas, 49 Wagenknecht, Christian, 211 Waldvogel, Bettina, 355 Wassong, Thomas, 285,385 Wegner, Juliane, 369 Weich, Andreas, 25Wendlandt, Katharina, 109 Wendlandt, Matthias, 109 Werner, Alexander, 377 Wolf, Verena, 49 Z Zaugg, Pascal, 201